issue_id,issue_no,title,body
739951293,11392,b'Enable Reverse Proxy and On Setup generate client keys',"b""The entire configuration could be made VASTLY more simple, especially for environments like kubernetes etc. if we could simply have RavenDb recognize that it is actually running in https by having it recognize reverse proxy headers being passed in (asp.net core allows this in your startup.cs) and then have it simply be open or use a temporary admin password you set in the config for the first load to gain access.  \r\n\r\nThen once you're in, you can generate client certificates directly in the UI.\r\n\r\nThe current approach is WAY too complex and prone to errors. I need to configure this on 3 test environments and it's just a massive PITA as it stands right now."""
739948213,11391,b'No browser prompts to choose client certificate',"b'I have ravendb behind haproxy on kubernetes configured per the instructions with a cert that was way too hard to configure.\r\n\r\nI\'ve loaded the pfx into my Personal store in Windows.\r\n\r\nWhen I got to the website I get an auth error saying that the server requires a client certificate for authentication but none was provided by the client. Looking up this error it says restart the browser. I\'ve restarted every browser and NONE including Internet Explorer prompt for a certificate when going to the site.\r\n\r\nThe certificate was generated using your ""generate-server-cert.ps1"" script if it matters.\r\n\r\nHow do I get this fixed so that it works properly?'"
739912038,11390,b'Add support for Certificates by Key + Crt',"b""The reason why is that if you're using cert-manager in Kubernetes it generates a crt and key file in a secret (tls.crt and tls.key within the secret). It would be really nice to be able to use the cert that is linked up automatically from this cert.\r\n\r\nAnd more so, it would be really nice to have it automatically update when those values change.\r\n\r\nI still don't have it working from the instructions for Azure Kubernetes because of certificate issues, and I've been at it for hours because this is WAY too complex as it stands right now."""
729251570,11314,b'Setting license on Embedded Instance does not appear to work',"b'We are trying to specify a license on an embedded instance by setting either `License` or `License.Path` like this:\r\n\r\n```csharp\r\nvar options = new ServerOptions\r\n{\r\n  AcceptEula = true,\r\n  DataDirectory = @""..."",\r\n  LogsDirectory = @""...""\r\n};\r\n\r\noptions.CommandLineArgs.Add(""--License.Path=C:\\Temp\\RavenLicense.json"");\r\n// OR\r\noptions.CommandLineArgs.Add(""--License={licenseText}"");\r\n\r\nEmbeddedServer.Instance.StartServer(options);\r\n```\r\n\r\nNeither of these works as expected. The server claims to be unlicensed.\r\n\r\nI grabbed a copy of the repo and added `--License.Path=C:\\Temp\\RavenLicense.json` to the debug arguments. I can confirm that the value is being picked up from the command line arguments and written to the [config object](https://github.com/ravendb/ravendb/blob/v5.0/src/Raven.Server/Config/Categories/LicenseConfiguration.cs#L22). It gets read back [during the folder permissions check](https://github.com/ravendb/ravendb/blob/v5.0/src/Raven.Server/Config/RavenConfiguration.cs#L386) but never again.'"
723155145,11264,b'Switch to System.Text.Json for .NET 5?',"b""Now that .NET 5 has a passable replacement for Newtonsoft.Json and is MUCH faster, is there a plan to switch?\r\n\r\nThe reason I ask is that I'm doing a blockchain that needs to hash the data of the row (plus timestamp, and previous hash of course).  My worry is that if RavenDb changes later, and the structure of the json changes because of this, the hashes won't be able to be validated directly with the data in the future.\r\n\r\nThanks!"""
722538041,11261,b'The database is currently locked because of Checking if we need to recreate index.',"b""Calling this with V5:\r\n\r\nstore.Maintenance.Server.Send(new CreateDatabaseOperation(new DatabaseRecord(dbName)));\r\n\r\nBegets this error:\r\n\r\nRaven.Client.Exceptions.Database.DatabaseDisabledException: 'Raven.Client.Exceptions.Database.DatabaseDisabledException: The database Test03484b96-d12f-480e-88df-295729c3de9f is currently locked because Checking if we need to recreate indexes\r\n   at Raven.Server.Documents.DatabasesLandlord.UnloadAndLockDatabase(String dbName, String reason) in C:\\Builds\\RavenDB-Stable-5.0\\50011\\src\\Raven.Server\\Documents\\DatabasesLandlord.cs:line 884\r\n   at Raven.Server.Web.System.AdminDatabasesHandler.Put() in C:\\Builds\\RavenDB-Stable-5.0\\50011\\src\\Raven.Server\\Web\\System\\AdminDatabasesHandler.cs:line 356\r\n   at Raven.Server.Routing.RequestRouter.HandlePath(RequestHandlerContext reqCtx) in C:\\Builds\\RavenDB-Stable-5.0\\50011\\src\\Raven.Server\\Routing\\RequestRouter.cs:line 196\r\n   at Raven.Server.RavenServerStartup.RequestHandler(HttpContext context) in C:\\Builds\\RavenDB-Stable-5.0\\50011\\src\\Raven.Server\\RavenServerStartup.cs:line 243\r\nThe server at /admin/databases?name=Test03484b96-d12f-480e-88df-295729c3de9f&replicationFactor=1&raft-request-id=c0e7dc18-7230-42fe-b437-a46c7c2c1ac2 responded with status code: ServiceUnavailable.'\r\n"""
715794225,11208,b'Possible memory leak',"b'Hello,\r\nWhen i used ravendbclient 4.2.106 and previous i have a lot of jsondocumentbuilder\r\n\r\n[BasicDirectFacade.txt](https://github.com/ravendb/ravendb/files/5334926/BasicDirectFacade.txt)\r\n[DocumentStoreHolder.txt](https://github.com/ravendb/ravendb/files/5334927/DocumentStoreHolder.txt)\r\n\r\n![image](https://user-images.githubusercontent.com/72458422/95222375-b5e68780-07f8-11eb-8078-372781ceb456.png)\r\n\r\nPlease help me !'"
701665068,11112,b'[3.5] BulkIngestion fails with `SynchronizationLockException`',"b'Besides getting #11108 we are also running into `SynchronizationLockException` with bulk ingestion. Something seems to be off with bulk ingestion potentially not freeing up system resources fast enough. \r\n\r\n```\r\nSystem.Threading.SynchronizationLockException: Could not get the PUT serial lock in (un)reasonable timeframe, aborting operation\r\n   at Raven.Database.Impl.PutSerialLock.Lock()\r\n   at Raven.Database.DocumentDatabase.Batch(IList`1 commands, CancellationToken token)\r\n   at Raven.Database.Server.Controllers.DocumentsBatchController.<BulkPost>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Threading.Tasks.TaskHelpersExtensions.<CastToObject>d__1`1.MoveNext()\r\n```'"
700943907,11108,b'[3.5] Could not get token for bulk insert on BulkInsert even with anonymous access',b'One of our clients is getting\r\n\r\n```\r\nException:\r\nCould not get token for bulk insert\r\nStackTrace:\r\n   at Raven.Client.Document.RemoteBulkInsertOperation.<StartBulkInsertAsync>d__23.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Document.RemoteBulkInsertOperation.<DisposeAsync>d__45.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Document.ChunkedRemoteBulkInsertOperation.<DisposeAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at ServiceControl.Audit.Auditing.AuditPersister.<Persist>d__2.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at ServiceControl.Audit.Auditing.AuditIngestionComponent.<<-ctor>b__8_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NServiceBus.Transport.RabbitMQ.MessagePump.<Process>d__29.MoveNext()\r\nSource:\r\nRaven.Client.Lightweight\r\nTargetSite:\r\nVoid MoveNext()\r\nA task was canceled.\r\nData :System.Collections.DictionaryEntry\r\nStackTrace:\r\n   at Raven.Client.Connection.Implementation.HttpJsonRequest.<>c__DisplayClass36_0.<<SendRequestInternal>b__0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Connection.Implementation.HttpJsonRequest.<RunWithAuthRetry>d__38`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Connection.Implementation.HttpJsonRequest.<ReadResponseJsonAsync>d__35.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Document.RemoteBulkInsertOperation.<GetAuthToken>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Document.RemoteBulkInsertOperation.<GetToken>d__25.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Document.RemoteBulkInsertOperation.<StartBulkInsertAsync>d__23.MoveNext()\r\nSource:\r\nRaven.Client.Lightweight\r\nTargetSite:\r\nVoid MoveNext()\r\nA task was canceled.\r\nStackTrace:\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Raven.Client.Connection.Implementation.HttpJsonRequest.<>c__DisplayClass36_0.<<SendRequestInternal>b__0>d.MoveNext()\r\nSource:\r\nmscorlib\r\nTargetSite:\r\nVoid ThrowForNonSuccess(System.Threading.Tasks.Task)\r\n```\r\n\r\nwhich seems to indicate that the GetToken call did fail\r\n\r\nhttps://github.com/ravendb/ravendb/blob/v3.5/Raven.Client.Lightweight/Document/RemoteBulkInsertOperation.cs#L119\r\n\r\n\r\nbut we are using Anonymous access. Why should this fail?\r\n\r\n'
688118055,11064,b'OnAfterConversationToEntity not called for the same session where it was registered',"b'Hi,\r\n\r\nNot sure the described behavior is expected. Please can you check.\r\n\r\nSubscribing to `OnAfterConversationToEntity` using the Session object:`session.Advanced.DocumentStore.OnAfterConversionToEntity`  does not fire the event listener for that session.\r\n\r\nThe event listener does get executed for the next session created.\r\n\r\n**Test**\r\n\r\nListener1 is registered directly on the `store` object.\r\nListener2 is registered by using `session.Advanced`.\r\n```\r\n    public class RavenDbTest : RavenTestDriver\r\n    {\r\n        private readonly ITestOutputHelper _output;\r\n\r\n        public RavenDbTest(ITestOutputHelper output)\r\n        {\r\n            _output = output;\r\n        }\r\n\r\n        [Fact]\r\n        public async Task ShouldCallEventListeners()\r\n        {\r\n            var listenerOneCalled = 0;\r\n            var listenerTwoCalled = 0;\r\n\r\n            IDocumentStore store = GetDocumentStore();\r\n\r\n            // Register listener 1\r\n            store.OnAfterConversionToEntity += (sender, args) =>\r\n            {\r\n                _output.WriteLine(""incrementing listenerOne"");\r\n                listenerOneCalled += 1;\r\n            };\r\n\r\n            // Insert data\r\n            {\r\n                IAsyncDocumentSession session = store.OpenAsyncSession();\r\n                await session.StoreAsync(new Entity(""bob"", ""bob""));\r\n                await session.SaveChangesAsync();\r\n            }\r\n\r\n            // FIRST LOAD\r\n            {\r\n                IAsyncDocumentSession session = store.OpenAsyncSession();\r\n\r\n                // Register listener 2\r\n                session.Advanced.DocumentStore.OnAfterConversionToEntity += (sender, args) =>\r\n                {\r\n                    _output.WriteLine(""incrementing listenerTwo"");\r\n                    listenerTwoCalled += 1;\r\n                };\r\n\r\n                _output.WriteLine(""Executing 1st LoadAsync()"");\r\n                Entity entity = await session.LoadAsync<Entity>(""bob"");\r\n                entity.Id.Should().Be(""bob"");\r\n            }\r\n\r\n            // SECOND LOAD\r\n            {\r\n                IAsyncDocumentSession session = store.OpenAsyncSession();\r\n\r\n                _output.WriteLine(""Executing 2nd LoadAsync()"");\r\n                Entity entity = await session.LoadAsync<Entity>(""bob"");\r\n                entity.Id.Should().Be(""bob"");\r\n            }\r\n\r\n            listenerOneCalled.Should().Be(2, ""we made 2 calls to LoadAsync()"");\r\n            listenerTwoCalled.Should().Be(2, ""we made 2 calls to LoadAsync()"");\r\n        }\r\n\r\n        public class Entity\r\n        {\r\n            public Entity(string id, string name)\r\n            {\r\n                Id = id;\r\n                Name = name;\r\n            }\r\n\r\n            private Entity()\r\n            {\r\n            }\r\n\r\n            public string Id { get; }\r\n\r\n            public string Name { get; }\r\n        }\r\n    }\r\n```\r\n\r\n**Output**\r\n\r\n```\r\nExecuting 1st LoadAsync()\r\nincrementing listenerOne\r\nExecuting 2nd LoadAsync()\r\nincrementing listenerOne\r\nincrementing listenerTwo\r\n```'"
687910770,11062,b'Document Session OnBeforeQuery fails when e.QueryCustomization dynamic cast',"b'Hi,\r\n\r\nSubscribing to the Document Session event OnBeforeQuery and doing a dynamic cast of `e.QueryCustomization` fails with the exception:\r\n\r\n```Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot implicitly convert type \'void\' to \'object\'```\r\n\r\nThe same code works when subscribing to the OnBeforeQuery Document Store event.\r\n\r\nCode in question:\r\n```\r\nsession.Advanced.OnBeforeQuery += (sender, e) =>\r\n{\r\n      dynamic query = e.QueryCustomization;\r\n      query.AndAlso().WhereEquals(""Foo"", ""Bar"");\r\n};\r\n```\r\n\r\n**Test**\r\n\r\n```\r\n    public class RavenDbOnBeforeQueryTest : RavenTestDriver\r\n    {\r\n        [Fact]\r\n        public async Task ShouldNotThrowWhenSubscribingToDocumentSessionEventOnBeforeQuery()\r\n        {\r\n            IDocumentStore store = GetDocumentStore();\r\n            IAsyncDocumentSession session = store.OpenAsyncSession();\r\n\r\n            session.Advanced.OnBeforeQuery += (sender, e) =>\r\n            {\r\n                dynamic query = e.QueryCustomization;\r\n                query.AndAlso().WhereEquals(""Foo"", ""Bar"");\r\n            };\r\n\r\n            List<Entity> result = await session.Query<Entity>()\r\n                .Where(entity => entity.Name == ""val"")\r\n                .ToListAsync();\r\n        }\r\n\r\n        [Fact]\r\n        public async Task ShouldNotThrowWhenSubscribingToDocumentStoreEventOnBeforeQuery()\r\n        {\r\n            IDocumentStore store = GetDocumentStore();\r\n            IAsyncDocumentSession session = store.OpenAsyncSession();\r\n\r\n            store.OnBeforeQuery += (sender, e) =>\r\n            {\r\n                dynamic query = e.QueryCustomization;\r\n                query.AndAlso().WhereEquals(""Foo"", ""Bar"");\r\n            };\r\n\r\n            List<Entity> result = await session.Query<Entity>()\r\n                .Where(entity => entity.Name == ""val"")\r\n                .ToListAsync();\r\n        }\r\n\r\n        public class Entity\r\n        {\r\n            public string Id { get; set; }\r\n\r\n            public string Foo { get; set; }\r\n\r\n            public string Name { get; set; }\r\n        }\r\n    }\r\n```'"
687316876,11060,b'Lucene.Net.dll signature problems',"b'We are considering porting our company application from RavenDB 3.5 to RavenDB 5.\r\n\r\nOur application actually runs on .net framework 4.7.2 and while testing our application we bumped into this same sign error on Lucene.Net.dll referenced by RavenDB.\r\nhttps://stackoverflow.com/questions/21763822/how-to-disable-strong-name-verification-for-all-net-assembly \r\n\r\nWe are using RavenDB-5.0.2-windows-x64 with its Lucene.Net.dll included (3.0.32.0).\r\n\r\nI\'ve just pushed https://github.com/gitfer/MyWebApplication472 where you could reproduce our problem (which is not an implementation problem I think).\r\n\r\nI\'ve managed to have my webapp working by putting\r\n\r\n ` <system.web>`\r\n`<hostingEnvironment shadowCopyBinAssemblies=""false"" />`\r\n  `</system.web>`\r\n\r\nbut I think that\'s just a signing problem that should be fixed on Raven-side.\r\n\r\n'"
678639666,11004,b'[RavenDB 3.5.10-patch-35295 and higher] Non-modified index raises InvalidOperationException: Cannot modify indexes',"b'We are running into\r\n\r\n> System.InvalidOperationException: Cannot modify indexes while indexing is in progress (already waited full minute). Try again later\r\n\r\neven though the index hasn\'t changed. We have been able to track it down to the following commit\r\n\r\nhttps://github.com/ravendb/ravendb/commit/b21ce6492e4deef8633641ec93e784040ef6a841#diff-248ebf22af1910601a7a3a507c9d0c8a\r\n\r\nour index looks like\r\n\r\n```\r\n    public class MessagesViewIndex : AbstractIndexCreationTask<ProcessedMessage, MessagesViewIndex.SortAndFilterOptions>\r\n    {\r\n        public MessagesViewIndex()\r\n        {\r\n            Map = messages => from message in messages\r\n                select new SortAndFilterOptions\r\n                {\r\n                    MessageId = (string)message.MessageMetadata[""MessageId""],\r\n                    MessageType = (string)message.MessageMetadata[""MessageType""],\r\n                    IsSystemMessage = (bool)message.MessageMetadata[""IsSystemMessage""],\r\n                    Status = (bool)message.MessageMetadata[""IsRetried""] ? MessageStatus.ResolvedSuccessfully : MessageStatus.Successful,\r\n                    TimeSent = (DateTime)message.MessageMetadata[""TimeSent""],\r\n                    ProcessedAt = message.ProcessedAt,\r\n                    ReceivingEndpointName = ((EndpointDetails)message.MessageMetadata[""ReceivingEndpoint""]).Name,\r\n                    CriticalTime = (TimeSpan?)message.MessageMetadata[""CriticalTime""],\r\n                    ProcessingTime = (TimeSpan?)message.MessageMetadata[""ProcessingTime""],\r\n                    DeliveryTime = (TimeSpan?)message.MessageMetadata[""DeliveryTime""],\r\n                    Query = message.MessageMetadata.Select(_ => _.Value.ToString()).Union(new[] {string.Join("" "", message.Headers.Select(x => x.Value))}).ToArray(),\r\n                    ConversationId = (string)message.MessageMetadata[""ConversationId""]\r\n                };\r\n\r\n            Index(x => x.Query, FieldIndexing.Analyzed);\r\n\r\n            Analyze(x => x.Query, typeof(StandardAnalyzer).AssemblyQualifiedName);\r\n\r\n            DisableInMemoryIndexing = true;\r\n        }\r\n```\r\n\r\n```\r\nfrom message in docs.ProcessedMessages\r\nselect new {\r\n\tMessageId = ((string)message.MessageMetadata[""MessageId""]),\r\n\tMessageType = ((string)message.MessageMetadata[""MessageType""]),\r\n\tIsSystemMessage = ((bool)message.MessageMetadata[""IsSystemMessage""]),\r\n\tStatus = ((bool)message.MessageMetadata[""IsRetried""]) ? 4 : 3,\r\n\tTimeSent = ((DateTime)message.MessageMetadata[""TimeSent""]),\r\n\tProcessedAt = message.ProcessedAt,\r\n\tReceivingEndpointName = ((message.MessageMetadata[""ReceivingEndpoint""])).Name,\r\n\tCriticalTime = ((TimeSpan?)message.MessageMetadata[""CriticalTime""]),\r\n\tProcessingTime = ((TimeSpan?)message.MessageMetadata[""ProcessingTime""]),\r\n\tDeliveryTime = ((TimeSpan?)message.MessageMetadata[""DeliveryTime""]),\r\n\tQuery = DynamicEnumerable.ToArray(DynamicEnumerable.Union(message.MessageMetadata.Select(_ => _.Value.ToString()), new string[] {\r\n\t\tString.Join("" "", message.Headers.Select(x => x.Value))\r\n\t})),\r\n\tConversationId = ((string)message.MessageMetadata[""ConversationId""])\r\n}\r\n```\r\n\r\nand yes it is always this index and only that one (the only one that contains `ToArray()`)\r\n\r\n![image](https://user-images.githubusercontent.com/174258/90170704-b6d2de00-dda0-11ea-9d9d-5722034d801a.png)\r\n\r\nas soon as we downgrade to RavenDB 3.5.10-patch-35294 the problem goes away. We are going to need to stop updating to the latest updates of the 3.5 versions for now until this issue is resolved.\r\n\r\n## Exception\r\n\r\n```\r\n2020-08-12 07:43:03.5509|14|Warn|Raven.Client.Connection.Async.AsyncServerClient|Was unable to fetch topology from primary node http://localhost also there is no cached topology\r\n2020-08-12 07:44:03.8485|37|Warn|Raven.Database.DocumentDatabase|Could not create index batch\r\nSystem.InvalidOperationException: Cannot modify indexes while indexing is in progress (already waited full minute). Try again later\r\n   at Raven.Database.Storage.IndexDefinitionStorage.TryRemoveIndexContext()\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(IndexDefinition instance, Boolean removeByNameMapping, Boolean clearErrors, Boolean removeIndexReplaceDocument, Boolean isSideBySideReplacement, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(String name, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.PutIndexInternal(String name, IndexDefinition definition, Boolean disableIndexBeforePut, Boolean isUpdateBySideSide, Nullable`1 creationOptions, Boolean isReplication)\r\n   at Raven.Database.Actions.IndexActions.PutIndexes(IndexToAdd[] indexesToAdd, Boolean isReplication)\r\n2020-08-12 07:45:03.9962|13|Error|Raven.Database.Server.Controllers.RavenBaseApiController|Cannot create index.\r\nSystem.InvalidOperationException: Cannot modify indexes while indexing is in progress (already waited full minute). Try again later\r\n   at Raven.Database.Storage.IndexDefinitionStorage.TryRemoveIndexContext()\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(IndexDefinition instance, Boolean removeByNameMapping, Boolean clearErrors, Boolean removeIndexReplaceDocument, Boolean isSideBySideReplacement, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(String name, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.PutIndexInternal(String name, IndexDefinition definition, Boolean disableIndexBeforePut, Boolean isUpdateBySideSide, Nullable`1 creationOptions, Boolean isReplication)\r\n   at Raven.Database.Actions.IndexActions.PutIndex(String name, IndexDefinition definition, Boolean isReplication)\r\n   at Raven.Database.Server.Controllers.IndexController.<IndexPut>d__5.MoveNext()\r\n2020-08-12 07:45:04.0682|29|Error|Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool|Error occured while executing RavenThreadPool task ; Database name:  ; Task queued at: 8/12/2020 7:45:04 AM ; Task Description: Mapping index Raven/DocumentsByEntityName from etag 01000000-0000-0003-0000-000000009F64 to etag 01000000-0000-0003-0000-00000000AF64 range 1024 to 2047 of 4096\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__7.MoveNext()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__8.MoveNext()\r\n   at Raven.Database.Indexing.SimpleIndex.<>c__DisplayClass7_1.<IndexDocuments>b__8(IEnumerator`1 partition)\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.<>c__DisplayClass38_0`1.<ExecuteBatch>b__0()\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.RunThreadTask(ThreadTask threadTask)\r\n2020-08-12 07:45:04.0682|23|Error|Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool|Error occured while executing RavenThreadPool task ; Database name:  ; Task queued at: 8/12/2020 7:45:04 AM ; Task Description: Mapping index Raven/DocumentsByEntityName from etag 01000000-0000-0003-0000-000000009F64 to etag 01000000-0000-0003-0000-00000000AF64 range 0 to 1023 of 4096\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__7.MoveNext()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__8.MoveNext()\r\n   at Raven.Database.Indexing.SimpleIndex.<>c__DisplayClass7_1.<IndexDocuments>b__8(IEnumerator`1 partition)\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.<>c__DisplayClass38_0`1.<ExecuteBatch>b__0()\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.RunThreadTask(ThreadTask threadTask)\r\n2020-08-12 07:45:04.0682|38|Error|Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool|Error occured while executing RavenThreadPool task ; Database name:  ; Task queued at: 08/12/2020 07:45:04 ; Task Description: Mapping index Raven/DocumentsByEntityName from etag 01000000-0000-0003-0000-000000009F64 to etag 01000000-0000-0003-0000-00000000AF64 range 2048 to 3071 of 4096\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__7.MoveNext()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__8.MoveNext()\r\n   at Raven.Database.Indexing.SimpleIndex.<>c__DisplayClass7_1.<IndexDocuments>b__8(IEnumerator`1 partition)\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.<>c__DisplayClass38_0`1.<ExecuteBatch>b__0()\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.RunThreadTask(ThreadTask threadTask)\r\n2020-08-12 07:45:04.0682|25|Error|Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool|Error occured while executing RavenThreadPool task ; Database name:  ; Task queued at: 8/12/2020 7:45:04 AM ; Task Description: Mapping index Raven/DocumentsByEntityName from etag 01000000-0000-0003-0000-000000009F64 to etag 01000000-0000-0003-0000-00000000AF64 range 3072 to 4095 of 4096\r\nSystem.OperationCanceledException: The operation was canceled.\r\n   at System.Threading.CancellationToken.ThrowOperationCanceledException()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__7.MoveNext()\r\n   at Raven.Database.Indexing.RobustEnumerator.<RobustEnumeration>d__8.MoveNext()\r\n   at Raven.Database.Indexing.SimpleIndex.<>c__DisplayClass7_1.<IndexDocuments>b__8(IEnumerator`1 partition)\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.<>c__DisplayClass38_0`1.<ExecuteBatch>b__0()\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.RunThreadTask(ThreadTask threadTask)\r\n2020-08-12 07:45:04.0832|1|Warn|Raven.Database.Prefetching.PrefetchingBehavior|WASTE: Discarding future work item without using it, to reduce memory usage\r\n2020-08-12 07:45:04.0832|38|Error|Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool|Error occured while executing RavenThreadPool task ; Database name:  ; Task queued at: 8/12/2020 7:45:04 AM ; Task Description: Performing indexing on index batches for a total of 2 indexes range 1 to 1 of 2\r\nSystem.AggregateException: One or more errors occurred. ---> System.AggregateException: One or more errors occurred. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Raven.Database.Prefetching.PrefetchingBehavior.<>c__DisplayClass97_0.<AddFutureBatch>b__2(Task`1 t)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Raven.Database.Prefetching.PrefetchingBehavior.<>c__DisplayClass113_0.<UpdateAutoThrottler>b__0(FutureIndexBatch x)\r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.Sum(IEnumerable`1 source)\r\n   at Raven.Database.Prefetching.PrefetchingBehavior.UpdateAutoThrottler(List`1 jsonDocs, TimeSpan indexingDuration, Boolean skipIncreasingBatchSize)\r\n   at Raven.Database.Indexing.IndexingExecuter.ReleasePrefetchersAndUpdateStatistics(IndexingGroup indexingGroup, TimeSpan elapsedTimeSpan)\r\n   at Raven.Database.Indexing.IndexingExecuter.<>c__DisplayClass19_1.<ExecuteIndexingWork>b__5(IndexingGroup x)\r\n   at Raven.Database.Indexing.IndexingExecuter.IndexingGroup.SignalIndexingComplete()\r\n   at Raven.Database.Indexing.IndexingExecuter.IndexingBatchForIndex.SignalIndexingComplete()\r\n   at Raven.Database.Indexing.IndexingExecuter.HandleIndexingFor(IndexingBatchForIndex batchForIndex, Etag lastEtag, DateTime lastModified, CancellationToken token)\r\n   at Raven.Database.Indexing.IndexingExecuter.<PerformIndexingOnIndexBatches>b__25_0(IndexingBatchOperation indexBatchOperation)\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.<>c__DisplayClass41_1`1.<ExecuteBatch>b__0()\r\n   at Raven.Database.Impl.BackgroundTaskExecuter.RavenThreadPool.RunThreadTask(ThreadTask threadTask)\r\n---> (Inner Exception #0) System.AggregateException: One or more errors occurred. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Raven.Database.Prefetching.PrefetchingBehavior.<>c__DisplayClass97_0.<AddFutureBatch>b__2(Task`1 t)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n---> (Inner Exception #0) System.Threading.Tasks.TaskCanceledException: A task was canceled.<---\r\n<---\r\n2020-08-12 07:59:01.8993|38|Error|Raven.Database.DocumentDatabase|Index \'6-(Unknown Name)\' removed because it is not found or invalid\r\n2020-08-12 07:59:03.0802|16|Warn|Raven.Client.Connection.Async.AsyncServerClient|Was unable to fetch topology from primary node http://localhost also there is no cached topology\r\n2020-08-12 08:00:03.3755|16|Warn|Raven.Database.DocumentDatabase|Could not create index batch\r\nSystem.InvalidOperationException: Cannot modify indexes while indexing is in progress (already waited full minute). Try again later\r\n   at Raven.Database.Storage.IndexDefinitionStorage.TryRemoveIndexContext()\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(IndexDefinition instance, Boolean removeByNameMapping, Boolean clearErrors, Boolean removeIndexReplaceDocument, Boolean isSideBySideReplacement, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(String name, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.PutIndexInternal(String name, IndexDefinition definition, Boolean disableIndexBeforePut, Boolean isUpdateBySideSide, Nullable`1 creationOptions, Boolean isReplication)\r\n   at Raven.Database.Actions.IndexActions.PutIndexes(IndexToAdd[] indexesToAdd, Boolean isReplication)\r\n2020-08-12 08:01:03.5204|18|Error|Raven.Database.Server.Controllers.RavenBaseApiController|Cannot create index.\r\nSystem.InvalidOperationException: Cannot modify indexes while indexing is in progress (already waited full minute). Try again later\r\n   at Raven.Database.Storage.IndexDefinitionStorage.TryRemoveIndexContext()\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(IndexDefinition instance, Boolean removeByNameMapping, Boolean clearErrors, Boolean removeIndexReplaceDocument, Boolean isSideBySideReplacement, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.DeleteIndex(String name, Nullable`1 deletedIndexVersion)\r\n   at Raven.Database.Actions.IndexActions.PutIndexInternal(String name, IndexDefinition definition, Boolean disableIndexBeforePut, Boolean isUpdateBySideSide, Nullable`1 creationOptions, Boolean isReplication)\r\n   at Raven.Database.Actions.IndexActions.PutIndex(String name, IndexDefinition definition, Boolean isReplication)\r\n   at Raven.Database.Server.Controllers.IndexController.<IndexPut>d__5.MoveNext()\r\n```'"
664498394,10922,b'Ravendb.Client ssl connection',"b'Hi guys, I\'m facing a SSL connection problem and couldn\'t try to figure this out, any hint or tip would be great.\r\n\r\nRaven is exposed behind a https with a self signed certificate and a client certificate is needed to gain authenticated access.\r\nI\'m working with dotnet core 3.1 in a Manjaro.\r\n\r\nI got the SSL cert this way:\r\n```\r\nopenssl s_client -showcerts -verify 5 -connect raven_domain:443 < /dev/null\r\n```\r\n\r\nCopied the BEGIN/END part, trusted in my local CA store and tried a simples curl connection pointing to /studio/index.html.\r\nMy curl returns `{""Type"":""InvalidAuth"",""Message"":""This server requires client certificate for authentication, but none was provided by the client.""}`\r\nThat\'s expected, the auth client certificate is not being passed anyway, so OK.\r\n\r\nAfter some search about store trusting on dotnet core 3.1, found that now, for using Libcurl back, I should use these configs:\r\n```csharp\r\nAppContext.SetSwitch(""System.Net.Http.UseSocketsHttpHandler"", false);\r\n```\r\nThen, tried to initialize my store and get statistics:\r\n```csharp\r\nvar clientCertificate = new X509Certificate2(""mycert.pfx"");\r\nvar database = ""MyDatabase"";\r\n\r\nusing (var store = new DocumentStore()\r\n{\r\n    Certificate = clientCertificate,\r\n    Database = database,\r\n    Urls = new[] {""https://raven_domain/""}\r\n}.Initialize())\r\n{\r\n    store.Maintenance.ForDatabase(database).Send(new GetStatisticsOperation());\r\n}\r\n```\r\n\r\nAfter that, got the following stacktrace:\r\n```\r\nUnhandled exception. System.AggregateException: Failed to retrieve database topology from all known nodes.\r\nhttps://raven_domain -> An error occurred while sending the request. -> SSL peer certificate or SSH remote key was not OK (An error occurred while sending the request.)\r\n ---> System.Net.Http.HttpRequestException: An error occurred while sending the request.\r\n ---> System.Net.Http.CurlException: SSL peer certificate or SSH remote key was not OK\r\n   at System.Net.Http.CurlHandler.ThrowIfCURLEError(CURLcode error)\r\n   at System.Net.Http.CurlHandler.MultiAgent.FinishRequest(StrongToWeakReference`1 easyWrapper, CURLcode messageResult)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Raven.Client.Http.RequestExecutor.SendAsync[TResult](ServerNode chosenNode, RavenCommand`1 command, SessionInfo sessionInfo, HttpRequestMessage request, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 1093\r\n   at Raven.Client.Http.RequestExecutor.SendRequestToServer[TResult](ServerNode chosenNode, Nullable`1 nodeIndex, JsonOperationContext context, RavenCommand`1 command, Boolean shouldRetry, SessionInfo sessionInfo, HttpRequestMessage request, String url, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 1037\r\n   at Raven.Client.Http.RequestExecutor.SendRequestToServer[TResult](ServerNode chosenNode, Nullable`1 nodeIndex, JsonOperationContext context, RavenCommand`1 command, Boolean shouldRetry, SessionInfo sessionInfo, HttpRequestMessage request, String url, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 1060\r\n   at Raven.Client.Http.RequestExecutor.ExecuteAsync[TResult](ServerNode chosenNode, Nullable`1 nodeIndex, JsonOperationContext context, RavenCommand`1 command, Boolean shouldRetry, SessionInfo sessionInfo, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 892\r\n   at Raven.Client.Http.RequestExecutor.UpdateTopologyAsync(UpdateTopologyParameters parameters) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 511\r\n   at Raven.Client.Http.RequestExecutor.FirstTopologyUpdate(String[] initialUrls, Nullable`1 applicationIdentifier) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 728\r\n   --- End of inner exception stack trace ---\r\n   at Raven.Client.Http.RequestExecutor.ThrowExceptions(List`1 list) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 804\r\n   at Raven.Client.Http.RequestExecutor.FirstTopologyUpdate(String[] initialUrls, Nullable`1 applicationIdentifier) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 781\r\n   at Raven.Client.Http.RequestExecutor.WaitForTopologyUpdate(Task topologyUpdate) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 658\r\n   at Raven.Client.Http.RequestExecutor.UnlikelyExecuteAsync[TResult](RavenCommand`1 command, JsonOperationContext context, Task topologyUpdate, SessionInfo sessionInfo, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Http\\RequestExecutor.cs:line 628\r\n   at Raven.Client.Documents.Operations.MaintenanceOperationExecutor.SendAsync[TResult](IMaintenanceOperation`1 operation, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Documents\\Operations\\MaintenanceOperationExecutor.cs:line 62\r\n   at Raven.Client.Util.AsyncHelpers.RunSync[T](Func`1 task) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Util\\AsyncHelpers.cs:line 133\r\n   at Raven.Client.Documents.Operations.MaintenanceOperationExecutor.Send[TResult](IMaintenanceOperation`1 operation) in C:\\Builds\\RavenDB-Stable-4.2\\42046\\src\\Raven.Client\\Documents\\Operations\\MaintenanceOperationExecutor.cs:line 43\r\n   at AppPlayground.Program.Main(String[] args) in /home/lucasbertin/Projetos/OSS/dotnet-raven-certificates/AppPlayground/Program.cs:line 76\r\n```\r\n\r\nI got this thing working after add a custom RemoteCertificateValidationCallback and looking for my cert thumbprint, this looks a little bit hacky:\r\n```csharp\r\nRequestExecutor.RemoteCertificateValidationCallback += (message, cert, chain, sslPolicyErrors) => \r\n{\r\n    if (sslPolicyErrors == SslPolicyErrors.None ||\r\n        cert.GetCertHashString() == ""MY_THUMB_HERE"") return true;\r\n\r\n    return false;\r\n};\r\n```\r\n\r\nAny help would be really appreciated, don\'t know how to get this working without this manual check process.\r\n\r\nThanks :)'"
648393886,10776,b'FYI - ASP.NET Core Libuv transport being obsoleted',"b'Hi\r\n\r\nI noticed that RavenDB has an option to use the Libuv transport from ASP.NET Core.\r\n\r\nI just wanted to give you a heads up that ASP.NET Core plans to obsolete the Libuv transport in .NET 5.0, and remove it in .NET 6\r\n\r\nSee https://github.com/aspnet/Announcements/issues/424 for details.'"
642561400,10714,b'RavenDb.Embedded Microsoft.AspnetCore.App dependency',"b""Hi All,\r\n\r\nWe are using RavenDb.Embedded for our tests and we love it, but we have an issue running the tests on the agent. Our docker setup uses the major and minor version of the dotnet core runtime, currently, 3.1 and it will pull the latest patch available, currently 5. Your package has a hardcoded dependency on Microsoft.AspnetCore.App version (currently 3.1.4) and if there is a new patch on dotnet core the test setup gets broken. Are there any plans to relax that dependency? We can use the exact version of the runtime, including the patch in docker, but that's harder to maintain and it will cause other issues. """
606731362,10486,"b""ApplyDeleteCommands for default collection doesn't work well with scripts using a filter on document properties""","b'I\'m using a transform script in which I filter documents I want to load into another database based on certain conditions.\r\n\r\nFor example I use this script to ETL documents only when the property SiteStatus is equal to ""Running"":\r\n\r\n```\r\nif (this.SiteStatus === ""Running"")\r\n{\r\n loadToPortals(this);\r\n}\r\n```\r\nThis is working fine whenever the SiteStatus switches to ""Running"". The document is loaded to the other database. But when the SiteStatus changes from ""Running"" to ""Stopped"", nothing happens. There is no DELETE triggered.\r\n\r\nThis problem only occurs when using the default collection. This is caused by the if ""operation == OperationType.Delete"" condition on line 477 of RavenEtlDocumentTransformer.\r\n\r\nhttps://github.com/ravendb/ravendb/blob/d2eb93144de2dd955737a04f460c55504d789c9f/src/Raven.Server/Documents/ETL/Providers/Raven/RavenEtlDocumentTransformer.cs#L477\r\n\r\nBecause the ApplyDeleteCommands method is called with OperationType.Put it will not delete the document when loading documents to te default collection.\r\n\r\nIsn\'t this a bug?'"
585657675,10365,"b""Consider supporting an alternate format for HiLo IDs that does not use '/'""","b""In our last projects with RavenDB, we had issues with HiLo IDs when transmitting them in HTTP URLs. The projects were all structured as a distributed system with a Web API implemented in ASP.NET Core MVC and a React SPA client (which is quite a common scenario I would guess).\r\n\r\nWe had the following issues:\r\n\r\n- as the default HiLo IDs contain a slash '/', e.g. `users/115-A`, the developer needed to use the JS `encodeURIComponent` function before sending an HTTP Request so that every slash is URL-encoded to `%2F`.\r\n- On the backend, we had to manually call `WebUtility.UrlDecode` to tranform the HiLo ID into its proper format for querying RavenDB (this is only necessary if the ID was part of the sub path of the URL - query parameters were automatically transformed by ASP.NET Core MVC).\r\n- Our developers often forgot to apply this pattern in new client views / Web APIs, so this kind of developed to defect that we observed several times in different locations in our code base.\r\n- In projects where we used an Apache Proxy Server in front of our Web API service, the server immediately responded with an HTTP 404 to URLs that contained an escaped slash (`%2F`). We had to specifically disable this blocking feature.\r\n\r\n**Thus, I sugggest we should make HiLo IDs more web-friendly so that these issues do not occur in future projects that incorporate RavenDB.** The HiLo algorithm should support another format that does not use slashes and that users can opt into. I would simply replace the slash '/' with a dash '-', e.g. `organizations-500-A`. I don't think this is a breaking change as RavenDB sees IDs as just strings (and the HiLo algorithm calculates the next ID based on a document with a specific ID).\r\n\r\nI'm looking forward to your opinion on this matter.\r\n\r\n"""
559433458,10141,b'ramdisk issue',"b'https://github.com/ravendb/ravendb/blob/9b5313689310f4938c0c2f9a4385e9fad2708cfe/src/Sparrow.Server/LowMemory/CheckPageFileOnHdd.cs#L421\r\n\r\nGoing by comments in https://askubuntu.com/questions/703576/fdisk-l-shows-16-ram-disks-dev-ram0-ram15\r\n\r\nWhat seems to have changed is that the kernel did not used to list ramdisks in /proc/partitions, but now does\r\n\r\nso the hashset result of https://github.com/ravendb/ravendb/blob/9b5313689310f4938c0c2f9a4385e9fad2708cfe/src/Sparrow.Server/Platform/Posix/KernelVirtualFileSystemUtils.cs#L158\r\n\r\ncontains ""ram"" (ram0..ram15 -> remove digit -> remove duplicates) and this is not a valid sys/block but gets invoked in https://github.com/ravendb/ravendb/blob/9b5313689310f4938c0c2f9a4385e9fad2708cfe/src/Sparrow.Server/LowMemory/CheckPageFileOnHdd.cs#L421\r\n\r\nIt is strange that this issue was not present earlier. Maybe it\'s to do with kernel changes related to showing ramdisks in /proc/partitions'"
553036145,10091,b'Unable to start server on Mac OS Catalina',"b'MacOS: 10.15.2\r\n\r\nThe gatekeeper blocks it.\r\n\r\n1. Download latest MacOS package\r\n2. Run ./run.sh\r\n\r\nError:\r\n`""Raven.Server"" cannot be opened because the developer cannot be verified.`\r\n\r\nTried to allow it specifically, but it then prompts me for all others `dylib`.\r\n'"
548123228,10044,b'Exception when disabled session tracking',"b""When we turned off tracking of a session, like it was described [here](https://ravendb.net/docs/article-page/4.1/csharp/client-api/session/configuration/how-to-disable-tracking), we get \r\n\r\n`InvalidOperationException: Cannot execute 'GetDocument' before operation execution.`\r\n> Raven.Client.Documents.Session.Operations.LoadOperation.GetDocument<T>() in C:\\Builds\\RavenDB-Stable-4.2\\42027\\src\\Raven.Client\\Documents\\Session\\Operations\\LoadOperation.cs\r\n> Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync<T>(string id, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42027\\src\\Raven.Client\\Documents\\Session\\AsyncDocumentSession.Load.cs\r\n\r\nWe only get this when the supplied `id` into `LoadAsync` was non existent.  If we took off `NoTracking = true` and everything stayed the same, it worked as expected (no exception)."""
3598531,468,"b""Paging Controls don't work on RDB Studio #705 after pressing Execute ""","b'Paging controls are not working in the Studio in the index querying screen. \n\nAlthough it works when we open an index, as soon as we hit the ""Execute"" button the paging controls become disabled \n'"
3499984,467,b'integer sorting in studio is being stringy',"b'  When I sort on an integer field in the studio, objects seem to be sorted in string order.  For example, a descending sort returned: 7767, 73, 7, 5721, 498, 366, 3419, etc.  This was with on 1.0.701 from nuget.\n'"
3499958,466,"b'On the logs page, the recommended content for NLog.config is empty.'",b'  This is the first time see the new UI.  It is nicer.  Its particularly helpful to have the indexing errors so accessible.  This was with on 1.0.701 from nuget. \n'
3369237,461,b'Cannot use Max with DateTime / long in the reduce part of an index.',"b""I'm trying to create a map/reduce index that uses `IGrouping<,>.Max` to get the maximum date in the reduction part of my index. Here is a small piece of code to demonstrate the problem:\n\n```\npublic class Post\n{\n    public string PostId { get; set; }\n    public DateTime PostedAt { get; set; }\n}\n\npublic class LastPostIndex : AbstractIndexCreationTask<Post, LastPostIndex.ReduceResult>\n{\n    public class ReduceResult\n    {\n        public string Id { get; set; }\n        public DateTime Posted { get; set; }\n    }\n\n    public LastPostIndex()\n    {\n        Map = docs =>\n              from doc in docs\n              select new { Id = doc.PostId, Posted = doc.PostedAt };\n\n        Reduce = maps =>\n            from map in maps\n            group map by map.Id\n                into g\n                select new { Id = g.Key, Posted = g.Max(x => x.Posted) };\n    }\n}\n```\n\nThis will give me the following index error (one per Post document) in Raven Studio:\n\n> Cannot implicitly convert type 'System.DateTime' to 'int'\n\nThe problem lies in `Posted = g.Max(x => x.Posted)`. If I convert the `DateTime` object in the map part to a `long` I still get a conversion error. Compressing it to an `int` works fine though, which makes me suspect that **you lack support for DateTime and long in this scenario**.\n"""
3247806,459,b'NullReferenceException on session.Load([])',"b'First our scenario. We use a simple object to check if we already have processed a given key. So FooKey is only a simple combined key. This function below is executed from multiple threads.\n\n```\n        using(var session = _documentStore.OpenSession())\n        {\n            using(var tx = new TransactionScope())\n            {\n                session.Advanced.NonAuthoritativeInformationTimeout = TimeSpan.FromSeconds(30);\n                session.Advanced.AllowNonAuthoritativeInformation = false;\n\n                 var x = session.Load<FooKey>(""169833668456615936_71849""); // works and returns null\n\n                 var y = session.Load<FooKey>(new[] { ""169833668456615936_71849"" }); // throws\n\n                 .............\n            }\n        }\n```\n\nStacktrace:\n   at Raven.Client.Document.SessionOperations.MultiLoadOperation.<SetResult>b__0(JsonDocument x) in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\SessionOperations\\MultiLoadOperation.cs:line 64\n\nIve tested that with an older server version and with the newest 616 version. Client version is 616.\n\nIve also tried to write a reproducing test, but I was not able to reproduce it there. While in our app i can reproduce it on every run.\n'"
3017487,455,b'DeepEquals(RavenJToken other) returns false on compare between guid and string',b'even is the values are the same.\n(in RavenJToken.cs)\n'
3015802,454,"b'SaveChanges() is ""expensive""  even without anything to save'","b'Following the pattern here:\nhttp://ravendb.net/kb/3/using-ravendb-in-an-asp-net-mvc-website\n\nGiven the following query:\n\n`var model = DBSession.Query<SomeClass>().Take(100).ToList();`\n\n`SaveChanges()` in the `OnActionExecuted` adds ~90ms to the total response time, even though there is nothing to save. (Response time goes from 130ms to 220ms for the total request, so it is **substantial**).\n\nFollowing this pattern, SaveChanges is always called regardless if there are any changes that actually need to be persisted. Possibly suggest a way to load entities as ReadOnly (or without ChangeTracking.. etc.), to bypass the processing in SaveChanges()?\n'"
2988652,453,b'Immortal orphaned document',"b'I am using RavenDB v1.0.573 in embedded mode in an ASP.NET MVC application.\nRecently, I have deleted all documents from one of the collections using the client API and noticed one document was not properly deleted.\n\nThis document:\n- **is** returned by `Query<T>.ToArray()` call\n- **is not** returned by `Query<T>.Single(x => x.Id == docId)` call\n- **is** displayed in Raven Studio ""Summary"" tab and ""Documents"" tab\n- **is not** displayed in Raven Studio ""Collections"" tab\n\nI have tried:\n- Deleting it using `IDocumentSession.Delete(doc)` call\n- Deleting it using `IDocumentStore.DatabaseCommands.Delete(docId, etag)`\n- Rebuilding solution\n- Restarting VS and rebuilding solution\n- `iisreset`\n- Rebooting\n\n... but this document just wont die.\n\nI have a backup of the database (4KB) which will demonstrate this issue. If you would like me to email you a copy, let me know.\n'"
2956364,451,b'Support Lazy ToFacets',b''
2954365,450,b'Studio - delete doc issue',"b""Go into a document edit mode.\nThen click on the X to delete it.\nYou'll get an error.\n"""
2952585,449,b'RavenProfiler is not capturing session data',"b'I am trying to integrate RavenProfiler into an existing ASP.NET MVC3 project, but for some reason I am not seeing any information. The profiler simply shows: ""_0 ms waiting for server in 0 request(s) for 0 sessions(s)_"".\n\nI considered the possibility that there is some conflicting code in my project, so I carried out a basic test:\n- I have created a new project using ASP.NET MVC3 Empty Application template\n- Added package 1.0.606-Unstable via NuGet\n- Using [RacoonBlog](https://github.com/ayende/RaccoonBlog/blob/master/RaccoonBlog.Web/Global.asax.cs) as an example, I added the following code to `Global.asax.cs`:\n\n``` c#\npublic class MvcApplication : HttpApplication\n    {\n        public MvcApplication()\n        {\n            BeginRequest += (sender, args) =>\n                {\n                    HttpContext.Current.Items[""CurrentRequestRavenSession""] = DocumentStore.OpenSession();\n                };\n            EndRequest += (sender, args) =>\n                {\n                    using (var session = (IDocumentSession)HttpContext.Current.Items[""CurrentRequestRavenSession""])\n                    {\n                        if (session == null)\n                            return;\n\n                        if (Server.GetLastError() != null)\n                            return;\n\n                        session.SaveChanges();\n                    }\n                };\n        }\n\n        public static EmbeddableDocumentStore DocumentStore { get; set; }\n\n        protected void Application_Start()\n        {\n                        // other initialisation code, etc...\n\n            DocumentStore = new EmbeddableDocumentStore\n                {\n                    DataDirectory = ""App_Data/RavenDb"" \n                };\n            DocumentStore.Initialize();\n\n            RavenProfiler.InitializeFor(DocumentStore);\n        }\n    }\n```\n- Added RavenProfiler method call to `<head>` section:\n\n``` c#\n<head>\n        @Raven.Client.MvcIntegration.RavenProfiler.CurrentRequestSessions()\n</head>\n```\n- Added test code to MVC action:\n\n``` c#\npublic ActionResult Index()\n{\n    var session = (IDocumentSession)HttpContext.Items[""CurrentRequestRavenSession""];\n    session.Store(new Test { Name = ""Text 1"" });\n\n    HttpContext.Response.Write(""<br />"" + session.Query<Test>().Count()); \n\n    return View();\n}\n```\n\nThe profiler is still showing ""_0 ms waiting for server in 0 request(s) for 0 sessions(s)_"".\n\nDoes the profiler rely on some architectural pattern? Am I missing some initialisation code somewhere?\n'"
2926914,448,b'Indexes page should have Ctrl+N support',b''
2926913,447,b'Index edit should have Ctrl+S support',b''
2926868,446,b'Studio - Ctrl+click issues',b'on chrome opens several tabs and all tabs are changed togther.\non firefox no data is shown\n'
2926153,445,b'Studio - Bad color for an informative message',"b'When deleting a document we get the following message in red ""document x was deleted"".\nThe red background is a bag, since to the end user red color == error (as he did something wrong), and not informative message.\n'"
2905354,443,b'Investigate super slow range queries',"b'12 OR clauses on an index with 8 million docs will take about 1-2 secs to return\n\nCode at fault\n\nhttp://www.java2s.com/Open-Source/Java-Document/Search-Engine/lucene/org/apache/lucene/search/MultiTermQueryWrapperFilter.java.htm\n\nPossible solutions: http://invertedindex.blogspot.com/2009/11/numeric-range-queries-comparison.html , http://www.marcsturlese.com/2009/04/08/lucene-trierangequery/\n\nLatter will help with numeric ranges, string based one remain problematic\n'"
2879894,442,b'Studio Logs - Allow to disable auto fetching of logs',"b'Auto fetching of logs distract the user from getting to see what the logs are, because the list box jump each 5 seconds to another logs.\nMaybe we want to have the option to disable auto fetching logs to the screen, but continue to get logs on the background, and give the user the option to append the added background logs to the screen.\n'"
2879867,441,b'Studio Logs - Sort log by TimeStamp desc order',"b""Currently it's ordered as TimeStamp ASC.\n"""
2865782,439,b'Search dialog is not consistent with the Studio design',"b'In the edit document page, there is a consistency issue with the search dialog and the application design\n'"
2847174,438,b'Studio: Deleting document confuses paging',"b'When deleting a doc from a page listing, if not in the first page, paging will get confused (Page 2 of 1 and stuff like that)\n'"
2844106,437,b'Raven.Client.MvcIntegration on NuGet',"b'I am using RavenDB-Embedded NuGet package v1.0.573 as part of my ASP.NET MVC application.\nI would like to be able to use RavenProfiler but it is not part of that NuGet package.\n\nIs there a NuGet package which already contains this?\nIf not, could you publish one?\n'"
2826614,436,"b""Studio: don't allow overwriting documents when Creating New Document""","b'Currently it appears one can create a new document and give it an ID of a document which already exists, and by that overriding it\n\nWe should do this with Optimistic concurrency enabled so that we get a conflict and abort, notifying the user about it\n'"
2826098,435,b'Studio: Spatial queries passes 0 for values of http',"b'Trying to run a Spatial query via the management studio does not work as expected. Looking at the resulting HTTP request being made to the server, the latitude/longitude/radius parameters are always 0, regardless of what is entered in the management studio.\n'"
2749487,433,b'Suggests fail on large indexes',"b'When you have an index of 500,000 items, suggests takes far too long.\n'"
2736532,432,b'If multi tenant is not supported hide the change tenant option',b''
2736522,431,"b'Change the work ""Databases"" to ""Tenants""'",b'Also change the database query string parameter to tenant\n'
2736512,430,"b'When creating a database failed, do not add it to the UI'","b'When creating a database failed, do not add the database to the UI.\n'"
2719159,429,b'Add studio support for ApiKey',b''
2719020,428,"b""ShouldCacheRequest doesn't work""","b'It makes absolutely no difference if I use the following convention (neither on loads, nor on queries):\n\nConventions =\n{\n    ShouldCacheRequest = (url) => false\n}\n'"
2700792,427,b'Better F# sample',b'Enhance to demonstrate using an index\n'
2700211,426,b'Should not allow several databases with the same name',b'when adding a database with a name of a database allready there it adds a new one that is connected to the original one.\n'
2698344,425,b'Search() Exception for certain searchTerms input',"b'If I pass ""this OR that"" as the searchTerms to the Search() method, I get:\n\n""Lucene.Net.QueryParsers.ParseException: Cannot parse \' Content:this Content:OR Content:that ....""\n\nHaving not read any official documentation, I\'m not sure about when the Search() method should be used, but if it\'s intended  to accept end user input, this could be an issue. Repro by pass an uppercase OR or || between 2 other search terms. \n'"
2698045,424,"b""Search() doesn't work with paths""","b'.Search(""slug"", ""/docs/consumer/querying"") will return no results, whereas .Search(""slug"", "" docs consumer querying"") works great\n'"
2696983,423,b'Logs in studio',"b'When showing the error about the config, right click should have a Copy menu\n'"
2692102,421,b'Grammar In Silverlight App',"b'The default screen in the silverlight app when you connect to http://localhost:8080 says.\n\n""There is no any documents in this database yet.""\n\nThis should read.\n\n""There are no documents in this database yet.""\n'"
2688347,420,b'Shortcut key to open a document by id',b''
2688011,419,b'Dynamic index page should have busy indicator',b''
2687998,418,b'Middle click to open new tab',"b'Everywhere, on links, on buttons, etc.\n'"
2687967,417,b'Support Ctrl+F inside document edit',b'So we can easily search inside the document\n'
2657115,415,b'Studio - Export just indexes',"b'In ExportTask it says that: You can optionally choose to export just indexes, but there is no option for that.\n'"
2655131,414,b'Right click on indexes in listing page',b'Delete index\nFor temp indexes - promote to auto index\n'
2651842,413,b'Import Database Creates the DB but Imports to Default',"b""Using the Management Studio, if I export a database (lets call it DBTesting), then take the dump file to another machine that doesn't have DBTesting on it.\n\nWhen I import the DBTesting dump in, it creates a new DB called DBTesting, but imports all the data to Default.\n\nI would have expected the functionality to create DBTesting and import the data to DBTesting. Or tell me that the DB I'm importing doesn't match the name of the DB I'm importing to.\n\nSmall usability issue in my opinion.\n"""
2635362,412,b'Add comments annotations for PatchRequest properties',"b' Add comments annotations for PatchRequest properties, PatchCommandType and PatchCommandData.\n'"
2589882,411,b'RavenStudio Paging #574',"b'Paging is not working in the Studio in the index querying screen. Yet, after changing the ""Change Displayed Document Size"" it works.  \n'"
2561780,410,b'Escaped c# keywords not working in indexes',"b'I wanted to create a map/reduce index ""Events_ByDate_Count"" and tried to write the map part like this:\n\nMap = events => from @event in events select new { @event.Date.Year, @event.Date.Month, Count = 1 };\n\nIt fails creating the index. \nHowever, this guy works:\n\nMap = events => from entry in events select new { entry.Date.Year, entry.Date.Month, Count = 1 };\n'"
2549150,409,b'Studio - allow delete all documents be deleting a collection',"b""Allow deleting a collection with all of it's documents.\n"""
2449408,407,b'Have a capitalized IDs',"b'Add a way to have a capitalized IDs. This make it much more easy to look on this id: \n""PostComments/1234"" vs ""postcomments/1234"".\n'"
2448967,406,b'Studio - Querying - show terms',b''
2448954,405,b'Studio - Querying - display mapped results',b'Only for map/recduce indexes\n'
2367865,404,b'Create an extension method for indexes: WhereNotNull',b'Instead of writing .Where(x => x != null).FirstOrDefault(); everywhere\n'
2338652,403,"b""dictionary of date time doesn't serialize correcltion""","b'We have a Dictionary<Datetime, int>\n\nIt get serialized as:\n\n  ""NumberOfDownloadsPerMonth"": {\n    ""11/01/2011 00:00:0""0: 12\n  },\n\nWhich loses the dateness on the server\n'"
2284284,402,b'Calling Database.Get from an override of AbstractReadTrigger.OnRead causes Smuggler to fail',"b""If we implement an `AbstractReadTrigger` as shown in [this documentation](http://ravendb.net/documentation/triggers/read), we notice that Raven.Smuggler.exe fails to export all documents. After some digging, we believe this has to do with the `Database.Get` call causing the batch read to skip some documents - possibly due to etag of the loaded document interfering with the iteration process?\n\nThis can be reproduced by creating a bundle with an `OnRead` trigger that calls `Database.Get` on an arbitrary document, and then running Raven.Smuggler.exe out. Compare the number of documents exported with and without the bundle installed.\n\nIn our case, we were able to workaround this issue by moving the `Document.Get` calls to the `Initialize` method. This workaround won't be suitable for everyone.\n"""
2271612,401,b'Authorization/versioning bundle compatibility: GetRevisionsFor only returns the first revision',"b""We're only getting the first revision of a document when calling `GetRevisionsFor` after securing a session with `SecureFor`.\n\nIf we check the document by retrieving http://localhost:8080/docs?startsWith=tests/1/revisions/&start=0&pageSize=20 we can see that there are actually 4 revisions.\n- `session.Advanced.GetRevisionsFor` returns 1 document\n- `session.Advanced.DatabaseCommands.StartsWith` returns 1 document\n- http://localhost:8080/docs?startsWith=tests/1/revisions/&start=0&pageSize=20 returns 4 documents\n\nAll 4 revisions have identical authorization metadata (Permissions and Tags). If we remove the call to `SecureFor`, `GetRevisionsFor` returns all 4 documents as expected.\n"""
2212473,400,b'Esent File Acess exception [see info]',"b""Hello, \n\nI'm experiencing a very strange exception on my hosting environment. I have tow instances of RavenDb. First is build 287, and runs fine, the second is #499 and throws the following exception:\n\n[EsentFileAccessDeniedException: Cannot access file, the file is locked or in use]\n   Microsoft.Isam.Esent.Interop.Api.Check(Int32 err) in C:\\Work\\ravendb\\SharedLibs\\Sources\\managedesent-61618\\EsentInterop\\Api.cs:2739\n   Microsoft.Isam.Esent.Interop.Api.JetInit(JET_INSTANCE& instance) in C:\\Work\\ravendb\\SharedLibs\\Sources\\managedesent-61618\\EsentInterop\\Api.cs:131\n   Raven.Storage.Esent.TransactionalStorage.Initialize(IUuidGenerator uuidGenerator) in c:\\Builds\\raven\\Raven.Storage.Esent\\TransactionalStorage.cs:207\n\n[InvalidOperationException: Could not open transactional storage: d:\\inetpub\\vhosts\\aapostolov.com\\subdomains\\ravendvera\\httpdocs\\Data\\Data]\n   Raven.Storage.Esent.TransactionalStorage.Initialize(IUuidGenerator uuidGenerator) in c:\\Builds\\raven\\Raven.Storage.Esent\\TransactionalStorage.cs:220\n   Raven.Database.DocumentDatabase..ctor(InMemoryRavenConfiguration configuration) in c:\\Builds\\raven\\Raven.Database\\DocumentDatabase.cs:148\n   Raven.Web.ForwardToRavenRespondersFactory..cctor() in c:\\Builds\\raven\\Raven.Web\\ForwardToRavenRespondersFactory.cs:30\n\n[TypeInitializationException: The type initializer for 'Raven.Web.ForwardToRavenRespondersFactory' threw an exception.]\n   Raven.Web.ForwardToRavenRespondersFactory..ctor() +0\n\n[TargetInvocationException: Exception has been thrown by the target of an invocation.]\n   System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck) +0\n   System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache) +98\n   System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipVisibilityChecks, Boolean skipCheckThis, Boolean fillCache) +241\n   System.Activator.CreateInstance(Type type, Boolean nonPublic) +69\n   System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) +1136\n   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) +111\n   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture) +23\n   System.Web.HttpRuntime.CreateNonPublicInstance(Type type, Object[] args) +60\n   System.Web.Configuration.HandlerFactoryCache..ctor(String type) +46\n   System.Web.HttpApplication.GetFactory(String type) +81\n   System.Web.MaterializeHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +223\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +184\n\nThe strange thing is if I run a second server with build 287 - the two 287 are fine, and #499 crashes. Even if I stop all the 287, the #499 still gives the error.\n\nHope you can reproduce this and fix it.\n"""
2146992,398,b'Add support for Indexing of DateTime values',b''
2145771,397,"b""Dynamic Indexes don't work (from Ayende)""","b'As per Ayende in Training class,  there is an issue with Dynamic Indexes.\n'"
2103547,395,"b'Figure out SetBoost, OmitNorms, OmitTf'","b'Field-based boosting can be made on query time, so no need to support this on indexing time.\n\nFor Multi-Map, we want to be able to support boosting. This way we can do a multi-map on the same collection and boost different sets of documents based on different queries. This will be extremely useful for multi-maps on different collections, when docs in one are known to be more important than the other.\n\nFor this to work efficiently we need to figure out how to use OmitNorms correctly - when to set it and when not to. While at it we should also do OmitTf on fields like __document_id to reduce disk and memory costs.\n\nAPI would be AddMap<>(expression, boost = 1.0)\n'"
2087913,394,b'Docs: Elaborate on Spatial API',b'SortByDistance\ncan use AddOrder and other Where... operators\n'
2064557,393,b'Document Raven/Authorization/Windows/RequiredGroups',b''
2026116,391,"b'when putting an index, clear all its errors'",b''
2026113,390,b'Indexing array of potentially null',"b'public class Orders_Search : AbstractIndexCreationTask<Order>\n{\n    public class ReduceResult\n    {\n        public string Query { get; set; }\n        public DateTime OrderedAt { get;set; }\n    }\n    public Orders_Search()\n    {\n        Map = orders => from order in orders\n                        select new\n                        {\n                            Query = new[]\n                            {\n                                order.FirstName, \n                                order.LastName, \n                                order.OrderNumber, \n                                order.Email, \n                                order.CompanyName\n                            },\n                            order.OrderedAt\n                        };\n    }\n}\n\nwhen Order Number is null, we get an error\n'"
2025994,389,b'Async session - cannot use Search',"b'   Session.Query<Orders_Search.ReduceResult>(""Orders/Search"")\n                .Search(x=>x.Query, searchValue) <-- doesn\'t compile\n                .As<Order>()\n                .ToListAsync()\n                .ContinueOnSuccess(orders => Orders.Match(orders));\n'"
2025993,388,b'Async session - cannot specify index type',"b'   Session.Query<Orders_Search.ReduceResult>(""Orders/Search"")\n                .Where(x=>x.Query == searchValue)\n                .As<Order>()\n                .ToListAsync()\n                .ContinueOnSuccess(orders => Orders.Match(orders));\n'"
1856085,386,b'Document Search() method',b'Document the Search option and the Title:<<dynamic search>> option\n'
1802555,382,b'Package versions for ravenDB do not follow semver.org',"b'Some customers are reporting that, because all packages in RavenDB come with 1.0.0.x, they cannot take dependencies on a specific version, and breaking changes get introduced between revisions.\n\nFollowing semver.org for versioning (aka introducing breaking changes in 1.0.X) would allow openwrap consumers to select w which versions they want to work with and would follow the conventions that the industry is moving towards.\n'"
1765424,377,b'Sharding: rewrite to use IDatabaseCommands',"b'Right now we are using stupid way of nested sessions, we should be using IDatabsaeCommands and inheriting from InMemorySessionOperations\n'"
1697488,375,"b'GetRevisionsFor in versioning bundle prohibits retrieving the ""Last-Modified"" metadata of the revisions'","b'When you retrieve all revisions of a document using GetRevisionsFor\n\nIn VersioningClientExtensions.cs \n\n``` c#\nvar inMemoryDocumentSessionOperations = ((InMemoryDocumentSessionOperations)session);\n            var jsonDocuments = session.DatabaseCommands.StartsWith(id + ""/revisions/"", start, pageSize);\n            return jsonDocuments\n                .Select(jsonDocument => inMemoryDocumentSessionOperations.TrackEntity<T>(jsonDocument.Key, jsonDocument.DataAsJson, jsonDocument.Metadata))\n                .ToArray();\n```\n\nThe public track entity overload is directly called on InMemoryDocumentSessionOperations\n\n``` c#\npublic T TrackEntity<T>(string key, RavenJObject document, RavenJObject metadata)\n```\n\nThis misses out the population of the ""Last-Modified"" metadata value achieved when Load is called as this uses this overload:\n\n``` c#\nprotected internal T TrackEntity<T>(JsonDocument documentFound)\n{\n...\n    if (!documentFound.Metadata.ContainsKey(Constants.LastModified))\n    {    \n        documentFound.Metadata[Constants.LastModified] = documentFound.LastModified;\n    }\n...\n    return TrackEntity<T>(documentFound.Key, documentFound.DataAsJson, documentFound.Metadata);\n...\n}\n```\n\nIt is therefore not possible to retrieve the Last-Modified metadata in the same session, as the entity metadata is already being tracked by the session. The TrackEntity method that performs that populates the Last-Modified metadata is internal, and therefore cannot be accessed by the versioning bundle\'s client extension method.\n'"
1686371,374,b'Document Recurse',"b'public class CategoryWithParentsAndChildren : AbstractIndexCreationTask<Category>\n{\n    public CategoryWithParentsAndChildren()\n    {\n        Map = categories => from category in categories\n                            select new {category.Id, category.Name, category.ParentId};\n        TransformResults = (database, categories) =>\n                           from category in categories\n                           let parentCategories = Recurse(category, c => database.Load<Category>(c.ParentId))\n                           select new\n                           {\n                            category.Id,\n                            category.Name,\n                            Parents =\n                            (\n                                from parent in parentCategories\n                                select new {parent.Id, parent.Name}\n                            )\n                           };\n    }\n}\n'"
1671545,373,b'TransactionScope causes sessions to be isolated from each other.',"b""Running Raven Server v472 on .NET 4.0 and I'm hitting some unexpected behavior.  You can find the example code to reproduce the behavior here: https://gist.github.com/1224679\n\nEssentially, when you have multiple scopes which are ultimately participating in the same transaction, each scope seems to be isolated such that any work performed by the one is inaccessible to the other.\n"""
1655139,372,b'Enable Aggressive caching for GetTerms',b''
1639287,371,b'Support Random(int) in IDocumentSession',"b'Need to implement this on the server side using custom Lucene Sort object, to make sure all possible results participate, not only the first page\n'"
1596025,370,"b""Samples don't build or run correctly""","b'As of build 465, the samples don\'t build or run correctly.\n\nRepro steps:\n1. Download and unzip build 465.\n2. Run "".\\RavenDB\\Samples\\Raven.Sample.EventSourcing\\Start Raven.ps1""\n3. Observe that the script throws an error about not finding log4net.dll, while the server process throws an error about not finding NLog.dll.\n4. Load "".\\RavenDB\\Samples\\Raven.Sample.EventSourcing\\Raven.Sample.EventSourcing.csproj"" into Visual Studio.\n5. Observe that none of the project load due to errors about ""The imported project \'.\\RavenDB\\Tools\\StyleCop\\StyleCop.Targets\' was not found.""\n\nJudging from recent commits these problems are being worked on, I guess, but they\'re not yet fixed in the resulting build.\n'"
1561283,368,b'Add ToFacetsAsync',b'For silverlight support\n'
1561274,366,b'Document facets',b''
1561272,365,b'Document multi maps',b''
1560556,364,b'Support multi maps in the SL UI',b'Currently we only support the map/reduce/transform results option. We also need to support multi maps.\n'
1538724,361,b'Replication + OAuth',"b'We should have some way to provide a solution for that, currently, OAuth + Replication do not mix very well (or at all, actually).\n'"
1503652,360,b'Support OAuth for Delete / Put / Patch',"b'Right now they are only supported in batch mode, but not when you make individual actions.\nNeeds to do that for both sync & aysnc versions.\n'"
1477393,359,b'querying from the admin does not work with single quotes',"b'for example, when querying the sample database\n\nName: ""Rock"" works but\nName: \'Rock\' does not\n\nShould there be a difference between single and double quotes?\n'"
1418834,356,b'Querying nested dictionaries in RavenDB throws exception',"b'Problem also posted here: http://stackoverflow.com/questions/7050250/querying-nested-dictionaries-in-ravendb\n\nCLASS DEFINITIONS:\n\npublic class Style\n{\n    public string Name { get; set; }\n    public Dictionary<string, Sku> Skus = new Dictionary<string, Sku>();\n}\npublic class Sku\n{\n    public string Name { get; set; }\n    public Dictionary<string, Colli> Collis = new Dictionary<string, Colli>();\n}\npublic class Colli\n{\n    public string Name { get; set; }\n}\n\n// VALID QUERIES:\n// (Ask for style with skus of specific names)\nvar existingStyleWithSku1 = session.Query<Style>().Where(s => s.Skus[""Sku1""] != null).ToList();\nvar nonexistingStyleWithSku4 = session.Query<Style>().Where(s => s.Skus[""Sku4""] != null).ToList();\n\n// INVALID NESTED QUERY\n// (Ask for style containing a sku named ""Sku1"" that contains a colli named ""Right"")\nvar styleWithSpecificColli = session.Query<Style>().Where(s => s.Skus[""Sku1""].Collis[""Right""] != null).ToList();\n\nWhen i attempt to execute the last query, I get the message:\n\n{ ""Url"": ""/indexes/dynamic/Styles?query=-Skus.get_Item(%2522Sku1%2522).Collis.Right%253A%255B%255BNULL_VALUE%255D%255D%2520AND%2520Skus.get_Item(%2522Sku1%2522).Collis.Right%253A*&start=0&pageSize=128&aggregation=None"", ""Error"": ""System.ArgumentException: The field \')CollisRight\' is not indexed, cannot query on fields that are not indexed\\r\\n at Raven.Database.Indexing.Index.IndexQueryOperation.AssertQueryDoesNotContainFieldsThatAreNotIndexes() in c:\\Builds\\raven\\Raven.Database\\Indexing\\Index.cs:line 628\\r\\n at Raven.Database.Indexing.Index.IndexQueryOperation.d__1c.MoveNext() in c:\\Builds\\raven\\Raven.Database\\Indexing\\Index.cs:line 542\\r\\n at System.Linq.Enumerable.WhereSelectEnumerableIterator2.MoveNext()\\r\\n at System.Linq.Enumerable.WhereSelectEnumerableIterator2.MoveNext()\\r\\n at System.Collections.Generic.List1.InsertRange(Int32 index, IEnumerable1 collection)\\r\\n at ........\n'"
1415001,355,b'Null reference exception when accessing getter of DocumentStore.DatabaseCommands',"b'The following code gives a NULL reference exception in my case (The exception is thrown in the getter of DatabaseCommands. I use version 1.0.0.426):\nThe code:\n\npublic DocumentStore GetDocumentStore()\n        {\n            var doc = new DocumentStore();\n            doc.Url = _ravenUrl;\n            doc.Conventions = new DocumentConvention()\n                                {\n                                    FindIdentityProperty = p => p.Name.Equals(""RavenDocumentId"")\n                                };\n            return doc;\n        }\n\n```\n    public void EnsureDatabaseExists()\n    {\n        using(var store = GetDocumentStore())\n        {\n            store.Initialize();\n            store.DatabaseCommands.EnsureDatabaseExists(_ravenDatabaseName);\n        }\n    }\n```\n\nThe stack trace:\n\n[NullReferenceException: Object reference not set to an instance of an object.]\n   Raven.Client.Connection.ServerClient..ctor(String url, DocumentConvention convention, ICredentials credentials, ReplicationInformer replicationInformer, HttpJsonRequestFactory jsonRequestFactory, Nullable`1 currentSessionId) in c:\\Builds\\raven\\Raven.Client.Lightweight\\Connection\\ServerClient.cs:60\n   Raven.Client.Document.<>c__DisplayClass5.<InitializeInternal>b__3() in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\DocumentStore.cs:469\n   Raven.Client.Document.DocumentStore.get_DatabaseCommands() in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\DocumentStore.cs:77\n   XXXXX.YYYYYY.Entities.Raven.RavenDataAccess.EnsureDatabaseExists() in D:\\Projects\\Tradelink4\\Branches\\GenericEntityTypes_2\\XXXXXX.YYYYYYY.Entities.Raven\\RavenDataAccess.cs:189\n   XXXXXXXX.CustomerName.Website.Global.Application_Start(Object sender, EventArgs e) in D:\\Projects\\CustomerName\\trunk\\src\\Website\\Global.asax.cs:37\n\n[HttpException (0x80004005): Object reference not set to an instance of an object.]\n   System.Web.HttpApplicationFactory.EnsureAppStartCalledForIntegratedMode(HttpContext context, HttpApplication app) +4051717\n   System.Web.HttpApplication.RegisterEventSubscriptionsWithIIS(IntPtr appContext, HttpContext context, MethodInfo[] handlers) +191\n   System.Web.HttpApplication.InitSpecial(HttpApplicationState state, MethodInfo[] handlers, IntPtr appContext, HttpContext context) +352\n   System.Web.HttpApplicationFactory.GetSpecialApplicationInstance(IntPtr appContext, HttpContext context) +407\n   System.Web.Hosting.PipelineRuntime.InitializeApplication(IntPtr appContext) +375\n\n[HttpException (0x80004005): Object reference not set to an instance of an object.]\n   System.Web.HttpRuntime.FirstRequestInit(HttpContext context) +11642112\n   System.Web.HttpRuntime.EnsureFirstRequestInit(HttpContext context) +141\n   System.Web.HttpRuntime.ProcessRequestNotificationPrivate(IIS7WorkerRequest wr, HttpContext context) +4865877\n'"
1414439,354,b'Creating a database with invalid name',"b'In the RavenStudio UI, one can create a database with an invalid name i.e. ""Damo/Test""\n\nClicking on it gives an ""Unable to connect to server!"" message:\n\nThe remote server returned an error: Bad Request\n{\n   ""Url"":""/databases/Damo/Test/stats?nocache=-613153477"",\n   ""Message"":""Could not find a database named: Damo"",\n   ""Error"":""Cound not find a database named: Damo"",\n}\n\nPortion of JSON doc from /databases :\n\n[{""Id"":null,""Settings"":{""Raven/DataDir"":""~\\Tenants\\Damo/Test""},""@metadata"":{""@id"":""Raven/Databases/Damo/Test"",""Last-Modified"":""2011-08-16T10:56:44.7110000+01:00"",""@etag"":""00000000-0000-0900-0000-000000000002"",""Non-Authoritive-Information"":false}},\n\nThe DataDir doesn\'t exist on disk.\n'"
1397228,353,b'Provide query text to shard selection strategy',b'So we can make shard selection based on the actual query.\n'
1387303,352,b'Compilation error GlobalFilters',"b""When project is compiled the error below is thrown:\n\nC:\\Program Files (x86)\\RavenDev\\Raven.Client.MvcIntegration\\RavenProfiler.cs(45,4): error CS0103: The name 'GlobalFilters' does not exist in the current context\n"""
1364201,349,b'SL UI - Error on deleting document',"b'- Select a document, go into edit mode.\n- Delete that document\n- You get the following error:\n\nException has been thrown by the target of an invocation.\n\n   at System.RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method, Object target, Object[] arguments, SignatureStruct& sig, MethodAttributes methodAttributes, RuntimeType typeOwner)\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\n   at Caliburn.Micro.Screen.<>c__DisplayClass1c.<GetViewCloseAction>b__14()\n   at Caliburn.Micro.Screen.<TryClose>b__1e()\n   at Caliburn.Micro.Execute.<>c__DisplayClass2.<InitializeWithDispatcher>b__0(Action action)\n   at Caliburn.Micro.Execute.OnUIThread(Action action)\n   at Caliburn.Micro.Screen.TryClose()\n   at Raven.Studio.Shell.MessageBox.MessageBoxViewModel.Ok()\n'"
1317613,347,b'Test fails occasionally ',b'Raven.Bundles.Tests.Authorization.Bugs.LoadingSavedInfo.BugWhenSavingDocumentWithPreviousAuthorization_WithQuery\n\nUsually with a timeout for the query to become non stale\n'
1304147,346,b'Readd ValidateExpressionMap',"b'Used to ensure that map/reduce indexes have the same format, currently breaks the build\n'"
1302103,345,b'Look into creating a RavenDB applet for IIS',"b'To allow users to manage configs, view stats, access the UI etc from the IIS control panel\n'"
1301745,344,b'Feature: Prioritizing indexes',"b'Being able to define priorities for indexes, so indexing could use a PQ to first index more important indexes\n'"
1288335,343,"b""The RavenDB Embedded nuget package doesn't depend on NLog but log4net""","b'RavenDB moved to NLog with build 410, but the embedded package still has a dependency on log4net. Instead, add a NLog dependency.\n'"
1261897,341,b'Prevent DateTime.Now from appearing in indexes',"b""DateTime.Now\nDateTime.UtcNow\nDateTimeOffset.Now\n\nEtc\n\nThey shouldn't be there, since they are mutated\n"""
1249808,340,b'Fix parallel multi get',"b'When we enable it, we get test failures.\n'"
1248848,339,b'Document caching limits',b''
1248106,338,b'Adding profiling info for too many requests',b'That should make it easier to figure out why this is happening\n'
1194361,337,b'Querying for Id GreatherThanOrEqualTo',b'Question asked on Stackoverflow.\n\nhttp://stackoverflow.com/questions/6626697/predicate-in-ravendb-dynamic-query-not-working-correctly\n\nI created a failing test.\n\nhttps://github.com/csainty/ravendb/commit/c8b376f159331ba67a18cccfb2d8345fee427660\n\nI am guessing this is unsupported?\nCould it be detected in the Query parser and an Exception presetned instead of simply returning no results.\n'
1175712,336,b'Parallel multi get',b''
1173236,335,b'Multi Get - Support single doc load',b''
1172965,334,b'Stopwatch for SL',b'Remove a lot of #if def for that\n'
1170145,333,b'Multi Get - test with non authoritive information',b''
1169367,332,b'Multi Get - test caching with tenant db',b''
1169364,331,b'Multi Get - test with tenants db',b''
1167666,330,b'Multi get - ensure that it is treated as a GET',"b'even though it is a post, from security persepctive\n'"
1166430,329,b'Validate the anonymous type properties of MapReduce indexes in the client api',"b'Add validation check for the anonymous type properties to make sure that their names match the properties names on the strongly typed index class.\n\nFor example:\n\n```\npublic class Posts_Statistics : AbstractIndexCreationTask<PostComments, PostsStatistics>\n{\n    public Posts_Statistics()\n    {\n        Map = postComments => from postComment in postComments\n                              select new { PostCountError = 1, CommentsCount = postComment.Comments.Count };\n\n        Reduce = results => from result in results\n                            group result by ""constant"" into g\n                            select new\n                            {\n                                PostsCount = g.Sum(x => x.PostsCount),\n                                CommentCountError = g.Sum(x => x.CommentsCount)\n                            };\n    }\n}\n\npublic class PostsStatistics\n{\n    public int PostsCount { get; set; }\n    public int CommentsCount { get; set; }\n}\n```\n\nIt\'ll be great if the client API can detect that the PostsStatistics does not have ""PostCountError"" and ""CommentCountError"" properties and throw an exception to let the user notice.\n'"
1164880,328,b'Multi Get - prevent nesting of multi get requests',b''
1164868,327,b'Multi Get - support profiling',b''
1164866,326,b'Multi Get - support client aggressive caching',b''
1164864,325,b'Multi Get - support client side caching',b''
1164652,324,b'Support replication failover for asycn / silverlight clients',b''
1164651,323,b'Ensure all ServerClient methods handle replication properly',b'There are a few that does not\n'
1163466,322,b'Add profiling information for async session',b''
1160589,321,b'Document Size Quotas',b''
1160306,320,b'Document Raven-Read-Only',b''
1147454,318,b'Error on shutdown',"b'A critical error occurred while starting the server. Please see the\nexception details bellow for more details:\nLucene.Net.Store.AlreadyClosedException: this Directory is closed\n  at Lucene.Net.Store.Directory.EnsureOpen() in z:\\Projects\\ravendb\n\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Store\\Directory.cs:line\n267\n  at Lucene.Net.Store.RAMDirectory.CreateOutput(String name) in z:\n\\Projects\\ravendb\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Store\n\\RAMDirectory.cs:line 276\n  at Lucene.Net.Index.SegmentInfos.Write(Directory directory) in z:\n\\Projects\\ravendb\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Index\n\\SegmentInfos.cs:line 421\n  at Lucene.Net.Index.SegmentInfos.PrepareCommit(Directory dir) in z:\n\\Projects\\ravendb\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Index\n\\SegmentInfos.cs:line 937\n  at Lucene.Net.Index.IndexWriter.StartCommit(Int64 sizeInBytes,\nIDictionary`2 commitUserData) in z:\\Projects\\ravendb\\SharedLibs\\Sources\n\\Lucene2.9.2\\src\\Lucene.Net\\Index\\IndexWrit\ner.cs:line 6480\n  at Lucene.Net.Index.IndexWriter.Commit(Int64 sizeInBytes) in z:\n\\Projects\\ravendb\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Index\n\\IndexWriter.cs:line 4750\n  at Lucene.Net.Index.IndexWriter.CloseInternal(Boolean\nwaitForMerges) in z:\\Projects\\ravendb\\SharedLibs\\Sources\n\\Lucene2.9.2\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 2544\n  at Lucene.Net.Index.IndexWriter.Close(Boolean waitForMerges) in z:\n\\Projects\\ravendb\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Index\n\\IndexWriter.cs:line 2474\n  at Lucene.Net.Index.IndexWriter.Close() in z:\\Projects\\ravendb\n\\SharedLibs\\Sources\\Lucene2.9.2\\src\\Lucene.Net\\Index\n\\IndexWriter.cs:line 2436\n  at Raven.Database.Indexing.Index.Dispose() in c:\\Builds\\raven\n\\Raven.Database\\Indexing\\Index.cs:line 118\n  at Raven.Database.Indexing.IndexStorage.Dispose() in c:\\Builds\\raven\n\\Raven.Database\\Indexing\\IndexStorage.cs:line 120\n  at Raven.Database.DocumentDatabase.Dispose() in c:\\Builds\\raven\n\\Raven.Database\\DocumentDatabase.cs:line 258\n  at Raven.Server.RavenDbServer.Dispose()\n  at Raven.Server.Program.RunServer(RavenConfiguration\nravenConfiguration)\n  at Raven.Server.Program.RunInDebugMode(Nullable`1\nanonymousUserAccessMode, RavenConfiguration ravenConfiguration)\n  at Raven.Server.Program.InteractiveRun(String[] args)\n  at Raven.Server.Program.Main(String[] args)\nPress any key to continue...\n'"
1147440,317,b'Set-Based operations: WaitForNonStaleResultsAsOfLastWrite',b''
1136139,315,b'Document Raven.Client.MvcIntegration.dll ',b''
1135945,314,b'Document consistency models',"b'Specifically, WaitForNonStaleResultsAsOfLastWrite\n'"
1135944,313,b'Document aggressive caching',b''
1114511,309,b'Feature request: Include LastModified in RavenDocumentsByEntityName',"b'I would like to be able to do something like:\n\nDatabaseCommands.DeleteByIndex(""Raven/DocumentsByEntityName"", new IndexQuery\n{\n   Query = ""Tag:[[Products]] AND LastModified:[\\* TO ""+cutOffDateTime+""]""\n}, true);\n\n...so I need  a LastModified field in the index. I don\'t want to create a separate index (performance reasons) and modifying the existing one doesn\'t help, because the index will be updated as soon as I use the Raven SL UI (which does a PutIndex)\n\nI think it wouldn\'t hurt to have a LastModified field on this index and it might be helpful for others too. Even the Raven UI migth use it, e.g. to sort the docs per collection by modification time.\n'"
1114492,308,b'Raven UI shows last modified time in UTC',"b'Looking at the last modfied entry via the SL UI shows the time in UTC. It would be nice, to see this in local time.\nAlso the ""last indexed"" field on the index stats shows 2 hours ago instead of somethiong like 10 seconds ago, because of the offset between local and UTC time.\n'"
1102826,307,b'Document replication destination connection string name vs url',b'Mention that we need to specify both and why\n'
1102377,306,b'Document Raven/SkipCreatingStudioIndexes',b''
1092074,305,b'Remove items from cache after write.',b'Will prevent stale aggressive cache misses\n'
1090994,304,b'Document Raven/IndexStoragePath',b''
1090993,303,b'Document - Raven/Esent/LogsPath',b'Raven/Esent/LogsPath - for moving the path to a different place - good for perf\n'
1062547,302,b'Ensure RavenDB works on Mono/Linux',b''
1045678,301,b'AccessMode None is not respected in IIS',"b'Not sure why, need to test this further\n'"
1045396,300,b'Production error',"b'[EsentErrorException: Error AlreadyInitialized (JET_errAlreadyInitialized, Database engine already initialized)]\n   Microsoft.Isam.Esent.Interop.Api.Check(Int32 err) in C:\\Work\\ravendb\\SharedLibs\\Sources\\ManagedEsent-48322\\EsentInterop\\Api.cs:2253\n   Microsoft.Isam.Esent.Interop.SystemParameters.SetIntegerParameter(JET_param param, Int32 value) in C:\\Work\\ravendb\\SharedLibs\\Sources\\ManagedEsent-48322\\EsentInterop\\SystemParameters.cs:239\n   Raven.Storage.Esent.TransactionalStorage..cctor() in c:\\Builds\\raven-unstable\\Raven.Storage.Esent\\TransactionalStorage.cs:55\n\n[TypeInitializationException: The type initializer for &#39;Raven.Storage.Esent.TransactionalStorage&#39; threw an exception.]\n   System.RuntimeMethodHandle._InvokeConstructor(IRuntimeMethodInfo method, Object[] args, SignatureStruct&amp; signature, RuntimeType declaringType) +0\n   System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) +517\n   System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) +12732877\n   System.Activator.CreateInstance(Type type, Object[] args) +38\n   Raven.Database.Config.InMemoryRavenConfiguration.CreateTransactionalStorage(Action notifyAboutWork) in c:\\Builds\\raven-unstable\\Raven.Database\\Config\\InMemoryRavenConfiguration.cs:408\n   Raven.Database.DocumentDatabase..ctor(InMemoryRavenConfiguration configuration) in c:\\Builds\\raven-unstable\\Raven.Database\\DocumentDatabase.cs:117\n   Raven.Web.ForwardToRavenRespondersFactory..cctor() in c:\\Builds\\raven-unstable\\Raven.Web\\ForwardToRavenRespondersFactory.cs:31\n\n[TypeInitializationException: The type initializer for &#39;Raven.Web.ForwardToRavenRespondersFactory&#39; threw an exception.]\n   Raven.Web.ForwardToRavenRespondersFactory..ctor() +0\n\n[TargetInvocationException: Exception has been thrown by the target of an invocation.]\n   System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean&amp; canBeCached, RuntimeMethodHandleInternal&amp; ctor, Boolean&amp; bNeedSecurityCheck) +0\n   System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache) +117\n   System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipVisibilityChecks, Boolean skipCheckThis, Boolean fillCache) +247\n   System.Activator.CreateInstance(Type type, Boolean nonPublic) +106\n   System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) +12732877\n   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture) +28\n   System.Web.HttpRuntime.CreateNonPublicInstance(Type type, Object[] args) +83\n   System.Web.Configuration.HandlerFactoryCache..ctor(String type) +57\n   System.Web.HttpApplication.GetFactory(String type) +95\n   System.Web.MaterializeHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +352\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously) +371\n'"
1045335,299,b'Document aggressive caching mode',b''
1045081,298,b'Document CutoffEtag',b'Document how it works and the impact on map/reduce operations\n'
1044078,297,b'reproduceable ET_errFileAccessDenied when using replication and deleting Data dir',"b'Repro steps.  The repro takes awhile, I saw the same result 3 times in a row.  This may be a ""don\'t do that"" kind of problem, it seems like a scenario that might only occur when testing out replication.\n1. Set up 2 instances of RavenDB in IIS (unstable build 376)\n   (I actually have 3 running when I repro\'d, but I don\'t know thats significant the third is idle)\n   (each is in its own application pool)\n2. Set up replication from one machine to the other\n   - copying the bundle to the plugins directory\n   - manually added the target host to Raven/Replication/Destinations\n   - I observe at this point that replication is working\n3. Run iisreset /stop \n4. Delete the data directory of the replication source\n5. Run iisreset\n6. Visit the source RavenDB server\n\nResult is a YSOD.  Note that the file referenced in the error information does not exist-- the error says c:\\inetpub\\127-0-0-2-dearly.test-ravendb\\Data\\Data cannot be accessed, but the base directory was deleted (c:\\inetpub\\127-0-0-2-dearly.test-ravendb\\Data\\ does not exist).\nCreating the c:\\inetpub\\127-0-0-2-dearly.test-ravendb\\Data\\ directory does not stop the error.  Sysinternal\'s Process explorer did not show any processes accessing that file.\nError still happens after reboot.\nError still repros after stopping all other IIS sites on the system.\nThe error does go away if I redeploy from scratch.\n\nThe YSOD error details are here:\n\n```\nError FileAccessDenied (JET_errFileAccessDenied, Cannot access file, the file is locked or in use)\n\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \n\nException Details: Microsoft.Isam.Esent.Interop.EsentErrorException: Error FileAccessDenied (JET_errFileAccessDenied, Cannot access file, the file is locked or in use)\n\nSource Error: \n\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.\n\nStack Trace: \n\n\n[EsentErrorException: Error FileAccessDenied (JET_errFileAccessDenied, Cannot access file, the file is locked or in use)]\n   Microsoft.Isam.Esent.Interop.Api.Check(Int32 err) in C:\\Work\\ravendb\\SharedLibs\\Sources\\ManagedEsent-48322\\EsentInterop\\Api.cs:2253\n   Raven.Storage.Esent.TransactionalStorage.Initialize(IUuidGenerator uuidGenerator) in c:\\Builds\\raven-unstable\\Raven.Storage.Esent\\TransactionalStorage.cs:169\n\n[InvalidOperationException: Could not open transactional storage: c:\\inetpub\\127-0-0-2-dearly.test-ravendb\\Data\\Data]\n   Raven.Storage.Esent.TransactionalStorage.Initialize(IUuidGenerator uuidGenerator) in c:\\Builds\\raven-unstable\\Raven.Storage.Esent\\TransactionalStorage.cs:184\n   Raven.Database.DocumentDatabase..ctor(InMemoryRavenConfiguration configuration) in c:\\Builds\\raven-unstable\\Raven.Database\\DocumentDatabase.cs:157\n   Raven.Web.ForwardToRavenRespondersFactory..cctor() in c:\\Builds\\raven-unstable\\Raven.Web\\ForwardToRavenRespondersFactory.cs:31\n\n[TypeInitializationException: The type initializer for \'Raven.Web.ForwardToRavenRespondersFactory\' threw an exception.]\n   Raven.Web.ForwardToRavenRespondersFactory..ctor() +0\n\n[TargetInvocationException: Exception has been thrown by the target of an invocation.]\n   System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck) +0\n   System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache) +117\n   System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipVisibilityChecks, Boolean skipCheckThis, Boolean fillCache) +247\n   System.Activator.CreateInstance(Type type, Boolean nonPublic) +106\n   System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) +12732877\n   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture) +28\n   System.Web.HttpRuntime.CreateNonPublicInstance(Type type, Object[] args) +83\n   System.Web.Configuration.HandlerFactoryCache..ctor(String type) +57\n   System.Web.HttpApplication.GetFactory(String type) +95\n   System.Web.MaterializeHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +352\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +371\n```\n'"
1004329,296,b'YSOD: Property value for CacheControl is not valid. Value=max-age=0. ',"b'  Running the latest out of ayende/master, hosting the Raven.Web in IIS, I can get a IIS error by hitting the reload button on the browser.  Repro\'d on Firefox4 and chrome.  Below is the error information:\n\nProperty value for CacheControl is not valid. Value=max-age=0.\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \nException Details: System.ArgumentException: Property value for CacheControl is not valid. Value=max-age=0.\n\nSource Error: \n\n```\nLine 29:            if(string.IsNullOrEmpty(context.Request.Headers[""Cache-Control""]) == false)\nLine 30:            {\nLine 31:                context.Response.CacheControl = request.Headers[""Cache-Control""];\nLine 32:            }\n```\n\nSource File: c:\\src\\ravendb\\Raven.Http\\Abstractions\\HttpContextAdapter.cs    Line: 31 \n\nStack Trace: \n\n```\n[ArgumentException: Property value for CacheControl is not valid. Value=max-age=0.]\nSystem.Web.HttpResponse.set_CacheControl(String value) +329\nRaven.Http.Abstractions.HttpContextAdapter..ctor(HttpContext context, IRavenHttpConfiguration configuration) in c:\\src\\ravendb\\Raven.Http\\Abstractions\\HttpContextAdapter.cs:31\nRaven.Web.ForwardToRavenResponders.ProcessRequest(HttpContext context) in c:\\src\\ravendb\\Raven.Web\\ForwardToRavenResponders.cs:25\nSystem.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +597\nSystem.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +266\n```\n'"
990849,295,b'Raven server memory problem related to lots of writes',"b"" If I run a an ETL long enough, the memory used by RavenDB goes up and eventually the system fails.  I haven't looked at this much, I think this weekend I will get to work on my RavenDB related prototyping some more.\n\n  I prepared a repro based on the Stackoverflow ETL.  The ETL code to only import the user and post data, this keeps the ETL client memory usage down.  Now when I run the ETL program repeatedly, effectively rewriting the same objects repeatedly, the systems performance slowly degrades and the ETL eventually crashes.\n\n  RavenDB server's memory usage starts between 1-2gig and slowly increased to 9 gig.  While memory will peridiocally drop and recover, the amount of this drop decreases over time so that eventually the RavenDB service is using all available memory.  (the machine I ran this on is fast, SSD drive, but only 8 gigs of memory)\n\n  Running an ETL like this isn't a production scenario, but I worry this represents a memory problem that could occur over time during normal operation.\n\n  Myself, I plan to work around this with my ETL by restarting the RavenDB process periodically during the ETL.  This will let me move on and get back to prototyping interesting queries.  The memory issue will still need to be addressed.\n\n  To repro, this branch has a minor change to only import user/post data:  https://github.com/fschwiet/ravendb/commits/memory_pressure\n\n  Here is a script which is basically what I ran last night:\n\n```\n    Raven.StackOverflow.etl xml2file c:\\stackoverflow\\Documents c:\\stackoverflow\\commands\n\n    while ($true) {\n     Raven.Stackoverflow.etl.exe file2raven c:\\stackoverflow\\commands http://127.0.0.1:8080/\n    }\n```\n\n  I watched it for an hour, memory usage was eventually pegged at 8 gigs with the write operations being noticebly slower, sometimes pausing for seconds at a time.  By morning the ETL had crashed with the below callstack.  I don't know that the callstack will be important as its from the client (when the problem is apparently on the server), but I include it for completeness:\n\nUnhandled Exception: System.AggregateException: One or more errors\noccurred. ---> System.NullReferenceException: Object\nreference not set to an instance of an object.\n  at Raven.StackOverflow.Etl.FileToRavenCommand.<>c__DisplayClass3.<LoadDataFor>b__0()\nin c:\\src\\ravendb\\ETL\\Raven.StackOverflow.Etl\\FileToRavenCommand.cs:line\n78\n  at Raven.StackOverflow.Etl.FileToRavenCommand.<ExecuteAndWaitAll>b__10(Action\naction) in c:\\src\\ravendb\\ETL\\Raven.StackOverflow.Etl\\FileToRavenCommand.cs:line\n101\n  at System.Threading.Tasks.Parallel.<>c__DisplayClass32`2.<PartitionerForEachWorker>b__30()\n  at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\n  at System.Threading.Tasks.Task.<>c__DisplayClass7.<ExecuteSelfReplicating>b__6(Object\n)\n  --- End of inner exception stack trace ---\n  at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout,\nCancellationToken cancellationToken)\n  at System.Threading.Tasks.Task.Wait()\n  at System.Threading.Tasks.Parallel.PartitionerForEachWorker[TSource,TLocal](Partitioner`1\nsource, ParallelOptions parallelOptions, Action`1 simpleBody, Action`2\nbodyWithState, Action`3 bodyWithStateAndIndex, Func`4\nbodyWithStateAndLocal, Func`5 bodyWithEverything, Func`1 localInit,\nAction`1 localFinally)\n  at System.Threading.Tasks.Parallel.ForEachWorker[TSource,TLocal](IEnumerable`1\nsource, ParallelOptions parallelOptions, Action`1 body, Action`2\nbodyWithState, Action`3 bodyWithStateAndIndex, Func`4\nbodyWithStateAndLocal, Func`5 bodyWithEverything, Func`1 localInit,\nAction`1 localFinally)\n  at System.Threading.Tasks.Parallel.ForEach[TSource](IEnumerable`1\nsource, ParallelOptions parallelOptions, Action`1 body)\n  at Raven.StackOverflow.Etl.FileToRavenCommand.ExecuteAndWaitAll(IEnumerable`1[]\ntaskGenerators) in\nc:\\src\\ravendb\\ETL\\Raven.StackOverflow.Etl\\FileToRavenCommand.cs:line\n93\n  at Raven.StackOverflow.Etl.FileToRavenCommand.Run() in\nc:\\src\\ravendb\\ETL\\Raven.StackOverflow.Etl\\FileToRavenCommand.cs:line\n29\n  at Raven.StackOverflow.Etl.Program.Main(String[] args) in\nc:\\src\\ravendb\\ETL\\Raven.StackOverflow.Etl\\Program.cs:line\n88\n"""
983076,294,b'Consider analyzers in the query optimizer',b'Customer analyzers should role out an index\n'
916406,292,b'Support Type information caching in the client API',"b'GetIdentityProperty, GetFullNameWithoutVersionInformation.\n'"
864509,291,b'Allow manually promoting temp index through an explicit DB call',b'Useful for easy creation of simple indices\n'
862544,290,b'Minor Packaging issue with new Embeddable RavenDb Package (360)',"b""Just downloaded the new nuget ravendb embeddable bits for my little project here. Unfortuantely it has been a bit of a non-starter, it seems the package is including Json.Net 4.0.2 and something in RavenDb wants 4.0.0:\n\nServiceBehaviorTests : FailedSetUp : System.IO.FileLoadException : Could not load file or assembly 'Newtonsoft.Json, Version=4.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\nat Raven.Client.Document.DocumentConvention..ctor()\nat Raven.Client.Document.DocumentStore..ctor() in c:\\Builds\\raven\\Raven.Client.Lightweight\\Document\\DocumentStore.cs: line 135\nat Raven.Client.Embedded.EmbeddableDocumentStore..ctor() in c:\\Builds\\raven\\Raven.Client.Embedded\\EmbeddableDocumentStore.cs: line 29\nat Ncta.CableShow.Live.Tests.RavenDbLiveShowServiceTests.ServiceBehaviorTests.Arrange() in ServiceBehaviorTests.cs: line 29 \n"""
842920,289,b'Projection does not seem to be currently supported',"b""Build:353\n\nIssue: Projection doesn't seem to be currently supported.\n\nvar postReference = Session.Query<Post>()\n                .Select(p => new {RavenId = p.Id, p.Title})\n                .FirstOrDefault();\n\npostReference.RavenId is null, but should be with the Post.Id value.\n"""
842217,288,b'Where statement with the same parameter twice',"b'It seems to be an issue with the same parameter that appeared twice in a Where method. For example:\n\n.Where(s => s.Position >= 3 && s.Position < 5)\n\nThis is throws an exception with the message: \n\n{\n  ""Url"": ""/indexes/dynamic/Sections?query=Position_Range%253A%257B*%2520TO%25200x00000006%257D%2520AND%2520Position_Range%253A%255B0x00000004%2520TO%2520NULL%255D&start=0&pageSize=128&aggregation=None&sort=Position"",\n  ""Error"": ""System.ArgumentException: An item with the same key has already been added.\\r\\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\\r\\n   at Raven.Database.Data.DynamicQueryMapping.CreateIndexDefinition() in c:\\\\Builds\\\\raven-unstable\\\\Raven.Database\\\\Data\\\\DynamicQueryMapping.cs:line 130\\r\\n   at Raven.Database.Queries.DynamicQueryRunner.TouchTemporaryIndex(String temporaryIndexName, String permanentIndexName, Func`1 createDefinition) in c:\\Builds\\raven-unstable\\Raven.Database\\Queries\\DynamicQueryRunner.cs:line 133\\r\\n   at Raven.Database.Queries.DynamicQueryRunner.GetAppropriateIndexToQuery(String entityName, IndexQuery query, DynamicQueryMapping map) in c:\\Builds\\raven-unstable\\Raven.Database\\Queries\\DynamicQueryRunner.cs:line 90\\r\\n   at Raven.Database.Queries.DynamicQueryRunner.ExecuteDynamicQuery(String entityName, IndexQuery query) in c:\\Builds\\raven-unstable\\Raven.Database\\Queries\\DynamicQueryRunner.cs:line 36\\r\\n   at Raven.Database.Queries.DynamicQueryExtensions.ExecuteDynamicQuery(DocumentDatabase self, String entityName, IndexQuery indexQuery) in c:\\Builds\\raven-unstable\\Raven.Database\\Queries\\DynamicQueryExtensions.cs:line 17\\r\\n   at Raven.Database.Server.Responders.Index.PerformQueryAgainstDynamicIndex(IHttpContext context, String index, IndexQuery indexQuery, Guid& indexEtag) in c:\\Builds\\raven-unstable\\Raven.Database\\Server\\Responders\\Index.cs:line 186\\r\\n   at Raven.Database.Server.Responders.Index.ExecuteQuery(IHttpContext context, String index, Guid& indexEtag) in c:\\Builds\\raven-unstable\\Raven.Database\\Server\\Responders\\Index.cs:line 146\\r\\n   at Raven.Database.Server.Responders.Index.GetIndexQueryRessult(IHttpContext context, String index) in c:\\Builds\\raven-unstable\\Raven.Database\\Server\\Responders\\Index.cs:line 102\\r\\n   at Raven.Database.Server.Responders.Index.OnGet(IHttpContext context, String index) in c:\\Builds\\raven-unstable\\Raven.Database\\Server\\Responders\\Index.cs:line 94\\r\\n   at Raven.Database.Server.Responders.Index.Respond(IHttpContext context) in c:\\Builds\\raven-unstable\\Raven.Database\\Server\\Responders\\Index.cs:line 46\\r\\n   at Raven.Http.HttpServer.DispatchRequest(IHttpContext ctx) in c:\\Builds\\raven-unstable\\Raven.Http\\HttpServer.cs:line 369\\r\\n   at Raven.Http.HttpServer.HandleActualRequest(IHttpContext ctx) in c:\\Builds\\raven-unstable\\Raven.Http\\HttpServer.cs:line 198""\n}\n'"
842209,287,b'Loading with id=0 throws an exception: ArgumentNullReference',"b""Build: 353.\n\nSession.Load<Section>(0) throws an ArgumentNullReference Exception. \nIt'll be preferred to just return null.\n"""
842131,286,b'SL UI - Bug deleting document',"b'It is cached in the client, and even though it was deleted on the server, it is still visible on the client.\ndeleting should trigger immediate update to all elements on the screen\n'"
838295,285,b'Deleting a document from the studio - not deleted',"b'Action: Document > Delete.\nThe UI confirm the delete, but the document is still there.\nBuild: 347.\n'"
808230,284,b'minor packaging issue: smuggler is missing Newtonsoft.json.dl',"b""  Downloading 344, if I run smuggler directly from the unzipped result, it fails complaining that Newtonsoft.json.dll is not available.  Copying the DLL to the same path resolved the issue.\n\nuser@NZNZNZ6 RavenDB-Unstable-Build-344> .\\RavenSmuggler.exe out http://dearly.test:8080/ dump.raven\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Newtonsoft.Json, Version=4.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed' or one of its dependencies. The system cannot find the file specified.\nFile name: 'Newtonsoft.Json, Version=4.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'\n   at Raven.Smuggler.Smuggler.ExportData(String instanceUrl, String file, Boolean exportIndexesOnly)\n   at Raven.Smuggler.Smuggler.Main(String[] args) in c:\\Builds\\raven-unstable\\Raven.Smuggler\\Smuggler.cs:line 53\n\nWRN: Assembly binding logging is turned OFF.\nTo enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog](DWORD) to 1.\nNote: There is some performance penalty associated with assembly bind failure logging.\nTo turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\n"""
798400,283,b'Document Temp-Index-Score',b''
793509,282,b'Use nuget dependencies for ravendb',b'log4net & newtonsoft.json should be dependecies\n'
789301,281,b'Document new replication failure behavior',"b'Changed replication behavior in several important ways:\n- Automatic replication repeat will happen 30 seconds after the last update\n- After the first automatic replication repeat, we will perform auto repeats every 5 minutes.\n- After the first update, we will reset to waiting 30 seconds for the next update or do an auto repeat.\n- When performing an auto repeat (but not when running because of data modification), we will NOT consider failures for the nodes.\n\nWhat this means is that even if you had a period of failure in your system, and it was fixed, but the replication bundle still considers your node to be failing (maybe it was down for a long time), it would fix itself within 5 minutes at most.\n'"
783614,280,b'Start.cmd file',"b'Issues with the .cmd file:\n1. The RavenDB can run on any random port, not just 8080.\n2. The browser should be open only after that port is return a successful ping message.\n\nSince that Start.cmd file hides something trivial that every RavenDB developer should know, I suggest to remove that file and let the users to implement this file themselves.\n'"
780794,279,b'Document Raven/TempIndexInMemoryMaxMB',b''
780671,278,b'DateTimeOffset converter for lucene dates',b'Right now we throw\n'
780626,277,b'Reduce memory usage and staleness for Raven indexes',"b'We should be able to use one index reader and a few index writers with a careful design, possibly using some ideas from Zoie.\n## Multi writes:\n\nFS Directory:\n { ""__document_id"": ""users/1234"", ""name"": ""oren"" }\n {""__document_id"": ""users/3214"", ""name"": ""itamar"" }\n\nRAM Directory:\n {""__document_id"": ""users/1234"", ""name"": ""eini"" }\n {""__document_id"": ""users/3158"", ""name"": fitzchak"" } \n\nExpected:\n\n__document_id:users/1234 - one result, name: eini\nname:oren - no results\nname:fitzchak - one result\n_:_ - three results\nname:itamar - one result\n\n///////\n## Deletes:\n\nFS Directory: \n { ""__document_id"": ""users/1234"", ""name"": ""oren"" }\n {""__document_id"": ""users/3214"", ""name"": ""itamar"" }\n\nRAM Directory:\n {""__document_id"": ""users/1234"", ""name"": ""eini"" }\n {""__document_id"": ""users/3158"", ""name"": fitzchak"" } \n {""__document_id"": ""users/3214"", DELETED }\n\nExpected:\n\n__document_id:users/1234 - one result, name: eini\nname:oren - no results\nname:fitzchak - one result\n_:_ - two results\nname:itamar - no  result\n'"
780372,276,b'Supprtting faceted searches',b''
780358,275,b'Temp index escalation into Auto should use copy instead of re-index',"b'In DynamicQueryRunner.TempIndexToPermenantIndex\nUtilize Lucene.Net.Storage.Directory.Copy, and be able to queue new documents for indexing\n'"
780023,274,b'Temp indexes should reside in memory',"b'Up until the point where they become too large. \nMake this configurable, but a default of 25MB in size seems reasonable, and would actually cover most cases.\nIf this is too big, the temp index would drop to File Directory\n'"
779708,273,"b'running RavenDB in memory, index creation still creates a directory (unstable build 330)'","b""  I have an MVC app that runs RavenDB in memory for its tests.  RavenDB is creating a Data directory that is otherwise empty except for path Data\\IndexDefinitions\\TemporaryIndexDefinitionsAsSource.\n\n  When it runs without sufficient permissions to create the file, I get an exception showing where the file is created:\n\n[UnauthorizedAccessException: Access to the path 'C:\\inetpub\\dearly.test\\Data\\IndexDefinitions\\TemporaryIndexDefinitionsAsSource' is denied.]\n   System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) +12892919\n   System.IO.Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj) +1594\n   System.IO.Directory.CreateDirectory(String path) +311\n   Raven.Database.Linq.DynamicViewCompiler..ctor(String name, IndexDefinition indexDefinition, OrderedPartCollection`1 extensions, String basePath) in c:\\Builds\\raven-unstable\\Raven.Database\\Linq\\DynamicViewCompiler.cs:51\n   Raven.Database.Storage.IndexDefinitionStorage.AddAndCompileIndex(IndexDefinition indexDefinition) in c:\\Builds\\raven-unstable\\Raven.Database\\Storage\\IndexDefinitionStorage.cs:144\n   Raven.Database.Storage.IndexDefinitionStorage.AddIndex(IndexDefinition indexDefinition) in c:\\Builds\\raven-unstable\\Raven.Database\\Storage\\IndexDefinitionStorage.cs:130\n   Raven.Database.DocumentDatabase.PutIndex(String name, IndexDefinition definition) in c:\\Builds\\raven-unstable\\Raven.Database\\DocumentDatabase.cs:546\n   Raven.Client.Embedded.EmbededDatabaseCommands.PutIndex(String name, IndexDefinition definition, Boolean overwrite) in c:\\Builds\\raven-unstable\\Raven.Client.Embedded\\EmbededDatabaseCommands.cs:227\n   Raven.Client.Indexes.AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention) in c:\\Builds\\raven-unstable\\Raven.Client.Lightweight\\Indexes\\AbstractIndexCreationTask.cs:81\n   Raven.Client.Indexes.IndexCreation.CreateIndexes(ExportProvider catalogToGetnIndexingTasksFrom, IDatabaseCommands databaseCommands, DocumentConvention conventions) in c:\\Builds\\raven-unstable\\Raven.Client.Lightweight\\Indexes\\IndexCreation.cs:44\n   Raven.Client.Indexes.IndexCreation.CreateIndexes(ExportProvider catalogToGetnIndexingTasksFrom, IDocumentStore documentStore) in c:\\Builds\\raven-unstable\\Raven.Client.Lightweight\\Indexes\\IndexCreation.cs:55\n   Raven.Client.Indexes.IndexCreation.CreateIndexes(Assembly assemblyToScanForIndexingTasks, IDocumentStore documentStore) in c:\\Builds\\raven-unstable\\Raven.Client.Lightweight\\Indexes\\IndexCreation.cs:32\n   Dearly.RavenDb.RavenRepository.InitializeStore(IDocumentStore store) in c:\\src\\Dearly\\Dearly\\RavenDb\\RavenRepository.cs:63\n"""
763138,272,b'Query Optimizer should re-write query',b'If the field names are different\n\nhttp://groups.google.com/group/ravendb/browse_thread/thread/81d7a6bacbeb1a82\n'
758540,270,b'Synchronize permissions for creating/resetting indexes',"b""Right now anyone can create index, but only admin reset it.\nDoesn't really make sense.\n"""
758526,269,b'Include server start time in generated etags',"b'Why?\nBecause if we restart the server, we usually create a new one, and that generates a lot of confusion for me.\n'"
757757,268,b'Document In support',b'The Linq extension method\n'
737698,266,b'Investigate reducing memory using BufferManager',b'http://blog.smithfamily.dk/post/2011/01/22/Efficient-buffering-with-BufferManager.aspx \n\nhttp://msdn.microsoft.com/en-us/library/system.servicemodel.channels.buffermanager.aspx\n'
734020,265,b'SimpleReplication error',"b'Raven.Bundles.Tests.Replication.SimpleReplication.Can_replicate_between_two_instances [FAIL]\n   Assert.NotNull() Failure\n   Stack Trace:\n      c:\\Work\\stable-ravendb\\Bundles\\Raven.Bundles.Tests\\Replication\\SimpleReplication.cs(42,0): at Raven.Bundles.Tests.\nReplication.SimpleReplication.Can_replicate_between_two_instances()\n'"
729921,264,b'OOTB Azure support',b''
728060,263,b'Document GetRevisionsFor',b''
724097,262,b'Distribute map reduce requests',"b'map should be done in parallel onto all nodes with shared related to the query.\nreduce done at the first calling node.\n\nIn order to do this the knowledge of the replication and sharding must be known to the core query engine though. So the current replication bundle needs to be totally changed i would presume.\n\nIf your not going for a CAP based theorum, and prefer classical sharding, then you just have to model that in a discoverable way so that the query engine knows where to distribute the map part of the query.\n'"
721870,260,b'Index etag should include index contents',"b'When you change index definition, the cache should be cleared\n'"
717533,259,b'Document distinct queries',b'How they work? Limitation? Etc?\n'
710185,258,b'JsonEnumConverter fail on Nullable<TypeEnum>',"b""I'm using various MyTypeEnum? as properties of my entities. RavenDb store the document but is not able to create the object from Json.Net serialization.\nMy rough solution was to copy Json.NET implementation of Enum converter in order to retrieve instance type of Nullable<?>\n\n<pre><code>\npublic override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n        {\n            var type = EnsureNotNullableType(objectType);\n            return Enum.Parse(type, reader.Value.ToString(), true);\n        }\n\n        public bool IsNullableType(Type t)\n        {\n           \n            return (t.IsGenericType && t.GetGenericTypeDefinition() == typeof(Nullable<>));\n        }\n\n        public Type EnsureNotNullableType(Type t)\n        {\n            return (IsNullableType(t)) ? Nullable.GetUnderlyingType(t) : t;\n        }\n</code></pre>\n"""
701283,257,b'Handle big attachments',b'- streaming\n- resumable\n- partial uploads\n'
700328,256,b'Evaluate lucene-mem branch',b'a) some tests are failing\nb) see if this is good for reducing memory / runtime cost\n'
693686,255,b'When using versioning & replication - there are conflicts',b'We should allow a better way to control the replication + versioning story.\nRight now it generates conflicts when both are used together\n'
690625,254,b'IsStaleByEtag - faster when currently indexing',"b'We are doing a scan right now, which can be slow on big databases, we need to be able to do a seek\n'"
680948,253,b'local database transfer',b'How can i  transfer one local database whole data to other local database  ?\n'
675062,252,b'Resolve issue with JSON parsing',"b'For very large documents.\nWould be easier to replace Json.net than fix it.\nConsider affects on the client API, need to at least preserve some of the API to make it easier to port.\n'"
671801,251,"b'When running inside IIS, figure out port & virtual dir'","b'On our own, without relying on the configuration\n'"
623355,250,b'Queries can result in selecting the wrong index',"b'When I add set of products which can have 1 or more categories, a query by category id works fine and an index Temp/Products/ByCategoriesId is created. A Count() also gives the correct result (10 for the example code below). When I get the Count() for all products after the previous query, I get a wrong result which looks like the count of the \'cartesian product\' of the products and categories. For the example below it is 50 (each one of 10 product has 5 categories).\n\nWhen I don\'t run the 1st query and only the 2nd one to query all products, a different index Temp/Products is created and the correct result for Count() is returned.\n\n```\npublic class Program\n{\n    static void Main()\n    {\n        using (var store = new DocumentStore { Url = ""http://localhost:8080"" })\n        {\n            store.Initialize();\n            using (var session = store.OpenSession())\n            {\n                CreateTestData(session);\n\n                QueryByCategory(session, ""category-1"");\n                QueryByCategory(session, null);\n            }\n        }\n\n        Console.ReadKey();\n    }\n\n    private static void QueryByCategory(IDocumentSession session, string category)\n    {\n        Console.WriteLine(""query by \'"" + category + ""\'"");\n\n        var query = session.Query<Product>().Customize(x => x.WaitForNonStaleResults());\n\n        if (category != null)\n        {\n            query = query.Where(p => p.Categories.Any(c => c.Id == category));\n        }\n\n        Console.WriteLine(query.Count());\n        foreach (var product in query)\n        {\n            Console.WriteLine(product.Id);\n        }\n    }\n\n    public static void CreateTestData(IDocumentSession session)\n    {\n        var categories = Enumerable.Range(1, 5).Select(j => new Category { Id = ""category-"" + j }).ToList();\n        for (var i = 1; i <= 10; i++)\n        {\n            var product = new Product\n                {\n                    Id = ""product-"" + i,\n                    Categories = categories\n                };\n\n            session.Store(product);\n        }\n\n        session.SaveChanges();\n    }\n\n    public class Product\n    {\n        public string Id { get; set; }\n        public IEnumerable<Category> Categories { get; set; }\n    }\n\n    public class Category\n    {\n        public string Id { get; set; }\n    }\n}\n```\n'"
609412,247,b'Linear Query Results are fragmented',"b'When executing a linear query (posting a linq query as a string to /linearQuery), the results are fragmented. For example, if there are 25 total results and a requested page size of 5, you might get 1 result on the 1st page, 5 results on the 2nd page, 2 results on the 3rd page, etc.\n'"
606417,246,b'RavenDB.Net site: fix the search',"b""I read the following article: http://ravendb.net/faq/unique-constraints and saw the usage of  s.Advanced.UseOptimisticConcurrency which I decided I wanted to try to find more information about this and searched for it and found no results http://ravendb.net/Home/Search?q=UseOptimisticConcurrency doesn't return even http://ravendb.net/faq/unique-constraints\n"""
603135,245,b'Provide write only API',b'For bulk scenarios\nFire& forget\n'
603134,244,"b'When deleting Raven/Databases/foo database, should drop the foo db'",b'This allow programmatic access to handle this\n'
596869,243,b'Sharding: Enable linq queries',b'Should be just a matter of passing ShardedDocumentQuery\n'
596868,242,b'Sharding: Should support Take',"b'So we can execute:\n\n= session.Advanced.LuceneQuery<Person>()\n                   .WaitForNonStaleResults()\n                   .OrderBy(""Name"")\n                   .Take(1)\n                   .ToArray();\n'"
596866,241,b'Sharding: Should sort sharded results',b'So the values are sorted internally.\n'
596854,240,b'Big docs perf issues',"b'Parsing the BSON takes time, we need to think about ways to avoid that\n'"
543919,237,b'Attachment Content-Type are ignored in IIS 7+',b'Step to reproduce:\n- Try to add a CSS into the /static with header: Content-Type: text/css\n- Query the static : Content-Type is text/html (the default)\n\nit is because Response.Headers.Add is used instead of Response.AddHeader.\nI will post a patch\n'
541418,236,b'Problem with relations in index',"b'This worked in 237 but failing in 261\n    public class RelationIdIndex : LocalClientTest\n    {\n        [Fact]\n        public void CanBeUsedForTransformResultsWithDocumentId()\n        {\n            using (var store = NewDocumentStore())\n            {\n                new ThorIndex().Execute(store);\n\n```\n            var relId = Guid.NewGuid();\n            using (var s = store.OpenSession())\n            {\n                s.Store(new Thor\n                            {\n                                Id = Guid.NewGuid(),\n                                Name = ""Thor"",\n                                Rel = new Relation\n                                        {\n                                            Id = relId\n                                        }\n                            });\n                s.SaveChanges();\n            }\n\n            using (var s = store.OpenSession())\n            {\n                var objects = s.Query<Thor, ThorIndex>()\n                    .Customize(x => x.WaitForNonStaleResults())\n                    .ToArray();\n                Assert.Equal(1, objects.Length);\n                Assert.Equal(relId, objects[0].Rel.Id);\n\n                objects = s.Query<Thor, ThorIndex>()\n                    .Customize(x => x.WaitForNonStaleResults())\n                    .Where(item => item.Rel.Id == relId)\n                    .ToArray();\n\n                Assert.Equal(1, objects.Length);\n                Assert.Equal(relId, objects[0].Rel.Id);\n            }\n        }\n    }\n}\n\npublic class ThorIndex : AbstractIndexCreationTask<Thor>\n{\n    public ThorIndex()\n    {\n        Map = thors => from doc in thors\n                       select new { doc.Name, doc.Rel.Id };\n    }\n}\n\npublic class Thor\n{\n    public Guid Id { get; set; }\n    public string Name { get; set; }\n    public Relation Rel { get; set; }\n}\n\npublic class Relation\n{\n    public Guid Id { get; set; }\n}\n```\n'"
539336,235,b'Current version served up by Nuget will not launch server',"b""when attempting to launch the server after installing Raven using Nuget the following exception is thrown:\n\nSystem.IO.FileNotFoundException: Could not load file or assembly 'Raven.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=37f41c7f99471593' or one of its dependencies. The system cannot find the file specified.\nFile name: 'Raven.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=37f41c7f99471593'\n   at Raven.Database.Indexing.WorkContext..ctor()\n   at Raven.Database.DocumentDatabase..ctor(InMemroyRavenConfiguration configuration)\n   at Raven.Server.RavenDbServer..ctor(RavenConfiguration settings)\n   at Raven.Server.Program.RunInDebugMode(Nullable`1 anonymousUserAccessMode, RavenConfiguration ravenConfiguration)\n   at Raven.Server.Program.InteractiveRun(String[] args)\n   at Raven.Server.Program.Main(String[] args)\n"""
538905,234,b'KeywordAnalyzer not work as lucene',"b'a test as follow:\n\n```\nclass Program\n{\n    static IDocumentStore documentStore1 = new DocumentStore { Url = ""http://localhost:8080"" }.Initialize();\n    static void Main(string[] args)\n    {\n        using (var session = documentStore1.OpenSession())\n        {\n            session.Advanced.DatabaseCommands.PutIndex(""test"", new IndexDefinition\n            {\n                Map = @""from s in docs.Softs\n        select new { s.f_platform, s.f_name, s.f_alias,s.f_License,s.f_totaldownload}"",\n                Analyzers =\n            {\n                {""f_name"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                {""f_alias"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n            },\n                Indexes =\n            {\n                {""f_platform"", FieldIndexing.NotAnalyzed},\n                {""f_License"", FieldIndexing.NotAnalyzed},\n                {""f_totaldownload"", FieldIndexing.NotAnalyzed},\n                {""f_name"", FieldIndexing.Analyzed},\n                {""f_alias"", FieldIndexing.Analyzed},\n           },\n                SortOptions = \n            {\n                { ""f_totaldownload"", SortOptions.Int },\n                { ""f_License"", SortOptions.Int },\n            }\n\n            }, true);\n\n            Soft entity = new Soft\n            {\n                f_platform = 1,\n                f_name = ""hello Shrek"",\n                f_alias = ""world"",\n                f_License = ""agpl"",\n                f_totaldownload = -1\n            };\n            session.Store(entity);\n            session.Advanced.GetMetadataFor(entity)[""Raven-Entity-Name""] = ""Softs"";\n            session.SaveChanges();\n\n            List<Soft> tmps = session.Advanced.LuceneQuery<Soft>(""test"").\n                                    WaitForNonStaleResults()\n                                    .WhereStartsWith(""f_name"", ""s"")\n                                    .OrderBy(new[] { ""-f_License"", ""f_totaldownload"" })\n                                    .ToList();\n\n            foreach (var t1 in tmps)\n            {\n                Console.WriteLine(t1.f_name);\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n\npublic class Soft\n{\n    public int f_platform;\n    public string f_name;\n    public string f_alias;\n    public string f_License;\n    public int f_totaldownload;\n}\n```\n\nthis program will output hello Shrek\nAT http://ravendb.net/documentation/how-indexes-work\nKeyword Analyzer - tokenizes the entire stream as a single token.\nthis search shouldn\'t get any result\n\nOther, if I save some Chinese characters\xef\xbc\x8cper characters will be as a single token\n'"
536769,233,b'TransformResults not translate property .Id to .__document_id',"b'I\'m using Guid type as a Id and everything works fine except if I use TransformResult in AbstractIndexCreationTask<T> then .Id is not transformed to .__document_id.\nIt is strange as this works in Map and Reduce.\n\nSample (Note that Id is Guid type):\nTransformResults = (database, contents) => from item in contents\n                                                       select new\n                                                                {\n                                                                    Id = item.Id,\n                                                                    ContentType = item.ContentType\n                                                                };\ndoesn\'t work but if TransformResults is set manually to:\nindexDefinition.TransformResults =\n                @""results.Select(item => new { Id = item.__document_id, ContentType = item.ContentType })"";\n\nthen it works as expected.\n'"
527272,232,b'Make sure that all config options are documented',"b""Raven/IndexingPriority isn't\n"""
495112,229,b'Negating a combination of conditions surrounded by subclauses',"b'When using the following methods in the Advanced.LuceneQuery object:\n\n<pre>\n  query = query.Not;\n  query.OpenSubclause(); \n  query.WhereEquals(""IsPublished"", true); \n  query.AndAlso();\n  query.WhereEquals(""Tags.Length"", 0); \n  query.CloseSubclause(); \n</pre>\n\n\nThis is the desired result:\n\n<pre>\n-(IsPublished:true AND Tags.Length:0) \n</pre>\n\nnote the ""Not"" before the sub-clause... \n\nBut this is the actual result:\n\n<pre>\n(-IsPublished:true AND Tags.Length:0) \n</pre>\n\nThe ""Not"" is inside the sub-clause and on the first condition only. \n'"
493572,228,b'Document dynamic aggregation',b'Both for MapReduce and Dynamic Aggregation\n'
492786,227,b'Dynamic group by should use value equality',b'So we can compare complex objects\n'
492777,226,b'TransformResults should handle comma operator',"b'When grouping by Tags,Id should understand what this means.\n'"
489972,225,b'ExecuteDynamicQuery always waits 15 secondes for stale results',"b'ExecuteDynamicQuery always waits 15 secondes for stale results, but should (if at all) do this only when the index initially gets created.\n'"
484010,224,b'InvalidCastException: ParameterExpression to MemberExpression',"b'The following code causes an error:\n\n```\n[TestFixture]\npublic class TestCache\n{\n\n    public class cacheObject\n    {\n        public string Id { get; set; }\n    }\n\n    public class unCachedObject\n    {\n        public string Id { get; private set; }\n\n        public unCachedObject(cacheObject cachedObject)\n        {\n            Id = cachedObject.Id;\n        }\n\n    }\n\n    [Test]\n    public void ShouldSerialise()\n    {\n\n        var documentStore = new DocumentStore { Url = ""http://localhost:8080"" };\n        documentStore.Initialize();\n\n        var entity = new cacheObject { Id = Guid.NewGuid().ToString() };\n\n        using (var session = documentStore.OpenSession())\n        {\n            session.Store(entity);\n            session.SaveChanges();\n        }\n\n        using (var session = documentStore.OpenSession())\n        {\n            var entitys = session.Query<cacheObject>().Select(cachedObject => new unCachedObject(cachedObject)).ToArray();\n            foreach (var uncachedentity in entitys)\n                Console.WriteLine(uncachedentity.Id);\n        }\n\n    }\n}\n```\n\nError:\n\n```\nTest \'UnitTests.RavenCache.TestCache.ShouldSerialise\' failed: System.InvalidCastException : Unable to cast object of type \'System.Linq.Expressions.ParameterExpression\' to type \'System.Linq.Expressions.MemberExpression\'.\nat System.Linq.Enumerable.<CastIterator>d__aa`1.MoveNext()\nat System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\nat System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\nat System.Collections.Generic.List`1.AddRange(IEnumerable`1 collection)\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.VisitSelect(Expression operand)\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.VisitQueryableMethodCall(MethodCallExpression expression)\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.VisitMethodCall(MethodCallExpression expression)\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.VisitExpression(Expression expression)\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.ProcessExpression(Expression expression)\nat Raven.Client.Linq.RavenQueryProviderProcessor`1.Execute(Expression expression)\nat Raven.Client.Linq.DynamicRavenQueryProvider`1.Execute(Expression expression)\nat Raven.Client.Linq.DynamicRavenQueryProvider`1.System.Linq.IQueryProvider.Execute(Expression expression)\nat Raven.Client.Linq.RavenQueryable`1.GetEnumerator()\nat System.Linq.Buffer`1..ctor(IEnumerable`1 source)\nat System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\nRavenCache\\TestFundCache.cs(51,0): at FundsLibrary.WebService.UnitTests.RavenCache.TestFundCache.ShouldSerialise()\n```\n'"
477714,223,b'Provide extension point for custom analyzers',"b'So users can decide per field per document which analyzer to use.\nThat would allow greater flexibility, especially in multi lingual scenarios\n'"
477700,222,b'Issue the last etag indexed for queries',b'That would allow full caching of the results\n'
477698,221,"b'When defining analyzers, should check they exists'",b'When creating index\nShould also check that we can create an instance of them\n'
477697,220,b'RavenDB does not consider changing analyzer to change the index',b'It should\n'
477672,219,b'Should report error if cannot find analyzer',b'Right now it silently fails\n'
477649,218,b'Support comma in fetch request',b'Like we do for actual querying\n'
477648,217,b'Support dynamic aggregations',"b'Those aggregations are done on the MAP result.\nBasically, they are implemented as a Transform Results\n\nquery=User:Ayende&dynamic_aggregate=count\n\n//map\nfrom doc in docs\nselect new { doc.User }\n\n//transform\nthe aggregation\n'"
477647,216,b'Support map/reduce in dynamic indexes',"b'For example:\n\nquery=User:Ayende&aggregate=Count\n\nWill result in the following map reduce index\n\nfrom doc in docs\nselect new { doc.User, Count = 1 }\n\nfrom result in results\ngroup result by result.User into g\nselect new { User = g.Key, Count = g.Sum( x=> x.Count) }\n'"
477645,215,b'Report build version in server',b'Server output\nWeb UI\nConsole output\n'
476427,214,b'Document query for terms',b'And why we want that\n'
475734,213,b'Last-Modified metadata missing',"b'I\'m using EmbeddableDocumentStore with managed storage and metadata (GetMetadataFor) contain no ""Last-Modified"" for existing documents.\n'"
473820,212,b'Document projections & dynamic indexing',"b'public class Product_ByAttribute : AbstractIndexCreationTask<Product>\n{\n    public Product_ByAttribute()\n    {\n        Map = products =>\n            from p in products\n            select new\n            {\n                _ = Project(p.Attributes, attribute => new Field(attribute.Name, attribute.Value, Field.Store.NO, Field.Index.ANALYZED))\n            };\n    }\n}\n\n[Fact]\npublic void CanCreateCompletelyDynamicFields()\n{\n    using (var store = NewDocumentStore())\n    {\n        new Product_ByAttribute().Execute(store);\n\n```\n    using (var session = store.OpenSession())\n    {\n        session.Store(new Product\n        {\n            Attributes = new List<Attribute>\n            {\n                new Attribute{Name = ""Color"", Value = ""Red""}\n            }\n        });\n\n        session.SaveChanges();\n    }\n\n    using (var session = store.OpenSession())\n    {\n        var products = session.Advanced.LuceneQuery<Product>(""Product/ByAttribute"")\n            .WhereEquals(""Color"", ""Red"")\n            .WaitForNonStaleResults(TimeSpan.FromMinutes(3))\n            .ToList();\n\n        Assert.NotEmpty(products);\n    }\n}\n```\n\n}\n'"
473143,211,b'Multi Tenancy Index Creation Issue',"b'Posted to the groups but adding here also:\n\nSample test that fails with: \'There is no index named: TestIndex\'. I \ncan see the index has been created on the main DB but not on the \'Testing\' DB. \n\nThe created document gets added to \'Testing\' correctly, it is just the index creation.\n\nI am using unstable 217 build. \n\n[Test] \n        public void Mulitenancy_Test() \n        { \n            var store = new DocumentStore { Url = ""http://localhost: 8082"", DefaultDatabase = ""Test"" }; \n            store.Initialize(); \n            store.DatabaseCommands.PutIndex(""TestIndex"", \n                new IndexDefinition<Test, Test>() \n                { \n                    Map = movies => from movie in movies \n                                    select new { movie.Name } \n            }); \n            using (var sess = store.OpenSession()) \n            { \n                sess.Store(new Test { Name = ""xxx"" }); \n                sess.SaveChanges(); \n            } \n\n```\n        using (var sess = store.OpenSession()) \n        { \n            var result = sess.Query<Test>(""TestIndex"") \n                .Where(x => x.Name == ""xxx"") \n                .FirstOrDefault(); \n            Assert.IsNotNull(result); \n        } \n    } \n} \npublic class Test \n{ \n    public string Id { get; set; } \n    public string Name { get; set; } \n} \n```\n'"
464806,210,b'Load specific version of an entity',b'As Ayende requested:\n\nhttp://groups.google.com/group/ravendb/browse_thread/thread/f8ac2a1ede48305e\n'
462607,208,b'Order in which documents are inserted affects query result.',b'Please have a look at this thread:\nhttp://groups.google.com/group/ravendb/browse_thread/thread/2317dea050295fa7\n\n(4th post).\n\nedit:\nInvestigated further: this only happens on collections (arrays).\n'
462411,207,b'Enterprise RavenDB: Auto balance tenants ',"b'In a distributed ravendb, move tenants to inactive servers based on load\n'"
461489,206,b'Better indexing errors in the SL UI',"b'However if the error results were more along the lines\n\nIndex: UserByID, document: user/1 (link to document), select new\n{ doc.User.Name } results in NullReference Exception.\n'"
452041,205,b'Investigate slow bulk delete operation',"b'When deleting 181K documents, it took way too long\nhttp://groups.google.com/group/ravendb/browse_thread/thread/298363d330a2a677/50cc5b1a77ea5f22?lnk=raot#50cc5b1a77ea5f22\n'"
447922,204,b'Document the As query helper function',"b's.Query<UserForIndexingThatHasFullTextPRoperty>().Where(x=>x.FullText.Contains(""foo"")).As<User>()\n'"
447913,203,b'Document how the Linq works',b'How it translate queries to Lucene\nWhat sort of queries are possible\n'
440319,202,b'TransformResults should keep __document_id',"b""If we don't keep __document_id or __reduce_key, we are pretty much screwed\n"""
439953,201,b'Add a way to extract terms',b'So we can handle popularity\n'
439951,200,b'Document dynamic indexing',"b'Allowing to dynamically generate fields:\n\nfrom p in docs.Products\nfrom att in p.AttributeValues\ngroup att by att.ValueOf.Name into g\nselect new \n{ \n    _ = g.Select(x => new Lucene.Net.Documents.Field(g.Key, x.Value))\n}\n'"
438268,199,"b""why can't search H, B ""","b'I create a Index:\n            using (var session = documentStore.OpenSession())\n            {\n                session.DatabaseCommands.PutIndex(INDEX_SOFT_NAME, new IndexDefinition\n                {\n                    Map = @""from s in docs.Softs\n                            select new { s.f_platform, s.f_name, s.f_alias,s.f_License,s.f_totaldownload}"",\n                    Analyzers =\n                                {\n                                    {""f_name"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                                    {""f_alias"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                                },\n                    Indexes =\n                                {\n                                    {""f_platform"", FieldIndexing.NotAnalyzed},\n                                    {""f_License"", FieldIndexing.NotAnalyzed},\n                                    {""f_totaldownload"", FieldIndexing.NotAnalyzed},\n                                    {""f_name"", FieldIndexing.Analyzed},\n                                    {""f_alias"", FieldIndexing.Analyzed},\n                               },\n                    SortOptions = \n                                {\n                                    { ""f_totaldownload"", SortOptions.Int },\n                                    { ""f_License"", SortOptions.Int },\n                                }\n\n```\n            }, true);\n        }\n```\n# \n\nand some f_name startwith H, B\n\nsession.LuceneQuery<Soft>(INDEX_SOFT_NAME).Where(""f_platform:1 AND (f_name:*H* OR  f_alias:*H*)"").OrderBy(new[] { ""-f_License"", ""f_totaldownload"" }).Take(100);\n\nI can\'t get the records which start with h, but if it\'s not start H and contain H, can get\n\nif I search B like that\ni can\'t get anything\n'"
400399,195,b'Document collation support',b'SvCollactionAnalyzer\n'
394773,190,b'Document WhereEntityIs',b'soon\n'
394772,189,b'Document multi tenancy',b'soon\n'
394760,188,b'Failing test when running localized',"b""Raven.Tests.Queries.DyanmicQueries.CanGetErrorsInQueries [FAIL] \n    Assert.Equal() Failure \n    Position: First difference is at position 21 \n    Expected: Doc 'rahien', Error: Cannot perform runtime binding on a \nnull reference \n    Actual:   Doc 'rahien', Error: Die Laufzeitbindung kann f r einen \nNULL-Verweis nicht ausgef hrt werden. \n    Stack Trace: \n       bei Xunit.Assert.Equal[T](T expected, T actual, \nIEqualityComparer`1 comparer) \n       bei Raven.Tests.Queries.DyanmicQueries.CanGetErrorsInQueries() \nin c:\\Users\\tobias\\sandbox\\ravendb\\Raven.Tests\\Quer \nies\\DyanmicQueries.cs:Zeile 71. \nRaven.Tests.Indexes.Statistics.Can_get_details_about_indexing_errors [FAIL] \n    Assert.Contains() failure: Not found: Attempted to divide by zero. \n    Stack Trace: \n       bei Xunit.Assert.Contains(String expectedSubString, String \nactualString, StringComparison comparisonType) \n       bei \nRaven.Tests.Indexes.Statistics.Can_get_details_about_indexing_errors() \nin c:\\Users\\tobias\\sandbox\\ravendb\\Rave \nn.Tests\\Indexes\\Statistics.cs:Zeile 165. \n"""
393388,187,b'Minor: typo (EmbeddablDocumentStore)',"b'EmbeddablDocumentStore should be ""EmbeddableDocumentStore""\n'"
393153,186,"b'if column is int, how sort?'","b'code as follow:\n            NumberT number;\n            int[] ids = new int[] {100, 50, 80 };\n\n```\n        for (int i = 0; i < 3; i++)\n        {\n            using (var session = documentStore.OpenSession())\n            {\n                number = new NumberT();\n                number.Id = ""numberclass/"" + i;\n                number.cost = ids[i];\n\n                session.Store(number);\n                session.SaveChanges();\n            }\n        }\n\n        //add index\n        using (var session = documentStore.OpenSession())\n        {\n            session.DatabaseCommands.PutIndex(""fornumber"", new IndexDefinition\n            {\n                Map = @""from s in docs.NumberTs\n                        select new { s.cost }"",\n            }, true);\n        }\n\n        //search\n        using (var session = documentStore.OpenSession())\n        {\n            var all = session.LuceneQuery<NumberT>(""fornumber"").OrderBy(""cost"");\n\n            foreach (var item in all)\n            {\n                Console.WriteLine(item.cost);\n            }\n        }\n```\n\nthe output:\n100\n50\n80\n'"
392638,185,b'Error in documentation?',"b'the example in \nhttp://ravendb.net/documentation/docs-client-api-index\nsays \nRunning in embedded mode (Raven.Client.Embedded.dll)\nvar documentStore = new EmbeddableocumentStore  {  DataDirectory = ""path/to/database/directory""  };\ndocumentStore.Initialize();\n\nbut referencing the dll, the store name is EmbeddablDocumentStore not EmbeddableocumentStore  \n'"
389216,184,b'Document DatabaseCommands ',"b""There doesn't seem to be much documentation on the website for the DatabaseCommands. It would be good to have a page dedicated to this. Explanation of why DatabaseCommands are separate and whether or not they're transactional would help. \n"""
387721,183,b'Minor: command line instructions',"b'When invoking a Raven.Server.exe /? the ""uninstall"" option contains a typo\n'"
368761,181,b'Improve attachment support',"b'Attachments currently suffer from the following limitations:\n\n1) They cannot be indexed\n2) They are not replicated\n3) They do not have any trigger behaviors\n\nThis makes it impossible to impose security and triggering actions upon them (among other things).\n\nPossible suggestions:\n\n1) Add these behaviors to attachments to they behave more like documents\n\n2) Allow documents to have binary properties (eg. a byte array member) that are stored as such. Obviouslly these properties would not be indexible, but would allow for their lifecycle to be tied to their owning document inherintly.\n'"
368723,180,b'Music Store',"b""I pulled up your demo and noticed that the genres were stored incorrectly.  The Id is being retrieved as genres/1 instead of perhaps just 1.  When you then use the StoreController's method Browse, the result will fail as the id comes in as null.\n"""
363970,179,b'Silverlight UI - Auto update',b'_have_ to be user controlled\n_have_ to do backup first \n'
363792,178,b'Replication read from slave',b'Master should read all changes from its slave on startup\n'
357279,176,b'Silverlight UI - document templates',b'Allow users to specify XAML template for a specific document template (probably using the entity name).\nThis template will be used to show the document in the thumbnail view.\n'
357252,175,b'Silverlight UI - Links for doc ids',"b'Recognize pattern for references, and allow to go from one document to another by clicking the link as if it was HREF\n'"
356372,174,b'Support subclauses in Lucene query builder API',b''
355539,173,b'Do not replicate writes automatically',"b'Because it can cause conflicts.\nInstead, ask the user and default to failing fast.\n'"
355063,172,b'Move away from FirstAndLastDocumentIds',"b'We can do this sort of thing using plain old etags, and that will reduce the storage API\n'"
354360,170,b'Update all samples to use only Query',"b""Shouldn't use LuceneQuery any more\n"""
354335,169,b'Support translator func in the WebUI',b''
354334,168,b'Support setting analyzers in the WebUI',b''
354333,167,b'Support sort options in the WebUI',b''
326785,163,b'Document expiration bundle',b''
325463,162,b'Document AbstractIndexCreationTask',b'And IndexCreation\n'
317197,161,b'Document include features',b'Optimization for references\n'
317112,160,b'Document AllowNonAuthoritiveInformation ',b'Why it is needed?\nWhat it does?\nAllowNonAuthoritiveInformation \nNonAuthoritiveInformationTimeout\n'
315535,159,b'Implement OAuth 2.0 2 legged authentication',b'See full discussion here:\nhttp://groups.google.co.il/group/ravendb/browse_thread/thread/89ee73e31e3b3472/a998a9c8e789aa6\n'
315534,158,b'Implement OAuth 2.0 2 legged authentication',b'See full discussion here:\nhttp://groups.google.co.il/group/ravendb/browse_thread/thread/89ee73e31e3b3472/a998a9c8e789aa6\n'
304273,155,b'Document Hierarchal indexes',"b'from post in docs.Posts\nfrom comment in Hierarchy(post, """"Comments"""") \nselect new { comment.Text }""\n'"
297283,149,b'create index question',"b'Map = ""from doc in docs select new {doc.Name,doc.User.Name}"" is not allowed?\nreturn \xe2\x80\x9cName\xe2\x80\x9d is can\'t reduplicate infomation\nMap = ""from doc in docs select new {doc.Name,UserName = doc.User.Name}"" is ok\nbut i can\'t use UserName with linq query expression\n'"
292426,148,b'RavenDB under IIS broke at build 138',"b""I get the following issue with build 138 when running Raven under IIS 7.5 when I try to navigate to raven using Google Chrome.\n\nError InvalidSettings (JET_errInvalidSettings, System parameters were set improperly)\n\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \n\nException Details: Microsoft.Isam.Esent.Interop.EsentErrorException: Error InvalidSettings (JET_errInvalidSettings, System parameters were set improperly)\n\nSource Error: \n\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.\n\nStack Trace: \n\n[EsentErrorException: Error InvalidSettings (JET_errInvalidSettings, System parameters were set improperly)]\n   Microsoft.Isam.Esent.Interop.Api.Check(Int32 err) +170\n   Raven.Storage.Esent.TransactionalStorage.Initialize() +813\n\n[InvalidOperationException: Could not open transactional storage: C:\\Databases\\Raven\\Data\\Data]\n   Raven.Storage.Esent.TransactionalStorage.Initialize() +1056\n   Raven.Database.DocumentDatabase..ctor(RavenConfiguration configuration) +1650\n   Raven.Web.ForwardToRavenRespondersFactory..cctor() +138\n\n[TypeInitializationException: The type initializer for 'Raven.Web.ForwardToRavenRespondersFactory' threw an exception.]\n   Raven.Web.ForwardToRavenRespondersFactory..ctor() +0\n\n[TargetInvocationException: Exception has been thrown by the target of an invocation.]\n   System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck) +0\n   System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache) +117\n   System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipVisibilityChecks, Boolean skipCheckThis, Boolean fillCache) +247\n   System.Activator.CreateInstance(Type type, Boolean nonPublic) +106\n   System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes) +12732893\n   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture) +28\n   System.Web.HttpRuntime.CreateNonPublicInstance(Type type, Object[] args) +83\n   System.Web.Configuration.HandlerFactoryCache..ctor(String type) +57\n   System.Web.HttpApplication.GetFactory(String type) +95\n   System.Web.MaterializeHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +352\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +371\n"""
292154,147,b'Problems linq select new ',"b'var o = from u in indexedUsers\xe3\x80\x80where u.Name == ""zy"" select new { u.Name, u.Enabled };\nvar r = o.ToList();\xe3\x80\x80//exception\n\nMessage: Unable to cast object of type \'Raven.Client.Document.DocumentQuery`1[WorkSpace.Business.User]\' to type \'System.Collections.Generic.IEnumerable`1[<>f__AnonymousType0`2[System.String,System.Boolean]]\'.\n\nStackTrace:\n   at Raven.Client.Linq.RavenQueryable`1.GetEnumerator() in E:\\2010Projects\\ravendb\\Raven.Client\\Linq\\RavenQueryable.cs:line 61\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\n   at WorkSpace.Business.BusinessLogic.Test(Object paramter) in E:\\2010Projects\\WorkSpace\\Business\\BusinessLogic.cs:line 43\n   at WorkSpace.Core.ServiceManager.Excute(String name, Object paramter) in E:\\2010Projects\\WorkSpace\\Core\\ServiceManager.cs:line 87\n'"
289243,146,b'Document spatial support',"b'from e in docs.Events select new { Tag = \\""Event\\"", _ = SpatialIndex.Generate(e.Latitude, e.Longitude) }\n'"
288065,145,b'Problems with linq queries',"b'1. When using \'DateTime.MinValue\' in the Where clause of LINQ query, I\n   get an exception. But my moving the \'DateTime.MinValue\' to a temporary\n   variable and then using it in the Where clause the query succeeds.\n\nsession.Query<X>(""Index"").Where(x => x.CreatedDate ==\nDateTime.MinValue)  =====> Throws an exception\n\nvar dt = DateTime.MinValue;\nsession.Query<X>(""Index"").Where(x => x.CreatedDate == dt)  =====>\nWorks\n\nProbably a bug in the linq parsing, added it to the issues list\n1. Using the \'Not Equal\' operator ( != ) for the DateTime comparision\n   does not work. If I have 5 documents that have a date time of\n   \'MinValue\',\n\nsession.Query<X>(""Index"").Where(x => x.CreatedDate !=\nDateTime.MinValue)  ===> returns all the 5 documents.\n\nsession.Query<X>(""Index"").Where(x => x.CreatedDate <\nDateTime.MinValue)  ===> returns \'0\'.\n\nNot sure whether I am missing something in the IIS set up, that is\ncausing the Indexing not to run correctly.\n'"
286600,144,b'OperationHeaders fail to be set',"b'The following test fails. No matter how much I try, I can\'t get the damn NameValueCollection to contain my header :S. I think this should be replaced with a WebHeaderCollection.\n\n[TestMethod]\npublic void WhenSettingOperationHeader_ThenHasHeader()\n{\n    var store = new DocumentStore\n    {\n        Identifier = Environment.MachineName,\n        Credentials = CredentialCache.DefaultCredentials,\n        Configuration = new RavenConfiguration\n        {\n            DataDirectory = AppDomain.CurrentDomain.BaseDirectory,\n            PluginsDirectory = AppDomain.CurrentDomain.BaseDirectory,\n        },\n    };\n\n```\nstore.Initialize();\n\nstore.DatabaseCommands.OperationsHeaders.Add(""Authorization"", ""foo"");\n\nAssert.AreEqual(""foo"", store.DatabaseCommands.OperationsHeaders[""Authorization""]);\n\nstore.DatabaseCommands.OperationsHeaders[""Authorization""] = ""foo"";\n\nAssert.AreEqual(""foo"", store.DatabaseCommands.OperationsHeaders[""Authorization""]);\n\nstore.DatabaseCommands.OperationsHeaders.Set(""Authorization"", ""foo"");\n\nAssert.AreEqual(""foo"", store.DatabaseCommands.OperationsHeaders[""Authorization""]);\n```\n\n}\n'"
284236,143,b'linq query',b'1. hope more complex linq query examples\n2. how can i use linq query api  like defined a simple projection to Retrieving only the data i need\n'
279593,142,b'Document auth bundle',b''
279592,141,b'Include auth bundle in release zip',b''
279584,140,b'Versioning bundle should use stored revision',"b'Right now it takes the revision from the client, which is good for version tracking but not good for generating the next revision.\n'"
279531,139,b'query have no results',"b'i create a sample test project with the last download source ,but the query is not work fine. why?\n\nusing System;\nusing System.IO;\nusing System.Linq;\nusing Raven.Client.Document;\nusing Raven.Database.Indexing;\n\nnamespace Test\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            new Test().Run();\n        }\n    }\n\n```\npublic class Test\n{\n    private DocumentStore store;\n    public Test()\n    {\n        string path = AppDomain.CurrentDomain.BaseDirectory;\n        path = Path.Combine(path, @""Data\\"");\n        store = new DocumentStore()\n        {\n            DataDirectory = path\n        };\n        store.Initialize();\n    }\n\n    public void Run()\n    {\n        //index\n        using (var s = store.OpenSession())\n        {\n            var original = new IndexDefinition\n            {\n                Stores = { { ""Name"", FieldStorage.Yes } },\n                Map = @""from doc in docs select new{doc.Name}""\n            };\n            store.DatabaseCommands.PutIndex(""test"", original, true);\n        }\n        //save\n        using (var s = store.OpenSession())\n        {\n            var u = new User();\n            u.Name = ""zy"";\n            u.Location = ""add"";\n            u.Age = 40;\n            s.Store(u);\n            s.SaveChanges();\n        }\n        //query\n        using (var s = store.OpenSession())\n        {\n            var a = s.Load<User>(""users/1""); \\\\ the load is Ok\n\n            var b = s.LuceneQuery<User>(""test"").Where(""Name:zy"").ToList();\n\n           var o =  s.Query<User>(""test"").Where(x => x.Name == ""zy""); \\\\ the return is nothing\n\n           var c = o.FirstOrDefault();\n\n        }\n    }\n}\n\npublic class User\n{\n    public string Id { get; set; }\n    public string Name { get; set; }\n    public string Location { get; set; }\n    public int Age { get; set; }\n}\n```\n\n}\n'"
275150,138,b'Adding a document causes unrelated indexes to become stale',b'Adding a document causes unrelated indexes to become stale.\n'
273863,137,b'Explore anti failure in indexing',b'Doing things like null objects instead of NRE.\n'
273713,136,b'Automatically use _Range field when using a range query on a numeric or date field',"b""When querying a numeric field with a Between or BetweenEqual the query builder should automatically use the the _Range field instead of forcing the end the user to specify the _Range field in the original query.  Just like using the new Orderby with numerics.  This is probably also applicable to dates although I don't know how those are implemented.\n"""
273701,135,b'Document indexing sort options',b''
273612,134,b'document all configuration options',b'Right now ti is a bit scattered\n'
270720,133,b'Set base ops fail on very large data sets',"b'Error VersionStoreOutOfMemory (JET_errVersionStoreOutOfMemory, Version store out of memory (cleanup already attempted))\n'"
270618,132,b'Minor: readme documentation out of date',"b'I believe the readme documentation needs to be updated to include the new server .exe name, eg:\n\nExecute /Server/Raven.Server.exe /install to register and start the Raven service\n'"
269343,131,b'Deleting an index still returns index def http 200 on client',"b'After deleting an index via the webui, when the client requests the index definition it still returns the def with an http 200.  Querying that index results in 404 index not found error.\n\nRequest #   3: GET     -     2 ms - 404 - /indexes/EquipmentByEquipmentId?definition=yes\nRequest #   6: HEAD    -     0 ms - 404 - /indexes/EquipmentByEquipmentId\nRequest #   7: PUT     -   287 ms - 201 - /indexes/EquipmentByEquipmentId\nRequest #  21: DELETE  -     9 ms - 204 - /indexes/EquipmentByEquipmentId\nRequest #  25: GET     -     0 ms - 200 - /indexes/EquipmentByEquipmentId?definition=yes\nRequest #  32: GET     -     0 ms - 200 - /docs/7fc5100b-185e-4230-a656-e6b1b3fc3825\n\nError on request\nRaven.Database.Exceptions.IndexDoesNotExistsException: There is no index named: EquipmentByEquipmentId\n   at Raven.Storage.Esent.StorageActions.DocumentStorageActions.SetCurrentIndexStatsTo(String index)\n   at Raven.Storage.Esent.StorageActions.DocumentStorageActions.GetFailureRate(String index)\n   at Raven.Database.DocumentDatabase.<>c__DisplayClass49.<Query>b__44(IStorageActionsAccessor actions)\n   at Raven.Storage.Esent.TransactionalStorage.ExecuteBatch(Action`1 action)\n   at Raven.Storage.Esent.TransactionalStorage.Batch(Action`1 action)\n   at Raven.Database.DocumentDatabase.Query(String index, IndexQuery query)\n   at Raven.Database.Server.Responders.Index.OnGet(IHttpContext context, String index)\n   at Raven.Database.Server.Responders.Index.Respond(IHttpContext context)\n   at Raven.Database.Server.HttpServer.DispatchRequest(IHttpContext ctx)\n   at Raven.Database.Server.HttpServer.HandleActualRequest(IHttpContext ctx)\n'"
268016,130,"b'Build 120 broken on IIS7, compression error'","b'Calling Initialize from the client API hitting an IIS7 hosted ravendb that used to work just fine in previous drops yields:\n\nSystem.InvalidOperationException: <html>\n    <head>\n        <title>Can not access a closed Stream.</title>\n        <style>\n         body {font-family:""Verdana"";font-weight:normal;font-size: .7em;color:black;} \n         p {font-family:""Verdana"";font-weight:normal;color:black;margin-top: -5px}\n         b {font-family:""Verdana"";font-weight:bold;color:black;margin-top: -5px}\n         H1 { font-family:""Verdana"";font-weight:normal;font-size:18pt;color:red }\n         H2 { font-family:""Verdana"";font-weight:normal;font-size:14pt;color:maroon }\n         pre {font-family:""Lucida Console"";font-size: .9em}\n         .marker {font-weight: bold; color: black;text-decoration: none;}\n         .version {color: gray;}\n         .error {margin-bottom: 10px;}\n         .expandable { text-decoration:underline; font-weight:bold; color:navy; cursor:hand; }\n        </style>\n    </head>\n\n```\n<body bgcolor=""white"">\n\n        <span><H1>Server Error in \'/\' Application.<hr width=100% size=1 color=silver></H1>\n\n        <h2> <i>Can not access a closed Stream.</i> </h2></span>\n\n        <font face=""Arial, Helvetica, Geneva, SunSans-Regular, sans-serif "">\n\n        <b> Description: </b>An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.\n\n        <br><br>\n\n        <b> Exception Details: </b>System.ObjectDisposedException: Can not access a closed Stream.<br><br>\n\n        <b>Source Error:</b> <br><br>\n\n        <table width=100% bgcolor=""#ffffcc"">\n           <tr>\n              <td>\n                  <code>\n```\n\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.</code>\n\n```\n              </td>\n           </tr>\n        </table>\n\n        <br>\n\n        <b>Stack Trace:</b> <br><br>\n\n        <table width=100% bgcolor=""#ffffcc"">\n           <tr>\n              <td>\n                  <code><pre>\n```\n\n[ObjectDisposedException: Can not access a closed Stream.]\n   System.IO.Compression.GZipStream.Flush() +3256272\n   System.Web.HttpWriter.FilterIntegrated(Boolean finalFiltering, IIS7WorkerRequest wr) +603\n   System.Web.HttpResponse.FilterOutput() +121\n   System.Web.CallFilterExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +174\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously) +266\n</pre></code>\n\n```\n              </td>\n           </tr>\n        </table>\n\n        <br>\n\n        <hr width=100% size=1 color=silver>\n\n        <b>Version Information:</b>&nbsp;Microsoft .NET Framework Version:4.0.30319; ASP.NET Version:4.0.30319.1\n\n        </font>\n\n</body>\n```\n\n</html>\n<!-- \n[ObjectDisposedException]: Can not access a closed Stream.\n   at System.IO.Compression.GZipStream.Flush()\n   at System.Web.HttpWriter.FilterIntegrated(Boolean finalFiltering, IIS7WorkerRequest wr)\n   at System.Web.HttpResponse.FilterOutput()\n   at System.Web.HttpApplication.CallFilterExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()\n   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously)\n--> ---> System.Net.WebException: The remote server returned an error: (500) Internal Server Error.\n    at System.Net.HttpWebRequest.GetResponse()\n    at Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse)\n     --- End of inner exception stack trace ---\n    at Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse)\n    at Raven.Client.Client.HttpJsonRequest.ReadResponseString()\n    at Raven.Client.Client.ServerClient.DirectGet(String serverUrl, String key)\n    at Raven.Client.Client.ServerClient.RefreshReplicationInformation()\n    at Raven.Client.Client.ServerClient.UpdateReplicationInformationIfNeeded()\n    at Raven.Client.Client.ServerClient..ctor(String url, DocumentConvention convention, ICredentials credentials)\n    at Raven.Client.Document.DocumentStore.<Initialize>b__2()\n    at Raven.Client.Document.DocumentStore.get_DatabaseCommands()\n    at Raven.Client.Document.DocumentStore.Initialize()\n'"
267750,129,b'Auto-quoting Lucene queries breaks for generic CLR types',"b'The new auto-quoting of lucene queries on ]] causes the following invalid query:\n\nLucene.Net.QueryParsers.ParseException: Cannot parse \'ClrType:""FeedSync.Sync`1[[FeedSync.Raven.Tests.Issues.Foo, FeedSync.Raven.Tests"", FeedSync""]]\': Lexical error at line 1, column 94.  Encountered: <EOF> after : ""\\""]]"" ---> Lucene.Net.QueryParsers.TokenMgrError: Lexical error at line 1, column 94.  Encountered: <EOF> after : ""\\""]]""\n\nRepro:\n\n[Fact]\npublic void WhenQueryingByGenericClrTypes_ThenAutoQuotedLuceneQueryFails()\n{\n    var store = new DocumentStore\n    {\n        Configuration = new RavenConfiguration\n        {\n            DataDirectory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString()),\n            RunInUnreliableYetFastModeThatIsNotSuitableForProduction = true,\n        },\n    };\n    store.Initialize();\n\n```\nusing (var session = store.OpenSession())\n{\n    session.Store(new Foo { Value = ""foo"" });\n\n    session.SaveChanges();\n}\n\nstore.DatabaseCommands.PutIndex(\n    ""ByClr"",\n    new IndexDefinition\n    {\n        Map = @""from doc in docs select new { ClrType = doc[""""@metadata""""][""""Raven-Clr-Type""""] }"",\n        Indexes = { { ""ClrType"", FieldIndexing.NotAnalyzed } },\n    },\n    true);\n\nusing (var session = store.OpenSession())\n{\n    var typeName = ReflectionUtil.GetFullNameWithoutVersionInformation(typeof(Sync<Foo>));\n    var allSync = session\n        .LuceneQuery<Sync<Foo>>(""ByClr"")\n        .Where(""ClrType:[[\\"""" + typeName + ""\\""]]"")\n        .WaitForNonStaleResultsAsOfNow(TimeSpan.MaxValue)\n        .ToList();\n\n    Assert.AreEqual(1, allSync.Count);\n}\n```\n\n}\n\nFails with:\n\nSaving 1 changes to C:\\Users\\Daniel\\AppData\\Local\\Temp\\dfaa7850-9e70-4e5b-ab3e-b846c35e6408\nExecuting query \'ClrType:[[""FeedSync.Sync`1[[FeedSync.Raven.Tests.Issues.Foo, FeedSync.Raven.Tests]], FeedSync""]]\' on index \'ByClr\' in \'C:\\Users\\Daniel\\AppData\\Local\\Temp\\dfaa7850-9e70-4e5b-ab3e-b846c35e6408\'\nTest \'FeedSync.Raven.Tests.Issues.GivenAPutTrigger.WhenQueryingByGenericClrTypes_ThenAutoQuotedLuceneQueryFails\' failed: Test method FeedSync.Raven.Tests.Issues.GivenAPutTrigger.WhenQueryingByGenericClrTypes_ThenAutoQuotedLuceneQueryFails threw exception: \nLucene.Net.QueryParsers.ParseException: Cannot parse \'ClrType:""FeedSync.Sync`1[[FeedSync.Raven.Tests.Issues.Foo, FeedSync.Raven.Tests"", FeedSync""]]\': Lexical error at line 1, column 94.  Encountered: <EOF> after : ""\\""]]"" ---> Lucene.Net.QueryParsers.TokenMgrError: Lexical error at line 1, column 94.  Encountered: <EOF> after : ""\\""]]""\n    at Lucene.Net.QueryParsers.QueryParserTokenManager.GetNextToken()\n    at Lucene.Net.QueryParsers.QueryParser.Jj_scan_token(Int32 kind)\n    at Lucene.Net.QueryParsers.QueryParser.Jj_3R_2()\n    at Lucene.Net.QueryParsers.QueryParser.Jj_3_1()\n    at Lucene.Net.QueryParsers.QueryParser.Jj_2_1(Int32 xla)\n    at Lucene.Net.QueryParsers.QueryParser.Clause(String field)\n    at Lucene.Net.QueryParsers.QueryParser.Query(String field)\n    at Lucene.Net.QueryParsers.QueryParser.Parse(String query)\n     --- End of inner exception stack trace ---\n    at Lucene.Net.QueryParsers.QueryParser.Parse(String query)\n    at Raven.Database.Indexing.QueryBuilder.BuildQuery(String query, PerFieldAnalyzerWrapper analyzer)\n    at Raven.Database.Indexing.Index.GetLuceneQuery(IndexQuery indexQuery)\n    at Raven.Database.Indexing.Index.<Query>d__2.MoveNext()\n    at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\n    at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\n    at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\n    at System.Collections.Generic.List`1.AddRange(IEnumerable`1 collection)\n    at Raven.Database.DocumentDatabase.<>c__DisplayClass49.<Query>b__44(IStorageActionsAccessor actions)\n    at Raven.Storage.Esent.TransactionalStorage.ExecuteBatch(Action`1 action)\n    at Raven.Storage.Esent.TransactionalStorage.Batch(Action`1 action)\n    at Raven.Database.DocumentDatabase.Query(String index, IndexQuery query)\n    at Raven.Client.Client.EmbededDatabaseCommands.Query(String index, IndexQuery query)\n    at Raven.Client.Document.DocumentQuery`1.GetQueryResult()\n    at Raven.Client.Document.AbstractDocumentQuery`1.get_QueryResult()\n    at Raven.Client.Document.AbstractDocumentQuery`1.GetEnumerator()\n    at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\n    at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\n    Issues\\GivenTwoClasses.cs(48,0): at FeedSync.Raven.Tests.Issues.GivenAPutTrigger.WhenQueryingByGenericClrTypes_ThenAutoQuotedLuceneQueryFails()\n\n0 passed, 1 failed, 0 skipped, took 3.98 seconds (MSTest 10.0).\n'"
266826,128,b'Custom put trigger breaks indexes',"b'If a custom put trigger puts additional documents with metadata, the lucene index apparently gets confused and returns the document when its type does not match the query, and causes invalid cast exceptions. For business reasons, I need the trigger to be able to ""mangle"" the Raven-Clr-Type, but it should just work, as I\'m cloning the behavior of the client API anyways.\n\nHow am I supposed to attach a repro here? :S\n\nFailing attach, here\'s the repro test and associated classes:\n\n```\n[TestClass]\npublic class GivenAPutTrigger\n{\n    [TestMethod]\n    public void WhenTriggerPutsDocument_ThenIndexIsBroken()\n    {\n        var store = new DocumentStore\n        {\n            Configuration = new RavenConfiguration\n            {\n                DataDirectory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString()),\n                RunInUnreliableYetFastModeThatIsNotSuitableForProduction = true,\n                PluginsDirectory = AppDomain.CurrentDomain.BaseDirectory,\n            }\n        };\n        store.Initialize();\n\n        using (var session = store.OpenSession())\n        {\n            session.Store(new Foo { Value = ""foo"" });\n            //var sync = new Sync<Foo> { Id = ""000-000-000"", Payload = new Foo { Value = ""hello"" }, Version = 1 };\n            //session.Store(sync);\n            session.SaveChanges();\n\n            // Uncomment this and previous code to see that we\'re putting almost exactly the same metadata\n            // as a client API call would.\n            //var md = session.GetMetadataFor(sync);\n        }\n\n        // Note that the index should filter by the same metadata attribute we\'re creating.\n        store.DatabaseCommands.PutIndex(\n            ""ByClr"",\n            new IndexDefinition\n            {\n                Map = @""from doc in docs\n                        select new { ClrType = doc[""""@metadata""""][""""Raven-Clr-Type""""] };"",\n            },\n            true);\n\n        using (var session = store.OpenSession())\n        {\n            var typeName = ReflectionUtil.GetFullNameWithoutVersionInformation(typeof(Foo));\n            var all = session\n                .LuceneQuery<Foo>(""ByClr"")\n                .Where(""ClrType:\\"""" + typeName + ""\\"""")\n                .WaitForNonStaleResultsAsOfNow(TimeSpan.MaxValue)\n                .ToList();\n        }\n    }\n}\n\npublic class Foo\n{\n    public string Id { get; set; }\n    public string Value { get; set; }\n}\n\npublic class DocumentPutTrigger : AbstractPutTrigger\n{\n    private static Regex SyncType = new Regex(@""^PutTriggerAndIndex\\.Sync`1\\[\\[.+\\]\\],\\s?PutTriggerAndIndex$"", RegexOptions.Compiled);\n\n    public override void OnPut(string key, JObject document, JObject metadata, TransactionInformation transaction)\n    {\n        if (key.StartsWith(""Raven"") || IsSync(metadata))\n            return;\n\n        // Create a new sync for the document.\n        var sync = new Sync<JObject> { Id = Guid.NewGuid().ToString(), Version = 1, Payload = document };\n\n        var smd = new JObject();\n        // Make up the actual ClrType of the sync that will need to be deserialized for the actual T that comes in the document metadata.\n        smd.Add(""Raven-Clr-Type"", CreateSyncClrType(metadata.Value<string>(""Raven-Clr-Type"")));\n        smd.Add(""Raven-Entity-Name"", ""Sync-"" + metadata.Value<string>(""Raven-Clr-Type""));\n\n        this.Database.Put(sync.Id, null, JObject.FromObject(sync), smd, transaction);\n    }\n\n    private string CreateSyncClrType(string documentClrType)\n    {\n        var syncType = ReflectionUtil.GetFullNameWithoutVersionInformation(typeof(Sync<>));\n        // Replace with the actual document type.\n        syncType = syncType.Replace(""[, PutTriggerAndIndex]"", ""["" + documentClrType + ""]"");\n\n        return syncType;\n    }\n\n    public static bool IsSync(JObject metadata)\n    {\n        var clrType = metadata.Value<string>(""Raven-Clr-Type"");\n\n        return !string.IsNullOrEmpty(clrType) && SyncType.IsMatch(clrType);\n    }\n}\n\npublic class Sync<T>\n{\n    public string Id { get; set; }\n    public int Version { get; set; }\n    public T Payload { get; set; }\n}\n```\n'"
265938,127,b'Web UI broke starting with build 112',"b""With build 112 and up I'm getting the following exception when I try\nto access Raven web UI if Raven is running under IIS 7.5 on\nWindows Server 2008 R2 (everything is fine in build 110 or if I launch Raven as a stand-alone server):\n--------------------- EXCEPTION MESSAGE ---------------------\n\nCan not access a closed Stream.\n\nDescription: An unhandled exception occurred during the execution of\nthe current web request. Please review the stack trace for more\ninformation about the error and where it originated in the code.\n\nException Details: System.ObjectDisposedException: Can not access a\nclosed Stream.\n\nSource Error:\n\nAn unhandled exception was generated during the execution of the\ncurrent web request. Information regarding the origin and location of\nthe exception can be identified using the exception stack trace below.\n\nStack Trace:\n\n[ObjectDisposedException: Can not access a closed Stream.]\n   System.IO.Compression.DeflateStream.ValidateParameters(Byte[]\narray, Int32 offset, Int32 count) +7851424\n   System.IO.Compression.DeflateStream.Write(Byte[] array, Int32\noffset, Int32 count) +45\n   System.Web.HttpWriter.FilterIntegrated(Boolean finalFiltering,\nIIS7WorkerRequest wr) +359\n   System.Web.HttpResponse.FilterOutput() +121\n\nSystem.Web.CallFilterExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()\n+174\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step,\nBoolean& completedSynchronously) +266 \n"""
265448,126,b'AJAX calls fail in UI from Google Chrome',"b""I haven't looked in depth but the AJAX calls don't seem to work when running the UI in Google Chrome.\nThe server reports things like this:\nRequest #  29: GET     -    25 ms - 404 - /docs/Raven/WarningMessages?_=1280607806655 \n\n(Works fine in FireFox.)\n\nRavenDB: Build 116\nGoogle Chrome: 5.0.375.125 \nOS: Windows 7 (32bit)\n"""
264765,125,b'admin tool 116',"b'- linked scripts should be version suffixed to fix browser ubercaching (even F5 didn\'t help) like: src=""js/jquery.RavenDB.js?v=116""\n- html error: matched /p encountered.  Converting /p into p/p. \n  It\'s why it doesn\'t work in chrome now I suppose.\n'"
263395,124,b'IDocumentStore.Stored is not an EventHandler',b'Change to use standard .NET EventHandler<T>. This would ensure it will be friendly to future CLR functionality like the Reactive Extensions.\n'
263390,123,b'IDocumentStoreListener should provide an AfterStore callback too',"b'So that scenarios where notifying consumers after the save are possible (i.e. raising an event which the consumer might use to retrieve the document, etc.)\n'"
261446,122,b'Server returns nicely formatted JSON',"b'In a few places in the server, Formatting.Indented is used during the JSON serialisation. For deeply nested documents this results in a lot of white space. Combined with the fact that outgoing data is not compressed at all, this seems rather wasteful.\n'"
261068,121,b'Embedded DocumentStore throws Exception',"b'When trying to embed the database but I am getting:\n\nCould not find transactional storage type: Raven.Storage.Esent.TransactionalStorage, Raven.Storage.Esent\n\nI have tried various:\n\nvar documentStore = new DocumentStore { DataDirectory = @""X:\\Test\\Web\\App_Data\\"" };\ndocumentStore.Initialize();\n\nand\n\nvar documentStore = new DocumentStore { DataDirectory = @""App_Data"" };\ndocumentStore.Initialize();\n\nI might be missing something, but there is no mention of the TransactionalStorage in the docs.\n'"
260088,120,b'IndexCreation requires a CompositionContainer where just an ExportProvider is needed',"b""In order to GetExportedValues it's not necessary a CompositionContainer but just an ExportProvider.\n\nThe method should take the most base dependency possible. \nThis is important for VS-integration scenarios for Raven, as VS exposes a default ExportProvider type but not a CompositionContainer (this would require unsafe downcasting).\n"""
258124,119,b'Replication bundle uses the system default network credentials',"b'This is unsuitable for most descentralized scenarios where the network credentials (windows, current user) are typically not in the same domain as the replication target.\n'"
257326,118,b'Document custom analyzers',b''
255540,117,b'PutResult should be available on AbstractPutTrigger.AfterPut',"b'So that post-processing using the resulting document etag can be done, for example.\n'"
255413,116,b'Changes to the metadata for an entity/doc are not tracked and therefore are not saved',"b'```\n    [TestMethod]\n    public void WhenModifyingMetadata_ThenSavesChanges()\n    {\n        var store = new DocumentStore { DataDirectory = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString()) };\n        store.Initialize();\n        string id = null;\n\n        // Initial create\n        using (var session = store.OpenSession())\n        {\n            var foo = new Foo { Value = ""hello"" };\n            session.Store(foo);\n            session.SaveChanges();\n            id = foo.Id;\n        }\n\n        // Update metadata \n        using (var session = store.OpenSession())\n        {\n            var foo = session.Load<Foo>(id);\n            var metadata = session.GetMetadataFor(foo);\n\n            metadata[""foo""] = ""bar"";\n            session.SaveChanges();\n        }\n\n        // Entity should have the updated metadata now.\n        using (var session = store.OpenSession())\n        {\n            var foo = session.Load<Foo>(id);\n            var metadata = session.GetMetadataFor(foo);\n\n            Assert.AreEqual(""bar"", metadata[""foo""]);\n        }\n    }\n```\n'"
254740,115,b'DocumentDatabase does not handle potential COM exception from UuidCreateSequential',b'Put does:\n\n```\nif (string.IsNullOrEmpty(key))\n{\n    Guid guid;\n    UuidCreateSequential(out guid);\n    key = guid.ToString();\n}\n```\n\nIt should be using Marshal.ThrowExceptionForHR(UuidCreateSequential(out guid)) instead just to be on the safe side.\n'
253218,114,b'Calling JsonDocument.ToJson more than once results in an exception',"b'```\n[TestClass]\npublic class ToJsonBug\n{\n    [TestMethod]\n    public void WhenCallingToJsonTwice_ThenThrows()\n    {\n        var store = new DocumentStore { DataDirectory = AppDomain.CurrentDomain.BaseDirectory };\n        store.Initialize();\n\n        var foo = new Foo { Value = ""foo"" };\n\n        using (var session = store.OpenSession())\n        {\n            session.Store(foo);\n            session.SaveChanges();\n        }\n\n        var doc = store.DocumentDatabase.Get(foo.Id, null);\n\n        doc.ToJson();\n        // Throws: System.ArgumentException: Can not add property @metadata to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.\n        doc.ToJson();\n    }\n\n    public class Foo\n    {\n        public string Id { get; set; }\n        public string Value { get; set; }\n    }\n}\n```\n'"
252066,113,b'GetIndex bug',"b'Server Error in \'/\' Application.\n\nThe remote server returned an error: (500) Internal Server Error.\n\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \n\nException Details: System.Net.WebException: The remote server returned an error: (500) Internal Server Error.\n\nSource Error: \n\nLine 107:       {\nLine 108:           var dbCommands = _documentStore.DatabaseCommands;\nLine 109:           if (dbCommands.GetIndex(""MattersByUpdated"") == null)\nLine 110:               dbCommands.PutIndex(""MattersByUpdated"", new IndexDefinition<Matter>\nLine 111:               {\n\nSource File: c:\\Dev\\Matters\\Matters\\Global.asax.cs    Line: 109 \n\nStack Trace: \n\n[WebException: The remote server returned an error: (500) Internal Server Error.]\n   System.Net.HttpWebRequest.GetResponse() +6038435\n   Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse) +112\n\n[InvalidOperationException: {\n  ""Url"": ""/indexes/MattersByUpdated?definition=yes"",\n  ""Error"": ""System.InvalidOperationException: Index does not exists: MattersByUpdated\\r\\n   at Raven.Database.Storage.IndexDefinitionStorage.GetIndexDefinition(String name)\\r\\n   at Raven.Database.DocumentDatabase.GetIndexDefinition(String index)\\r\\n   at Raven.Database.Server.Responders.Index.OnGet(IHttpContext context, String index)\\r\\n   at Raven.Database.Server.Responders.Index.Respond(IHttpContext context)\\r\\n   at Raven.Database.Server.HttpServer.DispatchRequest(IHttpContext ctx)\\r\\n   at Raven.Database.Server.HttpServer.HandleActualRequest(IHttpContext ctx)""\n}]\n   Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse) +399\n   Raven.Client.Client.HttpJsonRequest.ReadResponseString() +92\n   Raven.Client.Client.ServerClient.DirectGetIndex(String indexName, String operationUrl) +121\n   Raven.Client.Client.<>c__DisplayClass11.<GetIndex>b__10(String u) +63\n   Raven.Client.Client.ServerClient.TryOperation(Func`2 operation, String operationUrl, Boolean avoidThrowing, T& result) +94\n   Raven.Client.Client.ServerClient.ExecuteWithReplication(Func`2 operation) +227\n   Raven.Client.Client.ServerClient.GetIndex(String name) +158\n   Matters.MvcApplication.LoadFixtures() in c:\\Dev\\Matters\\Matters\\Global.asax.cs:109\n   Matters.MvcApplication.MvcApplication_BeginRequest(Object sender, EventArgs e) in c:\\Dev\\Matters\\Matters\\Global.asax.cs:44\n   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +148\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +75\n'"
251858,112,b'extensions is null',b'QueryParsingUtils.GenerateText \n                foreach (var extension in extensions)   // extensions is null exception \n                {\n                    foreach (var ns in extension.GetNamespacesToImport())\n                    {\n                        namespaces.Add(ns);\n                    }\n                }\n'
251580,111,b'Bug in PutIndex that causes 401 authentication failures when using remote server and credentials',"b'I have an IIS deployed raven server. It is configured for Basic authentication over HTTPS and I\'m setting the credentials in the DocumentStore at construction time.\nPutting indexes kept throwing 401 exceptions. I used fiddler and saw that the authorization header was not being sent by the client for a HEAD operation on the url for the index. \nIn Reflector, I think I found the cause for the bug (build 100):\n\npublic string PutIndex(string name, IndexDefinition definition, bool overwrite)\n{\n    EnsureIsNotNullOrEmpty(name, ""name"");\n    string requestUriString = this.url + ""/indexes/"" + name;\n    try\n    {\n        HttpWebRequest request = (HttpWebRequest) WebRequest.Create(requestUriString);\n        request.Method = ""HEAD"";\n        request.GetResponse().Close();\n        if (!overwrite)\n        {\n            throw new InvalidOperationException(""Cannot put index: "" + name + "", index already exists"");\n        }\n    }\n    catch (WebException exception)\n    {\n        HttpWebResponse response = exception.Response as HttpWebResponse;\n        if ((response == null) || (response.StatusCode != HttpStatusCode.NotFound))\n        {\n            throw;\n        }\n    }\n    HttpJsonRequest request2 = HttpJsonRequest.CreateHttpJsonRequest(this, requestUriString, ""PUT"", this.credentials);\n\nNote how the credentials are never set on the HEAD request, unlike the PUT request. And because the exception is not NotFound, this inmediately re-throws the authentication exception up without chances for recovery.\n'"
250712,110,b'Index Query behaviour',"b'On a not analyzed field prior to around 96:\nDerivativeType:[[""Car""]] worked - results returned\n\nOn recent version this result no results. Changes to index query parsing should be documented.\n'"
247148,109,b'Some initial performance measurements',"b'I just started to convert my Linq to Entities based project (VS 2010, Framework 4) to RavenDb. Now I was doing a quick performance measurement based on what users normally do, type some three characters in a dropdown which triggers a search. I tried to mimic this and repeated this a hundred times. Now I saw Linq to Entities (backing database is SQL Server Express running locally) is performing roughly twice as fast. Because I could not believe this I like to share my test with you because maybe I am doing it the wrong way:\n\nProject:\nA taxonomic database. For simplicity I converted only one Entity of my model, named Genus.\nIt is just a simple entity with some standard properties like Name, Description ect (9 in total).\n\nAfter importing the data from my linq to entities model both contain around 1900 instances of the entity Genus. So it is not a very exciting amount of data...\n\nNow I ran the following test:\n\n```\n        _logger.Trace(""Start querying raven..."");\n        sw.Restart();\n\n        List<Business.Raven.Genus> genusses1;\n\n        for (int i = 0; i < 100; i++)\n        {\n            using (IDocumentSession session = store.OpenSession())\n            {\n                genusses1 = session.LuceneQuery<Business.Raven.Genus>(""GenusIndex"").Where(""Name:Mel*"").ToList();\n                genusses1 = session.LuceneQuery<Business.Raven.Genus>(""GenusIndex"").Where(""Name:Pra*"").ToList();\n                genusses1 = session.LuceneQuery<Business.Raven.Genus>(""GenusIndex"").Where(""Name:Het*"").ToList();\n            }\n        }\n\n        _logger.TraceMethodEnd(sw.Elapsed);\n\n        _logger.Trace(""Start querying linq to entities..."");\n        sw.Restart();\n\n        List<Genus> genusses2;\n\n        for (int i = 0; i < 100; i++)\n        {\n            genusses2 = (from genusLambda in nemaBase.GenusSet where genusLambda.Name.StartsWith(""Mel"") select genusLambda).ToList();\n            genusses2 = (from genusLambda in nemaBase.GenusSet where genusLambda.Name.StartsWith(""Pra"") select genusLambda).ToList();\n            genusses2 = (from genusLambda in nemaBase.GenusSet where genusLambda.Name.StartsWith(""Het"") select genusLambda).ToList();\n        }\n\n        _logger.TraceMethodEnd(sw.Elapsed);\n```\n\nThe index I created for Lucene was:\n\n```\n       store.DatabaseCommands.PutIndex(""GenusIndex"", new IndexDefinition<Business.Raven.Genus>\n        {\n            Map = genusses => from genus in genusses\n                              select new { Name = genus.Name }\n        });\n```\n\nAnd the performance results are:\n\n2010-07-14 14:36:32.4843 Trace WUR.Nemabase.Framework.NLogLogger - Start querying raven... \n2010-07-14 14:37:14.7656 Trace WUR.Nemabase.NemaConverter.Program - End (duration = 00:00:42.2583778) \n2010-07-14 14:37:14.7656 Trace WUR.Nemabase.Framework.NLogLogger - Start querying linq to entities... \n2010-07-14 14:37:38.2031 Trace WUR.Nemabase.NemaConverter.Program - End (duration = 00:00:23.4374203)\n\nYours sincerely,\n\nEvert Wiesenekker\n'"
245611,108,b'Microsoft.Isam.Esent.Interop.EsentErrorException: Error WriteConflict',"b'session.SaveChanges(); called from MvcApplication_AuthenticateRequest\n\nSystem.InvalidOperationException: {\n  ""Url"": ""/bulk_docs"",\n  ""Error"": ""Microsoft.Isam.Esent.Interop.EsentErrorException: Error WriteConflict (JET_errWriteConflict, Write lock failed due to outstanding write lock)\\r\\n   at Microsoft.Isam.Esent.Interop.Api.Fail(Int32 err)\\r\\n   at Microsoft.Isam.Esent.Interop.Api.Check(Int32 err)\\r\\n   at Microsoft.Isam.Esent.Interop.Api.JetPrepareUpdate(JET_SESID sesid, JET_TABLEID tableid, JET_prep prep)\\r\\n   at Microsoft.Isam.Esent.Interop.Update..ctor(JET_SESID sesid, JET_TABLEID tableid, JET_prep prep)\\r\\n   at Raven.Storage.Esent.StorageActions.DocumentStorageActions.AddDocument(String key, Nullable`1 etag, JObject data, JObject metadata)\\r\\n   at Raven.Database.DocumentDatabase.<>c__DisplayClass1a.<Put>b__14(IStorageActionsAccessor actions)\\r\\n   at Raven.Storage.Esent.TransactionalStorage.Batch(Action`1 action)\\r\\n   at Raven.Database.DocumentDatabase.Put(String key, Nullable`1 etag, JObject document, JObject metadata, TransactionInformation transactionInformation)\\r\\n   at Raven.Database.Data.PutCommandData.Execute(DocumentDatabase database)\\r\\n   at Raven.Database.DocumentDatabase.<>c__DisplayClass6f.<Batch>b__6e(IStorageActionsAccessor actions)\\r\\n   at Raven.Storage.Esent.TransactionalStorage.ExecuteBatch(Action`1 action)\\r\\n   at Raven.Storage.Esent.TransactionalStorage.Batch(Action`1 action)\\r\\n   at Raven.Database.DocumentDatabase.Batch(ICollection`1 commands)\\r\\n   at Raven.Database.Server.Responders.DocumentBatch.Batch(IHttpContext context)\\r\\n   at Raven.Database.Server.Responders.DocumentBatch.Respond(IHttpContext context)\\r\\n   at Raven.Database.Server.HttpServer.DispatchRequest(IHttpContext ctx)\\r\\n   at Raven.Database.Server.HttpServer.HandleActualRequest(IHttpContext ctx)""\n} ---> System.Net.WebException: The remote server returned an error: (500) Internal Server Error.\n   at System.Net.HttpWebRequest.GetResponse()\n   at Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse)\n   --- End of inner exception stack trace ---\n   at Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse)\n   at Raven.Client.Client.HttpJsonRequest.ReadResponseString()\n   at Raven.Client.Client.ServerClient.DirectBatch(IEnumerable`1 commandDatas, String operationUrl)\n   at Raven.Client.Client.ServerClient.<>c__DisplayClass26.<Batch>b__25(String u)\n   at Raven.Client.Client.ServerClient.TryOperation[T](Func`2 operation, String operationUrl, Boolean avoidThrowing, T& result)\n   at Raven.Client.Client.ServerClient.ExecuteWithReplication[T](Func`2 operation)\n   at Raven.Client.Client.ServerClient.Batch(ICommandData[] commandDatas)\n   at Raven.Client.Document.DocumentSession.SaveChanges()\n   at Matters.Services.AuthenticationService.AuthenticateRequest() in c:\\Dev\\Matters\\Matters\\Services\\AuthenticationService.cs:line 83\n   at Matters.MvcApplication.MvcApplication_AuthenticateRequest(Object sender, EventArgs e) in c:\\Dev\\Matters\\Matters\\Global.asax.cs:line 31\n   at System.Web.HttpApplication.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()\n   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously)\n'"
245156,107,b'version 100',"b'[WebException: The remote server returned an error: (500) Internal Server Error.]\n   System.Net.HttpWebRequest.GetResponse() +6038435\n   Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse) +112\n\n[InvalidOperationException: {\n  ""Url"": ""/bulk_docs"",\n  ""Error"": ""Microsoft.Isam.Esent.Interop.EsentErrorException: Error WriteConflict (JET_errWriteConflict, Write lock failed due to outstanding write lock)\\r\\n   at Microsoft.Isam.Esent.Interop.Api.Fail(Int32 err)\\r\\n   at Microsoft.Isam.Esent.Interop.Api.Check(Int32 err)\\r\\n   at Microsoft.Isam.Esent.Interop.Api.JetPrepareUpdate(JET_SESID sesid, JET_TABLEID tableid, JET_prep prep)\\r\\n   at Microsoft.Isam.Esent.Interop.Update..ctor(JET_SESID sesid, JET_TABLEID tableid, JET_prep prep)\\r\\n   at Raven.Storage.Esent.StorageActions.DocumentStorageActions.AddDocument(String key, Nullable`1 etag, JObject data, JObject metadata)\\r\\n   at Raven.Database.DocumentDatabase.<>c__DisplayClass1a.<Put>b__14(IStorageActionsAccessor actions)\\r\\n   at Raven.Storage.Esent.TransactionalStorage.Batch(Action`1 action)\\r\\n   at Raven.Database.DocumentDatabase.Put(String key, Nullable`1 etag, JObject document, JObject metadata, TransactionInformation transactionInformation)\\r\\n   at Raven.Database.Data.PutCommandData.Execute(DocumentDatabase database)\\r\\n   at Raven.Database.DocumentDatabase.<>c__DisplayClass6f.<Batch>b__6e(IStorageActionsAccessor actions)\\r\\n   at Raven.Storage.Esent.TransactionalStorage.ExecuteBatch(Action`1 action)\\r\\n   at Raven.Storage.Esent.TransactionalStorage.Batch(Action`1 action)\\r\\n   at Raven.Database.DocumentDatabase.Batch(ICollection`1 commands)\\r\\n   at Raven.Database.Server.Responders.DocumentBatch.Batch(IHttpContext context)\\r\\n   at Raven.Database.Server.Responders.DocumentBatch.Respond(IHttpContext context)\\r\\n   at Raven.Database.Server.HttpServer.DispatchRequest(IHttpContext ctx)\\r\\n   at Raven.Database.Server.HttpServer.HandleActualRequest(IHttpContext ctx)""\n}]\n   Raven.Client.Client.HttpJsonRequest.ReadStringInternal(Func`1 getResponse) +399\n   Raven.Client.Client.HttpJsonRequest.ReadResponseString() +92\n   Raven.Client.Client.ServerClient.DirectBatch(IEnumerable`1 commandDatas, String operationUrl) +410\n   Raven.Client.Client.<>c__DisplayClass26.<Batch>b__25(String u) +63\n   Raven.Client.Client.ServerClient.TryOperation(Func`2 operation, String operationUrl, Boolean avoidThrowing, T& result) +94\n   Raven.Client.Client.ServerClient.ExecuteWithReplication(Func`2 operation) +227\n   Raven.Client.Client.ServerClient.Batch(ICommandData[] commandDatas) +138\n   Raven.Client.Document.DocumentSession.SaveChanges() +272\n   Matters.Services.AuthenticationService.AuthenticateRequest() in c:\\Dev\\Matters\\Matters\\Services\\AuthenticationService.cs:84\n   Matters.MvcApplication.MvcApplication_AuthenticateRequest(Object sender, EventArgs e) in c:\\Dev\\Matters\\Matters\\Global.asax.cs:33\n   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +148\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +75\n\non session.SaveChanges();\n'"
241204,106,"b'Bug, loading not existing document. Db is empty.'","b""Server Error in '/' Application.\n\nObject reference not set to an instance of an object.\n\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \n\nException Details: System.NullReferenceException: Object reference not set to an instance of an object.\n\nSource Error: \n\nLine 9:  \nLine 10:        public static bool EmailIsUnique(string email) {\nLine 11:            return session.Load<EmailAddress>(email.Trim()) == null;\nLine 12:        }\nLine 13:    }\n\nSource File: c:\\Dev\\TeamVision\\Services\\EmailService.cs    Line: 11 \n\nStack Trace: \n\n[NullReferenceException: Object reference not set to an instance of an object.]\n   TeamVision.Services.EmailService.EmailIsUnique(String email) in c:\\Dev\\TeamVision\\Services\\EmailService.cs:11\n   TeamVision.Services.UserService.Create(AccountSignUpViewModel signup, ModelStateDictionary ModelState) in c:\\Dev\\TeamVision\\Services\\UserService.cs:26\n   TeamVision.MvcApplication.LoadFixtures() in c:\\Dev\\TeamVision\\Global.asax.cs:145\n   TeamVision.MvcApplication.MvcApplication_BeginRequest(Object sender, EventArgs e) in c:\\Dev\\TeamVision\\Global.asax.cs:47\n   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +148\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +75\n"""
239124,105,b'Using an OrderBy before Where is ignored',"b'Any expression before a ""where""-expression is ignored. e.g:\n\n.OrderBy(x => x.Name).Where(x => x.Age >= 18);\n\nAt least for the extension method / method chaining way of doing Linq queries this is not what you would expect.\n'"
237430,104,b'Is ok to add index in Application_Start? ',"b""Server Error in '/' Application.\n\nResponse is not available in this context.\n\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \n\nException Details: System.Web.HttpException: Response is not available in this context.\n\nSource Error: \n\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.\n\nStack Trace: \n\n[HttpException (0x80004005): Response is not available in this context.]\n   System.Web.Util.HttpEncoder.get_Current() +11319698\n   System.Web.HttpUtility.UrlEncode(String str, Encoding e) +132\n   Raven.Database.Linq.DynamicViewCompiler..ctor(String name, IndexDefinition indexDefinition) +91\n   Raven.Database.Storage.IndexDefinitionStorage.AddAndCompileIndex(String name, IndexDefinition indexDefinition) +225\n   Raven.Database.Storage.IndexDefinitionStorage.AddIndex(String name, IndexDefinition indexDefinition) +100\n   Raven.Database.DocumentDatabase.PutIndex(String name, IndexDefinition definition) +444\n   Raven.Client.Client.EmbededDatabaseCommands.PutIndex(String name, IndexDefinition definition, Boolean overwrite) +377\n   Raven.Client.Client.EmbededDatabaseCommands.PutIndex(String name, IndexDefinition`2 indexDef, Boolean overwrite) +136\n   TeamVision.MvcApplication.LoadFixtures() in c:\\Dev\\TeamVision\\Global.asax.cs:130\n   TeamVision.MvcApplication.Application_Start() in c:\\Dev\\TeamVision\\Global.asax.cs:56\n\n[HttpException (0x80004005): Response is not available in this context.]\n   System.Web.HttpApplicationFactory.EnsureAppStartCalledForIntegratedMode(HttpContext context, HttpApplication app) +3985477\n   System.Web.HttpApplication.RegisterEventSubscriptionsWithIIS(IntPtr appContext, HttpContext context, MethodInfo[] handlers) +191\n   System.Web.HttpApplication.InitSpecial(HttpApplicationState state, MethodInfo[] handlers, IntPtr appContext, HttpContext context) +325\n   System.Web.HttpApplicationFactory.GetSpecialApplicationInstance(IntPtr appContext, HttpContext context) +407\n   System.Web.Hosting.PipelineRuntime.InitializeApplication(IntPtr appContext) +375\n\n[HttpException (0x80004005): Response is not available in this context.]\n   System.Web.HttpRuntime.FirstRequestInit(HttpContext context) +11524352\n   System.Web.HttpRuntime.EnsureFirstRequestInit(HttpContext context) +141\n   System.Web.HttpRuntime.ProcessRequestNotificationPrivate(IIS7WorkerRequest wr, HttpContext context) +4782309\n"""
234632,103,b'Cannot reuse Id from deleted document in same session',"b'In same session - loaded document, deleted document, attempted to store new document with the same ID as the deleted document, received a NonUniqueObjectException.\n\nStore() in InMemoryDocumentSessionOperations.cs throws if the id to be stored is already in entitiesByKey for a different document. Delete() does not remove the entity from entitiesByKey, only adds it to deletedEntities.\n'"
233619,102,b'DateTime comparison results not as expected',b'Is there a problem with the < operator applied to DateTimes?\n\nSee this commit with a failing test:  http://github.com/fschwiet/ravendb/commit/109466e406bf51dbdd5c0574e0de534a8e4d36c1\n\nComments include test failure callstack.\n'
232641,101,b'Allow to specify analyzer per field',b'So we can customize the way the indexing works\n'
232391,100,b'cannot store/retrieve DateTime in UTC',b'Storing and retrieving DateTime values in universal time does not work.\n\nhttp://github.com/fschwiet/ravendb/commit/ebd029eb618a91db0f61141241c398acf32e78a2\n'
230388,99,"b""Build doesn't include Raven.Storage.Esent""",b'At least not RavenDB-Build-97.zip\n'
230321,98,b'http://ravendb.net improvement',"b'The most important thing ever -> favicon ofc :)\nAfter that, page titles would be fine :)\n'"
230195,97,b'Object with one property only silently fails',"b""I am trying to store email:\npublic class Email { public string Id { get; set; } }\nThat's all I want, since email have to be unique, and since user can change them, I can't use it as user document id. Document id has to be immutable. \nRavendb will not store it. It should fire exception I suppose.\n"""
230187,96,"b'Embedded ravendb build 97, initialize throws exception ""Value cannot be null""'","b'I downloaded binaries from http://builds.hibernatingrhinos.com/builds/ravendb \nMy code: \nprotected void Application_Start() \n                { \n                        _documentStore = new DocumentStore { DataDirectory = ""App_Data"" }; \n                        _documentStore.Initialize(); \n                        AreaRegistration.RegisterAllAreas(); \n                        RegisterCoreRoutes(RouteTable.Routes); \n                        RegisterAppRoutes(RouteTable.Routes); \n                } \nResult: \nValue cannot be null. Parameter name: type \n[ArgumentNullException: Value cannot be null. \nParameter name: type] \n   System.Activator.CreateInstance(Type type, BindingFlags \nbindingAttr, Binder binder, Object[] args, CultureInfo culture, \nObject[] activationAttributes) +9631386 \n   System.Activator.CreateInstance(Type type, Object[] args) +19 \n   Raven.Database.RavenConfiguration.CreateTransactionalStorage(Action \nnotifyAboutWork) +278 \n   Raven.Database.DocumentDatabase..ctor(RavenConfiguration \nconfiguration) +353 \n   Raven.Client.Document.DocumentStore.Initialize() +660 \n   TeamVision.MvcApplication.Application_Start() in c:\\Dev\\TeamVision \n\\Global.asax.cs:37 \n'"
226807,95,b'Expose MultiLoad using GET',b'So it can be cached more easily\n'
226806,94,b'Implement managed storage',b'Remove dependency on Esent\n'
225457,93,"b""PutIndex doesn't use the ambient user""","b'When trying to create an index using the code from the RavenDB tutorial at http://ravendb.net/tutorials/hello-world I get a HTTP 401 error (WebException: The remote server returned an error: (401) Unauthorized.).\n\nBoth client and server are running in a Windows 7 32bit laptop. The server was run in administrator mode.\n\nHere is the code:\n        static void Main(string[] args)\n        {\n            var store = new DocumentStore { Url = ""http://localhost:8080"" };\n            store.Initialize();\n            CreateIndex(store, ""TestIndex"");\n            QueryProduct(store, ""TestIndex"");\n        }\n\n```\n    private static void CreateIndex(DocumentStore store, string indexName)\n    {\n        store.DatabaseCommands.PutIndex(indexName, new IndexDefinition<Order>\n        {\n            Map = orders => from order in orders\n                            from line in order.OrderLines\n                            select new { line.ProductId }\n        });\n    }\n```\n'"
221722,92,b'Support streaming for documents & attachments',b'In local mode only\n'
217563,91,b'Support projection (SelectFields) in Linq',b''
216889,90,"b'Wrong ""Company Name"" in some assemblies'","b'This is a pretty trivial error, not hindering any functionality, but some assemblies have ""Microsoft"" both as Company and as Copyright, while most of them have ""Hibernating Rhinos""\nHere are the dlls with the wrong value in the Company field:\n- Raven.Bundles.Replication.dll\n- Raven.Bundles.Sample.EventSourcing.ShoppingCartAggregator.dll\n- Raven.Client-3.5.dll\n- Raven.Client.Lightweight.dll\n\nI\'ve seen this in  build 94.\n'"
212943,89,b'Document index reset',b''
212421,88,b'Document range queries syntax',b''
211848,87,b'Document IdentityPartSeparator',b''
211821,86,b'Fixed spelling for intialize in docs',b''
211814,85,b'Document SET based ops in client API',b''
207224,84,"b""JSON Editor creates arrays I didn't ask for""",b'Precondition: Correctly stored document - http://tweetphoto.com/24078701\n1. Select document and open for edit\n2. Switch to JSON Editor\n3. Switch back to View\n4. Behold - http://tweetphoto.com/24078741\n'
203728,83,b'Update client docs to include Linq',"b""Right now, it isn't there, and that mislead people\n"""
203468,82,b'Implement reduce groups',"b'Right now we only partition by reduce keys.\nIf we have large amount of documents with the same reduce key, we really need a higher level batching system, so we have to have  the concept of reduce groups.\n'"
202584,81,b'Add Geo Spatial Search Functionality',"b'Could Geo Spatial support be added via a responder plugin that makes uses of the SQL Server Spatial Library? Both MongoDB and CouchDB have Spatial support and it would mean not having to use a combined SQL Server 2008 + RavenDB approach to do ""nearest"" style queries.\n\nSee http://microsoftpdc.com/Sessions/SVR33 for more info\n'"
202033,80,b'Support dynamic as a document format',b'So we can hand Raven a dynamic instance and it would save it properly.\nAnd allow to read a dynamic document as well\n'
198377,79,b'Attachments in Client API',b'In IDatabaseCommands.\n'
197914,78,b'Replication conflicts in the UI behave... strangely',"b""a) You see all the conflicts under the same key\nb) You can't edit them (probably because the server returns 409\n"""
196455,77,b'Split replication process per instance',"b""Right now, a slow replicating instance would slow down replication for the entire system.\nWe need a way where each replication isn't blocking any other replication.\nNote that we mustn't allow parallel replication to the same server.\n"""
196451,76,b'Smart back off strategy from failed replication nodes',"b""So we won't have to waste a lot of time hitting dead nodes.\nIncrease the wait time every time we need to hit a particular node, so failed nodes would be pinged only rarely\n"""
195602,75,b'Create command line option to avoid create help pages',"b""Some people don't like them\n"""
195413,74,b'Need to keep track of document deletions',b'The problem is that we have to remember deletes to be able to replicate them.\n'
195180,73,"b""Can't start Raven Service""","b""Windows 2003 Server .net 4.0\n\nRavenDB Build 43\nInstalled using /server/ravendb.exe /install\n\nService will not start via services cpanel.\n\nEvent Type: Error\nEvent Source:   RavenService\nEvent Category: None\nEvent ID:   0\nDate:       5/13/2010\nTime:       3:18:28 PM\nUser:       N/A\nComputer:   RCM-JS\nDescription:\nService cannot be started. System.InvalidOperationException: Could not open transactional storage: D:\\ravendb\\Server\\Data\\Data ---> System.InvalidOperationException: Could not read db details from disk. It is likely that there is a version difference between the library and the db on the disk.\nYou need to migrate the disk version to the library version, alternatively, if the data isn't important, you can delete the file and it will be re-created (with no data) with the library version. ---> Microsoft.Isam.Esent.Interop.EsentErrorException: Error ObjectNotFound (JET_errObjectNotFound, No such table or object)\n   at Microsoft.Isam.Esent.Interop.Api.Fail(Int32 err)\n   at Microsoft.Isam.Esent.Interop.Api.Check(Int32 err)\n   at Microsoft.Isam.Esent.Interop.Api.JetOpenTable(JET_SESID sesid, JET_DBID dbid, String tablename, Byte[] parameters, Int32 parametersSize, OpenTableGrbit grbit, JET_TABLEID& tableid)\n   at Microsoft.Isam.Esent.Interop.Table..ctor(JET_SESID sesid, JET_DBID dbid, String name, OpenTableGrbit grbit)\n   at Raven.Da...\n"""
195102,72,b'r',b''
194946,71,b'After SaveChanges document metadata should be updated',"b'Otherwise, changes by triggers are not visible\n'"
193214,70,b'Notifications for index updates',b'Will allow us to do things like replicate an index to a SQL database\n'
190353,69,b'Test floating numbers',b'To see if they serialize correctly\n'
190352,68,b'Problem with mapped result with large reduce keys',"b""Esent doesn't filter things properly at that point\n"""
190301,67,b'Support linq queries as code for indexes',"b'- Should be able to do that from the client API\n- Do the parsing on the query on the client, instead of on the server\n- Then send the result as a serialized expression tree to be compiled on the server\n'"
185175,66,b'Should expose metadata in UI',"b'Metadata is important for a bunch of stuff, we should make it visible in the UI\n'"
184475,65,b'Better error message if .NET 4.0 is not installed',b'right now the build fail in a unclear way\n'
184278,64,b'Show error text when saving index fail',"b'Right now we get generic error message, not good\n'"
184117,63,b'Create dump/load process',b'So we can downgrade databases from Win7 to WinXP\nDump/load is the only way to do so\n'
183892,62,b'Possible DB Portibility Issue',"b'Running RavenDB against the stackoverflow data provided by Oren on WinXP yields the following exception:\n\nSystem.InvalidOperationException was unhandled\n  Message=Could not open transactional storage: D:\\Raven.StackOverflow.Data\\Data\\\n  Source=Raven.Database\n  StackTrace:\n       at Raven.Database.Storage.TransactionalStorage.Initialize() in D:\\Dev\\ravendb\\Raven.Database\\Storage\\TransactionalStorage.cs:line 97\n       at Raven.Database.DocumentDatabase..ctor(RavenConfiguration configuration) in D:\\Dev\\ravendb\\Raven.Database\\DocumentDatabase.cs:line 52\n       at Raven.Server.RavenDbServer..ctor(RavenConfiguration settings) in D:\\Dev\\ravendb\\Raven.Server\\RavenDbServer.cs:line 27\n       at Raven.Server.Program.RunInDebugMode(Boolean createDefaultDatabase, Nullable`1 anonymousUserAccessMode) in D:\\Dev\\ravendb\\Raven.Server\\Program.cs:line 144\n       at Raven.Server.Program.Main(String[] args) in D:\\Dev\\ravendb\\Raven.Server\\Program.cs:line 43\n       at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\n       at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\n       at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\n       at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n       at System.Threading.ThreadHelper.ThreadStart()\n  InnerException: Microsoft.Isam.Esent.Interop.EsentErrorException\n       Message=Error BadLogVersion (JET_errBadLogVersion, Version of log file is not compatible with Jet version)\n       Source=Esent.Interop\n       ErrorDescription=JET_errBadLogVersion, Version of log file is not compatible with Jet version\n       StackTrace:\n            at Microsoft.Isam.Esent.Interop.Api.Fail(Int32 err) in C:\\Work\\managed-esent\\EsentInterop\\Api.cs:line 2264\n            at Microsoft.Isam.Esent.Interop.Api.Check(Int32 err) in C:\\Work\\managed-esent\\EsentInterop\\Api.cs:line 2240\n            at Microsoft.Isam.Esent.Interop.Api.JetInit(JET_INSTANCE& instance) in C:\\Work\\managed-esent\\EsentInterop\\Api.cs:line 130\n            at Raven.Database.Storage.TransactionalStorage.Initialize() in D:\\Dev\\ravendb\\Raven.Database\\Storage\\TransactionalStorage.cs:line 84\n       InnerException: \n\nThis raises the question of portability of the database. Is it a common practice with document database to be able to run them from any machine? If I as a dev create a db on my local workstation and then try to deploy to a server am I SOL? What about server upgrades? I start my application on Windows Server 2000, but want to migrate to Windows Server 2008; what then? Might at least warrant some documentation.\n'"
183749,61,b'Wire CI build ',b'So we can always download the latest\n'
183718,60,b'Support virtual directories',"b'We already support running on those, but we need:\n- To support that in the UI\n- To support that in the Location\n'"
183546,59,b'Failing test causes build to fail',b'TriggerCanModifyDocumentBeforeInsert fails when running build causing build to fail.\n'
183501,58,b'Fix image references in the docs',b'should point them to the web version\n'
183324,57,b'Missing Required DLLs for client in release package',"b'When executing the build to produce a release package, the following dlls are not included but are required by the Client dll.\n\nNewtonsoft.Json.dll\nRaven.Database.dll\n'"
183114,56,b'Update to latest Lucene',b'We seems to be far behind the curve here\n'
182447,55,b'Build script crashes on docs creation',"b'When attempting to create the docs by retrieving them from google groups, the DefaultDatabase.Creator project crashes. \n\nIt\'s receiving a 404 from google groups, due to requesting a bad url (http://groups.google.com/http://groups.google.com/group/ravendb/web/docs-security)\n\nOn the [API index page](http://groups.google.com/group/ravendb/web/docs-http-api-index) the link tag for Security has an absolute URL, where all other pages have a relative url, which is causing the issue.\n\nCorrect Url:\n    <a href=""/group/ravendb/web/docs-http-api-restful"" rel=""nofollow"">Overview</a>\n\nBad Url:\n    <a href=""http://groups.google.com/group/ravendb/web/docs-security"" rel=""nofollow"">Security</a>\n'"
181762,54,b'Provide a plugin model',b'So we can write triggers\n'
177909,53,b'Convention for new IDs on the client',"b'Should allow the user to define how they want to do this.\nFrex, for users, they may want to define:  ""users/"" + user.name\nFor sessions, they will use null (request a guid)\nFor entities, use the identity approach: ""posts/"" which result in ""posts/2""\n'"
177309,52,b'Specifications are failing due to timezone issue',"b'The current regex for timezone only works for negative timezones. In order to get the tests to pass on the other side of the world, the regex needs to be updated in Scenario.cs:37\n\nnew Regex(@""Timestamp"""":""""\\/Date((\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d[+|-]\\d\\d\\d\\d))\\/""""""),\n'"
175376,51,b'Standardize JSON format ',b'We currently have a mix of camelCase under_score and PascalCase\n'
175359,50,b'Allow to use identity values',"b'POST /docs/users/ \n\nwill result in:\n\n{""Key"": ""users/483"" }\n'"
175350,49,b'Update queries',"b'So we can support ""migration"" style queries like: \n\nfrom doc in docs\nwhere doc.type == ""post""\nselect new \n{\n   type = doc.type,\n   content = doc.content,\n   posted_at = doc.posted_at,\n   categories = new [] { doc.category }\n}\n\nShould run at the server side, not client side, and the output overwrite the current document.\n'"
175336,48,b'Bulk save in the client api',"b""We currently don't do that, and it is a good optimization\n"""
175335,47,b'Only save changed entities',b'Can easily check that using Json comparer.\n'
175319,46,b'Ensure all JS is included in distribution',"b""Right now I don't think this is the case, jquery.RavenDB.js may not be included.\n"""
175262,45,b'UI should handle all index options',"b'Right now it only supports Map, should support Map, Reduce, Indexes and Stores.\n'"
173829,44,b'Update index format',b'We changed the format\n'
172383,43,b'In the Client API - add support for batch Load',b'posting to /queries\n'
172192,42,b'Support optimistic concurrency in client API',b'Should manage the etag internally\n'
172191,41,b'Support ETag on ServerClient client API',"b""Right now we aren't supporting this.\n"""
171981,40,b'Allow to rollback / commit transaction via HTTP API',b'Just need to wire it up\n'
171975,39,b'Provide DELETE functionality in client API',"b""We currently don't have that\n"""
169738,38,b'Allow to define lucene index/store settings',b'required so we would allow the users to define indexing behavior.\n'
169698,37,"b""ServerClient doesn't support Sorting of Fetching""",b'Need to add support for it\n'
169690,36,b'Implement DTC support',"b'One of the comments that I heard was that DTC support would be important for several key scenarios (such as using Raven with Rhino Service Bus, or any queuing implementation).\nWe should implement a DTC support using System.Transactions.\n'"
159526,35,b'Support sharding on the client side',"b'Should be able to define a set of servers to use as the sources, and shard between them automatically.\n'"
157535,34,b'View should show error when doc / template does not exists',"b'Right now, visiting this URL shows no error:\nhttp://localhost:8080/raven/view.html?docId=raven_documentation/docs_http_api_get2\n\nIt should show something.\n'"
157519,33,"b'When Json data is HTML, UI look bad'",b'That is when we are using the new default documentations\n'
150477,32,b'Support virtual directories',b'So we can host raven on:\nhttp://+/:8080/raven\n'
150259,31,b'Merge tasks',"b'When a task is added, should look for existing tasks of the same type on the same index/view and merge it with them. \nShould increase perf some.\n'"
149157,30,b'When deleting doc - delete from index',b'Need to consider regular index & mapreduce views \n'
145805,29,b'Support PATCH',b'So we can do partial document updates\n'
145445,28,b'Update statistics UI',"b'There are more information there, we should show it\n'"
145321,27,b'Allow aggregated views',"b'from post in docs.posts\nselect new {\n  post.blog_id,\n  comments_length = comments.length\n  };\n\nfrom agg in results\ngroup agg by agg.key into g\nselect new {\n  agg. blog,\n  comments_length = g.Sum(x=>x.comments_length)\n  };\n\nhttp://groups.google.com/group/rhino-divandb/web/raven--views-aggregation-design\n'"
145238,26,b'Allow to sort results arriving from an index',"b'/indexes/UsersAndProjects?sort_ascending=project&sort_descending=name <- sort by project ascending, name descending\n\nThink about finding better names for the query params\n'"
145228,25,b'Allow to select just some fields from index',"b'Instead of getting full document back, allow a way to specify some of the fields that you want to be retrieved directly from the index.\n'"
144803,24,"b""UI doesn't handle conflicts in updating docs""",b'Need to show some error on that \n'
144275,23,b'Investigate making indexing a C# 4.0 dynamic feature',b'No reason to write my own dialect of the bloody thing if C# 4.0 gives it for free\n'
144268,22,b'Disable indexes that have more than 10% failure rate',"b'If an index cause more than 10% failures (exceptions on indexes), it probably means that it is faulty, and we should disable it.\nDisabled indexes cannot be queried and would require re-definition to be of use.\n'"
144266,21,b'Keep track of indexing errors',b'Simple numbers:\nNumber of total indexed documents (including re-indexing).\nNumber of failed indexing attempts (threw an exception)\n'
144131,20,b'Add user visible log',b'Where they can see things like errors from index functions\n'
143611,19,b'Browse index',b'Similar to what we do with /docs\n'
143593,18,b'Add cache headers for statics',"b""So we wouldn't request them all the time\n"""
143488,17,"b""Can't query index in the UI""","b""I can select an index, but i can't seem to input the query\n"""
143485,16,b'JSON editor corrupts document',"b'Put this in the raw json format\n{""name"":""ayende"",""email"":""ayende@ayende.com"",""projects"":[{""name"":""raven""}]}\n\nMove to the json editor, try to open the projects node, see that you see nothing, switch back to raw json, and you see the projects are gone.\n'"
143483,15,"b""Valid json doesn't work in the json editor""","b""The folowing JSON doesn't work:\n{'name':'ayende','email':'ayende@ayende.com','projects':[{'name':'raven'}]}\n"""
143461,14,"b'After a doc PUT or index PUT, should refresh UI'","b'other wise, there is no indication that something happened.\n'"
143456,13,b'JSON Editor should be robust for bad json',"b'when user puts in bad json in the raw view, there is no error, but things stops working.\n'"
143380,12,b'Allow to run the server as service',b'Run as debug by default / console\n-service << run as service -install << install service -uninstall << remove service\n'
143379,11,b'Index creation error should be shown in the UI',b'We get a message back from the server\nRight now it ignores it.\n'
143378,10,b'Query by document id',b'Should be able to POST a list of document ids to the server and get back their content.\n'
143376,9,b'Batching PUT & DELETE',"b'Not a RESTful operation, but required.\n\nThe simplest is to create\nPut( Doc [] docs)\n\nAnd then to have something like;\n\n/bulkdocs - where post accepts an array of documents and save them in a single transaction The format could be;\n\n[ { method: ""PUT"", data: { the actual doc }, metadata: { meta }, key: key }, { method: ""DELETE"", key: key } }\n'"
143374,8,b'Client library for .NET',"b'Something simple, that can make writing data to RDB easy\nImplement UoW ?\n'"
143373,7,b'Security',b'Allow to define meta data about a document (using headers)\nSaying who are the users/groups allows to see it\n\nThis requires us to have user/groups\nAnd requires us to have authentication\n'
143372,6,b'Configuration for the server',b'A simple xml /json file specifying;\n- data dir\n- log level\n- port \n- virtual directory\n'
143371,5,b'Provide more stats',"b'number of requests\nnumber of puts, gets, deletes\nnumber of queries\navg request time\nlongest request url\n\nwhere longest means took the most time\nbiggest request url, where biggest means the db sent the most data\n'"
143368,4,b'Add versioning',b'Use etag as the version \n'
143366,3,b'Support 304 on statics & docs',b'Probably the same for indexes as well.\n'
143365,2,b'HTML UI for the DB',"b'Allow to see documents, see queries, execute queries, add queries , update queries, remove queries, edit documents.\nShould be self contained as a simple HTML + JS app working against the server.\n'"
143364,1,b'Handle errors by index function',"b'So that if a function throw, it will only effect the current document, nothing else.\n'"

issue_no,comment_no,comment_body
13,149975,b'Should be fixed now\n'
21,150075,"b'Probably keep around the last 50 errors as well, for debugging purposes.\n'"
15,150494,"b""Keys in JSON must be double quoted according to the spec.  This isn't valid JSON.\nSee: http://awurl.com/mbsj9bz81#first_awesome_highlight\n\nI can handle it if you want, just do a replace on single quotes, but that could have unintended consequences (i.e. replacing intentional single quotes)\n"""
15,150501,"b""I know that they _should_, but the fact is that most people don't behave in this manner\nI don't really know why that decision was made, but I think we need to support it.\n"""
15,150572,"b'I don\'t really know how to do this without potentially impacting valid JSON like the following:\n\n{ ""name"" : ""ayende\'s name"" }\n\nI can replace single quotes with double quotes, but that will modify that valid JSON.  We can write our own JSON parser, but I don\'t know of any parsers that will accept malformed JSON and smartly (this is ambiguous) parse it.\n'"
15,150607,"b'Yeah, good point.\nI almost want to use eval for this, but I will resist.\nOkay, \n'"
11,150658,"b'Implemented.  I did notice, however that it seemed like the index validation might not be very robust.  In implementing this, it successfully accepted things like this: \n\nfrom doc in docs\nselect new {  \n'"
16,150659,b'Fixed.  Was a general issue with arrays of data.\n'
14,150787,b'Implemented.\n'
11,150789,"b'Going to re-write this for C# 4.0, should fix this.\n'"
17,150826,"b""I am able to query fine now.  I'm not sure if I fixed something.  Can you try again with the latest version?\n"""
17,150844,"b""Yes, a later version of me which isn't stupid\n"""
23,151121,"b'Done, possible and will be committed soon\n'"
25,151360,b'/indexes/UsersAndProjects?fetch=all_values - get all index fields\n/indexes/UsersAndProjects?fetch=name&fetch=project - get just the name & project fields\n'
20,152159,b'Done\n'
21,152163,b'Done\n'
22,152192,"b'The logic is:\nIf over 10 docs are indexed (to avoid disabling at the first doc) and if the failure rate is 15% or higher, index is disabled.\n'"
25,152203,b'Done\n'
3,153439,b'Done!\n'
18,153458,b'304 deals with this\n'
1,158181,b'Handled\n'
1,158182,b'So we can close this\n'
5,158183,"b""Tracking all those stats would be complex & probably expensive, closing this because it doesn't seem that important.\nMost of our work is done on the backend, anyway.\n"""
29,158184,b'Supported!\n'
30,158185,b'Done\n'
27,158198,"b'Done, yeah!\n'"
31,171156,"b'Not that useful, though\nNot going to implement this\n'"
34,177152,"b""I'll take a look at this\n"""
34,177195,"b'It will now say ""No View template was specified for this document"", there was only a JS action for status 200, I added one for 404 which was properly being detected and passed down, just not handled. Fix is in branch issue34\n'"
9,184391,b'This is done!\n'
8,184392,b'I think this is pretty much done\n'
35,184393,b'Done\n'
39,188056,b'Done\n'
41,188098,b'Done.\n'
42,188424,b'Handled\n'
40,188445,b'Working now:\nPOST /transaction/commit?tx=the-tx-id\nPOST /transaction/rollback?tx=the-tx-id\n'
43,188494,b'Implemented.\n'
37,191798,b'Fetching is implementing\n'
37,191809,"b'implemented, not implementing\n'"
38,205463,b'Fixed\n'
36,205465,"b'Done, done done\n'"
37,212119,b'Sorting works\n'
26,212120,b'Done now\n'
32,212124,"b""Done\nNote that this doesn't work with the WebUI\n"""
33,212227,b'Fixed\n'
44,214164,b'Duplicate of 45\n'
50,214223,"b'Fixed, but using PUT instead of POST\n'"
7,214226,"b'Too complex for now, not going to implement\n'"
28,214241,b'added the stats view in my fork.\n'
28,214268,"b'Merged, thanks!\n'"
24,214271,b'added an error message when an error from saving occurs.\n'
47,214279,b'Handled.\n'
48,214297,b'Bulk saves (and in a single tx) now works.\n'
24,214322,b'Awesome! Merged and pushed.\n'
52,216874,b'Fixed\n'
51,223085,b'Done\n'
46,223086,"b'Checked, it is there\n'"
49,223226,"b'Not going to implement this, it is pretty easy to handle this at the client API level\n'"
53,223243,b'Done\n'
54,223366,b'This is now supported\n'
55,224047,"b'This is a known issue, I am currently updating all the docs.\nJust cancel the crash dlg and the build will continue.\n'"
55,224054,"b'Yeah, i was guessing it was known. \n\nI changed line 78 to this which also resolved the issue\n\n```\nvar uri = new UriBuilder(""http"", ""groups.google.com"", 80, href.Replace(""http://groups.google.com/"", """")).Uri;\n```\n'"
59,225601,b'just submitted a patch for this...\n'
59,225800,b'Fixed\n'
55,225801,b'Fixed\n'
57,225802,b'Fixed\n'
58,225846,b'fixed\n'
62,226416,b'I confirmed that it is not possible to _downgrade_ databases.\n_Upgrades_ are supported (and should be seamless) .\nI am closing this issue because the solution to this is to write a dump/load routine.\n'
45,226662,b'Done!\n'
64,226664,b'Done\n'
63,229602,"b'This can be done by users, I think.\nWe already have backup/restore options.\n'"
56,229658,b'We are now using 2.9.1\n'
60,229659,b'Done\n'
66,232260,b'done\n'
65,234029,b'Done\n'
61,235661,b'Done :-)\n'
67,235662,b'Done : -) \n'
68,235663,"b'We have a workaround, but I am really not happy about it.\n'"
69,235666,b'Works :-)\n'
68,238369,b'Fixed\n'
70,240482,b'Done\n'
72,240813,b'mistake\n'
73,240897,"b'Um, I would say that the error is pretty explicit about what is wrong.\nYou need to delete the existing /Data directory\n'"
73,240909,b'This is a clean install. Why would there be an existing DB?\n'
73,240914,"b""In any case, deleting the /Data folder does not solve. Raven creates a new /Data folder, then throws an error to the event log. I'll check the version of JET I'm running. \n"""
73,240921,b'Edit: Microsoft Jet Engine Library 4.0.9505.0 \n'
73,241185,"b""Still doesn't work on Windows Server 2003. Tried everything.\n"""
73,241199,"b'Whoops, repreduced!\n'"
73,241203,"b'And now it is fixed, I hope, can you try?\n'"
73,241273,"b""Yes, I'll give it a try.\n"""
75,242621,b'No longer applicable\n'
74,242622,b'Doing this now in the replication bundle.\n'
76,243113,b'Done\n'
77,243128,b'Done\n'
73,244000,"b'Oren, I was able to start RavenDB as a service with the latest build. This issue appears to be resolved! Thank you.\n'"
83,254119,"b""I'm happy to do this if you want, how do I go about editing the documentation?\n"""
84,260447,b'Should probably be fixed now\n'
83,262537,"b""I've done this now, are the changes okay or do you want some more info?\n"""
83,262543,"b'Where did you make the changes, I am not seeing them\n'"
83,262550,"b'For me they\'re showing up in the ""Querying"" section of the page at http://ravendb.net/documentation/docs-client-api-index.\n'"
86,262630,"b""I've just changed this in the Client API doc at http://ravendb.net/documentation/docs-client-api-index\n"""
86,262632,b'awesome thanks!\n'
86,262662,"b'The irony is that I\'d spell it correctly as ""initialise"" being as I\'m English ;-)\n'"
83,262670,b'Thanks\n'
87,262679,b'Done - in the client api\n'
71,278868,b'Done\n'
90,278869,"b'Fixed, thanks.\n'"
85,278870,b'They now exists\n'
89,278871,b'Can now be done using RESET /indexes/foo\n'
88,278872,b'Documented: http://www.ravendb.net/documentation/how-indexes-work\n'
93,279663,b'Quick workaround is to set the AnonymousAccess mode to All for now.\nThis will be fixed soon.\n'
80,285207,"b'I submitted a pull-request for some of this functionality, i.e. the part that allows you to do session.Store(dynamicDoc) and session.Load<dynamic>(""dynamicDoc/1"")\n'"
97,286653,"b'Also there is some weird handling of non standard id. When I stored such email without ""emails/"" prefix, web admin tool doesn\'t show such document, id was not queryable, but after several put of correct documents, db stats show correct document count, but bad document was still hidden\n'"
97,286752,"b'I just realized I need another property UserId ;) \nStill, public class Email { public string Id { get; set; } } should work or fire exception.\n'"
98,286842,"b""Also searching doesn't work. For example I was looking for FindIdentityProperty, no result. Then I tried google -> FindIdentityProperty here http://ravendb.net/documentation/docs-client-api-index :-)\n"""
99,290293,b'Fixed\n'
96,290294,b'Fixed\n'
100,291801,b'Verified test passes\n'
81,292603,b'This is super important feature...\n'
103,293453,"b'Fixed now, please note that this will work only _after_ a call to SaveChanges()\n'"
102,293454,b'Fixed\n'
105,299929,b'Fixed in:\n\nhttp://github.com/e-tobi/ravendb/commit/10ed23904e72668a82120d0da40366e6a9ec9e0c\n'
106,303997,"b""are you sure session isn't null or email isn't null? Judging by the stack trace I would of said it was that. Not Raven.\n"""
107,308777,b'That is expected when you are getting a conflict\n'
108,309453,"b'I have found something interesting. It fails on my javascript files, e.g. /assets/js/jqueryui/jquery.ui.dialog.js, only. Strange. I can turn of static files authentication, but anyway, it should work :)\nI do not use any additional assembly, just pure mvc2.\n'"
108,309455,b'Other static files like images and styles are requested ok. \n'
108,309467,"b'Correction, other static files fail as well.\n'"
107,309923,"b""I don't think so. I just updated Raven 98 to 100, and then this error started to appearing. Also, the only code which is actually called is AuthenticateRequest (http://pastie.org/1042296)\nI do not see where conflict could be.\n"""
101,311813,"b'I\'m happy to take a look at this is no one else is doing it? How would you see it working, the same way as you can currently set the analysed/not-analysed options?\n\ni.e. Analyzer = {{""Tag"", Analyzer.StopAnalyzer}},\n\nWould this only cover the built-in lucene analyser, listed here http://lucene.apache.org/lucene.net/docs/2.4.0/Lucene.Net.Analysis.html\n'"
109,314761,"b'SORRY (1000 TIMES) I POSTED THIS ON THE WRONG FORUM, SHOULD HAVE BEEN GOOGLE GROUPS FORUM... \n'"
111,316430,"b""It's fixed already in the trunk\n"""
112,318752,b'Easily fixed. See: http://github.com/Inferis/ravendb/commit/da593c1254776759fa713fedc4e428dc711acbba\n'
112,319180,b'Fixed\n'
114,319189,b'Fixed\n'
113,319208,b'Fixed\n'
113,319298,b'Thank you\n'
117,322163,b'Fixed\n'
116,322184,b'Fixed\n'
115,322186,b'Fixed\n'
106,322188,"b""I am considering this as non Raven issue, since the stack trace doesn't show anything\n"""
110,322193,b'Agreed\n'
101,322976,b'Fixed\n'
95,322985,b'Fixed\n'
93,322989,b'Fixed\n'
104,322991,"b'Yes, it should\n'"
105,323014,b'Pulled\n'
119,324826,b'How would you propose to define the credentials to use?\n'
119,324839,"b""RavenConfiguration should have a CredentialsCache and that should be used from the replication task.\n\nFor embedded this would work beatifully. For server (.exe or web), it's trickier, because the only way to populate that cache would be with some startup hook of some sort, or from configuration... haven't made up my mind on what would be best there...\n"""
121,330261,b'You need to reference Raven.Storage.Esent.dll as well\n'
120,330262,b'Fixed\n'
124,333162,"b""also, if the event handler needs to access the store for anything, it can't as there's no sender arg.\n"""
123,333833,"b""I am afraid that I don't understand the purpose of this event.\nCan you give me a scenario where this would be useful?\n"""
124,333842,b'Fixed\n'
122,333848,b'a) fixed\nb) Raven output is now compressed by default\n'
123,333953,"b'auditing? the BeforeStore sounds like it could be cancelled, the transaction rolled-back, etc.\nI want to track after it was definitely stored. Kinda like the Stored event on the document store, but for listeners.\n'"
123,334120,b'What auditing?\nYou would have to go to the server again to do any saves.\n\nA scenario that came to me is wanting to do something with the _metadata_ coming back from the server (which the server is free to change).\nFixed.\n'
125,335846,b'Fixed\n'
126,336026,"b'Known issue, there is a bug in chrome.\nFixed and will be out soon\n'"
127,336721,"b'Yes, I run into the same problem.\nDuring a demo!\n'"
128,338679,"b""Making some pitty progress. If I explicitly set the FieldIndexing as NotAnalyzed, I no longer get the invalid cast exception, but the query no longer finds any results :S.\n\nThe ClrTypes I'm saving look like:\n\nFeedSync.Sync`1[[FeedSync.Raven.Tests.Issues.Foo, FeedSync.Raven.Tests]], FeedSync\n\nand \n\nFeedSync.Raven.Tests.Issues.Foo, FeedSync.Raven.Tests\n\nCould it be an improper indexing because of the special chars in the former that is somehow breaking the index/query?\n"""
128,338686,"b'The query is always performed by the latter, by the way, as seen in the test code.\n'"
128,338936,"b'[Fact]\npublic void WhenTriggerPutsDocument_ThenIndexIsBroken()\n{\n    using (var session = store.OpenSession())\n    {\n        session.Store(new Foo { Value = ""foo"" });\n        session.SaveChanges();\n    }\n\n```\nstore.DatabaseCommands.PutIndex(\n    ""ByClr"",\n    new IndexDefinition\n    {\n        Indexes = {{""ClrType"",FieldIndexing.NotAnalyzed}},\n        Map = @""from doc in docs\n            select new { ClrType = doc[""""@metadata""""][""""Raven-Clr-Type""""] };"",\n    },\n    true);\n\nusing (var session = store.OpenSession())\n{\n    var typeName = ReflectionUtil.GetFullNameWithoutVersionInformation(typeof(Foo));\n    var all = session\n        .LuceneQuery<Foo>(""ByClr"")\n        .Where(""ClrType:[[\\"""" + typeName + ""\\""]]"")\n        .WaitForNonStaleResultsAsOfNow(TimeSpan.MaxValue)\n        .ToList();\n\n    Assert.Equal(1, all.Count);\n}\n```\n\n}\nThis works, though\n\nThe issue is the way you do the query and that the ClrType must be NotAnalyzed\n'"
127,338939,b'Fixed\n'
129,339581,"b'Just fixed this in my fork. \nAdded two tests. The scenario is now broken for phrase queries (multi-terms), but works fine for single ones:\n\n```\n    [Fact(Skip = ""This still fails because of the new greediness in the regex. Needs more work.""]\n    public void Can_parse_NonAnalyzed_Multiple_Terms_UnquotedStringWithSquareBrackets()\n    {\n        var query = QueryBuilder.BuildQuery(""ClrType:[[Sync`1[[Bar, BarLib]], SyncLib]] OR ClrType:[[Sync`1[[Foo, FooLib]], SyncLib]]"", new PerFieldAnalyzerWrapper(new StandardAnalyzer(Version.LUCENE_29)));\n\n        Assert.True(query is PhraseQuery);\n        var terms = ((PhraseQuery)query).GetTerms();\n        Assert.Equal(terms[0].Field(), ""ClrType"");\n        Assert.Equal(terms[0].Text(), ""Sync`1[[Bar, BarLib]], SyncLib"");\n        Assert.Equal(terms[1].Field(), ""ClrType"");\n        Assert.Equal(terms[1].Text(), ""Sync`1[[Foo, FooLib]], SyncLib"");\n    }\n\n    [Fact]\n    public void Can_parse_NonAnalyzed_UnquotedStringWithSquareBrackets()\n    {\n        var query = QueryBuilder.BuildQuery(""ClrType:[[Sync`1[[Foo, FooLib]], SyncLib]]"", new PerFieldAnalyzerWrapper(new StandardAnalyzer(Version.LUCENE_29)));\n\n        Assert.True(query is TermQuery);\n        Assert.Equal(((TermQuery)query).GetTerm().Field(), ""ClrType"");\n        Assert.Equal(((TermQuery)query).GetTerm().Text(), ""Sync`1[[Foo, FooLib]], SyncLib"");\n    }\n```\n'"
130,339973,b'apparently fixed on master. waiting for push.\n'
129,340038,"b""This isn't actually a problem, you need to use RavenQuery.Escape(type)\n"""
131,343743,"b""We weren't removing stuff for the index cache, fixed. Thanks for noticing.\n"""
130,343744,b'fixed\n'
110,343746,b'Fixed\n'
79,343755,b'fixed\n'
132,345300,"b'Fixed locally, will be pushed tomorrow\n'"
138,350075,"b""I'm not sure how you achieved this previously but this would be my\ninitial idea for solving this\n\nI'm going to assume you have an index document, what i would do is\nanytime an index is updated or created to store inside that document\nall of the types that index works with in a easily visible way (this\nmight already be the case) and have a special index that would be over\nthe index objects document types property so this way when a document\ncomes in you just hit the special index that gives you all of the\nindexes that might need to be recalculated based on the incoming\ndocument instead of having to hit all available indexes.\n\nWhile it would be an assumption I assume this should be a very quick\noperation since the indexes index would never be stale except when\nsomeone alters/creates an index which should be a relatively uncommon\nscenario in a production db. \n"""
138,351015,b'Fixed\n'
139,356591,"b'Not an issue.\nBasically, you are issuing the query too fast, since RavenDB computes indexes on the background.\n'"
139,356601,b'it is right thinks\n'
139,356602,b'thanks\n'
140,356684,"b'Opps, that is how it works now :-)\n'"
81,357313,b'Supported now\n'
143,363882,"b""Item 2) isn't currently implemented, see http://groups.google.com/group/ravendb/browse_thread/thread/3df57d19d41fc21 and http://github.com/ravendb/ravendb/issues/issue/91\n"""
118,363887,"b""I'm happy to do this, give me a couple of days to get the info together and I'll update the docs.\n"""
144,366398,"b'Could repro this on latest sources. The error is that store-level DatabaseCommands was being regenerated on every property get invocation, so you could NEVER set operation headers at the store level. \n\nThe next problem was that at session level, the commands were again copied every time, without accounting for store-level operation headers. \n\nFixed both issues in my branch. Will send a pull request soon.\n'"
133,369100,"b""Ok - I tried to dig into this issue.\n\nI can increase MaxVerPages to just get a bigger version store, but that's just curing the symptoms, not the disease.\n\n[How Do I Pulse My Transaction?](http://managedesent.codeplex.com/wikipage?title=HowDoI&referringTitle=ManagedEsentDocumentation) suggests to periodically commit to avoid running out of version store. But I'm still a little bit afraid of Raven.Storage.Esent, so I'm not going to touch this.\n\nThe bulk operations aren't transactional anyway so my probably naive suggestion would be to just batch the bulk operations.\n\nI've done this and it at least solves this issue. I'm not sure, if it doesn't create new ones. It would be nice, if you could check this.\n\nSHA: 5d7d772100ddbf9ec228c0f28cf99715a8176fc9\n"""
118,369298,"b""I've updated the docs. I published it at http://ravendb.net/documentation/how-indexes-work-updated, so that you can read it before it's publicly available.\n"""
133,370313,b'Applied\n'
134,370315,b'HostName\n'
144,373539,b'Fixed\n'
118,373541,b'Done\n'
147,374663,b'I need just a tad more information here.\nWhat is indexedUsers ?\n'
148,375236,"b""The problem isn't there with build 136\n"""
148,376202,b'Fixed\n'
147,376247,"b'```\npublic class Order\n{\n    public string Id { get; set; }\n    public string Customer { get; set; }\n    public IList<OrderLine> OrderLines { get; set; }\n    public User User { get; set; }\n\n\n    public Order()\n    {\n        OrderLines = new List<OrderLine>();\n    }\n}\n\npublic class OrderLine\n{\n    public string ProductId { get; set; }\n    public int Quantity { get; set; }\n}\n\npublic class User\n{\n    public string Name { get; set; }\n}\n```\n\n//index\n            using (var s = _store.OpenSession())\n            {\n                _store.DatabaseCommands.PutIndex(""test"", new IndexDefinition<Order, Order>\n                {\n                    Map = ""from doc in docs select new {doc.Customer,doc.User.Name}"",\n                    Stores = {{ ""Customer"", FieldStorage.Yes } }\n                }\n                , true);\n\n```\n        }\n```\n\n//store\n            using (var s = _store.OpenSession())\n            {\n                var order = new Order();\n                order.OrderLines = new List<OrderLine>();\n                order.Customer = ""two"";\n                order.User = new User();\n                order.User.Name = ""zz2"";\n                var line = new OrderLine();\n                line.ProductId = ""productids/3"";\n                line.Quantity = 10;\n                order.OrderLines.Add(line);\n                s.Store(order);\n                s.SaveChanges();\n            }\n////query\n            using ( var s = _store.OpenSession())\n            {\n\n```\n            var o3 = from n in s.Query<Order>(""test"") select new { n.Customer };\n\n            var o4 = o3.ToList(); //throw exception\n\n        }\n```\n'"
147,377158,b'Fixed.\n'
143,377548,"b'thanks for your response,two question \n1. the session is thread safe or not  , i should open session for each query  like unit test or use single session for application lifetime.\n2. Map = ""from doc in docs select new {doc.Name,doc.User.Name}""  is not allowed?\n\xe2\x80\x9cName\xe2\x80\x9d is can\'t reduplicate infomation\n'"
143,382386,b'ok \n'
149,382392,"b""No, you must specify unique names for each element.\nFor the linq part, you can use the Lucene query, I'll look into how to fix this issue for you\n"""
143,382489,"b""For qu 1) I'd recommendtaking a look at the docs, see http://ravendb.net/documentation/client-api and http://ravendb.net/documentation/client-api/design-guidelines.\nFor 2) I'd recommand posting it to the discusssion group here http://groups.google.com/group/ravendb, as more people will be able to help out. Make sure you post a full code sample so it can be reproduced.\n"""
150,383858,b'Pulled\n'
151,383861,b'Pulled\n'
145,384176,b'Fixed\n'
151,384178,b'Pulled\n'
150,384179,b'Pulled\n'
143,384275,"b""http://groups.google.com/group/ravendb   is valid? i can't open the link\n"""
143,384620,"b""I just tried it on my machine and it works okay, so I don't know what the problem is, sorry. Try testing it at http://downforeveryoneorjustme.com.\n"""
149,390540,b'waiting\n'
91,406056,b'Fixed\n'
156,406959,b'Pulled\n'
157,406960,b'Fixed\n'
159,406961,b'Duplicate\n'
152,406966,b'Pulled\n'
156,406968,b'Pulled\n'
141,420263,b'Already done\n'
134,420265,b'Done\n'
155,422422,b'Done!\n'
142,425884,b'Done http://ravendb.net/bundles/authorization\n'
80,425955,b'done\n'
161,426147,b'Done\nhttp://ravendb.net/faq/includes\n'
146,429384,b'Done\n'
163,429386,b'Done\n'
160,429585,b'Done\n'
164,431343,b'Pulled\n'
165,431654,"b'Pulled.\nPlease note that next time, it would be better to create separate tests, rather than modifying existing ones.\n'"
166,457742,b'Pulled\n'
171,458686,"b""Noo, meant to submit this to Ayende's fork\n"""
174,461107,b'Started\n'
174,461500,b'And submitted\n'
176,461555,"b'We might be even be able to let you do more complex things, like template for the actual full blown view.\n'"
174,470215,b'Done\n'
177,470224,b'Pulled\n'
179,470537,b'_have_ to rollback on failure\n'
181,476476,"b""+1 for the option 2 suggestion, I think the best approach to this would be for Raven to expose a custom type like RavenAttachment or similar that has the binary property on it where you stuff the content. Then for Raven to handle the underlying magic of where you're getting the attachment from, perhaps with with an optional param to either pull or not pull the attachment content when querying the documents that contain the attachment.\n"""
180,476690,"b'No, the ids are correct, they are ""genres/1"", ""genres2"", etc.\n'"
180,476707,"b'Then line 16 of the Index for the Store View should be:\n\n<%: Html.ActionLink(genre.Name, ""Browse"", ""Store"", new { id = genre.Id }, null)%>\n'"
170,479384,b'I have started to refactor the samples to get this done.\n'
170,481767,b'I see that I have to wait for the Query<T>() implementation from Rob Ashton before I can make alle LuceneQuery<T> disappear .\n'
170,496289,"b'That was merged in, so you can do that.\n'"
180,496290,"b'Fixed, thanks!\n'"
170,497483,"b""which branch is this merged into? master at git://github.com/ravendb/ravendb.git doesn't give me any new updates?\n"""
170,497563,b'Still in the unstable fork.\nUse \ngit://github.com/ayende/ravendb.git \n'
182,499071,b'Pulled\n'
167,499074,"b'Not going to happen, will work in SL UI\n'"
169,499075,"b'Not going to happen, will wait for SL UI\n'"
168,499077,"b'Not going to happen, will wait for SL UI\n'"
149,499079,b'This was fixed\n'
136,499080,"b'Not going to make this change. \nWe already do that in the Linq API, and the Lucene level API is meant to be low level stuff\n'"
172,499098,b'No longer considered\n'
94,499099,b'Done\n'
78,499100,"b""Won't be an issue with the SL UI\n"""
183,504113,"b'Fixed, thanks\n'"
186,508616,b'```\nclass NumberT\n{\n    public string Id { get; set; }\n    public int cost { get; set; }\n}\n```\n'
186,508936,"b'You need to let RavenDB knows about the sort order.\n\nsession.DatabaseCommands.PutIndex(""fornumber"", new IndexDefinition\n            {\n                Map = @""from s in docs.NumberTs\n                        select new { s.cost }"",\n                SortOptions = {{""cost"", SortOption.Int}}\n            }, true);\n'"
188,510711,"b'Btw: Small typo in the test class: ""DyanmicQueries"" \n'"
186,510829,b'Thanks\n'
185,511234,"b'This is actually typo in the code, fixed.\n'"
187,511235,"b'Fixed, thanks\n'"
181,517302,b'Attachments can now replicate\nAttachment now have trigger support\n'
194,517667,"b'Hi, I need to get a contribution agreement from you to accept the code.\nhttp://ravendb.net/faq/contributing\n'"
191,517671,b'Thanks so much for doing this!\n'
194,531339,b'Pulled\n'
192,531342,b'Pulled\n'
193,531343,b'Pulled\n'
196,544910,b'Pulled\n'
198,558731,b'Pulled\n'
197,558733,b'Already done locally\n'
199,566038,b'the version is build_169\n'
199,566077,"b'session.LuceneQuery(INDEX_SOFT_NAME).Where(""f_platform:1 AND (f_name:_H_ OR f_alias:_H_)"").OrderBy(new[] { ""-f_License"", ""f_totaldownload"" }).Take(100);\n'"
199,566079,"b""why the star(*) can't be show?\n"""
199,566080,b'_h_\n'
199,566645,"b'The star is because the comments are using markups\nYou have to escape it using a \\, like so\n*H*\n'"
199,566652,"b'And this test pass:\n\n[Fact]\npublic void CanQueryStartingInH()\n{\n    using(var store = NewDocumentStore())\n    {\n        using (var session = store.OpenSession())\n        {\n            session.Advanced.DatabaseCommands.PutIndex(""test"", new IndexDefinition\n            {\n                Map = @""from s in docs.Softs\n                select new { s.f_platform, s.f_name, s.f_alias,s.f_License,s.f_totaldownload}"",\n                Analyzers =\n                    {\n                        {""f_name"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                        {""f_alias"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                    },\n                Indexes =\n                    {\n                        {""f_platform"", FieldIndexing.NotAnalyzed},\n                        {""f_License"", FieldIndexing.NotAnalyzed},\n                        {""f_totaldownload"", FieldIndexing.NotAnalyzed},\n                        {""f_name"", FieldIndexing.Analyzed},\n                        {""f_alias"", FieldIndexing.Analyzed},\n                   },\n                SortOptions = \n                    {\n                        { ""f_totaldownload"", SortOptions.Int },\n                        { ""f_License"", SortOptions.Int },\n                    }\n\n```\n        }, true);\n\n        var entity = new \n        {\n            f_platform = 1,\n            f_name = ""hello"",\n            f_alias = ""world"",\n            f_License = ""agpl"",\n            f_totaldownload = -1\n        };\n        session.Store(entity);\n\n        session.Advanced.GetMetadataFor(entity)[""Raven-Entity-Name""] = ""Softs"";\n\n        session.SaveChanges();\n\n        Assert.NotEmpty(\n            session.Advanced.LuceneQuery<dynamic>(""test"").\n            WaitForNonStaleResults().\n            Where(""f_platform:1 AND (f_name:*H* OR f_alias:*H*)"")\n            .OrderBy(new[] { ""-f_License"", ""f_totaldownload"" })\n            .ToList()\n            );\n    }\n}\n```\n\n}\n'"
199,566653,"b'And this test pass:\n\n[Fact]\npublic void CanQueryStartingInH()\n{\n    using(var store = NewDocumentStore())\n    {\n        using (var session = store.OpenSession())\n        {\n            session.Advanced.DatabaseCommands.PutIndex(""test"", new IndexDefinition\n            {\n                Map = @""from s in docs.Softs\n                select new { s.f_platform, s.f_name, s.f_alias,s.f_License,s.f_totaldownload}"",\n                Analyzers =\n                    {\n                        {""f_name"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                        {""f_alias"", typeof(KeywordAnalyzer).AssemblyQualifiedName},\n                    },\n                Indexes =\n                    {\n                        {""f_platform"", FieldIndexing.NotAnalyzed},\n                        {""f_License"", FieldIndexing.NotAnalyzed},\n                        {""f_totaldownload"", FieldIndexing.NotAnalyzed},\n                        {""f_name"", FieldIndexing.Analyzed},\n                        {""f_alias"", FieldIndexing.Analyzed},\n                   },\n                SortOptions = \n                    {\n                        { ""f_totaldownload"", SortOptions.Int },\n                        { ""f_License"", SortOptions.Int },\n                    }\n\n```\n        }, true);\n\n        var entity = new \n        {\n            f_platform = 1,\n            f_name = ""hello"",\n            f_alias = ""world"",\n            f_License = ""agpl"",\n            f_totaldownload = -1\n        };\n        session.Store(entity);\n\n        session.Advanced.GetMetadataFor(entity)[""Raven-Entity-Name""] = ""Softs"";\n\n        session.SaveChanges();\n\n        Assert.NotEmpty(\n            session.Advanced.LuceneQuery<dynamic>(""test"").\n            WaitForNonStaleResults().\n            Where(""f_platform:1 AND (f_name:*H* OR f_alias:*H*)"")\n            .OrderBy(new[] { ""-f_License"", ""f_totaldownload"" })\n            .ToList()\n            );\n    }\n}\n```\n\n}\n'"
170,569712,b'Done\n'
195,569718,b'Done\n'
199,572017,"b""Thank you. this can't solve my question.\nI have send a mail to you with my test data.\n"""
199,572112,"b""the mail don't reply \ni want send my test to you, can you give a mail to receive the file?\n"""
200,596947,"b'Is this implemented ?\n\nWhen I try to create an index like this, I get an error:\n\nerror CS1061: \'System.Linq.IGrouping\' does not contain a definition for \'__document_id\' and no extension method \'__document_id\' accepting a first argument of type \'System.Linq.IGrouping\' could be found (are you missing a using directive or an assembly reference?)\n\nIt seems obvious, as the document_id is lost in the grouping.\n\nThis is the generated code:\n\n```\npublic class Index_ad : AbstractViewGenerator\n{\n    public Index_ad()\n    {\n        this.ForEntityName = null;\n        this.ViewText = @""from product in docs\n                            from prop in product.Properties\n                            group prop by prop.PropertyName into g\n                            select new\n                            {                               \n                                _ = g.Select(x => new Lucene.Net.Documents.Field(g.Key, x.Value, Lucene.Net.Documents.Field.Store.YES, Lucene.Net.Documents.Field.Index.NOT_ANALYZED))\n                            }"";\n        this.MapDefinition = docs => from product in docs\n            from prop in product.Properties\n            group prop by prop.PropertyName into g\n            select new { _ = g.Select(x => new Lucene.Net.Documents.Field(g.Key, x.Value, Lucene.Net.Documents.Field.Store.YES, Lucene.Net.Documents.Field.Index.NOT_ANALYZED)), __document_id = g.__document_id };\n        this.AddField(""_"");\n        this.AddField(""__document_id"");\n    }\n}\n```\n'"
213,613966,b'Fixed\n'
208,615863,b'Fixed\n'
211,615865,b'Fixed\n'
222,620768,b'Fixed\nAlso implemented proper caching\n'
220,620790,b'Fixed\n'
92,622164,b'Not enough interest in this\n'
135,622171,b'Fixed\n'
137,622172,b'Fixed\n'
158,622173,b'There is no interest in this\n'
188,622186,b'Fixed\n'
82,622188,b'No demand\n'
201,622190,b'Implemented\n'
215,622292,b'Fixed\n'
209,622302,b'Pulled\n'
209,622303,b'Pulled\n'
218,622326,b'Fixed\n'
219,622339,b'Fixed\n'
221,622358,b'Fixed\n'
216,622427,"b'Implemented, but just for Count, and there are no tests yet.\nNot sure HOW to expose this through the client API, either.\n'"
224,624222,b'this fixes the problem but is far from ideal:\n\n```\n        using (var session = documentStore.OpenSession())\n        {\n            var entitysearch = session.Query<cacheObject>().ToArray();\n            var entities = entitysearch.Select(cachedObject => new unCachedObject(cachedObject)).ToArray();\n            foreach (var uncachedentity in entities)\n                Console.WriteLine(uncachedentity.Id);\n        }\n```\n'
225,633387,b'Fixed\n'
227,636276,b'Fixed\n'
226,636288,b'Fixed\n'
216,636289,b'Done\n'
217,636291,b'Supported\n'
223,636292,b'Fixed\n'
224,636297,"b'Roja,\nThe linq provider support only very simple select expressions\n'"
202,636298,b'done\n'
229,640719,b'Fixed\n'
202,640788,b'I have a failing test (slightly modifed from existing test in same file) for this at https://github.com/dpen2000/ravendb/commit/0f920fb2ed418d48d766d273b259303cfc8c6eb6 (and another one with a different assert that passes - for contrast). Building on top of latest code from https://github.com/ayende/ravendb\n'
202,642917,b'Fixed\n'
204,668566,b'http://ravendb.net/faq/projections\n'
190,668578,b'http://ravendb.net/faq/polymorphic-indexes\n'
189,668665,b'http://ravendb.net/documentation/multiple-databases\n'
230,671537,b'Pulled\n'
231,676356,"b'Hi,\nI need you to follow the guidelines here:\nhttp://www.ravendb.net/faq/contributing\nMore specifically, I need a signed copy of the contributer agreement:\nhttp://ravendb.net/CopyrightAssignmentAgreement.pdf\n'"
231,677131,b'Signed contributer agreement is send\n'
231,677473,"b""Hi,\nI can't merge your changes, please generate a new pull request, this time against the source in:\ngithub.com/ayende/ravendb\n"""
233,692971,"b'Can you create a failing test?\nThis works:\n\n```\npublic class WithGuidId : LocalClientTest\n{\n    [Fact]\n    public void CanBeUsedForTransformResultsWithDocumentId()\n    {\n        using(var store = NewDocumentStore())\n        {\n            new ThorIndex().Execute(store);\n\n            using(var s = store.OpenSession())\n            {\n                s.Store(new Thor\n                {\n                    Id = Guid.NewGuid(),\n                    Name = ""Thor""\n                });\n                s.SaveChanges();\n            }\n\n            using (var s = store.OpenSession())\n            {\n                var objects = s.Query<dynamic>(""ThorIndex"")\n                    .Customize(x=>x.WaitForNonStaleResults())\n                    .ToArray();\n\n                Assert.DoesNotThrow(() => new Guid(objects[0].Id));\n            }\n        }\n    }\n}\n\npublic class ThorIndex : AbstractIndexCreationTask<Thor>\n{\n    public ThorIndex()\n    {\n        Map = thors => from doc in thors\n                       select new {doc.Name};\n        TransformResults = (database, thors) =>\n                           from item in thors\n                           select new {Id = item.Id, item.Name};\n    }\n}\n\npublic class Thor\n{\n    public Guid Id { get; set; }\n    public string Name { get; set; }\n}\n```\n'"
234,693315,"b""Fixed\nNot sure about the Chinese characters, please open a new repro if build 260 doesn't fix this\n"""
233,695789,b'Works in RavenDB-Unstable-Build-261 problem was with version 237\n'
234,695838,b'All OK\n'
238,700356,"b""Hi, I can't pull this without getting a contributer license agreement.\nAt any rate, already fixed, thanks\n"""
237,700358,b'Fixed\n'
236,702031,b'Fixed\n'
239,709790,b'Pulled\n'
235,777414,b'Fixed\n'
206,785675,"b""I didn't read this before I created the error screen! I'm glad that I was heading in the right direction.\n"""
249,804513,"b""Put simple, we don't handle string case matching in the linq query.\nString case matching is handled by the analyzer we select, by default we use case insensitive analyzer, but you can change that\n"""
249,806036,"b'Just to add to Oren answer.\n\nWhat is happening in your case is that when you store new User() { Name = ""Matt"" }, the Name is actually _indexed_ as ""matt"", because of RavenDB case-insensitive analyser. Then when you do a exact match query, it only matches when you match against ""matt""\n'"
253,884109,"b""a) This isn't the place to ask questions.\nb) You can pretty much just copy the directory as is\n"""
254,911684,b'Fixed\n'
245,911691,b'We already have that:\nTask<BatchResult[]> BatchAsync(ICommandData[] commandDatas);\n'
258,925460,b'I saw that was fixed in ayende master branch... sorry\n\nWhen this fix will be moved on ravendb/ravendb?\n'
258,925545,b'Today\n'
206,940230,b'Done\n'
173,940232,b'Done\n'
175,940236,b'Done\n'
176,940238,b'Done\n'
179,940239,"b""No need to do that any longer, we don't really support OOB \n"""
205,940240,"b'The reason for that is that we are processing deletes one at a time, using the tasks feature.\nWe have moved that to a separate thread, but we probably need to check how we can optimize this further.\n'"
210,940559,b'Fixed\n'
262,945314,"b'Out of scope for RavenDB currently.\nIf you feel strongly about this feature, please send a pull request\n'"
262,945315,"b'i know but i just wanted to put it in there for future references.\n\nCan you outline your plans for this.\nI am an architect and working on many different projects using various\nnosql stacks.\nSo we could use Raven if you were a bit more open about where you are\ngong with this.\n\nged\n\nOn 1 April 2011 14:41, ayende\nreply@reply.github.com\nwrote:\n\n> Out of scope for RavenDB currently.\n> If you feel strongly about this feature, please send a pull request\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/262#comment_945314\n'"
261,945332,"b'Pulled, thanks.\nAnd really nice work\n'"
255,958814,b'Fixed\n'
260,963237,b'Fixed\n'
265,968246,b'Raven.Bundles.Tests.Replication.SimpleReplication.Will_not_replicate_replicated_documents\n'
267,982478,"b'I pulled the request, and all the tests are passing\n'"
267,982587,"b'Ahh thanks for checking.  I only tried github.com/ravendb/ravendb, now when I try against github.com/ayende/ravendb I see the test does pass. \n'"
271,989352,b'Did you sent me the contribution agreement?\n'
271,999585,b'No\n\nWhere do i get that from?\n'
271,999637,"b'http://ravendb.net/faq/contributing\n\nOn Thu, Apr 14, 2011 at 10:10 AM, wayne-o <\nreply@reply.github.com>wrote:\n\n> No\n> \n> Where do i get that from?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/271#issuecomment-999585\n'"
271,1000458,b'can i send you photo of the signed form? or does it need to be snail mail?\n'
271,1000928,"b'No, just send this as an attached image.\n\nOn Thu, Apr 14, 2011 at 2:42 PM, wayne-o <\nreply@reply.github.com>wrote:\n\n> can i send you photo of the signed form? or does it need to be snail mail?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/271#issuecomment-1000458\n'"
232,1004008,"b'All fixed now, and synced up with comments in the code itself\n\nhttps://github.com/synhershko/ravendb/commit/ca647d7c031284fd68156721d1fe82e46cee279e\n\nhttp://ravendb.net/documentation/configuration (Note though how last update is incorrect)\n'"
252,1004053,b'Resolved!\n'
232,1005037,"b'What do you mean ""last update is incorrect""?\n'"
232,1005656,"b'The ""Last update"" timestamp at the bottom of the website page\n'"
232,1005665,b'Removed that\n'
243,1006717,b'Will this be implemented anytime soon?\n\nIs there a work around for the time being?\n'
243,1011839,"b'Hopefully, soon.\n\nYou can use LuceneQuery instead.\n\nOn Fri, Apr 15, 2011 at 4:52 PM, alhardy <\nreply@reply.github.com>wrote:\n\n> Will this be implemented anytime soon?\n> \n> Is there a work around for the time being?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/243#comment_1006717\n'"
243,1013491,"b""Great, thanks for the reply.\n\nYeah could use lucene, I already have specifications for my queries. Guess I'll just wait until its implemented. \n\nSent from my Windows Phone\n\n-----Original Message-----\nFrom: ayende\nSent: Saturday, 16 April 2011 2:48 PM\nTo: al_hardy@live.com.au\nSubject: Re: [GitHub] Sharding: Enable linq queries [ravendb/ravendb GH-243]\n\n> Hopefully, soon.\n> \n> You can use LuceneQuery instead.\n> \n> On Fri, Apr 15, 2011 at 4:52 PM, alhardy <\n> reply@reply.github.com>wrote:\n> \n> > Will this be implemented anytime soon?\n> > \n> > Is there a work around for the time being?\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/243#comment_1006717\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/243#comment_1011839\n"""
273,1015987,"b'Resolved, please note that we still will create some files, but this will happen in the temp directory.\n'"
247,1015988,b'Removed support for this\n'
205,1015989,"b'After some investigation, it is okay to keep it that way. Mass deletes seems to be pretty rare things.\n'"
274,1016794,"b'Done, pushed to my master\n'"
278,1017233,b'Fixed\n'
279,1017283,b'Done\n'
282,1032852,"b""And while you're at it, please add a logo (iconUrl, linking to a 32x32 png)\n"""
285,1087552,b'Fixed in newer build.\n'
282,1091114,"b'Done, but had no logo URL to link to so I left that tag blank.\n\nAdded dependencies with no particular version requirement - so apps aren\'t forced to upgrade components they may be using already, and making it the user\'s responsibility to make sure he has a recent version.\n\nSilverlight client is missing, too. We can leverage the folder structure for that. See ""Supporting Multiple .NET Framework Versions and Profiles"" in http://nuget.codeplex.com/wikipage?title=Creating%20a%20Package.\n'"
282,1092253,"b'You can use this:\nhttp://ravendb.net/favicon.ico\n\nAnd yes, we need a silverlight one as well\n'"
282,1092259,"b""Also, that means that in our package, we don't include Newtonsoft / log4net\nWe also need a RavenDB-Embedded package\n"""
286,1092464,"b'Thanks for your message.\n\nThe team is away and will be unavailable until the 9th of May.\n\nFor customers with a support contract, please contact your regular customer-specific email address that has been communicated to you.\n\nFor account enquiries or renew your support contract, please contact our accounting team at accounts@caffeine-it.net.\n\nFor any other enquiry, we will get back to you as soon as possible.\n\nThanks\n'"
288,1092660,b'fixed\n'
203,1094026,b'Done in latest HEAD of docs\n'
289,1099064,"b'The actual problem is with RavenId = Id, not with the project.\n'"
289,1099074,"b'It is going to be too complex to support this at this point.\nUse:\n\nvar postReference = Session.Query<Post>()\n.Select(p => new {Id = p.Id, p.Title})\n.FirstOrDefault();\n\nWhich will work\n'"
268,1104862,b'Done in latest docs HEAD\n'
259,1104876,b'Done in latest docs HEAD\n'
287,1110471,b'Fixed\n'
274,1110474,b'Pulled\n'
271,1110478,b'Pulled\n'
265,1110481,b'Fixed\n'
290,1115935,"b'This is a known issue, and will be fixed very soon.\n'"
290,1116214,"b""Thanks, didn't see it reported elsewhere so sorry if I doubled up the ticket.\n\nOn Sat, May 7, 2011 at 1:36 PM, synhershko\nreply@reply.github.com\nwrote:\n\n> This is a known issue, and will be fixed very soon.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/290#comment_1115935\n"""
290,1116913,b'That is fixed now. new nuget package will be uploaded for the next stable build.\n'
162,1119712,b'Done in latest docs HEAD\n'
286,1190416,b'Seems to be fixed by another bug fix\n'
283,1192847,b'Done in latest docs HEAD\n'
214,1193123,b'Done in latest docs HEAD\n'
290,1204289,"b'Hey guys, can you please put the update as soon as you can? Current version in NuGet cannot be used. Many thanks\n'"
290,1204385,b'Next stable release and nuget package release are expected Monday. The latest unstable contains this fix too.\n'
290,1204708,b'Thanks! I will wait till Monday (I am using centralized package management). Meantime I rolled back Raven DB to v. 1.0.0.322\n'
293,1247415,"b'Hi,\nThanks for the pull request. Before I can pull the changes in, I need you to sign the contribution agreement here:\nhttp://ravendb.net/faq/contributing\n'"
293,1247467,"b'No problem, signed and sent to your email.\n'"
293,1247495,b'Pulled\n'
296,1304210,"b'Thanks for reporting, fixed in the next build\n'"
298,1354187,"b""Cutoff etag is used to check if the index has already process a document with the given\netag. Unlike Cutoff, which uses dates and is susceptible to clock syncronization issues between\nmachines, cutoff etag doesn't rely on both the server and client having a syncronized clock and \ncan work without it.\nHowever, when used to query map/reduce indexes, it does NOT guarantee that the document that this\netag belong to is actually considered for the results. \nWhat it does it guarantee that the document has been mapped, but not that the mapped values has been reduce. \nSince map/reduce queries, by their nature,tend to be far less susceptible to issues with staleness, this is \nconsidered to be an acceptable tradeoff.\nIf you need absolute no staleness with a map/reduce index, you will need to ensure syncronized clocks and \nuse the Cutoff date option, instead.\n"""
301,1357302,b'Fixed\n'
300,1357303,b'Fixed\n'
280,1357561,"b'Fixed, we will start it from the actual server, so no problems there.\n'"
302,1409242,b'+1\n'
297,1409549,"b'Is this something that you can reproduce? Because on my end, I just tried following your example, and I got the expected behavior.\nThis is on build 386\n'"
297,1413094,b'I will try the repro again tonight\n'
297,1415923,"b'https://github.com/fschwiet/jetrepro\n\nI was able to repro it again.  To try and eliminate whatever difference there is between what you see and what I see, I tried to automate a repro.  What I found is I could repro a esent ""jet"" bug just creating two sites in IIS...  Which is odd as I do run multiple raven sites in IIS fine otherwise.  Maybe the issue is the sites are created about the same time.\n\nThis is not an important scenario, but since the server is in an unrecoverable state I figure its worth understanding.  I am probably doing something silly.  I care much more about the slow-server-on-many-writes behavior.\n\nYou might find the powershell to create IIS sites useful for setting up stress scenarios.\n'"
297,1423195,"b'I tried running the runme.ps1, and it created the two sites, but when\nvisiting them on the browser, I get 503 - service unavailable.\nThere is no error, just nothing is running. Any idea?\n\nOn Wed, Jun 22, 2011 at 8:35 AM, fschwiet <\nreply@reply.github.com>wrote:\n\n> https://github.com/fschwiet/jetrepro\n> \n> I was able to repro it again.  To try and eliminate whatever difference\n> there is between what you see and what I see, I tried to automate a repro.\n>  What I found is I could repro a esent ""jet"" bug just creating two sites in\n> IIS...  Which is odd as I do run multiple raven sites in IIS fine otherwise.\n>  Maybe the issue is the sites are created about the same time.\n> \n> This is not an important scenario, but since the server is in an\n> unrecoverable state I figure its worth understanding.  I am probably doing\n> something silly.  I care much more about the slow-server-on-many-writes\n> behavior.\n> \n> You might find the powershell to create IIS sites useful for setting up\n> stress scenarios.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/297#issuecomment-1415923\n'"
297,1423217,"b""No idea.  Sorry I wouldn't worry about this further.\n"""
302,1427448,b'+1\n'
310,1440710,b'Pulled\n'
309,1440720,b'Added\n'
295,1446721,"b'We currently think that this might be related to the logging issue that we discovered. We intend to move to a better logging approach, and we will see if this helps.\nWould you be able to run the same scenario again once this is done?\n'"
295,1448623,"b""Yes let me know when you think the changes are ready and I can rerun the ETL I'm using.\n"""
295,1454786,"b""It will be in the next build.\n\nOn Mon, Jun 27, 2011 at 7:43 PM, fschwiet <\nreply@reply.github.com>wrote:\n\n> Yes let me know when you think the changes are ready and I can rerun the\n> ETL I'm using.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/295#issuecomment-1448623\n"""
295,1462165,"b""  I downloaded unstable build 398 and gave it a run.  After about 30\nminutes the client timed out.  The server showed as idle, I attached a\ndebugger and all threads look idle.  After restarting the server it\nshowed the index as up to date with 644k documents stored.  I was able\nto restart the client.\n\n  Memory usage didn't increase so fast, but it did seem like writes\nslowed down over time (they started at 2k+ a second, then dropped to\nmaybe 500/s).  The documents are of mixed size and I was not measuring\ncommand rate very accurately so I wouldn't worry about that.\n\n  I'm not sure no server threads had a CLR callstack available, there\ncertainly was a lot of threads and that could have been the problem\n(more than I want to check, don't know shorthand).  The machine has 4\ncores.\n\n  I forgot to turn on bisection, so the client stopped on first error.\n\nClient:\n\nSending range RavenDBCommand000000.gz shareditems/62112525 to\nRavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n\n---\n\nError #0\nRhino.Etl.Core.RhinoEtlException: Failed to execute operation :\nEncountered error processing range RavenDBCommand000000.gz\nshareditems/62112525 to RavenDBCommand000000.gz shareditems/62113548\n(1024 commands).\n ---> System.Exception: Encountered error processing range\nRavenDBCommand000000.gz shareditems/62112525 to\nRavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n ---> System.Net.WebException: The underlying connection was closed:\nAn unexpected error occurred on a receive. ---> System.IO.IOException:\nUnable to read data from the transport connection: A connection\nattempt failed because the connected party did not properly respond\nafter a period of time, or established connection failed because\nconnected host has failed to respond. --->\nSystem.Net.Sockets.SocketException: A connection attempt failed\nbecause the connected party did not\nproperly respond after a period of time, or established connection\nfailed because connected host has failed to respond\n   at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset,\nInt32 size, SocketFlags socketFlags)\n   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32\noffset, Int32 size)\n   --- End of inner exception stack trace ---\n   at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32 size)\n   at System.Net.ConnectStream.ReadWithoutValidation(Byte[] buffer,\nInt32 offset, Int32 size, Boolean abortOnError)\n   at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32 size)\n   --- End of inner exception stack trace ---\n   at System.Net.HttpWebRequest.GetResponse()\n   at ETL.SavedItemEtl.BatchCommandsToRaven.PostCommands(List`1\nallCommands, Int32 start, Int32 count) in\nC:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 143\n   --- End of inner exception stack trace ---\n   at ETL.SavedItemEtl.BatchCommandsToRaven.PostCommandsWithBisectFallback(List`1\ncommandsToSend, Int32 originalStart, Int32 originalLength) in\nC:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 90\n   at ETL.SavedItemEtl.BatchCommandsToRaven.<Execute>d__0.MoveNext()\nin C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line\n49\n   at Rhino.Etl.Core.Enumerables.SingleRowEventRaisingEnumerator.MoveNext()\n   at Rhino.Etl.Core.Enumerables.EventRaisingEnumerator.MoveNext()\n   at ETL.SimplePipelineExecutor.<DecorateEnumerableForExecution>d__0.MoveNext()\nin C:\\src\\SavedItem\\ETL\\SimplePipelineExecutor.cs:line 16\n   at Rhino.Etl.Core.Pipelines.AbstractPipelineExecuter.ExecutePipeline(IEnumerable`1\npipeline)\n   --- End of inner exception stack trace ---\n\nServer thread list:  (it doesnt look like their are any CLR callstacks\nto show, server is idle)\n\nPDB symbol for clr.dll not loaded\nThreadCount:      178\nUnstartedThread:  0\nBackgroundThread: 15\nPendingThread:    0\nDeadThread:       162\nHosted Runtime:   no\n                                           PreEmptive\n                                 Lock\n       ID  OSID        ThreadOBJ     State GC       GC Alloc Context\n               Domain           Count APT Exception\n   0    1   304 0000000000496d80      a020 Enabled\n0000000000000000:0000000000000000 000000000047f070     1 MTA\n   2    2   3b8 000000000049c0c0      b220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\n(Finalizer)\n   4    3   c7c 000000001b770080   100a220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\n(Threadpool Worker)\n   5    5   9d8 000000001b777990   1009220 Enabled\n0000000095829d68:000000009582ac60 000000000047f070     0 MTA\n(Threadpool Worker)\n   9    8   3e4 000000001b8bb3d0   200b220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\n  10    9   77c 000000001b8aede0   200b220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\n  11    a   da4 000000001b8d74e0   200b220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\n  12    b   e34 000000001b8abd60   200b220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\nXXXX    c       000000001b8d2ed0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\n  13    d   934 000000001b8d8470   1009220 Enabled\n00000000958338a8:0000000095834c60 000000000047f070     0 MTA\n(Threadpool Worker)\n  14    f   db8 000000001b8d8b80   1009220 Enabled\n000000009582d958:000000009582ec60 000000000047f070     0 MTA\n(Threadpool Worker)\nXXXX    4       000000001b8d9290   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX    e       000000001b8d99a0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   10       000000001b8da0b0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   12       000000001b8daed0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   11       000000001b8da7c0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   13       000000001b8db5e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   15       00000000278405c0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   16       0000000027840cd0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   17       00000000278413e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   19       0000000027842200   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   18       0000000027841af0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   1b       0000000027843020   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   1c       0000000027843730   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   1d       0000000027843e40   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   1e       000000001b7a85e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   1f       000000001b7a8cf0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   20       000000001b7a9400   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   21       000000001b7a9b10   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\n  15   22  1038 000000001b7aa220   8009220 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 MTA\n(Threadpool Completion Port)\nXXXX   23       000000001b7aa930   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   24       000000001b7ab040   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   26       000000001b7abe60   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   27       00000000279c6c90   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   28       00000000279c73a0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   29       00000000279c7ab0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   2a       00000000279c81c0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   2c       00000000279c8fe0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   2d       00000000279c96f0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   2e       00000000279c9e00   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   2f       00000000279ca510   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   30       0000000027b1b020   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   31       0000000027b1b730   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   34       0000000027b1cc60   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   36       0000000027b1da80   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   37       0000000027b1e190   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   38       0000000027b1e8a0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   39       0000000027b619d0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   3a       0000000027b620e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   3b       0000000027b627f0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   3c       0000000027b62f00   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   3d       0000000027b63610   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   3e       0000000027b63d20   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   3f       0000000027b64430   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   40       0000000027b64b40   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   41       0000000027b65250   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   42       0000000027bb1b50   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   43       0000000027bb2260   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   44       0000000027bb2970   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   45       0000000027bb3080   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   46       0000000027bb3790   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   47       0000000027bb3ea0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   48       0000000027bb45b0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   4b       0000000027bed980   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   4c       0000000027bee090   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   52       0000000027bf0af0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   53       0000000027bf1200   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   54       0000000027b7a710   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   55       0000000027b7ae20   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   56       0000000027b7b530   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   57       0000000027b7bc40   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   58       0000000055f414d0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   59       0000000055f41be0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   5a       0000000055f422f0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   5b       0000000055f42a00   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   5d       0000000055f43820   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   5c       0000000055f43110   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   5e       0000000055f43f30   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   5f       0000000055f44640   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   60       0000000055f44d50   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   61       0000000001035440   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   62       0000000001035b50   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   63       0000000001036260   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   64       0000000001036970   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   65       0000000055f2bd10   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   66       0000000055f2c420   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   67       0000000055f2cb30   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   69       0000000055fbf470   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   68       0000000055f2d240   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   6a       0000000055fbfb80   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   6b       0000000055fc0290   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   6c       0000000055fc09a0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   6d       0000000055fc10b0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   6e       0000000055fc17c0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   6f       0000000055fc1ed0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   70       0000000055fc25e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   71       0000000055fc2cf0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   73       0000000055ffe590   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   74       0000000055ffeca0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   72       0000000055ffde80   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   75       0000000055fff3b0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   76       0000000055fffac0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   77       00000000560001d0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   78       00000000560008e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   79       0000000056000ff0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   7a       0000000056001700   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   7c       0000000027847e30   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   7b       0000000027847720   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\n  16   7e  1034 0000000027848c50   1009220 Enabled\n00000000958317a8:0000000095832c60 000000000047f070     0 MTA\n(Threadpool Worker)\n  17   82   d04 0000000027895050   1009220 Enabled\n000000009582f750:0000000095830c60 000000000047f070     0 MTA\n(Threadpool Worker)\nXXXX   85       0000000056078820   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   87       0000000056079640   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   88       0000000056079d50   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   89       000000005607a460   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   8a       000000005607ab70   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   8b       000000005607b280   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   8c       00000000560aab30   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   8d       00000000560ab240   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   8f       00000000560ac060   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   90       00000000560ac770   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   91       00000000560ace80   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   8e       00000000560ab950   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   92       00000000560ad590   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   93       00000000560adca0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   94       00000000560ae3b0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   95       0000000055f96070   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   96       0000000055f96780   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   97       0000000055f96e90   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   99       000000005610f7f0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   98       0000000055f975a0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   9a       000000005610ff00   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   9b       0000000056110610   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   9c       0000000056110d20   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   9d       0000000056111430   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   9e       0000000056111b40   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   9f       0000000056112250   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a0       0000000056112960   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a2       0000000056157200   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a1       0000000056113070   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a3       0000000056157910   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a4       0000000056158020   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a5       0000000056158730   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX    7       0000000056158e40   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a6       0000000056159550   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   83       0000000056077a00   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a7       0000000056159c60   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a8       000000005615a370   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   a9       000000005615aa80   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   ab       0000000056169920   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   aa       0000000056169210   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   ac       000000005616a030   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX    6       00000000561ab1b0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   b7       00000000561ab8c0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   b8       00000000561abfd0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   ba       00000000561acdf0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   bc       00000000561adc10   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   bd       00000000561ae320   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   bb       00000000561ad500   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   be       00000000561aea30   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   bf       0000000056215000   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c1       0000000056215e20   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c0       0000000056215710   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c3       0000000056216c40   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c2       0000000056216530   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c4       0000000056217350   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c5       0000000056217a60   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c6       0000000056218170   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   b9       00000000561ac6e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c8       0000000056218f90   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c7       0000000056218880   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   c9       00000000562196a0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   ca       0000000056219db0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   cb       000000005621a4c0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   cc       000000005621abd0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\nXXXX   cd       000000005621b2e0   8019820 Enabled\n0000000000000000:0000000000000000 000000000047f070     0 Ukn\n(Threadpool Completion Port)\n  18   ce   630 000000005621b9f0   1009220 Enabled\n0000000095837498:0000000095838c60 000000000047f070     0 MTA\n(Threadpool Worker)\n  19   cf   be8 000000005621c100   1009220 Enabled\n0000000095835638:0000000095836c60 000000000047f070     0 MTA\n(Threadpool Worker)\n  20   7d   540 0000000027848540   1009220 Enabled\n000000009582bbb8:000000009582cc60 000000000047f070     0 MTA\n(Threadpool Worker)\n0:025> ~1\n   1  Id: f1c.a44 Suspend: 1 Teb: 000007ff`fffdc000 Unfrozen\n\nOn Mon, Jun 27, 2011 at 4:41 AM, ayende\nreply@reply.github.com\nwrote:\n\n> We currently think that this might be related to the logging issue that we discovered. We intend to move to a better logging approach, and we will see if this helps.\n> Would you be able to run the same scenario again once this is done?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/295#issuecomment-1446721\n"""
312,1465049,b'Pulled\n'
295,1465098,"b""Hm...\nThe problem is that there are a lot of reasons why a single HTTP request may\nfail.\nCan you setup your ETL to retry a few times in the case of failure? That\nwould simulate a more realistic scenario.\nWe will also run tests checking for slow downs under big load.\n\nOn Wed, Jun 29, 2011 at 5:47 AM, fschwiet <\nreply@reply.github.com>wrote:\n\n> I downloaded unstable build 398 and gave it a run.  After about 30\n> minutes the client timed out.  The server showed as idle, I attached a\n> debugger and all threads look idle.  After restarting the server it\n> showed the index as up to date with 644k documents stored.  I was able\n> to restart the client.\n> \n>  Memory usage didn't increase so fast, but it did seem like writes\n> slowed down over time (they started at 2k+ a second, then dropped to\n> maybe 500/s).  The documents are of mixed size and I was not measuring\n> command rate very accurately so I wouldn't worry about that.\n> \n>  I'm not sure no server threads had a CLR callstack available, there\n> certainly was a lot of threads and that could have been the problem\n> (more than I want to check, don't know shorthand).  The machine has 4\n> cores.\n> \n>  I forgot to turn on bisection, so the client stopped on first error.\n> \n> Client:\n> \n> Sending range RavenDBCommand000000.gz shareditems/62112525 to\n> RavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n> \n> ---\n> \n> Error #0\n> Rhino.Etl.Core.RhinoEtlException: Failed to execute operation :\n> Encountered error processing range RavenDBCommand000000.gz\n> shareditems/62112525 to RavenDBCommand000000.gz shareditems/62113548\n> (1024 commands).\n>  ---> System.Exception: Encountered error processing range\n> RavenDBCommand000000.gz shareditems/62112525 to\n> RavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n>  ---> System.Net.WebException: The underlying connection was closed:\n> An unexpected error occurred on a receive. ---> System.IO.IOException:\n> Unable to read data from the transport connection: A connection\n> attempt failed because the connected party did not properly respond\n> after a period of time, or established connection failed because\n> connected host has failed to respond. --->\n> System.Net.Sockets.SocketException: A connection attempt failed\n> because the connected party did not\n> properly respond after a period of time, or established connection\n> failed because connected host has failed to respond\n>   at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset,\n> Int32 size, SocketFlags socketFlags)\n>   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32\n> offset, Int32 size)\n>   --- End of inner exception stack trace ---\n>   at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32 size)\n>   at System.Net.ConnectStream.ReadWithoutValidation(Byte[] buffer,\n> Int32 offset, Int32 size, Boolean abortOnError)\n>   at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32 size)\n>   --- End of inner exception stack trace ---\n>   at System.Net.HttpWebRequest.GetResponse()\n>   at ETL.SavedItemEtl.BatchCommandsToRaven.PostCommands(List`1\n> allCommands, Int32 start, Int32 count) in\n> C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 143\n>   --- End of inner exception stack trace ---\n>   at\n> ETL.SavedItemEtl.BatchCommandsToRaven.PostCommandsWithBisectFallback(List`1\n> commandsToSend, Int32 originalStart, Int32 originalLength) in\n> C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 90\n>   at ETL.SavedItemEtl.BatchCommandsToRaven.<Execute>d__0.MoveNext()\n> in C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line\n> 49\n>   at Rhino.Etl.Core.Enumerables.SingleRowEventRaisingEnumerator.MoveNext()\n>   at Rhino.Etl.Core.Enumerables.EventRaisingEnumerator.MoveNext()\n>   at\n> ETL.SimplePipelineExecutor.<DecorateEnumerableForExecution>d__0.MoveNext()\n> in C:\\src\\SavedItem\\ETL\\SimplePipelineExecutor.cs:line 16\n>   at\n> Rhino.Etl.Core.Pipelines.AbstractPipelineExecuter.ExecutePipeline(IEnumerable`1\n> pipeline)\n>   --- End of inner exception stack trace ---\n> \n> Server thread list:  (it doesnt look like their are any CLR callstacks\n> to show, server is idle)\n> \n> PDB symbol for clr.dll not loaded\n> ThreadCount:      178\n> UnstartedThread:  0\n> BackgroundThread: 15\n> PendingThread:    0\n> DeadThread:       162\n> Hosted Runtime:   no\n>                                           PreEmptive\n>                                 Lock\n>       ID  OSID        ThreadOBJ     State GC       GC Alloc Context\n>               Domain           Count APT Exception\n>   0    1   304 0000000000496d80      a020 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     1 MTA\n>   2    2   3b8 000000000049c0c0      b220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> (Finalizer)\n>   4    3   c7c 000000001b770080   100a220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> (Threadpool Worker)\n>   5    5   9d8 000000001b777990   1009220 Enabled\n> 0000000095829d68:000000009582ac60 000000000047f070     0 MTA\n> (Threadpool Worker)\n>   9    8   3e4 000000001b8bb3d0   200b220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n>  10    9   77c 000000001b8aede0   200b220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n>  11    a   da4 000000001b8d74e0   200b220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n>  12    b   e34 000000001b8abd60   200b220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> XXXX    c       000000001b8d2ed0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n>  13    d   934 000000001b8d8470   1009220 Enabled\n> 00000000958338a8:0000000095834c60 000000000047f070     0 MTA\n> (Threadpool Worker)\n>  14    f   db8 000000001b8d8b80   1009220 Enabled\n> 000000009582d958:000000009582ec60 000000000047f070     0 MTA\n> (Threadpool Worker)\n> XXXX    4       000000001b8d9290   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX    e       000000001b8d99a0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   10       000000001b8da0b0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   12       000000001b8daed0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   11       000000001b8da7c0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   13       000000001b8db5e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   15       00000000278405c0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   16       0000000027840cd0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   17       00000000278413e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   19       0000000027842200   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   18       0000000027841af0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   1b       0000000027843020   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   1c       0000000027843730   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   1d       0000000027843e40   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   1e       000000001b7a85e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   1f       000000001b7a8cf0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   20       000000001b7a9400   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   21       000000001b7a9b10   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n>  15   22  1038 000000001b7aa220   8009220 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> (Threadpool Completion Port)\n> XXXX   23       000000001b7aa930   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   24       000000001b7ab040   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   26       000000001b7abe60   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   27       00000000279c6c90   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   28       00000000279c73a0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   29       00000000279c7ab0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   2a       00000000279c81c0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   2c       00000000279c8fe0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   2d       00000000279c96f0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   2e       00000000279c9e00   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   2f       00000000279ca510   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   30       0000000027b1b020   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   31       0000000027b1b730   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   34       0000000027b1cc60   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   36       0000000027b1da80   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   37       0000000027b1e190   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   38       0000000027b1e8a0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   39       0000000027b619d0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   3a       0000000027b620e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   3b       0000000027b627f0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   3c       0000000027b62f00   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   3d       0000000027b63610   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   3e       0000000027b63d20   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   3f       0000000027b64430   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   40       0000000027b64b40   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   41       0000000027b65250   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   42       0000000027bb1b50   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   43       0000000027bb2260   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   44       0000000027bb2970   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   45       0000000027bb3080   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   46       0000000027bb3790   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   47       0000000027bb3ea0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   48       0000000027bb45b0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   4b       0000000027bed980   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   4c       0000000027bee090   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   52       0000000027bf0af0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   53       0000000027bf1200   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   54       0000000027b7a710   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   55       0000000027b7ae20   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   56       0000000027b7b530   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   57       0000000027b7bc40   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   58       0000000055f414d0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   59       0000000055f41be0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   5a       0000000055f422f0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   5b       0000000055f42a00   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   5d       0000000055f43820   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   5c       0000000055f43110   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   5e       0000000055f43f30   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   5f       0000000055f44640   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   60       0000000055f44d50   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   61       0000000001035440   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   62       0000000001035b50   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   63       0000000001036260   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   64       0000000001036970   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   65       0000000055f2bd10   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   66       0000000055f2c420   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   67       0000000055f2cb30   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   69       0000000055fbf470   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   68       0000000055f2d240   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   6a       0000000055fbfb80   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   6b       0000000055fc0290   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   6c       0000000055fc09a0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   6d       0000000055fc10b0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   6e       0000000055fc17c0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   6f       0000000055fc1ed0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   70       0000000055fc25e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   71       0000000055fc2cf0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   73       0000000055ffe590   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   74       0000000055ffeca0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   72       0000000055ffde80   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   75       0000000055fff3b0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   76       0000000055fffac0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   77       00000000560001d0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   78       00000000560008e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   79       0000000056000ff0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   7a       0000000056001700   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   7c       0000000027847e30   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   7b       0000000027847720   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n>  16   7e  1034 0000000027848c50   1009220 Enabled\n> 00000000958317a8:0000000095832c60 000000000047f070     0 MTA\n> (Threadpool Worker)\n>  17   82   d04 0000000027895050   1009220 Enabled\n> 000000009582f750:0000000095830c60 000000000047f070     0 MTA\n> (Threadpool Worker)\n> XXXX   85       0000000056078820   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   87       0000000056079640   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   88       0000000056079d50   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   89       000000005607a460   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   8a       000000005607ab70   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   8b       000000005607b280   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   8c       00000000560aab30   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   8d       00000000560ab240   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   8f       00000000560ac060   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   90       00000000560ac770   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   91       00000000560ace80   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   8e       00000000560ab950   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   92       00000000560ad590   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   93       00000000560adca0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   94       00000000560ae3b0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   95       0000000055f96070   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   96       0000000055f96780   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   97       0000000055f96e90   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   99       000000005610f7f0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   98       0000000055f975a0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   9a       000000005610ff00   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   9b       0000000056110610   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   9c       0000000056110d20   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   9d       0000000056111430   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   9e       0000000056111b40   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   9f       0000000056112250   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a0       0000000056112960   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a2       0000000056157200   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a1       0000000056113070   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a3       0000000056157910   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a4       0000000056158020   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a5       0000000056158730   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX    7       0000000056158e40   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a6       0000000056159550   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   83       0000000056077a00   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a7       0000000056159c60   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a8       000000005615a370   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   a9       000000005615aa80   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   ab       0000000056169920   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   aa       0000000056169210   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   ac       000000005616a030   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX    6       00000000561ab1b0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   b7       00000000561ab8c0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   b8       00000000561abfd0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   ba       00000000561acdf0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   bc       00000000561adc10   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   bd       00000000561ae320   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   bb       00000000561ad500   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   be       00000000561aea30   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   bf       0000000056215000   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c1       0000000056215e20   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c0       0000000056215710   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c3       0000000056216c40   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c2       0000000056216530   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c4       0000000056217350   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c5       0000000056217a60   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c6       0000000056218170   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   b9       00000000561ac6e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c8       0000000056218f90   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c7       0000000056218880   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   c9       00000000562196a0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   ca       0000000056219db0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   cb       000000005621a4c0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   cc       000000005621abd0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n> XXXX   cd       000000005621b2e0   8019820 Enabled\n> 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> (Threadpool Completion Port)\n>  18   ce   630 000000005621b9f0   1009220 Enabled\n> 0000000095837498:0000000095838c60 000000000047f070     0 MTA\n> (Threadpool Worker)\n>  19   cf   be8 000000005621c100   1009220 Enabled\n> 0000000095835638:0000000095836c60 000000000047f070     0 MTA\n> (Threadpool Worker)\n>  20   7d   540 0000000027848540   1009220 Enabled\n> 000000009582bbb8:000000009582cc60 000000000047f070     0 MTA\n> (Threadpool Worker)\n> 0:025> ~1\n>   1  Id: f1c.a44 Suspend: 1 Teb: 000007ff`fffdc000 Unfrozen\n> \n> On Mon, Jun 27, 2011 at 4:41 AM, ayende\n> reply@reply.github.com\n> wrote:\n> \n> > We currently think that this might be related to the logging issue that\n> > we discovered. We intend to move to a better logging approach, and we will\n> > see if this helps.\n> > Would you be able to run the same scenario again once this is done?\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/295#issuecomment-1446721\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/295#issuecomment-1462165\n"""
295,1465151,"b""  Yes having the server exceptions would make sense.  Is there a\nconfiguration option for Raven.Server.Exe so the console logging would\nbe error level only?  When the ETL recovers, success messages to the\nserver console push off exception information.\n\nOn Tue, Jun 28, 2011 at 11:36 PM, ayende\nreply@reply.github.com\nwrote:\n\n> Hm...\n> The problem is that there are a lot of reasons why a single HTTP request may\n> fail.\n> Can you setup your ETL to retry a few times in the case of failure? That\n> would simulate a more realistic scenario.\n> We will also run tests checking for slow downs under big load.\n> \n> On Wed, Jun 29, 2011 at 5:47 AM, fschwiet <\n> reply@reply.github.com>wrote:\n> \n> > I downloaded unstable build 398 and gave it a run. \xc2\xa0After about 30\n> > minutes the client timed out. \xc2\xa0The server showed as idle, I attached a\n> > debugger and all threads look idle. \xc2\xa0After restarting the server it\n> > showed the index as up to date with 644k documents stored. \xc2\xa0I was able\n> > to restart the client.\n> > \n> > \xc2\xa0Memory usage didn't increase so fast, but it did seem like writes\n> > slowed down over time (they started at 2k+ a second, then dropped to\n> > maybe 500/s). \xc2\xa0The documents are of mixed size and I was not measuring\n> > command rate very accurately so I wouldn't worry about that.\n> > \n> > \xc2\xa0I'm not sure no server threads had a CLR callstack available, there\n> > certainly was a lot of threads and that could have been the problem\n> > (more than I want to check, don't know shorthand). \xc2\xa0The machine has 4\n> > cores.\n> > \n> > \xc2\xa0I forgot to turn on bisection, so the client stopped on first error.\n> > \n> > Client:\n> > \n> > Sending range RavenDBCommand000000.gz shareditems/62112525 to\n> > RavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n> > \n> > ---\n> > \n> > Error #0\n> > Rhino.Etl.Core.RhinoEtlException: Failed to execute operation :\n> > Encountered error processing range RavenDBCommand000000.gz\n> > shareditems/62112525 to RavenDBCommand000000.gz shareditems/62113548\n> > (1024 commands).\n> > \xc2\xa0---> System.Exception: Encountered error processing range\n> > RavenDBCommand000000.gz shareditems/62112525 to\n> > RavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n> > \xc2\xa0---> System.Net.WebException: The underlying connection was closed:\n> > An unexpected error occurred on a receive. ---> System.IO.IOException:\n> > Unable to read data from the transport connection: A connection\n> > attempt failed because the connected party did not properly respond\n> > after a period of time, or established connection failed because\n> > connected host has failed to respond. --->\n> > System.Net.Sockets.SocketException: A connection attempt failed\n> > because the connected party did not\n> > properly respond after a period of time, or established connection\n> > failed because connected host has failed to respond\n> > \xc2\xa0 at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset,\n> > Int32 size, SocketFlags socketFlags)\n> > \xc2\xa0 at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32\n> > offset, Int32 size)\n> > \xc2\xa0 --- End of inner exception stack trace ---\n> > \xc2\xa0 at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32 size)\n> > \xc2\xa0 at System.Net.ConnectStream.ReadWithoutValidation(Byte[] buffer,\n> > Int32 offset, Int32 size, Boolean abortOnError)\n> > \xc2\xa0 at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32 size)\n> > \xc2\xa0 --- End of inner exception stack trace ---\n> > \xc2\xa0 at System.Net.HttpWebRequest.GetResponse()\n> > \xc2\xa0 at ETL.SavedItemEtl.BatchCommandsToRaven.PostCommands(List`1\n> > allCommands, Int32 start, Int32 count) in\n> > C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 143\n> > \xc2\xa0 --- End of inner exception stack trace ---\n> > \xc2\xa0 at\n> > ETL.SavedItemEtl.BatchCommandsToRaven.PostCommandsWithBisectFallback(List`1\n> > commandsToSend, Int32 originalStart, Int32 originalLength) in\n> > C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 90\n> > \xc2\xa0 at ETL.SavedItemEtl.BatchCommandsToRaven.<Execute>d__0.MoveNext()\n> > in C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line\n> > 49\n> > \xc2\xa0 at Rhino.Etl.Core.Enumerables.SingleRowEventRaisingEnumerator.MoveNext()\n> > \xc2\xa0 at Rhino.Etl.Core.Enumerables.EventRaisingEnumerator.MoveNext()\n> > \xc2\xa0 at\n> > ETL.SimplePipelineExecutor.<DecorateEnumerableForExecution>d__0.MoveNext()\n> > in C:\\src\\SavedItem\\ETL\\SimplePipelineExecutor.cs:line 16\n> > \xc2\xa0 at\n> > Rhino.Etl.Core.Pipelines.AbstractPipelineExecuter.ExecutePipeline(IEnumerable`1\n> > pipeline)\n> > \xc2\xa0 --- End of inner exception stack trace ---\n> > \n> > Server thread list: \xc2\xa0(it doesnt look like their are any CLR callstacks\n> > to show, server is idle)\n> > \n> > PDB symbol for clr.dll not loaded\n> > ThreadCount: \xc2\xa0 \xc2\xa0 \xc2\xa0178\n> > UnstartedThread: \xc2\xa00\n> > BackgroundThread: 15\n> > PendingThread: \xc2\xa0 \xc2\xa00\n> > DeadThread: \xc2\xa0 \xc2\xa0 \xc2\xa0 162\n> > Hosted Runtime: \xc2\xa0 no\n> > \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 PreEmptive\n> > \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 Lock\n> > \xc2\xa0 \xc2\xa0 \xc2\xa0 ID \xc2\xa0OSID \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0ThreadOBJ \xc2\xa0 \xc2\xa0 State GC \xc2\xa0 \xc2\xa0 \xc2\xa0 GC Alloc Context\n> > \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 Domain \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 Count APT Exception\n> > \xc2\xa0 0 \xc2\xa0 \xc2\xa01 \xc2\xa0 304 0000000000496d80 \xc2\xa0 \xc2\xa0 \xc2\xa0a020 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 1 MTA\n> > \xc2\xa0 2 \xc2\xa0 \xc2\xa02 \xc2\xa0 3b8 000000000049c0c0 \xc2\xa0 \xc2\xa0 \xc2\xa0b220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Finalizer)\n> > \xc2\xa0 4 \xc2\xa0 \xc2\xa03 \xc2\xa0 c7c 000000001b770080 \xc2\xa0 100a220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > \xc2\xa0 5 \xc2\xa0 \xc2\xa05 \xc2\xa0 9d8 000000001b777990 \xc2\xa0 1009220 Enabled\n> > 0000000095829d68:000000009582ac60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > \xc2\xa0 9 \xc2\xa0 \xc2\xa08 \xc2\xa0 3e4 000000001b8bb3d0 \xc2\xa0 200b220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > \xc2\xa010 \xc2\xa0 \xc2\xa09 \xc2\xa0 77c 000000001b8aede0 \xc2\xa0 200b220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > \xc2\xa011 \xc2\xa0 \xc2\xa0a \xc2\xa0 da4 000000001b8d74e0 \xc2\xa0 200b220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > \xc2\xa012 \xc2\xa0 \xc2\xa0b \xc2\xa0 e34 000000001b8abd60 \xc2\xa0 200b220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > XXXX \xc2\xa0 \xc2\xa0c \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8d2ed0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > \xc2\xa013 \xc2\xa0 \xc2\xa0d \xc2\xa0 934 000000001b8d8470 \xc2\xa0 1009220 Enabled\n> > 00000000958338a8:0000000095834c60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > \xc2\xa014 \xc2\xa0 \xc2\xa0f \xc2\xa0 db8 000000001b8d8b80 \xc2\xa0 1009220 Enabled\n> > 000000009582d958:000000009582ec60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > XXXX \xc2\xa0 \xc2\xa04 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8d9290 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 \xc2\xa0e \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8d99a0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 10 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8da0b0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 12 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8daed0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 11 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8da7c0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 13 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b8db5e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 15 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000278405c0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 16 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027840cd0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 17 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000278413e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 19 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027842200 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 18 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027841af0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 1b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027843020 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 1c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027843730 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 1d \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027843e40 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 1e \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7a85e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 1f \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7a8cf0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 20 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7a9400 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 21 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7a9b10 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > \xc2\xa015 \xc2\xa0 22 \xc2\xa01038 000000001b7aa220 \xc2\xa0 8009220 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 23 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7aa930 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 24 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7ab040 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 26 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000001b7abe60 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 27 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c6c90 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 28 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c73a0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 29 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c7ab0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 2a \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c81c0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 2c \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c8fe0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 2d \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c96f0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 2e \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279c9e00 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 2f \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000279ca510 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 30 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b1b020 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 31 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b1b730 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 34 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b1cc60 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 36 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b1da80 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 37 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b1e190 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 38 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b1e8a0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 39 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b619d0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 3a \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b620e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 3b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b627f0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 3c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b62f00 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 3d \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b63610 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 3e \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b63d20 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 3f \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b64430 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 40 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b64b40 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 41 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b65250 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 42 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb1b50 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 43 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb2260 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 44 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb2970 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 45 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb3080 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 46 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb3790 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 47 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb3ea0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 48 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bb45b0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 4b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bed980 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 4c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bee090 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 52 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bf0af0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 53 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027bf1200 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 54 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b7a710 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 55 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b7ae20 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 56 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b7b530 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 57 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027b7bc40 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 58 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f414d0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 59 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f41be0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 5a \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f422f0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 5b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f42a00 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 5d \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f43820 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 5c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f43110 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 5e \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f43f30 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 5f \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f44640 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 60 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f44d50 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 61 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000001035440 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 62 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000001035b50 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 63 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000001036260 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 64 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000001036970 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 65 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f2bd10 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 66 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f2c420 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 67 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f2cb30 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 69 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fbf470 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 68 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f2d240 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 6a \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fbfb80 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 6b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc0290 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 6c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc09a0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 6d \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc10b0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 6e \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc17c0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 6f \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc1ed0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 70 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc25e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 71 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fc2cf0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 73 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055ffe590 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 74 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055ffeca0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 72 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055ffde80 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 75 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fff3b0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 76 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055fffac0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 77 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560001d0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 78 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560008e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 79 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056000ff0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 7a \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056001700 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 7c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027847e30 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 7b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000027847720 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > \xc2\xa016 \xc2\xa0 7e \xc2\xa01034 0000000027848c50 \xc2\xa0 1009220 Enabled\n> > 00000000958317a8:0000000095832c60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > \xc2\xa017 \xc2\xa0 82 \xc2\xa0 d04 0000000027895050 \xc2\xa0 1009220 Enabled\n> > 000000009582f750:0000000095830c60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > XXXX \xc2\xa0 85 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056078820 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 87 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056079640 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 88 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056079d50 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 89 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005607a460 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 8a \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005607ab70 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 8b \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005607b280 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 8c \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560aab30 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 8d \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ab240 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 8f \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ac060 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 90 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ac770 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 91 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ace80 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 8e \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ab950 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 92 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ad590 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 93 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560adca0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 94 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000560ae3b0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 95 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f96070 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 96 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f96780 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 97 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f96e90 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 99 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005610f7f0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 98 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000055f975a0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 9a \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005610ff00 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 9b \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056110610 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 9c \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056110d20 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 9d \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056111430 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 9e \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056111b40 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 9f \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056112250 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a0 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056112960 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a2 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056157200 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a1 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056113070 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a3 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056157910 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a4 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056158020 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a5 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056158730 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 \xc2\xa07 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056158e40 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a6 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056159550 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 83 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056077a00 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a7 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056159c60 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a8 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005615a370 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 a9 \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005615aa80 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 ab \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056169920 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 aa \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056169210 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 ac \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005616a030 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 \xc2\xa06 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561ab1b0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 b7 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561ab8c0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 b8 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561abfd0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 ba \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561acdf0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 bc \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561adc10 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 bd \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561ae320 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 bb \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561ad500 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 be \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561aea30 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 bf \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056215000 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c1 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056215e20 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c0 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056215710 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c3 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056216c40 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c2 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056216530 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c4 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056217350 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c5 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056217a60 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c6 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056218170 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 b9 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000561ac6e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c8 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056218f90 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c7 \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056218880 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 c9 \xc2\xa0 \xc2\xa0 \xc2\xa0 00000000562196a0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 ca \xc2\xa0 \xc2\xa0 \xc2\xa0 0000000056219db0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 cb \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005621a4c0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 cc \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005621abd0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > XXXX \xc2\xa0 cd \xc2\xa0 \xc2\xa0 \xc2\xa0 000000005621b2e0 \xc2\xa0 8019820 Enabled\n> > 0000000000000000:0000000000000000 000000000047f070 \xc2\xa0 \xc2\xa0 0 Ukn\n> > (Threadpool Completion Port)\n> > \xc2\xa018 \xc2\xa0 ce \xc2\xa0 630 000000005621b9f0 \xc2\xa0 1009220 Enabled\n> > 0000000095837498:0000000095838c60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > \xc2\xa019 \xc2\xa0 cf \xc2\xa0 be8 000000005621c100 \xc2\xa0 1009220 Enabled\n> > 0000000095835638:0000000095836c60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > \xc2\xa020 \xc2\xa0 7d \xc2\xa0 540 0000000027848540 \xc2\xa0 1009220 Enabled\n> > 000000009582bbb8:000000009582cc60 000000000047f070 \xc2\xa0 \xc2\xa0 0 MTA\n> > (Threadpool Worker)\n> > 0:025> ~1\n> > \xc2\xa0 1 \xc2\xa0Id: f1c.a44 Suspend: 1 Teb: 000007ff`fffdc000 Unfrozen\n> > \n> > On Mon, Jun 27, 2011 at 4:41 AM, ayende\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > We currently think that this might be related to the logging issue that\n> > > we discovered. We intend to move to a better logging approach, and we will\n> > > see if this helps.\n> > > Would you be able to run the same scenario again once this is done?\n> > > \n> > > ## \n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/295#issuecomment-1446721\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/295#issuecomment-1462165\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/295#issuecomment-1465098\n"""
295,1465163,"b""Yes, you can configure this using a Nlog.config file in same dir as the\nexec.\n\nOn Wed, Jun 29, 2011 at 9:57 AM, fschwiet <\nreply@reply.github.com>wrote:\n\n> Yes having the server exceptions would make sense.  Is there a\n> configuration option for Raven.Server.Exe so the console logging would\n> be error level only?  When the ETL recovers, success messages to the\n> server console push off exception information.\n> \n> On Tue, Jun 28, 2011 at 11:36 PM, ayende\n> reply@reply.github.com\n> wrote:\n> \n> > Hm...\n> > The problem is that there are a lot of reasons why a single HTTP request\n> > may\n> > fail.\n> > Can you setup your ETL to retry a few times in the case of failure? That\n> > would simulate a more realistic scenario.\n> > We will also run tests checking for slow downs under big load.\n> > \n> > On Wed, Jun 29, 2011 at 5:47 AM, fschwiet <\n> > reply@reply.github.com>wrote:\n> > \n> > > I downloaded unstable build 398 and gave it a run.  After about 30\n> > > minutes the client timed out.  The server showed as idle, I attached a\n> > > debugger and all threads look idle.  After restarting the server it\n> > > showed the index as up to date with 644k documents stored.  I was able\n> > > to restart the client.\n> > > \n> > >  Memory usage didn't increase so fast, but it did seem like writes\n> > > slowed down over time (they started at 2k+ a second, then dropped to\n> > > maybe 500/s).  The documents are of mixed size and I was not measuring\n> > > command rate very accurately so I wouldn't worry about that.\n> > > \n> > >  I'm not sure no server threads had a CLR callstack available, there\n> > > certainly was a lot of threads and that could have been the problem\n> > > (more than I want to check, don't know shorthand).  The machine has 4\n> > > cores.\n> > > \n> > >  I forgot to turn on bisection, so the client stopped on first error.\n> > > \n> > > Client:\n> > > \n> > > Sending range RavenDBCommand000000.gz shareditems/62112525 to\n> > > RavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n> > > \n> > > ---\n> > > \n> > > Error #0\n> > > Rhino.Etl.Core.RhinoEtlException: Failed to execute operation :\n> > > Encountered error processing range RavenDBCommand000000.gz\n> > > shareditems/62112525 to RavenDBCommand000000.gz shareditems/62113548\n> > > (1024 commands).\n> > >  ---> System.Exception: Encountered error processing range\n> > > RavenDBCommand000000.gz shareditems/62112525 to\n> > > RavenDBCommand000000.gz shareditems/62113548 (1024 commands).\n> > >  ---> System.Net.WebException: The underlying connection was closed:\n> > > An unexpected error occurred on a receive. ---> System.IO.IOException:\n> > > Unable to read data from the transport connection: A connection\n> > > attempt failed because the connected party did not properly respond\n> > > after a period of time, or established connection failed because\n> > > connected host has failed to respond. --->\n> > > System.Net.Sockets.SocketException: A connection attempt failed\n> > > because the connected party did not\n> > > properly respond after a period of time, or established connection\n> > > failed because connected host has failed to respond\n> > >   at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset,\n> > > Int32 size, SocketFlags socketFlags)\n> > >   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32\n> > > offset, Int32 size)\n> > >   --- End of inner exception stack trace ---\n> > >   at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32\n> > > size)\n> > >   at System.Net.ConnectStream.ReadWithoutValidation(Byte[] buffer,\n> > > Int32 offset, Int32 size, Boolean abortOnError)\n> > >   at System.Net.ConnectStream.Read(Byte[] buffer, Int32 offset, Int32\n> > > size)\n> > >   --- End of inner exception stack trace ---\n> > >   at System.Net.HttpWebRequest.GetResponse()\n> > >   at ETL.SavedItemEtl.BatchCommandsToRaven.PostCommands(List`1\n> > > allCommands, Int32 start, Int32 count) in\n> > > C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 143\n> > >   --- End of inner exception stack trace ---\n> > >   at\n> > > \n> > > ETL.SavedItemEtl.BatchCommandsToRaven.PostCommandsWithBisectFallback(List`1\n> > > commandsToSend, Int32 originalStart, Int32 originalLength) in\n> > > C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line 90\n> > >   at ETL.SavedItemEtl.BatchCommandsToRaven.<Execute>d__0.MoveNext()\n> > > in C:\\src\\SavedItem\\ETL\\CommandPlumbing\\BatchCommandsToRaven.cs:line\n> > > 49\n> > >   at\n> > > Rhino.Etl.Core.Enumerables.SingleRowEventRaisingEnumerator.MoveNext()\n> > >   at Rhino.Etl.Core.Enumerables.EventRaisingEnumerator.MoveNext()\n> > >   at\n> > > \n> > > ETL.SimplePipelineExecutor.<DecorateEnumerableForExecution>d__0.MoveNext()\n> > > in C:\\src\\SavedItem\\ETL\\SimplePipelineExecutor.cs:line 16\n> > >   at\n> > > \n> > > Rhino.Etl.Core.Pipelines.AbstractPipelineExecuter.ExecutePipeline(IEnumerable`1\n> > > pipeline)\n> > >   --- End of inner exception stack trace ---\n> > > \n> > > Server thread list:  (it doesnt look like their are any CLR callstacks\n> > > to show, server is idle)\n> > > \n> > > PDB symbol for clr.dll not loaded\n> > > ThreadCount:      178\n> > > UnstartedThread:  0\n> > > BackgroundThread: 15\n> > > PendingThread:    0\n> > > DeadThread:       162\n> > > Hosted Runtime:   no\n> > >                                           PreEmptive\n> > >                                 Lock\n> > >       ID  OSID        ThreadOBJ     State GC       GC Alloc Context\n> > >               Domain           Count APT Exception\n> > >   0    1   304 0000000000496d80      a020 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     1 MTA\n> > >   2    2   3b8 000000000049c0c0      b220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > > (Finalizer)\n> > >   4    3   c7c 000000001b770080   100a220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > >   5    5   9d8 000000001b777990   1009220 Enabled\n> > > 0000000095829d68:000000009582ac60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > >   9    8   3e4 000000001b8bb3d0   200b220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > >  10    9   77c 000000001b8aede0   200b220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > >  11    a   da4 000000001b8d74e0   200b220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > >  12    b   e34 000000001b8abd60   200b220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > > XXXX    c       000000001b8d2ed0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > >  13    d   934 000000001b8d8470   1009220 Enabled\n> > > 00000000958338a8:0000000095834c60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > >  14    f   db8 000000001b8d8b80   1009220 Enabled\n> > > 000000009582d958:000000009582ec60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > > XXXX    4       000000001b8d9290   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX    e       000000001b8d99a0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   10       000000001b8da0b0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   12       000000001b8daed0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   11       000000001b8da7c0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   13       000000001b8db5e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   15       00000000278405c0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   16       0000000027840cd0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   17       00000000278413e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   19       0000000027842200   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   18       0000000027841af0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   1b       0000000027843020   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   1c       0000000027843730   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   1d       0000000027843e40   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   1e       000000001b7a85e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   1f       000000001b7a8cf0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   20       000000001b7a9400   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   21       000000001b7a9b10   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > >  15   22  1038 000000001b7aa220   8009220 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 MTA\n> > > (Threadpool Completion Port)\n> > > XXXX   23       000000001b7aa930   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   24       000000001b7ab040   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   26       000000001b7abe60   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   27       00000000279c6c90   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   28       00000000279c73a0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   29       00000000279c7ab0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   2a       00000000279c81c0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   2c       00000000279c8fe0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   2d       00000000279c96f0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   2e       00000000279c9e00   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   2f       00000000279ca510   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   30       0000000027b1b020   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   31       0000000027b1b730   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   34       0000000027b1cc60   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   36       0000000027b1da80   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   37       0000000027b1e190   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   38       0000000027b1e8a0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   39       0000000027b619d0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   3a       0000000027b620e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   3b       0000000027b627f0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   3c       0000000027b62f00   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   3d       0000000027b63610   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   3e       0000000027b63d20   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   3f       0000000027b64430   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   40       0000000027b64b40   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   41       0000000027b65250   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   42       0000000027bb1b50   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   43       0000000027bb2260   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   44       0000000027bb2970   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   45       0000000027bb3080   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   46       0000000027bb3790   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   47       0000000027bb3ea0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   48       0000000027bb45b0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   4b       0000000027bed980   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   4c       0000000027bee090   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   52       0000000027bf0af0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   53       0000000027bf1200   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   54       0000000027b7a710   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   55       0000000027b7ae20   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   56       0000000027b7b530   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   57       0000000027b7bc40   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   58       0000000055f414d0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   59       0000000055f41be0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   5a       0000000055f422f0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   5b       0000000055f42a00   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   5d       0000000055f43820   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   5c       0000000055f43110   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   5e       0000000055f43f30   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   5f       0000000055f44640   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   60       0000000055f44d50   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   61       0000000001035440   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   62       0000000001035b50   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   63       0000000001036260   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   64       0000000001036970   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   65       0000000055f2bd10   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   66       0000000055f2c420   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   67       0000000055f2cb30   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   69       0000000055fbf470   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   68       0000000055f2d240   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   6a       0000000055fbfb80   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   6b       0000000055fc0290   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   6c       0000000055fc09a0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   6d       0000000055fc10b0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   6e       0000000055fc17c0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   6f       0000000055fc1ed0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   70       0000000055fc25e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   71       0000000055fc2cf0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   73       0000000055ffe590   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   74       0000000055ffeca0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   72       0000000055ffde80   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   75       0000000055fff3b0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   76       0000000055fffac0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   77       00000000560001d0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   78       00000000560008e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   79       0000000056000ff0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   7a       0000000056001700   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   7c       0000000027847e30   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   7b       0000000027847720   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > >  16   7e  1034 0000000027848c50   1009220 Enabled\n> > > 00000000958317a8:0000000095832c60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > >  17   82   d04 0000000027895050   1009220 Enabled\n> > > 000000009582f750:0000000095830c60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > > XXXX   85       0000000056078820   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   87       0000000056079640   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   88       0000000056079d50   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   89       000000005607a460   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   8a       000000005607ab70   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   8b       000000005607b280   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   8c       00000000560aab30   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   8d       00000000560ab240   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   8f       00000000560ac060   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   90       00000000560ac770   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   91       00000000560ace80   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   8e       00000000560ab950   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   92       00000000560ad590   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   93       00000000560adca0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   94       00000000560ae3b0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   95       0000000055f96070   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   96       0000000055f96780   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   97       0000000055f96e90   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   99       000000005610f7f0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   98       0000000055f975a0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   9a       000000005610ff00   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   9b       0000000056110610   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   9c       0000000056110d20   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   9d       0000000056111430   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   9e       0000000056111b40   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   9f       0000000056112250   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a0       0000000056112960   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a2       0000000056157200   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a1       0000000056113070   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a3       0000000056157910   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a4       0000000056158020   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a5       0000000056158730   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX    7       0000000056158e40   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a6       0000000056159550   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   83       0000000056077a00   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a7       0000000056159c60   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a8       000000005615a370   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   a9       000000005615aa80   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   ab       0000000056169920   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   aa       0000000056169210   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   ac       000000005616a030   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX    6       00000000561ab1b0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   b7       00000000561ab8c0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   b8       00000000561abfd0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   ba       00000000561acdf0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   bc       00000000561adc10   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   bd       00000000561ae320   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   bb       00000000561ad500   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   be       00000000561aea30   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   bf       0000000056215000   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c1       0000000056215e20   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c0       0000000056215710   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c3       0000000056216c40   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c2       0000000056216530   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c4       0000000056217350   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c5       0000000056217a60   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c6       0000000056218170   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   b9       00000000561ac6e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c8       0000000056218f90   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c7       0000000056218880   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   c9       00000000562196a0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   ca       0000000056219db0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   cb       000000005621a4c0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   cc       000000005621abd0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > > XXXX   cd       000000005621b2e0   8019820 Enabled\n> > > 0000000000000000:0000000000000000 000000000047f070     0 Ukn\n> > > (Threadpool Completion Port)\n> > >  18   ce   630 000000005621b9f0   1009220 Enabled\n> > > 0000000095837498:0000000095838c60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > >  19   cf   be8 000000005621c100   1009220 Enabled\n> > > 0000000095835638:0000000095836c60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > >  20   7d   540 0000000027848540   1009220 Enabled\n> > > 000000009582bbb8:000000009582cc60 000000000047f070     0 MTA\n> > > (Threadpool Worker)\n> > > 0:025> ~1\n> > >   1  Id: f1c.a44 Suspend: 1 Teb: 000007ff`fffdc000 Unfrozen\n> > > \n> > > On Mon, Jun 27, 2011 at 4:41 AM, ayende\n> > > reply@reply.github.com\n> > > wrote:\n> > > \n> > > > We currently think that this might be related to the logging issue\n> > > > that\n> > > > we discovered. We intend to move to a better logging approach, and we\n> > > > will\n> > > > see if this helps.\n> > > > Would you be able to run the same scenario again once this is done?\n> > > > \n> > > > ## \n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/ravendb/ravendb/issues/295#issuecomment-1446721\n> > > \n> > > ## \n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/295#issuecomment-1462165\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/295#issuecomment-1465098\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/295#issuecomment-1465151\n"""
316,1466679,b'Pulled\n'
319,1495925,b'Pulled and reproed\n'
327,1514057,b'- It is already working for the simple cache.\n- Need better support for partially cached and fully cached\n- Need to have the UI support it better\n'
327,1520954,b'Partially cached requests works\n'
327,1520964,b'Need to ensure that we get proper profiling information for errors\n'
327,1521048,b'Profiling errors works\n'
327,1521192,b'We now can profile fully cached aggressive requests\n'
337,1541036,"b""It shouldn't really work, but I fixed the test, anyway.\n"""
305,1541264,b'No longer relevant\n'
295,1541268,"b'Should be fixed now, with the memory reduction techniques that we applied\n'"
343,1655839,b'Fixed\n'
342,1670770,"b""Can be done fully on the client side, so it isn't going in\n"""
228,1670776,"b'I am not sure what I mean but that, so going to close this. \n'"
303,1671355,b'Done in latest docs HEAD\n'
304,1671386,b'Done in latest docs HEAD\n'
306,1671399,b'Done in latest docs HEAD\n'
329,1672074,b'done\n'
321,1673873,b'Done in latest docs HEAD\n'
346,1674330,b'Do the same for ValidateMapReduceFields\n'
348,1699571,"b'Thanks, pulled locally\n'"
352,1782328,b'Which version of MVC do you use? I think GlobalFilters were introduced with MVC 3.\n'
352,1782612,b'Thank you for your reply. I do not use MVC.I do have .NET 4.0 installed on my machine. Whatever version of MVC is included with this version is the one installed on my PC. This compilation error is thrown when I compile the entire RavenDB project downloaded from GitHub. The error is not derived from my including it in any project I have build utilizing RavenDB just the RavenDB source project itself.\n'
352,1782634,b'I should have clarified after downloading the RavenDB source solution from GitHub I compiled the entire RavenDB solution and all projects connected to it. All the projects compile accept this one and it lists this as the reason.\n\nRegards\n'
352,1782949,"b'Raven.Client.MvcIntegration requires ASP.NET MVC, so either you remove that project from your solution or install MVC: http://www.asp.net/mvc\n'"
352,1783299,"b'Install ASP.NET MVC 3, it will work\n'"
355,1816259,b'Try this: `new DocumentStore { Url = _ravenUrl };`\n'
355,1816564,"b""I found the exception occurs, if you define .URL to be NULL (Which i accidently did).\nThe exception thrown could have been more describing though. It took me some time to realise this was the issue.\nI'm surprised store.Initialize() did not break when the Url was not defined. Is this by design?\n\nFailing test would be:\n\nvar store = new DocumentStore { Url = null };\nstore.Initialize(); // I would expect the code to break here with a descriptive error message\nvar commands = store.DatabaseCommands; // The code breaks here\n"""
355,1819999,b'We will add some argument checks\n'
356,1824147,b'Can you please post a failing test?\n'
356,1825251,b'Should I post it as an actual failing unittest or just the complete code to reproduce the problem?\n'
356,1825354,"b'Necessary classes:\n\npublic class Style\n        {\n            public string Name { get; set; }\n            public Dictionary<string, Sku> Skus = new Dictionary<string, Sku>();\n        }\n        public class Sku\n        {\n            public string Name { get; set; }\n            public Dictionary<string, Colli> Collis = new Dictionary<string, Colli>();\n        }\n        public class Colli\n        {\n            public string Name { get; set; }\n        }\n\nFailing test:\n\n// Instantiate style\n            Style style = new Style() { Name = ""Cool style"" };\n            style.Skus.Add(""Cool sku"", new Sku() { Name = ""Cool sku"" });\n            style.Skus[""Cool sku""].Collis.Add(""Cool colli"", new Colli() { Name = ""Cool colli"" });\n\n```\n        // Store style\n        string ravenUrl = ""http://pc-009:8080"";\n        using(var store = new DocumentStore(){ Url = ravenUrl })\n        {\n            store.Initialize();\n            using(var session = store.OpenSession())\n            {\n                session.Store(style);\n            }\n        }\n\n        // Wait for data to be persisted\n        Thread.Sleep(2000);\n\n        // Working style queries\n        using (var store = new DocumentStore() { Url = ravenUrl })\n        {\n            store.Initialize();\n            using (var session = store.OpenSession())\n            {\n                // Working queries\n                var existingStyleWithSku1 = session.Query<Style>().Where(s => s.Skus[""Sku1""] != null).ToList();\n                var nonexistingStyleWithSku4 = session.Query<Style>().Where(s => s.Skus[""Sku4""] != null).ToList();\n\n                // Failing query\n                var styleWithSpecificColli = session.Query<Style>().Where(s => s.Skus[""Sku1""].Collis[""Right""] != null).ToList();\n            }\n        }\n```\n'"
356,1825482,"b""You're not using RavenDB right. You should call session.SaveChanges() before disposing of the session.\n\nAlso, don't use Thread.Sleep(), but rather query with .WaitForNonStaleResults. See https://github.com/ravendb/docs/blob/master/docs/consumer/querying/stale-indexes.markdown\n"""
356,1825488,"b'I am aware of SaveChanges(). That was a mistake.\nBut the WaitForNonStaleResults was a nice tip. Thankyou!\n\nIs the provided code sufficient and what you expected? If not, I would like to know in case of any future issues.\n'"
356,1825600,"b'The query you maked as failing is invalid.\n\nYou should use something like:\n\nvar styleWithSpecificColli = session.Query<Style>()\n   .Select(s => s.Skus[""Sku1""])\n   .Where(c => c.Collis[""Right""] != null)\n   .ToList();\n\n   .Where(s => s.Skus[""Sku1""].Collis[""Right""] != null).ToList();\n'"
356,1825835,"b'Ahhh, Thankyou very much! I started out posting on stackoverflow and posted the issue inhere at Ayendes request.\nIm sorry for taking your time.\n'"
354,1869092,b'Fixed\n'
355,1869390,"b'Actually, Url == null is actually pretty common when we are running in embedded mode\n'"
355,1869539,b'Fixed\n'
358,1870163,b'Pulled\n'
358,1870279,"b'Richard, before I can push this, we need the CLA\n'"
358,1871356,b'CLA sent by email.\n'
359,1895174,"b'Yes, this is Lucene syntax\n\nhttp://lucene.apache.org/java/2_4_0/queryparsersyntax.html\n\nQuotes mean phrase and are stripped, single quotes mean nothing and are not\n'"
359,1897245,"b""Ah. I guess I should really read that document. I've tried to avoid it. :-)\n"""
242,1925374,"b'Isn\'t this implemented already?\n\nLooking at ShardedDocumentQuery:\n\n`\n        /// <summary>\n        /// Takes the specified count.\n        /// </summary>\n        /// <param name=""count"">The count.</param>\n        /// <returns></returns>\n        public IDocumentQuery<T> Take(int count)\n        {\n            ApplyForAll(query => query.Take(count));\n            return this;\n        }\n`\n'"
242,1927318,"b'Looks like, yes.\n\nOn Sun, Aug 28, 2011 at 11:30 PM, synhershko <\nreply@reply.github.com>wrote:\n\n> Isn\'t this implemented already?\n> \n> Looking at ShardedDocumentQuery:\n> \n> `\n>                /// <summary>\n>                /// Takes the specified count.\n>                /// </summary>\n>                /// <param name=""count"">The count.</param>\n>                /// <returns></returns>\n>                public IDocumentQuery<T> Take(int count)\n>                {\n>                        ApplyForAll(query => query.Take(count));\n>                        return this;\n>                }\n> `\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/242#issuecomment-1925374\n'"
242,1927321,"b'Oh, no, it doesn\'t :-)\n\nThe issue is that we _take_ from each of the shards, but we need to apply\nour own take on top of that.\n\nOn Mon, Aug 29, 2011 at 7:42 AM, Ayende Rahien ayende@ayende.com wrote:\n\n> Looks like, yes.\n> \n> On Sun, Aug 28, 2011 at 11:30 PM, synhershko <\n> reply@reply.github.com>wrote:\n> \n> > Isn\'t this implemented already?\n> > \n> > Looking at ShardedDocumentQuery:\n> > \n> > `\n> >                /// <summary>\n> >                /// Takes the specified count.\n> >                /// </summary>\n> >                /// <param name=""count"">The count.</param>\n> >                /// <returns></returns>\n> >                public IDocumentQuery<T> Take(int count)\n> >                {\n> >                        ApplyForAll(query => query.Take(count));\n> >                        return this;\n> >                }\n> > `\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/242#issuecomment-1925374\n'"
360,1965586,b'Fixed\n'
270,1965598,b'Done\n'
119,1965603,"b'Fixed, we now have the option of handling that by specifying the connection string name\n'"
349,1965650,"b'Can no longer reproduce, seems to be working now\n'"
362,1986156,b'pulled\n'
367,2024140,b'I got Raven.Client.Embedded to run with mono on Linux using munin.\n'
370,2038329,"b'This is a result of the newly added StyleCop rules. @e-tobi, can you take a look at this?\n'"
370,2041919,"b""I'll take a look at this!\n"""
370,2043425,b'A pull request is pending: https://github.com/ayende/ravendb/pull/58\n'
372,2109704,b'currently they are not being cached _at all_\n\n/cc @ayende\n'
276,2118129,b'This can be closed now\n'
373,2125367,"b'I\'ve simplified the example somewhat, it\'s in the same gist https://gist.github.com/1224679 but it\'s called ""Simplified--No Nested Transactions""\n'"
373,2141505,b'All commentary has been moved here: https://groups.google.com/forum/#!topic/ravendb/RBNpmb8YNXo\n'
375,2167128,b'Fixed\n'
371,2189815,"b'Not going to support it, can be done with two separate queries to the server, or by adding a responder.\n'"
372,2189834,b'Fixed\n'
366,2189837,"b""Can use Matt's material on ravendb.net\n"""
344,2189840,b'Not going to support this at this time\n'
341,2189841,b'Fixed\n'
369,2189844,b'Fixed in a different fashion\n'
364,2189846,"b'Not relevant, we are re-writing from scratch\n'"
346,2189847,b'Done\n'
345,2189850,"b""Doesn't seem very important\n"""
368,2189863,b'Fixed\n'
340,2189963,b'Fixed\n'
323,2190195,b'Fixed\n'
302,2203494,"b""I was doing some debugging for a few hours on this issue, and besides some Windows path separator characters, I haven't found a solution. The server compiles and starts up. It has served some requests, such as a redirect, and the .xap not found. The client however, hangs on DocumentStore.Initialize(), but it may be waiting on the server for something... I'll try to look through this some more soon, but in the mean time, hopefully this points someone in a direction.\n"""
338,2207908,"b""Don't think that this is really needed\n"""
317,2207915,b'Already supported :-)\n'
277,2207921,b'Not going to implement this\n'
246,2207929,"b'No need, we are going to do a whole new site soon\n'"
244,2207930,"b'Not going to implement this, we will remove the database from memory, but that would be it\n'"
207,2207934,"b'Auto sharding will take care of this, I think\n'"
302,2237795,b'+1\n\nAny status on this?\n'
378,2251576,b'Pull request automatically closed by resetting my local master branch. I have resubmitted this pull request as #379.\n'
302,2262164,"b""This isn't a priority at the moment for us.\nIf someone want to take ownership of this, we would be more than happy, but\nwe don't currently have resources to dedicate to this.\n\nOn Thu, Sep 29, 2011 at 3:41 PM, Alex Henning Johannessen <\nreply@reply.github.com>wrote:\n\n> +1\n> \n> Any status on this?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/302#issuecomment-2237795\n"""
383,2273593,"b'What exactly are you doing here? Why are you using AbstractViewGenerator and not AbstractIndexCreationTask, instead?\n'"
383,2274837,"b""The actual implementation executes code that can't be pushed through the compiler, it relies on deserialising the document in the map operation into a strong type\n"""
383,2282911,b'Why do you need to do this deserialization in the first place?\n'
383,2283497,"b""It's for document (as in large document object model) composition and rendering. Previous iterations used read triggers to compose the documents before they got to the client. For various reasons (not so much raven serialization after the performance improvements) we moved document processing behaviour onto the server. This is part of a pipeline that produces versions of those documents in different media formats by using different result transformers.\n"""
382,2297279,b'Thanks a million for that\n'
382,2297304,"b'Great, thanks ayende\n'"
313,2308020,b'Duplicate of https://github.com/ravendb/ravendb/issues/299\n'
184,2308029,b'Done\nhttps://github.com/ravendb/docs/blob/master/docs/consumer/advanced/databasecommands.markdown\n'
383,2319958,b'I created a proper test case for this here:\nhttps://github.com/ayende/ravendb/tree/ViewGenerator\n'
384,2334013,b'The 2 queries in this test will not go to the same index\n\nWhat happens when you write the second query with WaitForNonStaleResultsAsOfNow()?\n\nPlease see\nhttp://docs.ravendb.net/consumer/querying/stale-indexes.html\nhttp://docs.ravendb.net/consumer/querying/static-indexes/index.html\n'
385,2335413,b'Fixed\n'
384,2335444,"b'The actual problem stems from the usage of a property named Inner, working on it now\n'"
384,2335493,b'Fixed\n'
384,2335584,"b""@synhershko the first query is to verify that the record is written to the db. Also since the problem is the wrong definition for the index stale results don't meter. \n\n@ayende great work. thanks\n"""
384,2335588,"b""Actually, we independently fixed the root cause of the test failure. Your\ntest actually exposed a different problem :-)\n\nOn Sun, Oct 9, 2011 at 9:09 AM, Iulian Margarintescu <\nreply@reply.github.com>wrote:\n\n> @synhershko the first query is to verify that the record is written to the\n> db. Also since the problem is the wrong definition for the index stale\n> results don't meter.\n> \n> @ayende great work. thanks\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/384#issuecomment-2335584\n"""
383,2336425,b'Thanks for reporting this. It was a problem related to how Munin did some stuff with calculating stale indexes.\nFixed in the current build.\n'
381,2336427,b'We are working on resolving the sharding issues in a different manner\n'
379,2336428,b'Fixed\n'
381,2341762,b'Nice. \nThank you.\n'
383,2346704,b'Is this definitely isolated to Munin? \n'
383,2346714,"b'YEs\n\nOn Mon, Oct 10, 2011 at 2:12 PM, ryansroberts <\nreply@reply.github.com>wrote:\n\n> Is this definitely isolated to Munin?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/383#issuecomment-2346704\n'"
389,2503140,"b'It is there, need to update your build\n'"
392,2550838,"b""Hi,\nI can't pull your changes, can you update from the ayende/ravendb fork and send a new pull request?\n"""
392,2551525,b'Already on in...\n'
308,2569827,b'No longer relevant\n'
251,2569830,b'Done now\n'
339,2569837,b'Raven/MemoryCacheLimitMegabytes\nRaven/MemoryCacheLimitPercentage\nRaven/MemoryCacheLimitCheckInterval\nRaven/Esent/CacheSizeMax\n'
339,2569839,"b'Raven/Esent/CacheSizeMax\n""Raven/MemoryCacheLimitCheckInterval""]\n""Raven/MemoryCacheLimitPercentage""]\n""Raven/MemoryCacheLimitMegabytes""\n'"
396,2615130,b'Ooops... I accidentally committed my small changes to the Tryouts\\Program.cs and Tryouts\\PerfTest.cs ... let me know if it matters.\n'
396,2615375,"b""Doesn't matter. Do all tests pass?\n"""
396,2616614,"b'All tests passed before and they pass now too with the two new commits.\n\nThe general change is that JTokenType has three new values: Guid, Uri and TimeSpan.\nI am not sure if these need to be represented in all the switches on JTokenType in Munin and other libraries? I can add them if neccessary, but I see others are left out as well and it seems that all reads will always be into one of the already defined JTokenTypes.\n\nWhile comparing diffs I have skipped some changes in the classes revolving around Json.Linq. The skipped changes are:\n\nExtensions \n    Had no changes since 4.0.2\n\nJArray\n    Changes were only related to JContainer\n\nJObject\n    Changes were only related to JContainer\n\nJPath\n    Had no changes since 4.0.2\n\nJToken\n    Skipped new ToObject method\n    Skipped changes related to Children() method\n\nJTokenEqualityCompater\n    Had no changes since 4.0.2  \n\nJTokenReader + JsonReader\n    All changes are isolated to the class itself\n\nJTokenWriter + JsonWriter\n    Skipped new CLSCompliant attributes\n    Left out overriding the overloads for Guid? and Timespan?       \n\nJValue\n    Skipped the new static Operation method as it is isolated to the class itself\n'"
396,2624642,"b'Thanks for taking the time to do this, we will review and pull in a few days\n'"
397,2633372,"b'In particular, spatial queries using the linq api seems to ignore the sptial part\n'"
398,2635030,"b'The idea is to allow auto parse of TimeSpan values, so we access their properties in the indexing process, right now they are treated as strings.\n'"
396,2646895,"b""I just noticed a mistake I made. I'm not usually using the .net 3.5 build of neither Raven nor json.net, but yesterday I had to, and found that json.net has deployed with a new naming scheme. All assemblies for different versions of .net are now named the same. \n\nI kind of thought that had always been the case, and that they were just renamed in Raven and maybe renamed back on deployment. Didn't look into it, and I see I should have :)\n\nWell, I have tried to fix it with some additions to the build script. I have no idea if this is your preferred way of doing it, but now it builds against the correct version and copies the correct versions into the release folders.\n\nI hope it's somewhat in the right direction.\n"""
396,2652545,b'Just rename them in the SharedLibs dir\n\nSee https://github.com/synhershko/ravendb/commit/59e075\n\nYou can cherry pick that\n'
396,2653876,"b'That\'s is exactly what I did at first. But I can not load the renamed assembly, it fails with an error that says ""Comparing the assembly name resulted in the mismatch: NAME"".\n\nIf I use the original naming, I don\'t have the problem.\n'"
396,2653971,"b'Ok so you\'d probably want to do this manually :)\n\nOn Mon, Nov 7, 2011 at 4:14 PM, asgerhallas <\nreply@reply.github.com>wrote:\n\n> That\'s is exactly what I did at first. But I can not load the renamed\n> assembly, it fails with an error that says ""Comparing the assembly name\n> resulted in the mismatch: NAME"".\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/396#issuecomment-2653876\n'"
396,2658007,"b'Hi,\nWe need you to sign the contribution agreement:\nravendb.net/faq/contributing\n\nOn Thu, Nov 3, 2011 at 4:02 AM, asgerhallas <\nreply@reply.github.com>wrote:\n\n> As discussed briefly here\n> http://groups.google.com/group/ravendb/browse_thread/thread/0891df3ae4743da8/a61979e9c6d1c25b?show_docid=a61979e9c6d1c25bthere are some problems with version 4.0.2 of\n> json.net and some issues with upgrading it to 4.0.3. I have made an\n> update and fixed the issues.\n> \n> Performance seems a little higher too (in my pretty uncontrolled\n> environment):\n> \n> json.net 4.0.2:\n> Starting Json performance test with 100 iterations...\n> Using Newtonsoft Json.NET containers:\n> Reading took 50197 ms\n> Cloning took 13391 ms\n> Using Raven.Json containers:\n> Reading took 28735 ms\n> Cloning took 16614 ms\n> Press any key to continue . . .\n> \n> json.net 4.0.3:\n> Starting Json performance test with 100 iterations...\n> Using Newtonsoft Json.NET containers:\n> Reading took 40269 ms\n> Cloning took 26048 ms\n> Using Raven.Json containers:\n> Reading took 27173 ms\n> Cloning took 13502 ms\n> Press any key to continue . . .. . .\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/asgerhallas/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/396\n> \n> -- Commit Summary --\n> - Update to json.net 4.0.3\n> \n> -- File Changes --\n> \n> M Modules/Json/SharedLibs/Newtonsoft.Json.Net35.dll (0)\n> M Modules/Json/SharedLibs/Newtonsoft.Json.Net35.pdb (0)\n> M Modules/Json/SharedLibs/Newtonsoft.Json.Net35.xml (13693)\n> M Modules/Json/SharedLibs/Newtonsoft.Json.XML (14003)\n> M Modules/Json/SharedLibs/Newtonsoft.Json.dll (0)\n> M Modules/Json/SharedLibs/Newtonsoft.Json.pdb (0)\n> M Modules/Munin/SharedLibs/Newtonsoft.Json.XML (14003)\n> M Modules/Munin/SharedLibs/Newtonsoft.Json.dll (0)\n> M Modules/Munin/SharedLibs/Newtonsoft.Json.pdb (0)\n> M Raven.Abstractions/Json/Linq/RavenJTokenWriter.cs (717)\n> M Raven.Abstractions/Json/Linq/RavenJValue.cs (987)\n> M Raven.Client.Debug/Raven.Client.Debug.csproj (166)\n> M Raven.Tryouts/Json/PerfTest.cs (4)\n> M Raven.Tryouts/Program.cs (5)\n> M SharedLibs/Newtonsoft.Json.Net35.dll (0)\n> M SharedLibs/Newtonsoft.Json.Net35.pdb (0)\n> M SharedLibs/Newtonsoft.Json.Net35.xml (519)\n> M SharedLibs/Newtonsoft.Json.Silverlight.dll (0)\n> M SharedLibs/Newtonsoft.Json.Silverlight.pdb (0)\n> M SharedLibs/Newtonsoft.Json.Silverlight.xml (311)\n> M SharedLibs/Newtonsoft.Json.XML (369)\n> M SharedLibs/Newtonsoft.Json.dll (0)\n> M SharedLibs/Newtonsoft.Json.pdb (0)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/396.patch\n>  https://github.com/ravendb/ravendb/pull/396.diff\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/396\n'"
396,2665972,"b'Hi, \nThe contribution agreement is now signed and sent.\n'"
396,2674355,"b'We pulled your changes, thanks!\n'"
264,2697898,"b'What do you envision for this?  I would love to see an Azure-aware auto-sharding bundle that is aware of fault/upgrade domains (for availability) and perhaps configurable, automatic backups to BLOB storage.\n'"
264,2698094,"b""We don't have any firms plans, right now we want to have automatically\nhandle things like the blob storage drive, etc.\nI would be really interested in any information that you can give about the\nsort of features that you want.\n\nOn Thu, Nov 10, 2011 at 10:05 AM, Jerry Bullard <\nreply@reply.github.com>wrote:\n\n> What do you envision for this?  I would love to see an Azure-aware\n> auto-sharding bundle that is aware of fault/upgrade domains (for\n> availability) and perhaps configurable, automatic backups to BLOB storage.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/264#issuecomment-2697898\n"""
400,2712069,"b""You can't share the same directory with build 287 and 499\n\nOn Fri, Nov 11, 2011 at 2:13 PM, asapostolov <\nreply@reply.github.com\n\n> wrote:\n> \n> Hello,\n> \n> I'm experiencing a very strange exception on my hosting environment. I\n> have tow instances of RavenDb. First is build #287, and runs fine, the\n> second is #499 and throws the following exception:\n> [EsentFileAccessDeniedException: Cannot access file, the file is locked or\n> in use]\n>   Microsoft.Isam.Esent.Interop.Api.Check(Int32 err) in\n> C:\\Work\\ravendb\\SharedLibs\\Sources\\managedesent-61618\\EsentInterop\\Api.cs:2739\n>   Microsoft.Isam.Esent.Interop.Api.JetInit(JET_INSTANCE& instance) in\n> C:\\Work\\ravendb\\SharedLibs\\Sources\\managedesent-61618\\EsentInterop\\Api.cs:131\n>   Raven.Storage.Esent.TransactionalStorage.Initialize(IUuidGenerator\n> uuidGenerator) in\n> c:\\Builds\\raven\\Raven.Storage.Esent\\TransactionalStorage.cs:207\n> \n> [InvalidOperationException: Could not open transactional storage:\n> d:\\inetpub\\vhosts\\aapostolov.com\\subdomains\\ravendvera\\httpdocs\\Data\\Data]\n>   Raven.Storage.Esent.TransactionalStorage.Initialize(IUuidGenerator\n> uuidGenerator) in\n> c:\\Builds\\raven\\Raven.Storage.Esent\\TransactionalStorage.cs:220\n>   Raven.Database.DocumentDatabase..ctor(InMemoryRavenConfiguration\n> configuration) in c:\\Builds\\raven\\Raven.Database\\DocumentDatabase.cs:148\n>   Raven.Web.ForwardToRavenRespondersFactory..cctor() in\n> c:\\Builds\\raven\\Raven.Web\\ForwardToRavenRespondersFactory.cs:30\n> \n> [TypeInitializationException: The type initializer for\n> 'Raven.Web.ForwardToRavenRespondersFactory' threw an exception.]\n>   Raven.Web.ForwardToRavenRespondersFactory..ctor() +0\n> \n> [TargetInvocationException: Exception has been thrown by the target of an\n> invocation.]\n>   System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean\n> publicOnly, Boolean noCheck, Boolean& canBeCached,\n> RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck) +0\n>   System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean\n> skipCheckThis, Boolean fillCache) +98\n>   System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean\n> skipVisibilityChecks, Boolean skipCheckThis, Boolean fillCache) +241\n>   System.Activator.CreateInstance(Type type, Boolean nonPublic) +69\n>   System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder\n> binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\n> +1136\n>   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr,\n> Binder binder, Object[] args, CultureInfo culture, Object[]\n> activationAttributes) +111\n>   System.Activator.CreateInstance(Type type, BindingFlags bindingAttr,\n> Binder binder, Object[] args, CultureInfo culture) +23\n>   System.Web.HttpRuntime.CreateNonPublicInstance(Type type, Object[] args)\n> +60\n>   System.Web.Configuration.HandlerFactoryCache..ctor(String type) +46\n>   System.Web.HttpApplication.GetFactory(String type) +81\n> \n> System.Web.MaterializeHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()\n> +223\n>   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&\n> completedSynchronously) +184\n> \n> The strange thing is if I run a second server with build #287 - the two\n> #287 are fine, and #499 crashes. Even if I stop all the #287, the #499\n> still gives the error.\n> \n> Hope you can reproduce this and fix it.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/400\n"""
400,2716496,"b""Do you mean I cannot run two instances of raven - one 287 and one 499 on the same server? What do you mean with share the same folder? Actualy I have 287 and 499 started on my local machine and everything's fine. \n"""
400,2717252,"b""You can run them on the same machine, but you can't have them sharing the\nsame folder.\nYou can't run any two instances of ravendb against the same folder at once,\nactually.\nThe error indicate some sort of permission / locking issue, so check that\nyou are running RavenDB with a user that actually have write permissions\nthere.\n\nOn Sat, Nov 12, 2011 at 2:55 AM, asapostolov <\nreply@reply.github.com\n\n> wrote:\n> \n> Do you mean I cannot run two instances of raven - one 287 and one 499 on\n> the same server? What do you mean with share the same folder? Actualy I\n> have 287 and 499 started on my local machine and everything's fine.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/400#issuecomment-2716496\n"""
396,2719716,"b""4.0.3 has some regression bugs, see discussion on commit da385ae (on ayende's branch : https://github.com/ayende/ravendb/commit/da385ae513a328e34ca1e9640119000b82662786 )\n"""
396,2721620,b'Thanks for the heads up!\n'
200,2724465,"b'Done - http://beta.ravendb.net/docs/consumer/advanced/dynamic-fields\n\n@remcoros - it does work, see the docs I linked to and the tests under DynamicFields.\n'"
400,2727920,"b""Do I have to have the write permission for /Data/ or for the path C:/Work/ and C:/Build/. What are those paths for anyways(I know what /Data/ is for)?\n\nUpdate:\nI checked the file access permissions and they're fine for the /Data/ directory. \n"""
400,2731048,"b""You have to have permissions for the Data folder, the work and build\nfolders are for the pdb sources, and aren't relevant.\n\nOn Mon, Nov 14, 2011 at 3:57 AM, asapostolov <\nreply@reply.github.com\n\n> wrote:\n> \n> Do I have to have the write permission for /Data/ or for the path C:/Work/\n> and C:/Build/. What are those paths for anyways(I know what /Data/ is for)?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/400#issuecomment-2727920\n"""
400,2731454,"b'The read/write permissions are fine to /Data/, and the Code Access setting is set to full. I the strange is that I have the 287 build running on Another Directory at the same server and everything is fine. Any other ideas?\n'"
400,2731579,"b""No, that is really strange, check to see that you don't have an AV or\nsomething like that locking the files.\n\nOn Mon, Nov 14, 2011 at 10:11 AM, asapostolov <\nreply@reply.github.com\n\n> wrote:\n> \n> The read/write permissions are fine to /Data/, and the Code Access setting\n> is set to full. I the strange is that I have the 287 build running on\n> Another Directory at the same server and everything is fine. Any other\n> ideas?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/400#issuecomment-2731454\n"""
400,2790010,"b""pff I tried with the latest version also and nothing's happening\n\nI may fall back to the older version of raven because of this hosting provider.\nOr I may change the hosting provider.\n\nThanks for the help anyways.\n"""
401,2803200,"b""I can't reproduce, see a passing test for that in MultipleVersions file inside the bundles tests\n"""
402,2803207,"b'Richard,\nThis is _extremely_ unlikely. The way it works, there is nothing between\nthe two that can interfere that I can see.\nCan you provide a failing test?\n\nOn Fri, Nov 18, 2011 at 10:36 PM, Richard Poole <\nreply@reply.github.com\n\n> wrote:\n> \n> If we implement an `AbstractReadTrigger` as shown in [this documentation](http://ravendb.net/documentation/triggers/read), we notice that\n> Raven.Smuggler.exe fails to export all documents. After some digging, we\n> believe this has to do with the `Database.Get` call causing the batch read\n> to skip some documents - possibly due to etag of the loaded document\n> interfering with the iteration process?\n> \n> This can be reproduced by creating a bundle with an `OnRead` trigger that\n> calls `Database.Get` on an arbitrary document, and then running\n> Raven.Smuggler.exe out. Compare the number of documents exported with and\n> without the bundle installed.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/402\n'"
403,2864600,b'Fixed\n'
404,2898399,"b'Should probably be, FirstNotNullOrDefault, I think\n'"
404,2898462,"b'Was trying to avoid that length\n\nOn Mon, Nov 28, 2011 at 5:40 PM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> Should probably be, FirstNotNullOrDefault, I think\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/404#issuecomment-2898399\n'"
404,2898657,"b""I don't think that you can, it would be misleading otherwise.\n\nOn Mon, Nov 28, 2011 at 5:44 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> Was trying to avoid that length\n> \n> On Mon, Nov 28, 2011 at 5:40 PM, Ayende Rahien <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Should probably be, FirstNotNullOrDefault, I think\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/404#issuecomment-2898399\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/404#issuecomment-2898462\n"""
400,2974900,"b""I ended up changing the hosting provider and everything's fine now.\n\nThanks for all the help, Ayende!\n"""
400,2976835,"b""What hosting provider did you end up using?\n\nOn Thursday, December 1, 2011, asapostolov <\nreply@reply.github.com>\nwrote:\n\n> I ended up changing the hosting provider and everything's fine now.\n> \n> Thanks for all the help, Ayende!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/400#issuecomment-2974900\n"""
400,2987607,"b""http://www.dotnet-host.com/\n\nNice control panel and overall support from them. I'm just at beta stage now so I don't have data for larger load scenarios, but the configuration panel and settings they provide is all I need for now. \n\nI'm curious - which hosting provider do you use?\n"""
400,3006922,"b""We are using GoGrid\n\nOn Fri, Dec 2, 2011 at 10:34 AM, asapostolov <\nreply@reply.github.com\n\n> wrote:\n> \n> http://www.dotnet-host.com/\n> \n> Nice control panel and overall support from them. I'm just at beta stage\n> now so I don't have data for larger load scenarios, but the configuration\n> panel and settings they provide is all I need for now.\n> \n> I'm curious - which hosting provider do you use?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/400#issuecomment-2987607\n"""
407,3059114,b'done\n'
408,3059310,"b'This seems to be fairly complicated change, and we are already working on\nfixing sharding.\nThat said, keys are _strings_ in RavenDB. The session API allows you to\npretend otherwise, but they are strings, and the shard strategy should\ntreat them as such\n\nOn Thu, Dec 8, 2011 at 12:45 AM, jochenz <\nreply@reply.github.com\n\n> wrote:\n> \n> When using entities with non-string ids, I was not able to use\n> Load<T>(ValueType id) on a sharded session. The reason was that the\n> ShardResolutionStrategyData only transferred string type keys, so the\n> method used above could not use that.\n> ShardResolutionStrategyData was updated to transfer OR a string key OR a\n> ValueType key. Two properties (HasStringKey & HasValueTypeKey) helping to\n> check which key to use in the ShardResolutionStrategy were added to\n> ShardResolutionStrategyData. If someone has a nicer solution, feel free,\n> but this solution was backwards compatible.\n> ShardedDocumentSession.Load<T>(string key) and\n> ShardedDocumentSession.Load<T>(ValueType id) now basically use the same\n> logic.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/jochenz/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/408\n> \n> -- Commit Summary --\n> - Implemented IDocumentSession.Load<T>(ValueType id) on\n>   ShardedDocumentSession. See test\n>   Shard/When_Using_Entities_With_ValueType_Ids.\n> \n> -- File Changes --\n> \n> M\n> Raven.Client.Lightweight/Shard/ShardStrategy/ShardResolution/ShardResolutionStrategyData.cs\n> (153)\n> M Raven.Client.Lightweight/Shard/ShardedDocumentSession.cs (111)\n> M Raven.Tests/Raven.Tests.csproj (1)\n> A Raven.Tests/Shard/When_Using_Entities_With_ValueType_Ids.cs (201)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/408.patch\n>  https://github.com/ravendb/ravendb/pull/408.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/408\n'"
408,3061653,"b""Well, think of a very common scenario. Entities with Guid IDs. Then you will probably use Load<T>(ValueType) and your application will break once you start scaling/sharding.\n\nIt makes perfect sense to me to have a shard strategy based on Guids... Definitely when I'm using IEntity<Guid>. I see the string key as a technical implementation detail of the database. The sharding strategy is a client side implementation, which, in my opinion, can absolutely benefit from the added layer of abstraction.\n\nAnd it simplifies the Load<T>(ValueType) method by making it 100% consistent with the existing Load<T>(string) method. Nothing has changed to the way the underlying shard sessions are accessed. It's really a very simple modification (from something which definitely was a bug, that is getting an exception when accessing 'Conventions' on a sharded session).\n\nBy now I've seen that there is an ayende/ravendb repo. Should I have been forking of that one, to fit better into the dev cycle? Because I can imagine that only approved changes are committed to the ravendb/ravendb master...\n"""
408,3096234,"b""A) The sharding impl _is_ a techincal implementation detail.\nB) Can you explain what breaks there?\n\nOn Thu, Dec 8, 2011 at 2:13 PM, jochenz <\nreply@reply.github.com\n\n> wrote:\n> \n> Well, think of a very common scenario. Entities with Guid IDs. Then you\n> will probably use Load<T>(ValueType) and your application will break once\n> you start scaling/sharding.\n> \n> It makes perfect sense to me to have a shard strategy based on Guids...\n> Definitely when I'm using IEntity<Guid>. I see the string key as a\n> technical implementation detail of the database. The sharding strategy is a\n> client side implementation, which, in my opinion, can absolutely benefit\n> from the added layer of abstraction.\n> \n> And it simplifies the Load<T>(ValueType) method by making it 100%\n> consistent with the existing Load<T>(string) method. Nothing has changed to\n> the way the underlying shard sessions are accessed. It's really a very\n> simple modification (from something which definitely was a bug, that is\n> getting an exception when accessing 'Conventions' on a sharded session).\n> \n> By now I've seen that there is an ayende/ravendb repo. Should I have been\n> forking of that one, to fit better into the dev cycle? Because I can\n> imagine that only approved changes are committed to the ravendb/ravendb\n> master...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/408#issuecomment-3061653\n"""
408,3098133,"b'B) If you use entities where the datatype for the ID is not a string, the generic \n\n``` C#\nLoad<T>(ValueType id)\n```\n\nmethod will fail, because the method\'s implementation is calling \'Conventions.FindFullDocumentKeyFromNonStringIdentifier\' on the ShardedDocumentSession. \nFor example, you cannot call\n\n``` C#\nshardedSession.Load<Car>(3);       // int instead of Guid for readability\n```\n\nwhich is working perfectly fine on a non-sharded session.\nWe get an exception that we cannot use the property \'Conventions\' because a sharded session can have many different conventions in use. Thus, loading a car with id 3 will fail because the integer 3 on a Car cannot be converted to ""cars/3"" on a sharded session.\n\nThe proposed solution allows you to write your sharding strategy based on the integer Id. Thus, due to sharding, Conventions.FindFullDocumentKeyFromNonStringIdentifier will be called on each of the shards returned by the sharding strategy. Which works perfectly fine (even with different conventions per shard). \n\nA) I agree with you that we would want sharding to be a purely technical detail. But, we have to write a sharding strategy. And that strategy will often involve decisions based on the objects we want to store. So, can these decisions be purely technical? I\'m not sure.\nMoreover, there\'s duplication of the naming conventions. I am able to store an Index object (in this example with int ID) like this:\n\n``` C#\nIndex index = new Index { Id = 7 };\nshardedSession.Store(index);\nshardedSession.SaveChanges();\n```\n\nAnd the API provides me with two calls to load this:\n\n``` C#\nshardedSession.Load(""indices/7""); // will work fine (not tested though!)\nshardedSession.Load<Index>(7); // working on a non-sharded session, but not on a sharded session, but my preferred way to load it, because I don\'t need duplicate logic to convert the int to the string key\n```\n\nSo, when implementing the sharding strategy, I will get a string key and I will have to know that I need to check for ""indices/?"". Of course, this could and should be unit-tested, but there\'s definitely some duplicate naming convention logic there.\n\nAnd it could break if someone starts using different key generation conventions on different shards. Which I don\'t expect anyone to do, but who knows...\n\nThanks for your work on RavenDB! I\'m very curious where this is going to lead to.\n'"
408,3098294,"b'Wrong way to resolve it then, I pushed a fix that handle this in the\nsharding session level, rather than having to complicate the sharding impl\nlife.\n\nOn Sun, Dec 11, 2011 at 6:58 PM, jochenz <\nreply@reply.github.com\n\n> wrote:\n> \n> B) If you use entities where the datatype for the ID is not a string, the\n> generic\n> \n> ``` C#\n> Load<T>(ValueType id)\n> ```\n> \n> method will fail, because the method\'s implementation is calling\n> \'Conventions.FindFullDocumentKeyFromNonStringIdentifier\' on the\n> ShardedDocumentSession.\n> For example, you cannot call\n> \n> ``` C#\n> shardedSession.Load<Car>(3);       // int instead of Guid for readability\n> ```\n> \n> which is working perfectly fine on a non-sharded session.\n> We get an exception that we cannot use the property \'Conventions\' because\n> a sharded session can have many different conventions in use. Thus, loading\n> a car with id 3 will fail because the integer 3 on a Car cannot be\n> converted to ""cars/3"" on a sharded session.\n> \n> The proposed solution allows you to write your sharding strategy based on\n> the integer Id. Thus, due to sharding,\n> Conventions.FindFullDocumentKeyFromNonStringIdentifier will be called on\n> each of the shards returned by the sharding strategy. Which works perfectly\n> fine (even with different conventions per shard).\n> \n> A) I agree with you that we would want sharding to be a purely technical\n> detail. But, we have to write a sharding strategy. And that strategy will\n> often involve decisions based on the objects we want to store. So, can\n> these decisions be purely technical? I\'m not sure.\n> Moreover, there\'s duplication of the naming conventions. I am able to\n> store an Index object (in this example with int ID) like this:\n> \n> ``` C#\n> Index index = new Index { Id = 7 };\n> shardedSession.Store(index);\n> shardedSession.SaveChanges();\n> ```\n> \n> And the API provides me with two calls to load this:\n> \n> ``` C#\n> shardedSession.Load(""indices/7""); // will work fine (not tested though!)\n> shardedSession.Load<Index>(7); // working on a non-sharded session, but\n> not on a sharded session, but my preferred way to load it, because I don\'t\n> need duplicate logic to convert the int to the string key\n> ```\n> \n> So, when implementing the sharding strategy, I will get a string key and I\n> will have to know that I need to check for ""indices/?"". Of course, this\n> could and should be unit-tested, but there\'s definitely some duplicate\n> naming convention logic there.\n> \n> And it could break if someone starts using different key generation\n> conventions on different shards. Which I don\'t expect anyone to do, but who\n> knows...\n> \n> Thanks for your work on RavenDB! I\'m very curious where this is going to\n> lead to.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/408#issuecomment-3098133\n'"
408,3098832,"b""Well, in this case you're stuck with an unnecessary assumption and the sharding strategy implementation is dependent on the conventions used for key generation (something I think a raven db user, using value typed IDs, should not care about).\n\nWould it be an option to subclass ShardingResolutionStrategyData and create a ValueTypedSRSD? The ValueTypedSRSD being used only when Load by value typed id is being called. This would be backwards compatible (SRSD remains the same) and would provide complete transparency to those using Value Types for IDs (no need to implement duplicate naming convention logic).\n\nWhat do you think? Would you consider that a worthwhile addition?\n"""
396,3100909,b'Would it be possible to split the client apart from the database?  Because the lack of updating the JSON.NET library is creating many collisions with other projects that use more recent versions of JSON.NET. If the client is split from the server it would make it easier to keep the client more in sync with the latest version.\n'
396,3102746,"b'JSON.NET is now updated to 4.0.5....\n\nOn Mon, Dec 12, 2011 at 2:50 AM, Nick Berardi <\nreply@reply.github.com\n\n> wrote:\n> \n> Would it be possible to split the client apart from the database?  Because\n> the lack of updating the JSON.NET library is creating many collisions\n> with other projects that use more recent versions of JSON.NET. If the\n> client is split from the server it would make it easier to keep the client\n> more in sync with the latest version.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/396#issuecomment-3100909\n'"
408,3104176,"b""The problem is that you are saying that the value type is meaningful to the\nsharding strategy. I don't see it so.\nIf you care about the way the value type -> string conversion is done, you\nneed to do it with the provided extension points.\nI don't see any reason why there should be TWO ways of doing the\nconversions.\n\nOn Sun, Dec 11, 2011 at 8:43 PM, jochenz <\nreply@reply.github.com\n\n> wrote:\n> \n> Well, in this case you're stuck with an unnecessary assumption and the\n> sharding strategy implementation is dependent on the conventions used for\n> key generation (something I think a raven db user, using value typed IDs,\n> should not care about).\n> \n> Would it be an option to subclass ShardingResolutionStrategyData and\n> create a ValueTypedSRSD? The ValueTypedSRSD being used only when Load by\n> value typed id is being called. This would be backwards compatible (SRSD\n> remains the same) and would provide complete transparency to those using\n> Value Types for IDs (no need to implement duplicate naming convention\n> logic).\n> \n> What do you think? Would you consider that a worthwhile addition?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/408#issuecomment-3098832\n"""
408,3114858,"b""Exactly! That's my whole point. Raven decided on a naming convention, I don't want to be involved with that. And I definitely don't want to duplicate that to make sharding work.\n"""
408,3120282,"b""But that is important for deciding in which shard to put it.\nYou are going to need both of them to work in tandem.\n\nOn Tue, Dec 13, 2011 at 1:18 AM, jochenz <\nreply@reply.github.com\n\n> wrote:\n> \n> Exactly! That's my whole point. Raven decided on a naming convention, I\n> don't want to be involved with that. And I definitely don't want to\n> duplicate that to make sharding work.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/408#issuecomment-3114858\n"""
408,3126531,"b'No, it isn\'t. If you\'re using integers or Guids (or whatever) as IDs, you are not interested in the string key at all. I wouldn\'t even care if Raven saves my \'Car\' with ID 5 as ""fourwheeledobject/5"", as long as Raven is able to distinguish between Cars and ShoppingCarts.\n\nWhat interests me is being able to call\n\n``` C#\nsession.Store(Car);\nsession.Load<Car>(5);\n```\n\nAnd that works perfectly in a non-sharded session, but it didn\'t work in a sharded session. \n\nIn your current fix, it works if all shards have the same naming convention (pretty safe assumption) and if I know how Raven\'s naming conventions work. Because, when I implement the sharding strategy, I suddenly have to deal with string keys. Something which isn\'t present anywhere else in my project.\n\nSo, my suggestion is to return a different type of ShardResolutionStrategyData when people are calling Load(ValueType id). If they do so, they will probably be using ValueTypes as IDs in the whole project anyway and thus never be calling Load(string key). The shard resolution strategy will remain very clean and easy to understand.\n\nI have implemented this in my source tree of raven. The shard resolution strategy in the test is implemented as below. All entities with int IDs are sharded based on the modulus of their ID. Notice that I do not need to know anything about Raven\'s naming conventions.\n\n``` C#\n        IList<string> IShardResolutionStrategy.SelectShardIds(ShardResolutionStrategyData srsd)\n        {\n            if (typeof(IEntity<int>).IsAssignableFrom(srsd.EntityType))\n            {\n                // the entity uses non-string IDs, so I\'m getting ValueTypeBasedShardResolutionStrategyData\n                var data = (ValueTypeBasedShardResolutionStrategyData) srsd;\n                var key = (int) data.ValueTypedKey;\n                return new[] {shardPrefix + ModulusHelper.GetPositiveGroupNumber(key, serverCount)};\n            }\n\n            throw new NotImplementedException();\n        }\n```\n\nYou van have a look at <a href=https://github.com/jochenz/ravendb/blob/e66470d0f8edcf571ff5c338a9f644384b4a077c/Raven.Tests/Shard/When_Using_Entities_With_ValueType_Ids.cs>the test</a> and <a href=""https://github.com/jochenz/ravendb/blob/e66470d0f8edcf571ff5c338a9f644384b4a077c/Raven.Client.Lightweight/Shard/ShardStrategy/ShardResolution/ShardResolutionStrategyData.cs"">the ShardResolutionResolutionData classes</a>. Notice that the original class is now unchanged. I added a subclass for value type based strategies.\n\nLoad(ValueType) calls IShardResolutionStrategy.SelectShardIds and passes a ValueTypeBasedShardResolutionStrategyData as the argument. This is completely backwards compatible (none of the other tests have been changed).\n\nAn even nicer solution (in my opinion) would be to allow IValueTypeBasedShardResolutionStrategies. If you call Load(string) an IShardResolutionStrategy would be used, if you call Load(ValueType) an IValueTypeBasedShardResolutionStrategy would be used. The result is less dirty casting because you get the right type of data for your strategy. And ValueTypeBasedShardResolutionStrategyData wouldn\'t have to derive from ShardResolutionStrategyData anymore and simply have an EntityType and an ID property.\n\nSince most projects use a base entity with a fixed ID type, usually only one of the strategies will need to be implemented. This is not a restriction though, developers could use both Load(string) and Load(ValueType), but as written before, I don\'t expect that to happen.\n\nTo summarize: the shard strategy has to be defined in the application, the naming conventions are defined in the client (although they can be defined by the application). The application might only know about Guid IDs and can perfectly define the shard strategy in terms of object types and those Guid IDs. No need to know anything about Raven\'s string keys. Those are fully abstracted by each store\'s naming conventions, in the client.\n'"
408,3137495,"b'I am following your logic, except that I don\'t agree with it.\nThe problem is that you are introducing a LOT of complexity for everyone,\nfor the sake of not having to do the translation yourself at the sharding\nstrategy (one place).\nThe sharding strategy is considered to be a part of the infrastructure\nlevel, and shouldn\'t have to deal with those sort of things.\n\nReducing complexity is something that I really care much about, and you\nshould note that using non string ids is supported, but it is also a leaky\nabstraction.\nIf you do a query, for example, rather than a load, it doesn\'t work. Nor\ndoes it work over includes, etc.\n\nAt the level of API that the sharding strategy lives, it shouldn\'t have to\ndeal with this, and it seems to be a lot of effort for something that I\nconsider to be of dubious value.\n\nOn Tue, Dec 13, 2011 at 7:49 PM, jochenz <\nreply@reply.github.com\n\n> wrote:\n> \n> No, it isn\'t. If you\'re using integers or Guids (or whatever) as IDs, you\n> are not interested in the string key at all. I wouldn\'t even care if Raven\n> saves my \'Car\' with ID 5 as ""fourwheeledobject/5"", as long as Raven is able\n> to distinguish between Cars and ShoppingCarts.\n> \n> What interests me is being able to call\n> \n> ``` C#\n> session.Store(Car);\n> session.Load<Car>(5);\n> ```\n> \n> And that works perfectly in a non-sharded session, but it didn\'t work in a\n> sharded session.\n> \n> In your current fix, it works if all shards have the same naming\n> convention (pretty safe assumption) and if I know how Raven\'s naming\n> conventions work. Because, when I implement the sharding strategy, I\n> suddenly have to deal with string keys. Something which isn\'t present\n> anywhere else in my project.\n> \n> So, my suggestion is to return a different type of\n> ShardResolutionStrategyData when people are calling Load(ValueType id). If\n> they do so, they will probably be using ValueTypes as IDs in the whole\n> project anyway and thus never be calling Load(string key). The shard\n> resolution strategy will remain very clean and easy to understand.\n> \n> I have implemented this in my source tree of raven. The shard resolution\n> strategy in the test is implemented as below. All entities with int IDs are\n> sharded based on the modulus of their ID. Notice that I do not need to know\n> anything about Raven\'s naming conventions.\n> \n> ``` C#\n>        IList<string>\n> IShardResolutionStrategy.SelectShardIds(ShardResolutionStrategyData srsd)\n>        {\n>            if (typeof(IEntity<int>).IsAssignableFrom(srsd.EntityType))\n>            {\n>                // the entity uses non-string IDs, so I\'m getting\n> ValueTypeBasedShardResolutionStrategyData\n>                var data = (ValueTypeBasedShardResolutionStrategyData) srsd;\n>                var key = (int) data.ValueTypedKey;\n>                return new[] {shardPrefix +\n> ModulusHelper.GetPositiveGroupNumber(key, serverCount)};\n>            }\n> \n>            throw new NotImplementedException();\n>        }\n> ```\n> \n> You van have a look at <a href=\n> https://github.com/jochenz/ravendb/blob/e66470d0f8edcf571ff5c338a9f644384b4a077c/Raven.Tests/Shard/When_Using_Entities_With_ValueType_Ids.cs>the\n> test</a> and <a href=""\n> https://github.com/jochenz/ravendb/blob/e66470d0f8edcf571ff5c338a9f644384b4a077c/Raven.Client.Lightweight/Shard/ShardStrategy/ShardResolution/ShardResolutionStrategyData.cs"">the\n> ShardResolutionResolutionData classes</a>. Notice that the original class\n> is now unchanged. I added a subclass for value type based strategies.\n> \n> Load(ValueType) calls IShardResolutionStrategy.SelectShardIds and passes a\n> ValueTypeBasedShardResolutionStrategyData as the argument. This is\n> completely backwards compatible (none of the other tests have been changed).\n> \n> An even nicer solution (in my opinion) would be to allow\n> IValueTypeBasedShardResolutionStrategies. If you call Load(string) an\n> IShardResolutionStrategy would be used, if you call Load(ValueType) an\n> IValueTypeBasedShardResolutionStrategy would be used. The result is less\n> dirty casting because you get the right type of data for your strategy. And\n> the removal of the dummy \'Key\' property on\n> ValueTypeBasedShardResolutionStrategyData.\n> \n> Since most projects use a base entity with a fixed ID type, usually only\n> one of the strategies will need to be implemented. This is not a\n> restriction though, developers could use both Load(string) and\n> Load(ValueType), but as written before, I don\'t expect that to happen.\n> \n> To summarize: the shard resolution strategy lives in the client, the\n> application. The application might only know about Guid IDs and can\n> perfectly define the shard strategy in terms of object types and those Guid\n> IDs. No need to know anything about Raven\'s string keys. Those are fully\n> abstracted by each store\'s naming conventions.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/408#issuecomment-3126531\n'"
408,3148451,"b""Yep. Funny. Completely different opinions indeed. I really feel like it's reducing complexity instead of adding.\n"""
410,3158120,"b'Hi,\nIt doesn\'t seem that I have a contributor license agreement from you.\nCould you sign it?\nravendb.net/faq/contributing\n\nOn Thu, Dec 15, 2011 at 2:52 AM, Daniel Lang <\nreply@reply.github.com\n\n> wrote:\n> \n> I wanted to create a map/reduce index ""Events_ByDate_Count"" and tried to\n> write the map part like this:\n> \n> Map = events => from @event in events select new { @event.Date.Year,\n> @event.Date.Month, Count = 1 };\n> \n> It fails creating the index.\n> However, this guy works:\n> \n> Map = events => from entry events select new { entry.Date.Year,\n> entry.Date.Month, Count = 1 };\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/410\n'"
411,3194160,"b'I cannot repro this. Can you specify a repro steps?\n(like which type of index are you using? do you see this behavior with\nthe sample data too?)\n\nOn Sat, Dec 17, 2011 at 8:28 PM, casmendes <\nreply@reply.github.com\n\n> wrote:\n> \n> Paging is not working in the Studio in the index querying screen. Yet,\n> after changing the ""Change Displayed Document Size"" it works.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/411\n'"
411,3195069,"b""It works fine with the sample data. I've set up a cloud server to do some tests with 10 M documents. There's something wrong since yesterday (about 15h ago) I could see 2 types of Collections in the RavenStudio with 2.5 M each but now there are only 55000 documents for each collection type even though the database still has 10M docs. Please close this one. I'll turn logging on to find out what's happening.  \n"""
411,3211314,"b'When attempting to implement paging using the documentation at http://ravendb.net/documentation/docs-http-indexes-querying I am unable to affect the size of the result set. The ""start"" and ""pageSize"" parameters do not cause the query to throw an exception, yet when varying the values of both parameters the result set continues to return with the same record count. \n\nI am working in the latest build 573.\n'"
411,3232139,"b""@mdelano please open a new issue, as this is not related to the current issue. Regards your issue, please provide us more details, like what URL are you using? paging on what index?\n\nCurrent issue is closed, as the problem was that there wasn't any UI indicator that the paging is works, but paging indeed worked.\n"""
409,3232184,b'done\n'
412,3247243,"b'I see that they have comments annotations, should update an old binaries probably.\n'"
410,3248318,b'Fixed\n'
257,3268149,b'Streaming was implemented here https://github.com/ravendb/ravendb/commit/8b0b3409e9aa08dc74a5226770f454d44b630a02\n'
413,3270222,"b""What steps are you doing to reproduce this?\nNote that import will load into the _current_ database, you need to create\nthe database before you import to it.\n\nOn Sat, Dec 24, 2011 at 7:53 AM, phillip-haydon <\nreply@reply.github.com\n\n> wrote:\n> \n> Using the Management Studio, if I export a database (lets call it\n> DBTesting), then take the dump file to another machine that doesn't have\n> DBTesting on it.\n> \n> When I import the DBTesting dump in, it creates a new DB called DBTesting,\n> but imports all the data to Default.\n> \n> I would have expected the functionality to create DBTesting and import the\n> data to DBTesting. Or tell me that the DB I'm importing doesn't match the\n> name of the DB I'm importing to.\n> \n> Small usability issue in my opinion.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/413\n"""
257,3270287,"b'That is part of the work, certainly, another part is to support ranges, so\nwe can do resumable downloads.\n\nOn Sat, Dec 24, 2011 at 6:03 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> Streaming was implemented here\n> https://github.com/ravendb/ravendb/commit/8b0b3409e9aa08dc74a5226770f454d44b630a02\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/257#issuecomment-3268149\n'"
413,3270373,"b""It's importing the data to the _current_ database. The dump file don't have any information in regards to the database name that its was exported from, and hence it cannot create a database using that name.\n"""
413,3272685,"b""Ahh, I understand how.\n\nI tested it again and what I did the first time was imported to the wrong remote desktop so I already had the database created. I thought that it actually created the database.\n\nHowever, I think the text on the task screen should say that it imports to the current selected database.\n\nI read 'import database' that it was creating the database based on the dump file and if the database existed it would override any indexes and such.\n\nJust miss-understanding. \n"""
413,3273076,"b""Yes, we'll make it clear in the text.\n\nOn Mon, Dec 26, 2011 at 6:49 AM, phillip-haydon <\nreply@reply.github.com\n\n> wrote:\n> \n> Ahh, I understand how.\n> \n> I tested it again and what I did the first time was imported to the wrong\n> remote desktop so I already had the database created. I thought that it\n> actually created the database.\n> \n> However, I think the text on the task screen should say that it imports to\n> the current selected database.\n> \n> I read 'import database' that it was creating the database based on the\n> dump file and if the database existed it would override any indexes and\n> such.\n> \n> Just miss-understanding.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/413#issuecomment-3272685\n"""
414,3298672,b'done\n'
421,3324005,"b'Shouldn\'t this be: There are no documents in this database yet. ?\n\nOn Sat, Dec 31, 2011 at 12:25 AM, Nick Berardi <\nreply@reply.github.com\n\n> wrote:\n> \n> The default screen in the silverlight app when you connect to\n> http://localhost:8080 says.\n> \n> ""There is no any documents in this database yet.""\n> \n> This should read.\n> \n> ""There is not any documents in this database yet.""\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/421\n'"
422,3324006,"b'Nick,\nDid you sent us a CLA?\nravendb.net/faq/contributing\n\nOn Sat, Dec 31, 2011 at 12:32 AM, Nick Berardi <\nreply@reply.github.com\n\n> wrote:\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/nberardi/ravendb patch-1\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/422\n> \n> -- Commit Summary --\n> - Fixed grammar in Raven.Studio for issue #421\n> \n> -- File Changes --\n> \n> M Raven.Studio/Views/Home.xaml (2)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/422.patch\n>  https://github.com/ravendb/ravendb/pull/422.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/422\n'"
421,3324489,"b'Yeah I corrected my own english on the actual change I requested a\npull for. :) I think I also updated the ticket too.\n\n## \n\nNick Berardi\n(484) 302-0125\nSent on the go from my phone.\n\nOn Jan 1, 2012, at 2:48 AM, Ayende Rahien\nreply@reply.github.com\nwrote:\n\n> Shouldn\'t this be: There are no documents in this database yet. ?\n> \n> On Sat, Dec 31, 2011 at 12:25 AM, Nick Berardi <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > The default screen in the silverlight app when you connect to\n> > http://localhost:8080 says.\n> > \n> > ""There is no any documents in this database yet.""\n> > \n> > This should read.\n> > \n> > ""There is not any documents in this database yet.""\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/421\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/421#issuecomment-3324005\n'"
421,3324496,"b'Okay, than what is left is the CLA\n\nOn Sun, Jan 1, 2012 at 3:22 PM, Nick Berardi <\nreply@reply.github.com\n\n> wrote:\n> \n> Yeah I corrected my own english on the actual change I requested a\n> pull for. :) I think I also updated the ticket too.\n> \n> ## \n> \n> Nick Berardi\n> (484) 302-0125\n> Sent on the go from my phone.\n> \n> On Jan 1, 2012, at 2:48 AM, Ayende Rahien\n> reply@reply.github.com\n> wrote:\n> \n> > Shouldn\'t this be: There are no documents in this database yet. ?\n> > \n> > On Sat, Dec 31, 2011 at 12:25 AM, Nick Berardi <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > The default screen in the silverlight app when you connect to\n> > > http://localhost:8080 says.\n> > > \n> > > ""There is no any documents in this database yet.""\n> > > \n> > > This should read.\n> > > \n> > > ""There is not any documents in this database yet.""\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/421\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324005\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/421#issuecomment-3324489\n'"
421,3324530,"b'I will have it over to you today.\n\n## \n\nNick Berardi\n(484) 302-0125\nSent on the go from my phone.\n\nOn Jan 1, 2012, at 8:26 AM, Ayende Rahien\nreply@reply.github.com\nwrote:\n\n> Okay, than what is left is the CLA\n> \n> On Sun, Jan 1, 2012 at 3:22 PM, Nick Berardi <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Yeah I corrected my own english on the actual change I requested a\n> > pull for. :) I think I also updated the ticket too.\n> > \n> > ## \n> > \n> > Nick Berardi\n> > (484) 302-0125\n> > Sent on the go from my phone.\n> > \n> > On Jan 1, 2012, at 2:48 AM, Ayende Rahien\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > Shouldn\'t this be: There are no documents in this database yet. ?\n> > > \n> > > On Sat, Dec 31, 2011 at 12:25 AM, Nick Berardi <\n> > > reply@reply.github.com\n> > > \n> > > > wrote:\n> > > > \n> > > > The default screen in the silverlight app when you connect to\n> > > > http://localhost:8080 says.\n> > > > \n> > > > ""There is no any documents in this database yet.""\n> > > > \n> > > > This should read.\n> > > > \n> > > > ""There is not any documents in this database yet.""\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/ravendb/ravendb/issues/421\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324005\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324489\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/421#issuecomment-3324496\n'"
421,3324533,"b'Thanks\n\nOn Sun, Jan 1, 2012 at 3:46 PM, Nick Berardi <\nreply@reply.github.com\n\n> wrote:\n> \n> I will have it over to you today.\n> \n> ## \n> \n> Nick Berardi\n> (484) 302-0125\n> Sent on the go from my phone.\n> \n> On Jan 1, 2012, at 8:26 AM, Ayende Rahien\n> reply@reply.github.com\n> wrote:\n> \n> > Okay, than what is left is the CLA\n> > \n> > On Sun, Jan 1, 2012 at 3:22 PM, Nick Berardi <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > Yeah I corrected my own english on the actual change I requested a\n> > > pull for. :) I think I also updated the ticket too.\n> > > \n> > > ## \n> > > \n> > > Nick Berardi\n> > > (484) 302-0125\n> > > Sent on the go from my phone.\n> > > \n> > > On Jan 1, 2012, at 2:48 AM, Ayende Rahien\n> > > reply@reply.github.com\n> > > wrote:\n> > > \n> > > > Shouldn\'t this be: There are no documents in this database yet. ?\n> > > > \n> > > > On Sat, Dec 31, 2011 at 12:25 AM, Nick Berardi <\n> > > > reply@reply.github.com\n> > > > \n> > > > > wrote:\n> > > > > \n> > > > > The default screen in the silverlight app when you connect to\n> > > > > http://localhost:8080 says.\n> > > > > \n> > > > > ""There is no any documents in this database yet.""\n> > > > > \n> > > > > This should read.\n> > > > > \n> > > > > ""There is not any documents in this database yet.""\n> > > > > \n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/ravendb/ravendb/issues/421\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324005\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324489\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324496\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/421#issuecomment-3324530\n'"
425,3326212,"b'Search() is not accepting Lucene syntax, but rather a text to search. Use the .Or, And operators of LuceneQuery between Search() operators\n\nSince the default Lucene operator is OR, you should get it to work with .Search(""field"", ""this that"")\n'"
425,3326224,"b'Right. So I think it\'s safe to say this method is not safe to use with end\nuser supplied search terms.\n\nOn Sun, Jan 1, 2012 at 5:09 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> Search() is not accepting Lucene syntax, but rather a text to search. Use\n> the .Or, And operators of LuceneQuery between Search() operators\n> \n> Since the default Lucene operator is OR, you should get it to work with\n> .Search(""field"", ""this that"")\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/425#issuecomment-3326212\n'"
424,3328015,"b'_Should_ it work? Isn\'t this something for the analyzer to deal with?\n\nOn Sun, Jan 1, 2012 at 10:18 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> .Search(""slug"", ""/docs/consumer/querying"") will return no results, whereas\n> .Search(""slug"", "" docs consumer querying"") work great\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/424\n'"
425,3328181,"b'Fixed\n\nOn Mon, Jan 2, 2012 at 12:04 AM, Ronnie Overby <\nreply@reply.github.com\n\n> wrote:\n> \n> If I pass ""this OR that"" as the searchTerms to the Search() method, I get:\n> \n> ""Lucene.Net.QueryParsers.ParseException: Cannot parse \' Content:this\n> Content:OR Content:that ....""\n> \n> Having not read any official documentation, I\'m not sure about when the\n> Search() method should be used, but if it\'s intended  to accept end user\n> input, this could be an issue. Repro by pass an uppercase OR or || between\n> 2 other search terms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/425\n'"
427,3329167,"b'Do we _have_ an F# sample?\n\nOn Mon, Jan 2, 2012 at 2:00 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> Enhance to demonstrate using an index\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/427\n'"
427,3329217,"b'Actually we do :) Raven.Sample.FSharp\n\nOn Mon, Jan 2, 2012 at 2:09 PM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> Do we _have_ an F# sample?\n> \n> On Mon, Jan 2, 2012 at 2:00 PM, Itamar Syn-Hershko <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Enhance to demonstrate using an index\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/427\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/427#issuecomment-3329167\n'"
421,3344588,"b'Hi Ayende,\n\nHere is a copy of my contributor agreement.\n\n## \n\nNick Berardi\n(484) 302-0125\n\nhttp://managedfusion.com (company) | http://coderjournal.com (blog) |\n@nberardi http://twitter.com/nberardi (twitter)\n\nOn Sun, Jan 1, 2012 at 8:48 AM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> Thanks\n> \n> On Sun, Jan 1, 2012 at 3:46 PM, Nick Berardi <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > I will have it over to you today.\n> > \n> > ## \n> > \n> > Nick Berardi\n> > (484) 302-0125\n> > Sent on the go from my phone.\n> > \n> > On Jan 1, 2012, at 8:26 AM, Ayende Rahien\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > Okay, than what is left is the CLA\n> > > \n> > > On Sun, Jan 1, 2012 at 3:22 PM, Nick Berardi <\n> > > reply@reply.github.com\n> > > \n> > > > wrote:\n> > > > \n> > > > Yeah I corrected my own english on the actual change I requested a\n> > > > pull for. :) I think I also updated the ticket too.\n> > > > \n> > > > ## \n> > > > \n> > > > Nick Berardi\n> > > > (484) 302-0125\n> > > > Sent on the go from my phone.\n> > > > \n> > > > On Jan 1, 2012, at 2:48 AM, Ayende Rahien\n> > > > reply@reply.github.com\n> > > > wrote:\n> > > > \n> > > > > Shouldn\'t this be: There are no documents in this database yet. ?\n> > > > > \n> > > > > On Sat, Dec 31, 2011 at 12:25 AM, Nick Berardi <\n> > > > > reply@reply.github.com\n> > > > > \n> > > > > > wrote:\n> > > > > > \n> > > > > > The default screen in the silverlight app when you connect to\n> > > > > > http://localhost:8080 says.\n> > > > > > \n> > > > > > ""There is no any documents in this database yet.""\n> > > > > > \n> > > > > > This should read.\n> > > > > > \n> > > > > > ""There is not any documents in this database yet.""\n> > > > > > \n> > > > > > ---\n> > > > > > \n> > > > > > Reply to this email directly or view it on GitHub:\n> > > > > > https://github.com/ravendb/ravendb/issues/421\n> > > > > \n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324005\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324489\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324496\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/421#issuecomment-3324530\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/421#issuecomment-3324533\n'"
421,3344621,b'I sent this to your email address provided on http://hibernatingrhinos.com/contact\n'
422,3349557,b'Pulled\n'
428,3353684,"b'Hm,\nCan you provide a failing test, this seems to pass.\n\n[Fact]\npublic void Can_NOT_cache_document_load()\n{\nusing (GetNewServer())\n using (var store = new DocumentStore { Url = ""http://localhost:8079""\n}.Initialize())\n{\n store.Conventions.ShouldCacheRequest = s => false;\n\nusing (var s = store.OpenSession())\n {\ns.Store(new User { Name = ""Ayende"" });\ns.SaveChanges();\n }\n\nusing (var s = store.OpenSession())\n{\n s.Load<User>(""users/1"");\ns.SaveChanges();\n}\n\nusing (var s = store.OpenSession())\n{\ns.Load<User>(""users/1"");\n Assert.Equal(0, store.JsonRequestFactory.NumberOfCachedRequests);\n}\n}\n}\n\nOn Wed, Jan 4, 2012 at 4:48 AM, Daniel Lang <\nreply@reply.github.com\n\n> wrote:\n> \n> It makes absolutely no difference if I use the following convention\n> (neither on loads, nor on queries):\n> \n> Conventions =\n> {\n>    ShouldCacheRequest = (url) => false\n> }\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428\n'"
431,3380288,b'Are you really sure this naming is better? To me that sounds like a single server can only host one database (for one application) but with multiple tenants.\n'
431,3383702,"b""I agree, we don't want to use tenants, we want to use database.\nIf anything, we need to go the other way\n"""
429,3383775,b'Fixed\n'
424,3383782,"b""I don't think that this is something that Search should do. You need to feed it values that are space separated, not / separated.\n"""
428,3383784,b'Closed because there is a passing test \n'
428,3383792,"b""Wait a moment... I'm just preparing a failing one... ;)\n\n-----Urspr\xc3\xbcngliche Nachricht-----\nVon: Ayende Rahien [mailto:reply@reply.github.com] \nGesendet: Freitag, 6. Januar 2012 13:07\nAn: Daniel Lang\nBetreff: Re: [ravendb] ShouldCacheRequest doesn't work (#428)\n\nClosed because there is a passing test\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ravendb/ravendb/issues/428#issuecomment-3383784\n"""
428,3383805,"b""It doesn't cost to open/close those things :-)\n\nOn Fri, Jan 6, 2012 at 7:07 AM, Daniel Lang <\nreply@reply.github.com\n\n> wrote:\n> \n> Wait a moment... I'm just preparing a failing one... ;)\n> \n> -----Ursprngliche Nachricht-----\n> Von: Ayende Rahien [mailto:reply@reply.github.com]\n> Gesendet: Freitag, 6. Januar 2012 13:07\n> An: Daniel Lang\n> Betreff: Re: [ravendb] ShouldCacheRequest doesn't work (#428)\n> \n> Closed because there is a passing test\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428#issuecomment-3383784\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428#issuecomment-3383792\n"""
420,3383911,b'Fixed\n'
423,3383954,b'Fixed\n'
417,3383988,"b'Nice work, now need to actually handle highlighting the text\n'"
428,3384068,"b'Ok, now I have a failing test, but I don\'t think it\'s of any value. After I took a look at the implementation I know that I\'ve misunderstood the purpose of the ShouldCacheRequest convention. This test fails, but it actually should, right?\n\n```\n    [Fact]\n    public void Can_NOT_cache_documents_load_in_same_session()\n    {\n        using (GetNewServer())\n        using (var store = new DocumentStore { Url = ""http://localhost.com:8079"" }.Initialize())\n        {\n            store.Conventions.ShouldCacheRequest = s => false;\n\n            using (var outerSession = store.OpenSession())\n            {\n                outerSession.Store(new User { Name = ""Ayende"" });\n                outerSession.SaveChanges();\n\n                using (var innerSession = store.OpenSession())\n                {\n                    var user = innerSession.Load<User>(""users/1"");\n                    user.Name = ""Oren"";\n\n                    innerSession.SaveChanges();\n                }\n\n                var userThatsNameShouldBeOren = outerSession.Load<User>(""users/1"");\n                Assert.Equal(""Oren"", userThatsNameShouldBeOren.Name); // fails\n            }\n        }\n    }\n```\n\n-----Urspr\xc3\xbcngliche Nachricht-----\nVon: Ayende Rahien [mailto:reply@reply.github.com] \nGesendet: Freitag, 6. Januar 2012 13:09\nAn: Daniel Lang\nBetreff: Re: [ravendb] ShouldCacheRequest doesn\'t work (#428)\n\nIt doesn\'t cost to open/close those things :-)\n\nOn Fri, Jan 6, 2012 at 7:07 AM, Daniel Lang < reply@reply.github.com\n\n> wrote:\n> \n> Wait a moment... I\'m just preparing a failing one... ;)\n> \n> -----Ursprngliche Nachricht-----\n> Von: Ayende Rahien [mailto:reply@reply.github.com]\n> Gesendet: Freitag, 6. Januar 2012 13:07\n> An: Daniel Lang\n> Betreff: Re: [ravendb] ShouldCacheRequest doesn\'t work (#428)\n> \n> Closed because there is a passing test\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428#issuecomment-3383784\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428#issuecomment-3383792\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ravendb/ravendb/issues/428#issuecomment-3383805\n'"
428,3384146,"b'Yes, this is exactly the right way that this should behave.\n\nOn Fri, Jan 6, 2012 at 7:38 AM, Daniel Lang <\nreply@reply.github.com\n\n> wrote:\n> \n> Ok, now I have a failing test, but I don\'t think it\'s of any value. After\n> I took a look at the implementation I know that I\'ve misunderstood the\n> purpose of the ShouldCacheRequest convention. This test fails, but it\n> actually should, right?\n> \n> ```\n>    [Fact]\n>    public void Can_NOT_cache_documents_load_in_same_session()\n>    {\n>        using (GetNewServer())\n>        using (var store = new DocumentStore { Url = ""\n> ```\n> \n> http://localhost.com:8079"" }.Initialize())\n>             {\n>                store.Conventions.ShouldCacheRequest = s => false;\n> \n> ```\n>             using (var outerSession = store.OpenSession())\n>            {\n>                outerSession.Store(new User { Name = ""Ayende"" });\n>                outerSession.SaveChanges();\n> \n>                using (var innerSession = store.OpenSession())\n>                {\n>                    var user = innerSession.Load<User>(""users/1"");\n>                    user.Name = ""Oren"";\n> \n>                    innerSession.SaveChanges();\n>                }\n> \n>                var userThatsNameShouldBeOren =\n> ```\n> \n> outerSession.Load<User>(""users/1"");\n>                    Assert.Equal(""Oren"", userThatsNameShouldBeOren.Name);\n> // fails\n>                 }\n>            }\n>        }\n> \n> -----Ursprngliche Nachricht-----\n> Von: Ayende Rahien [mailto:reply@reply.github.com]\n> Gesendet: Freitag, 6. Januar 2012 13:09\n> An: Daniel Lang\n> Betreff: Re: [ravendb] ShouldCacheRequest doesn\'t work (#428)\n> \n> It doesn\'t cost to open/close those things :-)\n> \n> On Fri, Jan 6, 2012 at 7:07 AM, Daniel Lang < reply@reply.github.com\n> \n> > wrote:\n> > \n> > Wait a moment... I\'m just preparing a failing one... ;)\n> > \n> > -----Ursprngliche Nachricht-----\n> > Von: Ayende Rahien [mailto:reply@reply.github.com]\n> > Gesendet: Freitag, 6. Januar 2012 13:07\n> > An: Daniel Lang\n> > Betreff: Re: [ravendb] ShouldCacheRequest doesn\'t work (#428)\n> > \n> > Closed because there is a passing test\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/428#issuecomment-3383784\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/428#issuecomment-3383792\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428#issuecomment-3383805\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/428#issuecomment-3384068\n'"
416,3384351,b'Pulled\n'
395,3384356,b'Done\n'
397,3384359,b'Not enough context to figure out what is wrong \n'
417,3386272,b'You can see sample in the SyntaxEditor Quick Starts of how this can be done\n'
415,3394112,"b'We need to remove this option, it is not supported\n'"
415,3394116,b'Fixed\n'
402,3394123,"b""No reply provided, closed with can't reproduce\n"""
275,3394129,"b""We don't have any pressing need for this.\n"""
272,3394131,"b'Not supporting this for now, too complex to track field renames in many cases\n'"
264,3394133,"b'Not relevant anymore, we have support from external users and will probably be part of the Enterprise edition, anyway\n'"
266,3394137,"b'Done a lot of that, the rest will be handled on an as needed basis.\n'"
269,3394139,b'Not relevant.\n'
398,3394145,b'No need to do this any longer\n'
178,3394149,"b'Not relevant any longer, should be part of the Enteprise edition\n'"
430,3401191,b'Done by daniel\n'
418,3401567,b'From what i was looking silverlight does not support Middle click.\nThe mouse wheel event only supports scrolling\n'
418,3401797,"b'Then handle Ctrl+Click that way\n\nOn Sun, Jan 8, 2012 at 6:23 AM, DanielDar <\nreply@reply.github.com\n\n> wrote:\n> \n> From what i was looking silverlight does not support Middle click.\n> The mouse wheel event only supports scrolling\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/418#issuecomment-3401567\n'"
405,3401872,b'show in index edit a button to send to indexes/<indexName>?debug=map\n'
406,3401881,b'show page with drop down of all the parameters in the index\nfor each display its terms (with paging)\n\nexample:\nhttp://localhost:8080/terms/artists?field=Name\nhttp://localhost:8080/terms/artists?field=Id\n'
434,3461998,"b'Ok the ""problem"" was that ""Capacity_Range"" was not set. I think this is a valid feature for the api to set for you if it\'s missing.\n'"
436,3479955,"b'I am pretty sure that this is how we behave with existing document, by the\nway.\nAgreed.\n\nOn Thu, Jan 12, 2012 at 8:48 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> Currently it appears one can create a new document and give it an ID of a\n> document which already exists, and by that overriding it\n> \n> We should do this with Optimistic concurrency enabled so that we get a\n> conflict and abort, notifying the user about it\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/436\n'"
436,3497830,b'Link to the docs would be great\n'
436,3497872,"b""Doing some search, Optimistic Concurrency done by the session.\nWe do not use the session in the studio, but using the AsyncDatabaseCommands.PutAsync.\nPutAsync uses an ETag, shouldn't the ETag be enough?\n"""
437,3497878,b'We will update the package to add the MvcIntegration.\n'
435,3497948,b'fixed\n'
418,3498010,b'done\n'
405,3498011,b'done\n'
436,3499159,"b""Yes, but you need to provide one, not null for that.\nGuid.Empty should work for new docs.\n\nOn Sun, Jan 15, 2012 at 4:26 AM, Fitzchak Yitzchaki <\nreply@reply.github.com\n\n> wrote:\n> \n> Doing some search, Optimistic Concurrency done by the session.\n> We do not use the session in the studio, but using the\n> AsyncDatabaseCommands.PutAsync.\n> PutAsync uses an ETag, shouldn't the ETag be enough?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/436#issuecomment-3497872\n"""
437,3499331,b'done\n'
399,3500202,"b""I've come to the conclustion that the current API with out paramaters is much more clear.\n"""
436,3500606,"b""Cannot repro this\n\nOn Sun, Jan 15, 2012 at 4:21 PM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> Yes, but you need to provide one, not null for that.\n> Guid.Empty should work for new docs.\n> \n> On Sun, Jan 15, 2012 at 4:26 AM, Fitzchak Yitzchaki <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Doing some search, Optimistic Concurrency done by the session.\n> > We do not use the session in the studio, but using the\n> > AsyncDatabaseCommands.PutAsync.\n> > PutAsync uses an ETag, shouldn't the ETag be enough?\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/436#issuecomment-3497872\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/436#issuecomment-3499159\n"""
437,3501286,b'Thank you! When will this appear on NuGet?\n'
437,3501689,"b'On the next build, as an unstable package\nOn Jan 15, 2012 9:50 PM, ""Arnold Zokas"" <\nreply@reply.github.com>\nwrote:\n\n> Thank you! When will this appear on NuGet?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/437#issuecomment-3501286\n'"
437,3507158,"b'We added that\n\nOn Sat, Jan 14, 2012 at 9:17 PM, Arnold Zokas <\nreply@reply.github.com\n\n> wrote:\n> \n> I am using RavenDB-Embedded NuGet package v1.0.573 as part of my ASP.NETMVC application.\n> I would like to be able to use RavenProfiler but it is not part of that\n> NuGet package.\n> \n> Is there a NuGet package which already contains this?\n> If not, could you publish one?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/437\n'"
436,3512110,b'Fixed\n'
440,3538150,"b""That's a nice feature, but I can't think of a scenario when I'd want to do that. I'm curious - in which case did you need that?\n"""
440,3542203,"b""I have a scenario where I want to delete a couple of documents that are not\nin the session but I happen to know the Id:s of them. I use Batch now to\ndelete them but it will result in an extra round trip to the database. If I\nwould be able to defer them to when SaveChanges are called it would be more\nefficient.\n\n2012/1/18 Daniel Lang <\nreply@reply.github.com\n\n> That's a nice feature, but I can't think of a scenario when I'd want to do\n> that. I'm curious - in which case did you need that?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/440#issuecomment-3538150\n"""
417,3545470,b'done\n'
442,3558032,"b""I can't reproduce this, we already filter those out (timer requests are\nignored)\n\nOn Wed, Jan 18, 2012 at 3:36 AM, Fitzchak Yitzchaki <\nreply@reply.github.com\n\n> wrote:\n> \n> Auto fetching of logs distract the user from getting to see what the logs\n> are, because the list box jump each 5 seconds to another logs.\n> Maybe we want to have the option to disable auto fetching logs to the\n> screen, but continue to get logs on the background, and give the user the\n> option to append the added background logs to the screen.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/442\n"""
442,3558987,"b""Look on the logs tab in the studio of a live db, like the companies' one.\nIt's hard to follow on the items, since they get updated each few seconds.\n\nOn Thu, Jan 19, 2012 at 7:02 AM, ravendb <\nreply@reply.github.com\n\n> wrote:\n> \n> I can't reproduce this, we already filter those out (timer requests are\n> ignored)\n> \n> On Wed, Jan 18, 2012 at 3:36 AM, Fitzchak Yitzchaki <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Auto fetching of logs distract the user from getting to see what the logs\n> > are, because the list box jump each 5 seconds to another logs.\n> > Maybe we want to have the option to disable auto fetching logs to the\n> > screen, but continue to get logs on the background, and give the user the\n> > option to append the added background logs to the screen.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/442\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/442#issuecomment-3558032\n"""
442,3559044,"b""Okay, I see. What we actually need, then, is to have a Refresh button\nthere, and disable auto fetching entirely there.\n\nOn Thu, Jan 19, 2012 at 9:24 AM, Fitzchak Yitzchaki <\nreply@reply.github.com\n\n> wrote:\n> \n> Look on the logs tab in the studio of a live db, like the companies' one.\n> It's hard to follow on the items, since they get updated each few seconds.\n> \n> On Thu, Jan 19, 2012 at 7:02 AM, ravendb <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > I can't reproduce this, we already filter those out (timer requests are\n> > ignored)\n> > \n> > On Wed, Jan 18, 2012 at 3:36 AM, Fitzchak Yitzchaki <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > Auto fetching of logs distract the user from getting to see what the\n> > > logs\n> > > are, because the list box jump each 5 seconds to another logs.\n> > > Maybe we want to have the option to disable auto fetching logs to the\n> > > screen, but continue to get logs on the background, and give the user\n> > > the\n> > > option to append the added background logs to the screen.\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/442\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/442#issuecomment-3558032\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/442#issuecomment-3558987\n"""
440,3559175,"b'Please send us a signed copy of the CLA:\nhttp://ravendb.net/faq/contributing\n\nOn Wed, Jan 18, 2012 at 12:03 AM, Johannes Gustafsson <\nreply@reply.github.com\n\n> wrote:\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/johannesg/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/440\n> \n> -- Commit Summary --\n> - Added ability to defer database commands to be called on SaveChanges()\n> - Added documentation\n> \n> -- File Changes --\n> \n> M Raven.Client.Lightweight/Document/Async/AsyncDocumentSession.cs (4)\n> M Raven.Client.Lightweight/Document/DocumentSession.cs (9)\n> M Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cs\n> (23)\n> M Raven.Client.Lightweight/IAdvancedDocumentSessionOperations.cs (10)\n> M Raven.Client.Lightweight/Shard/ShardedDocumentSession.cs (10)\n> M Raven.Tests/Document/AsyncDocumentStoreServerTests.cs (55)\n> M Raven.Tests/Document/DocumentStoreServerTests.cs (51)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/440.patch\n>  https://github.com/ravendb/ravendb/pull/440.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/440\n'"
431,3576484,"b'Oren, that was the intention of this change.\n\nThe Studio shows ""Databases"" while this is actually tenants we are displaying. Hence the proposed change.\n'"
394,3579453,b'Any followup on this? How do we use SortByDistance?\n'
431,3582503,"b'No, we don\'t want that.\nWe talk about multi tenant stuff, but the user thinks in databases, not in\ntenants.\nWe should use DB, not tenant, because that is what the feature _is_.\n\nOn Thu, Jan 19, 2012 at 6:35 PM, Itamar Syn-Hershko <\nreply@reply.github.com\n\n> wrote:\n> \n> Oren, that was the intention of this change.\n> \n> The Studio shows ""Databases"" while this is actually tenants we are\n> displaying. Hence the proposed change.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/431#issuecomment-3576484\n'"
444,3596959,"b'We will have a look, in the meantime this should work:\n\nvar viewModel = (from entity in _documentSession.Query<Entity>().ToList())\n                select new EntityViewModel\n                        {\n                            Id = entity.Id,\n                            CategoryTitle = entity.Category.Title\n                        };\n'"
444,3597149,"b'On the latest build, this test passes.\n\nOn Sat, Jan 21, 2012 at 10:11 AM, Arnold Zokas <\nreply@reply.github.com\n\n> wrote:\n> \n> Given domain model...\n> \n> ``` c#\n> public class Entity\n> {\n>    public int Id { get; set; }\n>    public Category Category { get; set; }\n> }\n> \n> public class Category\n> {\n>    public string Title { get; set; }\n> }\n> ```\n> \n> ... I want to project results of a select query to this view model:\n> \n> ``` c#\n> public class EntityViewModel\n> {\n>    public int Id { get; set; }\n>    public string CategoryTitle { get; set; }\n> }\n> ```\n> \n> I have tried the following query:\n> \n> ``` c#\n> var viewModel = (from entity in _documentSession.Query<Entity>()\n>                select new EntityViewModel\n>                        {\n>                            Id = entity.Id,\n>                            CategoryTitle = entity.Category.Title\n>                        }.ToList();\n> ```\n> \n> The result of this is only partially correct: the Id is set, the\n> CategoryTitle is not.\n> \n> Is this behaviour by design? Is there, perhaps, an API call I should use\n> for this?\n> \n> I posted a question on StackOverflow (\n> http://stackoverflow.com/questions/8950182/how-to-handle-projections-in-ravendb),\n> but no answers so far.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/NovusCraft/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/444\n> \n> -- Commit Summary --\n> - Added a failing test to demonstrate failing ad hoc projection\n> \n> -- File Changes --\n> \n> A Raven.Tests/Bugs/AdHocProjections.cs (69)\n> M Raven.Tests/Raven.Tests.csproj (1)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/444.patch\n>  https://github.com/ravendb/ravendb/pull/444.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/444\n'"
444,3600274,"b""That's odd. Before creating the test, I pulled down the latest changes.\n\nAny ideas/suggestions on how to debug this?\n"""
442,3601998,b'Done\n'
444,3602317,"b""You are using the stable latest, I am testing that on the unstable latest.\nYou can check those at github.com/ayende/ravendb\n\nOn Sun, Jan 22, 2012 at 2:45 AM, Arnold Zokas <\nreply@reply.github.com\n\n> wrote:\n> \n> That's odd. Before creating the test, I pulled down the latest changes.\n> \n> Any ideas/suggestions on how to debug this?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/444#issuecomment-3600274\n"""
419,3603068,b'Done\n'
438,3603073,b'Done\n'
448,3610030,b'- will add new index\n'
448,3610561,b'Done\n'
447,3610563,b'Done\n'
439,3610566,"b'made it closer to the UI\nI a desiner could improve it, it will be better\n'"
446,3611903,b'Fixed most issues.\nStill needs looking into: all tabs in chrome are connected to the same process\n'
441,3611905,b'Done\n'
394,3620885,b'You just add a SortByDistance() clause to your LuceneQuery... We will add samples of doing so as soon as we get to it.\n'
449,3635036,"b'You are using this in embedded mode.\nThe profiler only tracks HTTP calls\n\nOn Tue, Jan 24, 2012 at 6:15 PM, Arnold Zokas <\nreply@reply.github.com\n\n> wrote:\n> \n> I am trying to integrate RavenProfiler into an existing ASP.NET MVC3\n> project, but for some reason I am not seeing any information. The profiler\n> simply shows: ""_0 ms waiting for server in 0 request(s) for 0 sessions(s)_"".\n> \n> I considered the possibility that there is some conflicting code in my\n> project, so I carried out a basic test:\n> - I have created a new project using ASP.NET MVC3 Empty Application\n>   template\n> - Added package 1.0.606-Unstable via NuGet\n> - Using [RacoonBlog](https://github.com/ayende/RaccoonBlog/blob/master/RaccoonBlog.Web/Global.asax.cs)\n>   as an example, I added the following code to `Global.asax.cs`:\n> \n> ``` c#\n> public class MvcApplication : HttpApplication\n>        {\n>                public MvcApplication()\n>                {\n>                        BeginRequest += (sender, args) =>\n>                                {\n> \n>  HttpContext.Current.Items[""CurrentRequestRavenSession""] =\n> DocumentStore.OpenSession();\n>                                };\n>                        EndRequest += (sender, args) =>\n>                                {\n>                                        using (var session =\n> (IDocumentSession)HttpContext.Current.Items[""CurrentRequestRavenSession""])\n>                                        {\n>                                                if (session == null)\n>                                                        return;\n> \n>                                                if (Server.GetLastError()\n> != null)\n>                                                        return;\n> \n>                                                session.SaveChanges();\n>                                        }\n>                                };\n>                }\n> \n>                public static EmbeddableDocumentStore DocumentStore { get;\n> set; }\n> \n>                protected void Application_Start()\n>                {\n>                        // other initialisation code, etc...\n> \n>                        DocumentStore = new EmbeddableDocumentStore\n>                                {\n>                                        DataDirectory = ""App_Data/RavenDb""\n>                                };\n>                        DocumentStore.Initialize();\n> \n>                        RavenProfiler.InitializeFor(DocumentStore);\n>                }\n>        }\n> ```\n> - Added RavenProfiler method call to `<head>` section:\n> \n> ``` c#\n> <head>\n> \n>  @Raven.Client.MvcIntegration.RavenProfiler.CurrentRequestSessions()\n> </head>\n> ```\n> - Added test code to MVC action:\n> \n> ``` c#\n> public ActionResult Index()\n> {\n>        var session =\n> (IDocumentSession)HttpContext.Items[""CurrentRequestRavenSession""];\n>        session.Store(new Test { Name = ""Text 1"" });\n> \n>        HttpContext.Response.Write(""<br />"" +\n> session.Query<Test>().Count());\n> \n>        return View();\n> }\n> ```\n> \n> The profiler is still showing ""_0 ms waiting for server in 0 request(s)\n> for 0 sessions(s)_"".\n> \n> Does the profiler rely on some architectural pattern? Am I missing some\n> initialisation code somewhere?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/449\n'"
449,3635093,b'That would explain it. Are there API hooks to implement similar functionality for embedded mode?\n'
449,3635146,"b'Arnold,\nA pull request for that would be great, you can look at how we are doing it\nnow for the HTTP stuff.\n\nOn Tue, Jan 24, 2012 at 6:23 PM, Arnold Zokas <\nreply@reply.github.com\n\n> wrote:\n> \n> That would explain it. Are there API hooks to implement similar\n> functionality for embedded mode?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/449#issuecomment-3635093\n'"
449,3635186,"b'Sounds interesting, I will look into it. Thanks for the info.\n'"
452,3645900,b'Fixed it. Look at my pull request: https://github.com/ayende/ravendb/pull/87\n'
450,3647914,b'Fixed\n'
453,3683026,b'Can you please send me a backup: d.lang@flexbit.at\n'
453,3686947,b'Sent.\n'
453,3687844,"b'Yes, please send us the DB, it would be good to see what is going on there.\n\nOn Fri, Jan 27, 2012 at 2:30 AM, Arnold Zokas <\nreply@reply.github.com\n\n> wrote:\n> \n> I am using RavenDB v1.0.573 in embedded mode in an ASP.NET MVC\n> application.\n> Recently, I have deleted all documents from one of the collections using\n> the client API and noticed one document was not properly deleted.\n> \n> This document:\n> - **is** returned by `Query<T>.ToArray()` call\n> - **is not** returned by `Query<T>.Single(x => x.Id == docId)` call\n> - **is** displayed in Raven Studio ""Summary"" tab and ""Documents"" tab\n> - **is not** displayed in Raven Studio ""Collections"" tab\n> \n> I have tried:\n> - Deleting it using `IDocumentSession.Delete(doc)` call\n> - Deleting it using `IDocumentStore.DatabaseCommands.Delete(docId etag)`\n> - Rebuilding solution\n> - Restarting VS and rebuilding solution\n> - `iisreset`\n> - Rebooting\n> \n> ... but this document just wont die.\n> \n> I have a backup of the database (4KB) which will demonstrate this issue.\n> If you would like me to email you a copy, let me know.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/453\n'"
454,3715883,"b'The most likely reason is that we are checking whatever anything changed.\nOn a 100 entities, that might take some time, yes.\nWe will see if something can be done to mark this as read only.\n'"
455,3716540,b'Fixed\n'
443,3717669,"b""I thought RavenDB was already using NumericRangeQuery (http://lucene.apache.org/java/2_9_1/api/core/index.html), I could swear I saw it in the source? Doesn't this on it's own give a decent speed boost?\n"""
443,3717802,"b'It is, there are other approaches we need to build on top of that to make this more performant\n'"
443,3721628,"b'Okay, that makes sense\n\nJust been looking through the links, the TrieRangeQuery looks interesting.\n\nThe issue with the first line (http://invertedindex.blogspot.com/2009/11/numeric-range-queries-comparison.html), seems to be that it works by using FieldCaches. They seem to need ""warming"" up to give the speed increase.\n\nWill this work with RavenDB, does Raven use a new index-reader for each query, or does it re-use them?\n'"
443,3721692,b'We reuse readers. but we have a reader per index which might make this expensive in terms of memory. This is why we need to put some time on it :)\n'
457,3892919,"b'Can you send us a CLA?\n\nOn Wed, Feb 8, 2012 at 12:44 PM, Felipe Leusin <\nreply@reply.github.com\n\n> wrote:\n> \n> This is a simple bundle that allows the developer to flag properties their\n> model to act like Unique Constraints. A simple document is created for each\n> constraint and is enforced with triggers.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/felipeleusin/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/457\n> \n> -- Commit Summary --\n> - implemented unique constraints bundle\n> \n> -- File Changes --\n> \n> M Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csproj (12)\n> A Bundles/Raven.Bundles.Tests/UniqueConstraints/CreateTests.cs (90)\n> A Bundles/Raven.Bundles.Tests/UniqueConstraints/DeleteTests.cs (50)\n> A Bundles/Raven.Bundles.Tests/UniqueConstraints/UniqueConstraintsTest.cs\n> (39)\n> A Bundles/Raven.Bundles.Tests/UniqueConstraints/UpdateTests.cs (30)\n> A Bundles/Raven.Bundles.UniqueConstraints/Constants.cs (11)\n> A Bundles/Raven.Bundles.UniqueConstraints/Properties/AssemblyInfo.cs (36)\n> A\n> Bundles/Raven.Bundles.UniqueConstraints/Raven.Bundles.UniqueConstraints.csproj\n> (66)\n> A\n> Bundles/Raven.Bundles.UniqueConstraints/UniqueConstraintsDeleteTrigger.cs\n> (40)\n> A Bundles/Raven.Bundles.UniqueConstraints/UniqueConstraintsPutTrigger.cs\n> (133)\n> M Bundles/Raven.Bundles.sln (24)\n> A Bundles/Raven.Client.UniqueConstraints/Properties/AssemblyInfo.cs (20)\n> A\n> Bundles/Raven.Client.UniqueConstraints/Raven.Client.UniqueConstraints.csproj\n> (68)\n> A Bundles/Raven.Client.UniqueConstraints/UniqueConstraintAttribte.cs (8)\n> A Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsStoreListener.cs\n> (43)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/457.patch\n>  https://github.com/ravendb/ravendb/pull/457.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/457\n'"
457,3894806,b'Sure. Will send tomorrow.\n'
458,3927156,"b'Can you send me a CLA?\n\nOn Sun, Feb 12, 2012 at 1:16 PM, philjones88 <\nreply@reply.github.com\n\n> wrote:\n> \n> Hello,\n> \n> As per email conversations with Ayende, this is my first ever attempt (on\n> github) at contributing to a project, so be gentle :)\n> \n> My coding probably needs work, things I can think of to improve (but I\'m\n> not smart enough):\n> - Better handle the filter splitting, feels dirty and not extensible.\n> - Ayende mentioned ""SelectTokenWithRavenSyntaxReturningFlatStructure"" but\n>   I really don\'t understand in what context he wanted to me use it.\n> - Messages probably need to be reworked to deal with filtering out\n>   documents, they currently work fine but wording/style might need tweaking.\n> - Just noticed I need a Environment.Exit(-1); after I output only metadata\n>   filters are supported (doh)\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/philjones88/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/458\n> \n> -- Commit Summary --\n> - Added filter feature to Smuggler for in/out\n> \n> -- File Changes --\n> \n> M Raven.Smuggler/Raven.Smuggler.csproj (3)\n> M Raven.Smuggler/Smuggler.cs (228)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/458.patch\n>  https://github.com/ravendb/ravendb/pull/458.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/458\n'"
458,3927251,"b""Sent to Ayende's email address. By the way, couldn't see a section on the new site covering the CLA.\n"""
458,3929189,"b""Phil,\nIt is on the very bottom, contributing.\n\nOn Sun, Feb 12, 2012 at 1:38 PM, philjones88 <\nreply@reply.github.com\n\n> wrote:\n> \n> Sent to Ayende's email address. By the way, couldn't see a section on the\n> new site covering the CLA.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/458#issuecomment-3927251\n"""
459,3997747,"b'Yes, this is fixed in the current build\n'"
460,4028855,b'Implemented seperatedly (saves CLA)\n'
461,4153581,"b""What build are you using?\n\nOn Fri, Feb 24, 2012 at 10:09 AM, kroffdaddy <\nreply@reply.github.com\n\n> wrote:\n> \n> I'm trying to create a map/reduce index that uses `IGrouping<,>.Max` to\n> get the maximum date in the reduction part of my index. Here is a small\n> piece of code to demonstrate the problem:\n> \n>    public class Post\n>    {\n>        public string PostId { get; set; }\n>        public DateTime PostedAt { get; set; }\n>    }\n> \n>    public class LastPostIndex : AbstractIndexCreationTask<Post,\n> LastPostIndex.ReduceResult>\n>    {\n>        public class ReduceResult\n>        {\n>            public string Id { get; set; }\n>            public DateTime Posted { get; set; }\n>        }\n> \n> ```\n>    public LastPostIndex()\n>    {\n>        Map = docs =>\n>              from doc in docs\n>              select new { Id = doc.PostId, Posted = doc.PostedAt };\n> \n>        Reduce = maps =>\n>            from map in maps\n>            group map by map.Id\n>                into g\n>                select new { Id = g.Key, Posted = g.Max(x => x.Posted)\n> ```\n> \n> };\n>        }\n>    }\n> \n> This will give me the following index error (one per Post document) in\n> Raven Studio:\n> \n> > Cannot implicitly convert type 'System.DateTime' to 'int'\n> \n> The problem lies in `Posted = g.Max(x => x.Posted)`. If I convert the\n> `DateTime` object in the map part to a `long` I still get a conversion\n> error. Compressing it to an `int` works fine though, which makes me suspect\n> that **you lack support for DateTime and long in this scenario**.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/461\n"""
461,4153692,"b'Server is 616. Client was downloaded with nuget, but seems to also be 616:\n\n  <package id=""RavenDB"" version=""1.0.616"" />\n\n/Kristoffer\n\nOn Fri, Feb 24, 2012 at 9:55 AM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> What build are you using?\n> \n> On Fri, Feb 24, 2012 at 10:09 AM, kroffdaddy <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > I\'m trying to create a map/reduce index that uses `IGrouping<,>.Max` to\n> > get the maximum date in the reduction part of my index. Here is a small\n> > piece of code to demonstrate the problem:\n> > \n> >    public class Post\n> >    {\n> >        public string PostId { get; set; }\n> >        public DateTime PostedAt { get; set; }\n> >    }\n> > \n> >    public class LastPostIndex : AbstractIndexCreationTask<Post,\n> > LastPostIndex.ReduceResult>\n> >    {\n> >        public class ReduceResult\n> >        {\n> >            public string Id { get; set; }\n> >            public DateTime Posted { get; set; }\n> >        }\n> > \n> > ```\n> >    public LastPostIndex()\n> >    {\n> >        Map = docs =>\n> >              from doc in docs\n> >              select new { Id = doc.PostId, Posted = doc.PostedAt };\n> > \n> >        Reduce = maps =>\n> >            from map in maps\n> >            group map by map.Id\n> >                into g\n> >                select new { Id = g.Key, Posted = g.Max(x => x.Posted)\n> > ```\n> > \n> > };\n> >        }\n> >    }\n> > \n> > This will give me the following index error (one per Post document) in\n> > Raven Studio:\n> > \n> > > Cannot implicitly convert type \'System.DateTime\' to \'int\'\n> > \n> > The problem lies in `Posted = g.Max(x => x.Posted)`. If I convert the\n> > `DateTime` object in the map part to a `long` I still get a conversion\n> > error. Compressing it to an `int` works fine though, which makes me\n> > suspect\n> > that **you lack support for DateTime and long in this scenario**.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/461\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/461#issuecomment-4153581\n'"
461,4153701,"b'Can you try the unstable version?\n\nOn Fri, Feb 24, 2012 at 11:04 AM, kroffdaddy <\nreply@reply.github.com\n\n> wrote:\n> \n> Server is 616. Client was downloaded with nuget, but seems to also be 616:\n> \n>  <package id=""RavenDB"" version=""1.0.616"" />\n> \n> /Kristoffer\n> \n> On Fri, Feb 24, 2012 at 9:55 AM, Ayende Rahien <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > What build are you using?\n> > \n> > On Fri, Feb 24, 2012 at 10:09 AM, kroffdaddy <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > I\'m trying to create a map/reduce index that uses `IGrouping<,>.Max` to\n> > > get the maximum date in the reduction part of my index. Here is a small\n> > > piece of code to demonstrate the problem:\n> > > \n> > >    public class Post\n> > >    {\n> > >        public string PostId { get; set; }\n> > >        public DateTime PostedAt { get; set; }\n> > >    }\n> > > \n> > >    public class LastPostIndex : AbstractIndexCreationTask<Post,\n> > > LastPostIndex.ReduceResult>\n> > >    {\n> > >        public class ReduceResult\n> > >        {\n> > >            public string Id { get; set; }\n> > >            public DateTime Posted { get; set; }\n> > >        }\n> > > \n> > > ```\n> > >    public LastPostIndex()\n> > >    {\n> > >        Map = docs =>\n> > >              from doc in docs\n> > >              select new { Id = doc.PostId, Posted = doc.PostedAt };\n> > > \n> > >        Reduce = maps =>\n> > >            from map in maps\n> > >            group map by map.Id\n> > >                into g\n> > >                select new { Id = g.Key, Posted = g.Max(x =>\n> > > ```\n> > > \n> > > x.Posted)\n> > > };\n> > >        }\n> > >    }\n> > > \n> > > This will give me the following index error (one per Post document) in\n> > > Raven Studio:\n> > > \n> > > > Cannot implicitly convert type \'System.DateTime\' to \'int\'\n> > > \n> > > The problem lies in `Posted = g.Max(x => x.Posted)`. If I convert the\n> > > `DateTime` object in the map part to a `long` I still get a conversion\n> > > error. Compressing it to an `int` works fine though, which makes me\n> > > suspect\n> > > that **you lack support for DateTime and long in this scenario**.\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/issues/461\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/issues/461#issuecomment-4153581\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/461#issuecomment-4153692\n'"
461,4155087,b'Tried it with build 657 (unstable) and it works.\n'
461,4156334,"b'Great\n\nOn Friday, February 24, 2012, kroffdaddy wrote:\n\n> Tried it with build 657 (unstable) and it works.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/issues/461#issuecomment-4155087\n'"
458,4173652,"b'Pulled and merged.\nI made some modifications to the way this works.\nHowever, in the future, please make sure that when you are sending a pull request, you compile the project afterward. Your changes caused compilation errors in the test and server projects.\n'"
456,4173834,b'Pulled\n'
387,4173844,"b'Never got a CLA, closing this down.\n'"
462,4175726,"b""Colun,\nDo we have your CLA?\n\nOn Sat, Feb 25, 2012 at 8:20 PM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi,\n> \n> I have added a library Raven.Client.Lightweight.FSharp.\n> \n> Essentially it adds a set of combinators over the existing client API and\n> a computation expression builder, mainly for syntactic sugar.\n> \n> There are a couple of points,\n> - A dependency on FSharp.Powerpack.Linq.Fixed exists because support for\n>   linq expressions is somewhat ropey in F#, this improves in F# 3.0, so it is\n>   only for < .NET 4\n> - I have tried to bring the tests inline in the same way as the rest of\n>   the raven solution\n> - I realise that I don't have 100% coverage of all the features, I have\n>   just gone with the stuff that I use most often. And due to the lack of\n>   support for Linq expressions , c# is still needed to define indexes.\n> \n> Let me know what you think. I can be contacted directly on twitter via\n> @colinbul\n> \n> Cheers\n> \n> Colin\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/colinbull/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/462\n> \n> -- Commit Summary --\n> - Added a more idiomatic API for using raven from fsharp\n> - Added a test for luceneQueries and query composition\n> - Added a test for luceneQueries and query composition\n> - moved tests inline for rest of Raven solution\n> \n> -- File Changes --\n> \n> A Raven.Client.Lightweight.FSharp/DocumentStore.fs (18)\n> A Raven.Client.Lightweight.FSharp/Helpers.fs (72)\n> A Raven.Client.Lightweight.FSharp/Raven.Client.Lightweight.FSharp.fsproj\n> (78)\n> A Raven.Client.Lightweight.FSharp/Raven.fs (153)\n> A Raven.Client.Lightweight.FSharp/Script.fsx (7)\n> A Raven.Client.Lightweight.FSharp/packages.config (5)\n> A Raven.Tests.FSharp/Raven.Tests.FSharp.fsproj (121)\n> A Raven.Tests.FSharp/RavenTests.fs (153)\n> A Raven.Tests.FSharp/TestData.fs (37)\n> A Raven.Tests.FSharp/packages.config (5)\n> M RavenDB.sln (24)\n> M Samples/Raven.Sample.FSharp/Program.fs (3)\n> M Samples/Raven.Sample.FSharp/Raven.Sample.FSharp.fsproj (5)\n> M Samples/Raven.Samples.sln (25)\n> A packages/FsLinqFixed.2.1.1/FsLinqFixed.2.1.1.nupkg (0)\n> A packages/FsLinqFixed.2.1.1/lib/net40/FSharp.PowerPack.Linq.Fixed.dll (0)\n> A packages/FsLinqFixed.2.1.1/lib/net40/FSharp.PowerPack.Linq.Fixed.pdb (0)\n> A packages/FsLinqFixed.2.1.1/lib/net40/FSharp.PowerPack.Linq.Fixed.xml\n> (367)\n> A packages/FsLinqFixed.2.1.1/tools/install.ps (10)\n> A packages/FsUnit.xUnit.1.0.0.4/Content/FsUnitSample.fs.pp (22)\n> A packages/FsUnit.xUnit.1.0.0.4/FsUnit.xUnit.1.0.0.4.nupkg (0)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net20/FsUnit.CustomMatchers.dll (0)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net20/FsUnit.Xunit.dll (0)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net20/FsUnit.Xunit.xml (78)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net20/NHamcrest.dll (0)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net40/FsUnit.CustomMatchers.dll (0)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net40/FsUnit.Xunit.dll (0)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net40/FsUnit.Xunit.xml (78)\n> A packages/FsUnit.xUnit.1.0.0.4/Lib/Net40/NHamcrest.dll (0)\n> M packages/repositories.config (2)\n> A packages/xunit.1.8.0.1549/lib/xunit.dll (0)\n> A packages/xunit.1.8.0.1549/lib/xunit.dll.tdnet (5)\n> A packages/xunit.1.8.0.1549/lib/xunit.runner.tdnet.dll (0)\n> A packages/xunit.1.8.0.1549/lib/xunit.runner.utility.dll (0)\n> A packages/xunit.1.8.0.1549/lib/xunit.xml (2446)\n> A packages/xunit.1.8.0.1549/xunit.1.8.0.1549.nupkg (0)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/462.patch\n>  https://github.com/ravendb/ravendb/pull/462.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462\n"""
457,4175880,"b'Thanks for this, I pulled this in. Can you provide documentation for this?\n'"
462,4177903,"b'Hi,\n\nNo, I will sign and send it to you tomorrow. Is there anything else you need? \n\nCheers\n\nColin.\n'"
462,4179302,"b'Just the CLA, then I can pull the changes and review them\n\nOn Sun, Feb 26, 2012 at 3:29 AM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi,\n> \n> No, I will sign and send it to you tomorrow. Is there anything else you\n> need?\n> \n> Cheers\n> \n> Colin.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4177903\n'"
462,4180072,b'Send it to ayende email address\n'
457,4184939,"b""I'll send one tomorrow.\n"""
457,4185208,"b""I'll write one tomorrow and send you.\n\nOn Sat, Feb 25, 2012 at 5:23 PM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> Thanks for this, I pulled this in. Can you provide documentation for this?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/457#issuecomment-4175880\n"""
462,4190675,"b""storeImmediate, queryAllBy,  queryAll, deleteImmediate, deleteMany, storeMany need to be removed.\nThey are violating some basic assumptions and best practices.\n\nI also don't understand the Raven.docStoreMap\nWhy do you need to manage it in this fashion?\n"""
457,4190695,"b""Thanks\n\nOn Mon, Feb 27, 2012 at 12:31 AM, Felipe Leusin <\nreply@reply.github.com\n\n> wrote:\n> \n> I'll write one tomorrow and send you.\n> \n> On Sat, Feb 25, 2012 at 5:23 PM, Ayende Rahien <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Thanks for this, I pulled this in. Can you provide documentation for\n> > this?\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/pull/457#issuecomment-4175880\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/457#issuecomment-4185208\n"""
462,4192626,"b""Ok, no problem.. I thought this might be the case, for these functions, I\nonly bundled them because I tend to end up needing these in applications,\nbut I realise from an API point of view some of the assumptions they make\nare bad, and application specific. Just out of curiosity what best\npractices are being violated?\n\nNow you mention it the docStore map is not necessary (I can't even remember\nwhat I was thinking when I did this),  I can just change the run function\nto take an IDocumentSession instance. So it would then look something like\nthis.\n\nuse session = store.OpenSession()\nraven {\n    do! store Foo\n    do! commit\n} |> run session\n\nHow is that?\n\nCheers\n\nColin\n\nOn Mon, Feb 27, 2012 at 9:57 AM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> storeImmediate, queryAllBy,  queryAll, deleteImmediate, deleteMany,\n> storeMany need to be removed.\n> They are violating some basic assumptions and best practices.\n> \n> I also don't understand the Raven.docStoreMap\n> Why do you need to manage it in this fashion?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4190675\n"""
462,4192773,"b""The queryAll variant are bad because they assume that:\n- you can actually load the entire db to memory,\n- stable state with no changes\n- they result in N queries\n- they bypass the page size limits\n\nthe *Immediate variant are bad because they encourage immediate commit, vs\nwaiting for the code to complete.\nIn fact, I would say that you don't WANT to have a commit there, just have\nit implicitly call SaveChanges() in the end if you didn't get an exception.\n\nthe *Many variants aren't needed, you can just do a foreach for them, so I\ndon't see why they are needed on the core API\n\nI think that this API is better:\n\nuse session = store.OpenSession()\nraven {\n   do! store Foo\n} |> run session\n\nBy the mere fact that you completed the raven code without an exception,\nSaveChanges() can be called.\n\nOn Mon, Feb 27, 2012 at 2:34 PM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> Ok, no problem.. I thought this might be the case, for these functions, I\n> only bundled them because I tend to end up needing these in applications,\n> but I realise from an API point of view some of the assumptions they make\n> are bad, and application specific. Just out of curiosity what best\n> practices are being violated?\n> \n> Now you mention it the docStore map is not necessary (I can't even remember\n> what I was thinking when I did this),  I can just change the run function\n> to take an IDocumentSession instance. So it would then look something like\n> this.\n> \n> use session = store.OpenSession()\n> raven {\n>    do! store Foo\n>    do! commit\n> } |> run session\n> \n> How is that?\n> \n> Cheers\n> \n> Colin\n> \n> On Mon, Feb 27, 2012 at 9:57 AM, Ayende Rahien <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > storeImmediate, queryAllBy,  queryAll, deleteImmediate, deleteMany,\n> > storeMany need to be removed.\n> > They are violating some basic assumptions and best practices.\n> > \n> > I also don't understand the Raven.docStoreMap\n> > Why do you need to manage it in this fashion?\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/pull/462#issuecomment-4190675\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4192626\n"""
462,4193247,"b""Ahh ok thanks for that...\n\nOk, no problem, I'll make the changes and push tonight, as I don't have\naccess from where I am currently.\n\nCheers\n\nColin\n\nOn Mon, Feb 27, 2012 at 12:45 PM, Ayende Rahien <\nreply@reply.github.com\n\n> wrote:\n> \n> The queryAll variant are bad because they assume that:\n> - you can actually load the entire db to memory,\n> - stable state with no changes\n> - they result in N queries\n> - they bypass the page size limits\n> \n> the *Immediate variant are bad because they encourage immediate commit, vs\n> waiting for the code to complete.\n> In fact, I would say that you don't WANT to have a commit there, just have\n> it implicitly call SaveChanges() in the end if you didn't get an exception.\n> \n> the *Many variants aren't needed, you can just do a foreach for them, so I\n> don't see why they are needed on the core API\n> \n> I think that this API is better:\n> \n> use session = store.OpenSession()\n> raven {\n>   do! store Foo\n> } |> run session\n> \n> By the mere fact that you completed the raven code without an exception,\n> SaveChanges() can be called.\n> \n> On Mon, Feb 27, 2012 at 2:34 PM, Colin <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Ok, no problem.. I thought this might be the case, for these functions, I\n> > only bundled them because I tend to end up needing these in applications,\n> > but I realise from an API point of view some of the assumptions they make\n> > are bad, and application specific. Just out of curiosity what best\n> > practices are being violated?\n> > \n> > Now you mention it the docStore map is not necessary (I can't even\n> > remember\n> > what I was thinking when I did this),  I can just change the run function\n> > to take an IDocumentSession instance. So it would then look something\n> > like\n> > this.\n> > \n> > use session = store.OpenSession()\n> > raven {\n> >    do! store Foo\n> >    do! commit\n> > } |> run session\n> > \n> > How is that?\n> > \n> > Cheers\n> > \n> > Colin\n> > \n> > On Mon, Feb 27, 2012 at 9:57 AM, Ayende Rahien <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > storeImmediate, queryAllBy,  queryAll, deleteImmediate, deleteMany,\n> > > storeMany need to be removed.\n> > > They are violating some basic assumptions and best practices.\n> > > \n> > > I also don't understand the Raven.docStoreMap\n> > > Why do you need to manage it in this fashion?\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/ravendb/ravendb/pull/462#issuecomment-4190675\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/ravendb/ravendb/pull/462#issuecomment-4192626\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4192773\n"""
457,4194126,"b'# UniqueConstraints Bundle\n\n## Premise\n\nThis bundle aims to allow the user to implement unique constraints in the objects (usefull for properties like email or social security number).\n\n## How it works\n\nThe bundle works both in the server (using a PutTrigger and a DeleteTrigger) and in the client (using a DocumentStoreListener). \n\nWhen a document is stored in the database it generates ""dummy"" documents with the fields as ""UniqueConstraints/"" + entityName + ""/"" + propertyName + ""/"" + propertyValue. This way you don\'t require indexes (which would need to be stale to check for uniqueness).\n\n### UniqueConstraintsStoreListener\n\nThe listener works by using reflection when the document is stored on the database and generating metadata regarding it\'s unique constraints. The reflection result is cached in a ConcurrentDictionary to help with performance.\n\n### UniqueConstraintsPutTrigger\n\nThe put trigger acts whenever it finds a document being inserted with constraints metadata it checks for existing documents in for the constraints and if any existing document is found it returns a VetoResult.Deny informing the confliction fields. This would need to be checked on the client-side using a try block for the OperationVetoedException.\n\nIf a document is being updated the trigger updates the generated constraint document.\n\n### UniqueConstraintsDeleteTrigger\n\nThe delete trigger acts whener it find a document being delete with constraints metadata and deletes the referenced constraint documents.\n\n## Caveats\n- This was developed to be used with strings or ValueTypes. I\'m unsure how it would behave with another property with the UniqueConstraint attribute.\n- If, in the same transaction you\'re updating documents and ""switching"" constraints (as in inserting a document with a property that was already beign used but in the same transaction deleting the ""old"" document) it _may_ not work as expected.\n\n## Credits\n\nThanks to Ayende and it\'s team for RavenDB.\nMatt Warren for help with some tests and some fixes.\n\nFelipe Leusin (@whymclovin)\n'"
457,4197354,"b'Thanks, we will push this to our website shortly\n\nOn Mon, Feb 27, 2012 at 4:17 PM, Felipe Leusin <\nreply@reply.github.com\n\n> wrote:\n> \n> # UniqueConstraints Bundle\n> \n> ## Premise\n> \n> This bundle aims to allow the user to implement unique constraints in the\n> objects (usefull for properties like email or social security number).\n> \n> ## How it works\n> \n> The bundle works both in the server (using a PutTrigger and a\n> DeleteTrigger) and in the client (using a DocumentStoreListener).\n> \n> When a document is stored in the database it generates ""dummy"" documents\n> with the fields as ""UniqueConstraints/"" + entityName + ""/"" + propertyName +\n> ""/"" + propertyValue. This way you don\'t require indexes (which would need\n> to be stale to check for uniqueness).\n> \n> ### UniqueConstraintsStoreListener\n> \n> The listener works by using reflection when the document is stored on the\n> database and generating metadata regarding it\'s unique constraints. The\n> reflection result is cached in a ConcurrentDictionary to help with\n> performance.\n> \n> ### UniqueConstraintsPutTrigger\n> \n> The put trigger acts whenever it finds a document being inserted with\n> constraints metadata it checks for existing documents in for the\n> constraints and if any existing document is found it returns a\n> VetoResult.Deny informing the confliction fields. This would need to be\n> checked on the client-side using a try block for the\n> OperationVetoedException.\n> \n> If a document is being updated the trigger updates the generated\n> constraint document.\n> \n> ### UniqueConstraintsDeleteTrigger\n> \n> The delete trigger acts whener it find a document being delete with\n> constraints metadata and deletes the referenced constraint documents.\n> \n> ## Caveats\n> - This was developed to be used with strings or ValueTypes. I\'m unsure how\n>   it would behave with another property with the UniqueConstraint attribute.\n> - If, in the same transaction you\'re updating documents and ""switching""\n>   constraints (as in inserting a document with a property that was already\n>   beign used but in the same transaction deleting the ""old"" document) it\n>   _may_ not work as expected.\n> \n> ## Credits\n> \n> Thanks to Ayende and it\'s team for RavenDB.\n> Matt Warren for help with some tests and some fixes.\n> \n> Felipe Leusin (@whymclovin)\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/457#issuecomment-4194126\n'"
462,4206160,"b'Ok, I have completed the changes we discussed earlier. I have also added more complete support and tests for the computational workflow syntax, this now supports things like \n- Try/Catch \n- Try/Finally\n- use and use!\n- Iteration like while and for\n\nCheers\n\nColin\n'"
462,4212914,b'Why is there:\n- `include`\n- Is there a reason not to do implicit do! saveChanges at the end of the raven {} block?\n'
462,4212919,b'I meant include in quotes?\n'
462,4213006,"b""- Include is in quotes because it is a reserved keyword in F#, (http://msdn.microsoft.com/en-us/library/dd233249.aspx).\n- No none, that is perfectly valid, although I don't think I have a test that I actually do that in so I shall just double check.\n"""
462,4213062,"b'Oh, hold on, I think I see what you mean now.. so the \n\nraven {} is like a discrete set of operations and if it all completes without exception then call save changes? \n'"
462,4213565,"b'Colin,\nYes, I think that this would result in better code.\n\nAs for include, how about we call it including, instead?\n\nOn Tue, Feb 28, 2012 at 12:24 PM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> Oh, hold on, I think I see what you mean now.. so the\n> \n> raven {} is like a discrete set of operations and if it all completes\n> without exception then call save changes?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4213062\n'"
462,4213738,"b""Yeah, including is good... That is actually what I had it as originally but I changed it to be more in line with the Raven API.\n\nI'll get on to this later on tonight.\n\nCheers\n"""
462,4243518,"b'OK, have committed the changes you requested let me know if there is anything else\n'"
464,4271006,"b'What is this supposed to do?\n\nOn Thu, Mar 1, 2012 at 9:56 PM, finarfin <\nreply@reply.github.com\n\n> wrote:\n> \n> Batch file fails if working directory is different than Raven directory\n> when using dot (.). %~dp0 works on Windows XP+.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/finarfin/ravendb patch-1\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/464\n> \n> -- Commit Summary --\n> - Quick fix: Run debug server without going into directory.\n> \n> -- File Changes --\n> \n> M Scripts/Start.cmd (2)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/464.patch\n>  https://github.com/ravendb/ravendb/pull/464.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/464\n'"
464,4271163,"b""Dot is relative to the current location of shell, %~dp0 is relative to the batch file's location. Command shell does not always start in the Raven folder (i.e when raven is in UNC path or toolbars used it starts in %systemroot%\\system32).\n"""
464,4282067,"b""Thanks,\nAs we don't have a CLA from you, I just made the change locally. Thanks for that.\n"""
462,4283835,"b'We are almost there.\nI pushed my changes to the fs branch in my fork:\nhttps://github.com/ayende/ravendb/tree/fs\n\nThe current issue is: FsUnit.xUnit\n\nIt is using 1.8 xunit and we use 1.9\n\nOn Wed, Feb 29, 2012 at 8:25 PM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> OK, have committed the changes you requested let me know if there is\n> anything else\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4243518\n'"
462,4285717,"b'Hi,\n\nI have just removed FSUnit and Updated the xUnit version to 1.9, \n\nExperienced some oddities, thou with the upgrade for some reason the Assert.Equal was not selecting the correct overload, I guess this is something to do with the type inference. So in a few tests I have had to use Assert.True(expected = actual).\n'"
465,4309051,"b'Thanks for that, pulled\n'"
462,4310170,"b'Colin,\nThanks so much, I pulled your changes in.\nWould you be able to write the docs for this as well?\n'"
467,4315156,"b""Oops, I didn't think to add SortOptions to the index.\n"""
462,4318944,b'Not a problem..\n\nWhere do I include the docs? \n'
462,4319081,"b'https://github.com/ravendb/docs is best\n\nOn Mon, Mar 5, 2012 at 11:06 AM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> Not a problem..\n> \n> Where do I include the docs?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/462#issuecomment-4318944\n'"
466,4321439,b'Could not reproduce that.\nCan you open a detailed issue about that here?\nhttp://issues.hibernatingrhinos.com/issues\n'
462,4341716,"b'About the documentation, \n\nF# projects do not support regions which seems to be how you are selecting the code samples in your documentation... \n\nWill just embedding the code samples in the documentation suffice?\n'"
469,4449323,"b'Pulled, thanks.\n\nOn Sun, Mar 11, 2012 at 10:34 PM, Damian Hickey <\nreply@reply.github.com\n\n> wrote:\n> \n> ...project and Raven-Client package. Discussion:\n> https://groups.google.com/d/topic/ravendb/pKbdAk0J9zw/discussion\n> \n> I believe this will also help with devs who are experimenting with VS11 /\n> .Net4.5.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/damianh/ravendbRemoveAsyncCtpDependencyFromClient\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/469\n> \n> -- Commit Summary --\n> - Removed the dependency on AsyncCtpLibrary from Raven.Client.Lightweight\n>   project and Raven-Client package. Discussion:\n>   https://groups.google.com/d/topic/ravendb/pKbdAk0J9zw/discussion\n> \n> -- File Changes --\n> \n> M Raven.Client.Lightweight/Connection/Async/AsyncServerClient.cs (2)\n> M Raven.Client.Lightweight/Document/AbstractDocumentQuery.cs (22)\n> M Raven.Client.Lightweight/Document/DocumentStore.cs (3)\n> M Raven.Client.Lightweight/Raven.Client.Lightweight.csproj (12)\n> M default.ps1 (2)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/469.patch\n>  https://github.com/ravendb/ravendb/pull/469.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/469\n'"
471,4897132,"b'Thanks, pulled.\n'"
472,5064058,"b'pulled\n\nOn Wed, Apr 11, 2012 at 10:50 AM, Colin <\nreply@reply.github.com\n\n> wrote:\n> \n> I have added a few more functions for things like skip, take and select\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/colinbull/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/472\n> \n> -- Commit Summary --\n> - updated f# api with some select, take and skip combinators\n> \n> -- File Changes --\n> \n> M Raven.Client.Lightweight.FSharp/Raven.fs (14)\n> M Raven.Tests.FSharp/RavenTests.fs (47)\n> M RavenDB.sln (24)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/472.patch\n>  https://github.com/ravendb/ravendb/pull/472.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/472\n'"
475,5418878,b'We already have the /service-name=Foo command line argument.\n'
475,5418991,"b'Oh, but there is not in the stable build. Thanks.\n'"
476,5534467,"b""I pulled this in, very nice.\nPlease send a pull request for the docs as well\n\nOn Sat, May 5, 2012 at 6:07 PM, Felipe Leusin <\nreply@reply.github.com\n\n> wrote:\n> \n> I've written some updates to help usage of the UniqueConstraint Bundle\n> based on the comments here:\n> https://github.com/ayende/ravendb/commit/aefe0b483437db117cc5d741977422b8d1b0d2be#commitcomment-1155099\n> \n> I'm kinda on the fence about hashing the value when generating the\n> document Id. It's easily doable but should I worry about performance\n> implications?\n> \n> Anyway here are the files for review. If it's approved i'll write some\n> docs for it.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/felipeleusin/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/476\n> \n> -- Commit Summary --\n> - implemented extension method to get document by constraint value. todo:\n>   tests\n> - added methods to check existing docs based on constraints\n> - added failed test on ExtensionCheckTests.cs of the UniqueConstraints\n>   Bundle\n> \n> -- File Changes --\n> \n> M Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csproj (2)\n> M Bundles/Raven.Bundles.Tests/UniqueConstraints/Bugs/Lars.cs (12)\n> A Bundles/Raven.Bundles.Tests/UniqueConstraints/ExtensionCheckTests.cs\n> (107)\n> A Bundles/Raven.Bundles.Tests/UniqueConstraints/ExtensionLoadTests.cs (53)\n> M Bundles/Raven.Bundles.UniqueConstraints/UniqueConstraintsPutTrigger.cs\n> (6)\n> M\n> Bundles/Raven.Client.UniqueConstraints/Raven.Client.UniqueConstraints.csproj\n> (2)\n> A Bundles/Raven.Client.UniqueConstraints/UniqueConstraintExtensions.cs\n> (127)\n> M Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsStoreListener.cs\n> (11)\n> A\n> Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsTypeDictionary.cs\n> (26)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/476.patch\n>  https://github.com/ravendb/ravendb/pull/476.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/476\n"""
479,5768611,"b'Please pull from https://github.com/ayende/ravendb\nWe have implemented additional features for the smuggler, in particular, incremental exports are very important\n'"
479,5780188,b'Doh!  Will open a new pull request.\n'
480,5796179,"b""David,\nCan you sign the CLA for this?\nhttp://ravendb.net/contributing\n\nOn Fri, May 18, 2012 at 10:25 PM, David Boike <\nreply@reply.github.com\n\n> wrote:\n> \n> The Studio xap file is already compressed, so it's a waste of time to try\n> to gzip compress it further. In fact, it can drastically slow down the\n> Studio load time from remote networks.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/DuctTapeMan/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/480\n> \n> -- Commit Summary --\n> - The Studio xap file is already compressed, so it's a waste of time to\n>   try to gzip compress it further. In fact, it can drastically slow down the\n>   Studio load time from remote networks.\n> \n> -- File Changes --\n> \n> M Raven.Database/Server/HttpServer.cs (5)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/480.patch\n>  https://github.com/ravendb/ravendb/pull/480.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/480\n"""
480,5796440,b'Sent to support@ravendb.net\n'
481,5842397,"b""It doesn't really help if we get different errors than the main one.\nI'll add a C# test that would have this feature, can you model your F# code\naccordingly?\n\nOn Tue, May 22, 2012 at 10:03 AM, Joel Mueller <\nreply@reply.github.com\n\n> wrote:\n> \n> As requested in [this discussion](https://groups.google.com/d/topic/ravendb/9sEju2clMSA/discussion) here is\n> a failing test that attempts to create a RavenDB index using only\n> strongly-typed F# code.\n> \n> The index creation is implemented two different ways. One of them,\n> commented out, requires project changes to target F# 3.0 in order to use\n> the built-in LINQ support in that version. The other works with F# 2.0.\n> \n> Both versions compile, and both fail with different errors before they get\n> to the point of having an issue with the lack of anonymous types in F#.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/jtmueller/ravendb fsharp-indexes\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/481\n> \n> -- Commit Summary --\n> - VS11 updated some project files.\n> - Removing references to get test projects to compile.\n> - Added F# index-creation tests\n> \n> -- File Changes --\n> \n> M Raven.Client.Lightweight.FSharp/Helpers.fs (6)\n> M Raven.Client.Lightweight.FSharp/Raven.Client.Lightweight.FSharp.fsproj\n> (141)\n> M Raven.Client.Lightweight.FSharp/Raven.fs (5)\n> M Raven.Tests.FSharp/Raven.Tests.FSharp.fsproj (208)\n> M Raven.Tests.FSharp/RavenTests.fs (12)\n> A Raven.Tests.FSharp/TestIndexes.fs (163)\n> M Raven.Tests/Raven.Tests.csproj (1778)\n> M Raven.Web/Raven.Web.csproj (279)\n> M RavenDB.sln (496)\n> M Samples/Raven.Sample.FSharp/Raven.Sample.FSharp.fsproj (141)\n> M zzz_RavenDB_Release.sln (1491)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/481.patch\n>  https://github.com/ravendb/ravendb/pull/481.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/481\n"""
481,5852785,"b""Yes, I can do that. However, the error I got seems to indicate that `IndexDefinitionHelper` was unable to parse the particular expression tree produced by the code in the `OrderTotalsByDay` index creation task. Adding a feature to make it work without anonymous types won't really help unless we can figure out some F# code that produces an expression tree Raven is happy with, or Raven is augmented to understand the expression trees generated by F# code. I suspect that my F# code would end up having the same error even after I model it after a C# test. I'm willing to give it a try, though.\n"""
481,5878386,"b""Note that we now have a passing test for:\n\npublic class Index : AbstractIndexCreationTask<Item, Index.Result>\n{\npublic class Result\n {\npublic object Query { get; set; }\n}\n\npublic Index()\n{\nMap = items =>\n      from item in items\n      select new Result\n      {\n  Query = new object[]{item.Age, item.Name}\n      };\n}\n}\n\nOn Tue, May 22, 2012 at 7:09 PM, Joel Mueller <\nreply@reply.github.com\n\n> wrote:\n> \n> Yes, I can do that. However, the error I got seems to indicate that\n> `IndexDefinitionHelper` was unable to parse the particular expression tree\n> produced by the code in the `OrderTotalsByDay` index creation task. Adding\n> a feature to make it work without anonymous types won't really help unless\n> we can figure out some F# code that produces an expression tree Raven is\n> happy with, or Raven is augmented to understand the expression trees\n> generated by F# code. I suspect that my F# code would end up having the\n> same error even after I model it after a C# test. I'm willing to give it a\n> try, though.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/481#issuecomment-5852785\n"""
481,5878460,"b""Thanks! I'll change the F# test to use this pattern and update this pull request. I suspect expression tree parsing is still going to be an issue, but I'll see what I can do.\n"""
481,5879900,"b""I think I'm becoming convinced to just write my index-creation classes in a C# project.\n"""
482,6031676,"b""Hi,\nCan you sign an CLA?\nhttp://ravendb.net/contributing\n\nOn Wed, May 30, 2012 at 6:35 PM, pacoweb <\nreply@reply.github.com\n\n> wrote:\n> \n> To check if a field index document is Numeric we must use the field\xc2\xb4s\n> name, plus the '_Range' suffix. If not, this code (field is\n> NumericField) is always false.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/pacoweb/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/482\n> \n> -- Commit Summary --\n> - Fixing check numeric fields in IndexReplication\n> \n> -- File Changes --\n> \n> M\n> Bundles/Raven.Bundles.IndexReplication/IndexReplicationIndexUpdateTrigger.cs\n> (5)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/482.patch\n>  https://github.com/ravendb/ravendb/pull/482.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/482\n"""
483,6123880,"b'You can resolve this by removing Raven.Tests from the solution.\nNote that all of the .sln files are there just for dev. For compilzation,\nwe use the zzz_RavenDB.sln\n\nOn Tue, Jun 5, 2012 at 2:28 PM, pacoweb <\nreply@reply.github.com\n\n> wrote:\n> \n> To allow correct compilation of Ranven.Bundles solution we must add the\n> project Raven.Client.Debug. If not, Raven.Tests fails on compilation.\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/pacoweb/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/483\n> \n> -- Commit Summary --\n> - Add proj. Raven.Client.Debug to Raven.Bundles.sln\n> \n> -- File Changes --\n> \n> M Bundles/Raven.Bundles.sln (13)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/483.patch\n>  https://github.com/ravendb/ravendb/pull/483.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/483\n'"
484,6190327,"b'Hi,\nDo we have a CLA from you?\nIf not, can you sign one and send us? ravendb.net/contributing\n\nOn Thu, Jun 7, 2012 at 8:34 AM, Adam Tybor <\nreply@reply.github.com\n\n> wrote:\n> \n> Not that I have this many docs, but the default OData DataService\n> implementation executes LongCount and not Count\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/abombss/ravendb linq-long-count\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/ravendb/ravendb/pull/484\n> \n> -- Commit Summary --\n> - Adding LongCount method support to LINQ provider\n> \n> -- File Changes --\n> \n> M Raven.Client.Lightweight/Linq/RavenQueryProviderProcessor.cs (32)\n> A Raven.Tests/Linq/LongCount.cs (40)\n> M Raven.Tests/Raven.Tests.csproj (1)\n> \n> -- Patch Links --\n> \n>  https://github.com/ravendb/ravendb/pull/484.patch\n>  https://github.com/ravendb/ravendb/pull/484.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/484\n'"
484,6190599,b'Just sent my signed CLA to  support@ravendb.net\n'
485,6688501,b'My assumption was correct therefore the failing test is not required.\n'
486,6857294,b'This will help in situations where you just need to backup and restore only Indexes. \n'
486,6869383,"b""Can you send me a CLA?\nhttp://ravendb.net/contributing\n\nOn Mon, Jul 9, 2012 at 10:39 PM, MichellePrograms <\nreply@reply.github.com\n\n> wrote:\n> \n> on more than one operate on type. Only passing in Indexes did not work.\n>  We made change to how the OperateOnTypes is parsed. Now it will accept\n> single argument or multiple comma separated arguments.\n> \n> Comments on Smuggler code changes\n> Raven.Smuggler/Program.cs\n> \n> Original - options.OperateOnTypes = (ItemType) Enum.Parse(typeof\n> (ItemType), value);\n> Modification - options.OperateOnTypes = (ItemType)\n> options.ItemTypeParser(value);\n> \n> Raven.Abstractions/Smuggler/SmugglerOptions.cs\n> \n> Added - public ItemType ItemTypeParser(string items)\n>             {\n>                 var result = new ItemType();\n>                 if (String.IsNullOrWhiteSpace(items))\n>                 {\n>                     return ItemType.Documents | ItemType.Indexes |\n> ItemType.Attachments;\n>                 }\n>                 foreach (var item in items.Split(','))\n>                 {\n>                     result |= (ItemType)Enum.Parse(typeof(ItemType), item);\n>                 }\n>                 return result;\n>             }\n> \n> Added new function to correctly pass back the ItemType.\n> \n> Original - [Flags]\n>         public enum ItemType\n>         {\n>         Documents,\n>         Indexes,\n>         Attachments\n>         }\n> Modified - [Flags]\n>         public enum ItemType\n>         {\n>         Documents = 0x1,\n>         Indexes = 0x2,\n>         Attachments = 0x4\n>         }\n> \n> Modified the ItemType to include values necessary for working in .NET.\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/dominionenterprises/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>   https://github.com/ravendb/ravendb/pull/486\n> \n> -- Commit Summary --\n> - Smuggler was not allowing pick up of single command line argument for\n>   operate on types. Only passing in Indexes did not work.\n> \n> -- File Changes --\n> \n> M Raven.Abstractions/Smuggler/SmugglerOptions.cs (24)\n> M Raven.Smuggler/Program.cs (7)\n> \n> -- Patch Links --\n> \n>   https://github.com/ravendb/ravendb/pull/486.patch\n>   https://github.com/ravendb/ravendb/pull/486.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/486\n"""
486,6879318,"b'Fitzchak, the options are parsed into a string.  The string has one, two, or three values separated by commas.  These items need to be converted into an enum flag set (collection of enums). \nI did not find any examples online where enum.parse would convert a csv string into a flag collection. \n{pseudocode}\ncsvStr = ""Documents,Indexes""\noptions.foo = (ItemType)Enum.Parse(type,csvStr);\n\nI found many examples where they did a foreach and used |= to build the flag set.\n'"
486,6879433,"b'Eric,\nEnum,Parse can do that\n'"
486,6880658,"b'Hello, CLA sent to support@ravendb.net.\n'"
486,6895192,"b'Thanks for the quick responses.  I just made some test and yes, it will parse an array if the Enums have assigned values.  We can pull out the method that sets the enum flags and submit a new pull request.\n\nI just created some tests, and your right it can parse them, if there are assigned values (at least in VS2012 RC) \n\n   public class CvsStringTest\n    {\n       /// <summary>\n\n\n       /// This test passes\n       /// </summary>\n\n\n       [Test]\n       public void Enum_Parse_CVS_String_With_AssignedValue()\n       {\n           var strEnum = ""One,Two"";\n           var result = (CountWithAssignedValues) Enum.Parse(typeof (CountWithAssignedValues), strEnum,true);\n           Console.WriteLine(result.ToString());\n           Assert.AreEqual(""One, Two"", result.ToString());\n       }\n\n```\n   /// <summary>\n   /// This test fails\n   /// </summary>\n   [Test]\n   public void Enum_Parse_CVS_String_No_ValuesAssigned()\n   {\n       var strEnum = ""One,Two"";\n       var result = (CountNoValues)Enum.Parse(typeof(CountNoValues), strEnum, true);\n       Console.WriteLine(result.ToString());\n       Assert.AreEqual(""One, Two"", result.ToString());\n   }\n\n   [Flags]\n   public enum CountWithAssignedValues { One = 0x1, Two = 0x2, Three = 0x4 }\n\n   [Flags]\n   public enum CountNoValues { One, Two,Three}\n}\n```\n'"
486,6897747,"b'Already fixed and pushed.\n\nOn Wed, Jul 11, 2012 at 3:50 AM, Eric Rohlfs <\nreply@reply.github.com\n\n> wrote:\n> \n> Thanks for the quick responses.  I just made some test and yes, it will\n> parse an array if the Enums have assigned values.  We can pull out the\n> method that sets the enum flags and submit a new pull request.\n> \n> I just created some tests, and your right it can parse them, if there are\n> assigned values (at least in VS2012 RC)\n> \n>    public class CvsStringTest\n>     {\n>        /// <summary>\n> \n> \n>        /// This test passes\n>        /// </summary>\n> \n> \n>        [Test]\n>        public void Enum_Parse_CVS_String_With_AssignedValue()\n>        {\n>            var strEnum = ""One,Two"";\n>            var result = (CountWithAssignedValues) Enum.Parse(typeof\n> (CountWithAssignedValues), strEnum,true);\n>            Console.WriteLine(result.ToString());\n>            Assert.AreEqual(""One, Two"", result.ToString());\n>        }\n> \n> ```\n>    /// <summary>\n>    /// This test fails\n>    /// </summary>\n>    [Test]\n>    public void Enum_Parse_CVS_String_No_ValuesAssigned()\n>    {\n>        var strEnum = ""One,Two"";\n>        var result = (CountNoValues)Enum.Parse(typeof(CountNoValues),\n> ```\n> \n> strEnum, true);\n>            Console.WriteLine(result.ToString());\n>            Assert.AreEqual(""One, Two"", result.ToString());\n>        }\n> \n> ```\n>    [Flags]\n>    public enum CountWithAssignedValues { One = 0x1, Two = 0x2, Three =\n> ```\n> \n> 0x4 }\n> \n> ```\n>    [Flags]\n>    public enum CountNoValues { One, Two,Three}\n> }\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/486#issuecomment-6895192\n'"
486,6940044,b'Oops. Please ignore that last one.\n'
486,6940061,b'Closed since fixed and push done.\n'
487,7051456,"b'Already implemented and will be in the next build\n\nOn Tue, Jul 17, 2012 at 10:13 PM, jstrassburg <\nreply@reply.github.com\n\n> wrote:\n> \n> Overriding these methods of JsonWriter to throw NotSupportedException.\n> If a client implemented a custom JsonConverter using either their object\n> would fail to save from a later NullReferenceException. This makes it\n> clear that these methods are not supported.\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/jstrassburg/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>   https://github.com/ravendb/ravendb/pull/487\n> \n> -- Commit Summary --\n> - Overriding WriteRaw and WriteRawValue\n> \n> -- File Changes --\n> \n> M Raven.Abstractions/Json/Linq/RavenJTokenWriter.cs (24)\n> \n> -- Patch Links --\n> \n>   https://github.com/ravendb/ravendb/pull/487.patch\n>   https://github.com/ravendb/ravendb/pull/487.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/487\n'"
488,7302169,"b""Hi,\nThis should go into a contrib project, probably.\nI don't want to add something to the project that wouldn't be possible /\neasy for us to support, and we have no intrinsic Redis knowledge.\n\nOn Thu, Jul 26, 2012 at 8:04 PM, pacoweb <\nreply@reply.github.com\n\n> wrote:\n> \n> This bundle allow replicate index data to Redis using the\n> ServiceStack.Redis C# client.\n> Allows replicate the index data using two different modes: Hash Mode\n> (dictionary of properties) or Typed mode (C#/.NET POCO type).\n> Follows the same design of the IndexReplication Bundle, including\n> transaction for insert/delete on index update operations.\n> Included test, and sample.\n> Redis client info: https://github.com/ServiceStack/ServiceStack.Redis\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/pacoweb/ravendb master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>   https://github.com/ravendb/ravendb/pull/488\n> \n> -- Commit Summary --\n> - New Bundle IndexReplicationToRedis\n> \n> -- File Changes --\n> \n> A\n> Bundles/Raven.Bundles.IndexReplicationToRedis/Data/IndexReplicationToRedisDestination.cs\n> (25)\n> A\n> Bundles/Raven.Bundles.IndexReplicationToRedis/Data/IndexReplicationToRedisMode.cs\n> (13)\n> A\n> Bundles/Raven.Bundles.IndexReplicationToRedis/IndexReplicationToRedisIndexUpdateTrigger.cs\n> (231)\n> A Bundles/Raven.Bundles.IndexReplicationToRedis/Properties/AssemblyInfo.cs\n> (36)\n> A\n> Bundles/Raven.Bundles.IndexReplicationToRedis/Raven.Bundles.IndexReplicationToRedis.csproj\n> (94)\n> A\n> Bundles/Raven.Bundles.Tests/IndexReplicationToRedis/FactIfRedisDefaultIsAvailable.cs\n> (37)\n> A Bundles/Raven.Bundles.Tests/IndexReplicationToRedis/ReplicateToRedis.cs\n> (446)\n> M Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csproj (30)\n> M Bundles/Raven.Bundles.Tryouts/Program.cs (14)\n> M Bundles/Raven.Bundles.Tryouts/Raven.Bundles.Tryouts.csproj (4)\n> M Bundles/Raven.Bundles.sln (24)\n> A\n> Samples/Raven.Samples.IndexReplicationToRedis.PocoTypes/Properties/AssemblyInfo.cs\n> (36)\n> A\n> Samples/Raven.Samples.IndexReplicationToRedis.PocoTypes/QuestionSummary.cs\n> (20)\n> A\n> Samples/Raven.Samples.IndexReplicationToRedis.PocoTypes/Raven.Samples.IndexReplicationToRedis.PocoTypes.csproj\n> (51)\n> A Samples/Raven.Samples.IndexReplicationToRedis/.gitignore (1)\n> A Samples/Raven.Samples.IndexReplicationToRedis/App.config (3)\n> A Samples/Raven.Samples.IndexReplicationToRedis/Program.cs (180)\n> A\n> Samples/Raven.Samples.IndexReplicationToRedis/Raven.Samples.IndexReplicationToRedis.csproj\n> (102)\n> A Samples/Raven.Samples.IndexReplicationToRedis/Start\n> RavenAndCopyDependencies.ps1       (18)\n> A Samples/Raven.Samples.IndexReplicationToRedis/packages.config (4)\n> M Samples/Raven.Samples.sln (36)\n> A SharedLibs/ServiceStack.Common.dll (0)\n> A SharedLibs/ServiceStack.Interfaces.dll (0)\n> A SharedLibs/ServiceStack.Redis.dll (0)\n> A SharedLibs/ServiceStack.Text.dll (0)\n> \n> -- Patch Links --\n> \n>   https://github.com/ravendb/ravendb/pull/488.patch\n>   https://github.com/ravendb/ravendb/pull/488.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/488\n"""
488,7302640,b'That sounds reasonable. When the contrib repository has a structure I will add it. Thank you.\n'
489,7685970,b'Cannot pull without a CLA\nClosing\n'
494,10588636,"b'Can you send a CLA?\nhttp://ravendb.net/contributing\n\nOn Wed, Nov 21, 2012 at 5:36 AM, John Simons notifications@github.comwrote:\n\n> ---\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/johnsimons/ravendb patch-2\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/494\n> Commit Summary\n> - Fixed spelling mistake\n> \n> File Changes\n> - _M_ Raven.Server/Program.cs (2)\n> \n> Patch Links\n> - https://github.com/ravendb/ravendb/pull/494.patch\n> - https://github.com/ravendb/ravendb/pull/494.diff\n>   \n>   \xe2\x80\x94\n>   Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/494.\n'"
492,10590304,"b'Hi,\nMissing the CLA\n\nOn Tue, Nov 20, 2012 at 5:46 PM, David Pfeffer notifications@github.comwrote:\n\n> ---\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/bytenik/ravendb uniquecollections\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/492\n> Commit Summary\n> - UniqueConstraints now handles arrays by item rather than one big blob\n> \n> File Changes\n> - _M_Bundles/Raven.Bundles.UniqueConstraints/UniqueConstraintsDeleteTrigger.cs\n>   (23)\n> - _M_Bundles/Raven.Bundles.UniqueConstraints/UniqueConstraintsPutTrigger.cs (91)\n> \n> Patch Links\n> - https://github.com/ravendb/ravendb/pull/492.patch\n> - https://github.com/ravendb/ravendb/pull/492.diff\n>   \n>   \xe2\x80\x94\n>   Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/492.\n'"
493,10590397,"b""Need CLA, see: http://ravendb.net/contributing\n\nOn Wed, Nov 21, 2012 at 4:54 AM, John Simons notifications@github.comwrote:\n\n> Here is the error:\n> \n> c:\\Program Files\\RavenDB>Raven.Server.exe -install --service-name=SuperRaven\n> \n> Running a transacted installation.\n> \n> Beginning the Install phase of the installation.\n> See the contents of the log file for the c:\\Program Files\\RavenDB\\Raven.Server.e\n> xe assembly's progress.\n> The file is located at c:\\Program Files\\RavenDB\\Raven.Server.InstallLog.\n> Installing assembly 'c:\\Program Files\\RavenDB\\Raven.Server.exe'.\n> Affected parameters are:\n>    logtoconsole =\n>    assemblypath = c:\\Program Files\\RavenDB\\Raven.Server.exe\n>    logfile = c:\\Program Files\\RavenDB\\Raven.Server.InstallLog\n> Installing service SuperRaven...\n> Service SuperRaven has been successfully installed.\n> Creating EventLog source SuperRaven in log Application...\n> \n> The Install phase completed successfully, and the Commit phase is beginning.\n> See the contents of the log file for the c:\\Program Files\\RavenDB\\Raven.Server.e\n> xe assembly's progress.\n> The file is located at c:\\Program Files\\RavenDB\\Raven.Server.InstallLog.\n> Committing assembly 'c:\\Program Files\\RavenDB\\Raven.Server.exe'.\n> Affected parameters are:\n>    logtoconsole =\n>    assemblypath = c:\\Program Files\\RavenDB\\Raven.Server.exe\n>    logfile = c:\\Program Files\\RavenDB\\Raven.Server.InstallLog\n> \n> The Commit phase completed successfully.\n> \n> The transacted install has completed.\n> A critical error occurred while starting the server. Please see the exception de\n> tails bellow for more details:\n> System.InvalidOperationException: Failed to set the service recovery policy. Com\n> mand:\n> sc failure RavenDB reset= 500 actions= restart/60000\n> Exit code: 1060\n>    at Raven.Server.Program.SetRecoveryOptions(String serviceName)\n>    at Raven.Server.Program.InstallAndStart()\n>    at Raven.Server.Program.InteractiveRun(String[] args)\n>    at Raven.Server.Program.Main(String[] args)\n> Press any key to continue...\n> \n> ---\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/johnsimons/ravendb patch-1\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/493\n> Commit Summary\n> - Setting recovery windows service fails if service-name not equal to\n>   R\xe2\x80\xa6\n> \n> File Changes\n> - _M_ Raven.Server/Program.cs (2)\n> \n> Patch Links\n> - https://github.com/ravendb/ravendb/pull/493.patch\n> - https://github.com/ravendb/ravendb/pull/493.diff\n>   \n>   \xe2\x80\x94\n>   Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/493.\n"""
492,10692805,b'I sent it directly to Oren Eini one day ago. Thanks!\n'
492,10692853,b'This is already merged into the unstable build #2160:\nhttp://hibernatingrhinos.com/builds/ravendb-unstable-v2.0/2160-unstable\n'
492,10692864,"b'Fantastic, thanks!\n'"
495,10887520,"b'Hi,\nCan you send us a CLA?\n\nravendb.net/contributing\n\nOn Fri, Nov 30, 2012 at 10:46 AM, sebastian-claesson <\nnotifications@github.com> wrote:\n\n> If you use the LoadByUniqueConstraint ExtensionMethod as described in\n> the documentation:\n> \n> var existingUser = session.LoadByUniqueConstraint(x => x.Email, ""\n> john@gmail.com"");\n> \n> The keySelector.Body will evaluate to a UnaryExpression resulting in an\n> exception.\n> \n> This change introduces a check for this so that either a MemberExpression\n> \n> ## or UnaryExpression will work\n> \n> You can merge this Pull Request by running:\n> \n>   git pull https://github.com/sebastian-claesson/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/495\n> Commit Summary\n> - LoadByUniqueConstraint now also accepts UnaryExpression as\n>   keySelecto\xe2\x80\xa6\n> \n> File Changes\n> - _M_Bundles/Raven.Client.UniqueConstraints/UniqueConstraintExtensions.cs (65)\n> \n> Patch Links\n> - https://github.com/ravendb/ravendb/pull/495.patch\n> - https://github.com/ravendb/ravendb/pull/495.diff\n>   \n>   \xe2\x80\x94\n>   Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/495.\n'"
496,10930653,b'Can you send us a CLA?\nhttp://ravendb.net/contributing\n'
496,10930803,"b'Sent to support@ravendb.net\n\n## \n\nTorstein\n\nOn Dec 2, 2012, at 4:11 PM, Fitzchak Yitzchaki notifications@github.com wrote:\n\n> Can you send us a CLA?\n> http://ravendb.net/contributing\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub.\n'"
496,10931095,"b'Thanks. Does you changes are based on the v2, which is in this repository?\nhttps://github.com/ayende/ravendb\n'"
496,10931215,"b'No, these changes are based on master in ravendb/ravendb. I can see if anything needs changing and make a new request to v2 if you prefer that.\n'"
496,10931311,b'I see you have made some changes to that fork. I will update this pull request with the differences.\n'
496,10931350,"b'Thanks.\nYes, do a PR to v2 which is now in RC state.\n'"
495,11234159,"b'Ok, i have sent it in now, sorry it took so long.\n'"
499,12042812,"b'Merged, thanks!\n'"
499,12045163,"b""Regarding the Backbone and Underscore versions. I used the forks maintained by jrburke (creator of Require.js) that can be found at https://github.com/amdjs, which natively supports Require.js loading and doesn't require jQuery to exist as a global. In addition, I commented out registration of window.Backbone and window._, so RavenProfiler won't overwrite existing versions and won't leave any globals behind after initializing. It might be a bit aggressive, but personally I prefer it if a tool like RavenProfiler does not modify or add globals.\n\nBtw, sorry about the embarrassing bug.\n"""
499,12089026,"b'Thanks for your work, yes this is good!\n'"
499,12533085,"b'Hi, I updated this pull request with a fix for the problem mentioned here: https://groups.google.com/forum/?fromgroups=#!topic/ravendb/HD3k8VDn0P0\n\nPlease consider pulling this before merging into the main repository. \nAre there any plans for a new nuget release or prerelease of the current version in ayende/ravendb in the coming days?\n'"
499,12586093,b'Thanks. \nYes. Your previous commits already in the unstable builds. \nSee http://hibernatingrhinos.com/builds/ravendb-unstable-v2.0/2232-unstable\n'
499,12586284,"b'Do we also need to pull this one in now?\n\nOn Wed, Jan 23, 2013 at 9:33 AM, Fitzchak Yitzchaki <\nnotifications@github.com> wrote:\n\n> Thanks.\n> Yes. Your previous commits already in the unstable builds.\n> See\n> http://hibernatingrhinos.com/builds/ravendb-unstable-v2.0/2232-unstable\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/499#issuecomment-12586093.\n'"
499,12586388,"b'Yes, pulled to my fork.\n'"
499,12586447,"b""I'll pull to mine, then.\n\nOn Wed, Jan 23, 2013 at 9:44 AM, Fitzchak Yitzchaki <\nnotifications@github.com> wrote:\n\n> Yes, pulled to my fork.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/499#issuecomment-12586388.\n"""
500,12812360,"b""Hi,\ndo you have a CLA with us?\nravendb.net/contributing\n\nOn Tue, Jan 29, 2013 at 1:40 AM, jjchiw notifications@github.com wrote:\n\n> When executing EnsureDatabaseExist the index Raven/DocumentsByEntityName\n> were not created. And that caused and error in the studio. I had to stop\n> and start the server and the index will be created automatically. So I\n> added the index in the EnsureDatabaseExist extension method.\n> \n> Another thing\n> ServerClient and AsyncServerClient have the method CreateRequest but the\n> signature are different in the order of the parameters\n> (requestUrl,method)\n> \n> So the EnsureDatabaseExistsAsync and CreateDatabaseAsync methods in\n> MultiTenancyExtensions just didn't work just changed the order of the\n> \n> ## parameters\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/jjchiw/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/500\n> Commit Summary\n> - Creating db index Raven/DocumentsByEntityName\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Extensions/MultiTenancyExtensions.cs\n>   (11)\n> - _M_ Raven.Tests/Bugs/MultiTenancy/Basic.cs (36)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/500.patch\n> - https://github.com/ravendb/ravendb/pull/500.diff\n"""
500,12812645,"b""Noupe I don't have a CLA.\n\nI didn't read the last part of the ravendb.net/contributing.txt....my bad.....\n\nWell, errr....so maybe tomorrow I'll print the agreement, sign it, and send it.....\n\nThanks\n"""
500,12862146,b'Do I need to send it physically or can I send you the CLA digitally\n'
500,12862231,"b'Digitally is fine\n\nOn Wed, Jan 30, 2013 at 12:26 AM, jjchiw notifications@github.com wrote:\n\n> Do I need to send it physically or can I send you the CLA digitally\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/500#issuecomment-12862146.\n'"
500,13139442,"b'Thanks, pulled\n'"
502,13349602,"b""Work so far\n- Indexes can have an idle priority, so they're only ran when the db doesn't have anything else to do\n- Auto indexes can be put in idle automatically if they're not being used\n- Auto indexes will be taken out of idle if they are then queried\n- Manual indexes can be put in idle manually, and they stay like that\n- Temporary indexes have been deleted entirely, they no longer exist\n- Instead, they're all auto indexes\n- _all_ new indexes have their lucene data _in memory_ when first created - this reduces IO on index creation|\n- New indexes will be synced to disk when their memory usage exceeds a configured threshold\n\nNot done, needs doing\n- New indexes need syncing to disk once they're longer stale \n"""
502,13351181,b'![1330972684_rhino_rodeo_ride](https://f.cloud.github.com/assets/223758/143309/f084754c-7394-11e2-813b-c8a2676336b3.gif)\n'
502,13371889,b'This is now effectively a breaking change because of the configuration changes (I know there are some subtle API changes for IndexDefinition too)\n\nBreaking documentation change - removed all TempIndexes references from configuration\n    - Create:s/Temp/Auto/IndexesForAdHocQueries\n    - Temp/NewIndexInMemoryMaxMB\n'
502,13371922,"b'Following functionality needs adding to the issue tracker in a suitable form\n\nAdd UI/Admin functionality for setting indexes as \'forced idle\'\nAdd to studio ""delete all idle auto indexes""\nNeed to remove controls in the UI for promotion of temporary indexes and perhaps controls to force an index to become persisted to disk (as they\'re in memory by default when first created now)\n'"
502,13372403,b'![](http://i.imgur.com/94srocZ.gif)\n'
502,13374881,b'![](http://i.imgur.com/AX8iT.gif)\n\nTHE INDEXES WILL DO AS I TELL THEM\n'
502,13384129,"b'```\n    [Fact]\n    public void WillCreateWiderIndex()\n    {\n        using (var store = NewDocumentStore())\n        {\n            var queryResult = store.DatabaseCommands.Query(""dynamic"",\n                                                           new IndexQuery\n                                                           {\n                                                               Query = ""Name:3""\n                                                           },\n                                                           new string[0]);\n\n            Assert.Equal(""Auto/AllDocs/ByName"", queryResult.IndexName);\n\n            queryResult = store.DatabaseCommands.Query(""dynamic"",\n                                                           new IndexQuery\n                                                           {\n                                                               Query = ""Age:3""\n                                                           },\n                                                           new string[0]);\n\n            Assert.Equal(""Auto/AllDocs/ByAgeAndName"", queryResult.IndexName);\n\n            queryResult = store.DatabaseCommands.Query(""dynamic"",\n                                                           new IndexQuery\n                                                           {\n                                                               Query = ""Name:Ayende""\n                                                           },\n                                                           new string[0]);\n\n            Assert.Equal(""Auto/AllDocs/ByAgeAndName"", queryResult.IndexName);\n        }\n    }\n```\n\nSuccess, needs code review obviously as there are tons of things in there I\'m using wrongly,\n'"
502,13386034,b'![](http://i.imgur.com/GOwDa.gif)\n\nWOOP WOOP\n'
504,13389427,"b'Did you try calling `.SortByDistance()` after `.WithinRadiusOf(...)`? Like so:\n\n```\nvar results = session.Advanced.LuceneQuery<SpatialEntity>(""SpatialIndex"")\n    .WithinRadiusOf(500, 45.50955, -73.569133)\n    .SortByDistance()\n    .ToList();\n```\n'"
504,13389523,"b'@sibartlett The default is suppose to be sorted by distance in nearest to farthest, however as Ayende pointed out in RavenDB-852 this is only an issue when no criteria besides a radius is being used. This is what the test attached proves.\n'"
504,13389786,b'@nberardi Thank you for pointing me to the ticket!\n'
502,13467518,"b'I think you win the prize for most gifs in a github comment, nice work though!!\n'"
505,13481951,b'![txjtM](https://f.cloud.github.com/assets/223758/152411/4ca0f59a-75c4-11e2-9b7d-2c8e1463682c.gif)\n'
505,13483386,b'Should really be making this request of the 2.1 branch \n'
506,13647757,"b'Hi,\nCan you send us a CLA?\n\nOn Fri, Feb 15, 2013 at 3:24 PM, Jan Verhaeghe notifications@github.comwrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/janv8000/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/506\n> Commit Summary\n> - Fix intellisense for FailoverBehavior\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/FailoverBehavior.cshttps://github.com/ravendb/ravendb/pull/506/files#diff-0(3)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/506.patch\n> - https://github.com/ravendb/ravendb/pull/506.diff\n'"
505,13683443,b'![ZrsRjz7](https://f.cloud.github.com/assets/223758/164798/4f9475a8-78e7-11e2-86c2-c389bc28d639.gif)\n'
502,13927161,b'![](http://cdn.memegenerator.net/instances/400x/35227783.jpg)\n'
487,14361807,"b'WriteRaw & WriteRawValue are important pieces of a JsonConverter, what are the workarounds if you absolutely need these features?\n'"
487,14366968,"b""For what you'll need them? Can you show us a use case example that those methods are needed?\n"""
509,15032255,"b'Pulled into 2.5\n\nOn Sun, Mar 17, 2013 at 4:58 PM, Julien Patte notifications@github.comwrote:\n\n> This pull request adds a new hook that supersedes the actual\n> IConversionListener by\n> adding 2 more extension points in the document/entity conversion\n> operation. This hook is called _IExtendedConversionListener_ to avoid\n> introducing any breaking changes.\n> \n> This new listener has 4 methods, which are called _before and after_ the\n> document to entity and entity to document operations - while the actual\n> IConversionListener is only called _after_ these operations.\n> \n> The main interest of this new hook relies in its\n> BeforeConversionToEntity() extension point. This can be used to transform\n> an existing document before converting it into an entity, which allows data\n> migration scenarios similar to the one described in Ayende\'s posthttp://ayende.com/blog/66563/ravendb-migrations-rolling-updatesbut with a lot more flexibility. You could ""upgrade"" your document in any\n> way you want - for instance using several successive steps - without\n> relying on the current type definition of the entity being instanciated.\n> \n> ## This would make migration operations a lot easier to write and maintain.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/jpatte/ravendb newConvListener\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/509\n> Commit Summary\n> - Added IExtendedConversionListener\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/DocumentSessionListeners.cshttps://github.com/ravendb/ravendb/pull/509/files#diff-0(5)\n> - _M_ Raven.Client.Lightweight/Document/EntityToJson.cshttps://github.com/ravendb/ravendb/pull/509/files#diff-1(10)\n> - _M_\n>   Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cshttps://github.com/ravendb/ravendb/pull/509/files#diff-2(10)\n> - _M_ Raven.Client.Lightweight/DocumentStoreBase.cshttps://github.com/ravendb/ravendb/pull/509/files#diff-3(9)\n> - _A_\n>   Raven.Client.Lightweight/Listeners/IExtendedDocumentConversionListener.cshttps://github.com/ravendb/ravendb/pull/509/files#diff-4(36)\n> - _M_ Raven.Client.Lightweight/Raven.Client.Lightweight.csprojhttps://github.com/ravendb/ravendb/pull/509/files#diff-5(1)\n> - _M_ Raven.Client.Silverlight/Raven.Client.Silverlight.csprojhttps://github.com/ravendb/ravendb/pull/509/files#diff-6(3)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/509.patch\n> - https://github.com/ravendb/ravendb/pull/509.diff\n'"
511,15254493,"b'Hi,\nCan you send us a CLA?\nravendb.net/contributing\n\nOn Thu, Mar 21, 2013 at 7:45 PM, Neil Duncan notifications@github.comwrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/neilduncan/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/511\n> Commit Summary\n> - Throw exception when calling Distinct with an IEqualityComparer\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Linq/RavenQueryProviderProcessor.cshttps://github.com/ravendb/ravendb/pull/511/files#diff-0(10)\n> - _M_ Raven.Tests/Linq/UsingRavenQueryProvider.cshttps://github.com/ravendb/ravendb/pull/511/files#diff-1(39)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/511.patch\n> - https://github.com/ravendb/ravendb/pull/511.diff\n'"
511,15254794,"b""Hmm... I'll have to find a scanner. \n\nIs the pull request ok otherwise? Need me to amend anything?\n"""
511,15255004,"b""I think so\n\nOn Thursday, March 21, 2013, Neil Duncan wrote:\n\n> Hmm... I'll have to find a scanner.\n> \n> Is the pull request ok otherwise? Need me to amend anything?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/511#issuecomment-15254794\n> .\n"""
511,15255511,"b'Ok, just sent... \n'"
512,15826433,"b""Hi,\nI couldn't merge this into the 2.5 branch.\nCan you pull from that branch and send a new PR ?\n\nOn Wed, Apr 3, 2013 at 12:49 AM, Lev Gorodinski notifications@github.comwrote:\n\n> Addresses issue described on the mailing listhttps://groups.google.com/forum/#!topic/ravendb/Q8frTaSf0uc\n> :\n> \n> Raven throws InvalidCastException when loading a document under the\n> specified conditions:\n> - The document has no Raven-Clr-Type metadata. In this case it was due\n>   to it being imported via CSV.\n> - The document was loaded via Include<T, TInclude> from a referencing\n>   document.\n> \n> The exception details:\n> \n> System.InvalidCastException: Unable to cast object of type\n> 'Raven.Abstractions.Linq.DynamicJsonObject' to type '...'.\n> at Raven.Client.Document.DocumentSession.LoadT http://String%20id\n> \n> This does not happen when loading the same document directly. It seems\n> that the type information from TInclude isn't being passed on.\n> \n> One concern I have with this PR is the ordering of include results.\n> Currently, the code in MultiLoadOperation.Complete assumes that the\n> include results are in the same order as they were requested. This\n> \n> ## assumption is used to map each included result to the corresponding type.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/eulerfx/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/512\n> Commit Summary\n> - pass on type info with includes\n> - fix no-includes case in MultiLoadOperation\n> - added test for included type being passed on\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/Async/AsyncDocumentSession.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-0(10)\n> - _M_ Raven.Client.Lightweight/Document/AsyncMultiLoaderWithInclude.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-1(13)\n> - _M_\n>   Raven.Client.Lightweight/Document/Batches/LazyMultiLoadOperation.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-2(10)\n> - _M_\n>   Raven.Client.Lightweight/Document/Batches/LazyMultiLoaderWithInclude.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-3(6)\n> - _M_ Raven.Client.Lightweight/Document/DocumentSession.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-4(40)\n> - _M_\n>   Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-5(206)\n> - _M_ Raven.Client.Lightweight/Document/MultiLoaderWithInclude.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-6(13)\n> - _M_\n>   Raven.Client.Lightweight/Document/SessionOperations/MultiLoadOperation.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-7(18)\n> - _M_ Raven.Client.Lightweight/IAsyncDocumentSessionImpl.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-8(4)\n> - _M_ Raven.Client.Lightweight/IDocumentSessionImpl.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-9(6)\n> - _M_ Raven.Client.Lightweight/Shard/AsyncShardedDocumentSession.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-10(7)\n> - _M_ Raven.Client.Lightweight/Shard/ShardedDocumentSession.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-11(13)\n> - _A_\n>   Raven.Tests/MailingList/IncludeShouldPassOnTypeInfoWhenAvailable.cshttps://github.com/ravendb/ravendb/pull/512/files#diff-12(76)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/512/files#diff-13(1)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/512.patch\n> - https://github.com/ravendb/ravendb/pull/512.diff\n"""
512,15849829,"b'Which branch is that in the repo? I only see master, gh-pages and 2.0. Master is the one I pulled.\n'"
512,15850328,"b'https://github.com/ayende/ravendb/tree/2.5\n\nOn Wed, Apr 3, 2013 at 8:08 PM, Lev Gorodinski notifications@github.comwrote:\n\n> Which branch is that in the repo? I only see master, gh-pages and 2.0.\n> Master is the one I pulled.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/512#issuecomment-15849829\n> .\n'"
512,15859464,"b'Ahh, I was looking at wrong repo. Will re-pull and PR..\n'"
513,16095963,"b'Hi,\nCan you send us a CLA?\nravendb.net/contributing\n\nOn Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n\n> Current implementation updates complex properties as a string instead of\n> an object. For example: if I have an index which creates a Rating for\n> each Article (an aggregate of Votes). When this is updated by the\n> IndexedProperty Bundle what I get is:\n> \n> ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> \n> When it should be\n> \n> ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> \n> ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/mattdenn/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/513\n> Commit Summary\n> - Allows IndexedProperties Bundle to update complex properties\n> \n> File Changes\n> - _M_\n>   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cshttps://github.com/ravendb/ravendb/pull/513/files#diff-0(10)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/513.patch\n> - https://github.com/ravendb/ravendb/pull/513.diff\n'"
513,16106334,"b'What is a CLA?\n\n-----Original Message-----\nFrom: Ayende Rahien\nSent: 09/04/2013 2:12 AM\nTo: ravendb/ravendb\nCc: Matthew\nSubject: Re: [ravendb] Allow IndexedProperties Bundle to update complex properties as objects instead of incorrectly as a string (#513)\n\nHi,\nCan you send us a CLA?\nravendb.net/contributing\n\nOn Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n\n> Current implementation updates complex properties as a string instead of\n> an object. For example: if I have an index which creates a Rating for\n> each Article (an aggregate of Votes). When this is updated by the\n> IndexedProperty Bundle what I get is:\n> \n> ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> \n> When it should be\n> \n> ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> \n> ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/mattdenn/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/513\n> Commit Summary\n> - Allows IndexedProperties Bundle to update complex properties\n> \n> File Changes\n> - _M_\n>   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cshttps://github.com/ravendb/ravendb/pull/513/files#diff-0(10)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/513.patch\n> - https://github.com/ravendb/ravendb/pull/513.diff\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16095963\n'"
513,16106531,"b'Contributer License Agreement: ravendb.net/contributing\n\nOn Tue, Apr 9, 2013 at 2:02 PM, Matthew notifications@github.com wrote:\n\n> What is a CLA?\n> \n> -----Original Message-----\n> From: Ayende Rahien\n> Sent: 09/04/2013 2:12 AM\n> To: ravendb/ravendb\n> Cc: Matthew\n> Subject: Re: [ravendb] Allow IndexedProperties Bundle to update complex\n> properties as objects instead of incorrectly as a string (#513)\n> \n> Hi,\n> Can you send us a CLA?\n> ravendb.net/contributing\n> \n> On Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n> \n> > Current implementation updates complex properties as a string instead of\n> > an object. For example: if I have an index which creates a Rating for\n> > each Article (an aggregate of Votes). When this is updated by the\n> > IndexedProperty Bundle what I get is:\n> > \n> > ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> > \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> > \n> > When it should be\n> > \n> > ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> > \n> > ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/mattdenn/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/513\n> > Commit Summary\n> > - Allows IndexedProperties Bundle to update complex properties\n> > \n> > File Changes\n> > - _M_\n> >   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cs<\n> >   https://github.com/ravendb/ravendb/pull/513/files#diff-0>(10)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/513.patch\n> > - https://github.com/ravendb/ravendb/pull/513.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/ravendb/ravendb/pull/513#issuecomment-16095963\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16106334\n> .\n'"
513,16109529,"b'Sent from Windows Mail\n\nFrom: Ayende Rahien\nSent: \xe2\x80\x8eTuesday\xe2\x80\x8e, \xe2\x80\x8eApril\xe2\x80\x8e \xe2\x80\x8e09\xe2\x80\x8e, \xe2\x80\x8e2013 \xe2\x80\x8e2\xe2\x80\x8e:\xe2\x80\x8e12\xe2\x80\x8e \xe2\x80\x8eAM\nTo: ravendb/ravendb\nCc: Matthew\n\nHi,\nCan you send us a CLA?\nravendb.net/contributing\n\nOn Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n\n> Current implementation updates complex properties as a string instead of\n> an object. For example: if I have an index which creates a Rating for\n> each Article (an aggregate of Votes). When this is updated by the\n> IndexedProperty Bundle what I get is:\n> \n> ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> \n> When it should be\n> \n> ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> \n> ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> \n> You can merge this Pull Request by running\n> \n> git pull https://github.com/mattdenn/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n> https://github.com/ravendb/ravendb/pull/513\n> Commit Summary\n> - Allows IndexedProperties Bundle to update complex properties\n> \n> File Changes\n> - _M_\n>   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cshttps://github.com/ravendb/ravendb/pull/513/files#diff-0(10)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/513.patch\n> - https://github.com/ravendb/ravendb/pull/513.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub.\n'"
513,16157356,"b'I don\'t think that I got it. Where did you sent it to? And from what email?\n\nOn Tue, Apr 9, 2013 at 3:29 PM, Matthew notifications@github.com wrote:\n\n> Sent from Windows Mail\n> \n> From: Ayende Rahien\n> Sent: Tuesday, April 09, 2013 2:12 AM\n> To: ravendb/ravendb\n> Cc: Matthew\n> \n> Hi,\n> Can you send us a CLA?\n> ravendb.net/contributing\n> \n> On Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n> \n> > Current implementation updates complex properties as a string instead of\n> > an object. For example: if I have an index which creates a Rating for\n> > each Article (an aggregate of Votes). When this is updated by the\n> > IndexedProperty Bundle what I get is:\n> > \n> > ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> > \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> > \n> > When it should be\n> > \n> > ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> > \n> > ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/mattdenn/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/513\n> > Commit Summary\n> > - Allows IndexedProperties Bundle to update complex properties\n> > \n> > File Changes\n> > - _M_\n> >   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cs<\n> >   https://github.com/ravendb/ravendb/pull/513/files#diff-0>(10)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/513.patch\n> > - https://github.com/ravendb/ravendb/pull/513.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16109529\n> .\n'"
513,16167787,"b'I sent it as a reply\n\n-----Original Message-----\nFrom: Ayende Rahien\nSent: 10/04/2013 2:17 AM\nTo: ravendb/ravendb\nCc: Matthew\nSubject: Re: [ravendb] Allow IndexedProperties Bundle to update complex properties as objects instead of incorrectly as a string (#513)\n\nI don\'t think that I got it. Where did you sent it to? And from what email?\n\nOn Tue, Apr 9, 2013 at 3:29 PM, Matthew notifications@github.com wrote:\n\n> Sent from Windows Mail\n> \n> From: Ayende Rahien\n> Sent: Tuesday, April 09, 2013 2:12 AM\n> To: ravendb/ravendb\n> Cc: Matthew\n> \n> Hi,\n> Can you send us a CLA?\n> ravendb.net/contributing\n> \n> On Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n> \n> > Current implementation updates complex properties as a string instead of\n> > an object. For example: if I have an index which creates a Rating for\n> > each Article (an aggregate of Votes). When this is updated by the\n> > IndexedProperty Bundle what I get is:\n> > \n> > ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> > \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> > \n> > When it should be\n> > \n> > ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> > \n> > ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/mattdenn/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/513\n> > Commit Summary\n> > - Allows IndexedProperties Bundle to update complex properties\n> > \n> > File Changes\n> > - _M_\n> >   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cs<\n> >   https://github.com/ravendb/ravendb/pull/513/files#diff-0>(10)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/513.patch\n> > - https://github.com/ravendb/ravendb/pull/513.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16109529\n> .\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16157356\n'"
513,16167842,"b'I\'ll resend it to the the support address.\n\n-----Original Message-----\nFrom: Ayende Rahien\nSent: 10/04/2013 2:17 AM\nTo: ravendb/ravendb\nCc: Matthew\nSubject: Re: [ravendb] Allow IndexedProperties Bundle to update complex properties as objects instead of incorrectly as a string (#513)\n\nI don\'t think that I got it. Where did you sent it to? And from what email?\n\nOn Tue, Apr 9, 2013 at 3:29 PM, Matthew notifications@github.com wrote:\n\n> Sent from Windows Mail\n> \n> From: Ayende Rahien\n> Sent: Tuesday, April 09, 2013 2:12 AM\n> To: ravendb/ravendb\n> Cc: Matthew\n> \n> Hi,\n> Can you send us a CLA?\n> ravendb.net/contributing\n> \n> On Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote:\n> \n> > Current implementation updates complex properties as a string instead of\n> > an object. For example: if I have an index which creates a Rating for\n> > each Article (an aggregate of Votes). When this is updated by the\n> > IndexedProperty Bundle what I get is:\n> > \n> > ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839,\n> > \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}""\n> > \n> > When it should be\n> > \n> > ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839,\n> > \n> > ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]}\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/mattdenn/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/513\n> > Commit Summary\n> > - Allows IndexedProperties Bundle to update complex properties\n> > \n> > File Changes\n> > - _M_\n> >   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cs<\n> >   https://github.com/ravendb/ravendb/pull/513/files#diff-0>(10)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/513.patch\n> > - https://github.com/ravendb/ravendb/pull/513.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16109529\n> .\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16157356\n'"
513,16170986,"b'Sent from Windows Mail\n\nFrom: Matthew\nSent: \xe2\x80\x8eWednesday\xe2\x80\x8e, \xe2\x80\x8eApril\xe2\x80\x8e \xe2\x80\x8e10\xe2\x80\x8e, \xe2\x80\x8e2013 \xe2\x80\x8e7\xe2\x80\x8e:\xe2\x80\x8e07\xe2\x80\x8e \xe2\x80\x8eAM\nTo: ravendb/ravendb\n\nI\'ll resend it to the the support address.\n\nFrom: Ayende Rahien\nSent: 10/04/2013 2:17 AM\nTo: ravendb/ravendb\nCc: Matthew\nSubject: Re: [ravendb] Allow IndexedProperties Bundle to update complex properties as objects instead of incorrectly as a string (#513)\n\nI don\'t think that I got it. Where did you sent it to? And from what email? \n\nOn Tue, Apr 9, 2013 at 3:29 PM, Matthew notifications@github.com wrote: \n\n> Sent from Windows Mail \n> \n> From: Ayende Rahien \n> Sent: Tuesday, April 09, 2013 2:12 AM \n> To: ravendb/ravendb \n> Cc: Matthew \n> \n> Hi, \n> Can you send us a CLA? \n> ravendb.net/contributing \n> \n> On Tue, Apr 9, 2013 at 4:28 AM, Matthew notifications@github.com wrote: \n> \n> > Current implementation updates complex properties as a string instead of \n> > an object. For example: if I have an index which creates a Rating for \n> > each Article (an aggregate of Votes). When this is updated by the \n> > IndexedProperty Bundle what I get is: \n> > \n> > ""Rating"": ""{\\""Score\\""::40754086, \\""Count\\"":111, \\""VoteTotal\\"":1839, \n> > \\""WeightTotal\\"":598, \\""VoteCounts\\"":[22,19,24,18,28]}"" \n> > \n> > When it should be \n> > \n> > ""Rating"": {""Score""::40754086, ""Count"":111, ""VoteTotal"":1839, \n> > \n> > ## ""WeightTotal"":598, ""VoteCounts"":[22,19,24,18,28]} \n> > \n> > You can merge this Pull Request by running \n> > \n> > git pull https://github.com/mattdenn/ravendb master \n> > \n> > Or view, comment on, or merge it at: \n> > \n> > https://github.com/ravendb/ravendb/pull/513 \n> > Commit Summary \n> > - Allows IndexedProperties Bundle to update complex properties \n> > \n> > File Changes \n> > - _M_ \n> >   Raven.Database/Bundles/IndexedProperties/IndexedPropertiesTrigger.cs< \n> >   https://github.com/ravendb/ravendb/pull/513/files#diff-0>(10) \n> > \n> > Patch Links: \n> > - https://github.com/ravendb/ravendb/pull/513.patch \n> > - https://github.com/ravendb/ravendb/pull/513.diff \n> > \n> > \xe2\x80\x94 \n> > Reply to this email directly or view it on GitHub. \n> \n> \xe2\x80\x94 \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/513#issuecomment-16109529 \n> . \n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub.\n'"
514,16346332,"b""Pulled\n\nOn Sat, Apr 13, 2013 at 2:44 AM, semihokur notifications@github.com wrote:\n\n> I'm building a refactoring tool that automatically converts\n> Thread-ThreadPool work items to corresponding Task work items. I applied my\n> \n> ## tool and then manually checked whether these changes are OK.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/semihokur/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/514\n> Commit Summary\n> - Refactoring from ThreadPool and Thread work items to corresponding\n>   Task constructs\n> \n> File Changes\n> - _M_ Raven.Client.Silverlight/DotNetZip/ParallelDeflateOutputStream.cshttps://github.com/ravendb/ravendb/pull/514/files#diff-0(14)\n> - _M_ Raven.Database/Bundles/Replication/Tasks/ReplicationTask.cshttps://github.com/ravendb/ravendb/pull/514/files#diff-1(14)\n> - _M_ Raven.Database/Storage/Esent/Backup/BackupOperation.cshttps://github.com/ravendb/ravendb/pull/514/files#diff-2(2)\n> - _M_ Raven.Database/Storage/Esent/TransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/514/files#diff-3(3)\n> - _M_ Raven.Database/Storage/Managed/Backup/BackupOperation.cshttps://github.com/ravendb/ravendb/pull/514/files#diff-4(2)\n> - _M_ Raven.Database/Storage/Managed/TransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/514/files#diff-5(3)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/514.patch\n> - https://github.com/ravendb/ravendb/pull/514.diff\n"""
516,17294014,"b'Awesome, Dean! I could really use this myself. Nice work.\n'"
516,17382305,"b""Hi,\nI can't merge this pull request because it generate conflict against 2.5\nCan you send this again against the 2.5 branch?\n\nOn Wed, May 1, 2013 at 6:02 PM, deanward81 notifications@github.com wrote:\n\n> ## Added support into PeriodicBackupTask and studio\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/deanward81/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/516\n> Commit Summary\n> - Added support for Azure backups to PeriodicBackupTask\n> \n> File Changes\n> - _M_ Raven.Abstractions/Data/PeriodicBackupSetup.cshttps://github.com/ravendb/ravendb/pull/516/files#diff-0(2)\n> - _M_ Raven.Database/Bundles/PeriodicBackups/PeriodicBackupTask.cshttps://github.com/ravendb/ravendb/pull/516/files#diff-1(36)\n> - _M_ Raven.Database/Raven.Database.csprojhttps://github.com/ravendb/ravendb/pull/516/files#diff-2(20)\n> - _M_ Raven.Database/packages.confighttps://github.com/ravendb/ravendb/pull/516/files#diff-3(5)\n> - _M_ Raven.Server/App.confighttps://github.com/ravendb/ravendb/pull/516/files#diff-4(4)\n> - _M_ Raven.Studio/Assets/Types.xamlhttps://github.com/ravendb/ravendb/pull/516/files#diff-5(1)\n> - _M_ Raven.Studio/Commands/SaveSettingsCommand.cshttps://github.com/ravendb/ravendb/pull/516/files#diff-6(2)\n> - _M_\n>   Raven.Studio/Features/Settings/PeriodicBackupSettingsSectionView.xamlhttps://github.com/ravendb/ravendb/pull/516/files#diff-7(29)\n> - _A_\n>   Raven.Studio/Infrastructure/Converters/VisibilityByAnyParamEqualityConverter.cshttps://github.com/ravendb/ravendb/pull/516/files#diff-8(28)\n> - _M_\n>   Raven.Studio/Infrastructure/Converters/VisibilityByParamInEqualityConverter.cshttps://github.com/ravendb/ravendb/pull/516/files#diff-9(2)\n> - _M_ Raven.Studio/Models/PeriodicBackupSettingsSectionModel.cshttps://github.com/ravendb/ravendb/pull/516/files#diff-10(10)\n> - _M_ Raven.Studio/Raven.Studio.csprojhttps://github.com/ravendb/ravendb/pull/516/files#diff-11(1)\n> - _M_ Raven.Tryouts/app.confighttps://github.com/ravendb/ravendb/pull/516/files#diff-12(4)\n> - _M_ Raven.VisualHost/app.confighttps://github.com/ravendb/ravendb/pull/516/files#diff-13(4)\n> - _M_ Raven.Web/Web.confighttps://github.com/ravendb/ravendb/pull/516/files#diff-14(4)\n> - _M_ packages/repositories.confighttps://github.com/ravendb/ravendb/pull/516/files#diff-15(1)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/516.patch\n> - https://github.com/ravendb/ravendb/pull/516.diff\n"""
516,17948407,"b'Will do, might not be until the end of the week though.\n'"
517,18132996,"b""Can you send us a CLA ?\nravendb.net/contributing\n\nOn Mon, May 20, 2013 at 4:00 AM, Floris Robbemont\nnotifications@github.comwrote:\n\n> This was caused because the ajaxComplete event (in profiler.js,\n> MvcIntegration project) was bound to the window object. JQuery-migrate\n> would route this to the document object (this was changed in JQuery 1.8).\n> The routing didn't do a good job though because it would lose the\n> xhrRequest object along the way causing a null reference exception.\n> \n> Since you're bundling Jquery 1.8.3 with the project I though it would be\n> \n> ## OK to bind it to the document instead.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/florisrobbemont/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/517\n> Commit Summary\n> - Fixed issue where JQuery migrate would cause null-exception in\n>   ProfilerData.handleResponse\n> \n> File Changes\n> - _M_ Raven.Client.MvcIntegration/js/profiler.jshttps://github.com/ravendb/ravendb/pull/517/files#diff-0(2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/517.patch\n> - https://github.com/ravendb/ravendb/pull/517.diff\n"""
517,18230927,"b""Hi Ayende,\n\nAttached you'll find a signed copy of the CLA.\n\nKind regards,\n\nFloris Robbemont\n\nSent from Windows Mail\n\nFrom: Ayende Rahien\nSent: \xe2\x80\x8eMonday\xe2\x80\x8e, \xe2\x80\x8eMay\xe2\x80\x8e \xe2\x80\x8e20\xe2\x80\x8e, \xe2\x80\x8e2013 \xe2\x80\x8e7\xe2\x80\x8e:\xe2\x80\x8e37\xe2\x80\x8e \xe2\x80\x8eAM\nTo: ravendb/ravendb\nCc: Floris Robbemont\n\nCan you send us a CLA ?\nravendb.net/contributing\n\nOn Mon, May 20, 2013 at 4:00 AM, Floris Robbemont\nnotifications@github.comwrote:\n\n> This was caused because the ajaxComplete event (in profiler.js,\n> MvcIntegration project) was bound to the window object. JQuery-migrate\n> would route this to the document object (this was changed in JQuery 1.8).\n> The routing didn't do a good job though because it would lose the\n> xhrRequest object along the way causing a null reference exception.\n> \n> Since you're bundling Jquery 1.8.3 with the project I though it would be\n> \n> ## OK to bind it to the document instead.\n> \n> You can merge this Pull Request by running\n> \n> git pull https://github.com/florisrobbemont/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n> https://github.com/ravendb/ravendb/pull/517\n> Commit Summary\n> - Fixed issue where JQuery migrate would cause null-exception in\n>   ProfilerData.handleResponse\n> \n> File Changes\n> - _M_ Raven.Client.MvcIntegration/js/profiler.jshttps://github.com/ravendb/ravendb/pull/517/files#diff-0(2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/517.patch\n> - https://github.com/ravendb/ravendb/pull/517.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub.\n"""
517,18259246,"b""Hi,\nNothing was attached\nPlease send it to support@ravendb.net\n\nOn Tue, May 21, 2013 at 10:00 PM, Floris Robbemont <notifications@github.com\n\n> wrote:\n> \n> Hi Ayende,\n> \n> Attached you'll find a signed copy of the CLA.\n> \n> Kind regards,\n> \n> Floris Robbemont\n> \n> Sent from Windows Mail\n> \n> From: Ayende Rahien\n> Sent: Monday, May 20, 2013 7:37 AM\n> To: ravendb/ravendb\n> Cc: Floris Robbemont\n> \n> Can you send us a CLA ?\n> ravendb.net/contributing\n> \n> On Mon, May 20, 2013 at 4:00 AM, Floris Robbemont\n> notifications@github.comwrote:\n> \n> > This was caused because the ajaxComplete event (in profiler.js,\n> > MvcIntegration project) was bound to the window object. JQuery-migrate\n> > would route this to the document object (this was changed in JQuery\n> > 1.8).\n> > The routing didn't do a good job though because it would lose the\n> > xhrRequest object along the way causing a null reference exception.\n> > \n> > Since you're bundling Jquery 1.8.3 with the project I though it would be\n> > \n> > ## OK to bind it to the document instead.\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/florisrobbemont/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/517\n> > Commit Summary\n> > - Fixed issue where JQuery migrate would cause null-exception in\n> >   ProfilerData.handleResponse\n> > \n> > File Changes\n> > - _M_ Raven.Client.MvcIntegration/js/profiler.js<\n> >   https://github.com/ravendb/ravendb/pull/517/files#diff-0>(2)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/517.patch\n> > - https://github.com/ravendb/ravendb/pull/517.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/517#issuecomment-18230927\n> .\n"""
517,18261041,"b""Hi,\nGuess that GitHub removed the attachment.\n\nDate: Tue, 21 May 2013 23:11:23 -0700\nFrom: notifications@github.com\nTo: ravendb@noreply.github.com\nCC: florisrobbemont@hotmail.nl\nSubject: Re: [ravendb] Fixed issue where JQuery migrate would cause null-exception in ProfilerData.handleResponse (#517)\n\nHi,\n\nNothing was attached\n\nPlease send it to support@ravendb.net\n\nOn Tue, May 21, 2013 at 10:00 PM, Floris Robbemont <notifications@github.com\n\n> wrote:\n> \n> Hi Ayende,\n> \n> Attached you'll find a signed copy of the CLA.\n> \n> Kind regards,\n> \n> Floris Robbemont\n> \n> Sent from Windows Mail\n> \n> From: Ayende Rahien\n> \n> Sent: Monday, May 20, 2013 7:37 AM\n> \n> To: ravendb/ravendb\n> \n> Cc: Floris Robbemont\n> \n> Can you send us a CLA ?\n> \n> ravendb.net/contributing\n> \n> On Mon, May 20, 2013 at 4:00 AM, Floris Robbemont\n> \n> notifications@github.comwrote:\n> \n> > This was caused because the ajaxComplete event (in profiler.js,\n> > \n> > MvcIntegration project) was bound to the window object. JQuery-migrate\n> > \n> > would route this to the document object (this was changed in JQuery\n> \n> 1.8).\n> \n> > The routing didn't do a good job though because it would lose the\n> > \n> > xhrRequest object along the way causing a null reference exception.\n> > \n> > Since you're bundling Jquery 1.8.3 with the project I though it would be\n> > \n> > OK to bind it to the document instead.\n> > \n> > ---\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/florisrobbemont/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/517\n> > \n> > Commit Summary\n> > - Fixed issue where JQuery migrate would cause null-exception in\n> > \n> > ProfilerData.handleResponse\n> > \n> > File Changes\n> > - _M_ Raven.Client.MvcIntegration/js/profiler.js<\n> \n> https://github.com/ravendb/ravendb/pull/517/files#diff-0>(2)\n> \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/517.patch\n> > - https://github.com/ravendb/ravendb/pull/517.diff\n> \n> \xe2\x80\x94\n> \n> Reply to this email directly or view it on GitHub.\n> \n> \xe2\x80\x94\n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/517#issuecomment-18230927\n> \n> .\n\n\xe2\x80\x94\nReply to this email directly or view it on GitHub.                    \n"""
517,18326412,"b""Thanks!\n\nOn Wed, May 22, 2013 at 10:09 AM, Floris Robbemont <\nflorisrobbemont@hotmail.nl> wrote:\n\n> Hi,\n> \n> Guess that GitHub removed the attachment.\n> \n> ---\n> \n> Date: Tue, 21 May 2013 23:11:23 -0700\n> From: notifications@github.com\n> To: ravendb@noreply.github.com\n> CC: florisrobbemont@hotmail.nl\n> Subject: Re: [ravendb] Fixed issue where JQuery migrate would cause\n> null-exception in ProfilerData.handleResponse (#517)\n> \n> Hi,\n> Nothing was attached\n> Please send it to support@ravendb.net\n> \n> On Tue, May 21, 2013 at 10:00 PM, Floris Robbemont <\n> notifications@github.com\n> \n> > wrote:\n> > \n> > Hi Ayende,\n> > \n> > Attached you'll find a signed copy of the CLA.\n> > \n> > Kind regards,\n> > \n> > Floris Robbemont\n> > \n> > Sent from Windows Mail\n> > \n> > From: Ayende Rahien\n> > Sent: Monday, May 20, 2013 7:37 AM\n> > To: ravendb/ravendb\n> > Cc: Floris Robbemont\n> > \n> > Can you send us a CLA ?\n> > ravendb.net/contributing\n> > \n> > On Mon, May 20, 2013 at 4:00 AM, Floris Robbemont\n> > notifications@github.comwrote:\n> > \n> > > This was caused because the ajaxComplete event (in profiler.js,\n> > > MvcIntegration project) was bound to the window object. JQuery-migrate\n> > > would route this to the document object (this was changed in JQuery\n> > > 1.8).\n> > > The routing didn't do a good job though because it would lose the\n> > > xhrRequest object along the way causing a null reference exception.\n> > > \n> > > Since you're bundling Jquery 1.8.3 with the project I though it would\n> > > be\n> > > \n> > > ## OK to bind it to the document instead.\n> > > \n> > > You can merge this Pull Request by running\n> > > \n> > > git pull https://github.com/florisrobbemont/ravendb master\n> > > \n> > > Or view, comment on, or merge it at:\n> > > \n> > > https://github.com/ravendb/ravendb/pull/517\n> > > Commit Summary\n> > > - Fixed issue where JQuery migrate would cause null-exception in\n> > >   ProfilerData.handleResponse\n> > > \n> > > File Changes\n> > > - _M_ Raven.Client.MvcIntegration/js/profiler.js<\n> > >   https://github.com/ravendb/ravendb/pull/517/files#diff-0>(2)\n> > > \n> > > Patch Links:\n> > > - https://github.com/ravendb/ravendb/pull/517.patch\n> > > - https://github.com/ravendb/ravendb/pull/517.diff\n> > > \n> > > \xe2\x80\x94\n> > > Reply to this email directly or view it on GitHub.\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ravendb/ravendb/pull/517#issuecomment-18230927>\n> > .\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/517#issuecomment-18259246\n> .\n"""
518,18459834,"b""Hi,\nI couldn't merge this to the 2.5 branch, can you re-issue the pull request\nagainst 2.5?\n\nOn Sat, May 25, 2013 at 5:45 PM, jahmai notifications@github.com wrote:\n\n> ## http://issues.hibernatingrhinos.com/issue/RavenDB-1058\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/criticalarc/ravendb RavenDB-1058\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/518\n> Commit Summary\n> - RavenDB-1058\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Indexes/AbstractIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/518/files#diff-0(5)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/518.patch\n> - https://github.com/ravendb/ravendb/pull/518.diff\n"""
518,18463520,b'https://github.com/ayende/ravendb/pull/345\n'
518,18463629,"b""Oh, sorry I misunderstood... 2.5 doesn't need the fix, it already uses 'await' keyword instead of Task.Result\n"""
519,19133075,"b'James,\nDo you have a CLA with us?\nravendb.net/contributing\n\nOn Sat, Jun 8, 2013 at 12:07 AM, James Babco notifications@github.comwrote:\n\n> Very simple update to so the cascade delete operation supports recursion.\n> Before, they were restricted to a single parent-child pair. Now it will\n> \n> ## flow until hierarchy terminates.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/jbabco/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/519\n> Commit Summary\n> - add recursion to cascadedeletetrigger\n> - fixup whitespace\n> - better merge with original\n> \n> File Changes\n> - _M_ Bundles/Raven.Bundles.CascadeDelete/CascadeDeleteTrigger.cshttps://github.com/ravendb/ravendb/pull/519/files#diff-0(104)\n> - _M_ Bundles/Raven.Bundles.Tests/CascadeDelete/CascadeDelete.cshttps://github.com/ravendb/ravendb/pull/519/files#diff-1(801)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/519.patch\n> - https://github.com/ravendb/ravendb/pull/519.diff\n'"
519,19133740,b'Just sent.\n'
519,19133906,"b""Hi,\nI can't merge this with the 2.5 branch, can you check this?\n\nOn Sat, Jun 8, 2013 at 12:22 AM, James Babco notifications@github.comwrote:\n\n> Just sent.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/519#issuecomment-19133740\n> .\n"""
519,19138531,b'I knew to git/github.  Should I make another pull request for the ayende/ravendb 2.5 branch to replace this?\n'
519,19138573,"b'Yes, please\n\nOn Sat, Jun 8, 2013 at 2:35 AM, James Babco notifications@github.comwrote:\n\n> I knew to git/github. Should I make another pull request for the\n> ayende/ravendb 2.5 branch to replace this?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/519#issuecomment-19138531\n> .\n'"
523,21393929,"b'There is really no need to do something like that. You can do this:\n\nhttp://stackoverflow.com/questions/485268/whats-the-best-way-to-set-a-windows-service-description-in-net\n\nAlso, please send us a CLA for contributing: ravendb.net/contributing\n'"
524,21689955,"b'Can you send us a CLA?\nravendb.net/contributing\n\nOn Sun, Jul 28, 2013 at 11:00 PM, kieran gorman notifications@github.comwrote:\n\n> This will make the readme render as markdown on the github project\n> homepage:\n> \n> ## [image: ravenmd]https://f.cloud.github.com/assets/1994486/868735/308923d6-f7c0-11e2-8228-3bb199e6eb6e.PNG\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/kjgorman/ravendb kjgorman/markdown_readme\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/524\n> Commit Summary\n> - Alter readme extension from .txt to .md\n> \n> File Changes\n> - _R_ readme.mdhttps://github.com/ravendb/ravendb/pull/524/files#diff-0(0)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/524.patch\n> - https://github.com/ravendb/ravendb/pull/524.diff\n'"
524,21690325,"b""Yep, sorry, skimmed the contributing and missed that last line :blush: -- it's just left my outbox.\n"""
525,21987435,"b""Do you have a CLA with us?\nravendb.net/contributing\n\nOn Thu, Aug 1, 2013 at 10:32 PM, bczifra notifications@github.com wrote:\n\n> Added an AbstractIndexReaderWarmer plugin that is passed the new\n> indexreader created from the indexwriter. The plugin can then do things\n> like initialize field cache values before the indexreader is returned. That\n> way, the first query to hit the fieldcache for things like sorting or\n> faceting doesn't suffer from having to wait for a regeneration of the\n> fieldcache. This works by assigning an IndexReaderWarmersWrapper of type\n> IndexWriter.IndexReaderWarmer as the MergedSegmentWarmer of the index\n> writer. The IndexReaderWarmersWrapper iterates through the\n> AbstractIndexReaderWarmer implementations and calls WarmIndexReader for\n> \n> ## each of them, passing the newly generated indexreader.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/bczifra/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/525\n> Commit Summary\n> - Added AbstractIndexReaderWarmer plugin\n> - Assigning indexreaderwarmer for RamWriter\n> - Renamed IndexWarmers to IndexReaderWarmers\n> - Renamed IndexWarmers to IndexReaderWarmers\n> \n> File Changes\n> - _M_ Raven.Database/DocumentDatabase.cshttps://github.com/ravendb/ravendb/pull/525/files#diff-0(6)\n> - _M_ Raven.Database/Indexing/Index.cshttps://github.com/ravendb/ravendb/pull/525/files#diff-1(5)\n> - _A_ Raven.Database/Indexing/IndexReaderWarmersWrapper.cshttps://github.com/ravendb/ravendb/pull/525/files#diff-2(27)\n> - _M_ Raven.Database/Indexing/RavenIndexWriter.cshttps://github.com/ravendb/ravendb/pull/525/files#diff-3(16)\n> - _M_ Raven.Database/Indexing/WorkContext.cshttps://github.com/ravendb/ravendb/pull/525/files#diff-4(1)\n> - _A_ Raven.Database/Plugins/AbstractIndexReaderWarmer.cshttps://github.com/ravendb/ravendb/pull/525/files#diff-5(35)\n> - _M_ Raven.Database/Raven.Database.csprojhttps://github.com/ravendb/ravendb/pull/525/files#diff-6(2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/525.patch\n> - https://github.com/ravendb/ravendb/pull/525.diff\n"""
525,22036221,b'I do now :) Just left my outbox.\n'
525,22068491,"b'Thanks, pulled\n'"
527,22435444,"b""Just in case someone doesn't see the google groups thread first:\n\nOh and, you weren't setting Customer2Id in Order.\n\nOn Saturday, August 10, 2013 10:09:33 AM UTC+3, georgiosd wrote:\nYou have a bug - it should be Include(x => x.Customer2Id).\n"""
527,22436921,"b""You cannot do includes on the id property. That isn't supported.\n"""
526,22455124,"b""found the issue and fixed it,\nshould be in the next build\n\nOn Fri, Aug 9, 2013 at 11:04 PM, Arve Knudsen notifications@github.comwrote:\n\n> I've added a test for using Include with Load where the property referred\n> to by Include is a string. Include currently fails to take TInclude into\n> \n> ## account when generating the REST include parameter.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/aknuds1/ravendb string-property-include\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/526\n> Commit Summary\n> - Add test for Load/Include<T, TInclude> with string type referring\n>   property\n> \n> File Changes\n> - _M_ Raven.Tests/Queries/Includes.cshttps://github.com/ravendb/ravendb/pull/526/files#diff-0(25)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/526.patch\n> - https://github.com/ravendb/ravendb/pull/526.diff\n"""
526,22456654,"b'@DanielDar Cool, appreciate it! Will you include my test as well?\n'"
526,22456710,"b'yes\n\nOn Sun, Aug 11, 2013 at 3:01 PM, Arve Knudsen notifications@github.comwrote:\n\n> @DanielDar https://github.com/DanielDar Cool, appreciate it! Will you\n> include my test as well?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/526#issuecomment-22456654\n> .\n'"
526,22456745,b'Awesome.\n'
528,22935142,"b'Hi,\nCan you send us CLA for this?\nravendb.net/contributing\n\nOn Mon, Aug 19, 2013 at 11:36 PM, CosminLazar notifications@github.comwrote:\n\n> Hello, by the looks of it, you removed the URL query string double\n> encoding, but forgot to update the MultiGetHttpRequest.\n> \n> In the pull request you can also find a failing unit test with a\n> corresponding description of the problem.\n> \n> Best regards,\n> \n> ## Cosmin\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/CosminLazar/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/528\n> Commit Summary\n> - Eliminated the double URL decoding from the MultiGet\n> \n> File Changes\n> - _M_ Raven.Database/Server/Responders/MultiGet.cshttps://github.com/ravendb/ravendb/pull/528/files#diff-0(13)\n> - _A_ Raven.Tests/Bugs/MultiGetDoesNotUrlDecodeTwice.cshttps://github.com/ravendb/ravendb/pull/528/files#diff-1(54)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/528/files#diff-2(1)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/528.patch\n> - https://github.com/ravendb/ravendb/pull/528.diff\n'"
528,22936205,b'Done!\n'
529,23216302,b'https://github.com/ayende/ravendb/pull/263\n'
529,23222278,b'Pulled\n'
530,23379218,"b'Pulled, thanks\n\nOn Tue, Aug 27, 2013 at 5:36 PM, Jim Geurts notifications@github.comwrote:\n\n> Related to\n> \n> ## https://groups.google.com/forum/#!msg/ravendb/NOHEtqVFRJ8/WKPZaW0uUm4J\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/jgeurts/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/530\n> Commit Summary\n> - Add failing tests for nullable enum in multimap index\n> \n> File Changes\n> - _A_ Raven.Tests/Bugs/MultiMap/MultiMapWithNullableEnum.cshttps://github.com/ravendb/ravendb/pull/530/files#diff-0(94)\n> - _A_\n>   Raven.Tests/Bugs/MultiMap/MultiMapWithNullableEnumAndCoalescingOperator.cshttps://github.com/ravendb/ravendb/pull/530/files#diff-1(94)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/530/files#diff-2(2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/530.patch\n> - https://github.com/ravendb/ravendb/pull/530.diff\n'"
531,23645035,"b""Hi,\nDo you have a CLA with us?\nhttp://ravendb.net/contributing\n\nCan you explain a bit what you have done, and why?\n\nOn Mon, Sep 2, 2013 at 10:37 AM, xorbix notifications@github.com wrote:\n\n> ## Thanks\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/robashton/ravendb mono\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/531\n> Commit Summary\n> - Removed obsolete prefixes on some JS paths, causing issues in mono\n>   which is less forgiving about such things\n> - More path changes for mono happiness\n> - Modified all usages of ThreadLocal to deal with both mono/windows\n>   behaviour - not sure how long it will take for my pull request to Mono to\n>   get through given it has kick started a debate\n> - Changes to the core RavenDB server program to deal with mono\n>   execution\n> - More fixes to make things work on Mono\n> - Added a WindowsExclusiveFactAttribute for Mono purposes\n> - Removed log file I didn't want to commmit\n> - Merged changes from garuma\n> - Finished that botched merge\n> - Removed obsolete git file\n> - Re-added the VB solution\n> - Added AssemblyInfo files for mono build\n> - Removed the VB support for Mono\n> - Moved a bug class into a case insensitve path\n> - Updated VS Project with new path for WhenRavenClrTypeNotFound.cs\n> - Merge branch 'master' of github.com:robashton/ravendb into mono\n> - Added a build script to the mono branch\n> - Removed the WindowsExclusiveFact from tests that didn't need it\n> - Folks, that's one of the dumbest and most dangerous mistake one can\n>   make\n> - Break folder delete\n> - This one is weird, the actual returned HTTP query has some 3 bytes\n>   junk prepended. Might be a Mono bug.\n> - Sanitizing paths for filesystem access, creation and deletion needs\n>   to be really done for this project\n> - Merge branch 'master' of https://github.com/garuma/ravendb into mono\n> - Merged changes from unstable master\n> - Merged changes from Ayende Master\n> \n> File Changes\n> - _M_ .gitignorehttps://github.com/ravendb/ravendb/pull/531/files#diff-0(1)\n> - _M_ Bundles/Raven.Bundles.Authorization/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-1(0)\n> - _M_ Bundles/Raven.Bundles.CascadeDelete/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-2(0)\n> - _M_ Bundles/Raven.Bundles.Expiration/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-3(0)\n> - _M_ Bundles/Raven.Bundles.IndexReplication/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-4(0)\n> - _M_ Bundles/Raven.Bundles.Replication/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-5(0)\n> - _M_ Bundles/Raven.Bundles.Tests/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-6(0)\n> - _M_ Bundles/Raven.Bundles.Tryouts/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-7(0)\n> - _M_ Bundles/Raven.Bundles.Versioning/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-8(0)\n> - _M_ Bundles/Raven.Client.Authorization/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-9(0)\n> - _M_ ETL/Raven.StackOverflow.Etl/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-10(0)\n> - _M_ Raven.Abstractions/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-11(0)\n> - _M_ Raven.Client.Embedded/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-12(0)\n> - _M_ Raven.Client.Lightweight/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-13(0)\n> - _M_\n>   Raven.Client.Lightweight/Shard/ShardStrategy/ShardAccess/ParallelExtensions.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-14(5)\n> - _M_ Raven.Client.Tests/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-15(0)\n> - _M_ Raven.Database/Plugins/Builtins/CreateFolderIcon.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-16(4)\n> - _M_ Raven.Database/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-17(0)\n> - _M_ Raven.Database/Server/Responders/AddIncludesCommand.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-18(2)\n> - _M_ Raven.Database/Server/Responders/Queries.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-19(40)\n> - _M_ Raven.Database/Server/WebUI/js/raven-ui.documents.jshttps://github.com/ravendb/ravendb/pull/531/files#diff-20(2)\n> - _M_ Raven.Database/Server/WebUI/js/raven-ui.jshttps://github.com/ravendb/ravendb/pull/531/files#diff-21(72)\n> - _M_ Raven.Database/Server/WebUI/js/rdb.jsonEditor/rdb.jsonEditor.jshttps://github.com/ravendb/ravendb/pull/531/files#diff-22(2)\n> - _M_ Raven.Http/HttpServer.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-23(4)\n> - _M_ Raven.Http/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-24(0)\n> - _M_ Raven.Performance/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-25(0)\n> - _M_ Raven.Scenarios/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-26(0)\n> - _M_ Raven.Server/Program.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-27(2)\n> - _M_ Raven.Server/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-28(0)\n> - _A_ Raven.Server/log.txthttps://github.com/ravendb/ravendb/pull/531/files#diff-29(76)\n> - _M_ Raven.Smuggler/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-30(0)\n> - _M_ Raven.Smuggler/Smuggler.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-31(4)\n> - _M_ Raven.Storage.Esent/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-32(0)\n> - _M_ Raven.Storage.Esent/StorageActions/General.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-33(44)\n> - _M_ Raven.Storage.Esent/StorageActionsAccessor.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-34(2)\n> - _M_ Raven.Storage.Esent/TransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-35(2)\n> - _M_ Raven.Storage.Managed/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-36(0)\n> - _M_ Raven.Storage.Managed/TransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-37(2)\n> - _M_ Raven.Tests/Bugs/AttachmentEndoding.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-38(3)\n> - _R_ Raven.Tests/Bugs/WhenRavenClrTypeNotFound.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-39(0)\n> - _M_ Raven.Tests/Document/DocumentStoreServerTests.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-40(707)\n> - _M_ Raven.Tests/LocalClientTest.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-41(5)\n> - _M_ Raven.Tests/ManagedStorage/Storage.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-42(2)\n> - _M_ Raven.Tests/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-43(0)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/531/files#diff-44(2)\n> - _D_ Raven.Tests/Raven.Tests.csproj.orighttps://github.com/ravendb/ravendb/pull/531/files#diff-45(638)\n> - _M_ Raven.Tests/RemoteClientTest.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-46(9)\n> - _M_ Raven.Tests/Shard/When_Using_Sharded_Servers.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-47(12)\n> - _M_ Raven.Tests/Spatial/SpatialIndex.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-48(2)\n> - _A_ Raven.Tests/WindowsExclusiveFactAttribute.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-49(24)\n> - _M_ Raven.Tryouts/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-50(0)\n> - _M_ Raven.Web/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-51(0)\n> - _M_ RavenDB.slnhttps://github.com/ravendb/ravendb/pull/531/files#diff-52(12)\n> - _M_ Samples/MvcMusicStore/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-53(0)\n> - _M_\n>   Samples/Raven.Bundles.Sample.EventSourcing.ShoppingCartAggregator/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-54(0)\n> - _M_ Samples/Raven.Sample.ComplexSharding/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-55(0)\n> - _M_ Samples/Raven.Sample.EventSourcing/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-56(0)\n> - _M_ Samples/Raven.Sample.Failover/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-57(0)\n> - _M_ Samples/Raven.Sample.LiveProjections/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-58(0)\n> - _M_ Samples/Raven.Sample.MultiTenancy/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-59(0)\n> - _M_ Samples/Raven.Sample.Replication/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-60(0)\n> - _M_ Samples/Raven.Sample.ShardClient/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-61(0)\n> - _M_ Samples/Raven.Sample.SimpleClient/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-62(0)\n> - _M_ Samples/Raven.Sample.Suggestions/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-63(0)\n> - _M_ Samples/Raven.Samples.Includes/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-64(0)\n> - _M_ Samples/Raven.Samples.IndexReplication/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-65(0)\n> - _M_ Utilities/Raven.Merger/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-66(0)\n> - _M_ Utilities/Raven.NormalizeCrLF/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-67(0)\n> - _M_ Utilities/Raven.ProjectRewriter/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-68(0)\n> - _M_\n>   Utilities/Raven.Samples.PrepareForRelease/Properties/AssemblyInfo.cshttps://github.com/ravendb/ravendb/pull/531/files#diff-69(0)\n> - _A_ buildall.shhttps://github.com/ravendb/ravendb/pull/531/files#diff-70(2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/531.patch\n> - https://github.com/ravendb/ravendb/pull/531.diff\n"""
532,24490118,"b'Hi,\nCan you send us a CLA?\nravendb.net/contributing\n\nOn Fri, Sep 13, 2013 at 6:05 PM, grahamkane notifications@github.comwrote:\n\n> Passing in the UriKind enum will stop an unhandled UriFormatException\n> getting thrown if the Uri is relative since the Uri ctor assumes\n> \n> ## UriKind.Absolute.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/grahamkane/ravendb uri-compare\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/532\n> Commit Summary\n> - support comparing relative uris\n> \n> File Changes\n> - _M_ Raven.Abstractions/Json/Linq/RavenJValue.cshttps://github.com/ravendb/ravendb/pull/532/files#diff-0(2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/532.patch\n> - https://github.com/ravendb/ravendb/pull/532.diff\n'"
532,24490170,b'Added the fix without the PR\n'
533,24490197,"b'Thanks, pulled.\n\nOn Sun, Sep 15, 2013 at 10:43 PM, CosminLazar notifications@github.comwrote:\n\n> Hello,\n> \n> The backup tool always returns 0 as exit code. This makes it hard to\n> integrate with other tools (like deployment scripts, and so on).\n> \n> I have not changed the functionality of the tool at all, just added some\n> methods and set some non-zero exit codes for exceptional cases.\n> \n> ## ps: i have a CLA with you.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/CosminLazar/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/533\n> Commit Summary\n> - Convinced the backup tool to return meaningful exit codes\n> \n> File Changes\n> - _A_ Raven.Backup/ExitCodes.cshttps://github.com/ravendb/ravendb/pull/533/files#diff-0(9)\n> - _M_ Raven.Backup/Program.cshttps://github.com/ravendb/ravendb/pull/533/files#diff-1(159)\n> - _M_ Raven.Backup/Raven.Backup.csprojhttps://github.com/ravendb/ravendb/pull/533/files#diff-2(1)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/533.patch\n> - https://github.com/ravendb/ravendb/pull/533.diff\n'"
534,24496019,"b'Do you have a CLA with us?\nravendb.net/contributing\n\nOn Mon, Sep 16, 2013 at 11:46 AM, Oguzhan TOPCU notifications@github.comwrote:\n\n> ## https://gist.github.com/oguzhantopcu/6578106 => working test\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/oguzhantopcu/ravendb oguzhan\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/534\n> Commit Summary\n> - added sort option with the name of the field\n> \n> File Changes\n> - _M_\n>   Raven.Client.Lightweight/Indexes/AbstractGenericIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-0(14)\n> - _M_ Raven.Client.Lightweight/Indexes/AbstractIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-1(3)\n> - _M_\n>   Raven.Client.Lightweight/Indexes/AbstractMultiMapIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-2(1)\n> - _M_ Raven.Client.Lightweight/Indexes/IndexDefinitionBuilder.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-3(19)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/534.patch\n> - https://github.com/ravendb/ravendb/pull/534.diff\n'"
534,24525406,b'i have sent CLA(including signature/name/email) document to support@ravendb.net.\n'
534,24794379,"b'Pulled\n\nOn Mon, Sep 16, 2013 at 11:46 AM, Oguzhan TOPCU notifications@github.comwrote:\n\n> ## https://gist.github.com/oguzhantopcu/6578106 => working test\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/oguzhantopcu/ravendb oguzhan\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/534\n> Commit Summary\n> - added sort option with the name of the field\n> \n> File Changes\n> - _M_\n>   Raven.Client.Lightweight/Indexes/AbstractGenericIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-0(14)\n> - _M_ Raven.Client.Lightweight/Indexes/AbstractIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-1(3)\n> - _M_\n>   Raven.Client.Lightweight/Indexes/AbstractMultiMapIndexCreationTask.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-2(1)\n> - _M_ Raven.Client.Lightweight/Indexes/IndexDefinitionBuilder.cshttps://github.com/ravendb/ravendb/pull/534/files#diff-3(19)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/534.patch\n> - https://github.com/ravendb/ravendb/pull/534.diff\n'"
535,25144321,b'It might make better sense to swap the ConfigureRequest and the SessionTimeout in the CreateHttpJsonRequest\n\nhttps://github.com/maverix/ravendb/commit/9773ef9531aece16d622cea08c965e94459b6205#commitcomment-4183971\n'
536,26892258,"b'Thanks, pulled.\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Tue, Oct 22, 2013 at 10:50 PM, Anders Str\xc3\xb6mberg <notifications@github.com\n\n> wrote:\n> \n> Removed the string parsing from the SetParamValue function and passed this\n> in as a parameter list. Handled MySQL parsing separate since this does not\n> really follow a ISO 8601 standard. This allows the SqlReplication bundle to\n> store DateTime and DateTimeOffset in MySQL database with as little hassle\n> \n> ## as possible for the user.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/lynxz/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/536\n> Commit Summary\n> - Removed the string parsing from the SetParamValue function and\n>   passed this\n> \n> File Changes\n> - _M_ Raven.Database/Bundles/SqlReplication/RelationalDatabaseWriter.cshttps://github.com/ravendb/ravendb/pull/536/files#diff-0(78)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/536.patch\n> - https://github.com/ravendb/ravendb/pull/536.diff\n'"
537,27387549,"b'Waiting for CLA\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Oct 30, 2013 at 1:18 PM, gareththackeray\nnotifications@github.comwrote:\n\n> Ensure UniqueConstraints client check checks each member of an IEnumerable\n> separately, to follow same logic as in trigger.\n> \n> ## Assuming any IEnumerable except a string should be dealt with in this way.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/gareththackeray/ravendb UniqueConstraintsEnumerablePropertiesFix\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/537\n> Commit Summary\n> - Ensure UniqueConstraints client check checks each member of an\n>   IEnumerable separately, to follow same logic as in trigger.\n> \n> File Changes\n> - _M_ Bundles/Raven.Bundles.Tests/UniqueConstraints/CreateTests.cshttps://github.com/ravendb/ravendb/pull/537/files#diff-0(2)\n> - _M_\n>   Bundles/Raven.Bundles.Tests/UniqueConstraints/ExtensionCheckTests.cshttps://github.com/ravendb/ravendb/pull/537/files#diff-1(22)\n> - _M_\n>   Bundles/Raven.Bundles.Tests/UniqueConstraints/UniqueConstraintsTest.cshttps://github.com/ravendb/ravendb/pull/537/files#diff-2(12)\n> - _M_\n>   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintExtensions.cshttps://github.com/ravendb/ravendb/pull/537/files#diff-3(6)\n> - _M_\n>   Raven.Database/Bundles/Versioning/Triggers/VersioningPutTrigger.cshttps://github.com/ravendb/ravendb/pull/537/files#diff-4(14)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/537.patch\n> - https://github.com/ravendb/ravendb/pull/537.diff\n'"
538,27423400,"b'I pulled it, but nothing seems to really matter in there.\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Oct 30, 2013 at 5:52 PM, gareththackeray\nnotifications@github.comwrote:\n\n> My previous pull request accidentally included changes to a file in the\n> \n> ## versioning bundle - sorry about that. Have reverted here.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/gareththackeray/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/538\n> Commit Summary\n> - reverted accidental last commit\n> \n> File Changes\n> - _M_\n>   Raven.Database/Bundles/Versioning/Triggers/VersioningPutTrigger.cshttps://github.com/ravendb/ravendb/pull/538/files#diff-0(14)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/538.patch\n> - https://github.com/ravendb/ravendb/pull/538.diff\n'"
539,27469020,"b""Pulled, thanks.\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Oct 30, 2013 at 10:54 PM, Luke Hertert notifications@github.comwrote:\n\n> I ran into a couple issues when trying to use smuggler for importing. 1)\n> My transforms were being ignored on an incremental import, and 2) I\n> couldn't modify the MaxSteps setting for Jint. There is a separate commit\n> for each.\n> \n> I signed the contributor agreement years ago, please let me know if you\n> \n> ## need me to send it back to you.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/ldhertert/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/539\n> Commit Summary\n> - Include all options on incremental restore\n> - Add MaxStepsForTransformScript option to smuggler\n> \n> File Changes\n> - _M_ Raven.Abstractions/Smuggler/SmugglerApiBase.cshttps://github.com/ravendb/ravendb/pull/539/files#diff-0(12)\n> - _M_ Raven.Abstractions/Smuggler/SmugglerOptions.cshttps://github.com/ravendb/ravendb/pull/539/files#diff-1(6)\n> - _M_ Raven.Smuggler/Imports/SmugglerJintHelper.cshttps://github.com/ravendb/ravendb/pull/539/files#diff-2(2)\n> - _M_ Raven.Smuggler/Program.cshttps://github.com/ravendb/ravendb/pull/539/files#diff-3(3)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/539.patch\n> - https://github.com/ravendb/ravendb/pull/539.diff\n"""
538,27557107,"b""It turns out updating was broken for array properties.  I've now fixed it all up and included trigger tests for these scenarios.\n"""
540,28147443,"b'Hey, please discuss any of those issue in the mailing list. This query should not work, as you do a computation:\n\n```\n                    .Where(c => c.Name == compCompany.Name\n                        || (c.HasParentCompany && compCompany.HasParentCompany))\n```\n'"
540,28155764,"b""I'll submit that to the google group, like suggested. What about the other items?\n"""
541,29839960,"b""Hi,\ndo you have a CLA with us?\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Dec 4, 2013 at 7:47 PM, ChadBoschert notifications@github.comwrote:\n\n> I've updated the client-side Unique Constraints bundle to satisfy the\n> following need that our application has:\n> - Tenant-specific unique constraint configuration (via metadata) when\n>   application has one DocumentStore instance per tenant/database\n>   - Runtime constraint caching must be per DocumentStore, not\n>     statically per application\n>   - Constraints can be defined in the tenant database (metadata), not\n>     only statically via UniqueConstraintsAttribute\n> \n> Additionally, I added the following enhancements to the extension methods:\n> - Support for loading multiple documents in a single call, by\n>   providing multiple values\n> - Support for specifying property name as a string instead of lambda\n>   expression (simplifies loads when constraints are not defined statically)\n> \n> Finally, I think I've maintained backwards compatibility both from a\n> functionality and API perspective. Applications that wish to take advantage\n> of these enhancements simply need to provide a custom implementation of\n> UniqueConstraintsTypeDictionary when registering their document store\n> listener.\n> \n> documentStore.RegisterListener(\n>     new UniqueConstraintsStoreListener(\n>         new CustomUniqueConstraintsTypeDictionary()));\n> \n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/OldTownIT/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/541\n> Commit Summary\n> - Initial refactoring to support multi-tenancy and extensibility; Note\n>   unit test is broken\n> - Pushed as much reflection as possible to ConstraintInfo\n>   creation/caching time\n> - Added support for load by multiple values\n> - Added overloads to provide property name as string; makes\n>   metadata-supplied constraints easier to work with.\n> \n> File Changes\n> - _M_ Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csprojhttps://github.com/ravendb/ravendb/pull/541/files#diff-0(1)\n> - _A_\n>   Bundles/Raven.Bundles.Tests/UniqueConstraints/Bugs/MultiTenancy.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-1(126)\n> - _M_ Bundles/Raven.Bundles.Tests/UniqueConstraints/Bugs/Troy3.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-2(49)\n> - _M_\n>   Bundles/Raven.Bundles.Tests/UniqueConstraints/ExtensionLoadTests.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-3(62)\n> - _A_ Bundles/Raven.Client.UniqueConstraints/ConstraintConfig.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-4(13)\n> - _A_ Bundles/Raven.Client.UniqueConstraints/ConstraintInfo.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-5(20)\n> - _M_\n>   Bundles/Raven.Client.UniqueConstraints/Raven.Client.UniqueConstraints.csprojhttps://github.com/ravendb/ravendb/pull/541/files#diff-6(3)\n> - _A_ Bundles/Raven.Client.UniqueConstraints/ReflectedConstraintInfo.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-7(35)\n> - _M_\n>   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintExtensions.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-8(118)\n> - _M_\n>   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsStoreListener.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-9(17)\n> - _M_\n>   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsTypeDictionary.cshttps://github.com/ravendb/ravendb/pull/541/files#diff-10(52)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/541.patch\n> - https://github.com/ravendb/ravendb/pull/541.diff\n"""
541,29840184,b'I don\xe2\x80\x99t believe so. How do I go about that?\n'
541,29840420,"b'Nevermind, just found it. Will look at it and send it your way.\n'"
541,29841713,"b""See: ravendb.net/contributing\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Dec 4, 2013 at 10:06 PM, ChadBoschert notifications@github.comwrote:\n\n> I don\xe2\x80\x99t believe so. How do I go about that?\n> \n> Chad Boschert | Sr Software Engineer, Research and Development,\n> [cid:image001.png@01CB59DB.F6ABB870] | (417) 616-0126 |\n> cboschert@oldtownit.commailto:cboschert@oldtownit.com | blog<\n> http://www.oldtownit.com/blog?src=email-blog-link&who=cboschert@oldtownit.com>\n> \n> Please note our new address: 625 N. Washington Street, Suite 310,\n> Alexandria VA 22314\n> \n> From: ravendb [mailto:notifications@github.com]\n> Sent: Wednesday, December 04, 2013 2:05 PM\n> To: ravendb/ravendb\n> Cc: Chad Boschert\n> Subject: Re: [ravendb] Multi-tenant Unique Constraint Enhancements (#541)\n> \n> Hi,\n> do you have a CLA with us?\n> \n> _Oren Eini_\n> CEO\n> Hibernating Rhinos\n> Cellular: +972-52-548-6969\n> Office: +972-4-674-7811\n> Fax: +972-153-4622-7811\n> \n> On Wed, Dec 4, 2013 at 7:47 PM, ChadBoschert <notifications@github.com\n> <mailto:notifications@github.com>>wrote:\n> \n> > I've updated the client-side Unique Constraints bundle to satisfy the\n> > following need that our application has:\n> > - Tenant-specific unique constraint configuration (via metadata) when\n> >   application has one DocumentStore instance per tenant/database\n> > - Runtime constraint caching must be per DocumentStore, not\n> >   statically per application\n> > - Constraints can be defined in the tenant database (metadata), not\n> >   only statically via UniqueConstraintsAttribute\n> > \n> > Additionally, I added the following enhancements to the extension\n> > methods:\n> > - Support for loading multiple documents in a single call, by\n> >   providing multiple values\n> > - Support for specifying property name as a string instead of lambda\n> >   expression (simplifies loads when constraints are not defined\n> >   statically)\n> > \n> > Finally, I think I've maintained backwards compatibility both from a\n> > functionality and API perspective. Applications that wish to take\n> > advantage\n> > of these enhancements simply need to provide a custom implementation of\n> > UniqueConstraintsTypeDictionary when registering their document store\n> > listener.\n> > \n> > documentStore.RegisterListener(\n> > new UniqueConstraintsStoreListener(\n> > new CustomUniqueConstraintsTypeDictionary()));\n> > \n> > ---\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/OldTownIT/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/541\n> > Commit Summary\n> > - Initial refactoring to support multi-tenancy and extensibility; Note\n> >   unit test is broken\n> > - Pushed as much reflection as possible to ConstraintInfo\n> >   creation/caching time\n> > - Added support for load by multiple values\n> > - Added overloads to provide property name as string; makes\n> >   metadata-supplied constraints easier to work with.\n> > \n> > File Changes\n> > - _M_ Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csproj<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-0>(1)\n> > - _A_\n> >   Bundles/Raven.Bundles.Tests/UniqueConstraints/Bugs/MultiTenancy.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-1>(126)\n> > - _M_ Bundles/Raven.Bundles.Tests/UniqueConstraints/Bugs/Troy3.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-2>(49)\n> > - _M_\n> >   Bundles/Raven.Bundles.Tests/UniqueConstraints/ExtensionLoadTests.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-3>(62)\n> > - _A_ Bundles/Raven.Client.UniqueConstraints/ConstraintConfig.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-4>(13)\n> > - _A_ Bundles/Raven.Client.UniqueConstraints/ConstraintInfo.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-5>(20)\n> > - _M_\n> > \n> > Bundles/Raven.Client.UniqueConstraints/Raven.Client.UniqueConstraints.csproj<\n> > https://github.com/ravendb/ravendb/pull/541/files#diff-6>(3)\n> > - _A_ Bundles/Raven.Client.UniqueConstraints/ReflectedConstraintInfo.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-7>(35)\n> > - _M_\n> >   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintExtensions.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-8>(118)\n> > - _M_\n> >   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsStoreListener.cs<\n> >   https://github.com/ravendb/ravendb/pull/541/files#diff-9>(17)\n> > - _M_\n> > \n> > Bundles/Raven.Client.UniqueConstraints/UniqueConstraintsTypeDictionary.cs<\n> > https://github.com/ravendb/ravendb/pull/541/files#diff-10>(52)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/541.patch\n> > - https://github.com/ravendb/ravendb/pull/541.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub<\n> https://github.com/ravendb/ravendb/pull/541#issuecomment-29839960>.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/541#issuecomment-29840184\n> .\n"""
541,29849660,b'@ayende CLA emailed to support@ravendb.net\n'
542,30429123,b'Pulled\n'
541,30429410,b'Pulled to 3.0\n'
543,31377449,"b'Do you have CLA with us?\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Tue, Dec 31, 2013 at 1:20 AM, bryzaguy notifications@github.com wrote:\n\n> It is difficult to mock ILoaderWithInclude because it has methods with\n> concrete type MultiLoaderWithInclude that has an internal constructor.\n> \n> ## Updating to use the interface allows for unit testing with mocks.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/bryzaguy/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/543\n> Commit Summary\n> - improve ability to mock loading with includes\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/ILoaderWithInclude.cshttps://github.com/ravendb/ravendb/pull/543/files#diff-0(6)\n> - _M_ Raven.Client.Lightweight/Document/MultiLoaderWithInclude.cshttps://github.com/ravendb/ravendb/pull/543/files#diff-1(8)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/543.patch\n> - https://github.com/ravendb/ravendb/pull/543.diff\n'"
543,31377779,"b'I do not have a CLA.  How does one get a CLA with you?\n\nOn Mon, Dec 30, 2013 at 4:18 PM, Ayende Rahien notifications@github.comwrote:\n\n> Do you have CLA with us?\n> \n> _Oren Eini_\n> CEO\n> Hibernating Rhinos\n> Cellular: +972-52-548-6969\n> Office: +972-4-674-7811\n> Fax: +972-153-4622-7811\n> \n> On Tue, Dec 31, 2013 at 1:20 AM, bryzaguy notifications@github.com\n> wrote:\n> \n> > It is difficult to mock ILoaderWithInclude because it has methods with\n> > concrete type MultiLoaderWithInclude that has an internal constructor.\n> > \n> > ## Updating to use the interface allows for unit testing with mocks.\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/bryzaguy/ravendb master\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/543\n> > Commit Summary\n> > - improve ability to mock loading with includes\n> > \n> > File Changes\n> > - _M_ Raven.Client.Lightweight/Document/ILoaderWithInclude.cs<\n> >   https://github.com/ravendb/ravendb/pull/543/files#diff-0>(6)\n> > - _M_ Raven.Client.Lightweight/Document/MultiLoaderWithInclude.cs<\n> >   https://github.com/ravendb/ravendb/pull/543/files#diff-1>(8)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/543.patch\n> > - https://github.com/ravendb/ravendb/pull/543.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/543#issuecomment-31377449\n> .\n'"
543,31380049,"b'ravendb.net/contributing\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Tue, Dec 31, 2013 at 2:27 AM, bryzaguy notifications@github.com wrote:\n\n> I do not have a CLA. How does one get a CLA with you?\n> \n> On Mon, Dec 30, 2013 at 4:18 PM, Ayende Rahien notifications@github.comwrote:\n> \n> > Do you have CLA with us?\n> > \n> > _Oren Eini_\n> > CEO\n> > Hibernating Rhinos\n> > Cellular: +972-52-548-6969\n> > Office: +972-4-674-7811\n> > Fax: +972-153-4622-7811\n> > \n> > On Tue, Dec 31, 2013 at 1:20 AM, bryzaguy notifications@github.com\n> > wrote:\n> > \n> > > It is difficult to mock ILoaderWithInclude because it has methods with\n> > > concrete type MultiLoaderWithInclude that has an internal constructor.\n> > > \n> > > ## Updating to use the interface allows for unit testing with mocks.\n> > > \n> > > You can merge this Pull Request by running\n> > > \n> > > git pull https://github.com/bryzaguy/ravendb master\n> > > \n> > > Or view, comment on, or merge it at:\n> > > \n> > > https://github.com/ravendb/ravendb/pull/543\n> > > Commit Summary\n> > > - improve ability to mock loading with includes\n> > > \n> > > File Changes\n> > > - _M_ Raven.Client.Lightweight/Document/ILoaderWithInclude.cs<\n> > >   https://github.com/ravendb/ravendb/pull/543/files#diff-0>(6)\n> > > - _M_ Raven.Client.Lightweight/Document/MultiLoaderWithInclude.cs<\n> > >   https://github.com/ravendb/ravendb/pull/543/files#diff-1>(8)\n> > > \n> > > Patch Links:\n> > > - https://github.com/ravendb/ravendb/pull/543.patch\n> > > - https://github.com/ravendb/ravendb/pull/543.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ravendb/ravendb/pull/543#issuecomment-31377449>\n> > .\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/543#issuecomment-31377779\n> .\n'"
539,31467368,"b""@ayende , I closed this pull request because of your comment, but I just went back to look at the source code in master, and I don't see where/if this was actually pulled in.  Should I re-open it? Or is it in another branch.\n"""
543,31499017,"b""Ok, I've sent the CLA to as the site instructed.\n\nOn Mon, Dec 30, 2013 at 5:46 PM, ravendb notifications@github.com wrote:\n\n> ravendb.net/contributing\n> \n> _Oren Eini_\n> CEO\n> Hibernating Rhinos\n> Cellular: +972-52-548-6969\n> Office: +972-4-674-7811\n> Fax: +972-153-4622-7811\n> \n> On Tue, Dec 31, 2013 at 2:27 AM, bryzaguy notifications@github.com\n> wrote:\n> \n> > I do not have a CLA. How does one get a CLA with you?\n> > \n> > On Mon, Dec 30, 2013 at 4:18 PM, Ayende Rahien notifications@github.comwrote:\n> > \n> > > Do you have CLA with us?\n> > > \n> > > _Oren Eini_\n> > > CEO\n> > > Hibernating Rhinos\n> > > Cellular: +972-52-548-6969\n> > > Office: +972-4-674-7811\n> > > Fax: +972-153-4622-7811\n> > > \n> > > On Tue, Dec 31, 2013 at 1:20 AM, bryzaguy notifications@github.com\n> > > wrote:\n> > > \n> > > > It is difficult to mock ILoaderWithInclude because it has methods\n> > > > with\n> > > > concrete type MultiLoaderWithInclude that has an internal\n> > > > constructor.\n> > > > \n> > > > ## Updating to use the interface allows for unit testing with mocks.\n> > > > \n> > > > You can merge this Pull Request by running\n> > > > \n> > > > git pull https://github.com/bryzaguy/ravendb master\n> > > > \n> > > > Or view, comment on, or merge it at:\n> > > > \n> > > > https://github.com/ravendb/ravendb/pull/543\n> > > > Commit Summary\n> > > > - improve ability to mock loading with includes\n> > > > \n> > > > File Changes\n> > > > - _M_ Raven.Client.Lightweight/Document/ILoaderWithInclude.cs<\n> > > >   https://github.com/ravendb/ravendb/pull/543/files#diff-0>(6)\n> > > > - _M_ Raven.Client.Lightweight/Document/MultiLoaderWithInclude.cs<\n> > > >   https://github.com/ravendb/ravendb/pull/543/files#diff-1>(8)\n> > > > \n> > > > Patch Links:\n> > > > - https://github.com/ravendb/ravendb/pull/543.patch\n> > > > - https://github.com/ravendb/ravendb/pull/543.diff\n> > > \n> > > \xe2\x80\x94\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/ravendb/ravendb/pull/543#issuecomment-31377449>\n> > > .\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ravendb/ravendb/pull/543#issuecomment-31377779>\n> > .\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/543#issuecomment-31380049\n> .\n"""
539,31507142,"b""Yes, if you can resend it against the master, that would be very helpful\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Thu, Jan 2, 2014 at 7:14 PM, Luke Hertert notifications@github.comwrote:\n\n> Oren, I closed this pull request because of your comment, but I just went\n> back to look at the source code in master, and I don't see where/if this\n> was actually pulled in. Should I re-open it? Or is it in another branch.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/539#issuecomment-31467368\n> .\n"""
543,31563286,b'Is there anything else I need to do?\n'
543,31599675,"b'No, this has been merged in\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Sat, Jan 4, 2014 at 1:38 AM, bryzaguy notifications@github.com wrote:\n\n> Reopened #543 https://github.com/ravendb/ravendb/pull/543.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/543\n> .\n'"
544,31911888,"b'Hi Sacha,\nDo you have a CLA with us?\nravendb.net/contributing\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Jan 8, 2014 at 10:09 PM, Sascha Kiefer notifications@github.comwrote:\n\n> This pacth allows to run Snuggler with\n> \n> dump and repair\n> \n> actions.\n> dump, dumps comands of dump file to stderr\n> \n> repair, removes all duplocates and conflcits from a dump file and stores\n> \n> ## them in dumpfile.reoair\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/esskar/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/544\n> Commit Summary\n> - adding dump and repair command to Smuggler\n> - add info about repair usage\n> - remove replication related meta data and ensure correct id\n> \n> File Changes\n> - _M_ Raven.Abstractions/Smuggler/SmugglerAction.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-0(12)\n> - _M_ Raven.Abstractions/Smuggler/SmugglerApiBase.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-1(979)\n> - _A_ Raven.Smuggler/DumpApi.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-2(71)\n> - _M_ Raven.Smuggler/Program.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-3(298)\n> - _M_ Raven.Smuggler/Raven.Smuggler.csprojhttps://github.com/ravendb/ravendb/pull/544/files#diff-4(3)\n> - _A_ Raven.Smuggler/RepairApi.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-5(207)\n> - _A_ Raven.Smuggler/SmugglerApiFactory.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-6(23)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/544.patch\n> - https://github.com/ravendb/ravendb/pull/544.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/544\n> .\n'"
544,31912653,"b'Nope, not yet. I will send it later today.\n'"
544,31912833,"b'Thanks\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Thu, Jan 9, 2014 at 10:54 AM, Sascha Kiefer notifications@github.comwrote:\n\n> Nope, not yet. I will send it later today.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/544#issuecomment-31912653\n> .\n'"
544,31915577,b'You got mail.\n'
544,31919108,"b""Hi,\nCan you make your PR against the New3 branch?\nWe won't be making this change to 2.5\n\nAlso, what do you mean by dump command?\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Wed, Jan 8, 2014 at 10:09 PM, Sascha Kiefer notifications@github.comwrote:\n\n> This pacth allows to run Snuggler with\n> \n> dump and repair\n> \n> actions.\n> dump, dumps comands of dump file to stderr\n> \n> repair, removes all duplocates and conflcits from a dump file and stores\n> \n> ## them in dumpfile.reoair\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/esskar/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/544\n> Commit Summary\n> - adding dump and repair command to Smuggler\n> - add info about repair usage\n> - remove replication related meta data and ensure correct id\n> \n> File Changes\n> - _M_ Raven.Abstractions/Smuggler/SmugglerAction.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-0(12)\n> - _M_ Raven.Abstractions/Smuggler/SmugglerApiBase.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-1(979)\n> - _A_ Raven.Smuggler/DumpApi.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-2(71)\n> - _M_ Raven.Smuggler/Program.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-3(298)\n> - _M_ Raven.Smuggler/Raven.Smuggler.csprojhttps://github.com/ravendb/ravendb/pull/544/files#diff-4(3)\n> - _A_ Raven.Smuggler/RepairApi.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-5(207)\n> - _A_ Raven.Smuggler/SmugglerApiFactory.cshttps://github.com/ravendb/ravendb/pull/544/files#diff-6(23)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/544.patch\n> - https://github.com/ravendb/ravendb/pull/544.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/544\n> .\n"""
544,31920197,"b'I will try...\n\nDump does not actually do anything on the server, it just dumps the ids (attachements, docs, indicies) to stdout, \ni needed that for debugging.\n'"
544,31920332,"b'Okay, then probably better to say --debug, rather than dump\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Thu, Jan 9, 2014 at 12:56 PM, Sascha Kiefer notifications@github.comwrote:\n\n> I will try...\n> \n> Dump does not actually do anything on the server, it just dumps the ids\n> (attachements, docs, indicies) to stdout,\n> i needed that for debugging.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/544#issuecomment-31920197\n> .\n'"
544,31920343,"b'Or --verbose\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Thu, Jan 9, 2014 at 12:58 PM, Oren Eini (Ayende Rahien) <\nayende@ayende.com> wrote:\n\n> Okay, then probably better to say --debug, rather than dump\n> \n> _Oren Eini_\n> CEO\n> Hibernating Rhinos\n> Cellular: +972-52-548-6969\n> Office:    +972-4-674-7811\n> Fax:       +972-153-4622-7811\n> \n> On Thu, Jan 9, 2014 at 12:56 PM, Sascha Kiefer notifications@github.comwrote:\n> \n> > I will try...\n> > \n> > Dump does not actually do anything on the server, it just dumps the ids\n> > (attachements, docs, indicies) to stdout,\n> > i needed that for debugging.\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/544#issuecomment-31920197\n> > .\n'"
544,31920539,"b'ok.\n\nbut it is more like\nSmuggler dump ravendb.dump\n\nit is a new action, not a switch\n\nWhat branch do you mean? i only see master, 2.0 and pages\n'"
544,31920672,"b'Oh, I see.\nThen do it as dryrun, or something like that, we already use the term dump.\n\nhttps://github.com/ayende/ravendb/tree/New3\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Thu, Jan 9, 2014 at 1:00 PM, Sascha Kiefer notifications@github.comwrote:\n\n> ok.\n> \n> but it is more like\n> Smuggler dump ravendb.dump\n> \n> it is a new action, not a switch\n> \n> What branch do you mean? i only see master, 2.0 and pages\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/544#issuecomment-31920539\n> .\n'"
545,32149291,"b""Hi,\nDo you have a CLA with us?\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Mon, Jan 13, 2014 at 2:30 AM, Tugberk Ugurlu notifications@github.comwrote:\n\n> I had to have the following query on the IAsyncDocumentSession as ASP.NETMVC child actions don't support async:\n> \n> [ChildActionOnly]\n> public ActionResult List()\n> {\n>     IEnumerable<Tags_Count.ReduceResult> tags = _documentSession\n>         .Query<Tags_Count.ReduceResult, Tags_Count>()\n>         .ToListAsync()\n>         .Result;\n> \n> ```\n> return View(tags.Select(tag => new TagModel\n> {\n>     Name = tag.Name,\n>     Slug = tag.Slug,\n>     Count = tag.Count,\n>     LastSeenAt = tag.LastSeenAt\n> }));\n> ```\n> \n> }\n> \n> However, this call will cause a deadlock because of the reasons explained\n> in the following articles and questions:\n> - The Perfect Recipe to Shoot Yourself in The Foot - Ending up with a\n>   Deadlock Using the C# 5.0 Asynchronous Language Featureshttp://www.tugberkugurlu.com/archive/the-perfect-recipe-to-shoot-yourself-in-the-foot-ending-up-with-a-deadlock-using-the-c-sharp-5-0-asynchronous-language-features\n> - Asynchronous .NET Client Libraries for Your HTTP API and Awareness\n>   of async/await's Bad Effectshttp://www.tugberkugurlu.com/archive/asynchronousnet-client-libraries-for-your-http-api-and-awareness-of-async-await-s-bad-effects\n> - Best practice to call ConfigureAwait for all server-side codehttp://stackoverflow.com/questions/13489065/best-practice-to-call-configureawait-for-all-server-side-code\n> \n> Hope this helps.\n> \n> Not completely sure if this pull-request completely fixes this problem (as\n> nearly every await needs to be made against ConfigureAwait(false) in a\n> library which doesn't care about the sync. context) but I just wanted to\n> \n> ## raise the problem here with this pull request.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/tugberkugurlu/ravendb configureawait\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/545\n> Commit Summary\n> - applied configureawait to eleminate the deadlock problem.\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Changes/RemoteDatabaseChanges.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-0(18)\n> - _M_ Raven.Client.Lightweight/Connection/Async/AsyncServerClient.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-1(50)\n> - _M_ Raven.Client.Lightweight/Connection/HttpJsonRequest.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-2(34)\n> - _M_ Raven.Client.Lightweight/Connection/ObservableLineStream.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-3(2)\n> - _M_ Raven.Client.Lightweight/Connection/Operation.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-4(6)\n> - _M_ Raven.Client.Lightweight/Document/Async/AsyncDocumentSession.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-5(20)\n> - _M_ Raven.Client.Lightweight/Extensions/MultiTenancyExtensions.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-6(6)\n> - _M_ Raven.Client.Lightweight/PublicExtensions/LinqExtensions.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-7(24)\n> - _M_ Raven.Client.Lightweight/Shard/AsyncShardedDocumentSession.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-8(14)\n> - _M_ Raven.Client.Lightweight/Shard/ShardedRavenQueryInspector.cshttps://github.com/ravendb/ravendb/pull/545/files#diff-9(4)\n> - _M_ RavenDB.sln.DotSettingshttps://github.com/ravendb/ravendb/pull/545/files#diff-10(3)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/545.patch\n> - https://github.com/ravendb/ravendb/pull/545.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/545\n> .\n"""
545,32172488,"b'Hi,\n\nI have just sent the CLA to support email available here: http://ravendb.net/contributing. You should have received it by now. \n'"
547,33474884,"b""Hi,\nDo we have a CLA with you?\nravendb.net/contributing\n\n[image: RavenDB Conference] http://conference.ravendb.net\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Mon, Jan 27, 2014 at 9:57 PM, urbanfly notifications@github.com wrote:\n\n> This fixes an incorrect port from the non-async implementation; the\n> ConcurrencyException and ConflictException handling wasn't properly\n> \n> ## task-ified.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/urbanfly/ravendb AsyncHiLoFix\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/547\n> Commit Summary\n> - fixing handling of ConcurrencyException in async hilo generation\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/AsyncHiLoKeyGenerator.cshttps://github.com/ravendb/ravendb/pull/547/files#diff-0(152)\n> - _M_ Raven.Tests/Bugs/HiLoKeyGeneratorConcurrency.cshttps://github.com/ravendb/ravendb/pull/547/files#diff-1(127)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/547.patch\n> - https://github.com/ravendb/ravendb/pull/547.diff\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/547\n> .\n"""
548,33883149,"b'Hi,\nDo you have a CLA with us?\n\n[image: RavenDB Conference] http://conference.ravendb.net\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Sat, Feb 1, 2014 at 5:43 PM, Geoffrey Huntley\nnotifications@github.comwrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/ghuntley/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/548\n> Commit Summary\n> - corrected spelling(utiliti => utility)\n> \n> File Changes\n> - _M_ NuGet/RavenDB.Tests.Helpers.nuspechttps://github.com/ravendb/ravendb/pull/548/files#diff-0(6)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/548.patch\n> - https://github.com/ravendb/ravendb/pull/548.diff\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/548\n> .\n'"
548,35339562,"b'Hi Oren;\n\nCLA was sent over to Dalia whom has confirmed receipt.\n\nRegards,\nGeoff\n'"
548,35362253,"b'thanks, pulled\n\n[image: RavenDB Conference] http://conference.ravendb.net\n\n_Oren Eini_\nCEO\nHibernating Rhinos\nCellular: +972-52-548-6969\nOffice:    +972-4-674-7811\nFax:       +972-153-4622-7811\n\nOn Sat, Feb 1, 2014 at 5:43 PM, Geoffrey Huntley\nnotifications@github.comwrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/ghuntley/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/548\n> Commit Summary\n> - corrected spelling(utiliti => utility)\n> \n> File Changes\n> - _M_ NuGet/RavenDB.Tests.Helpers.nuspechttps://github.com/ravendb/ravendb/pull/548/files#diff-0(6)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/548.patch\n> - https://github.com/ravendb/ravendb/pull/548.diff\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/548\n> .\n'"
509,36324518,"b'Can you create a failing test showing what the issue is?\n\n[image: RavenDB Conference] http://conference.ravendb.net\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-674-7811\n\nFax:      + 972-153-4622-7811\n\nOn Fri, Feb 28, 2014 at 3:49 AM, Thomas James notifications@github.comwrote:\n\n> jpatte: Was there a reason why the hooks were added to ""ConvertToEntity""\n> but not in the non-generic method (""ConvertToEntity(Type entityType..."")?\n> \n> The reason I ask is that ""TrackEntity"" ends up calling the non-generic\n> method, which means I\'m not seeing the hooks being fired for a non-sharded\n> document load.\n> \n> I\'ll raise this as an issue and submit a PR with fix, if this was just\n> something that was overlooked.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/509#issuecomment-36314308\n> .\n'"
509,36324710,"b'Hi Oren,\n\nIt\'s been fixed in build 2850, so I deleted the comment. I was using 2750.\n\nApologies for wasting your time.\n\nCheers,\nTom\n\nOn 28 February 2014 16:07, Ayende Rahien notifications@github.com wrote:\n\n> Can you create a failing test showing what the issue is?\n> \n> [image: RavenDB Conference] http://conference.ravendb.net\n> \n> _Oren Eini_\n> \n> CEO\n> \n> Mobile: + 972-52-548-6969\n> \n> Office: + 972-4-674-7811\n> \n> Fax: + 972-153-4622-7811\n> \n> On Fri, Feb 28, 2014 at 3:49 AM, Thomas James <notifications@github.com\n> \n> > wrote:\n> > \n> > jpatte: Was there a reason why the hooks were added to ""ConvertToEntity""\n> > but not in the non-generic method (""ConvertToEntity(Type entityType..."")?\n> > \n> > The reason I ask is that ""TrackEntity"" ends up calling the non-generic\n> > method, which means I\'m not seeing the hooks being fired for a\n> > non-sharded\n> > document load.\n> > \n> > I\'ll raise this as an issue and submit a PR with fix, if this was just\n> > something that was overlooked.\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/ravendb/ravendb/pull/509#issuecomment-36314308>\n> > .\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/509#issuecomment-36324518\n> .\n'"
550,39556274,"b""Pulled\n\n[image: RavenDB Conference] http://conference.ravendb.net\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-674-7811\n\nFax:      + 972-153-4622-7811\n\nOn Fri, Apr 4, 2014 at 7:34 AM, Gareth Thackeray\nnotifications@github.comwrote:\n\n> As discussed here\n> https://groups.google.com/d/msg/ravendb/iUl8tO6A6Rw/D306KFy9sigJ, a fixed\n> limit of 1024 touches to remember is somewhat lacking under certain\n> situations. Here I have allowed it to be set from a config option,\n> \n> ## defaulting to 1024.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/gareththackeray/ravendb Parameterise-Recent-Touch-Count\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/550\n> Commit Summary\n> - refactoring of test proxy\n> - RavenDB-1821 Can't resolve conflict between PUT and DELETE (build\n>   2750)\n> - RavenDB-1820 Patch command Modify no longer works with nested\n>   properties\n> - Merge branch 'RavenDB_1820' of https://github.com/ml054/ravendb\n> - More paranoid about perf counters hanging\n> - Ensure we calculate the idle time on a per database bassis\n> - Fixing compilation\n> - Making sure we refresh properties with private setters on parent\n>   classes\n> - test for querying transformer\n> - Merge branch 'master' of github.com:wayne-o/ravendb\n> - Moving test to the appropriate location\n> - Making sure that we can easily convert date time to date time offset\n>   and vice versa\n> - Adding generic LoadDocument<T> version on the server side as well\n> - fixed issue with filtering documents by recent touch\n> - fixed log message\n> - Do not update synchronizer value if no documents were put. Setting\n>   Etag.Empty value to the synchronizer resulted in moving back the whole\n>   indexing process and starting from scratch (because Etag.Empty is lower\n>   than all etags of docs)\n> - Merge pull request #698 from\n>   arekais/empty-bulk-insert-moves-back-indexing-issue\n> - Better error handling\n> - Add more protections for out of order db commits that cross indexing\n>   or replication batches\n> - Removing comment about by-design behavior\n> - More overloads for Boost\n> - Will take into account touched documents in SQL Replication and\n>   won't process them\n> - RavenDB-1853 Proper selection of database to delete\n> - Merge branch 'master' of github.com:ayende/ravendb\n> - minor fix\n> - RavenDB-1886 switched sorting from 'by frequency' to 'by name'\n> - Merge branch 'RavenDB_1853' of https://github.com/ml054/ravendb\n> - Merge branch 'master' of github.com:ayende/ravendb into\n>   encryption_key_size\n> - minor\n> - Fixing build\n> - RavenDB-1887 SQL Replication reset after change script\n> - prefered encryption bits key works\n> - RavenDB-1902 Fixing ambiguous of DynamicExtensionMethods.Boost method\n> - removed EtagSynchronizer, reapplied locks\n> - removed unused code\n> - RavenDB-1256 Signing Raven.Server.exe\n> - add to studio ability to choose the encryption key bit size\n> - Merge branch 'master' of github.com:ayende/ravendb into\n>   encryption_key_size\n> - Fixing occasionally failing tests by ugly Thread.Sleep method - the\n>   problem is that we don't have a good way to simulate a server disconnection\n>   so we remove the destinations and setup new ones, however the async\n>   replication task can not notice it yet so we need to wait a while\n> - More defensive code in occasionally failing tests - at this point\n>   they are being passed\n> - Merge branch 'encryption_key_size' of\n>   https://github.com/myarichuk/ravendb\n> - more idiomatic code\n> - Merge branch 'RavenDB_1256' of https://github.com/arekais/ravendb\n> - Merge branch 'RavenDB-1902' of https://github.com/arekais/ravendb\n> - removed unused method\n> - added lock to touch operation in TouchMissingReferenceDocumentTask\n> - Merge branch 'master' of https://github.com/ppekrol/ravendb\n> - Adding passing test\n> - fixed deadlock\n> - Only use a single locker\n> - RavenDB-1935. Switched tests to run on esent\n> - Merge branch 'master' of https://github.com/ayende/ravendb\n> - Preventing from skipping documents by the indexer caused by\n>   non-batched calls in replication hilo. We can safely drop it since we are\n>   not offering concurrent writes.\n> - Merge branch 'indexing-error-with-replication' of\n>   https://github.com/arekais/ravendb\n> - fix bug 1934 with null value problem in sorting\n> - project update\n> - Merge branch 'master' of https://github.com/ReginaBricker/ravendb\n> - Removing picked file\n> - RavenDB-1899 Delete incremental backup file after uploading it to S3\n> - RavenDB-1984 Raven.Server NuGet package does not include a\n>   Raven.Client.Lightweight.dll - can't run Smuggler\n> - RavenDB-1953 Installer should set Load User Profiler = true in IIS\n> - RavenDB-1989 Installer adds firewall exceptions in Windows Firewall\n> - Merge branch 'RavenDB-1953' of https://github.com/arekais/ravendb\n> - Merge branch 'RavenDB-1989' of https://github.com/arekais/ravendb\n> - Merge branch 'RavenDB_1899' of github.com:ml054/ravendb\n> - Merge branch '2.5' of github.com:ayende/ravendb into 2.5\n> - added last replication run stats\n> - extended replication stats to show last 50 runs\n> - Merge pull request #747 from ppekrol/replication-stats\n> - fixing NRE\n> - Merge branch '2.5' of github.com:ayende/ravendb\n> - Better safe than sorry\n> - parameterise number of recent touches to remember\n> \n> File Changes\n> - _A_\n>   Bundles/Raven.Bundles.Tests/Authorization/Bugs/Wayne/MessagesForAccountByCreatorId.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-0(23)\n> - _A_\n>   Bundles/Raven.Bundles.Tests/Authorization/Bugs/Wayne/QueryTransformer.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-1(97)\n> - _A_\n>   Bundles/Raven.Bundles.Tests/Authorization/Bugs/Wayne/WallMessage.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-2(15)\n> - _M_ Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csprojhttps://github.com/ravendb/ravendb/pull/550/files#diff-3(3)\n> - _M_ Raven.Abstractions/Data/Constants.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-4(5)\n> - _M_ Raven.Abstractions/Data/UuidType.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-5(3)\n> - _M_ Raven.Abstractions/Json/JTokenExtensions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-6(13)\n> - _M_ Raven.Abstractions/Json/Linq/Extensions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-7(42)\n> - _M_ Raven.Abstractions/Json/Linq/RavenJPath.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-8(21)\n> - _M_ Raven.Abstractions/Json/Linq/RavenJToken.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-9(8)\n> - _M_ Raven.Abstractions/Replication/ReplicationStatistics.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-10(8)\n> - _M_ Raven.Client.Lightweight/Document/DocumentConvention.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-11(7)\n> - _M_ Raven.Client.Lightweight/Document/DocumentSession.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-12(1658)\n> - _M_\n>   Raven.Client.Lightweight/Document/SessionOperations/QueryOperation.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-13(5)\n> - _M_ Raven.Database/Bundles/Encryption/Codec.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-14(11)\n> - _M_ Raven.Database/Bundles/Encryption/Settings/EncryptionSettings.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-15(29)\n> - _M_\n>   Raven.Database/Bundles/Encryption/Settings/EncryptionSettingsManager.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-16(8)\n> - _M_ Raven.Database/Bundles/Expiration/ExpirationReadTrigger.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-17(2)\n> - _M_ Raven.Database/Bundles/PeriodicBackups/PeriodicBackupTask.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-18(6)\n> - _M_ Raven.Database/Bundles/Replication/Impl/ReplicationHiLo.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-19(103)\n> - _M_\n>   Raven.Database/Bundles/Replication/Responders/Behaviors/SingleItemReplicationBehavior.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-20(3)\n> - _M_ Raven.Database/Bundles/Replication/Tasks/ReplicationTask.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-21(309)\n> - _M_ Raven.Database/Bundles/SqlReplication/SqlReplicationTask.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-22(22)\n> - _M_ Raven.Database/Config/InMemoryRavenConfiguration.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-23(33)\n> - _M_ Raven.Database/Config/StronglyTypedRavenSettings.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-24(10)\n> - _M_ Raven.Database/DocumentDatabase.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-25(231)\n> - _M_ Raven.Database/Extensions/DocDbExtensions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-26(68)\n> - _M_ Raven.Database/Extensions/IndexingExtensions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-27(7)\n> - _A_ Raven.Database/Impl/PutSerialLock.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-28(31)\n> - _D_ Raven.Database/Impl/Synchronization/DatabaseEtagSynchronizer.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-29(73)\n> - _D_ Raven.Database/Impl/Synchronization/EtagSynchronizer.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-30(135)\n> - _D_ Raven.Database/Impl/Synchronization/EtagSynchronizerType.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-31(15)\n> - _M_ Raven.Database/Indexing/AbstractIndexingExecuter.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-32(19)\n> - _M_\n>   Raven.Database/Indexing/AnonymousObjectToLuceneDocumentConverter.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-33(46)\n> - _M_ Raven.Database/Indexing/IndexToWorkOn.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-34(2)\n> - _M_ Raven.Database/Indexing/IndexingExecuter.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-35(35)\n> - _M_ Raven.Database/Indexing/ReducingExecuter.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-36(14)\n> - _M_ Raven.Database/Json/JsonPatcher.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-37(6)\n> - _M_ Raven.Database/Linq/AbstractTransformer.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-38(5)\n> - _M_ Raven.Database/Linq/PrivateExtensions/DynamicExtensionMethods.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-39(4)\n> - _M_ Raven.Database/Prefetching/Prefetcher.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-40(1)\n> - _M_ Raven.Database/Raven.Database.csprojhttps://github.com/ravendb/ravendb/pull/550/files#diff-41(4)\n> - _M_ Raven.Database/Server/HttpServer.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-42(41)\n> - _M_ Raven.Database/Storage/Esent/StorageActions/Documents.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-43(36)\n> - _M_ Raven.Database/Storage/Esent/StorageActions/Staleness.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-44(5)\n> - _M_ Raven.Database/Storage/Esent/TransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-45(5)\n> - _M_ Raven.Database/Storage/IDocumentStorageActions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-46(1)\n> - _M_ Raven.Database/Storage/ITransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-47(1)\n> - _M_ Raven.Database/Storage/Managed/StalenessStorageActions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-48(2)\n> - _M_ Raven.Database/Storage/Managed/TransactionalStorage.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-49(8)\n> - _M_ Raven.Database/Tasks/TouchMissingReferenceDocumentTask.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-50(9)\n> - _M_ Raven.Database/Util/PerformanceCountersManager.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-51(78)\n> - _M_ Raven.Database/Util/SequentialUuidGenerator.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-52(4)\n> - _M_ Raven.Setup.CustomActions/IISActions.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-53(17)\n> - _M_ Raven.Setup.CustomActions/Infrastructure/IIS/IIS6Manager.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-54(5)\n> - _M_\n>   Raven.Setup.CustomActions/Infrastructure/IIS/IIS7UpwardsManager.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-55(16)\n> - _M_ Raven.Setup.CustomActions/Infrastructure/IIS/IISManager.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-56(1)\n> - _M_ Raven.Setup/Components/IIS/IISConfiguration_CreateWebSite.wxshttps://github.com/ravendb/ravendb/pull/550/files#diff-57(10)\n> - _M_ Raven.Setup/Components/Service/Raven.Server.wxshttps://github.com/ravendb/ravendb/pull/550/files#diff-58(8)\n> - _M_ Raven.Setup/CustomActions/IIS.wxihttps://github.com/ravendb/ravendb/pull/550/files#diff-59(12)\n> - _M_ Raven.Setup/Raven.Setup.wixprojhttps://github.com/ravendb/ravendb/pull/550/files#diff-60(4)\n> - _M_ Raven.Setup/UI/Wizard.wxshttps://github.com/ravendb/ravendb/pull/550/files#diff-61(4)\n> - _M_ Raven.Studio/Commands/CreateDatabaseCommand.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-62(41)\n> - _M_ Raven.Studio/Commands/DeleteDatabaseCommand.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-63(4)\n> - _M_ Raven.Studio/Commands/SaveSettingsCommand.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-64(3)\n> - _M_ Raven.Studio/Controls/EncryptionSettings.xamlhttps://github.com/ravendb/ravendb/pull/550/files#diff-65(16)\n> - _M_ Raven.Studio/Models/PatchModel.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-66(2)\n> - _M_ Raven.Tests/App.confighttps://github.com/ravendb/ravendb/pull/550/files#diff-67(23)\n> - _A_ Raven.Tests/Bugs/DyanmicId.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-68(57)\n> - _M_ Raven.Tests/Indexes/Recovery/MapIndexRecoveryTests.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-69(7)\n> - _M_ Raven.Tests/Indexes/Recovery/MapReduceIndexRecoveryTests.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-70(1)\n> - _A_ Raven.Tests/Issues/RavenDB1369.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-71(292)\n> - _M_ Raven.Tests/Issues/RavenDB_1762.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-72(105)\n> - _A_ Raven.Tests/Issues/RavenDB_1820.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-73(101)\n> - _M_ Raven.Tests/Issues/RavenDB_689.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-74(27)\n> - _A_ Raven.Tests/Issues/RavenDb-1934.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-75(467)\n> - _A_ Raven.Tests/MailingList/RefreshModifiedDocument.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-76(110)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/550/files#diff-77(5)\n> - _D_ Raven.Tests/Synchronization/EtagSynchronizerTests.cshttps://github.com/ravendb/ravendb/pull/550/files#diff-78(176)\n> - _M_ Raven.Tests/packages.confighttps://github.com/ravendb/ravendb/pull/550/files#diff-79(8)\n> - _M_ Raven.Tryouts/app.confighttps://github.com/ravendb/ravendb/pull/550/files#diff-80(4)\n> - _M_ default.ps1https://github.com/ravendb/ravendb/pull/550/files#diff-81(38)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/550.patch\n> - https://github.com/ravendb/ravendb/pull/550.diff\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/550\n> .\n"""
551,39646150,"b""No longer need this trigger, and no other advantages were found for it, so I'm withdrawing it.\n"""
552,41355610,"b'Pulled, thansk\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-674-7811\n\nFax:      + 972-153-4622-7811\n\nOn Thu, Apr 24, 2014 at 4:35 PM, Cleve Littlefield <notifications@github.com\n\n> wrote:\n> \n> This is my first ever pull request, so please be kind. I appreciate all\n> tips where I messed up on proper protocol.\n> \n> This fix fixes http://issues.hibernatingrhinos.com/issue/RavenDB-2192,\n> when saving dynamic objects using async session, the behavior does not\n> match the sync behavior. The sync follows the documentation that the HiLo\n> generator is used to generate an id on the client. But Async does not\n> \n> ## generate this id and the id defaults to a new sequential Guid.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/cleverguy25/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/552\n> Commit Summary\n> - Make async match sync when saving dynamic objects\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/GenerateEntityIdOnTheClient.cshttps://github.com/ravendb/ravendb/pull/552/files#diff-0(35)\n> - _M_\n>   Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cshttps://github.com/ravendb/ravendb/pull/552/files#diff-1(2)\n> - _A_ Raven.Tests/Bugs/Async/DynamicGeneratedIds.cshttps://github.com/ravendb/ravendb/pull/552/files#diff-2(29)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/552/files#diff-3(1)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/552.patch\n> - https://github.com/ravendb/ravendb/pull/552.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/552\n> .\n'"
547,41435596,"b""I see that you've already fixed the problem by moving to async/await which is a much simpler fix :)\n"""
553,41886408,"b'This generates too many conflicts when trying to pull from this.\nI manually did the merge to 3.0\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-674-7811\n\nFax:      + 972-153-4622-7811\n\nOn Tue, Apr 29, 2014 at 7:31 PM, Gareth Thackeray\nnotifications@github.comwrote:\n\n> If you do\n> \n> LoadByUniqueConstraint<Foo>(arrayOfIds);\n> \n> foreach(var id in arrayOfIds) {\n>     LoadByUniqueConstraint<Foo>(id);\n> }\n> \n> You get a request for every Foo that does not exist. Using a Guid as the\n> ""id"" in this case is a useful hack that avoids having to line up 2 arrays,\n> but there is no need to generate a new Guid each time. Instead I\'ve just\n> \n> ## hardcoded a fixed Guid and we\'ll use this every time.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/gareththackeray/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/553\n> Commit Summary\n> - Use fixed ""dummy id"" rather than generating a new one each time\n> \n> File Changes\n> - _M_\n>   Bundles/Raven.Client.UniqueConstraints/UniqueConstraintExtensions.cshttps://github.com/ravendb/ravendb/pull/553/files#diff-0(6)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/553.patch\n> - https://github.com/ravendb/ravendb/pull/553.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/553\n> .\n'"
554,42272974,"b""Hi,\nI can't merge this with the master branch in github.com/ayende/ravendb\n\ncan you resubmit this PR?\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-674-7811\n\nFax:      + 972-153-4622-7811\n\nOn Mon, May 5, 2014 at 2:16 PM, Cleve Littlefield\nnotifications@github.comwrote:\n\n> ## Improved support for dynamic tag names including Id generation.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/cleverguy25/ravendb Dynamic-Tag-Names\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/554\n> Commit Summary\n> - Make async match sync when saving dynamic objects\n> - Support for custom tag names on dynamic objects, including id\n>   generation.\n> \n> File Changes\n> - _M_\n>   Raven.Client.Lightweight/Document/AsyncMultiTypeHiLoKeyGenerator.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-0(2)\n> - _M_ Raven.Client.Lightweight/Document/BulkInsertOperation.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-1(2)\n> - _M_ Raven.Client.Lightweight/Document/DocumentConvention.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-2(40)\n> - _M_ Raven.Client.Lightweight/Document/DocumentStore.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-3(2)\n> - _M_ Raven.Client.Lightweight/Document/GenerateEntityIdOnTheClient.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-4(35)\n> - _M_\n>   Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-5(4)\n> - _M_ Raven.Client.Lightweight/Document/MultiTypeHiLoKeyGenerator.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-6(2)\n> - _M_ Raven.Client.Lightweight/Shard/ShardedDocumentStore.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-7(2)\n> - _A_ Raven.Tests/Bugs/Async/DynamicGeneratedIds.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-8(50)\n> - _M_ Raven.Tests/Document/ClientKeyGeneratorTests.cshttps://github.com/ravendb/ravendb/pull/554/files#diff-9(22)\n> - _M_ Raven.Tests/Raven.Tests.csprojhttps://github.com/ravendb/ravendb/pull/554/files#diff-10(1)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/554.patch\n> - https://github.com/ravendb/ravendb/pull/554.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHubhttps://github.com/ravendb/ravendb/pull/554\n> .\n"""
557,45319555,"b""Merged.\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Thu, Jun 5, 2014 at 2:26 PM, Gareth Thackeray notifications@github.com\nwrote:\n\n> At present if a Scripted Index Result leads to multiple updates to the\n> same doc, only the last will happen. The reason for this is that the\n> ScriptedJsonPatcher always heads to the database for a document. There is a\n> test in this pull request that demonstrates the failure.\n> \n> The fix is to store CreatedDocs as a dictionary rather than a list. Then\n> when a doc is requested we first check in the dictionary and only go to the\n> db if it has not already been created as part of the batch.\n> \n> We need this functionality so if you could merge into 2.5 it would be very\n> \n> ## much appreciated. Thanks.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/gareththackeray/ravendb scripted-index-multi-update\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/557\n> Commit Summary\n> - RavenDB-2317\n>   AllowMultipleIndexEntriesForSameDocumentToResultTransformer should work for\n>   remote stores\n> - Fix http://issues.hibernatingrhinos.com/issue/RavenDB-2321\n> - Merge branch '2.5' of github.com:ayende/ravendb into 2.5\n> - transferred to 2.5 fix for issue RavenDB-2314\n> - silverlight related fix\n> - issue fix: RavenDB-2333 Conflicts not shown in conflicts page\n> - investigation of the issue --> WIP\n> - Fixing RavenDB-2334\n> - Merge branch 'RavenDB-2333' of github.com:maximburyak/ravendb\n> - fix for issue + unit test\n> - Fixing an issue where we didn't generate the same url for quries\n> - ScriptedJsonPatcher now uses previously-updated doc if a patch is\n>   for a doc that was updated in the same batch.\n> \n> File Changes\n> - _M_ Raven.Abstractions/Data/IndexQuery.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-0 (4)\n> - _A_ Raven.Abstractions/Exceptions/InvalidSpatialShapeExceptions.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-1 (26)\n> - _M_ Raven.Abstractions/Extensions/MetadataExtensions.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-2 (7)\n> - _M_ Raven.Abstractions/Raven.Abstractions.csproj\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-3 (5)\n> - _M_ Raven.Client.Lightweight/Connection/ServerClient.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-4 (203)\n> - _M_ Raven.Database/DocumentDatabase.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-5 (37)\n> - _M_ Raven.Database/Extensions/HttpContextExtensions.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-6 (4)\n> - _M_ Raven.Database/Impl/DTC/EsentInFlightTransactionalState.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-7 (35)\n> - _M_ Raven.Database/Impl/DTC/EsentTransactionContext.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-8 (1)\n> - _M_ Raven.Database/Impl/DTC/InFlightTransactionalState.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-9 (15)\n> - _M_ Raven.Database/Indexing/Index.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-10 (41)\n> - _M_ Raven.Database/Indexing/MapReduceIndex.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-11 (22)\n> - _M_ Raven.Database/Indexing/SimpleIndex.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-12 (71)\n> - _M_ Raven.Database/Json/ScriptedJsonPatcher.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-13 (10)\n> - _M_ Raven.Database/Storage/Esent/TransactionalStorage.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-14 (4)\n> - _M_ Raven.Database/Storage/ITransactionalStorage.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-15 (2)\n> - _M_ Raven.Database/Storage/Managed/TransactionalStorage.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-16 (2)\n> - _M_ Raven.Studio/Models/ConflictsModel.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-17 (4)\n> - _M_\n>   Raven.Tests/Bugs/TransformResults/ComplexValuesFromTransformResults.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-18 (2)\n> - _M_ Raven.Tests/Bundles/ScriptedIndexResults/AnimalType.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-19 (14)\n> - _M_\n>   Raven.Tests/Bundles/ScriptedIndexResults/ScriptedIndexResultsTest.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-20 (70)\n> - _A_ Raven.Tests/Issues/RavenDB_2314.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-21 (100)\n> - _A_ Raven.Tests/Issues/RavenDB_2334.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-22 (121)\n> - _A_ Raven.Tests/Issues/RavenDB_2387.cs\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-23 (111)\n> - _M_ Raven.Tests/Raven.Tests.csproj\n>   https://github.com/ravendb/ravendb/pull/557/files#diff-24 (2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/557.patch\n> - https://github.com/ravendb/ravendb/pull/557.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/557.\n"""
559,50410186,"b'Do you have a CLA with us?\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Tue, Jul 29, 2014 at 12:24 AM, diegose notifications@github.com wrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/diegose/ravendb AsyncVersioningExtensions\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/559\n> Commit Summary\n> - Implemented async versions of GetRevisionsFor and GetRevisionIdsFor\n> \n> File Changes\n> - _M_\n>   Raven.Client.Lightweight/Bundles/Versioning/VersioningExtensions.cs\n>   https://github.com/ravendb/ravendb/pull/559/files#diff-0 (18)\n> - _M_ Raven.Tests/Bundles/Versioning/Versioning.cs\n>   https://github.com/ravendb/ravendb/pull/559/files#diff-1 (25)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/559.patch\n> - https://github.com/ravendb/ravendb/pull/559.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/559.\n'"
559,50417340,b'Just signed it. Where do I send it?\n'
559,50441317,"b'support@ravendb.net\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Tue, Jul 29, 2014 at 2:41 AM, diegose notifications@github.com wrote:\n\n> Just signed it. Where do I send it?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/559#issuecomment-50417340.\n'"
560,50441343,"b'Waiting for CLA\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Tue, Jul 29, 2014 at 2:32 AM, diegose notifications@github.com wrote:\n\n> ---\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/diegose/ravendb RefreshAsync\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/560\n> Commit Summary\n> - Implemented RefreshAsync\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/Async/AsyncDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/560/files#diff-0 (32)\n> - _M_ Raven.Client.Lightweight/IAsyncAdvancedSessionOperations.cs\n>   https://github.com/ravendb/ravendb/pull/560/files#diff-1 (6)\n> - _M_ Raven.Client.Lightweight/Shard/AsyncShardedDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/560/files#diff-2 (41)\n> - _M_ Raven.Tests/Document/DocumentStoreEmbeddedTests.cs\n>   https://github.com/ravendb/ravendb/pull/560/files#diff-3 (26)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/560.patch\n> - https://github.com/ravendb/ravendb/pull/560.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/560.\n'"
561,50581976,b'Please direct PR to github.com/ayende/ravendb\nThis is where we are doing the 3.0 development.\nI manually merged this PR\n'
560,50582612,b'Work on the 3.0 branch is done on github.com/ayende/ravendb\nI manually merged this commit.\n'
559,50582665,b' Work on the 3.0 branch is done on github.com/ayende/ravendb\nI manually merged this commit.\n'
560,50604776,"b""Any chance to get it in 2.5?\n#559 is not so important because it's just extension methods, but this one can't be implemented that way (my current workaround is an extension method that uses reflection to get the private members)\n"""
560,50604963,"b""Afraid not, we have closed it down for anything but major bugfixes.\nNote that you can use the 3.0 client against a 2.5 server.\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Wed, Jul 30, 2014 at 2:53 PM, diegose notifications@github.com wrote:\n\n> Any chance to get it in 2.5?\n> #559 https://github.com/ravendb/ravendb/pull/559 is not so important\n> because it's just extension methods, but this one can't be implemented that\n> way (my current workaround is an extension method that uses reflection to\n> get the private members)\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/560#issuecomment-50604776.\n"""
560,50605412,b'Sounds reasonable. Are nuget packages for 3.0 available anywhere?\n'
560,50605658,"b'Yes, see:\nhttps://www.myget.org/gallery/ravendb3\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Wed, Jul 30, 2014 at 3:01 PM, diegose notifications@github.com wrote:\n\n> Sounds reasonable. Are nuget packages for 3.0 available anywhere?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/560#issuecomment-50605412.\n'"
562,52632918,"b'Hi,\nDo you have a CLA with us?\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Tue, Aug 19, 2014 at 4:13 PM, Le DeGroat notifications@github.com\nwrote:\n\n> You need to check if ""Key"" exists before trying to cast its value to a\n> string. Key was not required in older versions.\n> \n> I just upgrade from 4ab4776\n> https://github.com/ravendb/ravendb/commit/4ab4776461df0ff8dc8f31ac428ac936085b3ad9\n> to 6dce79a\n> https://github.com/ravendb/ravendb/commit/6dce79ab348a76497ba6ebd362c6527866ee2be9\n> and I could no longer use the PUT command without a Key explicitly set to\n> \n> ## null.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/ldegroat/ravendb patch-1\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/562\n> Commit Summary\n> - Update CommandDataFactory.cs\n> \n> File Changes\n> - _M_ Raven.Database/Data/CommandDataFactory.cs\n>   https://github.com/ravendb/ravendb/pull/562/files#diff-0 (5)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/562.patch\n> - https://github.com/ravendb/ravendb/pull/562.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/562.\n'"
562,52649828,"b'I\'m not sure what a CLA is.  If you are referring to a License then, yes,\nthe company I work for just got one yesterday: Medcare, Inc.\n\nSome of our older codebase was using the bulk_docs to send PUT commands for\nnew documents and did not include the Key property in the request.  The\nhashes I referred to in the pull request were in the Raven.Server.exe\ndetails.\n\nOn Tue, Aug 19, 2014 at 9:29 AM, ravendb notifications@github.com wrote:\n\n> Hi,\n> Do you have a CLA with us?\n> \n> _Oren Eini_\n> \n> CEO\n> \n> Mobile: + 972-52-548-6969\n> \n> Office: + 972-4-622-7811\n> \n> Fax: + 972-153-4622-7811\n> \n> On Tue, Aug 19, 2014 at 4:13 PM, Le DeGroat notifications@github.com\n> wrote:\n> \n> > You need to check if ""Key"" exists before trying to cast its value to a\n> > string. Key was not required in older versions.\n> > \n> > I just upgrade from 4ab4776\n> > <\n> > https://github.com/ravendb/ravendb/commit/4ab4776461df0ff8dc8f31ac428ac936085b3ad9>\n> > \n> > to 6dce79a\n> > <\n> > https://github.com/ravendb/ravendb/commit/6dce79ab348a76497ba6ebd362c6527866ee2be9>\n> > \n> > and I could no longer use the PUT command without a Key explicitly set\n> > to\n> > \n> > ## null.\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/ldegroat/ravendb patch-1\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/ravendb/ravendb/pull/562\n> > Commit Summary\n> > - Update CommandDataFactory.cs\n> > \n> > File Changes\n> > - _M_ Raven.Database/Data/CommandDataFactory.cs\n> >   https://github.com/ravendb/ravendb/pull/562/files#diff-0 (5)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/562.patch\n> > - https://github.com/ravendb/ravendb/pull/562.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ravendb/ravendb/pull/562.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/562#issuecomment-52632918.\n'"
562,52657530,"b""Ok now that I know what a CLA is. No I don't have one.  _shrug_ to lazy to fill it out and scan it back to PDF. \n\nWhile I'm pretty sure this patch would fix a very minor backwards compatibility glitch, I don't think this was the right spot to patch it.  It appears that line has been there for a very long time.  My guess is somewhere in the steps before, the jsonCommand was getting Key added to it when it was missing and that code is missing between the two revisions.\n\nEither way, I'm closing this pull request and you guys can do with my recommendation what you want :)\n"""
563,53677051,"b'Hi Andrew,\nIt looks like your changes are against the 2.5 version.\nCan you make them against the 3.0 one (the master version).\n\n_Oren Eini_\n\nCEO\n\nMobile: + 972-52-548-6969\n\nOffice:  + 972-4-622-7811\n\nFax:      + 972-153-4622-7811\n\nOn Thu, Aug 28, 2014 at 4:30 AM, Andrew Harry notifications@github.com\nwrote:\n\n> Swapped the ConfigureRequest and where the RequestTimeout.Value is Set.\n> \n> ## Otherwise the timeout value is overridden\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/maverix/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/563\n> Commit Summary\n> - Update HttpJsonRequestFactory.cs\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Connection/HttpJsonRequestFactory.cs\n>   https://github.com/ravendb/ravendb/pull/563/files#diff-0 (5)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/563.patch\n> - https://github.com/ravendb/ravendb/pull/563.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/563.\n'"
572,65430329,b'already merged in at ayende/ravendb\n'
574,66039037,b'This could maybe changed to make the FullBackupIntervalMilliseconds & IntervalMilliseconds properties of PeriodicExportSetup nullable ints\n'
574,66039141,"b'Can you send a PR for this?\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Mon, Dec 8, 2014 at 10:51 AM, nickchampion notifications@github.com\nwrote:\n\n> This could maybe changed to make the FullBackupIntervalMilliseconds &\n> IntervalMilliseconds properties of PeriodicExportSetup nullable ints\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/574#issuecomment-66039037.\n'"
574,66039394,b'Sure\n'
574,66046101,b'I have just added a commit to this pull request which stops the periodic export using development storage when uploading to Azure. This seems to me quite critical to merge and release as its not currently possible to perform periodic exports to Azure\n'
573,66741710,"b'Hi,\nWe are going to a CLA from you, see:\nravendb.net/contributing\n'"
573,66842000,"b'Hi,\nups, I kinda forgot about that.\nJust sent you guys an email to support@ravendb.net with my CLA in it.\n'"
577,67487605,"b'This is already in the unstable.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Thu, Dec 18, 2014 at 2:29 PM, Christoph Enzmann <notifications@github.com\n\n> wrote:\n> \n> Smuggler throws an NPE with NTLM username and password. Fixed and tested\n> \n> ## it.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/dusk0r/ravendb master\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/ravendb/ravendb/pull/577\n> Commit Summary\n> - Smuggler: Fix NPE with Username/Password Credentials\n> \n> File Changes\n> - _M_ Raven.Smuggler/Program.cs\n>   https://github.com/ravendb/ravendb/pull/577/files#diff-0 (32)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/577.patch\n> - https://github.com/ravendb/ravendb/pull/577.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/577.\n'"
573,67529197,"b'Just to inform you guys, I failed with my first commit.\nThe configuration was not copied to the tenant configurations.\n\nIn the end, the index compiler could not find the extracted assemblies, because the setting pointed them to the default location.\n'"
575,69179178,b'Hi - just wondering if this is going to be in the next stable build which I believe is planned for the 20th Jan?\nThanks\n'
575,69179295,"b'Yes, it would be\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Thu, Jan 8, 2015 at 3:34 PM, nickchampion notifications@github.com\nwrote:\n\n> Hi - just wondering if this is going to be in the next stable build which\n> I believe is planned for the 20th Jan?\n> Thanks\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/575#issuecomment-69179178.\n'"
581,69782169,"b""When trying to use ConnectionStringSettingName to centralize connection strings for sql replication I found that it wasn't actually used and the connection string was empty. \nI think this is a simple fix, but it was edited directly via github, so caveat emptor.\n"""
584,74077320,"b'Hi benbenwilde,\nI have taken a look at this on behalf of Ayende.\nThe unit test you added seems to pass.\nbefore we go forward can you please pull the latest master from Ayende and run the test again.\nContact me at tal@ayende.com if you are still running into any issue.\n'"
588,85515464,"b""Thanks, fixed.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Fri, Mar 20, 2015 at 11:49 PM, izep notifications@github.com wrote:\n\n> Authorization is bypassed for lazy queries.\n> I also added a passing Test for Authorization + Streaming, because i\n> \n> ## didn't see one and want to make sure that continues to work.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/588\n> Commit Summary\n> - Failing test for Authorization + Lazy\n> \n> File Changes\n> - _A_ Bundles/Raven.Bundles.Tests/Authorization/Bugs/PrestonLazy.cs\n>   https://github.com/ravendb/ravendb/pull/588/files#diff-0 (45)\n> - _A_\n>   Bundles/Raven.Bundles.Tests/Authorization/Bugs/PrestonStreaming.cs\n>   https://github.com/ravendb/ravendb/pull/588/files#diff-1 (74)\n> - _M_ Bundles/Raven.Bundles.Tests/Raven.Bundles.Tests.csproj\n>   https://github.com/ravendb/ravendb/pull/588/files#diff-2 (2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/588.patch\n> - https://github.com/ravendb/ravendb/pull/588.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/588.\n"""
591,98370946,"b'Hi,\nDo you have a CLA with us?\n\nravendb.net/contributing\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Sat, May 2, 2015 at 11:05 AM, busbina notifications@github.com wrote:\n\n> busbina wants to merge 1 commit into ravendb:master from busbina:master:\n> \n> I needed the protected so I could call an inherited\n> \n> ## SmugglerRemoteDatabaseOperations.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/591\n> Commit Summary\n> - Set members of SmugglerDatabaseApi to protected\n> \n> File Changes\n> - _M_ Raven.Smuggler/SmugglerDatabaseApi.cs\n>   https://github.com/ravendb/ravendb/pull/591/files#diff-0 (4)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/591.patch\n> - https://github.com/ravendb/ravendb/pull/591.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/591.\n'"
591,98509589,"b'I think that is our license. I\'m not 100% which one it is, I work at\nIngeniux. We needed the change because a bit of our ui was hooked up to a\nsub class of the SmugglerApi in 2.5.\nOn May 2, 2015 8:26 AM, ""ravendb"" notifications@github.com wrote:\n\n> Hi,\n> Do you have a CLA with us?\n> \n> ravendb.net/contributing\n> \n> *Hibernating Rhinos Ltd *\n> \n> Oren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n> \n> Office: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n> \n> On Sat, May 2, 2015 at 11:05 AM, busbina notifications@github.com wrote:\n> \n> > busbina wants to merge 1 commit into ravendb:master from busbina:master:\n> > \n> > I needed the protected so I could call an inherited\n> > \n> > ## SmugglerRemoteDatabaseOperations.\n> > \n> > You can view, comment on, or merge this pull request online at:\n> > \n> > https://github.com/ravendb/ravendb/pull/591\n> > Commit Summary\n> > - Set members of SmugglerDatabaseApi to protected\n> > \n> > File Changes\n> > - _M_ Raven.Smuggler/SmugglerDatabaseApi.cs\n> >   https://github.com/ravendb/ravendb/pull/591/files#diff-0 (4)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/591.patch\n> > - https://github.com/ravendb/ravendb/pull/591.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ravendb/ravendb/pull/591.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/591#issuecomment-98370946.\n'"
591,98636598,"b'Adam,\nPlease send this directly to support@ravendb.net, we don\'t get attachments\nvia github.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Sun, May 3, 2015 at 8:22 PM, Adam Busbin notifications@github.com\nwrote:\n\n> I think that is our license. I\'m not 100% which one it is, I work at\n> Ingeniux. We needed the change because a bit of our ui was hooked up to a\n> sub class of the SmugglerApi in 2.5.\n> On May 2, 2015 8:26 AM, ""ravendb"" notifications@github.com wrote:\n> \n> > Hi,\n> > Do you have a CLA with us?\n> > \n> > ravendb.net/contributing\n> > \n> > *Hibernating Rhinos Ltd *\n> > \n> > Oren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n> > \n> > Office: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n> > \n> > On Sat, May 2, 2015 at 11:05 AM, busbina notifications@github.com\n> > wrote:\n> > \n> > > busbina wants to merge 1 commit into ravendb:master from\n> > > busbina:master:\n> > > \n> > > I needed the protected so I could call an inherited\n> > > \n> > > ## SmugglerRemoteDatabaseOperations.\n> > > \n> > > You can view, comment on, or merge this pull request online at:\n> > > \n> > > https://github.com/ravendb/ravendb/pull/591\n> > > Commit Summary\n> > > - Set members of SmugglerDatabaseApi to protected\n> > > \n> > > File Changes\n> > > - _M_ Raven.Smuggler/SmugglerDatabaseApi.cs\n> > >   https://github.com/ravendb/ravendb/pull/591/files#diff-0 (4)\n> > > \n> > > Patch Links:\n> > > - https://github.com/ravendb/ravendb/pull/591.patch\n> > > - https://github.com/ravendb/ravendb/pull/591.diff\n> > > \n> > > \xe2\x80\x94\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/ravendb/ravendb/pull/591.\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ravendb/ravendb/pull/591#issuecomment-98370946.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/591#issuecomment-98509589.\n'"
591,98770333,b'There were not any attachments. If you want I can write up a quick demo on why I need this.\n'
591,98967822,"b""Hi,\nWe need a CLA to accept any contributions.\nIf you don't have one, please complete the form here:\nravendb.net/contributing and send it to support@ravendb.net\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Mon, May 4, 2015 at 7:17 PM, Adam Busbin notifications@github.com\nwrote:\n\n> There were not any attachments.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/591#issuecomment-98770333.\n"""
591,102486632,b'CLA is all submitted.\n'
591,102656859,"b""Where, I don't think that I saw that.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Fri, May 15, 2015 at 9:33 PM, Adam Busbin notifications@github.com\nwrote:\n\n> CLA is all submitted.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/591#issuecomment-102486632.\n"""
591,102664349,b'I emailed it over to Dalia. She should have it.\n'
591,102664840,"b'Can you forward that to support@ravendb.net?\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Sat, May 16, 2015 at 9:27 PM, Adam Busbin notifications@github.com\nwrote:\n\n> I emailed it over to Dalia. She should have it.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/591#issuecomment-102664349.\n'"
591,102667123,b'I forwarded it over.\n'
592,103820812,b'Added more xml comments. So this now ready to be reviewed. :sparkles: \n'
597,110706602,b'Merged to unstable\n'
598,123671084,"b""I pulled this, but you didn't actually added anything to the ILoaderWithInclude\n"""
598,123673014,"b""You're right. I've fixed it locally. Should I create another PR or ammend this one?\n"""
598,123673507,"b""Push to this, and I'll pull\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Wed, Jul 22, 2015 at 2:19 PM, Ricardo Brand\xc3\xa3o notifications@github.com\nwrote:\n\n> You're right. I've fixed it locally. Should I create another PR or ammend\n> this one?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/598#issuecomment-123673014.\n"""
598,123676180,b'Done\n'
599,125348492,"b'Thanks!\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Mon, Jul 27, 2015 at 11:10 PM, Louis Hau\xc3\x9fknecht <notifications@github.com\n\n> wrote:\n> \n> Currently when starting RavenDB from a path (e.g. ""RavenDB 3"") nothing\n> happens. This is an unpleasent experience, especially for first time users.\n> Fixed this by wrapping the entire path in quotes.\n> \n> ## This fix also sets the title of the new window to RavenDb.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/599\n> Commit Summary\n> - Updated start script to work on paths with blanks\n> \n> File Changes\n> - _M_ Scripts/Start.cmd\n>   https://github.com/ravendb/ravendb/pull/599/files#diff-0 (2)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/599.patch\n> - https://github.com/ravendb/ravendb/pull/599.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/599.\n'"
602,137693826,"b'Matt,\nDo you have a CLA with us?\nravendb.net/contributing\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Fri, Sep 4, 2015 at 4:26 AM, Matt Walkenhorst notifications@github.com\nwrote:\n\n> Docs :\n> http://ravendb.net/docs/article-page/3.0/csharp/server/plugins/analyzer-generators\n> Relevant section (note indexName):\n> \n> ```\n> public override Analyzer GenerateAnalyzerForIndexing(string indexName, Document document, Analyzer previousAnalyzer)\n> {\n>     if (indexName == SpecificIndexName)\n>     {\n>         return new WhitespaceAnalyzer();\n>     }\n> \n>     return previousAnalyzer;\n> }\n> \n> public override Analyzer GenerateAnalyzerForQuerying(string indexName, string query, Analyzer previousAnalyzer)\n> {\n>     if (indexName == SpecificIndexName)\n>     {\n>         return new WhitespaceAnalyzer();\n>     }\n> \n>     return previousAnalyzer;\n> }\n> ```\n> \n> More from Version 2.5 :\n> https://github.com/ravendb/ravendb/blob/007a513ee0fb9ef11a9c2b11a801e070b466766d/Raven.Database/Indexing/Index.cs#L88\n> /\n> https://github.com/ravendb/ravendb/blob/007a513ee0fb9ef11a9c2b11a801e070b466766d/Raven.Database/Indexing/Index.cs#L726-L727\n> \n> ## Currently AbstractAnalyzerGenerator is broken in Raven 3 [image: :rose:]\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/602\n> Commit Summary\n> - fix(indexes) use index name as was the case in Raven 2.5 + current\n>   docs\n> \n> File Changes\n> - _M_ Raven.Database/Indexing/Index.cs\n>   https://github.com/ravendb/ravendb/pull/602/files#diff-0 (4)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/602.patch\n> - https://github.com/ravendb/ravendb/pull/602.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/602.\n'"
602,137698178,b'Oren - just sent through to support email address\n'
588,142990778,b'@ayende Then close this PR and link to the commit ;) ?\n'
606,143724580,"b'This is problematic.\nWe are removing DTC support entirely in 4.0, and I don\'t want to add\nfeatures to it which will only be removed in the next version.\n\nAnd async & DTC are working against each other pretty hard. It stops the\nthread and waits, versus freeing the thread. That is a pretty bad mix to\nstart with.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Thu, Sep 24, 2015 at 6:45 PM, Daniel Marbach notifications@github.com\nwrote:\n\n> This PR enables the client API to be used under a TransactionScope. I\n> tried to keep the breaking changes as minimal as possible. The following\n> changes are contained in this PR:\n> - Raven.DtcTests project upgrade to 4.5.1 to enable\n>   TransactionScopeAsyncFlowOption.Enabled\n> - Introduced AsyncPump\n>   http://blogs.msdn.com/b/pfxteam/archive/2012/01/20/10259049.aspx\n>   which allows to shim in and execute async operations inside the client\n>   enlistment\n> - RavenClientEnlistment uses AsyncPump to execute the Commit, Rollback\n>   or PrepareTransaction\n> \n> Who is affected\n> \n> All users of the client using SaveChangesAsync under a TransactionScope\n> will get an InvalidCastException during runtime.\n> \n> Relates to http://issues.hibernatingrhinos.com/issue/RavenDB-1405\n> Steps to reproduce\n> \n> ```\n> public class SaveChangesAsync : RavenTest\n> {\n>     [Fact]\n>     public async Task Should_just_work()\n>     {\n>         using (var documentStore = NewDocumentStore(requestedStorage: ""esent""))\n>         {\n>             EnsureDtcIsSupported(documentStore);\n> \n>             using (var s = documentStore.OpenAsyncSession())\n>             {\n>                 await s.StoreAsync(new AccurateCount.User { Name = ""Ayende"" });\n>                 await s.SaveChangesAsync();\n>             }\n> \n>             using (var s = documentStore.OpenAsyncSession())\n>             using (var scope = new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))\n>             {\n>                 var user = await s.LoadAsync<AccurateCount.User>(""users/1"");\n>                 user.Name = ""Rahien"";\n>                 await s.SaveChangesAsync();\n>                 scope.Complete();\n>             }\n> \n>             using (var s = documentStore.OpenAsyncSession())\n>             {\n>                 s.Advanced.AllowNonAuthoritativeInformation = false;\n>                 var user = await s.LoadAsync<AccurateCount.User>(""users/1"");\n>                 Assert.Equal(""Rahien"", user.Name);\n>             }\n>         }\n>     }\n> }\n> ```\n> \n> leads to\n> \n> System.InvalidCastExceptionUnable to cast object of type \'Raven.Client.Document.Async.AsyncDocumentSession\' to type \'Raven.Client.ITransactionalDocumentSession\'.\n>    at Raven.Client.Document.InMemoryDocumentSessionOperations.TryEnlistInAmbientTransaction() in InMemoryDocumentSessionOperations.cs: line 1103\n>    at Raven.Client.Document.InMemoryDocumentSessionOperations.PrepareForSaveChanges() in InMemoryDocumentSessionOperations.cs: line 960\n>    at Raven.Client.Document.Async.AsyncDocumentSession.<SaveChangesAsync>d__72.MoveNext() in AsyncDocumentSession.cs: line 911\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n>    at Raven.Tests.Bugs.SaveChangesAsync.<Should_just_work>d__0.MoveNext() in SaveChangesAsync.cs: line 28\n> \n> Result of this PR\n> \n> [image: pasted image at 2015_09_24 16_45]\n> https://cloud.githubusercontent.com/assets/174258/10078220/02a00c96-62e4-11e5-8beb-0e0cec86cca9.png\n> Random things\n> \n> I have a spike branch where I also touched the transactional recovery\n> storage.\n> \n> ## https://github.com/danielmarbach/ravendb/tree/AsyncDtcSupportSpike\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/606\n> Commit Summary\n> - Enabling transactional sessions with DTC under AsyncDocumentSession\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/Async/AsyncDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-0 (18)\n> - _A_ Raven.Client.Lightweight/Document/AsyncPump.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-1 (88)\n> - _M_ Raven.Client.Lightweight/Document/DocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-2 (13)\n> - _M_\n>   Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-3 (4)\n> - _M_ Raven.Client.Lightweight/Document/RavenClientEnlistment.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-4 (19)\n> - _M_ Raven.Client.Lightweight/ITransactionalDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-5 (7)\n> - _M_ Raven.Client.Lightweight/Raven.Client.Lightweight.csproj\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-6 (1)\n> - _M_ Raven.Client.Lightweight/Shard/BaseShardedDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-7 (7)\n> - _M_ Raven.DtcTests/Raven.DtcTests.csproj\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-8 (3)\n> - _A_ Raven.DtcTests/SaveChangesAsync.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-9 (47)\n> - _M_ Raven.DtcTests/app.config\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-10 (34)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/606.patch\n> - https://github.com/ravendb/ravendb/pull/606.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/606.\n'"
606,143731068,"b'The async pump (you have it also in your code) is Ok to combine with async code. It is not a perfect solution but better than making the enlistment use async void anyway. What is even more problematic at the current state of the client API that 3.0 still support DTC BUT not with the async client API. You only find that out in a ""in your face"" style `InvalidCastException`.\n\nFurthermore, there is no indication in the API or anything warning me as the client saying\n\nOh by the way we see that you rely on DTC. Did you now we are removing it in 4.0 so please consider it deprecated in 3.0 kind of hint message.\n'"
606,143887382,"b'@ayende the current behaviour is definately falling into the pit of failure. The exception and stack trace, when someone is trying to use something that it is reasonable to expect to work, in no way guide them to the fact that those combination of APIs are broken by design.\n\nIf that combination of apis is not a supported scenario then you should throw a meaningful exception at the earliest opportunity. \n\nIf it is supported, in v3, then this should be considered a bug and this pr considered as a possible way of fixing that bug. \n'"
606,144038943,"b'Daniel,\nCan you please also send us a CLA?\nravendb.net/contributing\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Thu, Sep 24, 2015 at 6:45 PM, Daniel Marbach notifications@github.com\nwrote:\n\n> This PR enables the client API to be used under a TransactionScope. I\n> tried to keep the breaking changes as minimal as possible. The following\n> changes are contained in this PR:\n> - Raven.DtcTests project upgrade to 4.5.1 to enable\n>   TransactionScopeAsyncFlowOption.Enabled\n> - Introduced AsyncPump\n>   http://blogs.msdn.com/b/pfxteam/archive/2012/01/20/10259049.aspx\n>   which allows to shim in and execute async operations inside the client\n>   enlistment\n> - RavenClientEnlistment uses AsyncPump to execute the Commit, Rollback\n>   or PrepareTransaction\n> \n> Who is affected\n> \n> All users of the client using SaveChangesAsync under a TransactionScope\n> will get an InvalidCastException during runtime.\n> \n> Relates to http://issues.hibernatingrhinos.com/issue/RavenDB-1405\n> Steps to reproduce\n> \n> ```\n> public class SaveChangesAsync : RavenTest\n> {\n>     [Fact]\n>     public async Task Should_just_work()\n>     {\n>         using (var documentStore = NewDocumentStore(requestedStorage: ""esent""))\n>         {\n>             EnsureDtcIsSupported(documentStore);\n> \n>             using (var s = documentStore.OpenAsyncSession())\n>             {\n>                 await s.StoreAsync(new AccurateCount.User { Name = ""Ayende"" });\n>                 await s.SaveChangesAsync();\n>             }\n> \n>             using (var s = documentStore.OpenAsyncSession())\n>             using (var scope = new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))\n>             {\n>                 var user = await s.LoadAsync<AccurateCount.User>(""users/1"");\n>                 user.Name = ""Rahien"";\n>                 await s.SaveChangesAsync();\n>                 scope.Complete();\n>             }\n> \n>             using (var s = documentStore.OpenAsyncSession())\n>             {\n>                 s.Advanced.AllowNonAuthoritativeInformation = false;\n>                 var user = await s.LoadAsync<AccurateCount.User>(""users/1"");\n>                 Assert.Equal(""Rahien"", user.Name);\n>             }\n>         }\n>     }\n> }\n> ```\n> \n> leads to\n> \n> System.InvalidCastExceptionUnable to cast object of type \'Raven.Client.Document.Async.AsyncDocumentSession\' to type \'Raven.Client.ITransactionalDocumentSession\'.\n>    at Raven.Client.Document.InMemoryDocumentSessionOperations.TryEnlistInAmbientTransaction() in InMemoryDocumentSessionOperations.cs: line 1103\n>    at Raven.Client.Document.InMemoryDocumentSessionOperations.PrepareForSaveChanges() in InMemoryDocumentSessionOperations.cs: line 960\n>    at Raven.Client.Document.Async.AsyncDocumentSession.<SaveChangesAsync>d__72.MoveNext() in AsyncDocumentSession.cs: line 911\n> --- End of stack trace from previous location where exception was thrown ---\n>    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n>    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n>    at Raven.Tests.Bugs.SaveChangesAsync.<Should_just_work>d__0.MoveNext() in SaveChangesAsync.cs: line 28\n> \n> Result of this PR\n> \n> [image: pasted image at 2015_09_24 16_45]\n> https://cloud.githubusercontent.com/assets/174258/10078220/02a00c96-62e4-11e5-8beb-0e0cec86cca9.png\n> Random things\n> \n> I have a spike branch where I also touched the transactional recovery\n> storage.\n> \n> ## https://github.com/danielmarbach/ravendb/tree/AsyncDtcSupportSpike\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/606\n> Commit Summary\n> - Enabling transactional sessions with DTC under AsyncDocumentSession\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/Async/AsyncDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-0 (18)\n> - _A_ Raven.Client.Lightweight/Document/AsyncPump.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-1 (88)\n> - _M_ Raven.Client.Lightweight/Document/DocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-2 (13)\n> - _M_\n>   Raven.Client.Lightweight/Document/InMemoryDocumentSessionOperations.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-3 (4)\n> - _M_ Raven.Client.Lightweight/Document/RavenClientEnlistment.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-4 (19)\n> - _M_ Raven.Client.Lightweight/ITransactionalDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-5 (7)\n> - _M_ Raven.Client.Lightweight/Raven.Client.Lightweight.csproj\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-6 (1)\n> - _M_ Raven.Client.Lightweight/Shard/BaseShardedDocumentSession.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-7 (7)\n> - _M_ Raven.DtcTests/Raven.DtcTests.csproj\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-8 (3)\n> - _A_ Raven.DtcTests/SaveChangesAsync.cs\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-9 (47)\n> - _M_ Raven.DtcTests/app.config\n>   https://github.com/ravendb/ravendb/pull/606/files#diff-10 (34)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/606.patch\n> - https://github.com/ravendb/ravendb/pull/606.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/606.\n'"
606,144180292,b'@ayende You should have received it from Sam.\n'
606,144196796,"b'Thanks, got it\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Tue, Sep 29, 2015 at 11:19 PM, Daniel Marbach notifications@github.com\nwrote:\n\n> @ayende https://github.com/ayende You should have received it from Sam.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/606#issuecomment-144180292.\n'"
609,151504973,"b'Hi,\nDo you have a CLA with us? \n'"
610,152144495,"b'Hi,\nI don\'t think that you have a CLA with us.\nCan you send us a signed CLA? http://ravendb.net/contributing\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Thu, Oct 29, 2015 at 7:02 AM, Mike Schenk notifications@github.com\nwrote:\n\n> ...that will allow strong-typing of the transformed result separate from\n> the type of the index entries.\n> \n> Allows the following syntax:\n> \n> List<XForm.Result> list = Session.Advanced.LuceneQuery<Idx.MapResult, Idx>()\n> .WhereEquals(m => m.MappedField, ""value"")\n> .SetResultTransformer<XForm, XForm.Result>()\n> .ToList();\n> \n> ---\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/610\n> Commit Summary\n> - Added new overload of SetResultTransformer to IDocumentQuery that\n>   will allow strong-typing of the transformed result separate from the type\n>   of the index entries.\n> \n> File Changes\n> - _M_ Raven.Client.Lightweight/Document/DocumentQuery.cs\n>   https://github.com/ravendb/ravendb/pull/610/files#diff-0 (56)\n> - _M_ Raven.Client.Lightweight/IDocumentQuery.cs\n>   https://github.com/ravendb/ravendb/pull/610/files#diff-1 (4)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/610.patch\n> - https://github.com/ravendb/ravendb/pull/610.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/610.\n'"
609,152764355,"b'Hi,\nno. \nAm I right, you require CLA (which is never mentioned in repo\'s readme) for **removing** several ""using"" statements, right?\n'"
609,152764507,"b'We require a CLA for any PR to be accepted.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Sat, Oct 31, 2015 at 9:05 PM, Art notifications@github.com wrote:\n\n> Hi,\n> no.\n> Am I right, you require CLA for _removing_ several ""using"" statements,\n> right?\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/609#issuecomment-152764355.\n'"
609,152764531,"b'FWIW, _removing_ code can be much better to a codebase than adding it.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Sat, Oct 31, 2015 at 9:08 PM, Oren Eini (Ayende Rahien) <\nayende@ayende.com> wrote:\n\n> We require a CLA for any PR to be accepted.\n> \n> *Hibernating Rhinos Ltd  *\n> \n> Oren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n> \n> Office: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n> \n> On Sat, Oct 31, 2015 at 9:05 PM, Art notifications@github.com wrote:\n> \n> > Hi,\n> > no.\n> > Am I right, you require CLA for _removing_ several ""using"" statements,\n> > right?\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ravendb/ravendb/pull/609#issuecomment-152764355.\n'"
609,152822201,"b'Where that CLA can be found? You may consider putting info about CLA to readme, if you care about being contributor-friendly.\n'"
609,152823074,"b'ravendb.net/contributing\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Sun, Nov 1, 2015 at 2:14 PM, Art notifications@github.com wrote:\n\n> Where that CLA can be found? You may consider putting info about CLA to\n> readme, if you care about being contributor-friendly.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/609#issuecomment-152822201.\n'"
612,153335711,b'Pulled to unstable\n'
614,154044400,"b""We can't pull this. you have WAY too many changed.\n"""
614,154044504,"b'opps.. mistake in the branch\n\nOn Thu, Nov 5, 2015 at 2:23 PM, Ayende Rahien notifications@github.com\nwrote:\n\n> We can\'t pull this. you have WAY too many changed.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/614#issuecomment-154044400.\n\n## \n\nBest regards,\n\n_Adi Avivi_\n\nRavenDB Core Team\n\nTel: 972-4-6227811\n\nFax:972-153-4-6227811\n\nEmail : adi@hibernatingrhinos.com\n\n_Raven__DB_\\* paving the way to ""Data Made Simple"" http://ravendb.net/\nhttp://ravendb.net/  *\n'"
619,155457758,b'wrong branch\n'
620,158776136,b'wrong branch\n'
622,159834210,"b'Okay, merging this to the unstable (ayende/ravendb)\n'"
623,160645855,"b'Hi,\nCan you tell what this is?\nYou are showing commits from 2010?!\n'"
628,166155251,"b'Ehm... I see that someone was using the word ""whatever"" instead of ""whether"" all over the code. I might go though all 90 files to change that, but not today.\n'"
628,166228147,b'Do you have a CLA with us?\n'
628,166240410,b'Yes\n'
628,166246196,b'Thanks\n'
638,175718251,b'wrong branch\n'
641,184090948,"b""Hi,\nCan you fill the CLA here?\nhttp://ravendb.net/contributors/cla/sign\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Mon, Feb 15, 2016 at 2:58 AM, Nikia Shaw notifications@github.com\nwrote:\n\n> To make RavenDB more approachable to a larger number of users\xe2\x80\x94from\n> informed developers to new devs and new and interested visitors\xe2\x80\x94I have\n> added a new section to the RavenDB README. The section is entitled What to\n> Use RavenDB for and When to Use It. As the name suggests, the new section,\n> a brief paragraph, explains in plain and straightforward language what\n> \n> ## RavenDB is used for and when one should use it.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/ravendb/ravendb/pull/641\n> Commit Summary\n> - Added a new section to the README entitled 'What to Use RavenDB for\n>   and When to Use It'. This new section is designed to help all visitors,\n>   including the nontechnical ones, understand what RavenDB is and what it is\n>   used for.\n> - Suggested edits for readme.md\n> - Merge pull request #2 from TristanYLovell/patch-1\n> \n> File Changes\n> - _M_ readme.md\n>   https://github.com/ravendb/ravendb/pull/641/files#diff-0 (4)\n> \n> Patch Links:\n> - https://github.com/ravendb/ravendb/pull/641.patch\n> - https://github.com/ravendb/ravendb/pull/641.diff\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/641.\n"""
640,184090998,b'Already merged #641 \n'
641,184215536,"b""Hi Oren,\n\nI just completed it - sorry about that and thank you!\n\nNikia\n\nOn Mon, Feb 15, 2016 at 2:11 AM, Ayende Rahien notifications@github.com\nwrote:\n\n> Hi,\n> Can you fill the CLA here?\n> http://ravendb.net/contributors/cla/sign\n> \n> *Hibernating Rhinos Ltd *\n> \n> Oren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n> \n> Office: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n> \n> On Mon, Feb 15, 2016 at 2:58 AM, Nikia Shaw notifications@github.com\n> wrote:\n> \n> > To make RavenDB more approachable to a larger number of users\xe2\x80\x94from\n> > informed developers to new devs and new and interested visitors\xe2\x80\x94I have\n> > added a new section to the RavenDB README. The section is entitled What\n> > to\n> > Use RavenDB for and When to Use It. As the name suggests, the new\n> > section,\n> > a brief paragraph, explains in plain and straightforward language what\n> > \n> > ## RavenDB is used for and when one should use it.\n> > \n> > You can view, comment on, or merge this pull request online at:\n> > \n> > https://github.com/ravendb/ravendb/pull/641\n> > Commit Summary\n> > - Added a new section to the README entitled 'What to Use RavenDB for\n> >   and When to Use It'. This new section is designed to help all visitors,\n> >   including the nontechnical ones, understand what RavenDB is and what it\n> >   is\n> >   used for.\n> > - Suggested edits for readme.md\n> > - Merge pull request #2 from TristanYLovell/patch-1\n> > \n> > File Changes\n> > - _M_ readme.md\n> >   https://github.com/ravendb/ravendb/pull/641/files#diff-0 (4)\n> > \n> > Patch Links:\n> > - https://github.com/ravendb/ravendb/pull/641.patch\n> > - https://github.com/ravendb/ravendb/pull/641.diff\n> > \n> > \xe2\x80\x94\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/ravendb/ravendb/pull/641.\n> \n> \xe2\x80\x94\n> Reply to this email directly or view it on GitHub\n> https://github.com/ravendb/ravendb/pull/641#issuecomment-184090948.\n"""
643,192434249,b'Looks like duplicate of http://issues.hibernatingrhinos.com/issue/RavenDB-4285\n'
643,193248673,b'Thanks!\n'
643,193267954,b'Merged to unstable\n'
643,193302693,"b'Yes, this was a duplicate, but I also added a unit test.\n'"
650,211432972,b'i dont know why all of those changes apear under my commit all i did was adding a missing configuration to the configuration test\n'
652,226498685,b'Wrong repository. Do a PR against ayende/ravendb/v3.5\n'
653,229737020,b'@fitzchak Please review this.\n'
653,231020667,"b""Any news?\nI'll need to plan next steps on our end if something like this ends on 3.5 (which would include planning and testing our upgrade from 3.0 to 3.5)\n"""
653,231024459,"b""@brunomlopes I'm looking into this\n"""
653,231024891,"b""Thanks.\n\nOn Thu, Jul 7, 2016 at 10:09 AM, Fitzchak Yitzchaki <\nnotifications@github.com> wrote:\n\n> @brunomlopes https://github.com/brunomlopes I'm looking into this\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/ravendb/ravendb/pull/653#issuecomment-231024459, or mute\n> the thread\n> https://github.com/notifications/unsubscribe/AAFEWr12eD09o1-qvH3Qdcogrhv1ndKyks5qTMI2gaJpZM4JCP5T\n> .\n"""
653,231029265,b'@brunomlopes Looking good.\n\nDo you have a CLA with us? \nhttp://ravendb.net/contributing\n'
653,231032828,"b'Yeah, from ""Wed, Oct 13, 2010 at 3:18 PM.""\n\nI\'ll try to improve the tests to check the arrays themselves\n'"
653,231041373,b'OK\n'
653,231072886,"b'@fitzchak there you go, now the test checks the array, in case there was some other issue.\n'"
653,231081417,"b""@brunomlopes Please send this PR to ayende/ravnedb v3.5, we'll merge it there.\n"""
654,233330960,"b'Hello,\n\nPlease create a new PR against the ayende/ravendb repository, v3.5 branch.\n'"
655,236143010,"b'Hi,\nWe don\'t accept any more changes to the 3.0 branch that aren\'t major bug fixes.\nPlease send a PR to the 3.5 branch.\n\nAlso, we won\'t accept ""small fixes"", please separate the changes to individual commits with explanation on what you are doing and why.\n\nSee the contrib guide:\nhttp://ravendb.net/contributing\n'"
655,236283641,"b'@ayende Hi, thank you for response. I will send PR to 3.5.\nI want to make changes by one commit because it is just warnings/errors of static analyzer.\nDo you accept it if I will make it by one commit? I can change commt message if you want.\n'"
655,236302081,b'What static analyzer ? \nAnd one commit is not good if there are different things going on there\n'
655,236306715,b'It is PVS Studio.\nOk. I will make commit for each warning/error.\n'
656,236377428,"b'Hi,\nPlease send the PR to ayende/ravendb \nAnd we need your CLA\n'"
659,242717056,"b'Hi,\n\nthis has been already fixed in our development branch https://github.com/ayende/ravendb/commit/c72a88a043f0d771e24e90c54775e9d5f5136fc0\nand will be included in the next release.\n\nThanks for contribution!\n'"
660,243119277,"b'Hi,\nDo you have a CLA with us? http://ravendb.net/contributing\n'"
660,243124286,b'Please send PRs to ayende/ravendb\n'
662,253440212,"b'Hi,\nDo you have a CLA with us?\n'"
662,253440251,b'http://ravendb.net/contributing\n'
662,253574065,"b'Ah, not yet. My coworker has one from a previous pull request. Sent to support@ravendb.net\n'"
662,253713683,"b""Thanks, you'll probably need to do the same on 3.5\n"""
663,253734285,b'Closing for now until we get feedback from GH.\n\ncc @ppekrol \n'
675,254343204,b'Hi!\n\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\n\nFollowing contributors are not in our database:\n- Kyle Levien (kyle.levien@ingeniux.com)\n- Kyle Levien (tehkyle@users.noreply.github.com)\n\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\n'
674,254424744,b'Hi!\n\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\n\nFollowing contributors are not in our database:\n- Juli\xc3\xa1n Bayardo (julian.bayardo@corvalius.com)\n\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\n'
679,254511363,b'Hi!\n\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\n\nFollowing contributors are not in our database:\n- Juli\xc3\xa1n Bayardo (julian.bayardo@corvalius.com)\n\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\n'
675,254611186,b'Thanks\n'
688,255086696,"b'Can you update the PR, it is conflicting.\n'"
698,255545261,"b""Doesn't look like the latest\n"""
699,256018634,b'Rebased\n'
721,256620159,b'One more thing to fix.\n'
721,256620236,"b""OK nevermind. I'm gonna make a followup commit.\n"""
725,256781050,b'Hi!\n\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\n\nFollowing contributors are not in our database:\n- Kyle Levien (kyle.levien@ingeniux.com)\n- Kyle Levien (tehkyle@users.noreply.github.com)\n\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\n'
725,257078861,"b""Please note, 3.5 shipped already, and the PR was accepted because it represent no breaking changes.\nHowever, this will be rolled into the next patch release, whenever we'll make it ready.\n\nAny breaking changes / features would be pushed into 3.6\n"""
728,257165915,b'Merged manually: https://github.com/ravendb/ravendb/commit/bddd90296bf4932ce42d84a4d53c7080b7d58eb0\n'
733,257176285,b'Add this commit to the #730 PR\n'
745,257686605,"b""It isn't possible for me to review it like this.\nPlease squash such commits.\nI have done it in this case, and the commit and the review on it can be found here:\nhttps://github.com/ravendb/ravendb/pull/753/commits/3628dd21affa2d877af6db6eccc8fd20a48fc9db\n"""
746,257690034,b'Merged manually because of conflicts\n'
746,257691569,b'Please note that we have failing tests now\n'
751,257703895,b'Tests are failing because of this.\n'
751,257704826,b'@ml054 Please review notification/progress and Studio part\n'
751,257819439,b'Studio review completed. \n'
763,257972712,b'I like the -1 index for scanning tombstones\n'
763,257976272,b'Merge manually\n'
782,258418353,"b'We are already controlling the size of the compression buffer here:\nhttps://github.com/ayende/ravendb/blob/v4.0/src/Voron/Impl/Journal/WriteAheadJournal.cs#L1055\n\nSo it will reduce to the max scratch file size, but if we have nothing to do, we might get rid of everything as well.\n\nI wonder if we can also get rid of the existing scratch file (which will likely be large)\n'"
782,258419540,b'This is what I was thinking. First trim will be to 256 MB if greater and if we have nothing to do then reduce to 64KB.\n'
782,258420407,b'Not sure about scratch. We would have to prevent read transactions (queries) and apply logs to data file in meanwhile. Also I think that txw Id should be increased.\n'
782,258420627,"b'Yeah, let us ignore this for now, it is going to be 256MB after pretty big writes.\n'"
779,258427427,b'Manually merged the PR\n'
779,258427513,b'gi\n'
784,258517799,"b'Closing, squashing commits with proper commit message.\n'"
784,258529130,"b""please also don't use PascalCase in files, because all other files uses lowerCase. It works fine on windows, but we can get serious toubles with debugging when on linux. \n"""
784,258529735,"b""Will do. I was cognizant of that; I left them PascalCased because some of the file names conflict with the old grid. But I'll update that in a new PR.\n"""
784,258532517,b'maybe you can simply rename widget name so we can use old and new at the same time until we get rid of all usages of old one. I will try to review your changes in half an hour.  \n'
784,258550810,"b""Thanks for the review! I've updated my code according to all the changes you've suggested here.\n\nI'm going to submit a new PR that squashes all the commits on my local branch.\n"""
783,258674875,"b""Too aggressive, and we don't want to have indexes waking up a lot if they have no work to do\n"""
790,258685497,b'Manually merged\n'
828,259132937,b'again using tgit switch is causing conflicts not sure why but the files should be over written\n'
828,259133168,b'Where are the tests for this in 4.0?\n'
828,259133534,"b""there is one test i added, it was not failing but it was an edge case we were not covering i'll add it in a moment\n"""
847,259487008,"b""- Same mid term // issue.\n- Why isn't there a test for it?\n"""
854,259716523,b'I will change approach.\n'
857,259721705,"b""Checking error I've encountered during a full scale test\n"""
853,259809690,b'After this Raven.Tests.Issues.TP_Issues.three_tasks_one_failing_with_enumerator hangs.\n'
853,259811306,"b'@ppekrol fixed, this was a test only issue.\n'"
854,260150308,b'Draining queries before compaction now.\n'
854,260180805,b'User RW implemetnation for this.\n'
854,260181204,"b'Ok, note that RW is not async/await compatible IIRC\n'"
854,260181229,"b'Yes, I handled that by exiting the lock before the await\n'"
813,260370909,b'Could you fix it in Release mode as well ? Visual studio Test Explorer is not working yet. I guess that the nuget package RavenDb.Tests.Helpers is compiled in Release mode.\n'
879,260969039,b'You also need to write client API methods for this... and some tests would be awesome.\n'
877,261055606,b'@efratshenhar Please make sure that this also happens on the new client.\n'
874,261068104,"b'@gregolsky I manually merged some conflicts, can you verify them?\n'"
876,261069044,b'Please take a look at db2935ef890e12d02e62d1ffb2b6081b893f37ec\n'
885,261298061,b'Also see : https://github.com/aviviadi/TestFallocate  (we need to add testing to mmap etc.)\n'
867,261342916,"b'So probably better to throw\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini\\* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\nOn Thu, Nov 17, 2016 at 4:53 PM, Federico Andres Lois <\nnotifications@github.com> wrote:\n\n> ## _@redknightlois_ commented on this pull request.\n> \n> In src/Voron/Platform/Win32/Win32MemoryMapPager.cs\n> https://github.com/ravendb/ravendb/pull/867:\n> \n> > -            if (UsePageProtection || force)\n> > -            {\n> > -                Win32NativeMethods.MEMORY_BASIC_INFORMATION memoryInfo1 = new Win32NativeMethods.MEMORY_BASIC_INFORMATION();\n> > -                int vQueryFirstOutput = Win32NativeMethods.VirtualQuery(start, &memoryInfo1, new UIntPtr(size));\n> > -                int vQueryFirstError = Marshal.GetLastWin32Error();\n> >   +\n> > -                Win32NativeMethods.MemoryProtection oldProtection;\n> > -                bool status = Win32NativeMethods.VirtualProtect(start, new UIntPtr(size), Win32NativeMethods.MemoryProtection.READONLY, out oldProtection);\n> > -                if (!status)\n> > -                {\n> > -                    int vProtectError = Marshal.GetLastWin32Error();\n> >   +\n> > -                    Win32NativeMethods.MEMORY_BASIC_INFORMATION memoryInfo2 = new Win32NativeMethods.MEMORY_BASIC_INFORMATION();\n> > -                    int vQuerySecondOutput = Win32NativeMethods.VirtualQuery(start, &memoryInfo2, new UIntPtr(size));\n> > -                    int vQuerySecondError = Marshal.GetLastWin32Error();\n> > -                    Debugger.Break();\n> \n> Debugger.Break while an interesting thing to happen, will have impact on\n> CI server if we have such an error.\n> \n> \xe2\x80\x94\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> https://github.com/ravendb/ravendb/pull/867, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAHIs_N0nrU-N5dBT10aXlZeE6loF_WBks5q_Gp7gaJpZM4Kxg4d\n> .\n'"
885,261360154,b'Manually merged\n'
899,262203342,b'@JudahGabriel Can you go over the changes?'
899,262263753,"b'OK. I will fix these issues, squash the commits into one, and issue a new PR.'"
896,262617276,b'Rebased your PR: https://github.com/ravendb/ravendb/pull/919\r\nAlso added very minor changes'
919,262630350,b'Rebased'
919,262639311,b'Manually merged already'
919,262642363,"b""Have you pushed this into the repository? I'm not seeing those commits anywhere."""
919,262642609,"b'Just pushed, yes.'"
920,262646320,b'Added extra improvements.'
924,262744831,b'The tests are failing.'
927,262757885,"b'Closed, failing tests...'"
928,262938500,"b'This is for review only, so I assume that you know about the failing tests?'"
928,262970976,"b""Yes. I'm aware of that. Failing tests are related to updates / deletes and index debug extensions for map reduce visualizer - they cannot deal with compressed pages yet."""
928,262995062,"b'Okay, that is fine, just wanted to verify.'"
928,263059652,"b""FYI: Caching mechanism is faulty. In particular there is no need to have two separate caches for read / write usages (that's actually very wrong approach). It's going to be changed."""
928,263107354,"b'I had a hard time reviewing each commit, so I squashed them all and did a one pass review.\r\nPlease take a look here for my comments:\r\nhttps://github.com/ayende/ravendb/commit/2bb59602fd1a2a2b2e85463a38d46928c5318565'"
945,263148836,b'Why did you close the PR?'
945,263203857,"b""Tests were failing... wanted to make sure they're not mine"""
961,263557059,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- aviv86 (aviv@ayende.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
973,263880659,"b""That isn't the right fix on Linux"""
983,264111971,"b""Please don't merge this, we want to remove this butotn from left menu and move to view. """
983,264112795,"b'@ayende We are removing New* actions from menu since it\'s out of sight, when interacting with the view. They will all go to views as buttons instead of ""Add/New something"" menu actions.'"
983,264112938,"b'We need this soonest, we are trying to get a version freeze so we can burn the SD cards'"
983,264114086,b'Closed this PR as requested by @ml054 '
1024,264708187,"b""Shouldn't we also call AddAlert?"""
1024,264708247,b'yes it is probably a good idea'
1034,265098365,"b'This will make sure we wait until we have expired document. 10 seconds in\nthis case.\n\nOn Dec 6, 2016 9:33 AM, ""Marcin Lewandowski"" <notifications@github.com>\nwrote:\n\n> *@ml054* commented on this pull request.\n> ------------------------------\n>\n> In test/FastTests/Smuggler/SmugglerApiTests.cs\n> <https://github.com/ravendb/ravendb/pull/1034#pullrequestreview-11534594>:\n>\n> > +                    using (var session = exportStore.OpenAsyncSession())\n> +                    {\n> +                        await Expiration.SetupExpiration(exportStore);\n> +                        var person1 = new Person {Name = ""Name1""};\n> +                        await session.StoreAsync(person1).ConfigureAwait(false);\n> +                        var metadata = session.Advanced.GetMetadataFor(person1);\n> +                        metadata[Constants.Expiration.RavenExpirationDate] =\n> +                            new RavenJValue(DateTime.UtcNow.AddSeconds(10)\n> +                                .ToString(Default.DateTimeOffsetFormatsToWrite));\n> +\n> +                        await session.SaveChangesAsync().ConfigureAwait(false);\n> +                    }\n> +\n> +                    var date = DateTime.UtcNow;\n> +\n> +                    SpinWait.SpinUntil(()=> date.AddSeconds(10) < date , TimeSpan.FromSeconds(10));\n>\n> What this line do?\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/1034#pullrequestreview-11534594>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKW5uFQgpwjFk3yx5MUlBK7eUYBFFGx3ks5rFQ-8gaJpZM4LETfW>\n> .\n>\n'"
1034,265112517,b'I think \r\n>   await Task.Delay(10000);\r\n\r\nMight be less resource intensive.  '
1034,265126198,b'I think you right Task.Delay will take less resources\r\n'
1043,265422770,"b""Failing test\r\n```\r\n  SlowTests.MailingList.LoadAllStartingWith.LoadAllStartingWithShouldNotLoadDeletedDocs [FAIL]\r\n    System.InvalidCastException : Unable to cast object of type 'Raven.Json.Linq.RavenJObject' to type 'Raven.Json.Linq.RavenJArray'.\r\n    Stack Trace:\r\n      C:\\Work\\ravendb-4.0\\src\\Raven.Client\\Document\\Batches\\LazyStartsWithOperation.cs(90,0): at Raven.Client.Document.Batches.LazyStartsWithOperation`1.HandleResponse(GetResponse response)\r\n      C:\\Work\\ravendb-4.0\\src\\Raven.Client\\Document\\DocumentSession.cs(991,0): at Raven.Client.Document.DocumentSession.ExecuteLazyOperationsSingleStep(ResponseTimeInformation responseTimeInformation)\r\n      C:\\Work\\ravendb-4.0\\src\\Raven.Client\\Document\\DocumentSession.cs(943,0): at Raven.Client.Document.DocumentSession.ExecuteAllPendingLazyOperations()\r\n      C:\\Work\\ravendb-4.0\\src\\Raven.Client\\Document\\DocumentSession.cs(879,0): at Raven.Client.Document.DocumentSession.<>c__DisplayClass73_0`1.<AddLazyOperation>b__0()\r\n         at System.Lazy`1.CreateValue()\r\n         at System.Lazy`1.LazyInitValue()\r\n      C:\\Work\\ravendb-4.0\\test\\SlowTests\\MailingList\\LoadAllStartingWith.cs(45,0): at SlowTests.MailingList.LoadAllStartingWith.LoadAllStartingWithShouldNotLoadDeletedDocs()\r\n```"""
1052,265458960,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- maximburyak (maxim@email.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
1067,265723812,b'Signed the CLA now'
1047,265730643,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- maximburyak (maxim@email.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
1047,265731162,b'something went wrong with the rebase'
1070,265743055,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- karmeli87 (karmeli87@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
1070,265751355,"b'Found a mistake (The way of the blocking sockets is wrong), will reopen later. '"
1073,265762859,b'We need to move dotnet.tar.bz2 outside the repo.'
1067,265849040,"b""Next time, please make sure that your PR doesn't include all those merge commits."""
1069,265858039,b'This PR fails ALL unit tests.\r\nThe reason is a pretty obvious NRE issue that should have been caught when running the FastTests.'
1050,265860501,"b'This fail the tests, you need to run FastTests before any PR'"
1069,265881211,"b""i'm not sure what happened here i did run the tests this is how i found i forgot to open the transaction and all the tests passed after that fix"""
1069,265995958,b'https://github.com/ayende/ravendb/commit/622f9372d820226feefbfda6a3110cd35b5bfd3e'
1095,266702070,b'Manually merged '
1115,267064470,"b'Please note that this PR has conflicts, please fix them.'"
1112,267070750,b'This has a conflict.'
1115,267071775,"b'@Danielle9897 I will resolve this conflict tomorrow, after I resolve: https://github.com/ravendb/ravendb/pull/1112'"
1115,267157484,"b'Ok, ready for merge. '"
1112,267158124,b'Conflict resolved. '
1148,268247361,b'Slow tests are failing - I will look into that. PR just for the review purposes. '
1148,268251509,b'Tests fixed'
1160,268473816,b'Already fixed by Oren'
1187,268876669,b'Did you push the additional fixes?'
1187,268938694,"b""No, I did not push additional fixes yet\r\nJust commented 'done' for those I did, so that I'll know what is left to be done"""
1187,269074256,b'All additional fixes were pushed now'
1213,269442349,b'Please open a new one with the updated changes'
1216,269448472,b'Manually merged'
1225,269530907,"b""Also, there is little point yet to migrate tests that we'll just mark as skipped, we want to focus on moving tests that validate actual functionality."""
1236,269680717,b'I manually merged it.'
1236,269695468,b'The results of the merge are here:\r\nhttps://github.com/ayende/ravendb/tree/RavenDB-5882\r\n\r\nPlease use them for future work'
1233,269699054,b'This is not ready to be merged. I pushed my changes on top of yours here: https://github.com/ayende/ravendb/tree/RavenDB-5652'
1235,269735087,b'yes I get it but IMHO we should publish this event in resource manager and on resources page we should only subscribe. I will check this anyway'
1244,269918300,b'Please also create a test for this'
1259,270068628,"b""Closing this PR, A different design will be tried, \r\n(adding a transparent 'div' between page and resource switcher & notification center)"""
1256,270112174,b'Also check my comment here: http://issues.hibernatingrhinos.com/issue/RavenDB-5611#comment=67-14832'
1265,270233779,b'You can always rebase from time to time to avoid staying too far from main branch. :)'
1266,270382883,b'[DO NOT MERGE] I made a mistake here (fat finger kind of mistake) I will ammend the PR and change back the title when viable.'
1270,270423963,b'@ayende want me to rebase this?'
1270,270424773,b'already merged'
1272,270595046,b'I am closing this PR because I opened issues: 6029 & 6030'
1296,270701646,b'New PR: https://github.com/ravendb/ravendb/pull/1298'
1301,271109927,b'`UnmanagedBuffersPool` is not using `ElectricFencedMemory` - so you run into heap corruption that is showing itself a lot later than it should.'
1301,271111148,b'Moved this to https://github.com/ayende/ravendb/tree/bad_mem'
1309,271156432,b'No test'
1307,271204449,"b""Couldn't you have made the signatures IEnumerable<string> instead to minimize the breaking change?\r\n\r\nI know it's in the database methods, but these methods are used in triggers which are supported extensibility points.\r\n\r\nIEnumerable<string> will still work with new string[] if people do that, and will also do an efficient Contains lookup because Enumerable.Contains() checks if the IEnumerable<T> implements ICollection<T> first, which HashSet does."""
1307,271231165,b'@jahmai yes'
1328,271577039,b'What it is strange that there are no failing tests with IgnoreCase. Modified it already though.'
1343,271649538,b'I think we need to:\r\na) unify configuration handling: http://issues.hibernatingrhinos.com/issue/RavenDB-4489 now we have a same code for changing the configuration in multiple places\r\nb) check if we can disable indexing without reloading the database\r\nc) check if we can disable indexing without loading offline database (and then reloading it)'
1343,271661507,"b""I skimmed though PR and have few comments on studio part. I describe them tomorrow. Please don't merge yet. """
1343,271670802,"b""@ml054 we will have to speak tomorrow , have some ideas for the UI\r\n@ppekrol when did you find this issue?\r\nIt will be nice not to reload it again but I couldn't find a good way to do it. (look at the disable database)\r\n """
1344,271813332,b'New design at RavenDB-6090'
1347,271850577,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Christophe (christophe.dubray@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
1359,272202904,b'Could be related to the issue we are seeing at Codealike dataset too.'
1359,272218038,b'Confirming they are NOT related.'
1371,272682755,b'Please resolve the conflict and re-issue'
1375,272704211,b'Can you fix the PR conflicts?'
1370,272789711,b'When do you plan to release next stable version with this fix? As far as I know it is now in prerelease package RavenDB Database 3.5.3-patch-35186.'
1370,272803621,b'The patch version went through the same stabilization process. You can use that.'
1392,273043614,b'Once we run this on indexes of SO dataset we will end up with dozen of journals residing on the disk even though the indexing work is done.\r\n\r\nWe might want to cleanup the files more frequently than 72 hours.'
1392,273044388,b'Note that we already have `StorageEnvironment.Cleanup` '
1392,273044654,b'It would be good to have some tests for journals reuse / cleanup'
1396,273067651,b'Gonna do another one using @ml054 new studio pr flow'
1411,273708278,b'We should also implement http://issues.hibernatingrhinos.com/issue/RavenDB-6141'
1411,273748065,"b'I will fix those in a second, this was a mistake, git resolved conflict automatically in a wrong way.'"
1418,273856059,"b""I'm not sure that I like this, but it has some real benefits.\r\n\r\nOn the one hand, we already have a standardized model for handling configuration.\r\nOn the other hand, this give us a way to configure this on a per endpoint basis.\r\n\r\nI'm leaning toward making this a standard configuration option. \r\n\r\n@ppekrol @myarichuk @talweiss1982 Your opinion?"""
1420,273860905,b'Looking into this now.'
1418,273861768,b'@ayende For me it would be more natural to have it in configuration under Raven/Replication/HeartbeatIntervalInSec\r\n\r\nThis way user can control this better using server/global/database configuration.'
1430,274329400,b'what caused WillLog to hang?'
1430,274329762,"b""I've accidentally merged both the exceptions into one so we never got here: https://github.com/ravendb/ravendb/blob/v4.0/src/Raven.Server/Documents/SqlReplication/SqlReplication.cs#L243-L248\r\nAnd this test expects to get a log message from that part.\r\n"""
1430,274330318,"b""We should change the test to have a timeout\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Sun, Jan 22, 2017 at 3:03 PM, Pawe\xc5\x82 Pekr\xc3\xb3l <notifications@github.com>\nwrote:\n\n> I've accidentally merged both the exceptions into one so we never got\n> here: https://github.com/ravendb/ravendb/blob/v4.0/src/Raven.\n> Server/Documents/SqlReplication/SqlReplication.cs#L243-L248\n> And this test expects to get a log message from that part.\n>\n> \xe2\x80\x94\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/1430#issuecomment-274329762>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHIszprbUb9qlGdXzG0AFBtaJ9-U6fRks5rU1OqgaJpZM4LqX3a>\n> .\n>\n"""
1430,274330839,b'Done'
1438,274470082,"b'there are issues, I will redo PR'"
1436,274486510,b'@aviviadi 1229 tests are failing in this PR'
1436,274494481,"b""Yes, this broke something fundamental, but it's fast :-)"""
1442,274856385,b'Close to resolve the conflicts.'
1454,275244194,"b'No, you don\'t actually. You are already waiting there with the\n`WaitForDocument`\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Wed, Jan 25, 2017 at 11:48 PM, karmeli87 <notifications@github.com>\nwrote:\n\n> *@karmeli87* commented on this pull request.\n> ------------------------------\n>\n> In test/FastTests/Server/Replication/ReplicationResolveToLeader.cs\n> <https://github.com/ravendb/ravendb/pull/1454>:\n>\n> > +\n> +            SetupReplication(store1,store2);\n> +\n> +            var conflicts = WaitUntilHasConflict(store2, ""foo/bar"");\n> +            Assert.Equal(2, conflicts[""foo/bar""].Count);\n> +\n> +            SetupReplication(store2, new ReplicationDocument\n> +            {\n> +                DefaultResolver = new DatabaseResolver\n> +                {\n> +                    ResolvingDatabaseId = GetDocumentDatabaseInstanceFor(store2).Result.DbId.ToString(),\n> +                    Version = 0\n> +                }\n> +            }, store1);\n> +\n> +            await Task.Delay(500);\n>\n> I know, But have to wait until all changes are propagated (actually, this\n> doesn\'t grantee it either).\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/1454>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wAK3j7_7ai32H0UIpkmVsWRm_FU6Iks5rV8M_gaJpZM4Lt1Qf>\n> .\n>\n'"
1462,275454616,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Michael Yarichuk (michael@hrhinos.local)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
1477,276188324,b'Running the fast test with this on (and `MEM_GUARD` off) results in doubling of out test times.\r\nRun the before/after using `longest-tests.ps1` and see what is going on'
1493,276353618,b'temp'
1494,276370971,"b'LEt me check one more thing, before we merge. '"
1496,276498274,"b""I don't think we actually use this\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Tue, Jan 31, 2017 at 10:51 PM, Pawe\xc5\x82 Pekr\xc3\xb3l <notifications@github.com>\nwrote:\n\n> *@ppekrol* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Replication/DocumentReplicationLoader.cs\n> <https://github.com/ravendb/ravendb/pull/1496>:\n>\n> >              ea.ThrowIfNeeded();\n>          }\n>\n> +\n> +        public Dictionary<string, long> GetLastProcessedDocumentTombstonesPerCollection()\n>\n> Maybe support @all_docs? https://github.com/ravendb/\n> ravendb/blob/v4.0/src/Raven.Client/Data/Constants.cs#L113\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/1496>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wABb7-jOi8BJERw8l3FcxVzPzEu4Fks5rX57TgaJpZM4Lyyv5>\n> .\n>\n"""
1496,276512994,"b'this is why I was suggesting to add it to cover the case that replication requires. If the returned result will be <@all_docs, some_etag> then the cleaner will know how to handle that.'"
1496,276558090,"b'Oh, as the special key, yeah, that would work'"
1512,276663835,b'http://issues.hibernatingrhinos.com/issue/RavenDB-6255'
1528,276954646,b'http://issues.hibernatingrhinos.com/issue/RavenDB-6226'
1578,278247281,b'already fixed'
1578,278247369,b'ok'
1580,278294914,b'This is wrong when running tests in parallel'
1583,278330673,b'Some test failed.'
1591,278583055,b'Some tests are failing. Please do not merge'
1598,278945139,b'Why are there no tests for this functionality? '
1613,279378795,"b'PutIndexOperation should stay, it should send array with 1 element'"
1613,279379220,b'Why?\r\nWe just add a `params` there.'
1613,279379350,b'`store.Admin.Send(new PutIndexesOperation(indexDefinition));`'
1613,279380367,"b'params is fine also, true.\r\nNeeds to be added and tests simplified.\r\n\r\nWas thinking more about the API, with params you will get the array as result requiring you to do:\r\nvar indexId = store.Admin.Send(new PutIndexesOperation(indexDefinition))[0];\r\nAnd in my option it would be unwrapped by the operation itself:\r\nvar indexId = store.Admin.Send(new PutIndexOperation(indexDefinition));'"
1613,279380625,"b'This is our lower level API, not really something users will call directly. They use `IndexCreation` for that, no?'"
1613,279380836,"b""ok, so let's stay with params."""
1620,279394643,b'Found one small bug. '
1625,279519158,b'Please fix the conflict'
1616,279523209,b'already fixed'
1625,279623117,b'Ready to merge. '
1636,279737988,b'(concurrency issues at 6219 are not solved yet)'
1639,279756684,b'Rebased and fixed conflicts'
1650,280017563,b'What was the impact on the memory?'
1650,280021980,"b""I haven't checked that. Just reproduced it and noticed the problem using a very small unit test (`CanTransformWithDynamicFields`)."""
1665,280351731,b'I have fixed the comments'
1671,280906015,b'There is no need to do so'
1673,280917534,b'fixed'
1674,280918109,"b'Closing for now, will reopen after implementing changes'"
1686,281038734,b'Need to change the test it is not covering the original problem'
1698,281457215,b'This fails tests.'
1707,281659351,b'The parser expects for ranges to get Lx and Dx'
1701,281674421,b'WIP - but can be reviewed.\r\nKnown issue: the test is failing sometimes with empty attachments... I guess there is an issue with memory management. Will investigate later.'
1713,281970122,"b'Please also add tests for this, do that by adding two dbs, running sample data, setting repl, etc.'"
1701,282017863,b'Ready to merge'
1701,282039304,"b'@fitzchak 1000+ tests are failing here, can you look into that?'"
1701,282123430,b'Closing this because I rebased and squashed everything'
1737,282652053,"b""Do we really need to have entire code of `Lambda2JS` lib being a part of RavenDB solution. That's inconsistent with other libs we have: Lucene, Jint are forked by ravendb user (https://github.com/ravendb/) and we keep our code customizations (.net core support) there in separate branches (e.g. https://github.com/ravendb/lucenenet/tree/3.0.3-dnx). RavenDB sln just references DLLs."""
1737,282652346,"b'Yes, we are going to send a PR and then have our own fork'"
1737,282652563,b'OK'
1747,282719433,b'\xf0\x9f\xa4\xa3 '
1746,282719612,"b""So they'll be empty?"""
1746,282720286,"b'Yes, `@empty` exactly'"
1746,282720480,"b""Is this desriable for us? Should they be in 'hilo' ?"""
1746,282721155,b'Why did you need to exclude Raven/HiLo/ from system docs? Replication? (25800adfc06bba84d690ae300a8b4) \r\n\r\nI think it will be nice to put them in `@hilo` collection'
1746,282726896,b'Yes `@hilo` collection would work great'
1739,282746339,b'@fitzchak Can you rebase? You have 29 commits here.'
1739,282746711,b'This is on top of my changes and a lot of other PR'
1752,282755363,b'LGTM'
1806,284313946,b'@ml054 Can we merge this?'
1806,284318252,b'yes'
1829,285020230,"b'Failing tests\r\n```\r\n    FastTests.Server.Replication.ReplicationResolveToDatabase.UnsetDatabaseResolver [FAIL]\r\n      Timed out while waiting for conflicts on foo/bar we have 0 conflicts\r\n      {\r\n        ""OutgoingStats"": [],\r\n        ""IncomingStats"": [\r\n          {\r\n            ""Source"": ""from UnsetDatabaseResolver_81 at http://localhost:8080 (into database UnsetDatabaseResolver_82)"",\r\n            ""Status"": 1,\r\n            ""Message"": null,\r\n```'"
1847,285387219,b'already handled in https://github.com/ravendb/ravendb/pull/1843'
1850,285786046,b'This is causing test failures.'
1850,285881714,"b""Rebased and fixed RavenDB-4110. I'm getting a lot of failures from Sparrow/Voron though.\r\n\r\nE.g. in CaseSensitiveDeletes.ShouldWork_WithAnotherQuery\r\n```\r\nSystem.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\r\nParameter name: index\r\n   at Voron.Data.Tables.TableValueReader.ThrowIndexOutOfRange() in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\TableValueReader.cs:line 91\r\n   at Voron.Data.Tables.TableValueReader.Read(Int32 index, Int32& size) in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\TableValueReader.cs:line 55\r\n   at Voron.Data.Tables.TableSchema.SchemaIndexDef.GetSlice(ByteStringContext context, TableValueReader& value, Slice& slice) in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\TableSchema.cs:line 108\r\n   at Voron.Data.Tables.Table.InsertIndexValuesFor(Int64 id, TableValueReader& value) in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\Table.cs:line 513\r\n   at Voron.Data.Tables.Table.Insert(TableValueBuilder builder) in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\Table.cs:line 383\r\n   at Raven.Server.Documents.DocumentsStorage.Put(DocumentsOperationContext context, String key, Nullable`1 expectedEtag, BlittableJsonReaderObject document, Nullable`1 lastModifiedTicks, ChangeVectorEntry[] changeVector, DocumentFlags flags) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\DocumentsStorage.cs:line 2158\r\n   at Raven.Server.Documents.Handlers.BatchHandler.MergedBatchCommand.Execute(DocumentsOperationContext context) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\Handlers\\BatchHandler.cs:line 235\r\n   at Raven.Server.Documents.TransactionOperationsMerger.ExecutePendingOperationsInTransaction(List`1 pendingOps, DocumentsOperationContext context, Task previousOperation) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\TransactionOperationsMerger.cs:line 389\r\n   at Raven.Server.Documents.TransactionOperationsMerger.MergeTransactionsOnce() in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\TransactionOperationsMerger.cs:line 181\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at async Raven.Server.Documents.Handlers.BatchHandler.BulkDocs(?) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\Handlers\\BatchHandler.cs:line 43\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at async Raven.Server.Routing.RequestRouter.HandlePath(?) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Routing\\RequestRouter.cs:line 107\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at async Raven.Server.RavenServerStartup.RequestHandler(?) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\RavenServerStartup.cs:line 114\r\n```\r\n\r\nThis might be related to your or @redknightlois recent changes I think? I'm running all tests in R#."""
1850,285881949,"b'Another one\r\n\r\n```\r\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Sparrow.Collections.FastStack`1.Pop() in C:\\workspaces\\HR\\ravendb_3\\src\\Sparrow\\Collections\\FastStack.cs:line 164\r\n   at Voron.Data.Tables.TableSchema.Allocate(Transaction tx, TableValueBuilder& builder) in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\TableSchema.cs:line 68\r\n   at Voron.Data.Tables.Table.Allocate(TableValueBuilder& builder) in C:\\workspaces\\HR\\ravendb_3\\src\\Voron\\Data\\Tables\\Table.cs:line 1150\r\n   at Raven.Server.Documents.IndexesEtagsStorage.WriteEntry(Transaction tx, String indexName, IndexEntryType type, Int32 indexIndexId, TransactionOperationContext context, Boolean isConflicted, Boolean allowOverwrite) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\IndexesEtagsStorage.cs:line 261\r\n   at Raven.Server.Documents.IndexesEtagsStorage.OnIndexCreated(Index index) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\IndexesEtagsStorage.cs:line 121\r\n   at Raven.Server.Documents.Indexes.IndexStore.CreateIndexInternal(Index index, Int32 indexId) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\Indexes\\IndexStore.cs:line 266\r\n   at Raven.Server.Documents.Indexes.IndexStore.CreateIndex(IndexDefinition definition) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\Indexes\\IndexStore.cs:line 194\r\n   at async Raven.Server.Documents.Handlers.IndexHandler.Put(?) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Documents\\Handlers\\IndexHandler.cs:line 45\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at async Raven.Server.Routing.RequestRouter.HandlePath(?) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\Routing\\RequestRouter.cs:line 107\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at async Raven.Server.RavenServerStartup.RequestHandler(?) in C:\\workspaces\\HR\\ravendb_3\\src\\Raven.Server\\RavenServerStartup.cs:line 114\r\n```'"
1850,285895643,"b""Looks like. What is strange is that we haven't seen any of those for many days. Could they be race condition related? """
1850,285944965,b'The errors still happen?'
1850,285945078,"b'Yes, the problem was that we put the cache in the `TableSchema`, but that one is shared if you have similar schemas. In indexing, this is exactly what we have, and that is causing the issue.'"
1867,286340554,b'tests are failing!'
1868,286346456,b'Note that your changes to the `BlittableWriter` caused memory corruption. I changed it to use managed memory cached at the thread level.'
1868,286379269,"b""Strange. It shouldn't. What test showcase it? The use of unmanaged memory there ensures no bound checking"""
1868,286379446,b'```\r\n   using (var a = new SlowTests.Blittable.BlittableJsonWriterTests.ManualBuilderTestsSlow())\r\n   {\r\n       a.BigAmountOfPreperties(short.MaxValue);\r\n   }\r\n\r\n```'
1867,286395878,b'UpdateTheSameRevisoinWhenGettingExistingRevision was failing before'
1910,287611906,b'Looking into the failing tests'
1996,290193415,b'Merge via rebase'
1995,290193481,b'Currently breaks the tests'
2050,291476763,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- thorf (thor.halvor.frivold@nhn.no)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
2050,291483570,b'Merged a bit differently'
2064,292079107,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jon Stelly (jonstelly@gmail.com)\r\n- Jon Stelly (jonkymeric@gmail.com)\r\n- Jon Stelly (jon.stelly@assemblesystems.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
2064,292079117,b'@gregolsky Please review'
2064,292079235,"b""I'll resubmit this pull request with commits squashed"""
2069,292173778,b'@jonstelly Can you send the CLA?'
2069,292191488,"b""Hadn't clicked on the verify link.  Done now."""
2069,292194442,b'Thanks @jonstelly !\r\nTomorrow @gregolsky will be adjusting the scripts and incorporating them into our release process.'
2071,292214367,"b'I like the ""request review"" feature of GitHub... hasn\'t used it before.'"
2085,292781948,b'This is conflicting'
2085,292783516,b'https://github.com/ravendb/ravendb/pull/2087'
2153,295772323,"b'Quick question: Will the unprotected transaction data be written to a disk backed pager at any point in time? Couldnt figure that out from the code itself, but it is a huge point. '"
2153,295822841,"b""No, the data is always encrypted on the pagers, we copy the encrypted data to our own memory (currently just `VirtualAlloc`) and decrypt there.\r\nAt no point should you have the plain data on the pagers.\r\n\r\nThe buffers we use are secruely zeroed after use, so the decrypted data is only there for the lifetime of the transaction, once the tx is complete, the data is gone.\r\n\r\nThat doesn't mean that you can't peek into the decrypted data if you can access the memory, or force the data to go the page file, etc.\r\n\r\nWe do have a few pagers, (compression, recovery, etc) that are used for unencrypted data, and this [issue](http://issues.hibernatingrhinos.com/issue/RavenDB-6799) will track making sure that we are properly zeroing all the data."""
2216,297506995,b'@talweiss1982 check also my comments from the https://github.com/ayende/ravendb/pull/4657'
2216,297628093,"b""@talweiss1982 this PR does not compile and there are some conflicts. Can you rebase and resolve them?\r\n\r\n[Step 3/4] Server\\PeriodicExport\\PeriodicExportConfiguration.cs(63,31): error CS0246: The type or namespace name 'PeriodicExportConfiguration' could not be found (are you missing a using directive or an assembly reference?) [C:\\Builds\\RavenDB-PR-Tests\\src\\Raven.Client\\Raven.Client.csproj]"""
2239,298212839,b'What is the behavior now for PatchByIndex if a document was update midway through?'
2248,298825473,"b""It's administration related, but of informational nature. Also we need it\npublic to use in the script. Do you think it should be somewhere else?\n\n\xc5\x9br., 3.05.2017, 07:09 u\xc5\xbcytkownik Ayende Rahien <notifications@github.com>\nnapisa\xc5\x82:\n\n> Merged #2248 <https://github.com/ravendb/ravendb/pull/2248>.\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/2248#event-1066664071>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABeGrQQhSHaHbE9Ih0-majz8zopKNf8kks5r2AwggaJpZM4NOEdt>\n> .\n>\n-- \nGrzegorz Lachowski\n"""
2248,298825625,b'We use admin to denote stuff that is actually administrator related.\r\nBetter call it `/debug/server-id` or something like that.'
2248,298825859,"b""Ok. I'll change that.\n\n\xc5\x9br., 3.05.2017, 07:25 u\xc5\xbcytkownik Ayende Rahien <notifications@github.com>\nnapisa\xc5\x82:\n\n> We use admin to denote stuff that is actually administrator related.\n> Better call it /debug/server-id or something like that.\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/2248#issuecomment-298825625>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABeGrcOy8P5fcKTHmsd9aLAMswCOMrwjks5r2A_egaJpZM4NOEdt>\n> .\n>\n-- \nGrzegorz Lachowski\n"""
2239,299118214,"b""The current behavior of `PatchByIndex` is that first we collect ids of docs which we need to patch then we patch docs in a write transaction (in batches, `const int BatchSize = 1024`) and _don't_ specify the expected etag, so we don't care about the updates done meanwhile.\r\n\r\nHere (patch by collection, delete by collection) I changed that behavior so we get the concurrency exception if a doc has changed meanwhile and thought about making the same change for `PatchByIndex / DeleteByIndex`.\r\n\r\nWill it be fine or should I leave it as is and ignore the concurrency?"""
2239,299120568,"b'Yes, it is fine to ignore the concurrency, but we need to document it.'"
2239,299121869,b'OK'
2261,299310985,b'This gives us a lot of failing tests.'
2270,299396009,b'Sorry about that'
2292,300096582,b'Closing as per Danielle request. '
2304,300459516,b'@IdanHaim  why do we have to pass server url to getClusterTopology command? '
2304,300460296,"b'@ml054 The reason we pass the url to the server is that we might be routed through a proxy, so we need to report the url that the user has used to reach us.'"
2304,300461402,b'Ok I fault I thought that the url we use to send request. However I talked with @IdanHaim and he is gonna change window.location.host with appUrl.baseUrl. '
2308,300504922,b'It can be merged - SlowTests run locally are green'
2312,300634587,b'`SlowTests.Core.Session.Advanced.CanUseDefer` test cailed'
2312,300737658,b'CanUseDefer fixed in this PR: https://github.com/ravendb/ravendb/pull/2315'
2321,300847892,b'Amazing short change for such a big change'
2353,301767619,b'I forgot to fix tests'
2357,301901053,b'Please squash all the commits when you send the PR again'
2359,301935535,b'failing tests http://teamcity.hibernatingrhinos.com/viewLog.html?buildId=38620&buildTypeId=RavenDBPullRequests_Tests'
2362,302035674,"b""Something' wrong here with TCP closing."""
2364,302054125,"b'I also want to have a perf test of million docs, and switching over at different stages of the change vector, and how fast it takes'"
2368,302054717,"b""I'm not sure how useful that is, it doesn't make any difference to us in the costs between `HEAD` returning 200 or returning `304`"""
2368,302055224,"b'Right, but since we are going to cache this anyway I fixed here a bug where we will get this from cache we would throw NotSupportedException because of not overriding the SetResposne method. '"
2364,302194841,b'_all_ the subscription tests are broken.'
2372,302311344,"b'Many tests are failing, I will close, merge and reopen the PR'"
2384,302338380,b'Tests are hanging... looking into this.'
2407,302716634,"b""I'm also not seeing where in \td11877f you prevented the creation?"""
2407,302812030,b'Creation prevented here:\r\nhttps://github.com/ravendb/ravendb/pull/2407/files#diff-1b04de6ee2cc09d658cbd72076e98a51L488\r\n\r\nby removing `TryStoreJournalForReuse` from `TryDeleteJournal` which is called only during `RecoverDatabase`'
2407,302813894,"b'The `TryDeleteJournal` change was non obvious, and slipped by.'"
2426,303005393,b'@talweiss1982 tests are failing'
2426,303036060,"b""I'll go over the failing tests don't modify the PR so we won't run into conflicts"""
2429,303046998,"b""@ayende failover tests (6 out of 8) were fixed in the last commit\r\nVoron.Tests.dll: Voron.Tests.Storage (1)\r\n Batches.MergedBatchErrorHandling \r\nis not failing on my machine i have ran it 10,000 times \r\n\r\n Raven.Tests.Issues.dll: Raven.Tests.Issues (1)\r\n RavenDB_3758.Can_Overwrite_Side_By_Side_Index this one fails because of :\r\nRaven.Abstractions.Exceptions.IndexCompilationException: 'Cannot modify indexes while indexing is in progress (already waited full minute). Try again later'\r\nit fails with around 8% failing rate, i'll revert to v3.5 and check if the test pass there, i don't see anything related to my changes that would cause this"""
2429,303051385,b'it is confirmed RavenDB_3758.Can_Overwrite_Side_By_Side_Index is flaky my changes just exposed the issue due to timing changes (icreased fail rate from 2% to around 8%) '
2438,303068071,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Ihor Chyhrynets (i.chyhrynets@mobilunity.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
2454,303465134,b'What happens otherwise?'
2454,303468506,"b'Two things:\r\n1. We are moving to next document, but multi-map iterator is still set to the previous one (which was disposed already so it is easy to get AVE or ODE)\r\n2. When next document will be processed then we will not start from map function at index 0, but at the one that failed previously'"
2464,303664082,b'fixed comments'
2473,303930151,"b""OK, thanks, I'll fix the stuff from comments and submit another one."""
2457,303935770,"b""You're right. I introduced it back https://github.com/ravendb/ravendb/pull/2474. I cannot think of any other cause since we do validation after an index rewrite optimization but just in case"""
2482,303973451,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- vlko (vlko@zilina.net)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
2424,303978603,"b'Then use a zero or something like that, to avoid always checking /\nvalidating it.\n\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Thu, May 25, 2017 at 1:24 PM, Grisha Kotler <notifications@github.com>\nwrote:\n\n> *@grisha-kotler* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Client/Server/PeriodicBackup/PeriodicBackupConfiguration.cs\n> <https://github.com/ravendb/ravendb/pull/2424#discussion_r118458497>:\n>\n> > @@ -0,0 +1,75 @@\n> +//-----------------------------------------------------------------------\n> +// <copyright file=""PeriodicBackupConfiguration.cs"" company=""Hibernating Rhinos LTD"">\n> +//     Copyright (c) Hibernating Rhinos LTD. All rights reserved.\n> +// </copyright>\n> +//-----------------------------------------------------------------------\n> +\n> +using System.Diagnostics;\n> +using Raven.Client.Documents;\n> +\n> +namespace Raven.Client.Server.PeriodicBackup\n> +{\n> +    public class PeriodicBackupConfiguration: IDatabaseTask\n> +    {\n> +        public long? TaskId { get; set; }\n>\n> If this is a new periodic backup configuration\n>\n> \xe2\x80\x94\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/2424#discussion_r118458497>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHIs-6sAzbExc-GCCkeqqIDWsixQ4wiks5r9VbOgaJpZM4NhpUl>\n> .\n>\n'"
2495,304044036,"b'This resolves the subscriptions ""hanging"" tests problem'"
2495,304215614,"b""Thanks. Merging so we'll be able to run FastTests."""
2504,304262120,"b""Let's remove the border for single-node so it would look similar to the studio/server versions."""
2558,305095273,"b'Sorry, I run just the fast tests to verify it.'"
2569,305247062,"b""Why didn't it fail on Windows, then?"""
2569,305248101,b'@ayende No. This is linux only problem (from quick reading this: https://github.com/dotnet/coreclr/issues/4784)\r\nThe win call to GetCollationKeyWin32 uses win32 native api so it is not related to there'
2573,305429038,b'@ayende merged to fix studio compilation'
2569,305451966,"b'So you change would make it work on Linux, but break Winodws?'"
2569,305453760,b'@ayende No. My change is posix only change : https://github.com/ravendb/ravendb/blob/v4.0/src/Raven.Server/Documents/Indexes/Persistence/Lucene/Collation/CollationKeyFilter.cs#L117\r\n\r\nWindows uses : https://github.com/ravendb/ravendb/blob/v4.0/src/Raven.Server/Documents/Indexes/Persistence/Lucene/Collation/CollationKeyFilter.cs#L53'
2600,305545103,b'Why not use https://github.com/ravendb/ravendb/blob/v3.5/Raven.Database/Util/WildcardMatcher.cs ?'
2600,305547860,"b'I was not aware of it, it is just one line of code not sure if this is worth changing.'"
2600,305550455,"b'It is hard to follow the code, in the sense that there might be NRE or out of range there.'"
2600,305561272,"b""that is why i test my code before sending PR, i'll change it..."""
2600,305565499,b'done'
2629,306067529,"b'some unit tests fail, will fix them and resubmit the PR'"
2638,306180179,b'Elegant'
2684,307630026,b'@ayende Ready to merge'
2709,307645377,"b'Slow tests are failing, need to take a look at that + push fixes for some of @ppekrol  comments.\r\nWill ropen once done'"
2719,308630395,b'Manually merged'
2749,308692895,b'Still need to check how does those changes affect the studio.'
2753,308747062,b'I will resubmit this PR in a second again. Talked with Adi and we will add attachment headers and return content as stream.'
2753,308752108,b'New PR: https://github.com/ravendb/ravendb/pull/2756'
2750,308770737,"b""Not merging this, because we are going to make big changes here, and there is very small likelihood of conflicts, so there isn't point i partial merge here."""
2751,308788751,b'Thanks for this fix!\r\n'
2779,309285104,b'Nice'
2829,310139236,"b'Note : there is a failing fast test, documented here -> http://issues.hibernatingrhinos.com/issue/RavenDB-7558\r\n'"
2836,310449515,"b'The test still fails, what is the point of enabling it without fixing it?'"
2836,310455655,"b'Knowing that it exists :) ... that issue was buried under 300 issues, also found a few more in the same condition. '"
2836,310456490,"b""We have a few failing tests that fail _right_ now, this will add to the noise.\r\nAt any rate, we aren't going to allow skipped tests as part of the ramp up to rTM"""
2836,310459257,b'Good enough for me \xf0\x9f\x91\x8d '
2872,311596184,b'@gregolsky See https://github.com/dotnet/coreclr/issues/12103\r\n\r\nWould it make more sense to use it via `#if` ? How messy would that make our nuget deployment?'
2872,311606171,"b""We want our package to be runnable on all platforms. It's not like server, it's one for them all, so we need to figure out which one we'd like to use at runtime. \r\n\r\nI first thought if we could somehow subclass DllImportAttribute, but it's sealed, so we're left with this messy solution.\r\n\r\nWe took Grpc.Core as an example for packing. For what it's worth they use delegates to invoke native methods https://github.com/grpc/grpc/blob/master/src/csharp/Grpc.Core/Internal/NativeMethods.cs , but @arekpalinski pointed out we probably don't want that."""
2872,311633440,"b'Yeah, the conditions are always going to eval the same, so the branch predictor will be better then doing a jump'"
2872,311640283,b'What do you mean by branch predictor?\r\n'
2872,311641325,"b'See https://en.wikipedia.org/wiki/Branch_predictor\r\n\r\nIf we always go a certain way in a conditional, the CPU will optimize it.'"
2877,311732182,b'I was going to suggest exactly that when I saw the commit. :)'
2881,311894189,b'Is it reasonable duration? cc @ayende @maximburyak '
2886,311944187,b'CC @maximburyak '
2890,312185521,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Grzegorz Lachowski (gregory.lachowski@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
2890,312185711,"b'Oops, wrong email..'"
2938,312834508,b'*deleted*'
2938,312834904,b'Ignore my previous comment.'
2926,312846767,"b'We are going with a different route here, see: http://issues.hibernatingrhinos.com/issue/RavenDB-7696'"
2940,312847440,b'Why do we need `AllowToDisableAuthenticationForCommercialUse` ?'
2940,312850259,"b""Actually I've changed it to 'Security.Authentication.RequiredForPublicNetworks'"""
2942,312851593,b'Delaying that until after the auth reorg'
2967,313223319,b'This PR also includes the Json Parser improvements'
2970,313336130,"b'Also note that this needs to be checked against our scripts, which check our output'"
2983,313760088,"b""I'm not happy with this one, 80% of the scratch/version size is too much we should read in a new transaction more often."""
2983,313788587,b'Maybe call it based on time? So every 15 seconds will pulse?'
2998,314414921,"b""don't merge this, it seems to cause major issues for some reason.\r\nthe whole leave cluster process is dead wrong."""
3002,314455194,b'Ready to merge.'
3013,314766993,"b""Actually, for adding a node to cluster we have the `node-info` url that we'll hit."""
3028,315581981,b'Need to add this comment in the code as well'
3028,315679847,b'Added in https://github.com/ravendb/ravendb/pull/3036'
3038,315743678,b'Pretty sure that the issue number is wrong.'
3046,315962504,b'@iftahbe Take a look at my comments here:\r\nhttps://github.com/ayende/ravendb/pull/4660#pullrequestreview-50510995'
3047,315980564,b'Obsolete and thus not relevant'
3059,316110823,"b""I've merged multiple commits into one for clarity"""
3059,316124152,b'I will reopen with another PR'
3060,316179068,"b'You are also always sending the data in round robin manner, there is no handling of write requests.'"
3061,316422694,"b'Is there work to be done here yet, or are we ready to merge?'"
3061,316430003,"b'Ready for merge. I am working on a few optimizations here and there, but the feature is in deployable state as of this PR. '"
3061,316496704,b'Updated with optimizations and also including extra information on the exception. '
3072,316505275,"b""\r\nCan't merge it yet because there are *failing tests*:\r\n\r\n```\r\n    SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.can_restore_smuggler_correctly [FAIL]\r\n    System.NullReferenceException : Object reference not set to an instance of an object.\r\n    Stack Trace:\r\n      C:\\Work\\ravendb-4.0\\test\\SlowTests\\Server\\Documents\\PeriodicBackup\\PeriodicBackupSlowTests.cs(257,0): at SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.<can_restore_smuggler_correctly>\r\n_5.MoveNext()\r\n      --- End of stack trace from previous location where exception was thrown ---\r\n         at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      --- End of stack trace from previous location where exception was thrown ---\r\n         at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n      --- End of stack trace from previous location where exception was thrown ---\r\n         at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\r\n      SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.can_backup_to_directory_multiple_backups [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        C:\\Work\\ravendb-4.0\\test\\SlowTests\\Server\\Documents\\PeriodicBackup\\PeriodicBackupSlowTests.cs(200,0): at SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.<can_backup_to_directory_multipl\r\ne_backups>d__4.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\r\n\r\nSlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.can_backup_and_restore_snapshot [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        C:\\Work\\ravendb-4.0\\test\\SlowTests\\Server\\Documents\\PeriodicBackup\\PeriodicBackupSlowTests.cs(405,0): at SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.<can_backup_and_restore_snapshot\r\n>d__7.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.can_backup_to_directory_multiple_backups_with_long_interval [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        C:\\Work\\ravendb-4.0\\test\\SlowTests\\Server\\Documents\\PeriodicBackup\\PeriodicBackupSlowTests.cs(70,0): at SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.<can_backup_to_directory_multiple\r\n_backups_with_long_interval>d__2.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n    SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.can_backup_and_restore [FAIL]\r\n      System.NullReferenceException : Object reference not set to an instance of an object.\r\n      Stack Trace:\r\n        C:\\Work\\ravendb-4.0\\test\\SlowTests\\Server\\Documents\\PeriodicBackup\\PeriodicBackupSlowTests.cs(335,0): at SlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.<can_backup_and_restore>d__6.Mov\r\neNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"""
3072,316632695,b'pushed my changes'
3080,316686185,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Marcin Lewandowski (ml054@wp.pl)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
3095,316789903,"b'@ayende, there are many slow tests (and 3 fast test) failing very strangely with the error:  ""There is no handler for path: GET /databases/.../configuration/client""}\r\nit also happens with /hilo/next... I can\'t figure out why yet.'"
3095,316811165,"b'The problem was the `/database/is-loaded` route, that conflicted with db names.'"
3145,319064128,b'Added catch exception in event loop + logging\r\nAdded ToString to custom content'
3174,319646439,b'Can you fix the conflict?'
3174,319647303,"b'yup, one sec'"
3206,320220249,b'You should be able to query the runtime configuration environment to get the other two. '
3206,320220500,b'how?'
3213,320436018,"b'Okay, I had to revert this change. Running the slow tests causes my system to run out of memory.'"
3213,320448373,b'We are being much more aggressive in keeping resources. Parallel testing must be creating multiple instances of those. Will look at it on Monday'
3238,320965880,b'I have repeated test after https://github.com/ravendb/ravendb/pull/3240 Everything looks good. It can be merged.'
3250,321224662,b'Found better approach '
3250,321249878,"b'Tried to do stuff like that:\r\n```\r\ncmd.TryGetMember(""Record"", out object record);\r\nvar databaseRecordAsJson = context.ReadObject(record as BlittableJsonReaderObject, ""read/record"");\r\n```\r\nBut realized that we use EntityToBlittable.ConvertEntityToBlittable in every update of the database record.'"
3261,321293147,b'Need a test case for this.'
3264,321334533,"b""Found a regression while running SlowTests, please do not merge yet.\r\n\r\nEDIT: Turns out I can't know if my code works or not because of [RavenDB-8061](http://issues.hibernatingrhinos.com/issue/RavenDB-8061) causing slow indexes to fail the tests. If CI passes the tests please feel free to merge, I will work on fixing 8061"""
3265,321528131,b'Conflicts needs to be resolved'
3265,321531135,b'Rebased with resolved conflicts.'
3282,321772842,b'Manually rebased and pushed.'
3282,321773350,"b""Are you sure you pushed it? I don't see them in the repo"""
3275,321774256,b'Need better comment on what this is required.'
3293,321906225,"b'We need to change the schema version as a result of this, because it will break reading existing dbs.'"
3317,322404194,b'Closing as we want to take a different method here entirely.'
3344,322751229,b'A ref to issue on dotnet repo dotnet/coreclr#13395'
3341,322758064,b'Please review: https://github.com/ravendb/ravendb/commit/773e4595b765f7e629f2853172f0551bd71ac397'
3341,322759844,b'LGTM'
3360,323050351,b'I meant to create this: https://github.com/ml054/ravendb/pull/4'
3360,323060310,b'@ayende This can be merged.'
3369,323183671,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Julian Bayardo (julian@bayardo.info)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
3376,323526209,"b'Thanks for the catch, how did you run into this?\r\n'"
3376,323526582,"b'@ayende I wrote simple analyzer for such issues https://github.com/m08pvv/CSharpPartiallyConstructedObjectAnalyzer (analyzer is pretty silly, but more or less works) and started looking for such issues in popular projects. There are a lot of potential issues, but all of them require time for investigation if this was false positive (analyzer is not perfect).\r\nThe decision to write such analyzer came from the fact that some of such issues can be detected with static analysis. And decision to look for such issues came from the fact that I accidentally found such issue in ConcurrentDictionary (during answering one question on stackoverflow)'"
3376,323526684,"b'That is pretty awesome, thanks!'"
3377,323557219,"b'Fast test passing, slow tests not compiling yet.'"
3376,323579226,"b'CLA - I signed it after PR, but commit was with wrong e-mail\r\nShould I create an issue for ""commit/message/conventions""?\r\nHow can I take a look at failing tests?'"
3377,323715204,b'Review of tests which I think should be restored is done.'
3393,324016799,b'+1'
3417,324729195,b'Can you resolve this conflict?'
3421,324850976,b'The same fix as in https://github.com/ravendb/ravendb/pull/3381: https://github.com/ravendb/ravendb/commit/59df6348bd8aca5f59785498a6ee38d293b902d7#diff-7796e586745115abb7ec649e6c35c919L56'
3426,324939279,b'Changed that and amended the commit. '
3426,324941835,b'@ppekrol Took a few ammends to correct all small details. Check it now. '
3426,324946005,b'LGTM'
3417,324964850,b'This is still conflicting?'
3417,324978856,b'Closing this one - I will open new PR w/o RavenDB-6194'
3417,324979122,b'New PR: https://github.com/ravendb/ravendb/pull/3427'
3419,325200234,"b'There is a conflict here, I tried to resolved it, but pretty much all the tests started failing at that point.'"
3419,325390535,"b'Managed to fix the problem by rebasing, then copying and pasting the index.cs file from ravendb/ravendb/v4.0, and then incorporating the changes again.\r\n\r\nAlso changed SingleUseFlag and MultipleUseFlag from struct into class to avoid copies. Kept the MultipleUseFlag to differ the semantics with SharedMultipleUseFlag.'"
3444,325425684,b'400+ failed tests.'
3449,325584371,b'Please do an issue in RDoc for documenting these changes'
3449,325587092,"b'Done, a batch ticket for everything docker http://issues.hibernatingrhinos.com/issue/RDoc-689'"
3454,325639240,"b'Now, after latest rebase, still have the reduce problem'"
3473,326061491,b'Please PR again with the fixes'
3474,326281394,b'Changes applied.'
3487,326337011,b'updated PR according to the review'
3487,326353038,b'Close and reopen to run the tests again'
3485,326513666,"b'Lots of tests are _failing_.\r\n\r\n```\r\n    FastTests.Server.Documents.Revisions.RevisionsReplication.GetRevisionsBinEntries(useSession: False) [FAIL]\r\n      Raven.Client.Exceptions.RavenException : System.InvalidOperationException: Cannot perform ReadValue when encountered the ReadObjectDocument state\r\n         at Sparrow.Json.ManualBlittableJsonDocumentBuilder`1.ThrowIllegalStateException(ContinuationState state, String realOperation) in C:\\Work\\ravendb-4.0\\src\\Sparrow\\Json\\ManualBlittableJsonDocumentBuilder.cs:line 567\r\n         at Sparrow.Json.ManualBlittableJsonDocumentBuilder`1.FinishWritingScalarValue(BuildingState currentState) in C:\\Work\\ravendb-4.0\\src\\Sparrow\\Json\\ManualBlittableJsonDocumentBuilder.cs:line 550\r\n         at Sparrow.Json.ManualBlittableJsonDocumentBuilder`1.WriteValueNull() in C:\\Work\\ravendb-4.0\\src\\Sparrow\\Json\\ManualBlittableJsonDocumentBuilder.cs:line 285\r\n         at Raven.Client.Json.BlittableJsonWriter.WriteNull() in C:\\Work\\ravendb-4.0\\src\\Raven.Client\\Json\\BlittableJsonWriter.cs:line 218\r\n         at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n         at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n         at Raven.Client.Documents.Session.EntityToBlittable.ConvertEntityToBlittable(Object entity, DocumentConventions conventions, JsonOperationContext context, DocumentInfo documentInfo) in C:\\Work\\ravendb-4.0\\src\\Raven.Client\\Documents\\Session\\EntityToBlittable.cs:line 59\r\n         at Raven.Server.Web.RequestHandler.SetLicenseLimitResponse(LicenseLimit licenseLimit) in C:\\Work\\ravendb-4.0\\src\\Raven.Server\\Web\\RequestHandler.cs:line 506\r\n         at Raven.Server.Web.System.OngoingTasksHandler.<UpdateExternalReplication>d__11.MoveNext() in C:\\Work\\ravendb-4.0\\src\\Raven.Server\\Web\\System\\OngoingTasksHandler.cs:line 512\r\n```'"
3485,326516298,b'The underlying reason is that you are trying to send a null negative response for the licenses.\r\n'
3532,327150187,"b'I just signed the CLA with this email address, not sure how to re-run the check cla/signed but it should succeed now.'"
3560,327492244,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Ariel Gamrian (arielg1000@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
3560,327495903,b'@arielgamrian Can you rebase and put issue # in each of the commits?'
3567,327791622,b'Great job!'
3610,328656643,b'@Danielle9897 Please test this'
3608,328657499,"b""@grisha-kotler I'm merging this for now, please review and fix @ml054 as soon as possible."""
3610,328657756,"b""While testing please pay attention to these `charset=utf-8` additions in Release mode (when built with `build.ps1`). They thrown somewhere around `new MediaTypeHeaderValue...`, can't recall the exact place at the moment."""
3610,328719410,"b""@gregolsky I fixed that. It was within the Zip file serving originally. Did you find any other place where it throws?. It is worth noticing that adding the charset is the only way to stop browsers from complaining that files don't have some encoding.\r\n\r\nAside from that, it should be noted that the implementation is expected to work with files being changed while it is running (even if the zip file is changed). If you are actually using that as part of the development cycle, I would be grateful if you could try it; I did some testing today, but it would be good to have some more."""
3613,328811509,b'Please resolve the conflicts.'
3619,328837689,"b""I'll fix the HTML usages, as I didn't removed them"""
3619,328838278,"b'Message: Unable to process binding ""with: function (){return $root.collectionsTracker.getSystemDocumentsCollection() }""\r\nMessage: $root.collectionsTracker.getSystemDocumentsCollection is not a function\r\n    at with (eval at createBindingsStringEvaluator (knockout.debug.js:2992), <anonymous>:3:89)\r\n    at ko.computed.disposeWhenNodeIsRemoved (knockout.debug.js:4391)\r\n    at Function.evaluateImmediate_CallReadThenEndDependencyDetection (knockout.debug.js:2183)\r\n    at Function.evaluateImmediate_CallReadWithDependencyDetection (knockout.debug.js:2150)\r\n    at Function.evaluateImmediate (knockout.debug.js:2111)\r\n    at Object.ko.computed.ko.dependentObservable (knockout.debug.js:1964)\r\n    at init (knockout.debug.js:4390)\r\n    at knockout.debug.js:3368\r\n    at Object.ignore (knockout.debug.js:1480)\r\n    at knockout.debug.js:3367\r\nsys.error @ shell.ts:168'"
3619,328839326,b'Fixed: https://github.com/ravendb/ravendb/pull/3620'
3610,328886894,b'1. Loading & refreshing times seem quite fine\r\n2. But - changes done to *.ts / *.html files (from vs) are Not seen in the browser when refreshing\r\n   '
3648,329757720,b'Merged here: https://github.com/ravendb/ravendb/pull/3647'
3642,329758093,b'Thanks @PureKrome '
3610,329816987,"b'This should now be working for all requests. In the particular case of studio files, cache invalidation seems to work correctly.'"
3610,330026597,b'1.  Loading times are good - as before\r\n2.  We are good with changes done to *.html -BUT- changes done in *.ts are NOT reflected '
3610,330028451,b'Merged in #3654'
3658,330037036,b'Thanks!'
3664,330056146,b'Pushed the changes and resolved the conflict'
3631,330227980,"b'This conflicts, please fix'"
3713,331150900,b'PR comments fixed in https://github.com/ravendb/ravendb/pull/3715'
3721,331383640,b'I was just about to do this :-)'
3769,331962225,b'Thank you!'
3774,332102527,"b'Looks good on review, fast tests are passing, running slow tests'"
3780,332132607,b'what about rvn.csproj?\r\n'
3798,332279322,b'I will reopen this only with relevant commit'
3797,332286573,"b'yes\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Tue, Sep 26, 2017 at 9:07 PM, Karmel <notifications@github.com> wrote:\n\n> *@karmeli87* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Replication/OutgoingReplicationHandler.cs\n> <https://github.com/ravendb/ravendb/pull/3797#discussion_r141137402>:\n>\n> > @@ -70,6 +71,7 @@ public class OutgoingReplicationHandler : IDisposable\n>\n>          private readonly ConcurrentQueue<OutgoingReplicationStatsAggregator> _lastReplicationStats = new ConcurrentQueue<OutgoingReplicationStatsAggregator>();\n>          private OutgoingReplicationStatsAggregator _lastStats;\n> +        public TcpConnectionInfo ConnectionInfo;\n>\n> so we will fail and start again with getting the tcpinfo?\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/3797#discussion_r141137402>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wADoj06s_I0pxkGN0NsotRjRdR_IKks5smT1fgaJpZM4PkdJD>\n> .\n>\n'"
3822,332598808,b'not related commit is there. will reopen without it'
3840,332885761,b'@ayende - please wait until I add ReadAsync too'
3840,333127923,"b'Okay, closing until then'"
3899,334152441,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- thorf (thor.halvor.frivold@nhn.no)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
3916,335027443,"b""Do we need test for it? for some reason we wasn't  able to detect that we forgot to copy journals. """
3916,335028900,b'the journals were copied but the path for them was changed.\r\nwe already have tests for it: http://issues.hibernatingrhinos.com/issue/RavenDB-7931\r\ncurrently those tests are skipped'
3926,335148638,b'Do not merge something is horribly wrong'
3926,335156029,"b""i'm wrongly writing base64 attachments"""
3926,335182498,"b""okay, please review my conversion to base64 code.\r\nI didn't check that i was actually reading 3kb at the middle of the stream which caused padding issue since i was writing the base64 in chunks (which i thought were aligned) """
3954,336049147,b'need to rename ubuntu -> linux'
3906,336690137,b'\xf0\x9f\x91\x8d '
3972,336793642,"b'oops, need to fix one thing'"
3962,337283797,"b""I'm going to resubmit this; integration with the code base will go in a different PR; Federico looked into places this may be useful and came up with:\r\n\r\n- WriteAheadJournal\r\n- ScratchBufferPool\r\n- EncryptionBuffersPool\r\n- LowLevelTransaction\r\n- Windows32BitsMemoryMapPager\r\n- AbstractPager (in general)\r\n\r\nI'd prefer to have these in different commits so that we can roll them back individually if there's any issues."""
4000,337362943,b'Integration is now added in this PR'
4026,337941026,"b'The studio should compile, but defining an etl or external replication from it would not work, because we need to modify the UI (RavenDB-8667). '"
4075,339105085,b'bahh.. the last commit was a mistake (forgot to switch to different branch)'
4088,339314618,b'Missing test for this.'
4116,340011145,"b'Mhhh, unless I am missing something that doesnt sound right. That part of the code is absurdly performance sensitive. If that condition happens then it should be discarded and use the costly version (not the fast-path). Adding that comparison in the middle of the loop will kill many optimizations done inside those methods. '"
4066,340059059,b'Can anyone expand on this issue? Is it related to the prior stability fixes in the latest 3.5.5 patches? thanks'
4116,340243763,b'@redknightlois Can you make this change?'
4066,340247757,"b""This a fix for an edge case:\r\nA new database is created (when no other databases exist in the system or the other databases aren't up to date across the other nodes in the cluster) and we start to import documents to it. Shortly after, the leader is dropped."""
4116,340275916,b'Sure. '
4116,340480025,"b'Not much can be done. Modified a bit the code to try to hide the latency, but that particular assembler is a mess, doubt we can do much better without rethinking how we parse numbers. https://github.com/ravendb/ravendb/pull/4135'"
4116,340508398,"b'@redknightlois Can you address my concern about parsing long.MinValue as LazyNumberValue? Normal longs are being parsed as longs, but this one jumps into overflow.\r\n\r\nTest: https://github.com/ravendb/ravendb/blob/v4.0/test/SlowTests/Issues/RavenDB_9096.cs#L38\r\nCode: https://github.com/ravendb/ravendb/blob/v4.0/src/Sparrow/Json/Parsing/UnmanagedJsonParser.cs#L572-L573\r\n'"
4116,340522622,b'@ppekrol I am probably not understanding the issue then. I was under the impression that the change you did solved the issue. Problem is that whenever we roll over the overflow area we should be parsing differently anyways. So reparsing with decimal and/or floating point support should be the way to go there. When overflow and underflow happens we cannot trust the values we get in the long (at all). '
4116,340557918,"b'@redknightlois In my opinion this is not a problem, but consistency issue. \r\nThe long.MinValue is parsed as LazyNumberValue and not Int64 directly (the overflow technique that is used there is invalid for long.min).\r\nThis probably is not a problem, because LNV contains implicit conversions to long, yet... it is not parsed directly as other longs.'"
4116,340562401,b'We have uncovered many consistency issues lately on the parser and blittable manipulation and decided against tackling them unless they show up as user facing issues (inconveniences aside). I would suggest though to create a detailed issue for vNext with detailed information on what the issue is and then get all of them and revisit the parser/blittable writers after RTM. We have acquired a lot of knowledge on how we use JSON and how we work and will need to work with blittable to the point that we should revisit it the sooner than the later. vNext sounds like the proper place for that to happen. '
4144,340658478,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Kamran Ayub (kamran.ayub@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
4144,340660342,b'@ravendb-bot  \xf0\x9f\x91\x8d Done'
4144,340670588,b'Thanks!'
4150,340694794,b'pushed another fix to this branch. please pull again'
4156,340839144,b'There are things missing and it is too complicated. Will resubmit this PR when I finish'
4161,341029744,b'@aviv86 Please review this'
4161,341085954,"b""very nice work,\r\n\r\njust one small problem, in split and replace, the casting of the arguments to ConstantExpression  will throw an InvalidCastExecption on things like:\r\n\r\n - var chars = new char[2] {'e', 'r'};\r\n    u.Name.Split(chars);\r\n\r\n - u.Name.Replace(u.Name, u.LastName)\r\netc..\r\n\r\nmaybe we should check the type of the argument , if it's not a ConstantExpression then call context.Visitor.Visit(arg)\r\n"""
4161,341091865,"b'Great thinking,\r\n\r\nMaking a small consession you can translate this:\r\n.Split(new [] { ""a"", ""b"", u.Username }, ...) to .split(new RegExp(""a"" + ""|"" + ""b"" + ""|"" + u.Username, ""g""))\r\n\r\nThen all will be done by the visitor pattern. The downside is, you cannot escape the RegExp anymore. Upside, all can work the visitor. (I used the ConstantExpression cast because your visitor will add quotes, which I don\'t need in a // regex statement. Converting it to the Regex object would work nicely with quotes and thus with the visitor pattern)\r\n\r\nOr add the function: \r\nfunction escapeRegExp(str) {\r\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, ""\\\\$&"");\r\n}\r\nto create:\r\n\r\n.Split(new [] { ""a"", ""b"", u.Username }, ...) to .split(new RegExp(escapeRegExp(""a"" + ""|"" + ""b"" + ""|"" + u.Username), ""g""))\r\nThis one will mimic the same behavior as c#.\r\n\r\nAny thoughts?\r\n\r\nCode would then change to:\r\n```\r\n                        if (newName == ""split"")\r\n                        {\r\n                            writer.Write(""new RegExp("");\r\n                            if (mce.Arguments[0] is NewArrayExpression arrayExpression)\r\n                            {\r\n                                for (var i = 0; i < arrayExpression.Expressions.Count; i++)\r\n                                {\r\n                                    if (i != 0)\r\n                                    {\r\n                                        writer.Write(""+\\""|\\""+"");\r\n                                    }\r\n\r\n                                    context.Visitor.Visit(arrayExpression.Expressions[i]);\r\n```\r\n\r\nOR\r\n\r\nDon\'t use ReplaceAll, so .Replace() will be translated to .replace(""test"", ""test"") without using RegExp. Downside: it won\'t replace ALL (like C# does), upside, it\'s much easier to translate to JS.'"
4161,341106570,"b'In addition, this is what it looks like now:\r\n\r\nInput:\r\nSplit = u.Name.Split(\'r\', StringSplitOptions.None),\r\nSplitArray = u.Name.Split(new char[] { \'r\', \'e\' }),\r\nSplitArgument =  u.Name.Split(u.Roles, StringSplitOptions.None),\r\nSplitStringArray = u.Name.Split(new string[] { ""er"", ""rr"" }, StringSplitOptions.None),\r\n\r\nReplace = u.Name.Replace(\'r\', \'d\'),\r\nReplaceString = u.Name.Replace(""Jerry"", ""Charly""),\r\nReplaceArguments = u.Name.Replace(u.Name, u.LastName),\r\nReplaceArgumentsComplex = u.Name.Replace(u.Name + ""a"", u.LastName + ""a"")\r\n\r\nOutputs:\r\n\r\nSplit : u.Name.split(new RegExp(""r"", ""g"")),\r\nSplitArray : u.Name.split(new RegExp(""r""+""|""+""e"", ""g"")), \r\nSplitArgument : u.Name.split(new RegExp(u.Roles, ""g"")), \r\nSplitStringArray : u.Name.split(new RegExp(""er""+""|""+""rr"", ""g"")), \r\nReplace : u.Name.replace(new RegExp(""r"", ""g""), ""d""), \r\nReplaceString : u.Name.replace(new RegExp(""Jerry"", ""g""), ""Charly""), \r\nReplaceArguments : u.Name.replace(new RegExp(u.Name, ""g""), u.LastName), \r\nReplaceArgumentsComplex : u.Name.replace(new RegExp((u.Name+""a""), ""g""), (u.LastName+""a""))'"
4161,341119282,"b'Yes i like the idea of translating .Split(new [] { ""a"", ""b"", u.Username }, ...) to .split(new RegExp(""a"" + ""|"" + ""b"" + ""|"" + u.Username, ""g""))\r\ncan you please commit the changes?'"
4161,341133402,"b""Much cleaner, though with a downside included (doesn't escape regex)."""
4167,341335651,b'Do we have any tests which verify that the schema is properly migrated (starting from RC1)? Something like https://github.com/ravendb/ravendb/blob/v3.5/Raven.SlowTests/Migration/MigrationTests.cs (in 3.5)'
4178,341424492,"b'It\'s intend to work on things like: (where Id = purchase/100392123)\r\n````\r\nselect new {\r\n   EmployeeNumber = int.Parse(this.Id.Split(""/"")[1])\r\n}\r\n````\r\n\r\nwhich would be:\r\n````\r\nselect new {\r\n    EmployeeNumber = this.Id.split(""/"")[1];\r\n}\r\n````\r\nWhich then would be converted to int, since the target was int, and JSON.NET will convert string to int (using int.Parse()). It looked a bit redundant to me to do:\r\n````\r\nselect new {\r\n    EmployeeNumber = parseInt(this.Id.split(""/"")[1]);\r\n}\r\n````\r\n\r\nBut I can make it as such:\r\n````\r\n                    Assert.Equal(""FROM Users as u SELECT { "" +\r\n                        ""IntParse : parseInt(\\""1234\\""), "" +\r\n                        ""DoubleParse : parseFloat(\\""1234\\""), "" +\r\n                        ""DecimalParse : parseFloat(\\""1234\\""), "" +\r\n                        ""BoolParse : \\""true\\"" == \\""true\\"", "" +\r\n                        ""CharParse : \\""s\\"", "" +\r\n                        ""ByteParse : parseInt(\\""127\\""), "" +\r\n                        ""LongParse : parseInt(\\""1234\\""), "" +\r\n                        ""SByteParse : parseInt(\\""127\\""), "" +\r\n                        ""ShortParse : parseInt(\\""1234\\""), "" +\r\n                        ""UintParse : parseInt(\\""1234\\""), "" +\r\n                        ""UlongParse : parseInt(\\""1234\\""), "" +\r\n                        ""UshortParse : parseInt(\\""1234\\"") }"", query.ToString());\r\n````\r\nSo in a real life example you will get: (where PriceAsString = ""$ 20.32"")\r\n````\r\nFROM Users as u SELECT {\r\n   PriceAsString: a.PriceAsString,\r\n   PriceAsDecimal: parseFloat(a.PriceAsString.split("" "")[1])\r\n}\r\n````\r\nChar is translated as such already in ConvertToJavascript (a char will be translated to the character in string). \r\n\r\nThough there are some differences between parseFloat and float.Parse():\r\n````\r\nJS: parseFloat(""40 years"") => 40\r\nC#: float.Parse(""40 years"") => Bad format\r\n````\r\nSince JSON.NET is parsing it (or blittable, which is using convert. which will call int.Parse), when having ths:\r\n````\r\nselect new {\r\n     Test: int.Parse(""2 years"")\r\n}\r\n````\r\nwill be translated to \r\n````\r\n{ \r\n    Test: ""2 years""\r\n}\r\n````\r\nWhich will then get the exception you were expecting (Bad format) instead of 2. I left it out (int.Parse() etc.) since the current behavior is already converting string to int when needed. So I think it should be the original commit, or the one suggested above (or non at all ;))\r\n\r\nEdit: That wasn\'t a cancel button, but a Close and Comment button...'"
4178,341435022,"b'After some more thinking:\r\nTest = int.Parse(""123"") + int.Parse(""123"")\r\n\r\nwould now be 123123, but when converted using parseInt, would be 246, so I create a commit with parseInt and parseFloat, since that would fit better.'"
4197,342102722,"b'javascriptWriter.Write("".reduce(function(a, b) { return a + b; }, 0)"");\r\n\r\nCan\'t a or b become an alias? And therefore override the actual value?'"
4197,342103581,"b'No, that would shadow the alias and use the local var.'"
4257,343447293,b'Actually the issue is described here: https://github.com/dotnet/corefx/issues/16994'
4305,344215553,b'need to check something with cpu usage'
4343,345033805,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jon Stelly (jon.stelly@assemblesystems.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
4364,345969299,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Georgios Diamantopoulos (georgiosd@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
4364,345999092,b'Please complete the CLA process'
4364,346347805,"b'Done\n\nOn 21 November 2017 at 13:30, Ayende Rahien <notifications@github.com>\nwrote:\n\n> Please complete the CLA process\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/4364#issuecomment-345999092>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABmDdmU4mPiHbc82poNfB_QtJtdByZ7_ks5s4rRPgaJpZM4QliC2>\n> .\n>\n'"
4396,346351272,b'why did you close this ?\r\n'
4396,346351885,"b'We applied changes from previous PR, no worries, everything is there.'"
4396,346353056,b'no it is not (!)'
4396,346355397,b'Merged here https://github.com/ravendb/ravendb/pull/4398'
4399,346420241,"b'Just realized I broke secured setup, closing and fixing.'"
4409,346568833,"b'Why are you doing it in this manner, why not simply `Setup.Mode=None`, that would have the same impact.'"
4409,346573437,"b'I added the config option just because ""We need to pass another argument to shut it down."" (\'another\'... but it works the same this way too)'"
4453,347124408,"b""what about when user does `where ID() == 'users/1'` ?"""
4453,347125723,"b""I don't think it was ever supported, i can modify it to OrdinalIgnoreCase"""
4453,347127336,"b""this doesn't even parsed as a MethodExpression"""
4453,347128170,"b'It most certainly should be parsed as a method, in RQL method names are not case sensitive.'"
4453,347129806,b'I was doing this query on the wrong database... it is parsed as binary expression not as a method expression which is right.'
4477,347320877,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jens Pettersson (jens.pettersson@live.se)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
4486,347500970,b'rebased & merged'
4520,348223794,"b'Okay, just saw that this was verified.'"
4550,348803842,b'thanks'
4566,348941832,b'I was already fixed by me: https://github.com/ravendb/ravendb/pull/4565/files'
4587,349312042,b'Issue: http://issues.hibernatingrhinos.com/issue/RDBC-76'
4587,349312287,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jan Marques (jan.marques@cheops.be)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
4591,349366564,"b'If we are skipping and suddenly interrupted, we will continue from the last point, since we keep the last etag. '"
4695,351499957,b'Rebased: Done changes in place. '
4706,351722475,"b'found a small bug, will reopen once fixed'"
4706,351725275,"b'All is fine, it was just a stray environment variable causing the issue on my local.'"
4709,351778100,b'Unintended commit (which is not needed) is in the PR. Will resubmit PR without that commit'
4719,352243068,"b""OK, good point. \r\nFrom the other hand we do not want to create a new index while there is existing one which isn't disposed yet, as the index directory would be used by one and the other would throw."""
4713,352275212,b'Fixes after PR'
4725,352282161,"b'Hi @grisha-kotler\r\nI see that you are pushing a lot of CR/LF stuff. I had similar problem, but updating to latest R# EAP solved it https://www.jetbrains.com/resharper/eap/'"
4725,352341943,b'Manually merged'
4719,352352153,"b""We won't because we keep the same lock that is used by IndexStore.Create"""
4729,352414415,b'Can you write a test for this?'
4729,352414894,b'Sure'
4729,352457366,b'https://github.com/ravendb/ravendb/pull/4742'
4760,352890707,b'Why are you keeping track of `UpdateExternalReplicationStateCommand` ?'
4760,352893924,b'The command only saves the current responsible node for the task.\r\nWaiting for the task will slow down the external replication.'
4758,352991222,b'Also some env vars in Dockerfile are not needed anymore.'
4758,352993256,"b'@aviviadi What do you mean by ""join similar settings jsons""? \r\n\r\nAlso since we use different `settings.json` we need to add fix `build_*.ps1` and Dockerfile to override those - copy it to image building dir in ps1 and add it to COPY section (https://github.com/ravendb/ravendb/blob/v4.0/docker/ravendb-ubuntu1604/Dockerfile#L21)'"
4758,352996046,"b'simillar settings : regular default settings.**.json for ""posix"" and ""windows"" are now the same.  The different one is docker'"
4769,353035254,b'what about the tcp port?'
4769,353045166,"b""I'll send another PR with more fixes, but without the TCP port. Not sure how to tackle this one. It's problematic since settings.json is overriden after setup so we can set it up there. Also setup doesn't need tcp. \r\n\r\nWe can just let the user set it up within his settings.json, yet it would still need to be aligned with port we have exposed - 38888.. Another way would be to always pass it as cli arg like `--ServerUrl.Tcp=tcp://0.0.0.0:38888` or  `--ServerUrl.Tcp=tcp://$hostname:38888`? """
4769,353045424,"b'Why not do that in the same way we do it for the `ServerUrl` ? Just pass it from the script as env variable, then the user can override it, no?'"
4769,353045481,b'`export RAVEN_ServerUrl_Tcp 38888`'
4769,353046051,b'checking'
4769,353046433,"b'System.UriFormatException: Invalid URI: The format of the URI could not be determined.\r\n   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)\r\n   at System.Uri..ctor(String uriString)\r\n   at Raven.Server.RavenServer.StartTcpListener() in C:\\work\\ravendb4\\src\\Raven.Server\\RavenServer.cs:line 666\r\n   at Raven.Server.RavenServer.Initialize() in C:\\work\\ravendb4\\src\\Raven.Server\\RavenServer.cs:line 234\r\n   at Raven.Server.Program.Main(String[] args) in C:\\work\\ravendb4\\src\\Raven.Server\\Program.cs:line 124'"
4775,353048906,b'@aviviadi @ayende Can you review please?'
4785,353345879,b'waiting for the fix before merging'
4788,353392176,b'Manually merged'
4786,353882442,b'Pushed my changes'
4800,353978175,"b""i'm still getting     RachisTests.DatabaseCluster.EtlFailover.EtlDestinationFailoverBetweenNodesWithinSameCluster [FAIL]\r\n      Assert.NotNull() Failure\r\n      Stack Trace:\r\n        C:\\work\\4.0\\ravendb\\test\\RachisTests\\DatabaseCluster\\EtlFailover.cs(191,0): at RachisTests.DatabaseCluster.EtlFailover.<EtlDestinationFailoverBetweenNodesWithinSameCluster>d__1.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n\r\nUnhandled Exception: Sparrow.LowMemory.LowMemoryException: Detected a leak on HttpCache when running the finalizer. See: http://issues.hibernatingrhinos.com/issue/RavenDB-9737\r\n   at Raven.Client.Http.HttpCache.HttpCacheItem.Finalize() in C:\\work\\4.0\\ravendb\\src\\Raven.Client\\Http\\HttpCache.cs:line 103"""
4807,354179896,"b""We won't be merging this. This should be fixed at the `api.ravendb.net` level, not on our end."""
4816,354289926,"b""Didn't you already send it?"""
4824,354651500,b'Already merged manually'
4834,354852258,b'what is the status of this?'
4834,354856427,b'Can be merged'
4839,354962428,b'Conflicts with my fix (unmerged) that is basically doing the same.'
4846,355025827,b'Is there a possibility to integrate this with official xunit? Having a custom one in a long run could be problematic to maintain.'
4846,355030752,"b""This is their code, but it isn't released yet.\r\nWe'll be moving back to the mainlike as soon as they make a release"""
4846,355045259,"b'Great, we can move to myget https://myget.org/feed/xunit/package/nuget/xunit ?'"
4846,355053606,b'@talweiss1982 Can you check?'
4846,355056246,"b""I have tested this version too and it also have the same issue as 2.3.1 :(\r\nI'll open an issue to undo this in the future.\r\nhttp://issues.hibernatingrhinos.com/issue/RavenDB-10061"""
4852,355230777,b'Thanks'
4945,357616677,"b""Isn't better to have json or csv format? """
4947,357629533,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Tomasz Opalach (tomasz.opalach@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
4947,357629857,b':)'
4939,357630945,b'I will resubmit it in few minutes'
4959,357732551,"b""Don't we have tcp port on nodes.html page? I think we have to do the same there. Could you check?"""
4959,357733691,b'ok I was wrong:\r\nhttps://github.com/ravendb/ravendb/blob/v4.0/src/Raven.Studio/wwwroot/App/views/wizard/nodes.html#L75\r\n\r\nPlease ignore comment above. '
4972,357962305,b'You are missing the change to the replication version.'
4973,357964950,b'There are still failing tests. Fixing them and will push shortly.'
4974,357974897,"b""What's studio issue?"""
4986,358252990,b'@iftahbe Please review.'
4986,358253407,"b""![image](https://user-images.githubusercontent.com/1250431/35036431-a10eda9e-fb74-11e7-937d-d5f7466070c7.png)\r\n\r\n\r\nAliases are returned as IDictionary so getting first item isn't good. Right now iterate over pairs and get first one with private key. """
5018,359536287,"b'We need to include that in our zip / tar, no?'"
5020,359544783,b'pushed my changes'
5031,360125262,b'one more thing to add here..'
5035,360165935,"b'TODO: mv ""drtools"" dir content into packages/RavenDB/Server/'"
5049,360624113,b'removed files that were modified during build'
5046,360730912,"b""I merged this, but I wonder if this is correct. What about bring your own cert, don't we need the license there?\r\nFor that matter, why do we need the license for LE? """
5046,361059585,"b'It is used only if we choose to setup node A again, to be able to construct a cluster with more than 3 nodes.\r\nI guess it is also necessary in ""bring your own cert"". Do you want to enforce a license if the user is building a large cluster in ""bring your own cert""?'"
5046,361065375,"b'I think it would be nicer to always have it, yes.'"
5062,361068504,b'done'
5085,361911501,b'Ready to be merged. '
5096,362243827,b'@maximburyak is going to work on this as separate stages.'
5098,362247321,b'Applied fixes for comments.'
5098,362249001,"b""didn't push them?"""
5098,362249369,b'Amended last commit.'
5141,363402754,b'cc @ayende '
5169,364896541,b'Thanks!'
5198,365830431,"b'hopefully, these two commits can be squished into one commit, when accepting the PR?'"
5198,365846686,b'Thanks!'
5180,365877979,b'Please resolve the conflicts and create a 4.1 PR as well.'
5175,365891059,"b'I merged this to 4.1, please remember to also send a 4.1 branch from now on'"
5208,366528836,b'The majority of the comments were fixed we will go over the remaining ones tomorrow'
5243,366774583,"b""Don't we need this in 4.1 as well?"""
5240,366780341,"b'Thanks, I also verified that this issue is not present in 4.0 / 4.1 branches.'"
5243,366886477,"b""Yeah, I'll PR in a moment.\n\nOn Mon, Feb 19, 2018 at 7:41 PM Ayende Rahien <notifications@github.com>\nwrote:\n\n> Don't we need this in 4.1 as well?\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/5243#issuecomment-366774583>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABeGrdBbBWt4ieInJu8AC4cwBWithLZAks5tWcBCgaJpZM4SKzgs>\n> .\n>\n"""
5277,366991109,b'@iftahbe yes'
5301,367330936,b'@aviviadi Please review https://github.com/ravendb/ravendb/commit/a98b0f0a48cf2ab0fcae786db39da35308a879f2'
5323,367652111,"b""Don't merge it yet.\r\nRunning tests."""
5323,367669034,b'Can be merged'
5341,368289292,b'@ppekrol I think we miss a 4.1 version of this PR ?'
5363,369155598,b'Move ifs outsdie'
5394,370854103,"b""@aviv86 check this approach: https://github.com/ravendb/ravendb/commit/672c154a07ddfc737a6bff97ed814e1b7c7033e2\r\n\r\nIt covers all cases except creating `RangeFacet<T>` inside a `List<RangeFacet>` due to implicit conversion that exists between those two types. I do not think that this should be a major problem since most of people will use either SetupDoc or FacetBuilder (and it will work inside `List<FacetBase>` or `List<RangeFacet<T>>` anyway)\r\n\r\nWe still need to handle other types when parsing ranges, haven't fixed that :)"""
5490,371103905,"b""i'll reopen it from my repo"""
5484,371108228,b'Amended.'
5495,371125423,b'Amended and force pushed. '
5498,371133290,b'This has conflicts'
4688,371229533,b'Good to see that is fixed! Any indication on when this is released with a stable release?'
4688,371233385,b'Already deployed. Can you check it?'
4688,371237907,"b'Ah awesome, so it in is in the 4.0.3-patch-40031 version? If so we will upgrade coming Friday morning and check this out! If you can confirm the version holding the fix that would be great!'"
4688,371238324,b'It should a long time ago. Have you seen the issue on RTM?'
4688,371241269,"b'No I havent, will update Friday and let you know the issues are solved!'"
5534,372280352,"b'@ayende, any reason you merged 4.0 and not this one?'"
5534,372283146,b'Missed it'
5521,372309728,b'Done.'
5554,372991007,b'waiting for the update here as well'
5563,373045115,"b""Yeah, it doesn't fix the issue. It just ensures that the index will be in Error state once this happen so after db restart we won't start indexing it over again."""
5597,373976910,b'Why did you close this?'
5597,374117783,b'Talked with Marcin and needed to adjust something here. It landed as another PR you merged already merged - #5599 '
5612,374189526,b'What happens if we have multiple aliases here? \r\n```\r\nfrom order in session.Query<Order>()\r\nlet group = session.Load<Group>(order.Group)\r\nlet sum = order.Lines.Sum(l => l.PricePerUnit * l.Quantity * group.Modifier)\r\nselect new { sum }\r\n```'
5614,374249332,b'Will cherry-pick to v4.1 later today.'
5656,375196822,b'Do not edit commit messages'
5659,375228608,"b""Can someone trigger new nightly build so I can test this? Issue tracker is down so can't comment there."""
5659,375230616,b'@lahma We are moving our internal machines to newer and faster drives. Nightly should be out within an hour.'
5659,375253153,b'@lahma Nightly released.'
5659,375257692,"b'Thank you, got the server already now waiting for MyGet to return online to get the client.'"
5779,377767184,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Adi (aviviadi@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
5792,377783955,"b""It's better to use Guid.NewGuid here"""
5818,378670917,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- flash2048 (flash2048@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
5819,379033723,"b""`sizeof(byte) == 1`, so I don't think this actually changes anything. I guess you wanted:\r\n\r\n`var serialNumber = new BigInteger(20 * 8, random);`\r\n\r\nSame comment for the sibling PR, #5820.\r\n"""
5819,379173478,b'Fixed in https://github.com/ravendb/ravendb/pull/5821'
5819,379523543,"b'@cocowalla Thanks, sorry about that.'"
5831,379549061,b'@ayende do we want this for 4.0 as well?'
5872,380109165,b'Has conflict'
5869,380109266,b'Has conflict'
5872,380115153,b'Rebased'
5869,380131567,b'Rebased and pushed my changes'
5961,382032164,b'fixed'
6008,383745394,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Kyle Levien (tehkyle@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
6015,384408855,b'Can you check compilation?\r\n\r\n```\r\nerror NU1102: Unable to find package Esprima with version (>= 1.0.0-Raven-1)\r\n```'
6015,384601290,"b'ok, now that the latest Esprima was merged, I\'ll use the ""myget"" reference in Jint and the problem will get resolved by it\'s own'"
6020,384659514,b'Will complete the 4.1 PR when this one is merged'
6020,384872145,b'Manually merged to 4.0 & 4.1'
6024,385167374,"b'See updates here: \r\nhttps://github.com/ayende/ravendb/tree/RavenDB-10648\r\n\r\nStill missing things like `key()` field that needs to be output, but it seems to be heading in the right direction'"
6042,385177638,"b""```netstandard2.0```  is the only one. There is however for executables which is ```netcoreapp2.1``` so that is fine. You don't need to add ```netcoreapp2.1``` for other non executable projects."""
6042,385179629,"b""It appears that 'dotnet xunit' is not working with preview runtime: https://github.com/xunit/xunit/issues/1675"""
6042,385190038,"b'If this does get implemented, will it have to be used? I use the Unity3d game engine and they only just recently implemented the functionality of netstandard 2.0 and I only just this morning finally was able to have a request actually go through to the DB locally after several days of fighting with it. Any more upgrades to Raven and I will be back to square one of it not being compatible.'"
6042,385191000,"b'@MostHated \r\n\r\nHi, the Server will be updated to .NET Core 2.1, the Client API libraries will still be targeting `netstandard1.3` and `netstandard2.0`.'"
6042,385196107,b'The auth tests are already fixed'
6045,385242975,b'thanks'
6052,385340354,b'You need a PR against 4.1'
6071,385748082,b'What about 4.0?'
6082,386344701,"b'This commit is the output of the investigation, not the actual production code that would end up being included in v4.1 ... I need fallbacks when not supported, to be the actual code, etc... '"
6082,386361917,b'That is the reason why this commit only modifies files in the bench subdirectory.'
6082,386515723,b'This actually changes these as well:\r\n\r\n```\r\nsrc/Sparrow/Binary/Bits.cs                         |   24 +-\r\n src/Sparrow/Compression/LZ4.cs                     |    2 +-\r\n src/Sparrow/Memory.cs                              |  190 +-\r\n```'
6090,387029509,b'This is missing the other commits from 4.0'
6086,387040250,"b'Also, need to fix the confclits'"
6102,387335761,"b""Why not null?\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Tue, May 8, 2018 at 12:03 PM, Tal Weiss <notifications@github.com> wrote:\n\n> *@talweiss1982* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Indexes/Static/JavaScriptIndexUtils.cs\n> <https://github.com/ravendb/ravendb/pull/6102#discussion_r186661022>:\n>\n> > @@ -88,7 +89,15 @@ public static bool GetValue(Engine engine, object item, out JsValue jsItem, bool\n>          {\n>              jsItem = null;\n>              if (!(item is DynamicBlittableJson dbj))\n> +            {\n> +                //This is the case for map-reduce\n> +                if(item is BlittableJsonReaderObject bjr)\n> +                {\n> +                    jsItem = new BlittableObjectInstance(engine, null, bjr, DynamicNullObject.Null, null);\n>\n> This is the case where this is not a document and we don't have an ID we\n> just have a blittable, what should i have used?\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/6102#discussion_r186661022>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wAP3PJGKGQz8qRWjFobKFDgVcQ9k7ks5twV9TgaJpZM4T2OzB>\n> .\n>\n"""
6090,387374726,b'https://github.com/ravendb/ravendb/pull/6090/commits/a7ae8af57f5245a7271d63f53fbe190fcb4f25a4'
6147,388280944,b'When it comes to Lucene.Net 3.0.13 the only change is that we are embedding PDBs so it it easier to debug. https://github.com/ravendb/lucenenet/commit/60b3c6a3cb23b169aa6cde8636d66c1a8f8b9576'
6175,389165844,b'LGTM'
6175,389166913,"b'LGTM, although "" Server compilation failed. ""'"
6175,389167421,b'I will fix that'
6086,389290582,"b'@karmeli87 Please review 6b63277, the logic should stay the same, but I reduced the amount of state you have to keep in your head to follow the code'"
6086,389290659,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Adi (aviviadi@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
6220,389833763,b'We need to report errors properly.\r\n'
6219,389838653,b'why closing?'
6222,389841150,b'what about bumping skip count? '
6222,389850432,b'@ml054 returning null document bumps the error count which is what i believe we want.'
6222,389850906,"b""that's great! I just wanted to verify that."""
6222,390134923,"b'@ml054 We _can_ cancel import, by throwing an error out.\r\nAnd we need to decide when to actually abort'"
6222,390136766,"b'Since we expose import stats, then maybe user should decide to stop import in studio, once he spot too many unexpected errors? auto abort on 20% might not be good for everyone. '"
6222,390137375,"b'Okay, good point, given that the user is likely watching this, they can abort as they want'"
6253,390932885,b'@karmeli87 please check the http://jenkins.hibernatingrhinos.com/job/PR_Conventions/1535/console'
6260,390944400,b'Revisions are gone in there.'
6260,390948113,"b'Right, we need to enable those before making sample data.'"
6260,390950320,b'Note that the revisions we have there are already for _building_ the orders.\r\nSo sample data have 30 revisions for `orders/830-A`'
6253,391018136,"b'Instead of this complex commit, we simply should wait on the export for all pending transactions to complete.'"
6310,391775617,b'Will reopen with proper PR'
6352,392468730,b'We should also add explicit exception in Index.SetLock when we have Auto-Index.'
6367,392583671,"b""I think you are missing details here? I'm not seeing the changes from the 4.1 PR"""
6367,392583687,"b'Sorry, 4.0 PR'"
6365,392583790,b'There will be more changes here. Already discussed with @Danielle9897 '
6369,392662265,b'LGTM'
6385,393065929,b'http://issues.hibernatingrhinos.com/issue/RavenDB-11245'
6403,393581369,b'Excellent work'
6415,393967241,b'See my changes on top of yours'
6435,394621747,"b'BTW, we need these changes in 4.1 as well, for when we hit 4.2'"
6437,394650037,"b""@aviv86 Let's also mark as obsolete the DocumentChange.TypeName property """
6437,394650366,b'@aviv86 Can you also check the compilation?'
6450,394754110,"b""don't we need this in 4.1 as well?"""
6450,394950740,"b'Yes, This bug I introduced with RavenDB-11133, which is not implemented yet in 4.1.'"
6458,395034575,"b""Rest of the comments are common to 4.0 version. So I'll address them there and cherry-pick."""
6486,395338286,b'why closed?'
6486,395339332,"b'Pawel wants to release new version, I will PR after release. '"
6502,395681485,b'Looks fine for me in terms of `.cs` changes'
6502,395683240,b'@grisha-kotler can `ReloadLicense` method execute `LicenseChanged?.Invoke();` in `tryfinally` ? I think we need to inform certain compontents of the system that license changed even when we fallback to AGPL'
6524,395751028,b'@grisha-kotler can you check this?'
6524,395751487,"b""@grisha-kotler Please check if I didn't miss any additional RemoveAgplAlert and CreateAgplAlert calls."""
6536,395872799,b'I will regenerate package-lock.json with VS as it is running very very old version.'
6535,395872839,b'I will regenerate package-lock.json with VS as it is running very very old version.'
6528,395896773,b'I will change that in another PR'
6539,395909214,b'LGTM'
6502,396028678,b'@ppekrol we already invoke LicenseChanged when there is a license.\r\nIt is impossible to get back to AGPL (no license) once you installed a license.\r\nYou can only update/change your license (in that case LicenseChanged will be invoked)'
6545,396139861,"b""I'm not sure how this is solving the race condition on the `OnError` method?"""
6545,396141321,"b'It covers an issue where the exception happenes during the first initialization of the Changes API. I think this should be enough. We cannot have a consistent behavior when `OnError` would be passed to the `Changes()` method, due to caching of the `DatabaseChanges`. Which means that second call to that method would be racy again.'"
6502,396198275,b'@grisha-kotler This conflicts'
6502,396208570,b'fixing it'
6564,396222088,b'I have suggested this a year ago. '
6502,396242751,b'Can be merged'
6503,396243045,b'Can be merged'
6569,396256569,"b""I'm wondering at what other DBs we should look at?"""
6569,396511357,"b""I think that this close the loop in terms of what we support until  we get a user request.\r\nI don't think we want to pre-preemptively support DB2, for example."""
6569,396511390,b'I left my mainframe on my other pants'
6558,396512109,"b'We need a different approach, talked with @karmeli87 about this already, will have new PR'"
6566,396519976,"b""I'll reopen once I confirm it's fine."""
6567,396520017,"b""I'll reopen once I confirm it's fine."""
6570,396615203,b'Beside cosmetics. LGTM'
6603,396903267,b'will add one more thing'
6617,397025386,"b'We missed something here, because this is generating a lot of tests failures.'"
6617,397035580,"b'Yes, checking now'"
6617,397044078,b'FastTest run fine now. Now running full test suite'
6617,397054470,b'Slow tests run as well'
6614,397178276,b'See how this behaves https://github.com/ravendb/ravendb/pull/6614/commits/c87cbc54d56672ae7d75c9b3626edf20f6a77d61'
6642,397528819,b'@maximburyak check failing tests'
6642,397536405,"b""@maximburyak I've reverted one commit, we need to take a closer look at this.\r\n4.0: https://github.com/ravendb/ravendb/pull/6645\r\n4.1: https://github.com/ravendb/ravendb/pull/6646"""
6658,397882145,"b'We can merge this one. For now, we can add a certificate from the command line args.'"
6663,398003353,b'Please review server part. '
6659,398021535,"b""Do we need to manually serialize and deserialize items. Maybe it would be better to write DTO's for this and use EntityToBlittable? Do we need performance here? For deserialization we probably can use JsonDeserializationBase or even EntityToBlittable.\r\n\r\nThis file should contain BuildVersion, same as we do in Smuggler file.\r\n\r\n"""
6659,398046354,"b'Agreed on BuildVersion, and yes, using DTOs will likely be easier.'"
6658,398148162,"b""I've made few enhancements: https://github.com/ppekrol/ravendb/tree/RavenDB-7787\r\nGreg is working on integrating this with build process.\r\n\r\nAfter that we can continue working on extending the feature set of Raven.Embedded and probably using it in Raven.TestDriver."""
6685,398643249,b'I will apply this to 4.1'
6691,398699066,b'Waiting for CI'
6718,399862283,"b""@ppekrol ` certificate2.Thumbprint == thumbprint;` is required when running HTTPS, otherwise, how would we know that the server is trustworthy?\r\nBy definition, almost, we aren't going to be using a valid cert, since we are bound to `127.0.0.1`.\r\n"""
6670,399862886,"b'LGTM, @ayende ?'"
6723,399865454,b'Did you miss the promotable fix?'
6718,399872804,b'I was answering to @maximburyak '
6764,400548781,"b'This flag will cause DocumentPutAction to recreate attachment metadata\r\nproperty according to attachment metadata table\r\n\r\n```csharp\r\nprivate bool ShouldRecreateAttachments(DocumentsOperationContext context,\r\nSlice lowerId, BlittableJsonReaderObject oldDoc,\r\n            BlittableJsonReaderObject document, ref DocumentFlags flags,\r\nNonPersistentDocumentFlags nonPersistentFlags)\r\n        {\r\n            if ((nonPersistentFlags &\r\nNonPersistentDocumentFlags.ResolveAttachmentsConflict) ==\r\nNonPersistentDocumentFlags.ResolveAttachmentsConflict)\r\n            {\r\n                document.TryGet(Constants.Documents.Metadata.Key, out\r\nBlittableJsonReaderObject metadata);\r\n               * RecreateAttachments(context, lowerId, document, metadata,\r\nref flags);*\r\n                return true;\r\n            }\r\n}\r\n```\r\n\r\n\r\nOn Tue, Jun 26, 2018 at 5:54 PM Ayende Rahien <notifications@github.com>\r\nwrote:\r\n\r\n> *@ayende* commented on this pull request.\r\n> ------------------------------\r\n>\r\n> In src/Raven.Server/Documents/Patch/ScriptRunner.cs\r\n> <https://github.com/ravendb/ravendb/pull/6764#discussion_r198177233>:\r\n>\r\n> > @@ -408,7 +408,13 @@ public JsValue PutDocument(JsValue self, JsValue[] args)\r\n>                  {\r\n>                      reader = JsBlittableBridge.Translate(_jsonCtx, ScriptEngine, args[1].AsObject(), usageMode: BlittableJsonDocumentBuilder.UsageMode.ToDisk);\r\n>\r\n> -                    var put = _database.DocumentsStorage.Put(_docsCtx, id, _docsCtx.GetLazyString(changeVector), reader);\r\n> +                    var put = _database.DocumentsStorage.Put(\r\n> +                        _docsCtx,\r\n> +                        id,\r\n> +                        _docsCtx.GetLazyString(changeVector),\r\n> +                        reader,\r\n> +                        nonPersistentFlags: NonPersistentDocumentFlags.ResolveAttachmentsConflict\r\n>\r\n> what does this do?\r\n>\r\n> \xe2\x80\x94\r\n> You are receiving this because you authored the thread.\r\n>\r\n>\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/ravendb/ravendb/pull/6764#pullrequestreview-132059626>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/Aj8zAv_u7Dxe4nAgO4_8VwnxgGnIVIWyks5uAksPgaJpZM4U4BzL>\r\n> .\r\n>\r\n'"
6790,400596654,b'@ppekrol Done'
6764,400600994,"b""In this case, let's add a comment there explaining that. In 6 months, that might be a puzzle."""
6808,400684698,"b""Let's leave it as in in 4.0 and support both in 4.1. Unless we want to migrate the support for multiple ConfigurationEntry attributes."""
6808,400704335,"b""@iftahbe since I've made that call, I will handle this :)"""
6808,400761314,"b""Oh sorry, it's a mistake.\r\nI meant to PR only for 4.1 but accidentally did it for 4.0 \r\n(and yes, I should have kept the old entry too..)"""
6809,400793932,b'Green build :-)'
6847,401525288,b'@maximburyak Can you check this?'
6847,401600203,"b'Looks good, but it lacks generic API'"
6847,401604412,b'Can you create an issue for that?'
6847,401632697,b'sure http://issues.hibernatingrhinos.com/issue/RDBC-206'
6906,402205996,b'Switched to loop (3x)'
6713,402445210,b'It can be reviewed and merged. Summary of dealing with counters by Raven ETL can be found here: http://issues.hibernatingrhinos.com/issue/RavenDB-11157#comment=67-29744'
6920,402494317,b'Please check failing replication tests'
6920,402675643,"b""var type = (item.Flags & DocumentFlags.Revision) == DocumentFlags.Revision ? AttachmentType.Revision: AttachmentType.Document;\r\n                                foreach (var attachment in _parent._database.DocumentsStorage.AttachmentsStorage.GetAttachmentsForDocument(documentsContext, type, item.Id)\r\n                                    .Where(a => a.Etag <= firstBatchEtag).Select(a => ReplicationBatchItem.From(a)))\r\n\r\nThis is the code that actually brings the attachments into the batch why don't we need it ?\r\nwhere do expect me to fetch the attachments from?\r\nall we have are the descriptor of attachments in the document's metadata not the actual attachments"""
6920,402694044,b'@talweiss1982 can you check failing tests?'
6920,402700826,b'@ppekrol the majority of them are failing because of conflicts not been created (not a bug but a feature) need to go over them one by one and verify whether a bug or a feature'
6920,402702922,"b'Ok, great.'"
6924,402730086,b'This commit description is very hard to read'
6924,402734359,"b'Tried to do my best :) In particular, wanted to include as much details as possible to describe the issue. What changes would you suggest to make it clearer / easier to read for you?'"
6934,402807815,b'fixed'
6941,402823828,b'? '
6941,402824822,b'See the discussion on the issue. :-('
6920,402841746,"b'Pushed the wrong branch, forcing pushing.'"
6924,403513687,"b'@arekpalinski Sorry for my late response! \r\n\r\nI guess that if you didn\'t write anything detailed, one (me, for example) would say: ""well, it\'s not clear, I\'ll move on"", but because you already started writing something detailed, it draws the eye, and it could be great if it could be more clear. \r\n\r\nI would start from splitting it into three separate sentences, because the two first sentences looks from the first glance as continuation of one another, and it\'s not: \r\n\r\n1) If the replacement index wasn\'t running then we shouldn\'t start it after renaming it. \r\n2) Making sure nobody will start an index if we stop it during the replacement. \r\n3) Changing the order of stop indexing / put index operations to test what we actually want - we want to test that we can get back to the original index def if the replacement index still exists\r\n\r\nThen, maybe I would split sentence 3 into a different commit, because, if I understood correctly, it\'s not directly about the first two changes. On the other hand, if it would stay, I would add a ""Fixing test by.."" prefix, so it will be clear to what it refers.\r\n'"
6955,403520626,"b""@ppekrol I don't think that those tests are entirely duplicate.. The goal of those tests is to make sure that  the behavior of the indexes that inherit from AbstractJavaScriptIndexCreationTask is as those that inherit from AbstractJavascriptIndexCreationTask, but has all the flags set manually. In the bottom line, those tests checks if all the properties like 'Maps', 'Reduce', 'Fields' etc. are passed correctly to the index definition creation. Simply removing those checks is not good, but those tests don't serve their goal either, I guess that we better have a more specific tests that checks this transformation between the AbstractJavaScriptIndexCreationTask  and IndexDefinition. What do you think?"""
6955,403603949,b'@efratshenhar reverted this.'
6955,403606416,"b'Now we have only tests that inherit from `AbstractJavaScriptIndexCreationTask` and I think that is the way to go, because they are converting to IndexDefinition at the end, so we are checking both things at once.'"
6924,403713115,b'Thanks for the hints!'
6955,403729323,"b'Agreed, makes more sense!'"
6998,404077888,b'I hope that all the nice comments from this PR and from https://github.com/ravendb/ravendb/pull/6997 are taken care of :-)'
7011,404170516,b'Fixed'
7022,404415525,"b'Waiting for CI, there might be some tests that violate this.'"
7031,404507564,b'Please ping me when available.'
7034,404525925,b'@maximburyak please also check this https://github.com/ravendb/jint/commit/b9c5028911e853c9eb23140ee65d82fc873c24d8#r29685910'
7028,404637003,b'cc @ppekrol @arekpalinski '
6659,404750049,"b'@haludi Please convert to DTO, now you are using a DJV and it makes the code unnecessary complex. You can create `ITransactionMergerCommand` interface for example and return strongly-typed commands there. Serialization can be made using EntityToBlitable.\r\n\r\nHave you added BuildVersion to the output format?'"
7035,404750294,b'@karmeli87 please check failing tests'
7028,404757924,"b""We are arriving there from:\r\n\r\n```\r\n\tRaven.Server.dll!Raven.Server.Utils.TypeConverter.ToBlittableSupportedType(object root, object value, bool flattenArrays, int recursiveLevel) Line 176\tC#\r\n \tRaven.Server.dll!Raven.Server.Utils.TypeConverter.ToBlittableSupportedType(object value, bool flattenArrays) Line 141\tC#\r\n \tRaven.Server.dll!Raven.Server.Documents.Indexes.MapReduce.Static.MapReduceIndex.AnonymousObjectToBlittableMapResultsEnumerableWrapper.Enumerator.MoveNext() Line 432\tC#\r\n \tRaven.Server.dll!Raven.Server.Documents.Indexes.MapReduce.MapReduceIndexBase<Raven.Server.Documents.Indexes.MapReduce.Static.MapReduceIndexDefinition, Raven.Server.Documents.Indexes.IndexField>.PutMapResults(Sparrow.Json.LazyStringValue lowerId, Sparrow.Json.LazyStringValue id, System.Collections.Generic.IEnumerable<Raven.Server.Documents.Indexes.MapReduce.MapResult> mappedResults, Raven.Server.ServerWide.Context.TransactionOperationContext indexContext, Raven.Server.Documents.Indexes.IndexingStatsScope stats) Line 120\tC#\r\n \tRaven.Server.dll!Raven.Server.Documents.Indexes.MapReduce.Static.MapReduceIndex.HandleMap(Sparrow.Json.LazyStringValue lowerId, Sparrow.Json.LazyStringValue id, System.Collections.IEnumerable mapResults, Raven.Server.Documents.Indexes.Persistence.Lucene.IndexWriteOperation writer, Raven.Server.ServerWide.Context.TransactionOperationContext indexContext, Raven.Server.Documents.Indexes.IndexingStatsScope stats) Line 285\tC#\r\n```\r\n\r\nIt appears we need to have that check in `TypeConverter.cs ` although it seems to me that we'll be better of by calling `JintLuceneDocumentConverter.GetValue` then (would require to make it `public static`) as that would be a single transformation point of JsValues:\r\n\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Server/Documents/Indexes/Persistence/Lucene/Documents/JintLuceneDocumentConverter.cs#L175\r\n\r\n@talweiss1982 Thoughts?"""
7028,404776620,"b'The converter get value is not generic enough. There is the blittable to js bridge that holds similar functionality but it was also lacking some of the conversion I needed. @maximburyak wants to push all jint related functionality to a single place and I agree with that. The other converters should invoke that single source of conversion this will also ensure we are consistent.\r\nAs for now i would leave Efrat fix because calling the converter would be wrong, we flatten arrays for indexes and it is not what we want for patches and subscriptions and future features. '"
6987,404790461,"b""This break competabilty I'm not going to break something and then add a workaround for it without good enough justification. """
6987,404791496,"b""@talweiss1982 Haven't you added this number in this PR?"""
7035,404841379,"b""Done, was unrelated to this specific PR, rather the `SerializedDatabaseCommands` wasn't cloned."""
6987,405077871,"b'Nope, this has been around since RTM.\r\nOnly replication was actually doing something with it. V4.0 is running version 31. '"
6987,405077898,b'Note that those version are per operation and not per server version '
6987,405081583,"b""I'm aware of that, so changing this `33` protocol version to `40000` will give you instant information that this is supported in 4.0+"""
6987,405088458,"b""@ppekrol bumping the new values to 4XXX is okay with me but we also need to tell the difference between replication and clustering this is why the version was not identical in the first place (was different so people won't do a mistake and it will show the wrong error)\r\nwhat do you think about:\r\n40303 instead of 33 where 40 is for v40 3 is for replication and 03 is for the actual version?"""
7028,405100394,"b'@ppekrol, can we merge that for now, until we have that significant SingleRun integration refactoring?'"
7028,405101521,"b'@efratshenhar, I see that the previously reviewed code has been removed and the tests that related to it was change. Can you confirm one of the 2: the previous change was redundant, or it\'s just a ""work in progress"" for now?'"
6659,405148680,"b""@ppekrol I am working to change the DJVs. To simply using EntityToBlitable is not working because the commands have properties/fields with blittable & LazyStringValue. For now I try to use Newtonsoft.Json for more flexible future use and that will maybe remove the need to use DTO. But what do you exactly mean? To make DTO for each commands? Does't it just pass the complexity to command -> DTO conversion? And will lead to maintain the DTO class and the conversion every time the command change? \r\nIn context to the version I didn't deal with that yet.\r\n """
7028,405183066,b'It was by mistake'
7028,405186340,"b""I'm merging this, but the we should have one place for those kind of conversions like @arekpalinski wrote.\r\n\r\nThere can even be a switch to 'flattenArrays' or not. Like we have in TypeConverter. Maybe it would be better to move the method from 'JintLuceneDocumentConverter' to 'TypeConverter'."""
7028,405186750,b'http://issues.hibernatingrhinos.com/issue/RavenDB-11555'
7051,405210462,b'@karmeli87 can you check this?'
7056,405256498,b'@maximburyak Can you review?'
7035,405272890,b'@talweiss1982 Can you check this?'
7059,405495420,"b""@ppekrol I've force pushed my changes. Please review. """
7056,405606381,b'@maximburyak nice catch!'
7074,405633958,"b""I don't like this approach. It is better to just return it from the handler. The risk here is indeed that values in the settings.json (or command line) which are expected to be transient, will become permanent. """
7078,405872411,"b""@ppekrol I've force pushed changes for 4.1"""
7093,405900341,b'@ppekrol please review again'
7098,405916645,"b""DON'T we want to change the test drive?\n\nOn Wed, 18 Jul 2018, 15:38 Pawe\xc5\x82 Pekr\xc3\xb3l, <notifications@github.com> wrote:\n\n> *@ppekrol* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Embedded/RavenServerRunner.cs\n> <https://github.com/ravendb/ravendb/pull/7098#discussion_r203361551>:\n>\n> > @@ -71,6 +71,7 @@ public static Process Run(ServerOptions options)\n>                  CreateNoWindow = true,\n>                  RedirectStandardOutput = true,\n>                  RedirectStandardError = true,\n> +                RedirectStandardInput = true,\n>\n> Should we do the same in TestDriver?\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/7098#pullrequestreview-138233322>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKW5uLnthDaPOyL__ji3xcieSXvlvLhGks5uHyxNgaJpZM4VUY78>\n> .\n>\n"""
7098,405920170,b'Can you elaborate what do you mean? '
7114,406241545,b'CommandLine provider takes last value only. Just checked.'
7114,406262383,b'Refactored a bit the code there. Added string[] support for nested json also.'
7090,406313107,"b""Trying this out shows about 80% _more_ time to run the fast tests.\r\nThis is not a good thing, so we'll test this out more and probably do a few profiler runs first."""
7124,406510007,b'@talweiss1982 can you check failing tests?'
7124,406849277,b'sure'
7124,406857677,b'I have modified the test to reflect the fact that we export the id now'
7131,406859303,b'All tests are passing'
7117,406901078,b'@efratshenhar can you apply changes from https://github.com/ravendb/ravendb/pull/7116 also here?'
7131,406901162,b'@ayende can you check failing tests http://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.0/1277/ ?'
7117,406950067,b'yes\r\n'
6659,407007045,"b'For Maxim\'s request and for good order, I will response with ""done"" to all the comments I dealt with'"
7144,407084169,"b""We don't want to make that big a change for 4.0"""
7131,407085323,b'Cannot get these tests to fail on my end.'
7134,407170576,b'Comments will be handled in separate PR'
7145,407475998,"b'@arekpalinski can you review? @aviv86 can you check failing tests? Nothing major, assertions are failing because of the default alias change, but I cannot fix it myself till tomorrow.'"
7148,407516108,"b""@arekpalinski please make sure you don't hit this line:\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Studio/typescript/viewmodels/database/indexes/indexPerformance.ts#L953\r\n\r\nIf you introduced new types we should also add new colors."""
7148,407650012,b'@ml054 No _new_ type was introduced here. Just added Linq / Jint timings so they will have the same colors like in map phase'
7148,407822026,"b""@arekpalinski that's great. I just skim though this and wasn't sure. """
7188,408766743,"b""Why don't we try to look for a matching version using our own TCP version and going back from that?\r\nThis means that old server could never communicate with new servers meaning we only have backward compatibility and not forward compatibility and I think we should support this."""
7146,408868937,"b'Closing, handling this in a different PR'"
7193,409124792,"b'Very Confusing the with non-console user will understand why because he\nwill get an exception that tell him that he don\'t have console like I did.\n\nOn Tue, 31 Jul 2018, 10:18 Pawe\xc5\x82 Pekr\xc3\xb3l, <notifications@github.com> wrote:\n\n> *@ppekrol* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Utils/Cli/CommandLineSwitches.cs\n> <https://github.com/ravendb/ravendb/pull/7193#discussion_r206417562>:\n>\n> > @@ -100,6 +104,11 @@ public static string[] Process(string[] args)\n>                  ""-l | --log-to-console"",\n>                  ""Print logs to console (when run in non-interactive mode)"",\n>                  CommandOptionType.NoValue);\n> +            _nonConsoleOption = _app.Option(\n> +                ""--non-console"",\n>\n> Still, it would be better to go with --no-color because this is what it\n> does actually. It can be used outside of embedded.\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/7193#discussion_r206417562>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AKW5uMbrPHVdWXvYll9utnJSTe59DAaZks5uMATJgaJpZM4Vmfdx>\n> .\n>\n'"
7193,409126362,b'This is transparent for embedded user. And for a non-embedded user this option would be confusing.'
7193,409143656,"b'And non-color will be better? We can change the description maybe. And then\nwe can use it in the future for no console application that have stdin\nredirect\n\nOn Tue, 31 Jul 2018, 10:40 Pawe\xc5\x82 Pekr\xc3\xb3l, <notifications@github.com> wrote:\n\n> This is transparent for embedded user. And for a non-embedded user this\n> option would be confusing.\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/7193#issuecomment-409126362>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AKW5uGqN0gdAOQ9zkvC0zIBCnRrxyvhRks5uMAnigaJpZM4Vmfdx>\n> .\n>\n'"
7193,409149874,b'`--console-no-color` would be best'
7203,409477138,b'why was this closed?'
7210,409491647,b'I will change bg-color + add icon'
7217,409540191,b'Still missing handling of `WaitForExit` returning false'
7230,409709102,b'Fixed'
7230,409710901,b'Still there :)'
7230,409711638,"b'I am using a new git client (GitKraken) for some things is great, for others suck big time. '"
7222,409944026,b'@lahma At this moment we do not want to introduce such changes to the session behavior. Could you push your Quartz code to a branch so we can review it and fix it on Quartz-side?'
7241,410133929,b'@ayende I have fixed the index name'
7241,410158203,"b'Fixed, sorry, been awake since 4am :('"
7241,410503890,b'@arekpalinski please review changes'
7241,410617445,"b""@talweiss1982 once you don't use `CreateIndexes()` in favor of `Api.JetCreateIndex2()` I think you should define `ulDensity` parameter there as well"""
7241,411023607,b'Done'
7273,411362509,b'Please just remove `CreateIndexGrbit.IndexUnique` when necessary and create another PR'
7280,411560409,"b'Good enough to take out the show-stopper tag into 4.1 and 4.0, need to measure carefully to understand the full impact of the changes, but I dont expect radical differences. '"
7279,411560463,"b'Good enough to take out the show-stopper tag into 4.1 and 4.0, need to measure carefully to understand the full impact of the changes, but I dont expect radical differences. '"
7279,411638128,b'Maybe we should change  the name to LockFreeConcurrentDictionary and LockFreeConcurrentSet ?\r\nInitially it was very confusing to figure out that we are dealing not with BCL data structures.'
7279,411661879,b'Rename done here: https://github.com/ravendb/ravendb/pull/7282'
7289,411746498,b'1. Please check the compilation\r\n2. This is a breaking change. It would be better to create an operation in SlowTests for this purpose only (no need to BackupDatabaseNowResult from Server to Client then)'
7289,411747731,"b""1. Resharper didn't refactor properly\r\n2. No, this is something that should have been there from the first place."""
7289,411750041,"b""2. This is a maintenance operation, so it's OK to do so. \r\n3. I think it would be better to put the `BackupDatabaseNowResult` inside the `StartBackupOperation` and just rename it to Result"""
7301,411869122,b'Please check failing tests.'
7302,411875886,b'https://github.com/ravendb/ravendb/pull/7307'
7308,411881384,b'@karmeli87 please review'
7311,412042148,b'@ayende can you check the failing test?'
7318,412267858,b'Needed for CultureTests'
7311,412287860,b'fixed'
7310,412324273,"b'Degrading gracefully when you have an out of band memory error means\npointer chasing and dump reading and a lot of hairloss.\nI want to be able to get immediate and obvious error in production when\nthis happens.\nDoesn\'t have to take down the process, but throwing an error up is required.\n\n*Hibernating Rhinos Ltd  *\n\nOren Eini* l CEO l *Mobile: + 972-52-548-6969\n\nOffice: +972-4-622-7811 *l *Fax: +972-153-4-622-7811\n\n\n\nOn Fri, Aug 10, 2018 at 5:28 PM, Federico Andres Lois <\nnotifications@github.com> wrote:\n\n> *@redknightlois* commented on this pull request.\n> ------------------------------\n>\n> In src/Sparrow/Allocators.PointerTypes.cs\n> <https://github.com/ravendb/ravendb/pull/7310#discussion_r209277804>:\n>\n> > +        public ReadOnlySpan<byte> AsReadOnlySpan(int length)\n> +        {\n> +#if VALIDATE\n> +            if (length > Size)\n> +                throw new ArgumentException($""{nameof(length)} cannot be bigger than block size."");\n> +#endif\n> +\n> +            return new ReadOnlySpan<byte>(Ptr, length);\n> +        }\n> +\n> +        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n> +        public ReadOnlySpan<byte> AsReadOnlySpan(int start, int length)\n> +        {\n> +#if VALIDATE\n> +            if (start + length > Size)\n> +                throw new ArgumentException($""{nameof(length)} cannot be bigger than block size."");\n>\n> We do, we shouldn\'t (potentially) kill the process because of a leak... we\n> should degrade \'gracefully\' instead. That is the reason why I set it to die\n> horribly in debug instead.\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/7310#discussion_r209277804>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wAN6f7LequnyFlSFzQrivak49rc24ks5uPZiAgaJpZM4V3FAx>\n> .\n>\n'"
7323,412345769,b'@myarichuk Can you check failing tests?'
7310,412351250,b'Are we talking about leaks or invalid pointer access? I got lost in the details'
7326,412369667,"b""Optionally you can use es6 proxies to intercept global variables creation (or to catching assigning to this) + 'with' keyword to sandbox execution."""
7310,412417110,"b""I'm talking specifically here about the `AsSpan` calls with the `start`, `length` calls where we _have_ to do bound checking in prod as well"""
7310,412561815,"b'@ayende Ohh yes, we are bound checking explicitly now on creation. '"
7336,412804656,b'What is the reasoning for this change?'
7336,412819299,"b'We need this so the studio will identify when the node is in passive/candidate state, since right now we rely on the node tag.\r\n\r\nSee http://issues.hibernatingrhinos.com/issue/RavenDB-8351'"
7340,412851093,b'looking into why this failed'
7323,412930190,b'Finally reproduced the failing tests. Working on it.'
7352,413111897,"b""Test failure doesn't seem to be related to the code changes"""
7368,413493341,b'@maximburyak can you review this?'
7355,413525807,b'Thx!'
7369,413532365,b'@haludi you need to change commit from `Full path added to fields changed` to `RavenDB-11649 Full path added to fields changed`'
7369,413554339,b'Merged via https://github.com/ravendb/ravendb/pull/7373'
7370,413607552,b'Added recursive code to check for blittables in command results.'
6659,414216424,b'Closing this PR so we can generate a new clean one against `v4.1`'
7322,414685825,b'Will be handled here https://github.com/ravendb/ravendb/pull/7370'
7323,414686002,b'Will be handled here: https://github.com/ravendb/ravendb/pull/7371'
7409,414687591,"b""Shouldn't we upgrade all versions to the 1.0.16?"""
7409,414696960,b'Probably a good idea'
7409,414698818,"b""@aviviadi current `libsodium.arm.so` is 346 KB. The one that you submitted is 1.04 MB. I wouldn't expect such a huge difference.  Do you know why they differ so much?"""
7415,414927196,b'http://issues.hibernatingrhinos.com/issue/RavenDB-11791#comment=67-30746'
7415,414950276,"b""@maximburyak @ayende I've pushed some commits. Can you review?"""
7415,414968663,b'LGTM'
7418,414997597,b'Can you undo all the merges?'
7418,415003282,"b""@ayende I'll create a new one with a proper rebase"""
7421,415030310,"b'Bad merges, I will reopen new PR'"
7310,415187185,"b""Dealing with memory is a pain but good exercise to review everything. Does anyone knows why ``UnmanagedWriteBuffer`` handles its own memory allocations / cache instead of just request size X when it needs it? To me it looks like it is implementing its own 'arena' style allocation policy. """
7310,415313204,"b""`UnmanagedWriteBuffer` just uses `GetManagedBuffer`, it shouldn't do any additional memory allocations. Where are you seeing that?\r\nNote that it just need a temp buffer and is one of the targets for Pipes with the spanification"""
7425,415357294,b'BTW why is it labeled as `RavenDB-8775`?'
7429,415448341,"b'A lot of tests are failing with ` Raven.Server.Documents.Indexes.Index.GetMemoryStats()` NRE, related?'"
7310,415456126,"b'What I mean is that ``UnmanagedWriteBuffer`` does memory pooling in what it looks like an `arena` style allocation. That means that every instance is acquiring and keeping memory just in case, while it could be solved elegantly just asking the memory and returning it to an arena, because it should be extremely fast and the use pattern looks like it can be even optimal in that case. \r\n\r\nYes, I am in the process of looking up cases for Pipes and Spans, but right now the biggest issue is that Pipes are not supported in older netstandard and Sparrow must support older clients too. \r\n\r\nEDIT: I see, they are deploying it for all versions'"
7310,415457402,"b""`UnmanagedWriteBuffer` is a short lived struct, it's only memory usage is with the `_buffer` it uses, which is owned by the context and released when the context is reset. I'm not sure where you see arena memory management?"""
7310,415458519,"b""Most uses of ``UnmanagedWriteBuffer`` ends up being enclosed in ``using`` statements. That is why I am saying it is arena style. You acquire the memory you need (aka 'the buffer'), you can return it as soon as you are done to a high-performance allocator for reuse (we are not doing it). """
7310,415458908,"b""It just uses a buffer, doesn't matter from where."""
7429,415462173,"b""Taking a look, I think it is unrelated. So far didn't reproduce."""
7429,415479248,"b'From what I see, those tests failed because of http://issues.hibernatingrhinos.com/issue/RavenDB-11803'"
7433,415665313,b'Please check failing tests'
7432,415672025,b'@IdanHaim please check test failures'
7425,415748000,b'Done'
7433,416032528,b'Done'
7409,416218792,"b""@ppekrol IDK. The new 1MB assembled library was built manually by me on the RPi.  I didn't add switches nor arguments to the build process (can't be sure this is not a debug version..).\r\nI still recommend to get it in, and I will mention in the issue to check this issue"""
7409,416219361,"b""Can't we install it via apt-get and use the file from there? IIRC this is what we did last time?"""
7409,416222949,"b""There's no available v1.0.16 in apt repo"""
7409,416224757,b'https://packages.ubuntu.com/bionic/libsodium23 ?'
7409,416238889,b'I am talking about raspbian-stretch '
7409,416240238,"b""Isn't this the 'armhf' ? What are you getting after doing `apt-get install libsodium23` ?"""
7456,416306633,b'This will be handled in a separate PR'
7409,416529721,"b'We want to have the `.so` file bundled with us, but yes, we want to use the professionally deployed version.\r\nNeed to update 4.0 & 4.1 and all the dll / so '"
7409,416531561,"b'Yes, me and @aviviadi will be working on this later today or tomorrow morning.'"
7486,416977186,b'@aviv86 Can you review this?'
7495,417276696,b'Failing test and conflicts.'
7514,417631867,b'test comment'
7514,417632761,b'another test comment'
7514,417634831,b'comment #3'
7514,417635892,b'comment #4'
7519,417957011,b'LGTM'
7519,418014203,"b""I'm missing the v4.1 branch?"""
7519,418016513,"b""This fix is already in v4.1\n\nOn Mon, 3 Sep 2018, 09:34 Ayende Rahien, <notifications@github.com> wrote:\n\n> I'm missing the v4.1 branch?\n>\n> \xe2\x80\x94\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/7519#issuecomment-418014203>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AKW5uHrN6GzLMJ_8-qeS96DcK54fb8bwks5uXM2SgaJpZM4WWl_7>\n> .\n>\n"""
7530,418188818,b'You need to register the context itself to propagate the low memory signal. That is how it is being done on the generalized allocators.'
7538,418397455,b'@redknightlois can you please review this.'
7535,418492858,b'Rebased'
7540,418619179,b'https://github.com/ravendb/ravendb/blob/9e47eadebc18abf734295e21c13c2d5ed62221ce/src/Raven.Server/Web/System/StudioHandler.cs#L290\r\n\r\nThey are changing `env.ContentRootPath` (and probably more) and this breaks Studio in Embedded when used in ASP.NET Core project.'
7535,418619678,b'@ayende this needs to go to 4.0?'
7535,418619998,b'Yes'
7542,418670191,b'Do we need this in 4.0?'
7544,418672949,b'cc @ayende @maximburyak '
7563,419672244,b'@arekpalinski please review'
7563,419850250,"b""I've created http://issues.hibernatingrhinos.com/issue/RavenDB-11910 for this"""
7570,419886211,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jan Marques (jan@janmarques.net)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
7570,420037934,b'Hi @janmarques \r\n\r\nCan you sign our CLA?'
7570,421472287,b'fixed in: https://github.com/ravendb/ravendb/pull/7609'
7495,421725922,b'Rebased and pushed'
7495,421734768,b'Remaining work: http://issues.hibernatingrhinos.com/issue/RavenDB-11957'
7587,421758496,"b'Please write additional endpoints, which data I have to log.'"
7612,421775971,b'@ayende I think that this needs to go to v4.0 also?'
7612,421898185,b'Yes'
7628,423190579,b'Please check failing test - RavenDB_11879.SortOnlyQueriesShouldWorkForMultiMapIndexes'
7629,423320075,b'This looks like it broke some of the tests. `WhoIsLocking` seems to have failed and masked the actual error'
7625,423822722,"b""Yes. A shared one would work too. Those are small arrays now\n\nObtener Outlook para Android<https://aka.ms/ghei36>\n\n________________________________\nFrom: Ayende Rahien <notifications@github.com>\nSent: Sunday, September 23, 2018 6:53:51 AM\nTo: ravendb/ravendb\nCc: Federico Andres Lois; Author\nSubject: Re: [ravendb/ravendb] [RavenDB-11866] Improve the prefetching behavior to diminish IO requests (#7625)\n\n\n@ayende commented on this pull request.\n\n________________________________\n\nIn src/Voron/Data/BTrees/TreePage.cs<https://github.com/ravendb/ravendb/pull/7625#discussion_r219693747>:\n\n>          {\n-            var results = new List<long>(NumberOfEntries);\n+            var results = new long[NumberOfEntries];\n\n\nWouldn't a simple buffer pool be enough here?\n\n\xe2\x80\x94\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/ravendb/ravendb/pull/7625#discussion_r219693747>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA_zo381EZ--l5181OS0-5Lly5G7RCEuks5ud1ovgaJpZM4Wwv7v>.\n"""
7628,423900575,b'SlowTests.Issues.RavenDB_8956.OptimizedSortOnlyQuery\r\nSlowTests.MailingList.SjurIndexingTests.TestIndexSortWithoutCriteria\r\n\r\nare failing now'
7625,424100488,"b""Iterator based to avoid allocations (even shared) altogether, and POSIX support. I may need someone like @aviviadi to take a look into it to ensure I didn't break anything... I have no way to test it without installing a whole linux environment on my end."""
7625,424232203,b'@redknightlois Please check failing tests: http://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.1/1651/'
7625,424438050,"b'There is something weird on `SlowTests.Client.Attachments.AttachmentsSessionAsync.PutLotOfAttachments(1000)` and I would need a second pair of eyes. \r\n\r\nThe story goes like this:\r\n- The prefetch table is based on the size of the actual pager file. \r\n- The test is creating a memmap and the data suggest that there are many pages (1000+) of data, which makes sense given the name of the test.\r\n- When the prefetcher gets page `1148` at https://github.com/ravendb/ravendb/pull/7625/files#diff-ce617e4ca933be8605b0ed4c5b91de7dR558 it calculates the proper segment for it which is way beyond the reported size of the memmap (65K)...\r\n\r\nThe underlying issue is that page `1148` should be on position `Base + 1148 * 8Kb` which is waaaaay beyond the 65K reported as the memmap total size. Any idea? '"
7630,424699256,"b""@karmeli87 \r\nI've already merged https://github.com/ravendb/ravendb/pull/7629 as all tests were green there but just noticed there is one failure here related to disposal. Could you check it?\r\n\r\n```\r\nSlowTests.Issues.RavenDB_3864.can_use_conventions_with_create_indexes_async\r\n\r\nMESSAGE:\r\nSystem.AggregateException : Could not dispose test (Failed to RmRegisterResources (sessionHandle=0))\\r\\n---- System.ComponentModel.Win32Exception : Failed to RmRegisterResources (sessionHandle=0)\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\n   at Raven.Server.Utils.ExceptionAggregator.ThrowIfNeeded() in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\src\\Raven.Server\\Utils\\ExceptionAggregator.cs:line 46\r\n   at ReflectionAbstractionExtensions.DisposeTestClass(ITest test, Object testClass, IMessageBus messageBus, ExecutionTimer timer, CancellationTokenSource cancellationTokenSource) in C:\\Dev\\xunit\\xunit\\src\\xunit.execution\\Extensions\\ReflectionAbstractionExtensions.cs:line 79\r\n----- Inner Stack Trace -----\r\n   at Raven.Client.Extensions.WhoIsLocking.GetProcessesUsingFile(String filePath) in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\src\\Raven.Client\\Extensions\\WhoIsLocking.cs:line 93\r\n   at Raven.Client.Extensions.WhoIsLocking.ThisFile(String path) in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\src\\Raven.Client\\Extensions\\WhoIsLocking.cs:line 20\r\n   at Raven.Server.Utils.IOExtensions.TryHandlingError(String directory, Int32 i, Exception e) in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\src\\Raven.Server\\Utils\\IOExtensions.cs:line 158\r\n   at Raven.Server.Utils.IOExtensions.DeleteDirectory(String directory) in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\src\\Raven.Server\\Utils\\IOExtensions.cs:line 140\r\n   at FastTests.RavenTestHelper.ClearDatabaseDirectory(String dataDir) in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\test\\Tests.Infrastructure\\RavenTestHelper.cs:line 69\r\n   at Raven.Server.Utils.ExceptionAggregator.Execute(Action action) in c:\\Jenkins\\workspace\\PR_Tests_v4.0\\s\\src\\Raven.Server\\Utils\\ExceptionAggregator.cs:line 28\r\n```\r\n"""
7587,424708848,b'@ml054 Please review again'
7630,424791390,b'Missed that one.. fixed :)'
7641,425009057,b'LGTM'
7628,425059986,b'Hopefully now is the charm'
7645,425067199,"b""Let's wait for CI test before we merge this one"""
7625,425167329,"b'Interesting new issue:\r\n```\r\nError occurred during flushing journals to the data file\r\nVoron.Exceptions.VoronUnrecoverableErrorException: Error occurred during flushing journals to the data file ---> System.OverflowException: Array dimensions exceeded supported range.\r\n   at Voron.Platform.Win32.WindowsMemoryMapPager.AllocateMorePages(Int64 newLength) in S:\\Source\\ravendb-40.git\\src\\Voron\\Platform\\Win32\\WindowsMemoryMapPager.cs:line 282\r\n   at Voron.Impl.Paging.Simple4KbBatchWrites.Write(Int64 posBy4Kbs, Int32 numberOf4Kbs, Byte* source) in S:\\Source\\ravendb-40.git\\src\\Voron\\Impl\\Paging\\AbstractPager.cs:line 520\r\n   at Voron.Impl.Paging.AbstractPager.CopyPageImpl(I4KbBatchWrites destwI4KbBatchWrites, Int64 p, PagerState pagerState) in S:\\Source\\ravendb-40.git\\src\\Voron\\Impl\\Paging\\AbstractPager.cs:line 471\r\n   at Voron.Impl.Journal.WriteAheadJournal.JournalApplicator.ApplyPagesToDataFileFromScratch(Dictionary`2 pagesToWrite) in S:\\Source\\ravendb-40.git\\src\\Voron\\Impl\\Journal\\WriteAheadJournal.cs:line 1073\r\n   at Voron.Impl.Journal.WriteAheadJournal.JournalApplicator.ApplyLogsToDataFile(CancellationToken token, TimeSpan timeToWait) in S:\\Source\\ravendb-40.git\\src\\Voron\\Impl\\Journal\\WriteAheadJournal.cs:line 569\r\n   at Voron.StorageEnvironment.BackgroundFlushWritesToDataFile() in S:\\Source\\ravendb-40.git\\src\\Voron\\StorageEnvironment.cs:line 1005\r\n   --- End of inner exception stack trace ---\r\n   at Voron.Exceptions.VoronUnrecoverableErrorException.Raise(StorageEnvironment env, String message, Exception inner) in S:\\Source\\ravendb-40.git\\src\\Voron\\Exceptions\\VoronUnrecoverableErrorException.cs:line 44\r\n   at Voron.StorageEnvironment.BackgroundFlushWritesToDataFile() in S:\\Source\\ravendb-40.git\\src\\Voron\\StorageEnvironment.cs:line 1025\r\n   at Voron.GlobalFlushingBehavior.<FlushEnvironments>b__19_0(Object env) in S:\\Source\\ravendb-40.git\\src\\Voron\\GlobalFlushingBehavior.cs:line 267\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Voron.Impl.LowLevelTransaction..ctor(StorageEnvironment env, Int64 id, TransactionPersistentContext transactionPersistentContext, TransactionFlags flags, IFreeSpaceHandling freeSpaceHandling, ByteStringContext context) in S:\\Source\\ravendb-40.git\\src\\Voron\\Impl\\LowLevelTransaction.cs:line 230\r\n   at Voron.StorageEnvironment.NewLowLevelTransaction(TransactionPersistentContext transactionPersistentContext, TransactionFlags flags, ByteStringContext context, Nullable`1 timeout) in S:\\Source\\ravendb-40.git\\src\\Voron\\StorageEnvironment.cs:line 657\r\n   at Raven.Server.ServerWide.Context.DocumentsOperationContext.CreateWriteTransaction(Nullable`1 timeout) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\ServerWide\\Context\\DocumentsOperationContext.cs:line 47\r\n   at Raven.Server.ServerWide.Context.TransactionOperationContext`1.OpenWriteTransaction(Nullable`1 timeout) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\ServerWide\\Context\\TransactionOperationContext.cs:line 93\r\n   at Raven.Server.Documents.TransactionOperationsMerger.MergeTransactionsOnce() in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Documents\\TransactionOperationsMerger.cs:line 471\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Raven.Server.Documents.TransactionOperationsMerger.Enqueue(MergedTransactionCommand cmd) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Documents\\TransactionOperationsMerger.cs:line 123\r\n   at Raven.Client.Util.AsyncHelpers.RunSync(Func`1 task) in S:\\Source\\ravendb-40.git\\src\\Raven.Client\\Util\\AsyncHelpers.cs:line 79\r\n   at Raven.Server.Smuggler.Documents.DatabaseDestination.DatabaseDocumentActions.FinishBatchOfDocuments() in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Smuggler\\Documents\\DatabaseDestination.cs:line 243\r\n   at Raven.Server.Smuggler.Documents.DatabaseSmuggler.ProcessDocuments(SmugglerResult result, BuildVersionType buildType) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Smuggler\\Documents\\DatabaseSmuggler.cs:line 553\r\n   at Raven.Server.Smuggler.Documents.DatabaseSmuggler.ProcessType(DatabaseItemType type, SmugglerResult result, BuildVersionType buildType, Boolean ensureStepsProcessed) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Smuggler\\Documents\\DatabaseSmuggler.cs:line 140\r\n   at Raven.Server.Smuggler.Documents.DatabaseSmuggler.Execute(Boolean ensureStepsProcessed) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Smuggler\\Documents\\DatabaseSmuggler.cs:line 70\r\n   at Raven.Server.Documents.PeriodicBackup.Restore.RestoreBackupTask.ImportSingleBackupFile(DocumentDatabase database, Action`1 onProgress, RestoreResult restoreResult, String filePath, DocumentsOperationContext context, DatabaseDestination destination, DatabaseSmugglerOptionsServerSide options, Action`1 onIndexAction, Action`1 onDatabaseRecordAction) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Documents\\PeriodicBackup\\Restore\\RestoreBackupTask.cs:line 518\r\n   at Raven.Server.Documents.PeriodicBackup.Restore.RestoreBackupTask.SmugglerRestore(String backupDirectory, DocumentDatabase database, DocumentsOperationContext context, DatabaseRecord databaseRecord, Action`1 onProgress, RestoreResult result) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Documents\\PeriodicBackup\\Restore\\RestoreBackupTask.cs:line 448\r\n   at Raven.Server.Documents.PeriodicBackup.Restore.RestoreBackupTask.Execute(Action`1 onProgress) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Documents\\PeriodicBackup\\Restore\\RestoreBackupTask.cs:line 183\r\n   at Raven.Server.Documents.PeriodicBackup.Restore.RestoreBackupTask.Execute(Action`1 onProgress) in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Documents\\PeriodicBackup\\Restore\\RestoreBackupTask.cs:line 243\r\n   at Raven.Server.Web.System.AdminDatabasesHandler.<>c__DisplayClass12_1.<<RestoreDatabase>b__1>d.MoveNext() in S:\\Source\\ravendb-40.git\\src\\Raven.Server\\Web\\System\\AdminDatabasesHandler.cs:line 604\r\n```'"
7645,425374904,"b'@haludi Please check failing test: \r\n\r\nTests.MailingList.UsingLoadStartsWithAndDashSeperator.ShouldWork(storage: ""esent"")\r\n\r\n\r\nMESSAGE:\r\nAssert.Equal() Failure\r\nExpected: 1\r\nActual:   2\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\n   at Raven.Tests.MailingList.UsingLoadStartsWithAndDashSeperator.ShouldWork(String storage) in C:\\Jenkins\\workspace\\PR_Tests_v3.5\\s\\Raven.Tests.MailingList\\UsingLoadStartsWithAndDashSepartor.cs:line 34'"
7651,425388575,b'CC @karmeli87 '
7625,426053434,"b'@ayende Now I am pretty sure something doesnt add up. I made the change so that `PagerState` keeps the state of the table size. \r\n\r\nWhen I run the following code:\r\n```csharp\r\nusing (var test = new AttachmentsSession())\r\n{\r\n   test.PutLotOfAttachments(71);\r\n}\r\n```\r\nThe pager sais that the amount of data available is 65K, though I am getting requested a page number 1148 which is way outside the bounds. Namely that page is around 9Mb or so. Any idea what it may be happening?\r\n'"
7669,426144758,b'Do Not Merge'
7669,426173106,"b""@maximburyak Hmm, I've just merged another PR with a fix for this only. Can you check those conflicting lines?"""
7669,426192144,"b""@ppekrol yeah, there's more to it then the specific fix (crushing tests as it seems) I'll be looking at it at slower pace (you've fixed the specific issue in your PR)"""
7625,426311442,"b'Found it, the problem is that when trying to prefetch ahead and hitting the scratchpad the page may not exist. So what I did is disable the prefetching ahead when we hit the scratchpad. '"
7657,426372872,b'@grisha-kotler can you resolve conflicts?'
7657,426408940,b'done'
7683,426640125,"b'If we want to port this change to 4.0 version also, then it would be preferable to change the TCP version to something like 40_700.'"
7625,426656659,b'@ppekrol Done. '
7683,426966328,b'Please check the failing tests'
7683,426987124,b'I think they fail regardless to this PR\r\nhttp://issues.hibernatingrhinos.com/issue/RavenDB-11917\r\nhttp://issues.hibernatingrhinos.com/issue/RavenDB-11968'
7687,427012046,b'We need to apply this to v4.0 also'
7686,427260088,"b""@ppekrol please remember about testing multi map-reduce index which I'm pretty sure will fail"""
7691,427333423,b'@ayende and feedback here?'
7696,427340179,b'Looks good'
7687,427346855,b'@ppekrol beat me to it'
7687,427361329,"b'Sorry, forgot to write that I did that'"
7701,427392610,"b""I've also switched to `TimerManager` now"""
7691,427628053,"b'`PutAsync` is basically called from 2 places. \r\nFirst, from `SendToLeaderAsyncInternal`, if we are the leader we will try to put the command directly and on catching `NotLeadingException` we will retry to put it directly again in case we are still the leader or to send this command to the new leader.\r\n\r\nin case we are not the leader, we will send the command on the wire to `/admin/rachis/send` endpoint where we also call `PutAsync`, in case of `NotLeadingException` the request will return an error with `Reached-Leader` set to `false`, which will cause the sender to retry. \r\n'"
7669,428083447,"b""I'm closing this down. Please reopen when needed."""
7711,428146793,"b""@karmeli87 I'm merging. Please send a separate comment with the adjustments."""
7724,428559068,b'@aviv86  please take a look'
7726,428596948,"b""@myarichuk I've applied the adjustments"""
7720,428674961,b'@karmeli87 can you review?'
7720,428691155,"b'Looks good, but we wanted to do things slightly more efficient in the `database.GetMountPointsUsage()`, where we have many redundant calls and calculations, also we can avoid the concurrent dictionary, but both issues could be done in the next PR :-)'"
7731,429219992,b'Please check failing tests.'
7738,429266611,b'Following two tests are failing:\r\n```\r\nSlowTests.Client.QueriesWithCustomFunctions.Custom_Functions_Null_Coalescing_Support\r\nSlowTests.Issues.RavenDB_10625.CanTranslateGroupsCorrectly\r\n```'
7738,429278187,"b'Sheesh, you had a pre-commit hook that always changed the contents of QueriesWithCustomFunctions.cs, took some time to realize that. Maybe the latest force push will now comply with build server. Others running/queued should be ignored.'"
7738,429279739,"b'We removed that in favor of .editorconfig but old clones still contain it. You are correct, the pre-commit hook can be a pain when you are not aware that it exists.'"
7738,429280063,"b""@ppekrol this is a chicken and egg kind of situation. I cannot pass whitespace test if I keep the file intact and if I modify it then the tests won't pass."""
7738,429281500,"b'Yes, I suggest removing the hook.'"
7738,429282004,"b'So you will remove it from your build server?  ""commit/whitespace \xe2\x80\x94 Commit whitespace conventions were not fulfilled"" from unsuccessful build checks.'"
7738,429284927,"b""No, please ignore this. I'm aware that this `QueriesWithCustomFunctions.cs` contains tabs becase it has too."""
7310,429602549,"b'@redknightlois Please check `RavenDB_10502` test. It is one of several the cause memory corruption.\r\nI used electric fence to force it to fail consistently in `PoolAllocator.Release`, where it is corruption some totally different memory, not quite sure how.'"
7704,429724732,b'Rebased and fixed the HandleReferences and IndexStorage'
7744,429757712,"b'I would love to add proper unit tests for this if any of you guys point me to the correct spot?\r\n\r\ncode would be\r\n```cs\r\nvar pool = new UnmanagedBuffersPool(""HUB"");\r\n\r\nfor(int i=0; i < 1000; i++)\r\n{\r\n    var data = pool.Allocate(2048); //or 1\r\n    pool.Return(data);\r\n}\r\n```\r\n\r\nthe Assert would be `Assert.IsTrue(pool._freeSegments.All(fs => fs.Count <= 1));` but _freeSegments is private. How do you handle this normally? make it internal?'"
7744,429777395,"b""@fabsenet Thanks for finding and fixing this.\r\n\r\n@redknightlois can you take a look and help @fabsenet with the test? The fix looks valid, because we are modifying the size there, but index is not recalculated. I'm wondering if we should not make the code more universal to avoid issues with future changes inside 'GetIndexFromSize' that will affect the hardcoded numbers 'GetIndexSize' in e.g.\r\n```\r\nvar finalSize = GetIndexSize(index, actualSize);\r\nif (finalSize != actualSize)\r\n    index = GetIndexFromSize(finalSize);\r\n```"""
7748,430151545,b'+ warning should be displayed only for encrypted db.'
7310,430155963,b'Please rebase of `v4.2`'
7758,430221647,b'Can you also create a full example on how you would create an ngram with specific sizes just for this index (using the new `Index.Configuration` )?'
7758,430222850,"b'Yes, but I will wait for AbstractIndexCreationTask.Configuration PR to be merged, it will be easier then'"
7758,430226348,"b""@ayende moved. You can also check `RavenDB_11777` I'm overriding default NGram's there via Index configuration"""
7744,430245971,"b""@fabsenet excellent writeup and investigation on the issue. I concur this LGTM. I am having issues to test the internals without exposing them too, so it doesn't have an easy solution. The new allocators allow for better inspection through composition. \r\n\r\n@ppekrol the universalization of that code is there: http://issues.hibernatingrhinos.com/issue/RavenDB-8951 :) ... those allocators were completely rewritten and now we distinguish between BlockPointers and Pointers. Where BP have 3 values, the pointer, the size and the actual size. """
7748,430246872,b'@ml054 can you check Studio part?'
7744,430248227,b'@fabsenet As soon as I finish porting the `UnmanagedBuffersPool` to the new allocators I will add that test in there with the new composable allocators to see how difficult it could be. '
7767,430428065,b'Already merged to https://github.com/ravendb/ravendb/pull/7771'
7771,430495757,b'The failing tests are related to `limit` and are handled in separate PR'
7787,430717394,"b""Please don't merge yet, we have failing tests related to the changes I made:\r\nhttp://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.0/1542/"""
7797,430781224,"b""@grisha-kotler can you review? I do not set 'DataDirectory' and 'RunInMemory' because this is being set earlier in databaseRecord itself. Not sure if inheriting from serverConfiguration has some implications on Restore also?"""
7790,430861213,b'@ppekrol this seems to be failing on `SlowTests.Issues.RavenDB_514.BoostWithLinq`'
7781,430861393,"b'Failed test relates to an invalid license error, not related.'"
7797,430881023,b'LGTM'
7790,430952230,b'Should be good now. Waiting for CI'
7799,430956533,"b""I've blocked this on non-Windows"""
7799,431107914,b'fixed url conventions'
7808,431301973,b'@karmeli87 Can you review?'
7809,431319531,b'cc @karmeli87 '
7818,431655808,"b'I think that this should be handled like other debug options (index entries, explanations, etc):\r\nhttps://github.com/ravendb/ravendb/blob/5431af3022fd3e7b55b763bc3431a050ce918d6c/src/Raven.Server/Documents/Handlers/QueriesHandler.cs#L52'"
7818,431657453,b'@ayende requested that it will be returned with the query itself.\r\n'
7818,431659251,b'Then I think that it would be better to retrieve whole `QueryMetadata` that was used instead?\r\n\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Server/Documents/Handlers/Debugging/QueriesDebugHandler.cs#L123'
7818,431659355,"b""I don't think that it is what we want since it contains things related to the Jint generated functions """
7818,431659675,b'I do not think we are exposing such things in QueriesDebugHandler and the output could be the same.'
7818,431662163,b'The reason I want it in the query is that I want to make it easier for the studio to request it and allow us to demonstrate the query processing on the server side when doing demos.'
7823,431662515,b'What was this about?'
7828,431679296,b'There are the 32 bits stabilization changes'
7825,431687431,b'This PR does not contain any changes. I will apply the 4.1 fix again.'
7825,431689082,"b'This is fine, because the issue is only with v4.1'"
7826,431839127,b'Rebased this to `ayende/v4.2`'
7843,431906581,b'This commit is the most important here -> https://github.com/ravendb/ravendb/pull/7843/commits/3c78f1f1430710278944caec8c68152636008a48\r\n\r\nThe rest are artifacts (unless I am mistaken) from pull/rebase'
7843,431919015,b'@myarichuk the issue here is that your commits are based on a PR https://github.com/ravendb/ravendb/pull/7835 which is not yet merged'
7843,432111410,"b""Closing this, since I'll merging to #7835 directly and sending PR for the whole thing"""
7839,432151994,"b""And this is the exception if the remote was unable to connect the source\r\n\r\n```\r\nYou are able to reach 'http://127.0.0.1:50633', but he failed to reach you back on http://fake.url:8080.\r\nPlease validate the correctness of your 'PublicServerUrl'/'PublicServerUrl.Tcp' configuration and the firewall rules.\r\nPlease visit https://ravendb.net/docs/article-page/4.1/csharp/start/installation/setup-wizard#installation--setup-wizard-walkthrough for the RavenDB setup instructions.\r\n```"""
7843,432160927,"b'Hm, ok, I guess then this PR can wait. I will add some more tests'"
7839,432188246,b'` but he failed` -> `but the *remote node* failed`'
7843,432188811,b'This PR was already merged here: https://github.com/ravendb/ravendb/pull/7835\r\nYou need to work on top of v4.2 now.'
7840,432197839,"b'Raven.Debug writes to console after it detaches, so we are good.'"
7852,432306069,b'The `SlowTests.Issues.RavenDB_12077.CanProjectSingleCollectionProperty` is failing. Did we forgot to port something or merged incorrectly?'
7852,432312693,"b""This is probably caused by https://github.com/ravendb/ravendb/commit/8cd41e0989109fe065cd3ed251489fdd0edd5992\r\nand https://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Client/Documents/Session/Operations/QueryOperation.cs#L212-L217\r\n\r\nDidn't have time to look more deeply there."""
7852,432319048,"b""@ayende I've pushed more commits here + https://github.com/ravendb/ravendb/pull/7852/commits/d6a4eac9ca8f02e20f70e213c02b902f0168bc80 fixes the deserialization issue, but I'm wondering if this is correct? During deserialization we are not taking into account the modifications?"""
7852,432382130,"b""I'm checking into this, but some of the changes I did in `v4.2` is to the way we handle modifications.\r\nWe are no longer wiping them completely on each `ReadObject`, that might have had an impact, checking"""
7852,432397279,"b""Yes, it looks like that is the issue. Your fix doesn't address the actual issue (which is that `BlittableJosnReader` doesn't handle modifications properly at all).\r\nI fixed the problem and will merge @myarichuk's changes as well and let the build server have a go at this"""
7856,432412504,b'Manually merged'
7869,432770983,b'@myarichuk can you submit this PR without commits from previous ones?'
7868,432771038,b'@myarichuk can you submit this PR without commits from previous ones?'
7869,432773860,"b'Made changes to test file structure here : https://github.com/ravendb/ravendb/pull/7869/commits/1c3afb776967373b3a64d80b3503a867d08023c4\r\nI can, but it will be additional work on restructuring and resubmitting the PRs, because I continued working on changed test classes. \r\nDo you prefer I would do those?'"
7869,432774631,"b'Note that the initial PR today - https://github.com/ravendb/ravendb/pull/7867 - it has the test changes. In order to resubmit those PRs, I will probably merge the following PRs into one \r\nFirst - https://github.com/ravendb/ravendb/pull/7867\r\nSecond - https://github.com/ravendb/ravendb/pull/7868\r\nAnd then this PR'"
7869,432776586,"b'If new commits require code from other PRs then it is better to push new commits to the initial PR, than opening a new one.'"
7868,432925671,b'Merged to my own branch.'
7873,433074671,b'@grisha-kotler it looks that your changes are killing the runtime. Can you take a look?'
7873,433090796,b'done'
7873,433155083,b'Still runtime is failing. Running tests again.'
7873,433295290,"b""The issue was that passing a StringBuilder with initial capacity and max capacity to the system call didn't work as expected. The system call used the underlying buffer and when it reached the initial capacity limit, we had AccessViolation/StackOverflow."""
7876,433311174,b'@ml054 Can you check the studio changes?'
7869,433326518,"b""Closing this PR, please use https://github.com/ravendb/ravendb/pull/7880 as your baseline.\r\nProbably by the time you'll see this it will already be merged, so just cherry-pick a new RP / rebase."""
7880,433327356,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- myarichuk (michael@ravendb.net)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
7880,433328375,"b""This is on me, I used the wrong email when I edited @myarichuk 's commit"""
7873,433345324,b'Can you apply this to v4.1?'
7878,433380563,b'We probably should move this to v4.0?'
7893,433687268,b'@ayende it looks like this merge is done against old v4.2. We should close it and do it again using latest ravendb/v4.2 code'
7899,433740536,b'I will create v4.0 PR once this is accepted and all tests will pass'
7895,433812862,b'Conflicts issues... easier to create a new PR for it '
7897,433907867,b'@talweiss1982 can you fix compilation?'
7897,433980782,"b""@ppekrol This was only sent as a PR so Oren could review and pull it.\r\nThis is already obsolete, I'm going to close it."""
7881,434078877,b'LGTM. @ayende ?'
7927,434495057,b'This got test failures that I already fixed on my branch. I merged this to mine and updated the PR.\r\nSee: https://github.com/ravendb/ravendb/pull/7928'
7928,434583738,b'*Wow* that broke ton of stuff. Looking into it'
7928,434716131,b'@ayende this can be merged?'
7930,434838524,"b'It looks like the 2nd commits is invalid, because we are unloading the database in compaction?'"
7744,435063663,"b'this is merged, but is it released? I currently use RavenDB.Client Version 4.1.2 and I am not sure, this is already in it? Can I see the actual SHA for the code used to build 4.1.2?'"
7744,435079642,"b'This is in the nightlies, yes.'"
7744,435095763,b'@fabsenet All the SHAs are here: https://github.com/ravendb/ravendb/releases\r\n\r\nYour PR is included in `4.1.3-patch-41005`: https://github.com/ravendb/ravendb/commit/4938cb86477939be7ff9fe767d399dab8f2db8bb'
7930,435299503,"b""I've amended last commit"""
7929,435780103,"b'Any chance this sneaking into next patch release, there was a rumor it being released soon..'"
7945,435785390,"b""Am I missing something, I don't see any behavior related to the actual tx compression handling?"""
7961,435789891,"b""@garayx Don't we want to apply tests fixes to 4.0 also?"""
7961,435794442,"b""> @garayx Don't we want to apply tests fixes to 4.0 also?\r\n\r\nThe indexing tests  are only on v4.1, the two others I want to see if they will fail with the ArenaMemoryAllocator.cs fix if so I will port the code."""
7945,435809009,b'Renamed the PR'
7945,435812420,b'LGTM'
7929,435834818,b'@lahma This will be released in nightly (~1h from now) or in next stable (~2 weeks).'
7929,435844884,"b'Great, thanks for the update.'"
7941,435846968,b'Rebased here: https://github.com/ravendb/ravendb/pull/7967'
7971,436204758,b'@ml054 please review this'
7973,436378831,b'Fixed compilation'
7973,437360304,"b""@ayende can you review this? I'm merging, we will do additional fixes later on (if needed)."""
7973,437365643,b'I have been testing this on the production database LGTM'
8001,437842361,b'What about import database?'
8001,437849658,"b""I've talked with @garayx we will add it there too. Also we will check if this (along with Counters) can be added to export."""
8001,437878185,b'> What about import database?\r\n\r\ndone'
8005,438237666,"b""Check my note: http://issues.hibernatingrhinos.com/issue/RavenDB-12279#focus=streamItem-67-32105-0-0\r\n\r\nI'm re-running the tests to confirm."""
8019,438605738,b'http://issues.hibernatingrhinos.com/issue/RavenDB-11970#focus=streamItem-67-32117-0-0'
8019,438606148,b'That is a network error when the remote server refuses us.\r\nAny idea what can be causing this?'
8019,438606994,"b""It might be because we test against the staging servers but I have no idea. That's why I was thinking to retry once when it happens."""
8019,438647725,"b'I reproduced it again with the fix, and the retry worked well.'"
8020,438664379,b'Can you check failing tests?'
8020,438704602,b'Done :)'
8013,438716926,"b""If this is done, then can you squash it to one commit and rename the 'WIP DONT MERGE' commit and PR title?"""
8013,438783304,b'Rebased'
7960,438976540,"b""Don't mind the random `System.Net.Sockets.SocketException : The I/O operation has been aborted because of either a thread exit or an application request` it is related to https://github.com/ravendb/ravendb/pull/8028"""
8035,439027556,b'Can we add a test for streaming the graph query results?'
7989,439313661,"b""We'll take different approach. We'll be opening the write transaction with the usage of dedicated method which will _not_ do any allocation so we won't fail with `EarlyOutOfMemory` (actually we can return in the first line of LowLevelTransaction when we already acquired the lock) but we'll assure that attempt to do an action on this tx, in particulate the commit, will fail.\r\n"""
8045,439329231,"b""Discarding after every commit shouldn't remap, it just put the memory in a position for the OS to reclaim it.\r\nWe need to test on Linux to see if this page the memory again, but I hope not.\r\nOn Windows, it doesn't page the memory again, even though I'm pretty sure it _should_."""
8028,439369495,"b""@ayende I've compiled new System.Diagnostics.Process.dll (for Windows only) with InheritHandles option."""
8028,439400248,"b'@ayende I will merge this on Monday, after release'"
7990,439400380,"b'@ayende I will merge this on Monday, after release'"
8066,440020406,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- ravendb-bot (ravendb-bot@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8065,440046366,b'@iftahbe can you take a look? '
8064,440597455,b'Can you fix the conflcits?'
8064,440597573,b'Also note that you have failing tests here.'
8064,440604591,b'There were no conflicts when i submitted the PR'
8064,440605309,"b'There are now, please fix this and send new PR'"
8064,440605361,"b'And the tests as well, of course'"
8064,440606640,b'I only ran FastTest'
8064,440606820,"b'See the tests failed on Jenkins\n\nOn Wed, Nov 21, 2018 at 12:05 PM Tal Weiss <notifications@github.com> wrote:\n\n> I only ran FastTest\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/8064#issuecomment-440606640>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wALxJLxBZZemGcc7tFUSGtALgFJtgks5uxSVzgaJpZM4YphiK>\n> .\n>\n\n\n-- \n<https://ravendb.net/> *Oren Eini*\n*CEO   /   Hibernating Rhinos LTD <https://hibernatingrhinos.com/>*\nMobile:  +972-52-548-6969\nSales:  sales@ravendb.net\nSkype:  ayenderahien\nSupport:  support@ravendb.net\n'"
8075,440702778,"b""Note: haven't did a proper performance test yet."""
8072,440720258,"b""Got some Windows failures now, please don't merge"""
8002,440725174,b'Will open another PR for this issue'
8072,440758923,b'@ppekrol when we set bInheritHandles to false we also turned off the inheritance of the standard handles. I think we need to turn it back on and set the flags to include only STARTF_USESTDHANDLES.\r\n\r\nSee: https://docs.microsoft.com/en-us/windows/desktop/ProcThread/inheritance\r\n'
8075,440947955,b'From my tests there is no performance hit.\r\nBoth server and client are local\r\nSingle bulk insert is ~20k doc/s\r\n5 Parallel bulk insert tasks ~80k docs/s '
8079,441050870,"b""This doesn't compile"""
8077,441065327,b'We need this on 4.0 as well'
8080,441182617,b'@aviviadi Can you fix compilation?'
8078,441184716,b'Please create a test'
8072,441193080,"b""@iftahbe This is exactly that MS is setting when input/output/error is redirected: https://github.com/dotnet/corefx/blob/53d1d60e3dca6c9cc61cfac628b393de27fff649/src/System.Diagnostics.Process/src/System/Diagnostics/Process.Windows.cs#L501\r\n\r\nBut in order for it to work, we need to set 'inheritHandles' to 'true' which we don't want to do (we need to avoid socket inheritance).\r\n\r\n@iftahbe @ayende Can we assume that we have two opposite requirements and we cannot do much here, except reverting to built-in Process and waiting for MS to fix the handle issue?"""
8072,441298731,"b""Yes, I don't think that we have any way to handle this that would actually work for us, in this case.\r\nLet's mark this as waiting for MS and close this."""
8072,441298878,b'Is there any code that was already merged that we need to revert?'
8045,441361107,"b'I have been running this on Windows live environments and it appears to be behaving properly. We might want to do a few other tests there, but the approach seems to be sound. '"
8072,441361489,"b'Yes, I will do the reverts.'"
8078,441427204,"b""@ppekrol I don't follow why you want this. \r\nIt is all handled server side, and the Studio is not aware of the filtered out notifications.\r\n\r\nAbout the question whether it should also be per-database... I assumed that people will filter out mostly performance hints which should be server wide but if you think there are use-cases where people need this per database I can change that."""
8078,441430866,"b""I've meant that we should move `public HashSet<string> FilteredOutNotifications { get; set; }` to `StudioConfiguration.cs` and let @ml054 add this to the UI, so users can configure it via Studio when Server is running.\r\n\r\nFiltering should be done server-side as you do it now."""
8078,441441658,"b""@ppekrol One of the reasons to do this is to allow the admin to shut down notifications.\r\nThis shouldn't be something that any user can edit.\r\n\r\nI'm fine with having _additional_ items that are filtered, but the base line is fixed"""
8082,441454840,b'Updated'
8099,441469265,"b'We already have this in 4.2, we are missing only graph there. Please make any additions there.\r\n\r\nIn general, you cannot attach to yourself and passive mode on live-system is returning incomplete results. Check how we are handling that there.'"
8078,441472461,"b""@iftahbe add what I've wrote about to 4.2. For 4.1 this is enough."""
8099,441563983,"b""You are correct. It doesn't provide the stack trace for running threads.\r\nI also added it to the rvn tool. I'll create another PR."""
8099,441565662,"b'Ok, remember that we want same format as in Raven.Debug.'"
8082,441568057,"b""I'm pretty sure i pushed a commit yesterday and its not showing"""
8085,441610409,"b'Note that `let array = new string[] {""one"", ""two""}` isn\'t the collection of dynamics. The problem is `string[]` which becomes `System.Array` that doesn\'t have `Where()`. Please check:\r\n\r\nhttp://issues.hibernatingrhinos.com/issue/RavenDB-12373#focus=streamItem-67-32349-0-0'"
8036,441673054,"b'@efratshenhar LGTM, but I think that 1 test is affected http://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.1/2116/ (rescheduled CI to confirm). Can you take a look?'"
8102,441684866,b'updated'
8102,441785534,"b'Also, check the failing tests'"
8036,441985975,b'yes'
8110,442083662,"b""@arekpalinski are you sure that all requests are going through the ExecuteWithReplication method (i don't remember)?\r\nThe issue is that we might have a wrong request executor between the constructor of the AsyncServerClient and the first execute with replication since the executor is selected according to the topology.\r\nThe original issue was that we always started with replication executor and if we found out in an async manner that we are actually running as a cluster node we would switch executors midway leaving the AsyncServerClient in a faulty state where leader node was null and we expected it to be set and such errors.\r\n"""
8110,442091443,"b""I'm not 100% sure this is a valid change. I'm waiting for tests.\r\n\r\nAll of the public methods go through `ExecuteWithReplication` and this is the only place where `RequestExecuter.ExecuteOperationAsync` is called."""
8111,442136163,"b""The test failure is a check to show that a all admin routes have `admin` in them. Need to handle that somehow.\r\nI don't think we have any backward compatibility concerns here, though."""
8111,442137375,b'This is only used by studio so it can be changed to `/admin/studio-tasks/full-data-directory` without a problem.'
8102,442336602,b'There is a failing test that needs to be handled.'
8102,442336771,"b'There are also conflicts from my recent merge, please fix them and re-sumbit the PR'"
8076,442358403,b'Fixed and created new PR here https://github.com/ravendb/ravendb/pull/8119'
8110,442360790,"b""@talweiss1982 \r\nTests seems to be fine (I've just pushed a commit fixing one test).\r\n\r\nAs I mentioned `RequestExecuter.ExecuteOperationAsync` is called only in `ExecuteWithReplication` so I think it's enough to ensure that `UpdateTopologyAsync` is completed before calling `RequestExecuter.ExecuteOperationAsync`.\r\n\r\nAlthough, please pull my changes and review the code. You have much wider view on the clustering stuff and how this change could affect it."""
8116,442370513,"b'I can do studio part, once you add extra property which tells about total results with regards to RQL limit, offset. '"
8102,442455887,b'I have resolved conflicts in my PR are there new modification you made?\r\n Which test is failing i have passed fast test and on slow test only SQL test failed from what i recall.'
8102,442476380,b'Probably `SlowTests.Graph.SortGraphQueries.SortOnObjectShouldWork` test - http://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/184/'
8110,442503481,b'@arekpalinski I have pulled your code yesterday and it looks legit.\r\n'
8116,442505453,"b""@ayende I have made those changes myself but @ppekrol didn't agree with this logic """
8102,442512880,"b""@arekpalinski \r\nI was afraid this test might be flaky.\r\nSince now we don't really do a real comparison on blittable might as well delete the test since we can't know the order of objects."""
8110,442737809,"b""OK. Thank you. I'm merging it."""
8116,442744011,"b""@talweiss1982 Can you link your PR or a commit? What were Pawel's comments there?\r\n\r\nThe logic here looks legit although Marcin noticed some problem - http://issues.hibernatingrhinos.com/issue/RavenDB-11650#focus=streamItem-67-32466-0-0 We'll have a look at this shortly"""
8127,442750407,"b'@arekpalinski regaring this fixed needing to be back port into v4.0 and v4.1, i started working on v4.2 since the issue was found on v4.2 and i felt it is more safe to introduce changes to v4.2 and if everything works backport to v4.0 and v4.1, do you agree or should i have worked on v4.0 from the start?'"
8116,442769525,"b""After discussing it with Tal we agreed those changes are fine. Marcin converted `TotalResultsWithOffsetAndLimit` to be nullable and writing it to the response only if `!= null` so he can distinguish properly in the studio. His PR: https://github.com/ravendb/ravendb/pull/8131 Although he's currently checking how it works with fanout indexes."""
8102,442810734,"b'Yes, we have a stable sort on the _existing_ system, but never between runs, so that might certainly be it.\r\nCan you remove the test and reissue the PR?'"
8102,442811070,"b""@ayende I'm just running the test and will submit a fixed PR once they pass"""
8102,442811398,"b'acouple of tests are failing i might have done something wrong in the merge, checking.'"
8134,442851725,"b""The same test has failed - `SlowTests.Graph.SortGraphQueries.SortOnObjectShouldWork`. Oren suggested to remove it - https://github.com/ravendb/ravendb/pull/8102#issuecomment-442810734 or maybe skip it as it's expected to be flaky currently"""
8134,442852221,"b""it's a merge failure, I have deleted it not sure how it came back."""
8130,442877650,"b'Side question, I could optimize the process because I understand the underlying behavior. Would it make sense to do so as an additional ticket?'"
8130,442947854,"b""What do you mean? How often do you think we'll be calling something like this?"""
8130,442948223,"b'Not at all, I use it for debugging... but I dont know if it has any other use. '"
8130,442950596,b'no point in optimizing it if it is fast enough that on your scenario it takes only a minute'
8116,442986424,b'@talweiss1982 The reason for this is that the impl we started with had a lot of issues for usage in the stuido'
8116,443116631,b'Closing this. It will be merged in https://github.com/ravendb/ravendb/pull/8131'
8134,443117978,b'Merged in https://github.com/ravendb/ravendb/pull/8135'
8036,443123658,b'@efratshenhar Did you have a chance to check this test?'
8136,443139152,"b""@maximburyak @aviviadi \r\n\r\nAll the tests are passing, so now we need to do a perf run to see if this is worth it.\r\n\r\n@maximburyak You have the specific test scenario that triggered this issue.\r\n@aviviadi I want you to look at the general perf benchmark to see if we didn't hurt the generic perf."""
8132,443143720,b'The debug package is getting the stack traces from a different code path.\r\nThis endpoint is for getting a specific thread stack trace and will be used for the studio.'
8139,443487127,"b""Test failed for `AppDomainUnload` reason, don't think it is related, re-running"""
8133,443491078,b'With this PR `CanMigrateFromRavenDb` test should fail and will be address in http://issues.hibernatingrhinos.com/issue/RavenDB-12414'
8139,443500647,b'Tests passed in re-run'
8045,443501039,b'@redknightlois Can you fix the conflicts and the comments on this PR and re-submit it?'
8045,443512075,b'Still running this on production to figure out the kinks. I am still not satisfied'
8127,443516329,"b""I think that there is a need for bigger refactoring of how we work with builders but i think this should be out of the scope of this issue, I'll open a new issue for future refactoring."""
8133,443622394,b'@karmeli87 Could you explain why those changes made `CanMigrateFromRavenDb` test fail? Where is the change which changed the import behavior?'
8133,443623147,b'On documents import we remove the `@counter` metadata.\r\nSo when we start to import the counters it will generate this metadata property and therefore create a new revision.'
8036,444389020,b'Closing it for now. Efrat will get back to it next week.'
8159,444405507,"b""We got a lot of test failures. I've re-run the test suit"""
8160,444408080,"b""Almost all tests have failed. Exception:\r\n```\r\nRaven.Client.Exceptions.Server.ServerLoadFailureException : Failed to load system storage \\r\\nAt :memory:\\r\\n---- System.AggregateException : One or more errors occurred. \r\n(Unable to find an entry point named 'DiscardVirtualMemory' in DLL 'kernel32.dll'.)\\r\\n-------- System.EntryPointNotFoundException : Unable to find an entry point named 'DiscardVirtualMemory' in DLL 'kernel32.dll'.\r\n```"""
8160,444408268,b'What is the operating system that we use?'
8160,444409445,b'Tests were run in scratch1 machine - windows server 2012 r2 standard'
8160,444409750,b'I would expect this to actually have this API'
8160,444414065,b'The OS version is `Microsoft Windows [Version 6.3.9600]`'
8160,444417434,b'I started another test run on scratch5 (Windows Server 2016 Standard `Version 10.0.14393`):\r\nhttp://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.1/2161/'
8170,444621962,b'LGTM'
8159,444623207,"b'@arekpalinski Yes, not all `MemoryStream` are created equal. There are a few that would require we look deeper into how to tackle them, luckily they are not such a big resource hog, so we can skip them... The whole pipes and `Span<T>` effort would make such work useless anyways.'"
8160,444625301,b'That explains it... `DiscardVirtualMemory` is supported after `Windows Server 2012 R2 **Update** ` . Now check how to figure out whats the moniker for that one \xf0\x9f\x94\xae '
8160,444766223,b'*Serious* There is a difference between R2 and R2 Update ?!\r\nThat is just seriously bad naming.'
8159,444777290,"b""All tests passed after your changes. Waiting for your confirmation it doesn't cause any perf issues so we can merge it."""
8160,444792265,b'Windows 8.1 (Update 1): 6.3.9600\r\nWindows 8.1: 6.3.9200\r\n\r\nOur build: 6.3.9600 and it is still failing\r\n\r\n'
8148,444824221,b'Merging it. Tests might be added in separate PR.'
8127,444854467,b'We need that for 4.0 / 4.1'
8176,444870790,b'I wrote the wrong issue number on the PR this is actually a PR for RavenDB-12393'
8173,444871798,"b'@ml054 I think that this is still very small notification to the fact that we ""trim"" the query past the select statement, consider the fact that a user could have a specific projeciton, and we don\'t ""add"" the ""stored fields"", instead we substitute the projection with the request to receive all stored fields.'"
8173,444874042,b'For me that fact that we trim query is implementation details. How would you indicate that we are showing all fields? '
8172,445162288,b'There is a conflict on `src/Raven.Studio/typescript/viewmodels/database/query/query.ts`. Please rebase from 4.1 and resolve it'
8160,445164482,b'@redknightlois It seems tests failed due to \r\n`RavenDB-12382: Most cases of MemoryStream now use the Recyclable one.` commit which I guess should not be part of this PR'
8160,445185227,b'No. It should not. '
8171,445216123,"b""@maximburyak Please merge if it's already completed"""
8184,445534567,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- grisha-kotler (grisha.kotler@ravendb.net)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8190,445534632,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- grisha-kotler (grisha.kotler@ravendb.net)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8194,445565273,b'@talweiss1982 Did you test studio part? If not I can do this. '
8195,445732481,b'@aviv86 Please review'
8189,445738870,b'`RavenDB_12012.CreateFullAndIncrementalBackupWithIndexInTheMiddle` has failed'
8194,445752716,"b""@ml054 I'm not sure what you mean by test the studio part, i have ran include queries manually to test that it works and added a test."""
8194,445754516,b'![image](https://user-images.githubusercontent.com/116915/49724372-d16ebe80-fc71-11e8-919e-ea21e8968dbb.png)\r\n'
8194,445759571,b'I just wanted to confirm that includes tab was shown. '
8198,445822769,b'We already check if `exception is VoronUnrecoverableErrorException` there. Do you mean to also add `VoronErrorException` (thrown only in `Table.cs` at this point) ?'
8198,445823558,"b'Basically, any error that can kill just a single node'"
8201,445978261,"b'Yes, thanks. Will create PR in few seconds. '"
8201,446088916,"b'Also, what about chormenium?'"
8201,446118298,"b""What's chormenium ? """
8201,446125751,b'https://www.chromium.org/Home ?'
8201,446134700,"b'check returns true for chromium, but since chrome is based on chromium, both browsers are supported by us. '"
8205,446165510,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- grisha-kotler (grisha.kotler@ravendb.net)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8209,446226610,"b""We'll be merging this from 4.1"""
8188,446570767,b'We got the timeout on one test related to syncing:\r\n```\r\n09:26:30      FastTests.Voron.LazyTransactionsRespectPageBoundaries.CanSyncWhenLazyTransactionsHasBufferedMultipleTransactions\r\nCancelling nested steps due to timeout\r\n13:24:28  Sending interrupt signal to process\r\n13:24:38  After 10s process did not stop\r\n```\r\n\r\nhttp://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.1/2207/console'
8219,446776255,"b'@arekpalinski need some review here... I think it is right, but I am not that acquainted with the inner workings of this part of the code. '"
8219,446881669,"b'This looks good, but note the failing test'"
8219,447097468,"b""@arekpalinski I implemented the shared free pages. It currently passes all fast tests and the indexing ones, but I am not entirely sure I am not missing something, because I haven't had to modify anything. Either the code is already handling the most complex case, so now it works as is OR I am missing something."""
8221,447250895,"b""One test has failed although I couldn't make it fail when running in a loop. Re-running tests on jenkins"""
8219,447282116,b'I have created https://github.com/ravendb/ravendb/pull/8230 and applied some changes on top of yours. The most important one is moving `table.DeleteByKey(pageNumberSlice);` outside iterating over the reduce trees. Please review'
7982,447625583,b'Closing this PR. \r\n\r\nWill create a new one with the new terms `Hub` and `Sink`'
8236,447626401,"b'@haludi The code failed to compile, please fix this'"
8217,447626910,b'Please fix the conflict'
8219,447628437,b'I mreged https://github.com/ravendb/ravendb/pull/8230\r\n\r\nDo we have something here that we still need?'
8225,447631524,b'Please fix the conflicts.'
8225,447633694,b'fixed conflicts after rebase.\r\nEdit: wierd - locally compilation (and fasttests) succeded. Will check this agian.'
8225,447636224,b'Will reopen another PR with those changes'
8241,447649294,"b'You aren\'t handling and or or, for example\n\nOn Sun, Dec 16, 2018 at 4:35 PM Tal Weiss <notifications@github.com> wrote:\n\n> *@talweiss1982* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Queries/Graph/SingleEdgeMatcher.cs\n> <https://github.com/ravendb/ravendb/pull/8241#discussion_r241983033>:\n>\n> > +                return;\n> +            }\n> +            if (Edge.Where.IsMatchedBy(blittableJsonReaderObject, QueryParameters) != false)\n> +            {\n> +                AddEdgeAfterFiltering(match, blittableJsonReaderObject, Edge.Project?.FieldValue);\n> +            }\n> +        }\n> +\n> +        private bool EdgeMatchExact(BlittableJsonReaderObject blittableJsonReaderObject, MethodExpression methodExpression)\n> +        {\n> +            if (string.Equals(methodExpression.Name.Value, ""exact"", StringComparison.OrdinalIgnoreCase) == false)\n> +                throw new NotSupportedException($""Where clause on edge doesn\'t support {methodExpression} method expression"");\n> +            var arg = methodExpression.Arguments[0] as BinaryExpression;\n> +            var left = arg.Left as FieldExpression;\n> +            var right = arg.Right as ValueExpression;\n> +            if (arg == null || (arg.Operator != OperatorType.Equal && arg.Operator != OperatorType.NotEqual) || left == null || right == null)\n>\n> This doesn\'t handle methods methods are not suppose to be handled at that\n> code path i don\'t understand why this come up now\n>\n> \xe2\x80\x94\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/8241#discussion_r241983033>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHIs41C2qEJanu33HCcDmjwkMyQpZz7ks5u5lo8gaJpZM4ZVL_E>\n> .\n>\n\n\n-- \n<https://ravendb.net/> *Oren Eini*\n*CEO   /   Hibernating Rhinos LTD <https://hibernatingrhinos.com/>*\nMobile:  +972-52-548-6969\nSales:  sales@ravendb.net\nSkype:  ayenderahien\nSupport:  support@ravendb.net\n'"
8236,447757495,b'@ml054 Probably we need to adjust Storage Report in the studio'
8246,447815107,"b""@redknightlois  Please check http://issues.hibernatingrhinos.com/issue/RavenDB-12506 first for details.\r\n\r\nThe issue was for a page with number `-1` although I've added a check for any number < 0 to throw early on invalid page number."""
8246,447868888,b'Page Locator is very performance sensitive. I would avoid to add the check if possible. Moreover this issue happens because EOOM as I have been saying all along. We have to get rid of it. @ayende'
8246,447882172,"b""@redknightlois Can you suggest where we could move that check? What I'm trying to achieve is to avoid the page locator to return me an invalid page if I pass `-1` as the requested page number? I can move it to:\r\n\r\nhttps://github.com/ravendb/ravendb/blob/077d74a1a0c0f412444a89d3cf383a662da3f3d2/src/Voron/Impl/LowLevelTransaction.cs#L440-L449\r\n\r\nbut that would be the same thing effectively, woundn't it?\r\n\r\nIndeed, I forced EOOM to cause that but we could arrive here if we get any exception during db creation  (`StorageEnvironment.CreateNewDatabase`), it could also be due to end of disk error I think."""
8246,447884143,"b'The proper location for it would be `.GetPageInternal()`, because `PageLocator` is a cache, you should fail only when you are going to get those. '"
8246,447893274,b'@ppekrol Revert this one. Let @arekpalinski put the check in the proper place.'
8245,447894006,"b""added another commit, better handling of use-cases for RavenDB-12206\r\n(planning to submit separate PR for RavenDB-12206, as soon as I synchronize with Tal's code changes)"""
8246,447897844,"b""I've wrote to him, he will address this tomorrow morning. It is not like this check is invalid. It just could be placed better."""
8246,447905505,"b""@redknightlois that won't work because `_pageLocator.TryGetReadOnlyPage` is called _before_ `GetPageInternal` and for -1 it will return true and serve invalid page from the cache- that's the issue"""
8246,447910847,b'How is that even possible? If it is serving -1 is because someone put it in there. '
8246,447919224,"b""That's because we initialize the cache items by -1:\r\nhttps://github.com/ravendb/ravendb/blob/6bc40582e401244fa09c67c40406f3bd16290f72/src/Voron/PageLocator.cs#L63"""
8246,447920028,"b""OK. I just noted that is a TryXXX method... don't throw on TRY... return `false`. \r\n\r\nEDIT: Throwing there have ripple effects on the inlining and code block layout. Returning 'false' does not impact anything."""
8245,447930345,"b'rewrote the commit, make sure all tests are passing'"
8251,447959036,"b'Note that this PR is fine, but the 4.0 one looks broken to me'"
8246,447985928,"b""Good point. I'll change it to return false if the page that is going to be returned is invalid (PageNumber == Invalid)"""
8246,447998829,"b""I've created: https://github.com/ravendb/ravendb/pull/8255"""
8174,448119629,b'Reminder @grisha-kotler '
8245,448196857,b'will submit stuff as per-issue PRs'
8136,448230300,"b""```\r\n00:06:43  Unhandled Exception: System.ObjectDisposedException: Cannot access a disposed object.\r\n00:06:43  Object name: 'ByteStringContext'.\r\n00:06:43     at Sparrow.ByteStringContext`1.ThrowObjectDisposed() in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Sparrow\\ByteString.cs:line 1158\r\n00:06:43     at Sparrow.ByteStringContext`1.Reset() in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Sparrow\\ByteString.cs:line 740\r\n00:06:43     at Raven.Server.ServerWide.Context.DocumentsOperationContext.Reset(Boolean forceResetLongLivedAllocator) in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Raven.Server\\ServerWide\\Context\\DocumentsOperationContext.cs:line 24\r\n00:06:43     at Sparrow.Json.JsonOperationContext.<.ctor>b__33_0() in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Sparrow\\Json\\JsonOperationContext.cs:line 328\r\n00:06:43     at Sparrow.Threading.DisposeOnce`1.Dispose() in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Sparrow\\Threading\\DisposeOnce.cs:line 60\r\n00:06:43     at Raven.Server.ServerWide.Context.TransactionOperationContext`1.Dispose() in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Raven.Server\\ServerWide\\Context\\TransactionOperationContext.cs:line 113\r\n00:06:43     at Sparrow.Json.JsonContextPoolBase`1.ContextStackThreadReleaser.Finalize() in c:\\Jenkins\\workspace\\PR_Tests_v4.2\\s\\src\\Sparrow\\Json\\JsonContextPoolBase.cs:line 68\r\n```"""
8136,448233763,b'Similar to? http://issues.hibernatingrhinos.com/issue/RavenDB-12532'
8263,448273170,"b""I'm still missing the allocator poisoning the transaction if there is an allocation failure."""
8267,448391493,b'Failing test fixed here: \r\nhttps://github.com/ravendb/ravendb/commit/b6247e57553e15bb5e77fd3a11b3b65fb31b70a8'
8263,448391836,b'Please check the failing test'
8269,448415291,b'`SlowTests.Client.QueriesWithCustomFunctions.QueryCompareExchangeWhere` failed because of a difference/bug in QueryParser.Operator method.'
8269,448416283,"b'Please ignore my comment, it was fixed in https://github.com/ravendb/ravendb/commit/b6247e57553e15bb5e77fd3a11b3b65fb31b70a8 already'"
8263,448503928,b'I wonder if we should mark the transaction as `Errored` not only when we get an exception on `Allocate()` and `Free()` but also when `VoronUnrecoverableErrorException` is raised (by passing the transaction to `VoronUnrecoverableErrorException.Raise` where possible and setting the error state then)'
8263,448507139,"b'Yes, I think that would be wise.\r\nBasically, we must ensure that if we got any error in the transaction, the only thing it is valid to do is to rollback / dispose'"
8266,448597610,b'Done'
8286,448714394,b'@grisha-kotler I think that you wanted to send this to v4.0?'
8263,448719555,b'@garayx Can you fix the conflicts?'
8286,448721378,b'I will handle that.'
8286,448721394,"b""It's for both 4.0 and 4.1"""
8286,448722271,b'Creating another PR :)'
8286,448722712,b'https://github.com/ravendb/ravendb/pull/8287'
8174,448758848,"b""@grisha-kotler I'm merging this. Please create a separate PR with adjustments."""
8263,448902792,b'> @garayx Can you fix the conflicts?\r\n\r\ndone'
8266,448915885,b'@grisha-kotler Please note failing test: http://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.1/2280/'
8266,448928529,b'We have it reported as failing occasionally: http://issues.hibernatingrhinos.com/issue/RavenDB-12325'
8311,449395592,"b'Failing tests:\r\n`SlowTests.Client.QueriesWithCustomFunctions.Custom_Functions_Linq_Methods_Support`\r\n\r\nNothing major, this tests just checks generated RQL, and you changed that, so the assetions fails.'"
8311,449397310,b'Force-pushed fix for the test case.'
8311,449398094,b'Thx (do not worry about `commit/whitespace`)!'
8316,449632354,"b'See failing tests, in particular:\r\n\r\nhttp://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/317/testReport/SlowTests.Issues/RavenDB_12468/Should_support_id_operator_in_simple_select/'"
8316,449633312,b'hmm. Will check and fix any bad issue tests'
8160,449706855,b'Moved to v4.2 at https://github.com/ravendb/ravendb/pull/8323'
8241,449712521,b'Already merged in https://github.com/ravendb/ravendb/pull/8298'
8324,449720962,"b'Check the failing tests, please: \r\nhttp://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.1/2306/'"
8335,449856231,b'Forgot to finish one of the tests for this fix. Will make another commit on this branch with the finished test (need to add asserts to RavenDB_12567::Recursive_queries_with_self_cycles_and_regular_cycles_should_properly_work())'
8335,449857307,"b'Ok, added missing asserts to a test. Now this PR has all the changes I wanted to do.'"
8336,449858321,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Bird (bird@birds-mac-mini.local)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8320,449879031,"b""1. This is a not good idea to use DynamicExtensionMethods for this, this will rewrite every from that class, no matter if fits (check failing test - you are using IndexOf from List, yet it was rewritten to use the method that you have added - now we need to handle LINQ methods also and all methods from built-in types that match the name of any method from string class). IMO we are asking our self for trouble if we will do it in that class. Or even this way.\r\n2. We will need to add ALL string methods (check 'RavenDB_7953' on how to add a test that checks here) and this will complicate things even further.\r\n3. We will not benefit from any optimizations from LSV for those methods (can probably be ignored because it is not a common case)\r\n4. I still think that due to 1 & 2 we need to introduce classes that will wrap those types and handle methods for string and TimeSpan/DateTime/DateTimeOffset. This way we will also benefit from point 3."""
8320,449932294,"b""> 1. This is a not good idea to use DynamicExtensionMethods for this, this will rewrite every from that class, no matter if fits (check failing test - you are using IndexOf from List, yet it was rewritten to use the method that you have added - now we need to handle LINQ methods also and all methods from built-in types that match the name of any method from string class). IMO we are asking our self for trouble if we will do it in that class. Or even this way.\r\n> 2. We will need to add ALL string methods (check 'RavenDB_7953' on how to add a test that checks here) and this will complicate things even further.\r\n> 3. We will not benefit from any optimizations from LSV for those methods (can probably be ignored because it is not a common case)\r\n> 4. I still think that due to 1 & 2 we need to introduce classes that will wrap those types and handle methods for string and TimeSpan/DateTime/DateTimeOffset. This way we will also benefit from point 3.\r\n\r\n\r\nok I will change my code.\r\n"""
8339,449935767,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- alexander (alexander@alexander-pc)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8339,449936382,b'Please fix your email in the commits'
8339,449936440,"b'Also, there are WAY too many merges here.\r\nThe PR should have a single commit for something this small.'"
8355,450348775,b'Does not need to be applied to 4.0 because we do not register subscription results in opened session there'
8365,450640837,b'Will close and reopen with proper changes (query syntax needs to be adjusted)'
8363,450646319,"b""I think that for this to work we will need to clone the result set :(\r\ni'm currently looking at failing tests that don't include recursive """
8340,450659718,b'Please check the failing tests. It looks like aggressive caching is somehow broken'
8363,450666822,"b""Don't merge this it is all wrong"""
8363,450668090,"b""even cloning the result set won't fix the problem since the GetSingleGraphStepExecution """
8370,450715373,"b'This is just a first draft, after trying different ways to implement identical steps merging I realize that getting it right is too complicated and defeats the purpose.\r\nAs I was struggling with just QueryQueryStep and there is no generic solution in sight without major refactoring my current thought is that it is just not worth it at this stage and for QueryQueryStep the suggested solution will work just fine.\r\n@ayende what do you think?'"
8374,450819224,"b""Did we swallow the error somewhere? \r\nWe should have at least seen the error on fiddler, are they running under cluster (i don't recall they said so)?\r\n"""
8374,450825192,"b'No, it was in the fiddler output'"
8388,450905584,b'Closing this because we will do a 4.1 to 4.2 merge. 4.1 PR: https://github.com/ravendb/ravendb/pull/8390'
8402,451239848,"b'Added another commit, please let the tests run for it as well before merging'"
8412,451458866,b'@haludi Please review'
8415,451749238,b'done'
8419,451754733,b'Added a test to verify that RavenDB-11671 is resolved by changes in RavenDB-12397'
8422,451965050,"b""And, to verify, this doesn't yet include windows impl, right?"""
8431,452221800,"b'@ayende this is because running queries were only on index-level\r\n\r\n@talweiss1982 I think we need to take this opportunity and move running queries to QueryRunner, so we can handle all types of queries (index, collection, graph). Thoughts?'"
8422,452240474,"b""> And, to verify, this doesn't yet include windows impl, right?\r\n\r\nno, it is not. """
8436,452258530,b'cc: @arekpalinski '
8431,452343492,b'fine by me'
8446,452645711,b'@aviv86 Please review'
8431,452722048,b'@ayende @ppekrol can we postpone the change proposed be @ppekrol to 4.2.x? I think that right now we want to concentrate on getting all graph features done'
8454,452733966,b'The change was discussed with Aviv'
8419,452765250,b'added a commit with changes related to the code review'
8431,452772221,"b'We will do it in 2 stages.\r\n1. @talweiss1982 will move the code to GraphQueryRunner (as was written in one of the first comments) and add the cancellation support\r\n2. To allow @talweiss1982 to continue the work on Graph issues, I will do the unification'"
8439,452786354,b'added a commit with changes related to the code review'
8452,453033936,"b'I think that it is hard to determine the behavior of this change since under different scenario and access pattern doing this modification can yield a different result.\r\n@ayende we need to test this on multiple configurations and access patterns, multiple databases multiple indexes, heavy write and more.'"
8439,453034383,"b'*facepalm*\nForgot about that. Will remove it.\n\nOn Thu, Jan 10, 2019 at 11:44 AM Pawe\xc5\x82 Pekr\xc3\xb3l <notifications@github.com>\nwrote:\n\n> *@ppekrol* approved this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Queries/Parser/QueryParser.cs\n> <https://github.com/ravendb/ravendb/pull/8439#discussion_r246691577>:\n>\n> > @@ -6,6 +6,8 @@\n>  using Microsoft.Extensions.Primitives;\n>  using Raven.Client.Exceptions;\n>  using Raven.Server.Documents.Queries.AST;\n> +using Raven.Server.Extensions;\n> +// ReSharper disable ConditionIsAlwaysTrueOrFalse\n>\n> Can we remove that?\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/8439#pullrequestreview-191117551>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AB4wAJ1IW4lbnT_NJJhr1pKQ-oh-8Gl2ks5vBwtogaJpZM4Z1kE2>\n> .\n>\n\n\n-- \nBest regards,\n\n\n\n*Hibernating Rhinos Ltd  *[image: cid:image001.png@01CF95E2.8ED1B7D0]\n\n*Michael Yarichuk** l* *Senior Software Developer*\n\nOffice: +972-4-622-7811* l* Fax: +972-153-4-622-7811\n\n\n\n*Raven**DB* paving the way to ""Data Made Simple""   http://ravendb.net/\n'"
8452,453050869,b'Are we sure that all of these are really very short lived?'
8452,453052731,"b'@ayende it looks like. One is only asserting the task state, another one calls a delegate that is only used by testing infra and the third one just logs'"
8452,453054464,"b""@talweiss1982 I'm incline to say that this is an acceptable change, can you run it through its paces next week?"""
8461,453266422,b'Marcin is working on a better solution. Closing.'
8380,453269913,b'Closing because Marcin is keeping that in his branch now: https://github.com/ml054/ravendb/tree/RavenDB-12491'
8465,453362111,"b""Also, I'm not sure that I understand what the actual issue here is, can you explain ?"""
8465,453452055,"b'@ayende I suspect that the scenario that is causing this is when you have one thread shared by two context pools and one context is invoking ensure context will be released twice and in between a different context belonging to a different pool is also invoking the method. This will cause the thread holder to appear twice in the thread ID list  and when disposing of the context pool it will dispose the context twice.\r\nNow what is the real world scenario where this will happen, I suspect an endpoint using server store and database and jumping in between them. In this case scenario we have one thread two context pools. This might also happen when combining indexes stuff with database stuff in the same endpoint. '"
8465,453487985,"b""I'm able to reproduce this fairly easily by doing a lot of writes with a `patch` and then creating indexes.\r\nAfter a while, this happens\r\n\r\n@talweiss1982 / @maximburyak The whole _point_ of the thread static stuff is that we won't have any concurrency there to worry about, so I don't see how that can be possible.\r\n\r\nThe code is meant to hold multiple context pools from different locations, so I need to understand what the actual failure is."""
8465,453526030,b'@arekpalinski and @ppekrol comments on the subject:\r\nhttps://github.com/ppekrol/ravendb/commit/99acb4e904c3938bd1845300b3e67c96d1da98f0'
8465,453529824,"b""So the problem is thread I'd reuse, it seems. That certainly will cause issues,yes"""
8465,453537689,"b""@ayende I didn't say anything about concurrency the scenario I described is 100% serial """
8465,453539128,"b'@pawel check demonstrates what happens when two pools are using the same thread (not cunncurently ofc...)\r\nOur ""solution"" resolve the problem since pools can\'t snag thread ID from each other. \r\nI think that one pool will dispose twice of a context and the other will leak a context'"
8465,453539535,"b'@ppekrol thread id reuse is anothet problem, but I tjink thst the issue we encountered did not include that. When in EnsureCurrentThreadContextWillBeReleased we added thread id uniqueness validation in various points, the earliest one was in the beginning of the function. It means the value of ThreadIdHolder was modified by another run of this function, in another thread.'"
8465,453545965,"b""@talweiss1982 @maximburyak By removing 'static' you are just ensuring that the finalizer of ContextStackThreadReleaser will be called only when you dispose the JsonContextPoolBase (ThreadStaticAttribute should be removed BTW - it is only valid on static fields) and GC executes finalizer, not when thread is no longer there, so from operational point of view, this also disables the 'hijacking' mechanism from `EnsureCurrentThreadContextWillBeReleased` (Interlocked.CompareExchange part on array).\r\n\r\nWhat does it give you to have a property inside JsonContextPoolBase  called `_releaser` with thread id set to the thread that created the instance?"""
8465,453548054,"b""@ppekrol the solution we introduced is not good enough- that's clear. I would like to concentrate on the problem definition, which apparently has several origins. The work with the _releaser is probably not correct at the proposed code, especially given that @ayende was able to reproduce the issue."""
8465,453567239,"b""@talweiss1982 / @maximburyak I am missing something in your scenario, then, because I don't see any problem with two context pools adding themselves to the same releaser, it is explicitly designed to support that, after all.\r\n\r\n"""
8463,453572546,"b'@grisha-kotler we are getting a lot of failures with this change, Can you check it out?'"
8465,453627944,"b'@ayende, here\'s a commit visualising what @talweiss1982 described above (https://github.com/ravendb/ravendb/pull/8465#issuecomment-453452055): https://github.com/maximburyak/ravendb/blob/d788bf9e4cc1741e7bddc4b0f67fc55833e8fdd7/src/Sparrow/Json/JsonContextPoolBase.cs#L115\r\nYou can run the fast tests in debug for demonstration, when it fails for the first time, it fails after setting the releaser\'s ThreadId to a new value, while failing in validating ""fellow"" context pulls (I tracked other context pools in order to be able to debug this)'"
8465,453637172,"b""@maximburyak isn't this caused by 'CleanThreadLocalState' removing the record from the dict, so 'EnsureCurrentThreadContextWillBeReleased' is called again?"""
8465,453824104,"b""Root cause is that the `_release.ThreadIdHolder` will share the `ThreadId` instance between `JsonContextPool` instances, leading to.... issues. \r\nAlready fixed in @maximburyak 's end and now going through tests"""
8431,453826910,b'@ppekrol i added cancelation to graph queries and moved the running graph queries under the runner'
8473,453837386,b'The latest force-push addressed the failing test and the redendant package-lock.json changes'
8452,454110540,b'\xf0\x9f\x8e\x86 '
8478,454300968,"b'I have a problem with adding IRavenQueryable in the ""With"" method, I can\'t access the DocumentQuery instance, therefore, I can\'t enforce rules on it nor can I aggregate the parameters into the parent DocumentQuery.\r\nThoughts?'"
8478,454306113,"b'```\r\nIGraphQuery<T> With<TOther>(string alias, IRavenQueryable<TOther> query);\r\n```\r\n\r\n\r\nYou are reffering to this?\r\nI think it should be `IDocumentQuery` instead of `IRavenQueryable`. We do not want to mix both of our query types (LINQ and IDocumentQuery).'"
8478,454306923,b'@ppekrol yes this seems to be the viable solution but it is not as nice of an interface'
8478,454307444,b'You should look into builders e.g.\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Client/Documents/Queries/MoreLikeThis/MoreLikeThisFactory.cs\r\nor\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Client/Documents/Queries/Facets/FacetFactory.cs'
8478,454340164,"b'I think that users will want to mostly pass Linq expression into this.\r\nWe will need another overload for `IDocumetnQuery`, and there is `aysnc` version to consider :-('"
8478,454343671,"b'We should not mix both of them. LINQ expression can be added at later stage to session.Query, not session.Advanced.DocumentQuery'"
8479,454353312,b'@aviviadi do we need to apply it to v4.1 (or even v4.0) ?'
8479,454356872,"b""> @aviviadi do we need to apply it to v4.1 (or even v4.0) ?\r\n\r\nI haven't seen this test/file in v4.1"""
8479,454357774,"b""It's there, I think we need to apply it there and then do 4.1 to 4.2 merge.\r\nhttps://github.com/ravendb/ravendb/blob/v4.0/test/SlowTests/Issues/RavenDB-11836.cs#L37\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/test/SlowTests/Issues/RavenDB-11836.cs#L37"""
8479,454358764,"b""> It's there, I think we need to apply it there and then do 4.1 to 4.2 merge.\r\n> https://github.com/ravendb/ravendb/blob/v4.0/test/SlowTests/Issues/RavenDB-11836.cs#L37\r\n> https://github.com/ravendb/ravendb/blob/v4.1/test/SlowTests/Issues/RavenDB-11836.cs#L37\r\n\r\nmerge to 4.1, 4.0 is underway"""
8479,454393175,"b'Closing this one down, we will do a 4.1 to 4.2 merge.'"
8480,454393268,b'Closing this one down. We will do 4.2 to 4.1 merge.'
8498,454783667,"b'This is WIP, to see what affect it has on the rest of the system'"
8422,455109358,b'will be continued at #8502'
8505,455136174,b'Where are they expected / unexpected?'
8505,455154154,"b'We do not want to wrap those inside SystemException, because when rethrowing we will not handle them well in our own code'"
8510,455310315,"b""@grisha-kotler I've started a Debug build to check if we are failing after adding that assertion: http://jenkins.hibernatingrhinos.com/job/Testsv41_Winx64_Debug/633/"""
8518,455843285,b'Can you look at the test failures?'
8518,455870899,"b""Yes. Tomorrow, that is why I issue the PR running slow locally is hell. I rearranged some blocks, so that was kinda expected, but fast test didn't show any issues though. """
8522,455885283,b'@efratshenhar What is the relation between this PR and\r\n- `DatabaseSmugglerOptions.SkipRevisionCreation`\r\n- `NonPersistentDocumentFlags.SkipRevisionCreation`\r\n?\r\n\r\nRelated issue: https://issues.hibernatingrhinos.com/issue/RavenDB-10614'
8525,456007837,b'I will open this for 4.1'
8538,456400929,b'`CanSurviveRestart` tests is failing - under investigation'
8538,456461184,"b'Okay, I have made some changes, we are not _not_ deleting the files on startup and we are scheduling them to be synced.\r\nFast tests pass on my machine, but I want to see what the slow tests are doing'"
8541,456461662,b'This will allow more concurrent connections.\r\nIn .Net core the _MaxConnectionsPerServer_ is being used (in the HttpClientHandler). The default is int.MaxValue.\r\nIn .Net framework the _ServicePointManager.ConnectionLimit_ is being used. The default is: 2.'
8538,456462582,"b'On my end, lots of failing tests:\r\n\r\n* SlowTests.Voron.Backups.Incremental.IncrementalBackupShouldCreateConsecutiveJournalFiles\r\n* SlowTests.Voron.Backups.Incremental.CanDoMultipleIncrementalBackupsAndRestoreOneByOne\r\n* SlowTests.Voron.Backups.Incremental.IncrementalBackupShouldCopyJustNewPagesSinceLastBackup'"
8541,456516184,b'Okay'
8541,456518663,"b'Also worth noting here is that we did the same thing in 3.x. We used `256` there as a number, but @grisha-kotler and I agreed, that since .NET Core runtime is using `int.Max` as a default, then it would be better to increase the value from 256 to 1024 * 10. Should be sufficient.'"
8538,456550699,b'Hopefully this should fix the tests'
8548,456822474,"b""I'll make a better error with the actual port that needs to be opened on the remote node"""
8549,456860090,b'Can you add a test with counter increment? '
8551,457120934,b'@myarichuk can you check the failing tests?'
8551,457143415,b'> \r\n> \r\n> @myarichuk can you check the failing tests?\r\n\r\nSure.'
8502,457162807,b'Closing in favor of #8552 \r\nComplete TODO list will be evaluated from all the remarks in here not attended yet\r\nNote: SafeHandle disposal still not working'
8555,457199365,b'Next step now is to let the CI server take the code for a spin. '
8551,457202950,"b""Please don't merge this PR until I take a proper look at failing tests. I suspect that those failures can be related to my changes."""
8538,457218419,b'All changes squashed in https://github.com/ravendb/ravendb/pull/8556'
8551,457274586,"b""Those tests failed because of how I altered the handling of '[]' in FieldExpression. I changed it some more so it shouldn't break existing functionality now."""
8557,457322690,b'@karmeli87 Can you check the failing test?'
8557,457353719,b'Already fixed here https://github.com/ravendb/ravendb/pull/8558'
8557,457355154,"b""I've rebased the PR. Let's do another CI round."""
8555,457359372,b'Merged. Thanks @famoser for your contribution!'
8557,457816066,"b""I'm not sure that I'm following, the merged change vector for the conflict is the merged vectors of the documents, which should end up the same on all nodes, no?"""
8557,457823790,"b'Yes, the problem was that, that merged change vector was set as the global change vector. Instead we need to merge it into the global one.'"
8569,457907176,b'I will open this for 4.1'
8478,457908692,b'more relevant pr exists: https://github.com/ravendb/ravendb/pull/8543'
8543,457912810,"b""It looks good, @talweiss1982 will add some more tests soon and we'll be ready to merge"""
8543,457921501,"b'okay i had an issue with the edges it is now fixed, added a test.'"
8574,457932825,b'Rebased.'
8571,457946615,b'Did you remove the NRE fix?'
8571,457948456,"b""@ayende @grisha-kotler I've managed to recover those"""
8571,457948670,b'Something is still not right...'
8571,457949227,b'Should be good now. @grisha-kotler can you re-check?'
8571,458045281,b'LGTM'
8560,458122644,b'@ppekrol  Changes pushed - please review now. '
8580,458203210,b'After talking with @ppekrol we decided to move the validation into the ensure not passive and throw on servers that are generated by the TestBase'
8580,458219410,b'see https://github.com/ravendb/ravendb/pull/8582'
8560,458440425,b'@ppekrol please review '
8574,458460506,b'Rebased'
8591,458593582,b'Closing because we will do a 4.2 -> 4.1 merge'
8574,458706182,b'Any reason to not apply it to 4.1?'
8574,458708687,"b'I think we should, yes'"
8574,458845040,b'Created PR against 4.1: https://github.com/ravendb/ravendb/pull/8600'
8599,458849622,b'According to `LoadDocument` code it would be better to check if value is `DynamicNullObject`. Check here: https://github.com/ravendb/ravendb/blob/v4.1/src/Raven.Server/Documents/Indexes/Static/StaticIndexBase.cs#L86'
8552,459084887,b'At least this test seems suspicious: can you check?\r\n\r\nSlowTests.Voron.Bugs.RavenDB_6971.Applying_new_diff_requires_to_zero_destination_bytes_first\r\n\r\n'
8620,459378231,b'Merged to 4.1: https://github.com/ravendb/ravendb/pull/8622'
8624,459477471,b'mingw-w64 on linux compiles successfully the same way as cl.exe in windows for win-64 dll'
8631,460029390,"b""@ml054 can you check 'FastTests.Issues.RavenDB_6250.All_operations_has_details_providers' ?"""
8631,460036863,b'Fixed. '
8633,460048057,b'Unless there is a bug there why are we removing the debug safeguards?'
8635,460073006,"b""@valeriob I've modified a bit your solution. Check it here: https://github.com/ravendb/ravendb/pull/8640"""
8640,460076894,"b'I thought about that, thanks @ppekrol !'"
8633,460195913,"b""@redknightlois that's code that was temporary in the first place. Is there a _part_ of it you think we should keep?"""
8633,460231198,"b""You are essentially checking an invariant there. If we don't want to introduce that error again it would make sense to run that at least on validation. I would probably switched that to validation if it is too costly to run on debug. """
8633,460249405,b'@ayende  thoughts?'
8418,460284295,"b""@aviv86 I'll do it tomorrow morning"""
8647,460284859,b'That should probably contains this as well https://github.com/ravendb/ravendb/pull/8646'
8418,460290090,b'@aviv86 The PR is already pretty big with a lot of comments. Can you create a new clean one so we can review the final state?'
8647,460293092,"b'@maximburyak yes, I will do another merge afterwards'"
8633,460295721,"b""This was temporary code that I didn't like having in the first place. \r\nI get the point of having the validation, but we need to draw the line somewhere otherwise even `VALIDATE` builds will become unusable. """
8603,460314806,b'@efratshenhar can you rebase and check the test failure? `ImportRevisionDocumentsWithoutDocuments` failed.'
8656,460989112,b'LGTM'
8685,462147542,b'We will add a test here.'
8688,462743650,"b'Avoid `GetType().Name`, it is not needed and will cause path errors (128 character limit IIRC)'"
8704,463678729,b'@myarichuk can you check failing tests?'
8714,464455247,b'Please add interversion test (talk to @maximburyak) checking if we can smuggler from 4.1 to 4.2 and from 4.2 to 4.1 and if backward compatibility works.'
8726,464477106,b'This will be done as a part of @myarichuk work'
8704,464483670,b'The most recent commit should handle the failing tests.'
8729,464741112,b'all things done - please recheck. '
8737,465112713,b'`CanRestartEncryptedDbWithIndexes` has failed. Looking at this.'
8737,465119801,b'It throws AVE on 64 bits'
8735,465127757,b'2 failing tests:\r\nSlowTests.Server.Documents.PeriodicBackup.PeriodicBackupTestsSlow.can_backup_and_restore\r\nSlowTests.Server.Documents.PeriodicBackup.EncryptedBackupTest.can_backup_and_restore_encrypted'
8740,465165225,b'`Can_setup_etl_from_encrypted_to_non_encrypted_db` failed this time'
8736,465439087,b'It was closed as it breaks the studio. @aviv86 changes was pushed to branch. I will PR this commit along with studio changes. '
8756,465708065,"b'Am I missing something, if you added just failing tests, how come this works?'"
8756,465718803,b'The issue was only in 4.1+'
8623,466141907,b'Done. Added power of 2 assumptions and therefore better codegen. '
8769,466306899,b'https://issues.hibernatingrhinos.com/issue/RDBC-280'
8767,466496854,"b""`SlowTests.Cluster.ClusterTransactionTests.SessionCompareExchangeCommands` is hanging because:\r\n1. `ClusterStateMachine` writes the CompareExchange commands to `(CompareExchangeSchema, CompareExchange)`\r\n2. We are notifying client about index of that command\r\n3. Client is waiting for this command to be executed on database. but it isn't because `ExecuteClusterTransactionTask` is reading commands from `(ClusterStateMachine.TransactionCommandsSchema, ClusterStateMachine.TransactionCommands)` so last processed raft command index in database is never bumped\r\n\r\nAlso I think there might be a race with usage of `_hasClusterTransaction` and resetting it. We should probably use `SetAndResetAtomically` without resetting it inside the `ExecuteClusterTransactionTask`.\r\n\r\ncc @karmeli87 """
8767,466697986,"b""Couldn't push to @myarichuk so created https://github.com/ravendb/ravendb/pull/8778 """
8782,466797013,b'@aviv86 we need to investigate further.'
8623,466950868,"b'Rebased, did a cleanup and added an option to disable prefetching'"
8789,466951565,b'@efratshenhar Could you also write test case for that? It is quite important to avoid regressions in this piece of code. '
8789,466952864,b'by test case I mean:\r\n1. STart single server\r\n2. Connect to changes api\r\n3. kill server\r\n4. wait a bit\r\n5. start server\r\n6. modify document\r\n7. wait for changes api to get notification'
8789,466955392,b'yes'
8623,466976123,b'Why it needs to be public? it is used only by us internally.'
8623,466976686,"b'That is in sparrow, I am working on POCs on voron that use that structure'"
8623,466976953,b'Internals are visible to Voron and Sparrow.Server'
8623,467002880,"b""Didn't know that we have setup a friend. Great"""
8794,467052171,b'Can we write a test for that? Non only the client-api but also what results we would expect from boosting by 0.'
8789,467053174,"b'Merging, still need a test.'"
8789,467406174,b'https://github.com/ravendb/ravendb/pull/8799/'
8799,467537619,b'@talweiss1982 can you check the test?'
8803,467605705,"b""I don't understand the test. You are only testing the aggressive caching on node 1, but probably should check that reads from the other nodes are also going through and refreshing aggressive caching, no?"""
8803,467791137,"b'@ayende the test makes sure that the changes api receives the right notifications, assuming that the aggressive caching will respond correctly. We probably should also check the behavior of the caching as well'"
8675,467811494,b'Please submit a new PR or reopen this one when it is ready.'
8803,467817201,"b'You are checking this on a single store , for both the modifications and the changes.\r\nWe need to do that on different stores'"
8803,467832148,"b""no, I'm not I'm checking on all stores, i have added the load too and test still passes."""
8687,467875591,"b'For code review only, I still have to write the schema upgrade.'"
8809,467892788,b'Will be done in v4.1'
8810,467911573,b'https://github.com/ravendb/ravendb/pull/8812 instead'
8803,467951621,"b'@ayende i have modified the test, it still  passes.'"
8818,468168878,"b""The test failure isn't related to the changes"""
8735,468170988,b'Closing this PR because it is conflicted. Please open a new one when you are ready'
8824,468299905,"b""I've found one bug. Closing for now. """
8823,468583366,b'@ppekrol LGTM'
8829,468627385,"b""Actually it is worse.. each uploading thread must handle it's own exceptions, otherwise the process will crash. """
8829,469006359,"b'Closing this PR, since There is no added value of having the backups in a dedicated threads.'"
8861,469029205,b'still failing on v4.1'
8687,469232703,b'Failing test: Server_store_basic_read_write_should_work\r\nFixing.'
8869,469631421,"b""@ayende Please clarify the behavior you intended because this review is confusing and I'm blocked"""
8875,469782089,"b'Looks good, otherwise'"
8875,469988549,"b""I'll check the failing tests but its wired since I didn't change anything regarding parameters"""
8875,470095380,"b'That feels like a fundamental change for 4.2, maybe we should better merge it post 4.2 release?'"
8875,470280097,"b'I would rather do that in a point release, rather than in 4.2.1, or something like that.'"
8875,470280188,b'Note that this just validate something that would cause the user grief if they did (and we expect none would)'
8879,470281812,"b'Consider the case of a failure to commit, which is catastrophic. \r\nThe next write transaction would throw that we failed and in an invalid state. But would we have that stack trace there?'"
8885,470413234,"b""We don't bundle those scripts in release packages at the moment (just have run.sh right now). Should we?"""
8885,470422098,"b'Yes, but I think those scripts needs to be more interactive and they need to check for the actual OS before running?'"
8875,470439589,b'Breaks behavior '
8879,470480701,"b'> Consider the case of a failure to commit, which is catastrophic.\r\n> The next write transaction would throw that we failed and in an invalid state. But would we have that stack trace there?\r\n\r\nnow it does : https://github.com/ravendb/ravendb/pull/8879/commits/61f1ca56deba68706685259905ed3134337b739b'"
8885,470481506,"b""Nowadays it's `systemd` for daemons and `systemctl` for management pretty much everywhere AFAIK - CentOS, Ubuntu and other major distros. I think we can check if `systemctl` is there and continue if so, exit with a msg otherwise. Do you concur @aviviadi ? """
8888,470502929,b'SlowTests.Authentication.AuthenticationLetsEncryptTests.CanGetLetsEncryptCertificateAndRenewIt failure seems unrelated'
8885,470546085,"b""> Nowadays it's `systemd` for daemons and `systemctl` for management pretty much everywhere AFAIK - CentOS, Ubuntu and other major distros. I think we can check if `systemctl` is there and continue if so, exit with a msg otherwise. Do you concur @aviviadi ?\r\n\r\nI agree : https://github.com/ravendb/ravendb/pull/8885/commits/0442420f6ddee8c82d4c5fe2aa5255371a4cf748"""
8869,470570258,b'@maximburyak please review this PR'
8894,470706938,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Judah Himango CW (jhimango.cw@mmm.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
8894,470848397,"b'@JudahGabriel  Btw what about links with target blank, or fetching data from different cluster nodes? Will it work? '"
8894,471006364,"b'> \r\n> \r\n> @JudahGabriel Btw what about links with target blank, or fetching data from different cluster nodes? Will it work?\r\n\r\nYeah, the web manifest spec has now updated to standardize on this behavior. Accessing URLs outside of the app will launch in a separate, full browser chrome window, IIRC.'"
8894,471073684,"b""@JudahGabriel let me play with this next week. I'm curious about limitations of this solution (if any). """
8898,471219778,"b'Still a WIP, a lot changed inside Jint in last month'"
8886,471483350,"b""@ayende Regarding this commit: 1aa9d80b7da7d665d70e36dd1856836d5e5a638b. I'm currently rewriting `From16.cs` schema upgrade as it requires much more work - we need to split it into multiple transactions, we need to delete relevant tables, indexes etc\r\n\r\n\r\n """
8886,471490828,"b""Oh, I see `From16.cs` contains more changes there. I'll rebase my work against this branch then."""
8828,471540202,"b'Please check the failing tests, but LGTM'"
8894,471559668,"b""You don't register service worker so it doesn't work by default. """
8894,471562541,"b""I've managed to install and test this and my humble opinion is: The PWA standard is not yet mature to deploy. The problem is we have few places in which we open new tabs - and new tabs opens as standard chrome window so having an app is fancy but it breaks entire idea of PWA.\r\n"""
8894,471563189,"b""Service worker: looks like when I reverted the formatting changes to index.html, I inadvertently removed the service worker registration. I've added it back in."""
8894,471564848,"b'> The PWA standard is not yet mature to deploy. The problem is we have few places in which we open new tabs - and new tabs opens as standard chrome window so having an app is fancy but it breaks entire idea of PWA.\r\n\r\nIsn\'t that what a normal native app would do? Click an external link (or link to target=""_blank""), it opens in a browser tab. That\'s the desired behavior, no?'"
8894,471565694,"b'the problem is when ""external link"" is different node link. Which is and isn\'t external to us. Then we end up with native and non-native windows. This is behaviour we have in studio - once we navigate to non-relevant node we open this in new window. '"
8894,471568883,"b""So the current behavior is, inside the Raven Studio app, you click a different node link, and it opens in a browser tab.\r\n\r\nYou don't like this behavior. What's the alternative? Open in another app instance? Or open inside the current app?\r\n\r\nOne thing we could do is navigate to other nodes inside the app. This could be done with web app manifest [scopes](https://developer.mozilla.org/en-US/docs/Web/Manifest#scope)."""
8894,471571805,"b'Scopes are relative to root url, right? In cluster we change entire dns name. \r\n\r\nFor native application I\'d detect that and show one tab per cluster node. Optionally we could detect ctrl+click or going to external node and open new ""soft"" tab inside our application, but it is huge change. '"
8894,471574303,"b""Scopes just specify what domains can load in-app. But, I don't think multiple scopes are permitted by the spec, so that might be a dead-end for us.\r\n\r\nI still think the PWA standard is doing the right thing: click an external link, open in a new browser tab. This is a good behavior for even our nodes, IMO. I think this behavior is unlikely to change in the future versions of the PWA web standard.\r\n\r\nOK Marcin, I gave it a shot. :-) If you don't think it's worth adding to Raven Studio, I understand."""
8886,471974787,"b""@aviv86 @ayende \r\nI've submitted the following PR https://github.com/aviv86/ravendb/pull/1 which splits the counters migration into multiple commits. Please review it there.\r\n\r\nAlso please have a look at the following comment: https://issues.hibernatingrhinos.com/issue/RavenDB-12898#focus=streamItem-67-35156.0-0"""
8869,471981111,"b""@ayende i need your comment regarding the get tcp info, you requested that i'll use the same connection as Pull replication and this is why i use the different command:\r\n1. should I take care of backward compatibility against v4.0, v4.1 server?\r\n2. should i modify subscription to recognize disabled database after the connection is established and remove the validation for the database been active?"""
8920,472083123,"b""I don't have any issues with this change, but what is the point of this?\r\nWhat does this gives us?"""
8869,472084130,b'1) Yes\r\n2) what is the current behavior in this context?'
8920,472084599,b'Semantic consistency mainly. It was motivated because I made many mistakes over time just because of that expecting Next and not getting it (allocators code use power of 2 assumptions all over the place and made many difficult to diagnose error because of that). '
8921,472136902,b'@redknightlois the RavenDB-12068 seems way wrong. Did you mean RavenDB-8951?'
8921,472137466,"b""How did I get 12068??? Yes, it's very wrong. """
8921,472140292,"b'Apparently, I picked up that number 6 months ago... dont understand why. '"
8869,472355647,b'The current behavior is subscription expects to fail to get TCP info if the database is disabled'
8869,472363772,"b""I'm going to close this PR and open a clean one since something seems to have gone wrong here"""
8929,472462501,"b""Two tests are failing. I'm on it"""
8921,472470573,b'This PR is for review purposes only. Not to be merged with 4.2. Target release is: 5.0'
8941,472833887,"b""i'm seeing debug assertion failing after this change so don't merge this yet"""
8941,472841642,b'debug assert fails'
8940,472890515,b'Was merged to 4.1.'
8941,473231865,b'You cannot change the order of operations here. It is important for a lot of factors. \r\n\r\nWhat is the cause of the NRE in the first place?'
8929,473234387,b'Tests failures fixed in https://github.com/ravendb/ravendb/pull/8929/commits/c51f00d85eeabde0aee91e1014d749be438b2c32'
8926,473516719,b'https://github.com/ravendb/ravendb/pull/8948'
8948,473533671,"b'After reviewing the code, it looks like the proper value there is `false`. We want to try to connect only to the given node (`chosenNode`). If it fails, the code determines new node elsewhere (in `ShouldTryToReconnect`)'"
8941,473652541,b'@ayende  note that in the async commit the order is replaced:\r\nhttps://github.com/ravendb/ravendb/blob/v4.1/src/Voron/Impl/LowLevelTransaction.cs#L944\r\nsee my comment on the issue for further details'
8941,473652779,b'I think that we can get away with it there because we are still holding the tx lock from the _current_ transaction in the `EndAsyncCommit`. \r\nCan you also try reversing it there and see if that works?'
8921,474054889,b'@ayende By now we can say with evidence that allocating memory is a pain in the ass... :D'
8970,474238680,"b'Also, write some tests here for adversarial input. Can we pass non path arguments here somehow? How does it handle it? '"
8979,475155058,"b'Not sure if you can tell that other side started with port 0..\r\nWhat we can do is to reject requests to add us to a cluster, so the only valid cluster for starting with port 0 will be single node.'"
8979,475176812,"b'We can give that indication in `RachisAdminHandler.GetNodeInfo`, and check that in `AddNode`'"
8987,475243522,"b'Egor, thanks for the fix! Can you confirm: if I store a cmpxchg with ""emails/foo+test@ab.com"", **will I be able to get that value using GetCompareExchangeValueOperation(keyWithPlusSign), or will I need to manually escape the keyWithPlusSign**?'"
8987,475244227,"b""@JudahGabriel according to test https://github.com/ravendb/ravendb/pull/8987/files#diff-d7adabe65d19221ae0f622e52c1b2751R307\r\n\r\nyou don't have to escape nothing. """
8987,475246810,"b'> Egor, thanks for the fix! Can you confirm: if I store a cmpxchg with ""emails/foo+test@ab.com"", will I be able to get that value using GetCompareExchangeValueOperation(keyWithPlusSign), or will I need to manually escape the keyWithPlusSign?\r\n\r\nYes, the same key should be used for Put, Get, Delete operations despite \'special characters\' used'"
8988,475355632,"b""This PR is still missing tests and some of the logic, but I would like to have feedback for what I've done so far.\r\n"""
8512,476592753,b'Is this already released?'
8452,476592800,b'Is this already released?'
8512,476595852,b'yes'
8452,476595864,b'yes'
9000,477270319,b'That does take out the `TimeoutManager` and `FetchDatabase` usage of `GenerateReport`?'
9000,477273326,b'`TimeoutManager`?\r\nThe only place that now uses `StorageEnvironment.GenerateReport` is `debug/storage/report` (studio view -> Storage Report).'
9000,477274734,b'Excellent... for reference this was the call chain from `TimeoutManager`\r\n![image](https://user-images.githubusercontent.com/1045411/55099517-9b2d4180-509e-11e9-8fe3-dd858069a7ba.png)\r\n'
9000,477275472,b'Makes sense. This is the server dashboard.'
9000,477277089,b'What was the most expensive call inside `GenerateReport`? TreeIterator?'
9000,477278231,"b""THE WHOLE THING, but certainly the tree iteration gets the lions' share\r\n\r\n![image](https://user-images.githubusercontent.com/1045411/55100043-af257300-509f-11e9-96f2-1307039a34dd.png)\r\n"""
9000,477307615,b'It was using `GenerateReport`:\r\nhttps://github.com/ravendb/ravendb/blob/1817ec89a6d03b58acb4bec7c0981a4d39138a0f/src/Voron/StorageEnvironment.cs#L923'
9000,477309943,"b'Wow, that was expensive'"
9000,477317135,b'LGTM so far. '
9000,477535182,b'As soon as we have the nightly built will deploy and measure again'
9000,477537152,b'~30min'
9004,477936513,b'wrong branch - should be 4.1'
9005,477936533,b'wrong branch - should be 4.1'
9011,478562635,b'Test failures tracked in https://issues.hibernatingrhinos.com/issue/RavenDB-13325'
9016,478856303,b'Workaround is simple and the chance to reset user indexes during simple patch upgrade is too high. Move this to 4.2.'
9014,478871790,"b'We also need to consider if those exceptions are thrown during the `Apply` of the `ClusterStateMachine`.\r\nIs it okay to commit?\r\nif it isn\'t we have a problem, because we cannot recover from this.\r\nIf it is fine to commit, a custom exception `KeyTooBigException` would be better, so we can catch it and treat as ""Expected"".'"
8988,479023483,b'Closing. Moved to 4.2.x'
9011,479458461,"b""I've skipped the failing tests in https://github.com/ravendb/ravendb/pull/9011/commits/bd7b5473b565413738907041f7625affd36fed24 for now. They will be addressed in RavenDB-13325"""
9043,479468142,"b'LGTM. On a side note, this is an effect of a race condition; the question is now that we know this one can happen, we probably should explicitely mark (even if with comments) which variables on the execution codepath are shared between threads. The rationale is that while this code doesnt change much, we have to be extra careful when modifying code on this general area. Having an audit of the shared state can diminish the probability of this kind of race conditions happening again. '"
9043,479468435,b'The `_activeTxs` is _literally_ called `RacyConcucrrentBag`'
9043,479468903,"b'@ayende Yes, but the audit should be on the chain of methods that rely on that shared state. The shared state is secondary. '"
9043,479470802,"b""We have a racy bag we know and we need to be racy (for performance reasons)...\r\nNow we have the state which is 'shared' and 'racy'\r\nAnd we have methods `A` and `B` that takes decisions from that `racy` state.\r\nTherefore `A` and `B` are tainted, whatever lever they pull, it has to be considered as dangerous.\r\nIf `C` uses either one of those, it has to have mitigation steps in place to deal with the `racyness`  properties of `A` and `B` which are transitive. If it does not, it has to be tainted too. \r\n"""
9043,479484329,b'We will create a 4.1 PR for this and do a 4.1 -> 4.2 merge'
9050,479491538,b'continues https://github.com/ravendb/ravendb/pull/9043'
9042,479505505,b'@arekpalinski Ping me tomorrow about this'
8970,479782856,b'@haludi can you check failing tests?'
9059,479904956,b'https://github.com/ravendb/ravendb/pull/8970'
9057,479913445,b'Apparently Idle index is still indexing '
9057,480479196,"b""The fact that it is still indexing shouldn't matter, should it? \r\nWe still shouldn't wait for it for rehab purposes, I think."""
9057,480561639,"b'Depends, Idle index is still indexing as it would be Normal one. It is just a flag that helps to indentify them and clean them up by the indexing cleanup mechanism. From one side we can say that it is idle so we can ignore it, from other if we will ignore it and move the node out of rehab then if someone that queries it (and converts it to Normal) might get way different results depending on the node that was hit.'"
9060,480596664,b'will open a new PR with server side fix'
9088,480835439,b'@grisha-kotler can you check failing test?'
9088,480836043,b'fixed'
9100,481248930,"b""I've fixed NRE and pushed my changes. """
9091,481414650,b'4.1: https://github.com/ravendb/ravendb/pull/9108'
9120,482016773,b'It was passing `AnyCPU` instead of blank. I think made a mistake when checking the build results.'
9102,482032119,b'Rebased. Please add a test.'
9102,482117263,b'test is now added. Please verify. '
9102,482226833,b'Can you check the failing test?'
9102,482513238,b'fixed. '
9093,482987886,b'We will handle on API side'
9134,483115729,b'All of them override `IsEqualTo` which is used in `Equals`'
9135,483267708,"b'@efratshenhar , I would like us to also be able to ""page forward"" if we did not find any documents, by bumping up the etag to start from while also starting a new transaction.'"
9145,483580526,"b'No need, we have a specific field for that'"
9163,484591631,"b'Also, who can _call_ RequestSnapshot_ ?'"
9160,484600611,b'Error if the db does not exists'
9113,484643898,"b'Volatile is needed. This is single consumer / multi producer buffer. The fact that we have a single producer on that case, is not true everywhere'"
9113,484645883,"b""That would cause on very rare occasions to lose a single push because it will get overwritten during 2 two trypush that happens to read the same idx. If I understand correctly the issue my hypothesis is that we are checking and we allowing to move forward at a risky position while we shouldn't"""
9113,484649122,"b'After a second look I stand corrected, it is not a rare occurrence, it is very likely on high contention. This is definitely NOT a solution, to solve it look into IsReady interaction with TryAdd'"
9166,484880425,b' @haludi @aviv86 Please review'
9166,485230373,"b""I think this is the issue too (and for sure an issue).\r\nIn addition, we maybe missed it so far because we don't check the error value when we call the function `rvn_prefetch_ranges`\r\nhttps://github.com/ravendb/ravendb/blob/v4.2/src/Voron/GlobalPrefetchingBehavior.cs#L69\r\nhttps://github.com/ravendb/ravendb/blob/v4.2/src/Voron/GlobalPrefetchingBehavior.cs#L77"""
9163,485231153,b'The `RequestSnapshot` property can be set by the following:\r\n1. From the JS admin console\r\n2. When we hard reset to passive\r\n'
9163,485231228,"b""Let's create a docs issue with all these commands, so we'll know what options we have """
9156,485233133,"b'@ayende it will if clone will be done right and increase the ref count of the attachment.\r\nAt any rate, my changes to prevent insertion of @attachments are only for direct put using a command (exposed by the client but not used) if you are using a session then you will go through the batch handler.'"
9156,485234021,b'@talweiss1982 What is the actual behavior right now?'
9156,485235144,b'there is no clone as much as I know'
9156,485235194,b'From the studio'
9156,485237640,"b""you don't have a way to do this with a single transaction from the studio.\r\nI'm not sure you can with a session either as the reading of the attachment won't be in the same transaction either.\r\nOnly with a patch, I think you could achieve this scenario and i don't see how my changes will affect the behavior of this scenario."""
9167,485248815,b'Should to be merge after https://issues.hibernatingrhinos.com/issue/RavenDB-13435 is solved'
9168,485370107,"b'Need a test for this as well:\r\n\r\n```from membership in session.Query<MembershipIndexEntry, MembershipIndex>()\r\nlet userGroups = RavenQuery.Load<UserGroup>(membership.UserGroups)\r\nlet organizationId = organizationParameter\r\nlet organization = RavenQuery.Load<Organization>(organizationId)\r\n\r\n select new Projection\r\n{\r\n\tId = membership.Id,\r\n\tUserGroups = userGroups.Select(x => x.Id).ToList()\r\n};\r\n```'"
9168,485372286,"b'> Need a test for this as well:\r\n> \r\n> ```\r\n> let userGroups = RavenQuery.Load<UserGroup>(membership.UserGroups)\r\n> let organizationId = organizationParameter\r\n> let organization = RavenQuery.Load<Organization>(organizationId)\r\n> \r\n>  select new Projection\r\n> {\r\n> \tId = membership.Id,\r\n> \tUserGroups = userGroups.Select(x => x.Id).ToList()\r\n> };\r\n> ```\r\n\r\ncreated a separate issue for that \r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-13442'"
9113,485445280,b'@redknightlois any reason not to merge this?'
9113,485448450,"b'Yes, it doesnt fix the race condition. It creates a different one far more difficult to diagnose where messages are going to get overwritten (therefore will cause actions to get lost). '"
9173,485477361,b'LGTM. @arekpalinski can you check?'
9172,485478787,b'@myarichuk I will move this to 4.1 branch.'
9172,485480603,b'Moved here: https://github.com/ravendb/ravendb/pull/9175'
9170,485492853,"b""I've pushed some small adjustments. If this will go to 4.2 and as far as I understood this was the target, then we will not have any backward compatibility concerns here."""
9170,485496142,b'4.2 PR: https://github.com/ravendb/ravendb/pull/9176'
9169,485498029,b'Rebased'
9156,485503386,b'Studio is using `bulk_docs` for that IIRC. @talweiss1982 are we covering bulkInsert?'
9167,485520495,b'Rebased.'
9119,485552266,b'@ayende can you review my change? Also I think this should go to 4.2 only?'
9156,485654173,"b'@ppekrol The issue is probably not visible via the `bulk_docs`, we are talking about the behavior when we invoke `PUT /docs?id=doc` directly, for example, via fiddler'"
9170,485654405,"b'This is important in v4.1, we have a customer that is being blocked by this. \r\n'"
9170,485664767,b'Merged.'
9173,485667578,b'LGTM'
9166,485669050,"b'@haludi What do you mean by ""I think this is the issue too"" ? Yes, I think we need to check the result of `rvn_prefetch_ranges` call'"
9119,485669294,b'4.2: https://github.com/ravendb/ravendb/pull/9178'
9156,485777667,"b""The scenario of using PutDocument puts us in a bad position since it doesn't clean unwanted properties i talk with @ayende regarding this one and we decided that we will just clean the unwanted properties.\r\nI'm closing this PR since its code will no longer be relevant after my changes."""
9185,485811764,"b'My bad, previous fix _should_ be enough'"
9184,486139536,"b""@ppekrol those tests are doing something they shouldn't resolving conflicts by inserting raw blittables with unchecked metadata, i'm trying to see if i can adjust them to work properly but its a catch 22..."""
9184,486155619,"b'We need to look into those, maybe those tests need to be rewritten now.'"
9184,486161499,b'@ppekrol after looking at it we actually have no other way to resolve conflicts containing attachments manually. We could add a special command for manually choose the change vector that should win but I think this is breaking changes since people may have already relayed on this method of conflict resolving.\r\nI think we should just leave PutDocument as it is document that it should avoid messing with the metadata and should only contain metadata for the purpose of resolving conflicts.\r\n@ayende thoughts?'
9184,486172581,"b""@talweiss1982 At a minimum, we *must* ensure that we can't create attachments that do not exists.\r\n"""
9184,486172642,b'Or without references to them'
9189,486281733,"b""No, and it shouldn't.\r\nCreating an attachment in this manner is not allowed as I explained in detail above.\r\nIf you wish to add a reference you need to do it manually doing this automatically will break our logic.\r\nThe only time you want to use `PutDocument` with existing metadata is when you're using it to resolve conflict and when you do that you don't want to increment the ref count of an attachment.\r\n"""
9193,487055011,b'We probably want to add some sample queries for this.'
9193,487058487,b'We will take leverage of this index in our Demo app.'
9201,487502762,"b""@ayende the test is irrelevant since it was just checking the concurrency throw and the fact that the change vector didn't increment now it won't throw and will increment the change vector"""
9198,487536156,"b""Let's hold on with merging this until @ppekrol will review it as well."""
9206,487848542,b'need a test for this (schema upgrade from 4.1 and check the values afterwards)'
9207,488230760,"b""Closing this, we'll have a new PR with the new approach described in the issue"""
9208,488234563,b'We have access to the DatabaseRecord see:\r\n<server_url>/studio/index.html#databases/settings/databaseRecord?&database=<db_name>'
9220,488702400,"b'Certificates and Compare Exchange Tombstones had the same issue.\r\nThe test verifies only the Compare Exchange Tombstones, because it is easier to test.'"
9216,489404674,"b""This is the expected exception in this case. \r\n\r\nWhen we are adding a new node we can't do a command one by one, because we truncate the log.. so the commands aren't there any longer.\r\n\r\nSo the proper way would be to build a 4.1 cluster and upgrade the nodes. (we truncate the log only when _all_ nodes had applied the command)\r\nSo it could send the commands one by one.\r\n"""
9205,489439867,"b'@myarichuk, please take a look at the failing test'"
9228,489453245,b'Need a test with counter deletion'
9198,489514451,b'Also 60 tests are failing in this PR. Please check the reason.'
9219,489536483,"b""Moving this to 4.2.x since this isn't currently being used"""
9229,489544402,b'need to check failing test\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/1165/testReport/junit/SlowTests.Issues/RavenDB_9584/CanExtendAutoIndexWithSuggestions/'
9208,489557167,b'done'
9228,490000091,"b'Need a test for: \r\nQuery1: from Users where Name = $p0 (Params: $p0 = ""Egor"")\r\nQuery2: from Users where Name = $p0 (Params: $p0 = ""Grisha"")\r\n\r\nThe second query will return 304 (before the change)'"
9209,490048257,b'Closed via: https://github.com/ravendb/ravendb/pull/9239'
9244,490135741,"b""Don't we have MaxSessions already available:\r\nhttps://github.com/ravendb/ravendb/commit/c2e5bb7b76af0f70dab6617db419700186de34e4\r\n\r\n?"""
9244,490374689,b'Rebased and fixed conflicts.'
9228,490455354,"b""> How are tombstones for counters handled?\r\n\r\nwhen we delete a counter we increment the etag, so the next query(after delete) will get 'fresh' results.\r\nthere is a test for this."""
9258,491305626,b'@haludi Please review'
9259,491574819,"b""This fix also require schema upgrade, but since it affects both 4.1 and 4.2 we can't simply bump the version and need a more generic solution, which is discussed here: https://issues.hibernatingrhinos.com/issue/RavenDB-13542"""
9259,491769573,b'I realized that we keep the attachments metadata in a single table (and not per collection)\r\nSo we may avoid changing the schema.'
9258,492101402,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13528'
9270,492665066,b'CC @maximburyak '
9272,492794303,b'Please also rebase your PR'
9271,493037912,b'fixed'
9272,493128478,b'@ayende this is handled in CancelFutureTasks (renamed).\r\nRebased'
9273,493771030,b'Not relevant for 4.1'
9287,493963357,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13501'
9285,493963704,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13501'
9281,494268619,"b'Closing, because there is a 4.1 PR: https://github.com/ravendb/ravendb/pull/9285'"
9287,494289575,b'Do we want to make this change in 3.5?'
9287,494290493,b'It originated from 3.5 thread on google groups.'
9277,494341872,b'Better error message when trying to get names of attachment from a document on in the session'
9297,494842257,b'Closed because needed to fix the Commit Msg'
8921,495137699,"b""Let's reopen this or open a new one when needed."""
9282,495517866,b'Rebased.'
9307,496119978,b'We will take a different approach on the subject. Please open a new PR when ready.'
9311,496384203,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Or Gabay (ortil1@gmail.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
9314,496414259,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13617'
9315,496420418,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13187'
9314,496463144,b'Need to see the assembly compare of both to be sure. That change may introduce another temporal that depending on the context may spill registers and kill the optimization impact for a different reason.'
9314,496807194,b'![before vs after](https://user-images.githubusercontent.com/37696258/58535357-736d6d80-81f6-11e9-90e9-c26fbc1efd10.png)\r\n![before](https://user-images.githubusercontent.com/37696258/58535358-74060400-81f6-11e9-91e4-83846f51dc4e.png)\r\n![after](https://user-images.githubusercontent.com/37696258/58535360-74060400-81f6-11e9-953b-87c0c3f7a602.png)\r\n'
9324,496823541,"b'Wait, need to rebuilt the binaries, too'"
9324,496823797,b'Can we squash everything to one commit to avoid pushing DLLs few times?'
9324,496826743,"b""Yes, I'll rebase when done"""
9327,497035699,b'in general: really nice work!'
9314,497221010,"b""We discussed it and there were arisen an assumption that this bug didn't reveal so far because it is internal\r\nand a change to it can damage backward compatibility (to ids with @)\r\nAs I see it so far the second spot (at `GetLowerIdSliceAndStorageKey` function) that @ppekrol [mention earlier](https://github.com/ravendb/ravendb/pull/9314#discussion_r288004571) is not a problem because there is a cast to `uint` before (maybe this was the intention in the first spot).\r\nThe first spot at `GetSliceFromId` function is used to handle reference.\r\nI am checking now the theory that the fix can destroy backward compatibility\r\nso far it looks like this is not the case but I need more time to be sure."""
9314,497225183,"b'Also, I added here the disassembly of before ([second picture](https://user-images.githubusercontent.com/37696258/58535358-74060400-81f6-11e9-91e4-83846f51dc4e.png)) and after ([third picture](https://user-images.githubusercontent.com/37696258/58535360-74060400-81f6-11e9-953b-87c0c3f7a602.png)) the fix.\r\nIn addition, I apply the code from `GetLowerIdSliceAndStorageKey` to `GetSliceFromId` and compared it to my fix (int the PR), the code without optimization and the code with the bug.\r\nThe result after run each one 500,000,000 times are :\r\n\r\nGetLowerIdSliceAndStorageKey  00:00:09.7379055\r\nMy fix                                           00:00:10.7540067\r\nWithout optimization                   00:00:09.4131990\r\nWith bug                                      00:00:09.9451849\r\n'"
9314,497225927,b'![image](https://user-images.githubusercontent.com/37696258/58614280-a67c3380-82c0-11e9-8e3a-116f2646964f.png)\r\n\r\nDisassembly of optimization from `GetLowerIdSliceAndStorageKey`'
9329,497268070,b'cc @karmeli87 '
9314,497294344,"b'At a glance, the assembly looks the same in both cases.'"
9314,497294730,"b""I don't know why you see such numbers, but as I see it, removing the optimizations gives the right behavior without perf cost, no?"""
9314,497301422,"b'![image](https://user-images.githubusercontent.com/37696258/58630284-9af03300-82e7-11e9-8468-448c01c54f41.png)\r\n\r\nI try to cover different scenarios to check the optimizations against the bug code and unoptimized code\r\nI pass to `ToLower` function different strings\r\n""person"" - just lowers\r\n""PERSON"" - just upper\r\n""p#####1"" - has char under \'A\' char (# = 35)\r\n""P_____1"" - ha char above \'Z\' char (_ = 95)\r\n\r\n* Other function code - is the solution in `GetLowerIdSliceAndStorageKey` function\r\n* The time is loop of 5,000,000,000 in my machine\r\n* Any string scenario ran in parallel for all versions\r\n* The scenario ran in sequential \r\n'"
9314,497302200,"b'In addition, the test ran on\r\n<TargetFramework>netcoreapp2.1</TargetFramework>\r\n<RuntimeFrameworkVersion>2.1.11</RuntimeFrameworkVersion>'"
9314,497305200,"b""> n't know why you see such numbers, but as I see it, removing the optimizations gives the right behavior without perf cost, no?\r\n\r\nThe `movzx r10d, r10b` is likely the one because it adds a second read after write hazard there... The information in the issue doesn't allow me to understand the actual error and how it related to the promotion to `uint32` because under a compare scenario there shouldn't be any difference. \r\n\r\nHaving said that, there has been some work on the JIT to recognize those cases which would make that optimization not needed anymore; however, I dont remember if it was in the 2.x or 3.0 branch. If it hits, we don't need it anymore as this is internal and we control the runtime. If I understood properly the comparison, that looks like to be the case. """
9314,497305332,"b""Let's go with the simpler code, then"""
9314,497309573,b'![image](https://user-images.githubusercontent.com/37696258/58632260-bc541d80-82ed-11e9-9d88-93ebb73c12b6.png)\r\n\r\nDisassembly without optimization'
9332,497381696,b'Can we have a test for this?'
9328,497589973,"b'We need this in 4.2 as well, no?'"
9318,498044031,b'note: removed code unrelated to the commit'
9314,498550498,b'I apply a simple solution to `GetLower` function. @redknightlois please review.\r\nI also checked for the possibility this fix of internal bug will cause a problem with backward compatibility\r\nand as I see it so far this is not the case. But I need more time to be sure (maybe in another issue?)'
9344,498599489,"b""Let's move this to 4.1, when 4.1 client will be connecting to 4.2, we might encounter same issue. Beside that LGTM."""
9344,498617900,b'created a new PR on 4.1 branch\r\nhttps://github.com/ravendb/ravendb/pull/9345'
9334,499200848,"b'Just to clear things, we will use `Size` here. Please make the changes to the PR'"
9347,499516008,"b'@karmeli87 we are getting a lot of timeouts in the tests results, can you check that?'"
9359,500402153,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13503'
9358,500723287,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13600'
9366,500983331,b'@maximburyak can you check the failing tests?'
9366,501304530,b'Fixed those tests. It seems that we are breaking behavior (again?) in relation to pre https://github.com/karmeli87/ravendb/commit/95617a3787fcce2a4beca3f46fa7cb1997007f03 condition. @arekpalinski @ayende what do you think?'
9366,501310351,"b'@ayende for example there is a test that stores documents with no value in ""Name"" field and then asks to retrieve all documents in that collection ordered by ""Name"" field. If we won\'t send the ""Name"" field at all when we store that document, the query above won\'t retrieve that document at all because it is not indexed in the first place.'"
9366,501314831,"b'hmm, some more failing tests'"
9367,501391488,"b'That should be everything for this feature, I think'"
9367,501603521,b'@ayende I think some of the changes are causing tests to hang. It looks like `QueriesWithCustomFunctions` are affected.'
9366,501610456,"b""The change we made in https://github.com/karmeli87/ravendb/commit/95617a3787fcce2a4beca3f46fa7cb1997007f03 was a breaking change because it was set globally. \r\n\r\nAs I understand we need this:\r\n\r\n`_serializer.Value.NullValueHandling = NullValueHandling.Ignore;`\r\n\r\nin projections, right? CC @aviv86 \r\n\r\nThen maybe we should have a dedicated convention in addition to `DeserializeEntityFromBlittable` - let's call it `DeserializeProjectedEntityFromBlittable` and use it where necessary to handle the projections? (Would it make sense to have it configurable for projections? Maybe we just want to stick to `NullValueHandling.Ignore` then?)\r\n\r\nGiven that we'd have separate conventions we can have both: backward compatibility and properly handled projections. Thoughts?"""
9367,501616654,"b""Let's see how the next batch of test run, I'll look at it then"""
9373,501691686,b'Couple of tests are failing here'
9381,501999645,b'What should I change in the commit message? I have no visibility into the error message'
9381,502001890,"b'@danielmarbach It requires Issue # from our BugTracker, but it is OK, I will handle that. Thanks for contribution!'"
9383,502391996,"b'> @ayende did you made any changes to clrmd or just compiled master branch?\r\n\r\nI had to remove a bit of debug code, this is available here: https://github.com/ayende/clrmd'"
9388,502447024,b'@talweiss1982 can we add a test? Check RavenDB_11904.cs and RavenDB_11905.cs for those.'
9388,502459220,b'@ppekrol I had to rebase this PR to use the code I added in my other PR.\r\nAdded test'
9395,502587530,b'This also requires a bit of Studio work (it does not compile and we need to show that field in the UI)'
9395,502599412,b'fixed and rebased'
9413,503744944,b'@karmeli87 Please take a look as well'
9413,503948532,"b'- I would leave this as part of the expiration mechanism, it is basically very similar and fits good into it.\r\n- Does the subscription works when the cluster is down? (if connection was already established) \r\nIf it is, leaving this on the database level would make more sense to the user would be notified.\r\n- How does expiration works in external replication? `refresh` is no different in that matter.\r\nIf you have a geo-distributed system, I guess you want to have this property and get notified. '"
9413,503961167,"b""* Subscriptions don't really work if the cluster is down.\r\n* Expiration will cause conflicts, but they will auto resolve automatically.\r\n* I can see only doing `@refresh` on a particular node in the cluster. And having additional logic to resolve `@refresh` on conflicts. Thoughts?"""
9418,504304685,b'@karmeli87 can you check the tests?'
9412,504724388,"b""Too complex to follow over github comments. Let's pair on this when you are at the office."""
9412,504746610,"b""I'll open a clean PR for this issue"""
9423,504748950,b'Need to release acquired path cache items rather than clearing the lists '
9413,504943364,b'Ready for review'
9413,504997626,"b""@ayende I wouldn't be so worried about creating conflicts in the cluster since if the data is identical we don't create conflicts and I believe we already ignore some metadata fields when checking for conflicts so we could just add the '@refresh' field to the list of ignored fields"""
9436,505589111,b'@garayx Ping me tomorrow about this'
9366,505855863,"b'I ended up introducing a CustomizeJsonDeserializer function, that will allow to avoid using blittables for that purpose'"
9440,505858322,"b""Failing tests seems to be related to https://issues.hibernatingrhinos.com/issue/RavenDB-13754 I don't think that this should block merging"""
9442,505878567,b'wrong pr. closing'
9366,506385769,"b""@maximburyak I've spoke with @arekpalinski and we agree that your solution is correct. This will unfortunately break what @karmeli87 did in the past there, but we think that the behavior there was incorrect and we promised too much. Drawback of this is that @lahma will have to do small enhancement to his solution during next client update (like you did in the test)."""
9413,507025417,"b""@arekpalinski \r\n\r\n1) We can add two separate flags / timers, one for expiration, one for refresh.\r\nI don't think we want to have another implementation of this. \r\n\r\n2) I can't see how someone would even be aware if this is happening on all node or just some.\r\nI _guess_ if they are working on disconnected system, but even so, that is both rare and not promised.\r\n\r\n3) I don't want to promise specific time frame. Having it happen X amount of time after the refresh timer is the intent. It isn't meant to be on the spot accurate.\r\n\r\n@talweiss1982 I'm actually concerned between conflicts from the node removing the flag and another node accepting updates to it.\r\nThe removal of the flag would be later, so we would cause a conflict there."""
9454,507027734,b'This is actually breaking changes'
9454,507027760,"b""I can't throw this new exception it mask client expected exception like concurrency exception"""
9454,507028651,"b""I didn't see you pushed a commit there @ppekrol, was wondering why my fix failed to push I guess we did it around the same time"""
9454,507028787,b'No problem!'
9413,508020206,"b""> \r\n>     1. We can add two separate flags / timers, one for expiration, one for refresh.\r\n>        I don't think we want to have another implementation of this.\r\n\r\n@ayende  I'm not saying we want to have separate implementation (server side). I'd like to make it a separate feature (from the end user point of view) not part of Expiration. So for example having a dedicated operations in client API, separate page in the studio etc.\r\n\r\n"""
9413,508065183,"b'Oh, the UI should be  different, yes'"
9413,508069157,"b""Then don't you think it would make sense to have dedicated operations in Client API as well to manage / configure the @refresh feature?\r\n\r\nBTW there are test failures related to Expiration"""
9446,508552343,"b'The one thing that still need to be done before merging this.\r\nWe should _not_ support X number of backups, only backups older than.\r\nThis would allow us to optimize deleting old backups, and avoid breaking our contract with the users when we are able to make this optimization'"
9472,509004584,"b'Pushed against 4.2, while it is relevant for 4.1'"
9413,509106716,b'Fixed tests and separated the client ops'
9479,509544208,b'I will do 4.1 to 4.2 merge'
9486,510580803,b'rebased and ready to merge'
9495,510640426,"b'@jonstelly We would like to avoid exposing those. If needed you can use `Activator` to create instances of those. FYI, client library is under MIT license.\r\n\r\nThe issue with exposing this to public is that it becomes a part of public API which we need to maintain in a more organized manner e.g. we need to maintain source-level or binary-level of compatibility when changes are being applied. When it is internal then those rules are less strict and we can apply more drastic modifications if needed, including major refactoring and method signature changes.'"
9495,510640936,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jon Stelly (967068+jonstelly@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
9495,510641649,"b""That makes sense, thanks for the quick reply.  I'll head in the Activator direction."""
9486,511180215,"b""I'm investigating NRE around the thread pool area please don't merge yet:\r\nUnhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Sparrow.Json.JsonContextPoolBase`1.MaybeGetCurrentContextStack() in C:\\work\\4.2\\ravendb\\src\\Sparrow\\Json\\JsonContextPoolBase.cs:line 173\r\n   at Sparrow.Json.JsonContextPoolBase`1.CleanThreadLocalState() in C:\\work\\4.2\\ravendb\\src\\Sparrow\\Json\\JsonContextPoolBase.cs:line 194\r\n   at System.Action.Invoke()\r\n   at Sparrow.Utils.ThreadLocalCleanup.Run() in C:\\work\\4.2\\ravendb\\src\\Sparrow\\Utils\\ThreadLocalCleanup.cs:line 11\r\n   at Raven.Server.Utils.PoolOfThreads.PooledThread.DoWork() in C:\\work\\4.2\\ravendb\\src\\Raven.Server\\Utils\\PoolOfThreads.cs:line 239\r\n   at Raven.Server.Utils.PoolOfThreads.PooledThread.Run() in C:\\work\\4.2\\ravendb\\src\\Raven.Server\\Utils\\PoolOfThreads.cs:line 187\r\n   at System.Threading.Thread.ThreadMain_ThreadStart()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()"""
9486,511181007,"b""This doesn't seem to be related to our changes"""
9486,511181199,"b'Create an issue for this please, then.'"
9494,511181243,b'Please fix the conflict'
9486,511181405,"b""apparently, it is related, i'll open a new PR for the fix."""
9300,511184202,"b""I'm pretty sure that we shouldn't be merging this to 4.1, _maybe_ 4.2 ?"""
9500,511287796,b'Can you check the failing build?\r\nPlease also check if we need to port this to 4.x'
9300,511297418,"b""We need to introduce it to both 4.1 and 4.2. \r\n\r\nThis PR is for 4.1, for 4.2 we'll need to have a separate one. Merging this PR and preparing the one for 4.2 can wait since we don't have a need to introduce any schema upgrade to 4.1"""
9300,511315962,"b""Di we need to merge it to 4.1? I don't think we are going to be doing much on it going forward"""
9300,511339824,"b""Yes, we need to merge it eventually (not right now) because we need to have consistent naming of schema upgrades between any 4.x version. Once Pawel will be back we'll get back to this and decide if we want to introduce this at this point - IMO I think we're good"""
9502,511371459,"b""@haludi Please rebase your branch agains v4.2 where .net core has been updated so Jenkins will be able to run tests (currently it's failing doe to .net core mismatch)"""
9500,511386887,b'> Can you check the failing build?\r\n> Please also check if we need to port this to 4.x\r\n\r\nWe have some troubles to run jenkins on 3.5 version. @arekpalinski \r\nIt finished on 3rd try.\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v3.5/35154/\r\n'
9507,511793394,b'will reopen in 4.1 '
9512,511873175,b'I think that this is a very expensive way to ensure uniqueness.\r\nMaybe we can hash the ticks with the term and index (with a reversible hashing method) to generate a unique timestamp and when we read the TVR we can un-hash the value to get back the ticks.'
9512,511882538,b'Or use compound key '
9512,511888648,"b""1. This is an indexed field, if you will hash it, you mess up the search.\r\n2. Right now this called under the write lock, so this shouldn't be really CPU consuming.  """
9494,512144401,"b""@maximburyak or @ayende - I'd like to have 2nd PR approval in order to merge this one"""
9501,512225281,b'@talweiss1982 can we close this PR. the same changes we have in https://github.com/ravendb/ravendb/pull/9511 right?'
9501,512230582,b'Yes'
9501,512234985,b'Closing in favor of https://github.com/ravendb/ravendb/pull/9511'
9518,512782407,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13847'
9518,512793883,b'Please create a test case for this'
9519,513312140,b'I think that regardless to this fix we have AVE in 32 bit :/'
9519,513325723,"b""I'm still not 100% sure, but... \r\nThe way we are getting the `ActiveDataSmallSection` is as following:\r\nhttps://github.com/ravendb/ravendb/blob/71ea31731fbd3ead4aa0d09ef2902d4ba0d5340c/src/Voron/Data/Tables/Table.cs#L44\r\n\r\nAnd when we delete a section we forget to update this value, so in the next tx we loading the wrong page."""
9519,513532135,b'Closing and reopen in 4.1 since is has to be done there also. (https://github.com/ravendb/ravendb/pull/9520)'
9525,513715572,"b""I've scheduled another CI build (previous one has failed due to timeout - don't think it's related though)\r\n\r\n@karmeli87 Approved by you?"""
9524,513715960,b'@karmeli87 Please review'
9525,513719558,b'Yes'
9524,513720857,b'looks good'
9528,513789967,"b""@myarichuk so we don't need this? https://issues.hibernatingrhinos.com/issue/RavenDB-13853#focus=streamItem-67-39514.0-0"""
9535,514223682,b'Do we want to add this to Linux package? Or maybe run in docker build.'
9535,514225285,"b'mmm.... I think yes, as docker users might want this in a debugging process.'"
9536,514557938,"b""Related comment explaining we didn't just set NumberOfPagesInSection accordingly in 32bits: https://github.com/ravendb/ravendb/pull/8790#discussion_r260174091"""
9528,514566593,b'SkippedResults is meant to be used only when paging through tampered query results - https://ravendb.net/docs/article-page/4.2/Csharp/indexes/querying/paging#paging-through-tampered-results'
9544,514672709,b'Can you also add a test?'
9541,514923440,"b""Can't we use CSS for that? """
9522,514926294,b'LGTM'
9527,514976768,b'LGTM'
9542,514977671,b'We need this for 4.1 as well'
9541,514981943,"b""1. Closing this pr and passing to @Rafal Kwiatkowski to solve with CSS only\r\n2. Will open a different issue for the 'Copy Id' issue \r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-13871"""
9549,515382328,b'A lot of tests have failed '
9557,515958446,"b""@ayende that's why I didn't touch bulk insert and smuggler, it's much trickier there.."""
9561,516301166,"b'Correct, the comparer was executing:\r\n\r\n```\r\n        public int GetHashCode(DatabaseChangesOptions n)\r\n        {\r\n            return n.GetHashCode();\r\n        }\r\n```'"
9549,516405082,"b""Please check the test build which was aborted - https://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/1723/console\r\n\r\nI've scheduled the tests once again"""
9549,516405546,b'Nvm - I see you aborted it'
9557,516407469,b'@maximburyak Could you check failing tests'
9557,516737680,b'@maximburyak can you take a look at whitespace issue also?'
9566,516919121,b'Closing - I need to fix tests....'
9557,518140788,b'pushing a rebase'
9573,518578425,b'This is the last one (promise)'
9584,519439070,"b'for the LiveHire scenario, 25% of the execution time was idfExplantion but they had a mix of facet and highly nested queries.\r\nWhen i ran on small input only on facets it reduced the idfExplanation from 68ms to 1ms but the total query time was around 10 sec so its not much in % \r\nI can run the numbers on the full input if you wish.'"
9570,519489387,b'Handled here: https://github.com/ravendb/ravendb/pull/9584'
9585,519516724,"b""Added 1 more commit. We cannot update LastRequestTime when accessing this endpoint, doesn't make a lot of sense."""
9587,520375218,"b'@ayende when we delete documents we don\'t actually zero the disk so we get ""revisions"" of documents.\r\nMy guess is that somebody modified the number of documents generated and deleted (like Karmel works on revisions) this left more dead documents in the data file and we recover them.\r\nThe changes that probably caused this to fail were probably reverted, this test failed once in the last 175 runs I don\'t really think there is an actual bug here just false negative.'"
9587,520392724,b'@talweiss1982 I see that some failures happened not so long ago and I do not recall any revision changes in that time of period. Check here: https://jenkins.hibernatingrhinos.com/job/Testsv42_Linx64/760/testReport/SlowTests.Issues/RavenDB_8451/Slow_tests___CanRecoverEncryptedDatabase/history/'
9587,520406758,"b'still, I have no way to reproduce this we can close this PR and let it fail.'"
9587,520416780,b'Maybe we need to try to reproduce this on the same scratch? I see that it fails on linux from time to time. Have you tried that?'
9587,520422262,"b""I have no idea how to start debugging a Linux scratch machine and I don't\nbelieve this is a real bug in recovery it is more likely a different\nbehavior in the data file and its better that somebody from @Adi Avivi\n<adi@ayende.com> team will look into it.\n\n\nOn Mon, Aug 12, 2019 at 4:05 PM Pawe\xc5\x82 Pekr\xc3\xb3l <notifications@github.com>\nwrote:\n\n> Maybe we need to try to reproduce this on the same scratch? I see that it\n> fails on linux from time to time. Have you tried that?\n>\n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/9587?email_source=notifications&email_token=ACA6CVNKRZA7TS4XA3QSLM3QEFN23A5CNFSM4IK3XLO2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4CO4DA#issuecomment-520416780>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ACA6CVOTEGOFQ6DVE5SGZU3QEFN23ANCNFSM4IK3XLOQ>\n> .\n>\n\n\n-- \n<https://ravendb.net/> *Tal Weiss*\n*Senior Developer   /   Hibernating Rhinos LTD\n<https://hibernatingrhinos.com/>*\nMobile:  972-54-8024849\nSales:  sales@ravendb.net\nSkype:  talweiss1982\nSupport:  support@ravendb.net\n<https://www.facebook.com/pages/RavenDB/265907650186374>\n<https://twitter.com/ravendb>\n<https://www.linkedin.com/groups/RavenDB-4499263>\n"""
9587,520717987,"b'Leaving this for now. It looks like the test is not deterministic, because recovery can start before we flush, which affects number of results. I will talk to @aviviadi once he is back to handle this.'"
9608,522705832,b'@karmeli87 can we write a test for this?'
9609,522906590,b'This PR needs the following **Cloud** PR:\r\n`https://github.com/hibernating-rhinos/cloud.ravendb.net/pull/310`'
9619,524221229,b'Probably we need to add button to do that to Studio.'
9619,524760366,b'@ml054 can you check failing test?'
9612,524790264,"b""@garayx Could you please put some comments explaining the fix? I see two changes which aren't obvious:\r\n\r\n1) Instead of `nodePos = (ushort)(p.LastSearchPosition - 1);` we have `p.LastSearchPosition--;`\r\n\r\nhttps://github.com/ravendb/ravendb/pull/9612/files#diff-7fb829b9a1744e81c63ac57d621fd9d3R710\r\n\r\n2) We no longer check if `cursorPage.Search(_llt, key) != null`\r\n\r\nhttps://github.com/ravendb/ravendb/pull/9612/files#diff-d4f93dbb7f53a0819794ef3011a2da17R68\r\n\r\nIt would be nice to have some reasoning here that explains why we changed that so if we get back to this PR in the future we'll understand the changes without the need to actually debug it."""
9627,525191739,b'*Looking into failed tests'
9620,527078448,b'2nd part will be handled by @aviviadi '
9648,527419444,"b'Did `CpuCreditsBalance.RemainingCpuCredits = Math.Max(CpuCreditsBalance.BackgroundTasksThreshold, CpuCreditsBalance.FailoverThreshold) + 1;`'"
9612,528262300,"b""We still assign `p.LastSearchPosition - 1` to `nodePos` see:\r\nhttps://github.com/ravendb/ravendb/pull/9612/files#diff-7fb829b9a1744e81c63ac57d621fd9d3R744\r\nonly difference that we assign it with _actually_ decreasing `p.LastSearchPosition` value, which should be decreased regardless the result of `cursorPage.Search()`, the issue that we didn't decrease the `p.LastSearchPosition` value which led the search skip returning the value if it was the last value in the tree."""
9652,528281798,b'1. Is `RavenDB-13726 ` used in commits the valid issue number - https://issues.hibernatingrhinos.com/issue/RavenDB-13726?\r\n2. There are 2 test failures'
9612,528286366,"b""Yes, I see that we still assign to `nodePos` but as you noted, now we decrease `LastSearchPosition` _while_ searching for a given key. I just wanted you to confirm that's really the case.\r\n\r\nWhat about my second point, that we no longer check if `cursorPage.Search(_llt, key) != null` ?"""
9612,528294318,"b""That was intentional.\r\nThe issue is if I'm making a search on a key that doesn't exist (for iteration), then the `Search` will return null, but we need to ensure that the location of the position is proper, according to whatever the current key is `>` than the one we checked"""
9612,528296266,b'Makes sense. Thanks!'
9652,528348600,b'Closing this in favor of https://github.com/ravendb/ravendb/pull/9656'
9657,528383472,b'https://issues.hibernatingrhinos.com/issue/RavenDB-13844'
9657,528825673,b'@ml054 Please review Studio part'
9653,528868555,b'Additional work on top of this: https://github.com/ravendb/ravendb/pull/9662'
9675,529192907,b'This is draft PR (RavenServer.cs going to have different impl)\r\nThe PAL code is for review though'
9712,534873640,b'LGTM'
9675,535443033,b'comments fixed in https://github.com/ravendb/ravendb/pull/9723'
9723,535443314,b'Comments were published also at https://github.com/ravendb/ravendb/pull/9675. The above tries to solve them too. '
9740,537916841,b'We will handle that in a different way. Karmel will open a new PR.'
9748,538267204,b'@grisha-kotler please create an issue in RDoc to fix that'
9746,538267843,b'@grisha-kotler can you check failing tests?'
9748,538756428,b'https://github.com/ravendb/docs/pull/1087'
9367,539997703,b'Rebased: https://github.com/ravendb/ravendb/pull/9759'
9767,541156508,"b'Looks okay, otherwise'"
9744,542201804,"b'This is large and complex change that touch many places in a very fundamental component of RavenDB, my main concern is that this will break the current behavior of features and the interaction between them.\r\n\r\nFor now reverting to this commit https://github.com/ravendb/ravendb/commit/e28daed194af8723c9c611cfcd68fe9fa0258a92\r\n will be in my opinion the best option, since it fixes the original issue and doesn\'t change current behavior. \r\n\r\nAs for the issue of ""notifying about raft index must mean that all the preceding indexes were executed as well"", this is relevante for `RachisLogIndexNotifications` on a _database_ level. \r\nEither we should completely drop it, or use the same technique as we did for the cluster state machine.\r\n\r\nPerformance benefits of the above PR can go later into v5.0'"
9803,545239824,"b'Not the same check.\nThat check handles verifying that you aren\'t adding the same node as the\none you are on.\n\nSo you can\'t add Node A from node A.\nBut you _could_ add Node B, however. Because the ServerId will not match\n\nOn Tue, Oct 22, 2019 at 3:24 PM Karmel <notifications@github.com> wrote:\n\n> *@karmeli87* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Handlers/Admin/RachisAdminHandler.cs\n> <https://github.com/ravendb/ravendb/pull/9803#discussion_r337483065>:\n>\n> > @@ -419,13 +419,6 @@ public async Task AddNode()\n>                                  $""Adding a new node to cluster failed. The new node is already in another cluster. "" +\n>                                  $""Expected topology id: {topologyId}, but we get {nodeInfo.TopologyId}"");\n>                          }\n> -\n> -                        if (nodeInfo.CurrentState != RachisState.Passive)\n>\n> This check seems to be redundant.\n> for not adding the same node twice we have this:\n>\n> https://github.com/ravendb/ravendb/blob/b22d8f611e62bca6b5f055feee3ee69708904554/src/Raven.Server/Documents/Handlers/Admin/RachisAdminHandler.cs#L414\n>\n> \xe2\x80\x94\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/9803?email_source=notifications&email_token=AAA4RM4IYNPE2NEG6VYX7K3QP3WH3A5CNFSM4JDOOHC2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCIYGLBQ#discussion_r337483065>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAA4RM2MDB6ZTAJVKOOTRDLQP3WH3ANCNFSM4JDOOHCQ>\n> .\n>\n\n\n-- \n<https://ravendb.net/> *Oren Eini*\n*CEO   /   Hibernating Rhinos LTD <https://hibernatingrhinos.com/>*\nMobile:  +972-52-548-6969\nSales:  sales@ravendb.net\nSkype:  ayenderahien\nSupport:  support@ravendb.net\n'"
9808,545764734,"b""Maybe we should call it alias, it isn't actually a path\n\nOn Wed, Oct 23, 2019 at 7:11 PM Aviv <notifications@github.com> wrote:\n\n> *@aviv86* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Client/Documents/Session/Loaders/IncludeBuilder.cs\n> <https://github.com/ravendb/ravendb/pull/9808#discussion_r338143765>:\n>\n> > @@ -331,5 +375,50 @@ private void WithAlias(Expression<Func<T, string>> path)\n>              if (Alias == null)\n>                  Alias = path.Parameters[0].Name;\n>          }\n> +\n> +        private void IncludeTimeSeries(string path, string name, DateTime from, DateTime to)\n>\n> we can include time series of related documents by path\n>\n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/9808?email_source=notifications&email_token=AAA4RM2RFNPMLWJL2T3NKEDQQBZULA5CNFSM4JD7SRA2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCI6W2YA#discussion_r338143765>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAA4RMZWR46WAAHWX3EXUPLQQBZULANCNFSM4JD7SRAQ>\n> .\n>\n\n\n-- \n<https://ravendb.net/> *Oren Eini*\n*CEO   /   Hibernating Rhinos LTD <https://hibernatingrhinos.com/>*\nMobile:  +972-52-548-6969\nSales:  sales@ravendb.net\nSkype:  ayenderahien\nSupport:  support@ravendb.net\n"""
9786,546678980,"b""Eventually we will unify database and server rachis notifications.\r\n\r\nThe problem is that upon failure we don't know which change is the problematic one, since we merge and scan for changes in all features for a database record change.\r\n\r\nSo we need to implement something similar as started here: https://github.com/ravendb/ravendb/pull/9744"""
9822,546842697,b'Beside those small remarks LGTM'
9822,546853343,"b'@ppekrol Agreed, LTGM'"
9832,546968400,b'@aviviadi Can we add test for that?'
9833,547317363,b'No need to change that: https://github.com/ravendb/ravendb/pull/9834'
9832,547769056,"b'We have ![validation in client](https://github.com/ravendb/ravendb/blob/v4.2/src/Raven.Client/ServerWide/Helpers.cs#L8) which prevents us from entering non english characters.. Studio seems non enforcing these rules.\r\n\r\nThis validation, obviously, prevent unicode test to succeed.'"
9839,548091976,b'@aviviadi Have you seen those failures? https://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2281/testReport/ \r\nAny idea?'
9746,548101064,"b""Let's reopen when fixed."""
9723,548760580,"b'Please create a new, clean, PR'"
9839,549297299,"b'> \r\n> \r\n> @aviviadi Have you seen those failures? https://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2281/testReport/\r\n> Any idea?\r\n\r\nI believe this is related to : RavenDB-13990, not here..  '"
9839,549299106,"b""Let's rebase this PR then."""
9839,549349583,b'Rebased'
9862,550354671,b'We will reopen when needed.'
9870,551079855,"b""What about handling those characters in collection name? We saw issues like:  https://issues.hibernatingrhinos.com/issue/RDBS-47\r\nwhere document ID was fine but `@collection` metadata was corrupted (client side probably) and that resulted in throwing NRE on database startup because we couldn't find a relevant tree for given collection name.\r\n\r\nShould it be also supported?"""
9870,551084664,"b'We certainly need to at least test such collection names, yes'"
9871,551098726,"b""oookey.. I understand from @karmeli87 there's might be use of url and few certificates. \r\nI will rebase and remove the cache commits, and will create general thread safe Executor cache. """
9840,551114659,"b""Please hold on with merging this PR until I'll figure out why Debug.Assert is occasionally failing: \r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-12932#focus=streamItem-67-42158.0-0"""
9871,551445874,"b""We're getting a lot of test failures on this PR. Sample builds:\r\n\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2370/\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2374/\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2373/\r\n\r\nTimeout:\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2375/console"""
9870,552210643,b'@arekpalinski the `@collection` creation going trough same piece of code\r\nhttps://github.com/ravendb/ravendb/blob/v4.2/src/Raven.Server/Documents/DocumentsStorage.cs#L1846'
9869,553892760,"b""I've created new PR here: https://github.com/ravendb/ravendb/pull/9881\r\n\r\nas I don't have push rights to @ayende repo."""
9869,554375957,b'Merged in https://github.com/ravendb/ravendb/pull/9881'
9875,554610599,"b""I've squashed everything into single commit so we won't have in the git history any changes from here that we introduced `IndexDefinitionBase` and `IndexDefinitionBaseServerSide` (that caused a lot files were modified) and then reverted it:\r\n\r\nhttps://github.com/ravendb/ravendb/pull/9884\r\n"""
9875,554610699,b'I will be applying all of the comments and TODOs from this PR in separate PRs and marking conversations as resolved here.'
9884,554675061,b'@karmeli87 @aviv86  Basic TS indexing functionality merged'
9885,554728836,b'Merging it. 2 tests will be fixed by @karmeli87 in separate PR'
9890,554902918,"b""I've scheduled test on Jenkins once again - it looks there was some glitch"""
9889,554916449,b'@garayx Why do we need this? Some test has failed'
9885,554917409,b'Tests fixed in https://github.com/ravendb/ravendb/pull/9886'
9875,554918420,b'Closing as it was merged in https://github.com/ravendb/ravendb/pull/9884'
9889,554965021,"b'> @garayx Why do we need this? Some test has failed\r\n\r\n@arekpalinski if NoDisposalNeeded doesnt derive from LinuxRaceConditionWorkAround, I am getting excpetion and cannot get the output from test. \r\n\r\nI will check the tests.'"
9888,554987331,"b'Same as previously, first time in the `ctor` of `RevisionsStorage` and then updated by `InitializeFromDatabaseRecord`.'"
9892,555102419,b'Do we need to change anything in the studio?'
9892,555165613,"b'Yes, when re-ordering database nodes we need to add an option to ""fix"" this order.'"
9890,555377708,b'Can you please resolve conflicts?'
9892,555379048,b'Will you need @ml054 to take care of it?'
9889,555382719,b'CC @topalach '
9890,555668253,b'Rebased'
9893,555916514,b'Done'
9871,555971586,b'Closed and pull requested again at : https://github.com/ravendb/ravendb/pull/9882'
9882,555972076,b'Lets see if passes tests first'
9898,555973086,b'Some tests have failed'
9865,559087594,"b""Please clean up this PR, so we'll have only your changes here"""
9865,559088340,b'It is cleaned\r\n'
9865,559089870,"b""Oh, I saw a lot of additional commits there that weren't related.\r\nThanks, looking into it again now"""
9903,559449717,"b""@maximburyak I've run test on this PR a few times and saw repeatable failures of `SlowTests.Cluster.ClusterMaintenanceTest.RavenDB_14044` . Could you check this?\r\n\r\nSample builds:\r\n\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2449/\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/2441/"""
9916,560420571,"b""@ayende Could you check @karmeli87's answers and please approve if it's fine"""
9922,561531819,b'@garayx please check failing tests'
9920,561543079,"b'Explanation of this change for future:\r\nWhen MaxIdleTime is hit, GC can collect the service point and new one will get default values'"
9589,561546092,b'Closing for now.'
9794,561546709,b'This is causing a lot of test failures. Closing due to inactivity. Please reopen when fixed.'
9932,561822767,b'Those changes are causing `EarlyOutOfMemoryException`'
9945,563983101,b'@grisha-kotler please check Backup part\r\n@arekpalinski please check ETL part'
9933,564914337,"b'After all of the comments I realize that it would be better to implement a ""copy constructor"" to clone the command, instead of trying to make the command thread-safe.'"
9959,565577804,b'TODO:\r\n- Map-Reduce (I suspect it should work out of the box)\r\n- Session should not track those results\r\n- Session.Query - check isMapReduce usage'
9900,566040330,"b""Let's reopen when ready."""
9968,566213707,b'@karmeli87 can you check failing test?'
9954,566218228,"b'@Danielle9897 What about the tooltip ? Is it separate issue, or we should wait here?'"
9954,566420571,b'@ml054 \r\nTooltip will go in issue RavenDB-14330. \r\nAll comments fixes are now committed to this PR - can be merged (from my side)\r\n\r\n\r\n'
9954,566433055,b'@Danielle9897 please rebase and fix conflicts'
9964,566454161,b'why do this?'
9954,566484265,b'@ppekrol \r\ndone - rebased and pushed again'
9964,566499614,"b'Merged by accident, before review. We have handled that.'"
9968,566500327,b'should be fixed now'
9954,566558343,b'ok time to merge'
9972,567003476,"b""@ayende I've added the following commit to preserve casing in metadata: https://github.com/ravendb/ravendb/pull/9972/commits/53b11c6894cb983d877e83ba9e9050cdaae1bcee"""
9977,567523089,b'@karmeli87 One more thing came up do my mind. How `DeleteTombstoneIfNeeded` will behave then?\r\n\r\nWill a tombstone with suffix be deleted on document put?'
9977,567652905,b'@arekpalinski You are correct.\r\n`DeleteTombstoneIfNeeded` will delete only the tombstone of the relevant collection'
9997,568525034,b'Can we have a test for this?'
9997,568677785,"b'> Can we have a test for this?\r\n@grisha-kotler \r\nYes, on progress'"
9567,570065718,"b'Closing for ""second"" round (current changes will be used by @myarichuk)\r\n@myarichuk - please bookmark this PR.'"
10003,570184055,b'@ayende can you do final review?'
10013,570499264,b'```\r\n- Normal     (toggle - on by default) \r\n  - with indexing errors only  (toggle - off by default)\r\n```'
10013,570926065,b'https://issues.hibernatingrhinos.com/issue/RavenDB-14332#focus=streamItem-67-43581.0-0'
10020,571065875,"b'> This still needs to be updated in the UI, right?\r\n\r\nActually, I added the flushed journal report to the rest of the journals report so the stats view is fine now and no need for further steps in the UI'"
10020,571467667,b'It would be nice to expose the newly added property `Flushed` on the UI'
10023,571528910,b'Can we have a test for this?'
10044,573079756,"b""Hi,\r\n\r\nthank you for submitting a bug. I'm looking into this: https://issues.hibernatingrhinos.com/issue/RavenDB-14461"""
10044,573088134,b'PR: https://github.com/ravendb/ravendb/pull/10045'
10042,573393753,"b""Why is this needed? I don't believe that we are supporting HTTP 2.0 at the Kestrel level, do we?"""
10053,573554402,b'done'
10053,573560071,b'test is failing'
10068,574673469,"b'Merge issues, I will fix then reopen'"
10068,574818995,"b'The merge with current v4.2 is still bad, it causes AVEs in tests. Will reopen when the merge will properly work.'"
10075,576008224,"b'@ppekrol, there is no test because of this:\r\nhttps://github.com/ravendb/ravendb/blob/v4.2/test/SlowTests/Authentication/AuthenticationClusterTests.cs#L1'"
10079,576238050,b'Merged this to https://github.com/ravendb/ravendb/tree/features/sharding'
10082,576641360,b'Closing this PR -  please review this one instead:\r\nhttps://github.com/ravendb/ravendb/pull/10086\r\n\r\n'
10044,576821700,"b""Hi,\r\n\r\nI tested with 4.2.8.  I still get the same error.\r\n\r\n\r\n> System.InvalidOperationException: Cannot execute 'GetDocuments' before operation execution.\r\n>    at Raven.Client.Documents.Session.Operations.LoadOperation.GetDocuments[T]() in C:\\Builds\\RavenDB-Stable-4.2\\42034\\src\\Raven.Client\\Documents\\Session\\Operations\\LoadOperation.cs:line 133\r\n>    at Raven.Client.Documents.Session.AsyncDocumentSession.LoadAsync[T](IEnumerable`1 ids, CancellationToken token) in C:\\Builds\\RavenDB-Stable-4.2\\42034\\src\\Raven.Client\\Documents\\Session\\AsyncDocumentSession.Load.cs:line 45\r\n>  \r\n"""
10044,576824836,b'@awyl can you show me your session code? Or create a failing test: https://ravendb.net/docs/article-page/4.2/csharp/start/test-driver'
10044,576867072,b'Here is a test that generate the same error on my machine.\r\n\r\n```csharp\r\n\r\n[Fact]\r\npublic async Task FindByEmptyCollectionShouldWork()\r\n{\r\n    using var store = GetDocumentStore();\r\n    using var session = store.OpenAsyncSession(new Raven.Client.Documents.Session.SessionOptions\r\n    {\r\n        NoTracking = true\r\n    });\r\n\r\n    var ids = new string[] {};\r\n    var objs = await session.LoadAsync<Art>(ids);\r\n\r\n    Assert.NotNull(objs);\r\n}\r\n```'
10044,576895973,"b""@awyl Many thanks for a repro. This is something that we haven't considered.\r\n\r\nI've opened a PR: https://github.com/ravendb/ravendb/pull/10092"""
10044,576929759,b'Thanks!  Any idea when a new nuget will be released?'
10091,577053221,"b'See workaround here: https://support.apple.com/en-il/guide/mac-help/mh40616/mac\r\n\r\nOur binaries are signed, but it appears that Mac now requires a key from Apple.'"
10091,577053477,b'https://issues.hibernatingrhinos.com/issue/RavenDB-14528'
10044,577073490,"b'We just released stable, expected date of next one is in around 6 weeks. We are now in a process of migrating to .NET Core 3.1, before the release we need to test it properly.\r\n\r\nWhat I would suggest, since this is a Client API issue only, is to use 4.2.9 nightly package from https://myget.org/gallery/ravendb\r\n\r\nOnce this PR is merged I will release a nightly for you to check.'"
10091,577092286,b'try to use `sudo spctl --master-disable` to allow all apps'
10044,577154695,"b""I've merged the PR, it should be available on MyGet in around 1h. Closing for now."""
10108,578614508,"b""I've tested the above code, it doesn't flush scratches (which are all created at size of 32MB and not resizing more then that).  \r\nAlso on idle after importing 5M Docs we have 1G mapped area in the pager.  We should have 0. \r\n\r\n"""
10108,578679230,"b""> \r\n> \r\n> I've tested the above code, it doesn't flush scratches (which are all created at size of 32MB and not resizing more then that).\r\n> Also on idle after importing 5M Docs we have 1G mapped area in the pager. We should have 0.\r\n\r\nWorking on it now."""
10124,580829650,b'Does document has a record of pointed attachments ? (hash / other id)'
10127,581053280,"b'If I upload/download a backup that takes more than 10 min, the connection will be closed?'"
10125,581055826,b'I think we also want to remove the usage of `ThreadLocal` in the client.\r\nTwo can be found here:\r\nhttps://github.com/ravendb/ravendb/blob/af3b7efe4e16d961ed146b386da0569867da9c12/src/Raven.Client/Documents/Conventions/JsonNetBlittableEntitySerializer.cs#L13'
10127,581062980,b'If I understood this https://github.com/dotnet/runtime/issues/18348#issuecomment-415845645 correctly then it should not happen.'
10125,581065104,"b'> I think we also want to remove the usage of `ThreadLocal` in the client.\r\n> Two can be found here:\r\n> https://github.com/ravendb/ravendb/blob/af3b7efe4e16d961ed146b386da0569867da9c12/src/Raven.Client/Documents/Conventions/JsonNetBlittableEntitySerializer.cs#L13\r\n\r\nThose are probably going to be only twice per DocumentStore, which means that they are likely _very_ small. \r\nI want to first see that everything is fine with the actual impl'"
10125,581075218,b'Rebased and used newest Lucene'
10124,581144531,"b""Decision: To change the Recovery process from 'exporting recovered database into a smuggler dump file' to a 'new recovered database' where instead of importing the recovered data, we actually use the db api and create a complete new db (named in example: MyDB_Recovered_Date). It really simplifies recovery process and make it a lot more accurate and not protocols bounded. """
10133,581165893,b'Can we have a test for this?'
10133,581336106,b'Done'
10141,581700557,b'Google group link\r\nhttps://groups.google.com/forum/#!searchin/ravendb/rotational%7Csort:date/ravendb/vdA66PE0p6o/wSCLNjDUAAAJ'
10141,581745420,b'This might give an idea\r\nhttps://source.puri.sm/guido.gunther/linux-next/commit/53978d0a7a27eb036b9bf33c4caa06257a9dbed7'
10141,581786030,"b'Fix can be a simple one liner at/after https://github.com/ravendb/ravendb/blob/9b5313689310f4938c0c2f9a4385e9fad2708cfe/src/Sparrow.Server/LowMemory/CheckPageFileOnHdd.cs#L423\r\n\r\nif (disk.Equals(""ram"", StringComparison.CurrentCultureIgnoreCase)) continue;\r\n'"
10141,581854443,b'Can you send a PR for this?'
10140,581890588,b'We have a failure with new debug messages available. We can continue work.'
10148,582187695,b'CLA has been signed and commit message fixed. Not sure how to re-trigger.'
10141,582381151,b'I sent a PR but did cla/sign and fixed commit message after sending the PR.'
10154,582462549,b'Still good.\r\nAdded to the test'
10157,582466403,"b""It's already set to false. (The last variable is checkCertificateRevocation)\r\nhttps://github.com/ravendb/ravendb/blob/a544f15faa10713a187b1479bf048911c1c5218b/src/Raven.Server/RavenServer.cs#L2211"""
10157,582470123,"b""Let's use the SslServerOptions overload, instead.\r\nThere are more options that we turn off there. \r\n"""
10157,582476729,"b'Does it have some impact on security? I know that on the other side, timeout on check kills us. \r\n'"
10157,582477162,"b""No impact on security, we aren't relying on the CRL and we actually get better security by NOT doing this."""
10157,582477629,b'May I ask why is it better?'
10157,582480070,"b""@ml054 \r\na) Questions are always welcome, especially in such a situation where it is not always obvious what is going on.\r\nb) The security issue is that if we leave our own system, we may be subject to DoS attack. You can do that without needing any credentials, by connecting to us with a bad cert that has a CRL URL that won't respond. That can hold up the thread.\r\nDo that 100 times, and there are no threads available, we are down.\r\n\r\nThere is no security impact because if the CRL is not available, we fail open and accept the cert. We have documented that we don't rely on PKI (and hence, CRLs) for client auth, so that is known."""
10157,582482810,"b""oh right, I forgot that we have second fence to force before breaking in, as having valid cert isn't enought to access system. Thanks for answer. :)"""
10152,582879233,"b'When the index has errors (doesn\'t matter which type regular or not), don\'t\nwe want to actually mark it as failed as fast as possible?\nBecause from my perspective the index should get errors only during the\nindex build stage, in this case we want to show the user that the index\nfaulty as fast as possible so he can rework it.\nWhat is the chance that an index that is working in application\nsuddenly will start to fail ? I dont think they are big, and if it does ? I\nthink we still want to mark the index as faulty.\n\nTell me your decision, so I can make a commit to change it back.\n\nOn Thu, Feb 6, 2020 at 12:00 PM Arkadiusz Pali\xc5\x84ski <notifications@github.com>\nwrote:\n\n> *@arekpalinski* commented on this pull request.\n> ------------------------------\n>\n> In src/Raven.Server/Documents/Indexes/MapReduce/ReduceMapResultsBase.cs\n> <https://github.com/ravendb/ravendb/pull/10152#discussion_r375739805>:\n>\n> > @@ -335,7 +335,7 @@ private void WriteLastEtags(TransactionOperationContext indexContext)\n>\n>                          _index.ErrorIndexIfCriticalException(e);\n>\n> -                        HandleReductionError(e, reduceKeyHash, writer, stats, updateStats: parentPage == -1, page: leafPage);\n> +                        HandleReductionError(e, reduceKeyHash, writer, stats, updateStats: true, page: leafPage);\n>\n> That\'s the point - threshold limit for marking an index as error. And\n> that\'s why we updated the stats only if parentPage == -1.\n>\n> Note that in your case the error was triggered by *bug* in RavenDB. It\'s\n> not ""regular"" indexing error - like invalid index definition, invalid\n> documents to index etc.\n>\n> After your change we\'re going to mark index as faulty *much faster*\n> because we\'ll error multiple times because of the same error - at leafs\n> level (which is going to be a lot) and the same at branch levels. We\n> shouldn\'t behave this way for ""regular"" indexing errors.\n>\n> The current behavior is fine IMO - we had a bug in RavenDB, we put it as\n> index error so user can get back to us and let us know about it (no error\n> was hidden). Marking index as error would be good in this particular case,\n> but your change affects ""regular"" indexing errors and how fast we mark\n> indexes as faulty.\n>\n> \xe2\x80\x94\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ravendb/ravendb/pull/10152?email_source=notifications&email_token=AAPDAAH6KPQDCRXMDYOV7ZTRBPNUHA5CNFSM4KQLFCLKYY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCUPJI7A#discussion_r375739805>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAPDAACC4H5THPKN7RGA7RDRBPNUHANCNFSM4KQLFCLA>\n> .\n>\n'"
10152,582891928,"b""I don't want to change that behavior. I'm afraid this could be a breaking change  - for large indexes we can have thousands of leafs so any errors detected there could make index as faulty very early while currently this index index is able to return some results - regardless the errors (which are always bad and user should fix them asap)\r\n"""
10152,582892106,"b""So please let's revert this change"""
10158,582911017,b'We need to rebase and fix NREs'
10168,583834713,b'pls use this PR instead:\r\nhttps://github.com/ravendb/ravendb/pull/10174'
10138,583851022,"b'Added an implementation of the service, it should do inserts to InfluxDB. \r\n* Note the **readme.txt** - for convenience, it contains docker commands to set up local environment (influx + influx UI + grafana)\r\n* Note the *InfluxTag* attribute on the row object - it allows InfluxDB to group-by on that field'"
10178,583991848,"b""I've rebased your PR."""
10154,583993876,b'Rebased'
10166,583998042,"b""There is one thing that still needs to be done here. We need to _convert_ the dates from the UTC to the specified offset. \r\nNote that this needs to be done _before_ we do the group by, because it may change what *bucket* something will go on.\r\nFor example, if I do `group by 1d offset '02:00' `  , we'll want to see days in Israel's time"""
10154,584526990,b'@karmeli87 please check failing test'
10180,584529552,b'pls note: all test have **passed** for this pr in:\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/3005/'
10181,584593960,b'https://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/3007/\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/3008/\r\n\r\nScheduled two more builds. I think this is causing some instability.'
10153,584602061,b'We still need tests that cover Start/End dates.'
10201,586473637,"b""we have few failing tests, I didn't realize escaping throw for null value. """
10214,587058873,b'@Danielle9897 can you check compilation?'
10214,587070017,b'Fixed'
10198,588092053,b'@aviv86 can you rebase?'
10213,588772583,b'Looks good to me'
10247,590202540,b'@Danielle9897 will take care of the studio part in this PR'
10253,590220185,b'Can we have a test for this? You can return number of removed/refreshed documents from `CleanupDocs` and use it in the test.'
10255,590303742,"b""Really interesting, might also be related to yesterday's support call"""
10253,590766898,b'done'
10266,591401936,"b'What do you mean? "" set affinity"" ?'"
10267,591891004,b'Please fix compilation.'
10266,591895633,"b'> What do you mean? "" set affinity"" \r\n\r\nI didn\'t understand the remark. To what place in code is this referring to?'"
10266,591902554,"b'> > What do you mean? "" set affinity""\r\n> \r\n> I didn\'t understand the remark. To what place in code is this referring to?\r\n\r\nIf refers to your comment at the top of the PR:\r\n```\r\nFor now, Raven.voron executable needs linux capabilities to set affinity, and will have to be refactored.\r\n```'"
10148,593068319,b'commit moved to https://github.com/ravendb/ravendb/pull/10292 '
10141,593375259,b'Closed via https://github.com/ravendb/ravendb/pull/10292'
10307,593866105,b'Do we want this in 4.2?'
10298,594133680,"b'@Danielle9897 please rebase, there is a conflict on CsvStreamSource'"
10307,594135137,b'Probably we do'
10335,597165903,b'Please check compilation and CLA'
10335,597170391,b'Fixed compilation'
10340,597739722,b'+ as we discuss:\r\n- bring back red colors with shades when errors\r\n- remove double scrolls when error items'
10338,598031039,"b""Let's hold on merging this, I want to see if this solve the actual problem on the customer's end"""
10324,598426537,b'Do we have any numbers on the performance difference?'
10324,598596156,"b""Data:\r\n5,987,285 entries (SO Users)\r\n\r\nFollowing index:\r\n```\r\nfrom u in docs.Users\r\nselect new {\r\n    CreationDate = u.CreationDate\r\n}\r\n```\r\n\r\nQuery:\r\n```\r\nfrom index 'Users_ByCreationDate'\r\nwhere CreationDate >= '2016-03-06T16:16:18.520' and CreationDate <= '2016-05-06T16:16:18.520'\r\n```\r\n\r\nResults:\r\n1. Without optimization: 7,523 ms\r\n2. With optimization: 134 ms\r\n"""
10324,598596746,b'nice!'
10324,598602480,b'Those are some really impressive numbers'
10237,598903486,"b'Initial results, here is the sample data revisions without compression:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/76657678-12dbd100-657b-11ea-8fa4-f520201f92fe.png)\r\n\r\nAs you can see, we have 3.65 MB of table data. \r\n\r\nHere is the results with compression:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/76657714-2be48200-657b-11ea-9b98-c1cd98306fe7.png)\r\n\r\nSo total of 1.67 MB table data, so we are only taking 45% of the previous size.\r\n\r\nAs we have more revisions, we seems to get better rate, too.\r\n'"
10324,598914750,b'https://ayende.com/blog/190305-C/ravendb-5-0-optimizing-date-range-queries?key=8a0c7639616f40ee972cf6360be7920f'
10348,599535306,b'@Danielle9897 Please fix the test'
10344,599565698,b'Ready for final review now'
10348,599603445,b'Test fixed.'
10349,600276014,b'Tests are failing because of this change'
10349,600566123,b'We are still having issue with 1 test after this change'
10365,602172631,b'There is already options to do so:\r\nhttps://ravendb.net/docs/article-page/4.2/Csharp/client-api/configuration/identifier-generation/global#identitypartsseparator'
10365,602173277,b'Starting from 5.0 you will be able to define IdentityPartsSeparator server-side. Relevant issue is here: https://issues.hibernatingrhinos.com/issue/RavenDB-13456'
10365,602180402,"b'Thank you both for pointing me in the right directions. As this is already possible, I will close this issue.'"
10373,602788429,"b'This introduces a lot of binary-level compatibility issues. What I would suggest is:\r\n1) Move GlobalApplicationIdentifier to RequestExecutor\r\n2) Create a property, similar to `_disableClientConfigurationUpdates` and set it accordingly for relevant code paths or pass it via DocumentConvention (can be internal)\r\n\r\nThis way we will do the same thing, but handling will be easier, because it will be based on one value internally'"
10378,602798212,b'What is the difference between this and https://github.com/ravendb/ravendb/pull/9881 ?\r\nAlso the 5.0 one requires DatabaseAdmin only'
10378,603070161,b'Already have this feature. https://github.com/ravendb/ravendb/pull/9881'
10378,603070636,b'Please note that the https://github.com/ravendb/ravendb/pull/9881 is a 5.0 PR. Do we want to backport it?'
10373,603175986,b'Updated'
10246,603438532,b'Will reopen once we refactor the Time Series BatchCommand'
10383,603533449,b'TODO:\r\n\r\n- support for queries'
10386,604004662,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Aviv Rahmany (aviv@hrhinos.local)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
10380,605023757,"b""I've rebased"""
10392,605792452,b'Now the changes are localized to `RequestExecuter` only'
10396,605975791,b'@grisha-kotler there are couple of failing tests here. Can you take a look?'
10383,605982970,"b""I've added a TODO for this, this can be merged I think"""
10415,607208125,b'Removed few packages since they are installed in the base:\r\nhttps://github.com/dotnet/dotnet-docker/blob/d68460ceab4fe635d95a28bfca410db1a1d57caa/3.1/runtime-deps/bionic/amd64/Dockerfile#L7'
10417,607691519,b'Do we want this in the v4.2 branch? '
10417,607698810,"b'@karmeli87 comprehensive tests should be done in 5.0 branch and up, but 1-2 basic ones are good for fixing bugs.'"
1349,608006140,b'could this be integrated to raven 3.5? '
1349,608043494,"b""This fix is not relevant for version 3.x. We don't have any real usages of FixedSizeTrees there"""
10422,608372109,"b'I will review assignment of those icons, some something seems to be wrong. '"
10422,608421757,"b""ok everything is fine - I didn't PR my changes yet: https://github.com/ravendb/ravendb/compare/v5.0...ml054:RavenDB_14789?expand=1#diff-895d80925bf260119a2c93e9e73ebf03R120"""
10427,608581771,b'@aviv86 I removed the `DocumentId` from the `TimeSeriesOperation`'
10237,609426764,b'With compression:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/78501556-8d57d500-7764-11ea-9d9a-1d6fd7a3244c.png)\r\n\r\n\r\nWithout compression:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/78501565-98126a00-7764-11ea-869b-bb0e49baaec0.png)\r\n\r\nWe got it down by 20% !\r\n'
10237,609780696,"b""This is a big change, and it isn't completely done. Still need to handle recovery here.\r\nBut it is ready for review."""
10431,610199545,b'retest this please'
10431,610203176,b'closing and reopening so jenkins will see this PR'
10431,610214524,b'retest this please'
10427,610216325,b'retest this please'
10427,610216531,b'The previous commit was added to trigger jenkins PR tests.'
10428,610217384,b'retest this please'
10428,610217411,b'The previous commit was added to trigger jenkins PR tests.'
10429,610218807,b'retest this please'
10429,610218845,b'The previous commit was added to trigger jenkins PR tests.'
10432,610219044,b'retest this please'
10432,610219073,b'The previous commit was added to trigger jenkins PR tests.'
10418,610219287,b'retest this please'
10418,610219311,b'The previous commit was added to trigger jenkins PR tests.'
10417,610219425,b'retest this please'
10417,610219456,b'The previous commit was added to trigger jenkins PR tests.'
10405,610219523,b'retest this please'
10405,610219567,b'The previous commit was added to trigger jenkins PR tests.'
10237,610219849,b'retest this please'
10237,610219869,b'The previous commit was added to trigger jenkins PR tests.'
10405,610235825,b'![image](https://user-images.githubusercontent.com/6964706/78644207-2fd79b80-78be-11ea-8400-92fa0df56d9e.png)\r\n'
10405,610239652,b'![image](https://user-images.githubusercontent.com/6964706/78644551-b42a1e80-78be-11ea-8a70-0f68572538f7.png)\r\nAfter a large export'
10418,610452378,b'Rebased'
10418,610468048,"b""@haludi not all of the tests are passing. I've left (and renamed) the ones that I think are relevant. Can you take a look?"""
10423,610839278,"b""@ayende I've applied your comments. Removed isSecured from most of the configuration entries. Left few. Could you look at them?"""
10392,610848207,b'Rebased and disabled server-side tracking'
10366,611756283,b'Rebased.'
10443,611975265,b'It was Jenkins issue after all.'
10451,613067071,"b""Hello,\r\nI don't have access to Jenkins. So I don't know what's failing. Could someone please, help me with that?"""
10451,613308874,b'@cabelitos Thank you for contribution. The CI tests that fails is not related to your changes.'
10450,613345292,b'@karmeli87 ping me about this'
10439,613348051,"b""@garayx you resolved all of the comments, but I think you didn't push the changes?"""
10435,613354691,b'@karmeli87 can you check failing test here: https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.0/730/'
10451,613463399,b'@ppekrol thank you for your help. I really appreciate that.'
9300,614499332,b'Moved this to 5.0 and bumped all storages to 50_000'
10459,614720514,b'Closed in favor of: https://github.com/ravendb/ravendb/pull/10459'
10463,615871790,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jonas S (40868974+JnsSo@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
10464,615876132,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- Jonas S (40868974+JnsSo@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
10466,616079708,b'I found related issues to be considered\r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-14883'
10469,616227996,b'What actually caused the issue?'
10469,616349043,"b'We got the topology etag directly from the configuration.\r\nWhen comparing it, we used a different approach:\r\nhttps://github.com/ravendb/ravendb/blob/v4.2/src/Raven.Server/Documents/DocumentDatabase.cs#L1423\r\n\r\nThis happens only when there is/was a server-wide client configuration and we disabled the specific one for the database.'"
10477,617678668,"b'Okay, will throw a dedicated exception for that.'"
10476,618215542,"b""Results from testing.\r\n\r\nGetSort:\r\n![image](https://user-images.githubusercontent.com/116915/80068210-e20e9480-8547-11ea-9992-7f5ac39619be.png)\r\n\r\nLightweight thread usage:\r\n![image](https://user-images.githubusercontent.com/116915/80068226-ea66cf80-8547-11ea-8269-558d8d9fe6e5.png)\r\n\r\nI think we'll just give up on disposing on the closing of the thread. We didn't have it before, and it seems expensive.\r\n\r\nNotice the cost of IsStale:\r\n![image](https://user-images.githubusercontent.com/116915/80068266-feaacc80-8547-11ea-8d32-8adea3e96b13.png)\r\n\r\nWe need to account for `LastProcessedReferenceEtag`, but this is *encouraging*\r\n\r\n\r\nReturnRequestContext:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/80068328-18e4aa80-8548-11ea-9e17-61ca186e56f9.png)\r\n\r\nNote that we have the `RemoveAt` call there, which we should probably just skip.\r\nWe can clear the list and add the internal / external segments back directly.\r\n\r\nOpen Voron streams:\r\n![image](https://user-images.githubusercontent.com/116915/80068400-39ad0000-8548-11ea-834b-998c415a454b.png)\r\n\r\n\r\nOTOH, we need to have another look here:\r\n![image](https://user-images.githubusercontent.com/116915/80068416-42053b00-8548-11ea-83fd-4f51872d5dcd.png)\r\n\r\n"""
10482,618369042,"b""@grisha-kotler Can you elaborate on the root cause? As I understand we didn't recreate the writer after some exception what resulted in invalid Voron state of Lucene input / ouput files"""
10482,618385919,"b'We had a `VoronUnrecoverableErrorException`, the exception that was thrown was a `SystemException`. We tried to execute another indexing batch without recreating the writer.\r\n(modifying when the writer is already in an invalid state).'"
10476,618507209,"b'Something to be aware of, this is causing some test failures.'"
10476,618894810,"b""Yes, I'm looking at the test failures now"""
10488,619449753,b'Can you post profiler details?'
10482,619511013,"b""I really don't like this change, can we avoid modifying the exception hierarchy here?"""
10482,619520211,b'@grisha-kotler how Lucene is wrapping those exceptions? Can we check inner exception?'
10476,619536097,b'The last optimization gives us:\r\n![image](https://user-images.githubusercontent.com/116915/80306502-6a04d080-87cc-11ea-8d42-3a51ad22d1b4.png)\r\n\r\nFor dynamic queries.'
10488,619536461,b'See my impl here: https://github.com/ravendb/ravendb/pull/10476/commits/25bff973a815950525a2e067af642b16d16a75c7'
10482,619558123,b'https://github.com/ravendb/lucenenet/blob/3.0.3-netcore/src/Lucene.Net/Index/IndexWriter.cs#L4636\r\n\r\nWe can check the inner exception.'
10486,619773663,"b""Yes, it is a bug. It's reported here: https://issues.hibernatingrhinos.com/issue/RavenDB-14708. \r\n\r\nIf you could create a PR that would be awesome. See our contribution guidelines https://github.com/ravendb/ravendb/blob/v4.2/CONTRIBUTING.md#submitting-a-pull-request\r\n\r\nETL related tests can be found here: https://github.com/ravendb/ravendb/tree/v4.2/test/SlowTests/Server/Documents/ETL\r\n\r\nHere is the base class for Raven ETL tests:\r\nhttps://github.com/ravendb/ravendb/blob/v4.2/test/SlowTests/Server/Documents/ETL/Raven/BasicRavenEtlTests.cs """
10492,619905270,b'How did you run into this?'
10492,619906978,"b""During ManagedPinnedBuffer removal work. I've added a lot of code that only runs in Debug that checks if the new unmanaged buffer isn't released."""
10494,619965306,"b'For review only.\r\n\r\n- we should apply that to 5.0 only, I think\r\n- will try to get rid of the Valid/Used'"
10495,620014812,b'Hi!\r\n\r\nThank you for contributing into RavenDB project. Unfortunetely we detected that not all committers signed our CLA.\r\n\r\nFollowing contributors are not in our database:\r\n- vvanderkroef (58553893+vvanderkroef@users.noreply.github.com)\r\n\r\nPlease visit http://ravendb.net/contributors/cla/sign to sign CLA.\r\n'
10495,620026075,"b""I've added your '58553893+vvanderkroef@users.noreply.github.com' e-mail to our database of contributors."""
10496,620496675,b'https://issues.hibernatingrhinos.com/issue/RavenDB-14708'
10504,623076173,"b'This will be used in the Java client, and in other clients as well.\r\nAlso needed for the tsbs benchmark, which is written in Go'"
10504,623135472,b'@karmeli87 can we write a simple test for this?'
10476,623139264,b'We have some tests failures here. @ayende can you take a look?'
10507,623155891,b'@ppekrol failing tests are not related to this PR.'
10476,623282853,b'Working on it now'
10508,623359237,"b""I'll review this later today or tomorrow."""
10511,623431198,"b""I've tested it, and was able to create a time-series :)"""
10511,623433433,"b""For writes we can do tricks to ensure it will be aligned.\r\nBut the problem is for reads. You read the segment and you don't know if the pointer that holds those values is 4-bytes aligned or not.\r\nBut this code covers both ways.. and not error prone."""
10511,623447297,b'Hm... good point on reads. Then the only question is what is the perf cost here.'
10524,624509277,b'Can you add a test for this?'
10524,624558266,b'> Please add a test\r\n\r\ndone'
10526,624559714,"b'For hours resolution we can\'t use the name of the file (unless we are adding the hour to the name)\r\nSo I used the last write time to apply the retention policy.\r\nSo if something will modify the log it will ""reset"" the retention timer for this file.\r\nMaybe this is even a benefit.'"
10521,625242638,b'Rebased'
10529,625474820,b'Need to check if this is also required for counters.'
10536,625672462,b'@karmeli87 can you rebase?'
10508,626016148,b'@gregolsky Updated the PR so it is now based on the Microsoft provided base-image and now has an `-arch` switch so we avoid duplicate files.'
10545,626348305,"b""Didn't mean to open pr now - sorry"""
10534,626657496,b'Rebased.'
10553,627207359,b'This needs to go to 4.2'
10553,627244272,"b'right, fixing that'"
10553,627255010,b'done - ready to merge'
10560,629068637,b'@aviv86 can you rebase and ping me afterwards? I want to go over this PR together.'
10556,629089672,"b""@ppekrol @arekpalinski \r\nBesides fixing the above comments for server-side code, \r\nWhat is left to do is handle the issue that I raised in the _settings-view_ slack channel\r\nPR actually can't be merged before that is resolved."""
10564,629160140,"b'After you apply the changes requested, please ping me, I would like to have a walkthrough the code with you live.'"
10560,629746676,"b""I think it's also worth to add `Last` overload for include TS as well.\r\n(and to JS Patch ?)"""
10564,630919728,b'opened a new pr by accident \r\nhttps://github.com/ravendb/ravendb/pull/10586'
10600,633210091,"b'Thanks for this work. What are the new things in Jint that we can expect?\r\n\r\nWe are going to release v5.0 soon, and I want to know if we should do this merge before or after.\r\n'"
10605,633211738,b'Do we also want to add a read configuration `ReadBehaviour.SameAsWrite` ?\r\nSo if context is defined read&writes will go to the same node.'
10605,633215381,"b'That is how it works now. If you defined writes, it will always use that one'"
10605,633216539,"b'Right, the `switch (Conventions.WriteBalanceBehavior)` is before any other check, so it force reads and writes to the same node/topology.\r\n\r\nNot sure if we need an ability to fine tune it. '"
10605,633219058,"b""I can't think of a reasonable scenario for wanting to do both"""
10600,633261688,"b'I think the biggest thing since your latest catch-ups (rebases) is getting let/const support ( https://issues.hibernatingrhinos.com/issue/RavenDB-13541 ), this landed yesterday. So far it\'s been flaky to say the least and worked ""mostly OK"". Usually it was considered as a var and thus might have been working as expected depending on what kind of shadowing was (not) happening.\r\n\r\nI think one thing you could also consider is to translate your projection code to utilize lambdas. `docs.map(function (d) { return d.name; })` => `docs.map(x => x.name)`.  You already have the version rebased that is required I believe (v5 branch). @ppekrol probably knows best.\r\n\r\nI\'m unsure if it\'s breaking to change to lambdas later. It runs faster with less context required.\r\n\r\nAnother note is that you have your own AST visitor, Esprima also has base class for that, don\'t know if you need to keep the duplicated version.'"
10508,633409899,"b""Thank you @fbjerggaard. I took your work and did some adjustments. \r\nIt's gonna land as ravendb/ravendb#10610 so I'm closing this one."""
10608,633484295,b'@ayende can you check `Raven.Tests.MailingList.Matthias.TransformerFails` test?'
10600,633900580,"b""@lahma I've compiled the NuGet (with small adjustments around MaxStatements) and made more changes to the code. Let's see how it goes first, then we can talk about doing adjustments.\r\n\r\nWould be happy if you could review the changes made.\r\n\r\nBTW, the `GetKey` extension and Property is a bit confusing to me."""
10600,633901358,"b""The Jint changes that I've done are here: https://github.com/ravendb/jint/tree/RavenDB-13921"""
10600,633932552,"b""Looks good, it seems that the new constraint refactor allowed you to minimize custom code quite well. Maybe you could PR those changes to Jint with test case so it would be there without your custom modifications?\r\n\r\nThe GetKey is confusing to me too \xf0\x9f\x98\x84 I think it would be ideal to have it internal and if you just take the current implementation to RavenDB's side and possibly tweak if needed. There was a problem when infinite recursion (stack overflow) was possible when key was tried to resolve in exception building. So must be careful when using engine to resolve the key - I don't know if your use cases need other than the easy ones (literal, identifier)."""
10605,633970133,"b""@ayende I've pushed small changes (please review) and rebased."""
10605,633972548,b'LGTM'
10600,633995473,b'Opened a separate issue for Lambdas: https://issues.hibernatingrhinos.com/issue/RavenDB-15064'
10631,635196598,b'One of the things we need to see if we can do is to cheat. \r\nCan we provide one value at authorization phase and then use another during the actual replication setup?'
10594,635236519,b'Rebased.'
10635,635269150,"b""I'm assuming that cluster was unstable and we returned stale results here. Would prefer to see a staleness exception here to confirm that."""
10649,637989269,"b""Please note - \r\nAlthough the expiration date that is passed to the server is **correct** - verified with the debugger -\r\nA full Let's Encrypt flow was not tested due to other connectivity issues from my machine.\r\n"""
10648,638678584,b'Checking the tests now\r\n'
10648,638687466,"b""this is marked as merged, but it wasn't merged.\r\nStrange."""
10648,638689022,"b'Okay, forced push the wrong branch\r\n'"
10648,638689087,"b'Okay, forced push the wrong branch\r\n'"
10656,639076900,"b""As a side note:\r\n\r\n1. There is a different behavior for appending from the session vs operation.\r\nIn the operation we ensure it is in ms precision in the client and overwrite with the last value.\r\nWhile in the session we append as is.\r\n\r\n2. Another worry is, that the current exception will break replication/import. \r\nNot sure if we want to do things differently. \r\nAs alternative in case of duplicates we can either skip or increase the number of values. \r\n\r\nDon't like either solution.. """
10656,639301021,"b'Another idea is to pass `AppendOptions` that will define the behavior for duplicates.\r\n\r\n```\r\nAppendOptions.OnDuplicate = Throw\r\nAppendOptions.OnDuplicate = Overwrite // harder to do, can be added later\r\nAppendOptions.OnDuplicate = AddAsValue\r\nAppendOptions.OnDuplicate = KeepOriginal\r\n```'"
10656,640161798,"b""I don't follow why this is an issue? Aren't we already doing this in the code?"""
10659,640164316,b'https://issues.hibernatingrhinos.com/issue/RavenDB-15083'
10587,640164485,b'https://github.com/ravendb/ravendb/pull/10659'
10656,640166252,"b'We have different code paths that are doing a bit different things.\r\nNeed to unify at least the operations and the session.\r\n\r\n1. operations:\r\n- client: **ensure milliseconds**, sort by timestamp before sending to the server\r\n- server: sort by time stamp\r\n\r\n2. bulk:\r\n- client: send the original order with the original timestamp\r\n- server: sort by time stamp\r\n\r\n3. session:\r\n- client: send the original timestamp with the original order\r\n- server: sort by time stamp\r\n\r\n4. JS\r\nhas a direct access to the append method on the server.'"
10659,640213421,"b""I stopped the review half way there, I'll do a full review with you once this is ready for merge.\r\n"""
10666,640555786,"b'This can take a lot of time, but sometimes it can drastically reduce the size. In my case it was 1.5GB before and 32MB afterwards.'"
10666,640556143,b'Not without changing the Lucene.'
10676,642566670,"b""I can't approve my PR, but I'm approving it. ;-)"""
10690,643972746,"b""`TestStage.Delta` can be safely removed because it's not used in the Metrics Dispatcher application. So it was displaced by the `TestExecution` stage."""
10705,646466232,b'@grisha-kotler can you fix failing tests?'
10704,646471350,b'@ml054 @Danielle9897 @grisha-kotler Is Studio sending corrct value when Google Cloud backups is set-up?'
10704,646484063,b'Yes. `GetDestinations` is only for internal use and displaying them in the studio (view only).'
10704,646488897,"b""What do you mean 'displaying'? We do not want to display 'GoogleCloud'."""
10707,646604380,"b'There are still few failing tests, but nothing major.'"
10704,647120487,b'Fixed'
10714,647134999,b'Can you take a look at this? \r\nhttps://groups.google.com/g/ravendb/c/fsCHcnET_Y4\r\n\r\nIt explains our reasoning and a workaround for you to use.'
10714,647355687,b'The workaround worked as expected. We will still try to use the latest version when possible. Thanks a lot!'
10712,648004287,"b""@ayende can you review? I've applied all the requirements."""
10727,648098515,b'Fixed in: https://github.com/ravendb/ravendb/pull/10728'
10642,648643924,b'Created https://github.com/ravendb/ravendb/pull/10736 instead'
10730,648649548,b'The actual numbers are here:\r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-15158#focus=streamItem-67-48550.0-0\r\n\r\nThat was the issue - we were calling a lot of reflection on each database configuration initialization while we could do it just once - and this is how it works now.'
10730,648654719,b'Thanks'
10736,648661994,b'LGTM.\r\nWhat was the cause that it set back the number of cores?'
10736,648715475,b'It was triggered twice (with the old license and then with the new one).'
10736,650176100,b'@grisha-kotler please review failing tests'
10773,651903214,b'move logic to general utils'
10770,651932164,"b""Not good, try to execute query:\r\n\r\n```\r\nfrom Countries\r\nwhere id() == 'countries/PL'\r\nselect timeseries(from 'Cases'), timeseries(from 'Deaths')\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1250431/86156770-bf2fcc00-bb06-11ea-8c14-c104cf9c6eb1.png)\r\n\r\n\r\nAlso it should support aliases, etc. """
10776,652236796,"b""That is for compatability with some (quite old) mode of operation. We can safely remove it with no issues.\r\nThanks, we'll remove that soon"""
10776,652239820,"b""Thank you @Pilchie \r\n\r\nI've created an issue to track it (https://issues.hibernatingrhinos.com/issue/RavenDB-15286). We will remove it once the project moves to .NET 5.0."""
10787,653049979,"b""I'm not sure about the solution here. \r\nThe issue is that we already have users that moved to 5.0 beta and have schema version 50_000.\r\nThey will not have this applied.\r\nThe question is whatever we start out with 50_001 already or not."""
10759,653483489,b'We have few test failures here. @ayende can you take a look?'
10787,654184164,b'Will push a test soon'
10787,654201666,b'https://github.com/ravendb/ravendb/pull/10800'
10759,654202813,b'looking'
10759,654224673,"b'Interesting issue, we have queries like this:\r\n\r\n```\r\nvar q = session.Query<Test>()\r\n    .Select(x => x.Headers[""ABC.DEF""]);\r\n```\r\n\r\nWhere ""ABC.DEF"" is a _single_ field name.\r\n\r\nI changed it so you\'ll need to quote the field, like so:\r\n\r\n```\r\nvar q = session.Query<Test>()\r\n    .Select(x => x.Headers[""\'ABC.DEF\'""]);\r\n```\r\n\r\nOtherwise we\'ll treat it as a compound field name. I think that this is more likely anyway, but needs to add it to the release notes'"
10808,655285515,b'We also want to add some sort of identifier for the last outgoing/incoming batch.\r\nI think for both cases (subscription & replication) we want to have the last etag that was sent/received.'
10822,655958443,b'https://github.com/ravendb/ravendb/pull/10824'
10848,658007608,b'This needs to go into v4.2 branch'
10848,658009736,b'changed'
10868,659219086,b'@karmeli87 will apply the fixes. Merging.'
10871,659309417,b'4.2 part:\r\nhttps://github.com/ravendb/ravendb/pull/10873'
10873,659309520,b'3.5 part: \r\nhttps://github.com/ravendb/ravendb/pull/10871'
10872,659419854,b'@mateuszbartosik did you consider to use tooltip-lg (existing class instead of creating new customization) ?'
10872,660009272,b'> @mateuszbartosik did you consider to use tooltip-lg (existing class instead of creating new customization) ?\r\n\r\nThis is the class we use in RavenDB Cloud. Seems like `.tooltip-lg` class does not exist in this framework.'
10895,660865457,b'Already in 4.2'
10903,661762610,"b""We don't want to skip the rollup after all and it should be deleted under the rollup command."""
10909,661888607,b'Do we have a way to create a test for this?'
10909,662257590,b'I hope so. As I wrote in the ticket I will be working on a test today. The purpose of this draft PR was just to run all tests with this change.'
10916,662584517,b'Failing tests:\r\n`SlowTests.Server.Documents.PeriodicBackup.EncryptedBackupTest.can_backup_and_restore_sample_data_encrypted`\r\n`SlowTests.Server.Documents.PeriodicBackup.RavenDB_12012.CreateFullAndIncrementalBackupWithIndexInTheMiddle`'
10922,663038097,"b""A) You can just use the Let's Encrypt mode, and all of this will Just Work.\r\nB) What is it that you are trying to do? Use a self signed certificate in this context?"""
10922,663045241,"b""The ravendb is reachable behind a VPN, it's a DEV environment, don't know if lets encrypt would be an option but I will pass that info to raven sysadmins.\r\n\r\nWell, the HTTPS have a cert self signed and I received a client certificate for ravendb client initialization."""
10922,663050131,"b""There is no issue with setting up with Let's Encrypt in VPN / local environment. See here: https://www.youtube.com/watch?v=K-2iZ_lJVag\r\n\r\nIf you want to use a self signed certificate for the RavenDB server, you need to either:\r\n\r\n* Add the CA that signed the server cert to the trusted root.\r\n* Change the `RemoteCertificateValidationCallback` to trust it explicit (either via the thumbprint or by checking who the signer is).\r\n"""
10922,663053200,"b'Oh, thanks for the setup video.\r\n\r\nOk, CA trusted.\r\nAbout RemoteCertificateValidationCallback, so, what I did here is OK?\r\n\r\n```csharp\r\nRequestExecutor.RemoteCertificateValidationCallback += (message, cert, chain, sslPolicyErrors) => \r\n{\r\n    if (sslPolicyErrors == SslPolicyErrors.None ||\r\n        cert.GetCertHashString() == ""MY_THUMB_HERE"") return true;\r\n\r\n    return false;\r\n};\r\n```\r\n\r\nDo you have any example of how to check the signer?\r\n\r\nThanks!'"
10922,663054340,"b'In `RemoteCertificateValidationCallback`, you can access the `chain` and see if any of the certificates there is trusted by you.\r\nYou can do that using either the `GetCertHashString()`, `Thumbprint` property or by checking the public key for the cert.'"
10922,663054579,"b""Note that this means that you won't be doing validation such as `ValidBefore`, CRL, etc.\r\n"""
10922,663058100,"b'Oh, got it, I should look for any cert trusted in full chain and do other validations.\r\nWell, ok, now I have a lot of information and can pick any one to move on.\r\nThanks for your help on it and can close this issue. '"
10908,663397778,b'@Danielle9897 Can you review changes made here?\r\n@haludi Did you test that this works properly with different level of security clearance?'
10908,663972044,"b'> @Danielle9897 Can you review changes made here?\r\n> @haludi Did you test that this works properly with different level of security clearance?\r\n\r\nI did test manually but now I added unit tests.\r\nIn the process I realize my changes also apply on ""/databases/*/admin/debug/txinfo"" and ""/databases/*/admin/debug/cluster/txinfo"" so user with only read/write permission will not get info from those endpoints.'"
10842,665498062,b'It needs to be handled differently in the core smuggler component.'
10939,665706117,"b'Reverted changes, throw NotSupportedException\r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-14988#focus=Comments-67-49556.0-0'"
10943,666360842,b'Done.'
10953,668030409,"b""> Do we need to do Server schema migration? If yes, do we have details somewhere?\r\n\r\nI don't think so, the only thing we need to do is modify the schema version, because we'll automatically upgrade some details on the cluster storage"""
10969,669025896,"b""This was the original intension:\r\nhttps://github.com/ravendb/ravendb/blob/e58e0ceddbf12ace06055383b58dc6c76d3b01f4/src/Raven.Server/Documents/Expiration/ExpirationStorage.cs#L45\r\n\r\nHowever, it didn't work:\r\nhttps://github.com/ravendb/ravendb/blob/e58e0ceddbf12ace06055383b58dc6c76d3b01f4/src/Raven.Server/Documents/Expiration/ExpirationStorage.cs#L41\r\n\r\nBefore the change, if you provide both @expires is the one which is going to be used.\r\n\r\n"""
10969,669028006,"b""I would rather fix things so you can properly use both expires and refresh\r\nThe reason for this was that I reused some mechanisms early on, but there should be no reason they can't both work now"""
10974,669730222,b'We want this fix for 4.2 as well?'
10976,669756468,b'It was fixed in 5.1 (https://github.com/ravendb/ravendb/pull/10956) while we need this for 5.0'
10974,669761140,b'moved to 4.2\r\nhttps://github.com/ravendb/ravendb/pull/10977'
10979,669846403,b'ok'
10981,670425971,b'Please write a test'
10981,671049574,b'Added a test for nested json'
10982,671383140,"b'It causes the \'BasicGraphQueries.CanHandleCyclesInGraph\' to fail, altough the asssertion there looks suspicious? https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.0/1430/testReport/junit/(root)/(empty)/Graph_BasicGraphQueries_CanHandleCyclesInGraph/\r\n\r\n```\r\nAssert.Equal() Failure\\r\\nExpected: String[] [\\""employees/5-A\\"", \\""employees/2-A\\"", \\""employees/2-A\\""]\\r\\nActual:   String[] [\\""employees/5-A\\"", \\""employees/2-A\\""]\r\n```'"
10991,671920298,b'Can you add a test for this?'
10991,672746968,b'https://github.com/ravendb/ravendb/pull/10998'
10993,672778847,b'> This should go into 4.2?\r\n\r\nno there is no update method in 4.2'
11002,673443201,"b'According to the discussion [here](https://issues.hibernatingrhinos.com/issue/RavenDB-14959), I first thought the `IDocumentStore.OnBeforeQuery` event should be called one moment before the execution. \r\nBut as it implemented now the LazyQueryOperation is created when the `Lazily` function called and so any future changes to `DocumentQuery` (one of the args in the `IDocumentStore.OnBeforeQuery` event) will not make any affect.\r\nIn addition, `AbstractDocumentQuery.BeforeQueryExecutedCallback` is also invoke when the `Lazily` function is called.\r\nIt makes for me more sense if those two would be called one moment before the execution but I think it requires too many changes that will change the current behavior and public client API'"
10982,674490308,"b'Yes, the test itself is wrong here.'"
11004,674498573,b'Do you have your index _always_ busy? This commit is related to improving how we can handle `ToArray()` is some cases.\r\nThe index should automatically update itself when it has time.\r\n\r\nA workaround may be to change the index definition to use the old definition as a string.'
11011,674851299,"b""@ppekrol Thanks,didn't manage to get to it fast enough"""
11013,674865494,"b'I wondered what should be the behavior when a request fails in general and particular when we retry.\r\nIf we pass the `HttpRequestMessage` just to read so it makes sense to invoke `OnBeforeRequest` just once.\r\nBut if we allow the user to modify `HttpRequestMessage` so on any `CreateRequest` the `OnBeforeRequest` should be called.\r\nFor `OnAfterRequests` when a request fails we can invoke it with `(HttpResponseMessage)null` or as it implemented now just not invoke it as there is `OnFailedRequest` that invoked (by the way `OnFailedRequest` invoked only on the first retries and not on the last one).\r\nIn this case, maybe the name should be `OnSucceedRquest`'"
11013,674960260,"b'I think we want to call before on each time that we make a remote call, so not just once per logical request.\r\nMaybe add some additional arguments that indicate the failure rate?'"
11004,675344558,b'@ayende They might be. Plus as it seems this change causes our MessageViewIndex to change and therefore reindexing will happen. Some of our customers have hundreds of GB of data. \r\n\r\nAre you saying because of afaik a breaking change that causes reindexing for all customers that use `ToArray` you are suggesting us to fall back to use string-based index definitions? '
11004,675397796,"b""The quick fix is to use the string version, yes. \r\nNote that 3.5 is on low maintenance mode, so the next bug fix release is not scheduled any time soon.\r\n\r\nThis shouldn't actually cause you an issue, aside from the re-indexing work. Note that it is actually fairly common for the index text output to change with client versions, as long as the results are equivalent, there is no compatability concern from our perspective."""
11012,675594154,b'@ayende can you check failing tests?'
11012,677688732,b'Should be fine now\r\n'
11012,678256891,"b""@ayende the 'RavenDB_11379.Should_remove_attachment' is failing. I'm wondering if this solution is not too generic. It should only affect subscriptions? Maybe regular patching."""
10941,678964227,b'Handled here: https://github.com/ravendb/ravendb/pull/11034'
11035,678967452,b'will try to apply other fixes before doing the above.'
10944,679249588,b'@ppekrol the added test will fail until [RavenDB-15525](https://github.com/ravendb/ravendb/pull/11039) is merged'
11038,679941472,b'@grisha-kotler can you check failing tests?'
11012,679999983,"b'Looking at the tests, but in general, I _want_ to make it global change.'"
11038,680041264,b'done'
11004,680704152,b'@danielmarbach is it .NET Framework or .NET Core?'
11004,680709283,"b"".Net Framework. I'm aware that this version is on low maintenance mode and we are in preparation to update to later major versions. Still causing several hundreds of customers to go through reindexing of several hundred gigs of data seems a bit excessive especially because these changes were sneaked in in a patch. For now we are stuck unless we switch to string indexes.\r\n\r\nAs a feed back it wouldbe great if changes like that are clearly marked in the changelog as potentially breaking or let's say causing to reindexing. We read the changes carefully before we bump the dependency"""
11050,680846653,b'@gregolsky I think we also need to update the downloads?'
11050,680848473,b'What are the performance numbers for this? Last time when we checked it was slower than arm32 and we decided to wait till .NET Core catches up.'
11050,680848831,"b'We have users that want to run there because of memory limits, not related to performance.'"
11050,680850481,"b'libsodium, zstd, etc are working?'"
11050,680851351,"b'That said, import `users.dump` gives us:\r\n\r\n![image](https://user-images.githubusercontent.com/116915/91303762-25f0ff00-e7b1-11ea-8c2e-7ba2a8c1c4a3.png)\r\n\r\n![image](https://user-images.githubusercontent.com/116915/91303962-6a7c9a80-e7b1-11ea-92c4-6e1481d69139.png)\r\n\r\nThis is on `a1.large` instance on AWS, 2 cores, 4 GB RAM.\r\n\r\n8GB gp2 drive with 100 IOPS'"
11004,680851578,b'https://github.com/ravendb/ravendb/pull/11051'
11050,680868387,b'![image](https://user-images.githubusercontent.com/116915/91304121-a7e12800-e7b1-11ea-96e9-70e40360ccd3.png)\r\n\r\n\r\nInserting `posts-001.dump` in 00:00:29.1865386'
11050,680868507,b'zstd works'
11050,680872550,b'Encryption & Decryption works :-)'
11050,680872778,b'One step closer to run on android? :-)'
11050,680883249,b'need to wire up on CI and other release related things'
11050,681044927,b'> One step closer to run on android? :-)\r\n\r\n.NET 6 might help with that'
10944,681046741,b'@garayx Can you rebase?'
11004,681833070,"b'We released a new patch build, 3.5.10-patch-35301\r\nhttp://hibernatingrhinos.com/builds?product=ravendb&version=3.5&channel=stable\r\n'"
11004,681868964,b'Thank you!'
11060,682382019,"b""Hi @gitfer \r\n\r\nWe have signed the Lucene.Net.dll: https://github.com/ravendb/ravendb/pull/11061\r\nYou can download the 3.0.34 nupkg from our repository, extract the DLL (I'm using Nuget Package Explorer) and use it in your project.\r\n\r\nThank you for submission of this issue."""
11060,682401158,"b'Just tried that 3.0.34.0 out, \xf0\x9f\x91\x8d . Thanks!'"
11062,682404184,"b'You need to use:\r\n\r\n```\r\ndynamic query = e.QueryCustomization;\r\nquery.AndAlso();\r\nquery.WhereEquals(""Foo"", ""Bar"");\r\n```'"
11062,682406823,"b'Thanks, you are right.'"
11064,682673385,"b'Also is it expected to not have all the events on the session object as well, like the `OnAfterConversionToEntity` event which is available on the document store only. _(That would allow us to have different session types instead of putting all custom events logic into the store.)_'"
11064,683818151,b'Laammmee'
11068,684506324,b'Yes'
11064,684858506,"b""`session.Advanced.DocumentStore.OnAfterConversionToEntity` this is mutating the _global_ version of the event.\r\nBut the session was already created and it wouldn't modify that instance. \r\n\r\nIn other words, the problem is the missing event on the session, not the code"""
11064,684858972,b'This will be handled here: https://issues.hibernatingrhinos.com/issue/RavenDB-15554'
11064,685132107,"b'Thanks @ayende  Seems I assumed wrong that the newly added _global_ version of the event would fire although the session was created before it.\r\n\r\nRegarding the missing events, just for the record for RavenDB-15554, there seems to be missing some other events as well.\r\n\r\nThanks for the good work!'"
11053,686306173,"b""I'm merging this. Please apply all changes to a new PR."""
11074,686415191,"b""> Also need to handle large change vectors, no?\r\n\r\nI think we should handle large change vectors separately. \r\nI'm still not sure what would be the best solution."""
11074,686417813,"b'Sort by etag descending, chop the bottom half once it is past 512 bytes ?'"
11078,686476970,b'Can you add a test?'
11078,686501262,b'> Can you add a test?\r\n\r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-15538#focus=Comments-67-50344.0-0'
11080,687116764,b'Please also add to ETL Task view (in editRavenEtlTask.html)'
11080,687136882,b'> Please also add to ETL Task view (in editRavenEtlTask.html)\r\n\r\nDone.'
11082,688286683,b'Can we have a test for this?'
11083,688709373,b'Can we add a test here that the user sent us - https://github.com/ravendb/ravendb/issues/11064 ?'
11077,688727101,b'@haludi Can you please review it? Your commit for reference - https://github.com/ravendb/ravendb/commit/eb86da84fb39ed50960eec01bb4f53f4842a3b5d#diff-bb3c07866b70d2fa522f853e4f235846'
11077,688733703,"b""@ayende What do you think about adding this scenario to benchmark tests so we'll be able to monitor its performence - https://github.com/ravendb/ravendb/blob/v5.0/test/BenchmarkTests/Indexing/Index.cs?"""
11085,688808656,b'And please resolve the conflict'
11095,689425557,b'BTW `commit/whitespace` check has failed because of tabs detection in `RavenDB-11089.cs` file. See: https://jenkins.hibernatingrhinos.com/job/PR_Conventions/10057/console'
10944,689426905,b'@garayx please rebase and resolve conflics'
11083,689467540,b'I will add it'
11083,689485805,"b""@ayende I've tried to add the test that user has provided but I see his assumption wasn't valid. Not sure what test should be added to validate what you added here."""
11083,689486641,b'Maybe add separate handling just for that sesion?'
11096,689515954,b'Please wait with merge- @Danielle9897 found one more bug. '
11077,689570873,b'> @haludi Can you please review it? Your commit for reference - [eb86da8#diff-bb3c07866b70d2fa522f853e4f235846](https://github.com/ravendb/ravendb/commit/eb86da84fb39ed50960eec01bb4f53f4842a3b5d#diff-bb3c07866b70d2fa522f853e4f235846)\r\n\r\nSeems good to me'
11081,689592388,b'Closing this PR.\r\nNeed to implement the following logic:\r\nhttps://issues.hibernatingrhinos.com/issue/RavenDB-12607#focus=Comments-67-50437.0-0'
10944,690024334,b'@garayx Please check failing tests - https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.1/115/'
11074,690159961,"b""@ayende Could you check this PR after Karmel's fixes?"""
11098,690908586,"b'@haludi There is one failing test here - `FastTests.Client.CRUD.StoreDocument_WheHasUserMetadataPropertyWithLengthEqualsToInternalRavenDbMetadataPropertyLength(metadataPropNameToTest: \\""@timeseriea\\"")`. \r\n\r\nIt was added to 4.2 in https://github.com/ravendb/ravendb/pull/11075 recently.\r\n\r\nI found that it\'s expected, according to this comment https://issues.hibernatingrhinos.com/issue/RavenDB-14871#focus=Comments-67-50314.0-0\r\n\r\nSo I\'m merging this PR. Please address https://issues.hibernatingrhinos.com/issue/RavenDB-15562 as soon as possible.\r\n\r\nCC @grisha-kotler '"
11093,690923750,"b""Compilation check has failed. Can you check that?\r\n\r\n```\r\nServer/NotificationCenter/NotificationCenterTests.cs(559,58): error CS1061: 'MemoryConfiguration' does not contain a definition for 'MinSwapSize' and no accessible extension method 'MinSwapSize' accepting a first argument of type 'MemoryConfiguration' could be found (are you missing a using directive or an assembly reference?) [/mnt/c/jenkins/workspace/PR_Compile_v4.2/s/test/SlowTests/SlowTests.csproj]\r\n```"""
11107,691956804,b'Could you check failing tests - https://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/3889/'
11107,691957765,b'I wonder if we can introduce that to 4.2 as this seems to be a breaking change since `SlowTests.Issues.RavenDB_13161.CompareExchangeKeyValidationWillThrowOnLargeKey` test is failing.\r\n\r\n@karmeli87 ?'
11108,691962123,b'Pretty wild guess but could it be related to https://github.com/ravendb/ravendb/pull/11110?'
11108,692033075,"b""It doesn't seems to be related because in https://github.com/ravendb/ravendb/pull/11110 you fixed potential deadlock while here `A task was canceled.` was thrown under the covers.\r\n\r\nIt looks that the client wasn't able to reach the server within the default `HttpClient` timeout (100 sec) what results in `A task was canceled.`.\r\n\r\nHow is your client hosting RavenDB? Are they sure the server was up at the time they got this error?"""
11108,692036375,"b""@arekpalinski we use embedded RavenDB and the client is part of the same AppDomain. So we are in total charge of the whole stack. So the server not being up and running would mean our entire process would have crashed. The only thing I can see is that we somehow exhaust the service connection limit but we set that to 100 and I'm pretty sure we are not exceeding that (as far as I understand RavenDB client also caches the clients and therefore connections)"""
11108,692061431,"b'Yes, RavenDB caches `HttpClient` instances under the covers.'"
11108,692164183,"b""I was thinking it might be related because when the deadlock happens couldn't we basically stall totally the operations on the bulk insert and those run into blocking HTTP client operations as well (since those things are coupled together)?\r\n\r\nFrom our perspective we have only a few bulk insertion operations happening concurrently and given RavenDB caches the client I`m not seeing yet why things should get stalled that much to run into the 100 seconds HTTP client timeout."""
11112,692509960,b'Do you run multiple bulk insert operations concurrently? '
11112,692510207,b'I see you do - https://github.com/ravendb/ravendb/issues/11108#issuecomment-692164183'
11112,692516802,"b""Doesn't this design lead to thread pool starvation under load?\r\n\r\n```\r\n            // if we haven't flushed the previous one yet, we will force\r\n            // a disposal of both the previous one and the one before, to avoid\r\n            // consuming a lot of memory, and to have _too_ much concurrency.\r\n            if (previousTask != null)\r\n            {\r\n                previousTask.ConfigureAwait(false).GetAwaiter().GetResult();\r\n            }\r\n            previousTask = current.DisposeAsync();\r\n```"""
11114,692540198,b'I also found this gem here\r\n\r\n```\r\n            if (previousTask != null && waitedForPreviousTask == false)\r\n            {\r\n                Total += previousTask.Result;\r\n                waitedForPreviousTask = true;\r\n            }\r\n```\r\n\r\nwhich means `FlushBatch` is synchronously blocking on `DisposeAsync` of previous operations in certain scenarios. Is the assumption of this code that because we are always on a background thread this is fine? '
11112,692541884,b'Also raised https://github.com/ravendb/ravendb/pull/11114'
11112,692620405,"b'The original issue `Could not get the PUT serial lock in (un)reasonable timeframe, aborting operation` means there was a write operation that took more that 2 minutes. \r\n\r\nWhat is the typical size of you bulk insert batches?'"
11112,692626379,"b'It depends. Let me give you a little bit of history. ServiceControl ingests audit messages from an audit queue and stores them in an embedded ravendb for indexing purposes to extract and visualize conversations across message flows. Historically we have been using a single session per message and we have gotten several hints from support of RavenDB over the past few years that this is not an efficient way of ingesting data into RavenDB (due to the overhead of the session management as well as the scalability limits due to max concurrent sessions). In recent releases, we have introduced a batching approach that batches multiple ingestions together and then inserts many of them in bulk into RavenDB. In general, this has given us a great improvement for cloud disks in our test environments as well as decreased the pressure on RavenDB indexing quite a bit as well as increasing the ingestion throughput.\r\n\r\nSo technically an audit queue can have varying degrees of message sizes only restricted by the limitations of the transport (i.ex. Azure Storage Queues max 64KB, Azure Service Bus 256 KB or 1 MB max...). We have not seen in the previous non-batching mode the serial lock problem quite often but since we have switched to batching and bulk ingestion we are falling into this and the other related problem I commented on.\r\n\r\nIt might be important to note that the batching is not time-based and it takes into account that individual inserts can fail (that will be released and retried from a transport perspective). In essence, we take what we get from the transport (based on the transports latency) and process a batch of messages, once done take the next batch of messages to bulk insert.'"
11108,692679248,"b""Your PRs got merged. We'll run the full test suit. Once it passes I will let you know when new build is out."""
11112,692684138,"b'The issue here is likely that the transaction are _very_ big and take time to hit the disk properly.\r\nYou are writing to the bulk insert while this is happening, but this gets queued up, and eventually we are too late.\r\n\r\nCan you also check your disk I/O during that time frame?'"
11112,692690002,"b""Isn't the bulk insertion design supposed to adjust the bulk operations according to the document sizes and batch size?\r\n\r\n```\r\n                            //essentially for a BatchSize == 1024 and stream of 1MB documents - the actual batch size will be 128\r\n                            // --> BatchSize = 1024 / (dataSize = 1024/BigDocumentSize = 250) * 2 == 128\r\n```\r\n\r\nat least this is what this hints and the documentation is not really making any indications of these limitations in https://ravendb.net/docs/article-page/3.5/csharp/client-api/bulk-insert/how-to-work-with-bulk-insert-operation#limitations\r\n\r\nOr is the logical conclusion of this discussion that original recommendations of batching are not holding up because of the generic problem that we cannot predict the size of the document and therefore by batching multiple of those together things are actually becoming worse than doing individual session stores due to the overall transaction size increase?"""
11112,692711137,"b'The problem is that you have a convoy in the process.\r\nWe are able to accept writes from the client at a rate that is faster than the rate of writing to the disk.\r\nWe are able to hold on for a while, but eventually we time out. On the cloud, that is usually when we are seeing IO credits exhaustion.\r\n\r\nRavenDB assumes that the rate of writing to the disk is roughly the same. If you are suddenly have a drop in the IO perf, that can cause this issue.\r\n'"
11074,693302787,"b""@ayende I'm merging it since we need that changes for testing. If you have more comment they will be addressed in separate PR."""
11118,693338544,b'Small fix to https://github.com/ravendb/ravendb/pull/11114'
11110,693384745,b'@danielmarbach Are you running on .net core or full .net framework? I had to make the following PR https://github.com/ravendb/ravendb/pull/11120 to fix the build since our client project for full .net is targeting .net 4.5'
11120,693388175,"b'To achieve the same you should either wrap the `Try/Set` methods in `Task.Run` or use the following code\r\n\r\n```\r\n\tinternal static class TaskCompletionSourceFactory {\r\n#if NET452\r\n        static readonly FieldInfo StateField =\r\n typeof(Task).GetField(""m_stateFlags"", BindingFlags.NonPublic | BindingFlags.Instance);\r\n\r\n#endif\r\n\r\n\t\tpublic static TaskCompletionSource<T> Create<T>(TaskCreationOptions options = TaskCreationOptions.None) {\r\n#if NET452\r\n            //This lovely hack forces the task scheduler to run continuations asynchronously,\r\n            //see https://stackoverflow.com/questions/22579206/how-can-i-prevent-synchronous-continuations-on-a-task/22588431#22588431\r\n            var tcs = new TaskCompletionSource<T>(options);\r\n            const int TASK_STATE_THREAD_WAS_ABORTED = 134217728;\r\n            StateField.SetValue(tcs.Task, (int) StateField.GetValue(tcs.Task) | TASK_STATE_THREAD_WAS_ABORTED);\r\n            return tcs;\r\n#else\r\n\t\t\treturn new TaskCompletionSource<T>(options | TaskCreationOptions.RunContinuationsAsynchronously);\r\n#endif\r\n\t\t}\r\n\t}\r\n```\r\n\r\n'"
11110,693388623,"b""Running on .NET 4.6 and higher. That's why I assumed the enum is available"""
11074,693393724,b'Looks good to me. Still need to do some more tests here.'
11120,693410337,b'I force pushed the solution with the usage of `TaskCompletionSourceFactory ` '
11121,693482901,b'Can you add info if the backup is encrypted?'
11056,694844656,b'Updated to have the same sig as the other events'
11133,695756883,b'updated EmbeddedServer as well - thanks'
11126,695966577,b'All tests passed: https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.1/137/'
11108,696047336,b'@danielmarbach Just letting you know that we released `3.5.10-patch-35302` which includes your fixes.'
11150,696665261,b'Do we need this in 4.2?'
11093,696673273,b'Status?'
11078,696674421,b'Status?'
11150,696683728,"b""I don't think we need this in 4.2 at this point"""
11162,696761690,"b'That is by design. You cannot view Server-wide value if you are not Cluster Admin, but you are aware that it is set.'"
11162,696763979,"b'So the question is now, why is this is a secured value?'"
11162,696793750,"b""It isn't. It is a Server-wide value and those are not visible to Operator by design.\r\n\r\nSecured values are not visible to anyone at all times."""
11162,696804520,b'Why a user cannot view the configuration value? (not edit)'
11078,697573419,b'@garayx is working on a test'
11166,698171653,"b'> Need to also add it to conditional load, no?\r\n\r\nWill be handled here https://issues.hibernatingrhinos.com/issue/RavenDB-15652'"
11145,698511046,b'LGTM.\r\nIt would be nice if we could store this data as unmanaged memory.'
11145,698511684,b'What data are you talking about?'
11145,698522841,b'IO metrics and indexing metrics'
11145,698524759,"b""I'm not sure how helpful that would have been. The issue was that we have a LOT of them. That cause memory utilization.\r\nThe fact that they are managed meant that we had an easy time tracking them, which is good."""
11145,698526184,b'The metrics are useful. Enabling them will require a database restart.'
11145,698863768,"b""The issue is the total memory cost, not where this is stored. This isn't the case with the GC causing problem.\r\nAnd this is expected to only be turned off in strange conditions."""
11182,700662064,b'5.0: https://github.com/ravendb/ravendb/pull/11171'
11093,701409298,"b'> Status?\r\n\r\nI spoked with @grisha-kotler and the decision is \r\nin Linux notify due to the configuration\r\nand in Windows, while the PageFile can be flexible to just check if there is a FilePage (by CommitedAvailabe - TotalPhysicalMemory > 0) and notify if not.'"
11159,702135108,b'- Added `StandardDeviation` support\r\n- Made some refactoring in `TimeSeriesAggregation`  (introduced `ITimeSeriesAggregation`)\r\n- Addressed PR comments '
11192,703247856,b'do we want to have toggle for that on UI? Right now we export / import that everytime.'
11190,703249241,b'do we want to update other commands with new nice utitlity method? To be consistent? '
11192,703403003,b'This was only a studio issue? do we a have server-side test for this?'
11192,703462720,b'yes'
11192,703547456,b'> do we want to have toggle for that on UI? Right now we export / import that everytime.\r\n\r\nWe should expose this in the UI'
11190,703553837,"b""I'm against doing this. Why?\r\n- 90% of the people will do not remember that it exist\r\n- Dev cannot use ReSharper, VS IntelliSense, Roslynator automatic fixes now\r\n\r\nPlease use those automatic fixes instead, so the end result would be for example:\r\n\r\n```\r\n _cache = cache ?? throw new ArgumentNullException(nameof(cache));\r\n```\r\n"""
11197,703555152,b'This need a proper design to consider the proper UX for this feature.'
11192,703568326,b'Opened https://issues.hibernatingrhinos.com/issue/RavenDB-15680'
11190,703575626,"b'ok I agree, so we should remove this utility method. '"
11200,703871864,b'I wonder if we should handle that on client or server side? '
11200,704110868,b'Will move implementation to studio side'
11208,704749282,"b""That isn't actually a memory leak, mind. These are pooled instances that we avoid allocating many times."""
11208,704787421,"b'Thanks , i see i havent this problem with simple object but with complex the memory reach at 1 gb\r\nwhat determined that an object is pooled, or it is possible to clear the pool ?\r\nthanks'"
11203,704787825,"b'> http://live-test.ravendb.net/databases/demo/healthcheck\r\n> \r\n> This fails, how is this backward compatible?\r\n\r\nThe stats endpoint is still available.\r\nThe backward compatibility is only in the client - https://github.com/ravendb/ravendb/pull/11203/files#diff-e6c80c683c49344dd29a830753547288R1743'"
11203,704791860,"b'In this case, that needs to go on 5.1, not 4.2, since we expect a 4.2 client to work with older 4.2 server'"
11203,704800200,"b'> In this case, that needs to go on 5.1, not 4.2, since we expect a 4.2 client to work with older 4.2 server\r\n\r\nAs I check it, it works with an older server.\r\nWe try to use the new endpoint and if it fails with `ClientVersionMismatchException` we try with the stats endpoint.\r\nThis is not efficient while if the client communicates with an older server it always sends two requests.\r\nBut we use this health check only if a command failed.\r\nI thought maybe to cache the decision which endpoint to use per `RequestExecutor`'"
11203,704815756,"b""Okay, I missed that. Can you change it so we'll only do the first check once, and then remember that this server is older?"""
11203,704815884,"b'Also, did you test that it works against older servers and newer ones?'"
11208,704816487,"b'The number of objects that you push through each session, mostly. Also the number of sessions and document stores that you have.\r\n\r\nWe actually optimized this part of the code fairly heavily to reduce further memory consumption. You can check the 5.0 nightlies to see if that helps for you'"
11203,704858472,"b'> Also, did you test that it works against older servers and newer ones?\r\n\r\nI checked it against a server with and without the dedicate health check endpoint'"
11203,704859448,"b""> Okay, I missed that. Can you change it so we'll only do the first check once, and then remember that this server is older?\r\n\r\nAt what level? In the `RequesExceuter`? session? document store?\r\nAlso, there can be a cluster with mix or the server can change while the client still working"""
11203,704865168,b'Per RequestExecuter per url'
11205,704925520,b'Please make flatten code recursive. '
11210,705553245,b'Need schema upgrade'
11210,705553479,"b""We are reusing a reserved value. We don't _have_ to do anything, but it is a concern, no?"""
11210,705554325,"b'Yes, we basically need only to bump the version'"
11235,706951449,"b'The value is already per server, no? And the old clients will simply see that the value changed and update it,no?'"
11228,707043368,"b'Currently, this pr contains only changes for issue https://issues.hibernatingrhinos.com/issue/RavenDB-15665'"
11235,707058744,"b'#### The value is already per server, no? \r\nThe value is per `RequestExecutor` and the origin issue is because a value the client got from one node sent to another node while one of the nodes is not up to date.\r\n\r\n#### And the old clients will simply see that the value changed and update it, no?\r\nI am not sure I am following the question but if I do\r\nlet say the current client configuration index for database is x and for server-wide is y\r\nand the Hash.Combine(x,y) is greater (`IsServerIndexBiggerThenClient`) than the result of the new ""combine"" method (`CombineClientConfigurationIndexes)`.\r\nThe client (`RequesExecutor`) send the value it has and the server check and decide the client has more up to date client config so it doesn\'t send to the client `context.HttpContext.Response.Headers[Constants.Headers.RefreshClientConfiguration] = ""true"";` and the client just remains with the old configuration.\r\n'"
11229,707079510,b'@ayende can you check failing tests? Also does it affect backward compatibility?'
11235,707161631,"b""Can we keep track of the node id that gave us the client config?\r\nThat will allow us to know if different servers give different results.\r\n\r\nI don't like trying to overload the values of the long in this manner, you are going to get into trouble after a while.\r\nConsider a long running server that will reach 4 billion changes at some point? """
11235,707171971,"b""#### Can we keep track of the node id that gave us the client config? That will allow us to know if different servers give different results.\r\nBut this will not let us know which one is more up to date. \r\nMaybe I can save a short history and check it before updating the config?\r\n\r\n#### I don't like trying to overload the values of the long in this manner, you are going to get into trouble after a while. Consider a long running server that will reach 4 billion changes at some point?\r\n\r\nThis was handled in `IsServerIndexBiggerThenClient`.\r\nIt will get into trouble only if the difference between the new value and the old value is more then 2Gb."""
11242,707556564,b'![image](https://user-images.githubusercontent.com/116915/95830841-f38b6900-0d40-11eb-93b6-be80f21cf2b8.png)\r\n'
11242,707557725,b'See here: https://issues.hibernatingrhinos.com/issue/RavenDB-15702'
11242,707619914,"b""Interesting. I didn't run into this using the same (I believe) set of data. I'll check .ravendump file you attached.\r\n\r\nAt glance it looks we have the reduce key hash collision (which is valid case and properly handled in the indexing code, but debug endpoint needs to take it into account as well)."""
11257,708937647,b'Open questions if this change is acceptable:\r\n1. Should we replace all `Expression.Default` within `GetValue`\r\n2. Do we want to backport this'
11257,709031385,b'What is the code equivalent to this change?\r\nWhy do we _need_ to do anything here?'
11257,709032970,"b""@karmeli87 can we have a test for this?\r\n\r\nFrom what I see I'm assuming that if I'm setting sth in the ctor and I do not have it in JSON then instead of setting default value, it will use the one from ctor?"""
11257,709034990,"b'This issue is, that stuff like: https://github.com/ravendb/ravendb/blob/378ae39eb1531a243f6d968a47d02721294fd62d/src/Raven.Client/Documents/Operations/Replication/PullReplicationAsSink.cs#L9\r\nare not respected if the property is missing from the json (blittable).\r\nIn that case we initialize to default, so this change should retain the initial value.\r\n\r\nthe eqv. is something like that:\r\n```\r\nif(tryGetFromJson(...) == false)\r\n{\r\n  try\r\n  {\r\n     return readTheCurrentValue();\r\n  }\r\n  catch\r\n  {\r\n  return default;\r\n  }\r\n}\r\n```\r\n'"
11257,709042378,"b'Instead of generating this code, can we do that in line, and then just reuse the captured value? \r\nWe can ensure that we only do that to `ValueType`, not to class instances (which may then be shared)\r\n'"
11257,709042550,"b'In other words, during the serialization construction, run this code, get the value, and then use that?'"
11260,709973733,"b""`            from employee in employees` ??\r\n\r\nDidn't you mean products?\r\n"""
11261,709974062,b'Are you trying to create a database that already exists on disk?'
11261,710000666,"b""No, it's completely clean on a RavenDb cloud server using a random database name for test purposes for CI/CD. The reason why I encountered this is that the TestServer is hard coded into a .NET Core version and it blew up when Visual Studio 2019 updated to 3.1.9 of the .net core runtime and removed 3.1.8 which it's hard coded to.\r\n\r\nIt would be nice to fix this, but more importantly not hard code TestServer to a specific point release of the framework."""
11261,710005903,"b""Hi @JohnGalt1717 \r\n\r\nWe will take a look at the initial problem.\r\n\r\nRegarding the Test Server and framework issue. There is a possibility to turn that off, I've gave explanation why it is like that here: https://groups.google.com/g/ravendb/c/fsCHcnET_Y4/m/yh22h3v4CAAJ"""
11264,710009097,"b""@JohnGalt1717 \r\n\r\nFor near future I would say no, for longer, yes. The first RavenDB working on .NET 5.0 will be RavenDB 5.1. There is an interface 'ISerializationConventions' that we introduced in RavenDB 5.0 that can be used to switch the default serializer.\r\n\r\nThat being said, even if we will introduce new serializer in the future, we do not see a reason to immediately drop the old one (or drop it at all), especially when the old one is based on JSON.net - one of the most popular and broadly used JSON serialization frameworks in .NET world.\r\n\r\nHope that this answers your question."""
11264,710020597,"b'Another aspect to consider is hashing of JSON data. You need to ensure proper ordering of the properties, removing whitespace, etc.\r\n\r\nHow do you currently compute the hash?\r\n\r\n'"
11262,710034711,b'We found a better approach. Will open a PR soon.'
11208,710068506,"b""I see the same here, large objects returned from Queries, I got a lot of memory being used...\r\nDon't know how to deal with it.\r\nUsing version 4.2, 5.0 and the latest from myget, same results :cry: """
11208,710108446,"b'See here, might be relevant: https://github.com/ravendb/ravendb/pull/11265\r\n\r\nDo you have a way for us to reproduce this?'"
11264,710109886,"b'I\'m in the process of investigating this, but my plan is to put in an interceptor that looks if the type implements an interface. If it does, then I know that the timestamp field is there as is the previous hash. and then I would just take the object, convert it to json, use that + the previous hash and the timestamp to create an SHA256 hash and then store that in the hash field of the object based on the interface.\r\n\r\nAnd then have another interceptor that doesn\'t allow delete on an object that is of interface type.\r\n\r\nOf course, it would be super cool if this was more low level and we could define a collection as a blockchain and that would cause all objects that are stored in that collection in Raven to have to implement the interface, and RavenDB would enforce read/insert only, and would automatically find the previous record, get the hash and then hash everything together and store the hash in the hash field from the interface (and optionally encrypt the record itself)\r\n\r\nThe reason why it would be cool if Raven did this at a low level is that it would be definition create a distributed block chain, it would be implemented in database itself, and would be faster because we wouldn\'t have to pull the previous record (and be assured that it was the previous record) to get the hash and then do the write.  And on these collections, all servers would have to be in sync, and you could also tell it what other replicated servers in other geographic environments have to be in sync too before the write is complete.\r\n\r\nThe first obvious use case for this is a banking ledger.  And the geographic environments are required because to be a FI or Acquiring processor you must have at least 2 geographic regions that your system is up in.\r\n\r\nMake sense the use case?  My short term was just a thought of ""how do I get the data to be consistent always and not have to worry about the serializer to be able to hash the string representation of the data?\r\n\r\nBut the more I think about it, the best solution would be in database deep in the plumbing.  This would make for an absolutely killer use case for RavenDb.'"
11208,710119524,"b""I'll try to create a repo and share with you"""
11264,710132433,"b""I should mention that the ordering of fields I deal with because I use DataContract and DataMember(Order) attributes so it's known."""
11208,710243260,"b""Ok, just pushed here: [sample](https://github.com/lucascebertin/sample-ravendb-memoryconsumption)\r\n\r\nIt's a simple console app, insert 1000 of registries then loop query for all.\r\nThe memory starts to grow, from 30MB to 1.3GB ~ .14GB, then drops to 900MB ~ 1GB, then finishes.\r\n\r\nMaybe irrelevant but I'm on Linux Manjaro, 20.1.1"""
11260,711111251,"b""> ` from employee in employees` ??\r\n> \r\n> Didn't you mean products?\r\n\r\nThe actual index as shown in the studio is:\r\n```\r\nfrom product in docs.Products\r\nselect new {\r\n    UnitOnStock = LoadCompareExchangeValue(Id(product))\r\n}\r\n```"""
11257,711146240,"b'after changes we generate the following:\r\n```\r\n.Lambda #Lambda1<System.Func`2[Sparrow.Json.BlittableJsonReaderObject,FastTests.Issues.RavenDB_7493+Foo]>(Sparrow.Json.BlittableJsonReaderObject $json)\r\n{\r\n    .Block(\r\n        System.String $String,\r\n        FastTests.Issues.RavenDB_7493+Foo $result) {\r\n        $result = .New FastTests.Issues.RavenDB_7493+Foo();\r\n        .If (\r\n            .Call $json.TryGet(\r\n                ""Bar"",\r\n                $String)\r\n        ) {\r\n            $result.Bar = $String\r\n        } .Else {\r\n            .Default(System.Void)\r\n        };\r\n        $result.ListOfStrings = .Call Sparrow.Json.JsonDeserializationBase.ToCollectionOfString(\r\n            $json,\r\n            ""ListOfStrings"");\r\n        $result\r\n    }\r\n}\r\n```'"
11257,711147411,"b'Just noticed that `List` or `Dictionary` are _always_ instantiated, even if they are not in the `json` or initially `null`.\r\nhttps://github.com/ravendb/ravendb/blob/ce71904c0cc6d4ac33be8a22d732da3c94e4c374/src/Sparrow/Json/JsonDeserializationBase.cs#L650\r\nBut I suggest to have different ticket for that in case we even what to fix it. '"
11264,711869006,"b'If you want to ensure consistent hashing, you _have_ to ensure proper ordering.'"
11257,711968197,b'The one thing that worries me about this is that we might be using a custom comparer in the case of a dictionary. But it would be easier to just forbid that then support it.'
11257,711986335,"b""We already have 'JsonDeserializationStringDictionaryAttribute', but I'm wondering if it is not better to take whatever was created in ctor (e.g. dict with custom comparer) and if it is null then create default instance?"""
11257,711988629,"b'I would rather avoid this completely, given that we have no use for that right now'"
11260,712256448,b'Is it worth changing the documentation to address this example for compare exchange and index with a compare exchange?'
11260,712602652,b'yes'
11260,712619750,b'> Is it worth changing the documentation to address this example for compare exchange and index with a compare exchange?\r\n\r\nCreate an issue in RDoc and assign to Reeb'
11275,712620177,b'@grisha-kotler Please check failing tests: https://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/3949/'
11278,712772526,b'Failing test\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v4.2/3954/'
11208,712789091,"b'May i help with something else?\r\nAny news, please, let me know and thanks for your help'"
11208,712831620,"b""Hi @lucascebertin \r\n\r\nI will be looking at the issue today in the evening or tomorrow afternoon. I will keep you posted. We made some enhancements that are available in 5.0-nightly Client API and I'm very curious how they affect your case."""
11208,712843251,"b""@ppekrol, thanks!\r\nAre they available at myget?\r\n\r\nI just tried it when @ayende told me about, it's pinned 5.1.0-nightly-20201015-0935\r\n[This line in csproj if helps](https://github.com/lucascebertin/sample-ravendb-memoryconsumption/blob/main/Sample.RavenDb.MemoryConsumption.csproj#L10)\r\n\r\nLet me know if I could help with anything."""
11208,712844619,"b'@lucascebertin Yes, they are available here: https://myget.org/feed/ravendb/package/nuget/RavenDB.Client/5.0.4-nightly-20201019-0907'"
11208,712845321,"b""I'll try it and share the results, thanks for the tip"""
11208,712870125,"b'@ppekrol, my scenario changed a lot after using this nightly and @ayende, sorry, I misunterstood your advice previously.\r\nThought that using nightly 5.1.0 was the improvements.\r\n\r\nSharing the results:\r\nMy app memory starts to grow, but sometimes shrinking, after the dispose automatically I got 130MB used, no more 1GB+.\r\nShould I try it or wait for a release?'"
11208,712880050,"b""@lucascebertin The new behavior that you described is something that I would actually expected to see. And I'm really happy that this is the case. I've checked all the changes that we made in 5.0 between last stable and today. The fixes there are related to memory management and some corner cases. If it is OK with you, I would recommend sticking with the nightly till our release around 9th of November."""
11208,712884016,"b""Perfect, @ppekrol, going to stick with it.\r\nProbably we'll publish this upgrade because we have a few PODs dying.\r\nThanks!!"""
11208,712893813,b'Great.\r\n\r\nI will close down this issue. Please reopen if needed.'
11278,713401733,"b'I have spoken with @karmeli87 and while we have the option to filter  revisions while export/import\r\nand the user can also ""delete"" revision later by enforcing revision configuration\r\nso the limitation of not import/export revisions from conflict is not necessary.'"
11293,713452709,b'I think this should go to 4.2'
11261,713457691,b'@JohnGalt1717 @jhancock4d I created more than 1000 dbs using guid as a name with the provided code `store.Maintenance.Server.Send(new CreateDatabaseOperation(new DatabaseRecord(dbName)));`  and could not reproduce the error.\r\n\r\nCan you share a sample code or app that demonstrate the issue?'
11261,713547511,"b'Here\'s the code that works with the test server, but fails in Raven Cloud:\r\n\r\n```\r\n\t\t\tvar store = new DocumentStore\r\n\t\t\t{\r\n\t\t\t\tDatabase = connectionStrings.RavenDbMaster.DatabaseName,\r\n\t\t\t\tUrls = connectionStrings.RavenDbMaster.Uris.ToArray(),\r\n\t\t\t\tCertificate = connectionStrings.RavenDbMaster.UseCertificate ? RavenDbSettings.GetClientCertificate(connectionStrings.AzureKeyVault) : null,\r\n\t\t\t};\r\n\r\n\t\t\tstore.Conventions = new DocumentConventions\r\n\t\t\t{\r\n\t\t\t\tSerialization = new NewtonsoftJsonSerializationConventions\r\n\t\t\t\t{\r\n\t\t\t\t\tJsonContractResolver = new StrictTypeContractResolver()\r\n\t\t\t\t},\r\n\t\t\t\tMaxNumberOfRequestsPerSession = overrideMaxRequests ? int.MaxValue : 30,\r\n\t\t\t\tFindCollectionName = (type) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tvar constName = GetCollectionName(type);\r\n\t\t\t\t\tif (!string.IsNullOrEmpty(constName))\r\n\t\t\t\t\t\treturn constName;\r\n\r\n\t\t\t\t\tvar name = type.Name;\r\n\t\t\t\t\tif (name.EndsWith(""s""))\r\n\t\t\t\t\t\treturn name;\r\n\r\n\t\t\t\t\tif (name.EndsWith(""y""))\r\n\t\t\t\t\t\treturn name[0..^1] + ""ies"";\r\n\r\n\t\t\t\t\treturn name + ""s"";\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tstore.Initialize();\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tstore.Maintenance.ForDatabase(connectionStrings.RavenDbMaster.DatabaseName).Send(new GetStatisticsOperation());\r\n\t\t\t}\r\n\t\t\tcatch (DatabaseDoesNotExistException)\r\n\t\t\t{\r\n\t\t\t\tif (!createIfNotExist)\r\n\t\t\t\t\tthrow;\r\n\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tstore.Maintenance.Server.Send(new CreateDatabaseOperation(new DatabaseRecord(connectionStrings.RavenDbMaster.DatabaseName)));\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ConcurrencyException) { } //Database was created while this was occuring\r\n\t\t\t}\r\n\r\n```\r\n\r\nIt\'s implemented in an extension method that is called in Startup.cs if that matters.'"
11208,713718656,"b""@ppekrol, in an asp.net core app, I'm seeing the memory slowly grow up but no shrinking.\r\n\r\nThis could be a problem at my side, so, could you guys check my DI setup, please?\r\n```csharp\r\n        public static IServiceCollection AddRavenDB(this IServiceCollection builder, RavenDBOptions options)\r\n        {\r\n            var store = new DocumentStore\r\n            {\r\n                Urls = options.Urls,\r\n                Database = options.Database,\r\n                Certificate = options.Certificate,\r\n            };\r\n\r\n            store.Initialize();\r\n            builder.AddSingleton<IDocumentStore>(store);\r\n\r\n            builder.AddScoped<IAsyncDocumentSession>(serviceProvider =>\r\n                serviceProvider\r\n                    .GetService<IDocumentStore>()\r\n                    .OpenAsyncSession()\r\n            );\r\n\r\n            return builder;\r\n        }\r\n```\r\n\r\nIs it ok or should I change something here?"""
11208,714384881,"b""Hi @lucascebertin \r\n\r\nI do not see anything suspicious here. What you need to be aware of is that RavenDB Client API contains caches (e.g. for HTTP) and memory pool (for memory management) and during the execution of the application the memory can be retained there for future use.\r\n\r\nThe question is if you are seeing levels of memory beyond something that you would consider 'normal'?"""
11208,714776302,"b""Sorry for taking so long, @ppekrol.\r\nI tried a lot of things but my PODs still get bigger over time.\r\nWell, I mean, bigger = 400MB after 2.5k requests that query the database with large objects.\r\n\r\nChanging the lifecycle from singleton to scoped changed significally this result... still measuring but it's stay under 170MB, what is really acceptable for me.\r\n\r\nI don't know if I should tweak something else to reduce memory and stay singleton, any ideas?\r\nBTW, tried reduce de Http Cache Size, same results of 400MB+."""
11261,714924281,b'@gregolsky Please take a look'
11208,714943499,"b'DocumentStore should definitely be singleton, but the Session should be scoped. I think that the best way would be to take a memory dump and analyze what is taking memory there exactly. Then we can see what can be done.'"
11046,714973313,b'Moved to: https://github.com/ravendb/ravendb/pull/11285'
11261,715110184,"b""At first I thought it could be related to CPU credits or low IOPS, but I checked your instance logs and metrics and there's nothing there like it.\r\nI created an instance like yours and tried to reproduce this, but with no luck so far.\r\n\r\n\r\n"""
11301,715206297,b'What is missing (except from TODOs) is to incorporate the `LastProcessedReference` into the query result Etag. But I believe that this will be done later.\r\n\r\nSo current changes LGTM'
11208,715281910,"b""Got it, I'll try to do that and get back with something else.\r\nThanks!"""
11261,715304750,"b""@gregolsky Could it be because multiple tests were running in parallel?\r\n\r\nI'm fine with this not working. Just would be better if the error message said something useful about what actually happened.\r\n\r\n(And the Test Driver wasn't so sensitive about 3.1.x releases of .net core. (the x part)"""
11305,715621792,b'Superceded https://github.com/ravendb/ravendb/pull/11307'
11307,716041695,"b'@ppekrol Note that https://github.com/ravendb/ravendb/pull/11308 is the same, but for v4.2, your call on how to best merge these.'"
11307,716105247,b'Will merge to 4.2 first'
11306,716105419,b'This is superseded by: https://github.com/ravendb/ravendb/pull/11308'
11261,716133024,"b'@JohnGalt1717 Are you creating the _same_ database name for parallel tests? If so, that can cause the issue, yes.\r\nIn tests, you are expected to have a different db for each test'"
11229,716145794,"b""Rebased on the latest and re-run those queries, they all work. Very strange. Will test again on CI.\r\n\r\nI don't believe that this should have any impact on backward compatability of queries. Such queries were invalid, so cannot happen."""
11311,716149953,"b'@karmeli87 Thanks, that was indeed an issue'"
11261,716169434,"b'No, the guid that\xe2\x80\x99s appended to the name is changed every time and then torn down after so that tests can execute in parallel on a clean database with seed information. '"
11261,716185973,b'Is it possible that you are creating enough to cause slowdown on the server?'
11264,716191698,b'FYI: \r\nhttps://ayende.com/blog/192260-B/putting-json-in-a-block-chain-first-decide-what-your-json-is?key=e9a34829acf14d0c9735146a39e57fb8'
11261,716218693,b'Quite possibly.  Testing on a 48 core processor that runs all of the tests in parallel.'
11314,716325031,b'I have tested this with versions 5.0.2 and 5.0.3 of the package'
11308,716349906,b'Related Lucene PR: https://github.com/ravendb/lucenenet/pull/18'
11314,716485470,"b'Hi,\r\n\r\nI tested the both settings, and they work properly.\r\nMake sure to bootstrap the server or create a database on first server run:\r\nhttps://ravendb.net/docs/article-page/4.2/Csharp/studio/server/cluster/add-node-to-cluster#bootstrap-cluster'"
11314,716932018,b'Confirmed. I created a database and the license is accepted. It may be worth adding a hint to the license config page as I had no idea about the server being in passive mode. Feel free to close.'
11314,717056604,b'[https://issues.hibernatingrhinos.com/issue/RDoc-1827](https://issues.hibernatingrhinos.com/issue/RDoc-1827)'
11316,717240760,b'Does this mirror the behavior of counters and documents?'
11229,717246545,b'Fixed.'
11316,717465349,"b""well..\r\n![image](https://user-images.githubusercontent.com/6377808/97348264-93470c00-1896-11eb-9442-6f0f070b4a61.png)\r\n\r\n~~also we don't throw at the endpoint if the page size is zero..~~"""
11320,717788961,b'@Danielle9897 will add new improments to PR shortly'
11327,719396919,b'It is causing a lot of test failures. Can you check those?'
11315,719434248,b'We have test failures: https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.0/1640/'
11330,720392076,b'Rebased to 4.2'
11340,721042089,b'Note: `Server.ThreadPool.MinThreads` should be set to `null` on `v5.0` once https://github.com/ravendb/ravendb/pull/11321 gets merged. '
11336,721113440,b'Superseded by https://github.com/ravendb/ravendb/pull/11341'
11347,721380353,b'This fixes: `FastTests.Voron.EncryptionBufferPool.dont_pool_buffers_larger_than_8Mb`\r\n\r\nWe clear the json context pool same way:\r\nhttps://github.com/ravendb/ravendb/blob/399342c91116fff469a72a71dac1f5e17c4f90e9/src/Sparrow/Json/JsonContextPoolBase.cs#L330-L334'
11349,721554802,"b'Need this on 4.2, not 5.0'"
11285,721739419,"b'LGTM, @garayx can you rebase?'"
11285,721867438,b'@ppekrol \r\ndone'
11362,722377003,b'1. Had to disable Trimming (investigating)\r\n2. Test Single File App on Linux'
11374,723825633,b'`SlowTests.Client.TimeSeries.Session.TimeSeriesStreamingTests.CanStreamRawQueryAsync` test that is failing here was fixed in separate PR: https://github.com/ravendb/ravendb/pull/11378'
11376,723845529,"b""@ml054 Can you check failing tests? https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.0/1704/\r\n\r\nI've scheduled another run - https://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.0/1706/"""
11372,723957500,b'The 2 commits fixing the race conditions LGTM. Thanks @karmeli87 for explaining that to me.'
11383,724028498,b'LGTM'
11285,724060354,"b'LGTM too!, Just few nitpicking comments :-)\r\n'"
11391,724753408,"b""Hi,\r\nDid you read this? Especially the part about self-signed certificates.\r\nhttps://ravendb.net/docs/article-page/4.2/csharp/start/installation/setup-examples/kubernetes/azure-aks#deploying-secrets\r\nThe easiest way to go here is to use a certificate from a well known certificate authority. Either a paid one, or from Let's Encrypt."""
11390,724757046,"b""Converting the crt and key to pfx is something you can easily automate using OpenSSL. \r\nRegarding automatic certificate renewal, it's not possible. In order to renew a certificate, one must have control of the domain. RavenDB cannot renew your private certificate."""
11392,724765722,"b""Maybe I'm missing something here but I don't understand how that will simplify things.\r\nIf I understand correctly, you had problems generating and using a server certificate.\r\nHow would a password (to grant easier first access?) solve the problem that you need to start RavenDB with a server certificate?\r\n\r\nThe server must run with a server certificate. To gain first access, you can use the server certificate (acting as a client certificate).\r\nThen, afterwards, client certificates can be generated in the UI.\r\n\r\nThink about the server certificate as a password. It can also be expressed as a base64 string that you can pass along to the client on first access."""
11391,724768268,"b""Yes, but this is test environments and we use let's encrypt in production generated using cert-manager in kubernetes.\r\n\r\nRavendb is requiring a double cert because of the way it's setup to work.\r\n\r\nRavendb should recognize that it's behind a proxy, so that it doesn't need a server cert. Then the first time it runs it should generate a client certificate.\r\n\r\nThis is how raven would be configured in kubernetes or any docker envirnment.\r\n\r\nSo since it doesn't do this, I'm trying to get it working with a self-signed cert because what RavenDB uses litterally doesn't matter at all because the end user will NEVER see it because kubernetes' ingress will https everything and passes the request to RavenDb.\r\n\r\nSo how do I reliably get this to work under kubernetes with cert manager generating the certificate that haxproxy is providing and have Ravendb behave properly and just use the self-signed cert for client authentication?"""
11390,724774102,"b""You're miss understanding:\r\n\r\nIn kubernetes you will use cert-manager (https://www.jetstack.io/cert-manager/) or some other certificate acquisition mechanism which will then store that as a secret. In the case of cert-manager it generates tls.crt and tls.key within the kubernetes secret.\r\n\r\nFurther RavenDb on kubernetes will always be behind a reverse proxy and shouldn't require a certificate for server encryption at all because RavenDb should be recognizing the reverse proxy and understanding that it is encrypted. This is what should be in the Configure method of your Startup.cs for at least Studio to get going:\r\n\r\n```\r\n\t\t\tvar forwardOptions = new ForwardedHeadersOptions\r\n\t\t\t{\r\n\t\t\t\tForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto,\r\n\t\t\t\tRequireHeaderSymmetry = false,\r\n\t\t\t};\r\n\r\n\t\t\tforwardOptions.KnownNetworks.Clear();\r\n\t\t\tforwardOptions.KnownProxies.Clear();\r\n\r\n\t\t\tapp.UseForwardedHeaders(forwardOptions);\r\n\r\n```\r\n\r\nIn RavenDb insists on requiring its own cert, per the documentation that lets you specify a base64 encoded kubernetes secret mounted as a file, I should be able to mount the above .crt and .key files as files in a folder for RavenDb to read and RavenDb should be able to use those (tls.key and tls.crt in this case) for all of it's encryption from cert-manager's automatic domain wildcard generation that already happened so that I don't have to do this twice since I already have a valid wild-card certificate from cert bot using dns validation.\r\n\r\nFurther, RavenDb should be monitoring the pfx and or key/crt files and if they change reloading it's certificates automatically.\r\n\r\nGiven that RavenDb is already using cert bot in the background for the let's encrypt environment (which requires public access on port 80 which is not viable in any configuration other than a direct hosted VM or similar), there should be no reason why RavenDb can't be setup to accept key/crt files instead since that's what cert bot generates anyhow, so you're already either generating a pfx file yourselves or you're using key/crt in your C# code to create the x509Certificate2.\r\n\r\nHence I'm requesting that in addition to accepting a pfx, you let us specify the paths for a .key and .crt file that you'd then make the pfx from so that this will work with 3rd party cert bot or any number of other automated services that don't cater to window's insistence on pfx files and that we can't automate generating a pfx file from because it's an opaque service.\r\n\r\nThere's documentation here: https://stackoverflow.com/questions/55456807/create-x509certificate2-from-cert-and-key-without-making-a-pfx-file that would allow you to facilitate this easily."""
11391,724775498,"b'Well, I\'m not sure we can do that.\r\nRavenDB must be the one to do the ssl termination.\r\n\r\nIn our example we put the following setting in ravendb.yaml:\r\ningress.kubernetes.io/ssl-passthrough: ""true""\r\n\r\n@ayende can you confirm?'"
11392,724778418,"b""1. If RavenDb is behind a reverse proxy then I shouldn't need a server certificate in RavenDb at all. It's done for me, RavenDb should be listening on http ONLY and using the reverse proxy information to know it's in SSL at the ingress automatically (Posted previously in the other ticket)\r\n\r\n2. Since it's behind a reverse proxy and it can communicate directly with it's cluster nodes insecure in kubernetes because there is no way for external traffic to monitor the kubernetes cluster, there is no reason at all in this configuration to require ANY server side certificates and ravendb should know this.\r\n\r\n3. I should still however require clients to use their certificate (or a boring old login and complex password which wouldn't be any less secure) even though the server itself is setup to recognize the reverse proxy configuration and know it's secure so I shouldn't be able to login client certificate-less.\r\n\r\nAs far as I'm aware as soon as you enable insecure mode, for the server itself it also doesn't require client certs."""
11391,724782496,"b""My point is that I don't want, nor would anyone using Kubernetes to EVER have RavenDb doing SSL termination. There is absolutely NEVER case where this is desirable.  The same is true for anyone using docker itself correctly.\r\n\r\nYou ALWAYS want your ingress doing SSL termination and you want everything internal to the kubernetes cluster to eliminate the overhead. i.e. the clusters talking to each other should always be unencrypted in the kubernetes cluster so all of the SSL overhead goes away because it simply isn't necessary.\r\n\r\nHere's an example:\r\n\r\n1. External client makes request of API - ingress decrypts and passes to API\r\n2. api within kubernetes cluster talks to ravendb directly without encryption - No SSL encryption overhead.\r\n3. RavenDB cluster talks to one or more nodes to get data directly without encryption - No SSL Encryption overhead.\r\n4. RavenDB responses to API directly without encryption - No SSL Encryption overhead.\r\n5. API responds to kubernetes external client without encryption but because of how kubernetes works, that goes to the ingress proxy unencrypted, the increase proxy reencrypts it and responds to the client.\r\n\r\nYour way:\r\n\r\n1. Encryption\r\n2. Encryption.\r\n3. Encryption (x however many nodes)\r\n4. Encryption\r\n5. Encryption\r\n\r\ni.e. exponentially more encryption routines for no reason because Kubernetes has created the security envelop that RavenDb thinks it should be in charge of when it shouldn't be making it WAY less efficient than it should be for no security benefit.\r\n\r\nAll TCP communication should be done internally unencrypted, and external TCP communication should be blocked off outright or should be proxied by HA proxy or similar ingress."""
11390,724786961,"b""Yes, you're right, I misunderstood.\r\n\r\nWe actually have a mechanism that recognizes and refreshes the certificate if it changed on disk.\r\nSo all you have to do is convert the renewed crt+key to pfx with OpenSSL and then replace the file on disk.\r\n\r\n@ayende, do we want to support crt+key?"""
11390,724788394,"b""@ayende @iftahbe \r\n\r\nI would suggest for kubernetes, you MUST support crt+key because of the scenario above.\r\n\r\nAnd I'd suggest that your kubernetes sample be altered to use haproxy to do SSL offload and if you must, just ALSO use the same certificate from cert-manager for ravendb."""
11392,724906379,"b""To elaborate on #2, basically to really work in an isolated environment like k8s, docker-compose etc, there needs to be 2 separate mechanisms:\r\n\r\nStudio needs to use l/p. Browser certificates aren't going to happen because ingress client certificates is global to the entire ingress not just your ravendb endpoints defined. Thus studio needs different auth, and then client certificates are fine internally, but really not optimal. A single solution would be better."""
11384,725210625,"b""The issue was, that prior to 5.1 we skipped the `Load` completely, so the SQL writer wasn't  created. (which can take few seconds!)\r\nNow we don't skip because we are getting `IEnumerable`."""
11392,725264804,"b""1) The problem is that it won't be able to do _authentication_. How would we be able to tell what permissions to give to the request?\r\n2) In general, TLS termination is a bad idea, because in the portion of the network where the data goes in plain text is vulnerable to a lot of mischief. In particular, if you have other actors on the K8s running.\r\nWhen running in K8s, it is fairly common to have some apps running inside K8s as well as well as access RavenDB from outside. In that case, you cannot run it without authorization.\r\n3) That would mean that you have to do some non trivial configuration on the reverse proxy to do SSL client cert auth, then send the values to RavenDB.\r\nOf course, we'll have to guard against direct access that will provide those headers, etc. \r\n\r\nRavenDB security is a binary property, intentionally. Complex configuration (run https locally, auth based on headers, coordinate with reverse proxy, etc) is not simple. \r\nYou can define K8s to avoid TLS termination and send the request directly to RavenDB. In that case, everything works as it should and there is no need for this complex setup.\r\n\r\nLogin & password mode over plain text isn't safe.\r\n"""
11390,725265598,"b'This is a supported scenario, yes. \r\nSee: https://ravendb.net/docs/article-page/5.0/csharp/server/configuration/security-configuration#security.certificate.exec\r\n\r\nThe idea is that you provide a script and register it via Security.Certificate.Exec, it can get the certificate using its own logic.\r\nIn this case, by getting the certificate from K8s. \r\n'"
11391,725267222,"b""@JohnGalt1717 I would contend otherwise. Even inside your K8s environment, you don't want to have potentially sensitive data going over the wire. There are other parties running there, and ensuring that the data is always encrypted is a best practice.\r\n\r\nFor example, if another node in the cluster was compromised, if the data is passing in plain text, it can be eavesdropped. If it is encrypted, you have to compromise the database node to get to the data.\r\n\r\nIn our mode, there is actually the exact same amount of encryption.\r\n\r\n1) external encrypt the data and send to k8s\r\n2) K8s doesn't touch the data, just route it to RavenDB\r\n\r\nThe data is encrypted and decrypted once in both cases.\r\nThat is key, since there isn't multiple levels of encryption going on here.\r\n\r\n"""
11392,725423047,"b'I\'ve spoken at length with a friend of mine that gives lectures at Kubernetes conferences at the behest of both Google and Oracle. I think that there is a major misunderstanding of how K8s is designed to be used.\r\n\r\n1. K8s is designed to be used with ingress that that terminates SSL. It is not designed to pass through SSL to services. It\'s a hack enabled by the underlying services (HA proxy etc.) that it allows this, not the design intent.  K8s to quote him and their documentation, is designed to be a secure, reproducible environment to the edge and should be treated no different than bare iron running on a rack with a router, firewall and reverse proxy of the past.\r\n\r\n2. TLS termination is not a bad idea if setup correctly within your k8s environment. Your argument is ""because you might have stuff running in k8s that is dangerous, it\'s dangerous to do it all the time.  That\'s the problem, your K8s environment is supposed to be a microcosm of exactly what your system needs and nothing else and shouldn\'t have any direct access to anything incoming at all with the exception of your ingress controller. And if you have malicious stuff that is stealing data by packet sniffing (not really possible because the containers don\'t have network snoop access unless you explicitly give them it with NET_CAP) and then using egress to send that to a 3rd party externally, you\'ve got MUCH bigger problems that a client certificate and TLS isn\'t going to solve.\r\n\r\n3. Login and password is only dangerous if done across a network for which you don\'t have complete control that is also unencrypted. By definition on k8s you have 100% control, no different than an isolated rack behind a RP in the past of the internal non-routable network.  All traffic that goes across a network that you don\'t have complete control MUST be encrypted, and in that environment, login and password is no less secure than a client certificate. In fact, alone, login and password is identical to a client certificate because both are bearer token, nothing more and don\'t validate anything other than possession.  Thus an RP that handles SSL offload that then sends decrypted communication across the non-routable, closed network with containers that cannot packet sniff and services that are directly communicating across that non-routable network without the ability to packet sniff is NOT a security risk. This is the fundamental design principle of k8s.  Yes you can defeat it.  But you have to work hard to do so, and that\'s your problem and we shouldn\'t be designing things to defeat stupid network admins.\r\n\r\nA correct design of a k8s cluster will always and should always look similar to:\r\n\r\n1. Ingress controller that has VERY limited ports accessible. Typically only 80 and 443. In fact one of the limiting factors of k8s right now is that it is only designed to ingress http traffic.  This is by definition a reverse proxy.\r\n\r\n2. One or more apis/micro services receiving traffic redirected and decrypted by the ingress controller configured a services behind the ingress controller that specifically map ports and other required configuration to the pods within those scale sets or deployments. A database should never be receiving direct requests across the ingress controller if done correctly.\r\n\r\n3. The apis/microservices SHALL not receive traffic directly, and SHOULD only communicate with other things WITHIN the kubernetes cluster. I..e the apis/microservices should be talking directly over the k8s internal, non-routable network to databases ALSO hosted within the kubernetes cluster, they should NEVER be communicating over routable addresses to services within the k8s cluster. (which is how your documentation is designed)\r\n\r\n4. Your cluster SHOULD contain all services necessary for your environment to be fully functional. I.e., while it\'s common practice for your cluster to be talking to other cloud services (i.e. Azure Media Services or similar), all of those services should be within the k8s cluster whenever possible and SHOULD NOT be publicly accessible. And if you do need external services, there are only 2 ways that you can communicate with them: 1. Initiate the communication via egress, 2. have them communicate via the ingress controller reverse proxy to a service.\r\n\r\n5. A properly configured k8s environment with the database hosted withink the k8s cluster SHOULD NOT have the database directly accessiable over the ingress controller. In fact, RavenDb should not have ANY services setup nor ingress definitions at all for anything other than Raven Studio, and even that should be restricted by IP address at the ingress controller if possible and simply disabled when not in active use outside the k8s cluster.) \r\n\r\n6. There currently is no way with how RavenDb is setup to have RavenDb properly hosted within a cluster with websites. Why? Because SSL pass through is a global ingress setting.  Hence you would have to enable it on all your micro services and websites within the k8s cluster.  That means you have to maintain that certificate on ALL of them instead of just the ingress controller where it should occur. Further RavenDb doesn\'t support key/crt thus you cannot automate this with cert-manager or any mass change of the certificate that is supported by k8s either so even if this was desirable (it is not by any stretch in any configuration) it\'s a non-starter.\r\n\r\nAll of this is stated within the k8s documentation AND supported by experts from google and oracle on the topic.\r\n\r\nThus a correct use of RavenDB in an ideal environment would be RavenDb within the k8s environment WITHOUT any access at all externally EXCEPT basic management tasks within Raven Studio.\r\n\r\nThe way that you have your documentation and the design considers only RavenDB being hosted in K8s in a 0 trust environment for public consumption and even then you\'re defeating the ingress design principles of k8s.  It does not address, nor does it appear that the ravendb model for access is even capable of properly handling a real-world, best practices implementation of k8s where all services that will talk to the ravendb itself are internal to the k8s cluster and ONLY basic management will be done over the wire.\r\n\r\nI strongly encourage you to rethink this so that it can be properly configured to support k8s as intended to be used as this is a fundamental design pattern that has enormous uptake.\r\n\r\nAs an aside, rvn cli (rvn is there but not marked executable and even marking it executable doesn\'t appear to allow it to run) doesn\'t work within the docker container so you cannot connect to your k8s cluster, exec into the pods and do things using the Raven CLI as it currently stands which defeats how Raven should be setup in a closed environment because we can\'t script creation of databases etc. using the cli on deploy.\r\n\r\nIf you\'re interested, what I would suggest you strongly consider doing is:\r\n\r\n1. Decouple client certificates from server certificates. The 2 shouldn\'t have anything to do with each other, and the first client certificate should be generated on first run and all subsequent access to the actual database (not necessarily raven studio) should require that client certificate or another created one.\r\n2. Enable Studio to recognize reverse proxies. In the setup wizard or on the screen if you really have an issue with this, make a note that it\'s running behind an RP if you wish but with encryption to the RP so that people KNOW that they\'re making that choice and should have their network configured correctly. (and reject if no server certificate AND no RP with encryption)\r\n3. Allow login and password for management functionality over raven studio and allow us to disable from the cli within the containers the raven studio.  Only enable l/p functionality if TLS either directly or via RP if you wish.\r\n4. Completely decouple raven studio from the ravendb containers so that a cluster can have a single container of raven studio that can be controlled as up or down from kubectl and thus control availability at all, and then have separate containers for ravendb itself that is completely headless.\r\n5. I\'d suggest that Raven Studio etc. automatically should create a self-signed server certificate on first run if one isn\'t defined in configuration and allow it to be overridden in the setup wizard if so desired by the end user so that HTTPS is always available, and the end user can choose to trust the self-signed cert or not as a fall back if not behind an RP (this would also allow the RP to send reencrypted to ravendb within the cluster if you insist using the self-signed cert which still terminating the public certificate)\r\n\r\n\r\nThis could be accomplished incrementally by not throwing an error on startup if ServerURL and ServerPublicUrl don\'t have the same scheme and then enforcing the scheme of ServerPublicUrl against ServerURL for incoming requests using the Reverse Proxy configurations in Kestrel.  Then add login/password support for Raven Studio, then split studio into it\'s own container that manages one or more nodes of RavenDb containers but does so only on the non-routable k8s network.\r\n\r\nAlmost all of this is possible right now but it has major blockers that prevents best practices k8s deploy. I.e. I can set an enviornment variable of RAVEN_Security_UnsecuredAccessAllowed and value of PrivateNetwork.  This will enable the microservices within k8s to communicate without encryption and thus eliminate the overhead within the non-routable network.  (and even using a cert in this environment that was decoupled from the server cert for identification would possibly be desirable) That\'s great and I would then just not expose TCP over the ingress nor services.  The problem becomes Raven Studio which is a major blocker for management as it currently stands across a properly configured k8s cluster with reverse proxy doing what it should.'"
11390,725424663,"b""This doesn't really address the issue.  First, I can't find any documentation on HOW that's supposed to work.  What exactly does that exec return?  What is ravendb then monitoring for changes?  I can't find any documentation that shows how this is intended to function, only that it exists.\r\n\r\nI.e. the k8s secret will always be key and cert files. Thus ravendb MUST know to watch the key and cert files, not a resulting pfx file.  If I used this presumably to run openssl to convert the key and cert to pfx, and told ravendb to use the resulting pfx, ravendb would simply watch the pfx file, not the key/cert files for changes and thus would end up with invalid certificates within 90 days because of course the pfx won't have changed, and thus openssl won't be called again to regen the pfx file."""
11390,725426412,"b'Detailed description on how to make use of this feature is here:\r\nhttps://ravendb.net/learn/inside-ravendb-book/reader/4.0/13-securing-your-ravens#externalizing-certificate-management\r\n\r\nThe idea is that you can run a script that would return the update cert to RavenDB when run. \r\nRavenDB will run the script on a regular basis, giving you the chance to update this.'"
11391,725428324,"b""@ayende In your K8s cluster properly configured there is NOTHING running inside your k8s environment that you didn't put there and NO container has access to packet sniffing unless explicitly granted with NET_CAP or HOST networking thus no container can sniff traffic that isn't destined for that container directly and thus it is irrelevant if other services are communicating directly within the non-routable k8s internal network without encryption. NO consumer of your database within the k8s environment should EVER be communicating with RavenDb that is inside your k8s environment with a publicly accessable dns or ip. It should ALWAYS be communicating directly within the k8s network using the k8s dns for the non-routable ip address.\r\n\r\n2. You're assuming that you're using k8s as a deticated RavenDb cluster that is publically available. While this is one use of k8s for RavenDB (as a 0 trust hosted service effectively) it isn't how a properly configured environment should be implemented. EVERYTHING that talks to RavenDb should be within the k8s cluster and RavenDb shouldn't be publically accessible at all. Only Studio should be directly available and even then only as needed, never perpetually.\r\n\r\nThe intent of k8s is to create a complete, closed environment of everything that you need to run whatever it is you're doing and only expose your publicly facing services to the public internet or even your intranet. It's a walled garden of safety and reproducibility and security who's access to those public endpoints is carefully controlled by your ingress. It isn't designed to go and stand up a RavenDb cluster and then have another k8s cluster talk to that cluster publicly over the internet. That would be both not cost effective and insecure by design. (or at least significantly less secure)\r\n\r\nLet's say I wanted something else to do reporting against RavenDb that is in the cluster. In a properly configured cluster I have 2 options: Run that something else within the k8s cluster itself, OR provide a microservice that is secured and publicly accessible that that something else talks to, and the microservice then talks to RavenDb.  The way you're designing it is no different than me using Azure SQL and just blindly trusting that Microsoft got their security so right that it's safe to have SQL Server available on the public cloud directly accessible. (which is also inefficient)"""
11390,725430043,"b""As far as I'm aware this won't work for openssl. If you have a specific example of using openSSL that will output the cert to the STDOut for this, I'm all ears.  But this also induces overhead of generating the pfx from the key/crt files on a periodic basis instead of just using the files that make up the pfx itself anyhow directly.\r\n\r\nIn general we're just running around in circles while I try and jam a square ravendb peg into the round k8s hole because RavenDb is not designed to work in an environment as k8s is designed to provide."""
11390,725913859,"b""Here's an example: https://ravendb.net/docs/article-page/4.2/csharp/server/security/authentication/lets-encrypt-certificates#automatic-renewal-for-self-obtained-certificates"""
11392,725933586,"b""1) Your situation is a scenario where your K8s is running in a trusted envrionment. \r\nWe don't consider this to be a valid scenario. I wrote about this here:\r\nhttps://ravendb.net/articles/the-network-is-always-hostile\r\n\r\nMicrosoft leaked access to 250 *million* support records because of this (false) assumption.\r\nSee: https://www.comparitech.com/blog/information-security/microsoft-customer-service-data-leak/\r\n\r\nAnother important reading on the topic: https://blog.cryptographyengineering.com/2015/08/16/the-network-is-hostile/\r\n\r\n2) Assume that you a running a node application in a container. You are using a dependency that opens a shell:\r\nhttps://www.zdnet.com/article/three-npm-packages-found-opening-shells-on-linux-windows-systems/\r\n\r\nNow you effectively have an instance in your system that is owned by a malicious user. \r\nYour security model at this points assume that you cannot escape the limits of the container at this point.\r\n\r\nFor example:\r\nhttps://blog.trailofbits.com/2019/07/19/understanding-docker-container-escapes/\r\n\r\nAt this point, you are now with a malicious agent on the system and they can listen to everything.\r\n\r\nWe take the stance of defence in depth, since there is little cost of doing TLS to RavenDB and many benefits.\r\n\r\n3) You assume that everything is fine, and that there have been no issues / vulnerabiltiies. If you have any issue, your\r\noption leads to catastorphic data loss. If we are running encrypted, you have many walls yet to climb.\r\n\r\nA client certifcate is signifncantly better than a bearer token. You cannot MITM with a client certificate, even if you have root CA \r\ninstalled, for example. You cannot reply requests and operations with client certificate. \r\nThe idea is that with cleitn certificate, both sides will authenticate properly using cryptographic primitives. That is *significantly*\r\nstronger gurantees than bearer tokens or login/pass.\r\n\r\n\r\nWith regards to the K8s setup, you can define the following.\r\n* SSL passthrough to the RavenDB instances.\r\n* Limit access to the nodes based on IP.\r\n\r\nAlternatively, don't expose RavenDB to the external world at all, just use internal DNS and use TLS inside the K8s network.\r\n\r\nThe rvn exec should be marked as executable, and should just work inside a container. Can you create a separate issue on this?\r\n\r\n\r\n1) The server certificate is used to authenticate to _other_ ravendb instances as a client certificate, as well as possiblity for server authentication,\r\nbut not beyond that.\r\n\r\nThe model you suggest in this case would result in a much more complex setup process, because you have to create multiple certificates.\r\n\r\n2 & 3) No, doesn't meet our security modeling requirements.\r\n\r\n4) I don't think that I follow what you mean here?\r\nThe studio is not actually related to anything. This is just the web interface for a node.\r\nYou can do the same using REST operations in the same manner.\r\nYou can deploy RavenDB without the studio, if you so wish.\r\n\r\n5) Self signed certificates are *problematic*. They won't work by default with most clients.\r\nFor example, you'll have to go through a process of trusting the certificate when working from your own dev machine. \r\nThat is complex, prune to failure and causes support issues.\r\n\r\nWe use Let's Encrypt by default preciesely because in the end things Just Work.\r\n\r\n"""
11366,725971246,b'@ayende can you check failing test?'
11392,726057918,"b""As I've said, the issue isn't certificates, it's how you're going about doing them.  If you believe all of the above, all of which can be easily mitigated, then you still need to be using a valid SERVER certificate. Your Let's Encrypt implementation CANNOT be used in k8s.  A properly configured k8s implementation uses Reverse proxy and cert-manager. \r\n\r\nThus:\r\n\r\n1. RavenDb needs to work in this environment. If you want it to have server side encryption, that's fine, let us mount the cert-manager secrets and it should just work and then I'll set our reverse proxy to encrypt to the service as well, you're done. That means directly support monitoring crt/key files and using those instead of the windows-centric pfx standard.\r\n\r\n2. RavenDb cannot be publicly accessible in a properly configured k8s environment because of the use of client certificates for Raven Studio. (client certificates are fine for the other containers within the k8s cluster talking to RavenDb, it isn't fine for a properly configured environment with a single source of SSL termination (and then reencryption if you believe it's required using self-signed certs that don't expire)) This needs to be addressed so that Raven Studio can be accessed through the reverse proxy. That means Raven Studio needs to be reverse proxy aware and support login and password over the encrypted channel. (and I would completely disable public access to anything else and Raven Studio shouldn't be communicating directly either via ajax)\r\n\r\n3. RavenDb needs to allow all the nodes in the cluster to work directly across the private network in k8s, not against publicly addressable dns entries and ONLY expose Studio against the RP.\r\n\r\n\r\nWhat I've done temporarily is use openssl in the exec to convert the key/crt files into pfx (not ideal) and then use that with Raven and then tell it that it's public addresses are all internal dns to the cluster and then use kubectl port forwarding to access Raven Studio.  This works for 90 days and then has to be redone. And it's a pita to use.\r\n\r\nObviously this is a hack required because of a design that doesn't take into account k8s properly configured as a single environment for your entire solution as I've previously outlined because of assumptions of RavenDb being publicly accessible outside the k8s cluster which is not how it will be used in the real world by the vast majority of people properly using k8s.\r\n\r\n(BTW, your docker container release example requires --privilaged which no container should be run as, and can't get those permissions itself unless a human maliciously runs it that way short of a massive security breach in K8s itself, which of course, will directly expose your storage and everything else including your server certificate and thus allow decoding of all of the data across the wire and at rest anyhow.)"""
11407,726251879,b'Rebased.'
11392,726286228,"b""I take it back. Using port forwarding in Kubernetes, UnsecureAccessAllowed doesn't work even if set to PublicNetwork"""
11390,726316383,"b'I did the following:\r\n\r\n```\r\n            - name: RAVEN_Security_Certificate_Load_Exec\r\n              value: ""openssl pkcs12 -inkey /ssl/tls.key -in /ssl/tls.crt -password pass:<redacted> -export""\r\n```\r\n\r\nwhich didn\'t work with ""failed to start process"".\r\n\r\nThen I tried this:\r\n```\r\n            - name: RAVEN_Security_Certificate_Load_Exec\r\n              value: openssl\r\n            - name: RAVEN_Security_Certificate_Load_Exec_Arguments\r\n              value: pkcs12 -inkey /ssl/tls.key -in /ssl/tls.crt -password pass:<Redacted> -export\r\n\r\n```\r\n\r\nUnable to load the server certificate due to invalid configuration! Admin assistance required.\r\n ---> System.InvalidOperationException: Got invalid certificate via openssl pkcs12 -inkey /ssl/tls.key -in /ssl/tls.crt -password pass:<Redacted> -export\r\n ---> Interop+Crypto+OpenSslCryptographicException: error:23076071:PKCS12 routines:PKCS12_parse:mac verify failure\r\n\r\n\r\nIt\'s pulling from a let\'s encrypt certificate issued by cert-manager in k8s. '"
11332,726577616,b'This will be handled differently. @karmeli87 and @garayx spoke.'
11392,726600056,"b'Not sure why you believe that Let\'s Encrypt cannot be used in K8s, we have done \r\nso in quite a few cases, with no issues.\r\n\r\n1) To integrate with K8s certificates, the Security.Certificate.Exec gives you the ability\r\nto fetch the certificate via K8s\' mechanisms.\r\n\r\n2) RavenDB is design so it would do its SSL termination and authentication. I understand that you may \r\nnot like this behavior, but I have no plans on changing it, for the reasons specified in the issue. \r\nThe term ""easily mitigated"" is another form of saying ""potential data leak"". If your security system assumes that\r\neverything has been properly setup, you\'re at risk. RavenDB\'s security design takes the assumption that the network\r\nis hostile, always. Because a single breech can be catastrophic.\r\n\r\n3) That is possible, yes. You can setup: `PublicServerUrl.Tcp.Cluster`.\r\nSee: \r\nhttps://github.com/ravendb/ravendb/blob/v5.0/src/Raven.Server/Config/Categories/CoreConfiguration.cs#L27\r\n\r\nThis is designed for just this scenario, so the inter cluster communication will go through private IPs instead\r\nof the public ones.\r\n\r\nYour OpenSSL work can be done in a script and then provided to Security.Certificate.Exec, and at this point, RavenDB \r\nwill take care of that.\r\n\r\nAs for Dokcer and privilaged, can you explain what you mean?\r\nWe don\'t require this to run.\r\n\r\nI checked:\r\nhttps://ravendb.net/docs/article-page/4.2/csharp/start/installation/running-in-docker-container\r\nhttps://github.com/ravendb/ravendb/blob/v5.0/docker/readme.md\r\nhttps://hub.docker.com/r/ravendb/ravendb/\r\n\r\nI\'m not sure where you got that, and I would like to fix it.'"
11390,726610643,"b""Pretty sure that the problem is with the command you send.\r\nYou need to use:\r\n\r\n```\r\n- name: RAVEN_Security_Certificate_Load_Exec\r\nvalue: openssl\r\n- name: RAVEN_Security_Certificate_Load_Exec_Arguments\r\npkcs12 -inkey cert.key -in cert.crt  -passin pass:<Redacted> -passout pass: -export\r\n```\r\n\r\nNote that in this case, the output PFX should be generated without a password. \r\nThat is why it didn't work for you.\r\n"""
11392,726763022,"b""You can EITHER run Let's encrypt with cert-manager as designed an intended by k8s, OR you can run it for RavenDb.  You can EITHER run k8s with Reverse Proxy ingress as intended terminating SSL with the let's encrypt certificate OR you can run pass through with RavenDB.  You cannot do both.  (see my other ticket, using Exec with OpenSSL against a cert-manager generated let's encrypt certificate results in an error using the openssl converted ket/crt into pfx.)\r\n\r\nThe fundamental problem is that RavenDb works fine in k8s if the only thing in your k8s cluster is RavenDb.  But that is NOT how anyone other than a service provider in a 0 trust environment would run it. I.e. it's perfectly fine for you with your cloud product. It is NOT fine for anyone using k8s as it's designed to run with ALL of your code and dependencies in the k8s cluster with a single point of entry through the ingress. I have yet to see ANY design of RavenDB running in k8s that doesn't defeat everything else running in the cluster.  i.e. If you require SSL pass through to RavenDb then you cannot run it in the same cluster as your website's nor API because either you're now terminating SSL at each of those and have to maintain certificates at every one of those endpoints instead of the single RP and just created an N^replica maintainence problem, or RavenDb won't work even if you using a self-signed certificate in RavenDb and have the RP reencrypt to RavenDb.\r\n\r\nThis is the fundamental problem statement. Show me a working configuration with a .NET API where the RP is doing SSL Termination, reencrypting to the .NET Api project using the .NET Api Project's self-signed cert that is trusted for everything in the cluster, and have the same work for RavenDb in the same cluster and do so automated without having to hack the hell out of it.\r\n\r\n1. => It doesn't work. If it does work, demonstrate as such using the industry standard way in k8s of retrieving let's encrypt certificates which is jetpack/cert-manager.\r\n\r\n2. As I've said, feel free to give me an example using a self-signed cert on RavenDb itself or even signed using the cert-manager certificate with the RP not set to ssl pass through thus defeating everything else inside of the cluster if you think this is an issue.  And to be clear by mitigated, I mean, the default configuration of k8s doesn't allow the examples you gave to actually work. In every case their examples of so-called insecurity of what I've proposed required humans to run code explicitly insecure and there was absolutely no automated approach that could have gotten you there. Even your example of node opening consoles is useless, because the console within the container with the default security permissions of containers doesn't let that container escalate to root on the host cluster, and without explicitly using --privilaged or giving NET_CAP to the cluster, both of which require humans to configure it that way, NOTHING in any container will ever be able to snoop traffic.  So, I'm fine running certs, but client certs, which are nothing more than bearer tokens are not secure in and of themselves any more than login and passwords. There's literally no difference in any scenario. (which is why the banking industry is not allowed to use client certificates without login and password anymore and can only use them as a method of doing 2fa. I'm literally the guy that proved this to them and got the rules changed.)  While using a client cert might be a way to ensure traffic between services is authorized, it is no more secure than using hashed keys like Azure Storage or AWS or anyone else uses in any setup with the same transport security and any escalation of privileges achieved in the container also by definition exposes that client cert which is now a bearer token for blind trust. (exactly like Azure Storage keys, which is why they're going to RBAC and we don't store any of these anywhere anymore.)\r\n\r\n3. Docker privileged: Every one of your examples of why using unencrypted wire communication within a k8s cluster was not secure required --privileged or NET_CAP privileges on the container. I was not claiming RavenDb required it. I was stating a fact that your assertion that it's a security risk to run containers communicating with each other in a k8s cluster without transport security is unfounded and would require a complete mis-configuration of your cluster and to do so actively. And if you did so, it wouldn't matter if you were using transport security and client certificates, because the same access required to use those exploits also would compromise the certificates.\r\n\r\n\r\nSo really what this is about is:\r\n\r\nPlease update your documentation to provide a real-world style implementation of k8s where:\r\n\r\n1. RavenDb is within the cluster itself, and has no external communication other than RavenDb Studio. (you can feel free to encrypt the server and add client certificates however you wish, I don't care to argue on this one, the point is moot because the overhead is minimal and the RP can easily reencrypt using whatever Cert you want)\r\n2. The cluster itself uses the industry standard jetpack/cert-manager (and by industry standard I mean the k8s documentation explicitly instructs its use) to terminate external SSL at the RP.\r\n3. The RP does not have SSL-passthrough enabled.\r\n4. The language of your choice hello-world REST api running within the cluster, with SSL termination at the RP, using a self-signed cert if you insist, where the RP recrypts to the REST API. This REST API will communicate directly with the RavenDb cluster within k8s.\r\n5. The ability to use Raven Studio externally or through some other method to the cluster that doesn't require me to stand on my head externally and still securely. (i.e. I want to run RavenDb as a black box most of the time, but I should still be able to get in and manage it visually when problems arise).\r\n6. At no point do I have to configure multiple containers within the k8s cluster certificates more than once with certificates, nor intervene nor maintain multiple let's encrypt methods in multiple containers.\r\n\r\n\r\n\r\n(and seriously, client certificates alone are not secure. They're bearer tokens. Compromise of the certificate and you're done. For end users with things like Raven Studio, they should always be used as 2fa with login and password at worst.  And having the transport certificate and the default client certificate in the same cert is very not good, they should have nothing to do with each other.)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"""
11390,726781786,b'That appears to work.  Wish you could specify the default client certificate separately.'
11392,726789992,"b""I've enabled this: https://github.com/ravendb/ravendb/blob/v5.0/src/Raven.Server/Config/Categories/CoreConfiguration.cs#L27\r\n\r\nHowever, because the cert is for a public address and not the internal url, it rejects it for setting up the cluster.  Similarily trying the ip also fails with the same issue.\r\n\r\nSo once again stymied, although I have a single database setup through massive effort on a single node within k8s with it actually working and not defeating everything else in the cluster... So if I can get around the cn/san not matching (which is inmaterial in the case of the cluster) then I can at least hack this using k8s port forwarding to make studio work for the moment."""
11390,727543865,"b'What do you mean, default client certificate?'"
11392,727556272,"b'From the other ticket, you are now able to setup openssl correctly to read the certs from `cert-manager`, right?\r\nSo there shouldn\'t be an issue with running passthrough with the `cert-manager`.\r\n\r\nI\'m not sure that I follow what the issue is with regards to N^replicas? \r\nThe clients needs to have a client certificate that RavenDB will trust, yes, but I fail to see how this relates to running your application inside the same cluster?\r\n\r\nNote that I would be very doubleful that you _can_ get a Reverse Proxy to sit in front of RavenDB. You\'ll need to make it handle client cert auth, and they are generally not meant to do that.\r\n\r\nThere are a few ways to make this work for your scenario:\r\n\r\n* Register the client certficates for the apps you are using in RavenDB. Note that the client certificate doesn\'t have to relate to the server certificate in any manner.\r\n* You can (but probably shouldn\'t) register a Well Known Certificate as part of the RavenDB configuration. \r\n\r\nYou won\'t have a scenario with SSL Termination and Reverse Proxy, we explicitly don\'t want to support this, for the reasons outline above.\r\n\r\n2) Your logic is similar to: If you\'ll just `free()` any memory you `malloc()` there will be no memory issues.\r\nThere is a _wide_ body of experience that shows that this isn\'t the case. And if your security configuration relies on there being no mistakes, it will fail.\r\n\r\nIn the case I outlined, you\'ll need a multi stage attack. First, get to the point where you have a way to execute code. The node example spawning console is a good example of how that can happen in a ""trusted"" environment. \r\nThe next stage is to escape the container\'s limits. Here is how you can do that:\r\nhttps://sysdig.com/blog/cve-2020-14386-falco/\r\n\r\n""..enables an unprivileged local process to gain root access to the system.""\r\n\r\n3) RavenDB security properties shouldn\'t depend on the user not running anything with NET_CAP. I won\'t argue about ""a complete mis-configuration of your cluster"", the issue isn\'t that this is what it takes. The issue is that this happens _all the time_. \r\n\r\nFor example: https://www.shodan.io/search?query=elastic\r\n\r\nTook me 1 minute to find a database open to the world with no password that had real live data in it.\r\n\r\n\r\n1) The RavenDB Studio is simply a web client on top of the existing REST API. There is no meaning to ""allow only RavenDB Studio"" with no external access.\r\n\r\nFor the rest, your requests contradict our threat model and security policies and cannot be acoomodated.\r\n\r\n'"
11412,727600725,b'This should go into 4.2'
11390,727956514,"b""Right now if you use your own certificate the sever (transport) certificate and the default client certificate are in a single certificate chain.\r\n\r\nI'm not sure why this decision was made but it makes life more difficult.  It would be better if we could have a standard transport certificate that just does transport encryption that we can trust on the local machine. And then a client certificate that is issued separately for encryption.\r\n\r\nBetter yet, have the setup wizard, or the first run, automatically generate the first client certificate for you, and once complete, require that certificate or another issued one for all further communication.  This way, there's no hacking around trying to generate this (the only way I've successfully generated a cert that works is with your powershell script, nothing I do can cause openssl to generate one) AND the certificates have separation of concerns.\r\n\r\nOf course it would still be better if the server itself over tcp could use certs and Studio could use l/p over ssl so that this worked properly the way k8s is designed."""
11392,727995621,"b""No. I can't use cert-manager because you're checking the SN and not SANs. As a result, I can't issue a cert with cert-manager that has both our public wildcard dns, and the alternative internal dns names in k8's dns thus one server can't talk to the others in the cluster nor can I use kubectl port-forward to get into the raven statefulset directly and bypass the RP as this doesn't work either for the same reason AND allow unsecured can't be turned on and work with kubectl port-forward thus thwarting all efforts to find a work around for your refusal to support RPs properly.\r\n\r\nMy point to this whole thing is that your understanding of how a k8s cluster works is wrong. I would NEVER expose RavenDb outside the cluster directly. NEVER. And your requirements would mean that even if I did so, ALL other services within the cluster would either have to use client certificates (not happening on a public website that's in the same cluster!) or do their own SSL termination on each of those services. (not happening because that creates a logistical nightmare that will almost certainly result in embarrassment and service downtime because of an accidently expired certificate somewhere to say nothing of the heightened risk that someone makes a mistake in configuration or code and creates a security vulnerability)\r\n\r\nYour example (again) requires a malicious user or bad configuration. Read carefully. AND in your scenario and your documentation example, that pod would then also have access to your transport and client base certificate, so your point is moot. (i.e. it can easily run kubectl get secrets and pull the secret you've got mounted or simply access them from the mount in the pod and then can run roughshod over the whole thing. In fact, mounting the certificate makes it far easier to hack because any code you run has access to the entire chain including client cert, without even breaking out of the pod.)\r\n\r\nAND I already gave you the solution that would work even if I accepted your argument: Simply have the RP recrypt the communication using the RavenDB server's self-signed cert and communicate with the server over TLS. Then there is absolutely no benefit to a client certificate (bearer token) versus login and password (also a bearer token) in an end to end TLS environment even with an RP recrypting.  (and what I'm saying is directly from the OpenIDConnect website that goes through this in deepth with the 4 flows and why password credential and client certificate are effectively the same thing versus hybred or code flow which is vastly superior even without 2fa.)\r\n\r\n**So since you're unwilling to recognize this, all I ask is that you provide some mechanism for this to work in the cluster, encrypted with a private certificate, all nodes in the raven cluster working properly on the k8s dns with each other, and me being able to access raven studio and the database over kubectl port-forward WITHOUT ANY ACCESS AT ALL OVER THE RP INGRESS.**\r\n\r\nAnd do so in a way that doesn't require me to stand on my head to get certificates working.\r\n\r\nI.e.: (to crush the 3 other stories when I thought this was going to be simple)\r\n\r\n1. Allow issuance of a transport (server) self-signed certificate that is separate from the client certificate and provide explicit openssl commands to generate said certificate in a way that you find acceptable in documentation without an obviscation in multiple files. I've wasted over 8 hours of my life just screwing with your specific certificate requirements because you're using a single certificate for both transport and client validation which should never happen.\r\n2. Recognize both the SN and SANs in said certificate and accept them. i.e. *.statefulsetname.k8s.cloud.net is the SN, ravendb, ravendb-0, ravendb-1, ravendb-2 (etc), are all SANs on the certificate which should also be accepted as should direct IP address access with the same certificate. (the later because of kubectl port-forward)\r\n3. Allow me to separately issue the initial client certificate, or MUCH better yet, allow no client certificate on first run and have it either automatically dump the default client certificate into a directory on first run, or have the setup wizard generate the first one on first run and download from Studio, without requiring it initially and then lock the server down after the cert is generated and require the client cert there after. (on the dump to directory option, feel free to refuse access at all until the client certificate is removed from the directory it was dumped to)\r\n4. Ensure that kubectl port-forward to the stateset works properly without obstruction.\r\n\r\nThis allows all of my services in k8s to access ravendb, separates the client certs from the transport cert making RavenDb more secure and making it less of a PITA to provision a new environment, and allows developers and support people to access the cluster when diagnosing issues directly if they have access to the cluster using kubectl and port-forward without exposing it over the RP and without requiring the RP handle client certificates that as you correctly noted isn't going to happen.\r\n\r\nBy doing so, I can viably keep RavenDb private in the k8s cluster, follow what you perceive to be an issue and make this work. Until I can make this work in at least this way, RavenDb is broken in how k8s is supposed to be used and will have to be dropped from the 3 major projects that I have it accepted for that combined would generate over $60k in revenue for you per year. (one of which is already spending money in your cloud for our test environment which is what this was all about in the first place, moving the test environment into a developer license in K8s, saving us some money during development, and then using that to replicate production when we're ready inside our production k8s)\r\n\r\nPlease provide a scenario where this will work, or a commitment to make this work at least, or tell me no once and for all so that I can cut bait and move on."""
11314,728021869,b'Handled here: https://github.com/ravendb/ravendb/pull/11419'
11425,728076910,"b""@ppekrol Dumps do work if those 2 files are there in the package, but I'm wondering whether we need some more files. See:\r\n```\r\nCertain additional binaries may be optionally included with the app to enable debugging scenarios. The work to not require these binaries as separate files on disk alongside the app is ongoing.\r\n\r\nFor F5 debugging on VS and VS-Core: mscordbi.dll, libmscordbi.so\r\nFor Linux mini-dumps: createdump, libmscordaccore.so\r\nFor ETW / LTTng: clretwrc.dll, libcoreclrtraceptprovider.so\r\nFor exception stack trace source information, error string resources on Windows: Microsoft.DiaSymReader.Native.amd64.dll, mscorrc.debug.dll, mscorrc.dll\r\n```"""
11390,728849302,"b""I'm afraid that I'm not following you here. This thread (and others) are getting pretty big. It would probably be much faster to setup a call and discuss this live, rather than in these exchanges.\r\n\r\nNote that there is no requirement to use the server certificate as a client certificate. The setup wizard _will_ generate the first admin certificate for you to use. This is generated from the server cert, but you can also register any other certificate you want as well."""
11390,728849626,"b""You can ping us at support@ravendb.net with your time zone and we'll setup a call"""
11392,728865280,"b""We are absolutely checking the subject alternative names for the certs.\r\nYou can also set things up so that the cluster will have multiple topologies (private / public / external).\r\n\r\nThe moment you want to access the Studio from outside K8s, which is very reasonable thing to want to do, you are exposing RavenDB. The Studio uses the same REST interface as the API, so there is no separation between the two. \r\n\r\nI fail to see what your reasoning to avoid using SSL inside the cluster. It adds a minimal amount of overhead and has very little operational cost. Your clients can pull the certificate from the secrets manager if needed, which eliminate the issue of updates.\r\n\r\nIf you security setup assumes no malciousness and 100% no faulty configuration, that is going to fail. \r\nRegardless, the issue is that you have is with authentication. You need to authenticate that the client is authorized to access a certain database. In your mode, all clients can access everything, which is not typical. You'll have different applications that can only access certain portions of the data. \r\nPutting it all behind a proxy defeats that.\r\n\r\n1) We are using single certificate for ease of deployment, but there is no such requirement. \r\nThe setup wizard will typically generate a separate client certificate for you.\r\n\r\n2) SAN & SN are all acceptable in the cert. As for IPs, if your trusted certificate has that in the SAN, it should just work.\r\n\r\n3) That is how the setup wizard works, see: https://ayende.com/blog/180801/ravendb-setup-a-secured-cluster-in-10-minutes-or-less\r\n\r\nI think that this is getting a bit out of hand to handle via text here. I suggest we handle this via a call. You can ping us at support@ravendb.net with your timezone and we'll setup a call."""
11332,728889483,b'https://github.com/ravendb/ravendb/pull/11434'
11443,731838380,b'Please only check if the test failure is related to this PR:\r\nhttps://jenkins.hibernatingrhinos.com/job/PR_Tests_v5.0/1809/testReport/junit/SlowTests.Issues/RavenDB_15754/CanIndexTimeSeriesReferencedCompareExchangeWithQuery/'

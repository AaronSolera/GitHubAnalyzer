pull_no,comment_no,comment_body
185,76186273,b'I updated the code to use Version(String) and increment the revision number.\n'
1727,170168287,"b""It's just a way for me to keep track of TO DO items. Makes sense to remove it for MRTK."""
1727,170174682,"b'Makes sense, I made almost all fields private, and serialized all but the GlobalBoundingBox, since I believe that never gets set (we look for a gameobject in the scene instead which I assume is a pattern elsewhere in MRTK).'"
1727,170175510,b'Done.'
1727,170175566,"b'Out of curiosity, why is using `CameraCache.Main` better than Camera.main?'"
1727,170176274,"b'Hm, based on my reading of `CustomInputSource.cs` it seems like manipulation events are fired whenever a motion controller is moved and a button is down, regardless of whether something is actually being manipulated. Further, the events contain information about the controller id attached to the manipulation. In contrast the `StartedManipulating` and `StoppedManipulating` events are specific to this object--the event communicates ""a specific object began being manipulated"". Additionally, an object may be manipulated by more than one input source, which would not fit with the current structure of the `ManipulationEventData`. For these two reasons, I think it\'s better to keep the events as separate.'"
1727,170176556,"b'@cre8ivepark should comment more here, but my understanding is that this \'BoundingBoxBasic"" UI element can be located anywhere in the scene. Actually after reading the code, we may want to just have a separate component ""ShowBoundingBoxWhenManipulating"" that would listen to the manipulation started and stopped events, and show/hide the bounding box. That would separate the concerns of two handed manipulation (which just manipulates objects) and the rendering of feedback (showing the bounding box). I\'ll see if I can do this over the weekend, or Yoon/somebody else please feel free to make the change.'"
1727,170177547,b'The pattern I emulated was the `StartedDragging` and `StoppedDragging` events in `HandDraggable.cs`'
1727,170502371,b'Fixed.'
1727,170509459,"b'I tried using the existing ManipulationStarted events and then using a modified `ButtonReceiverExample` class to log & change some text when I received `ManipulationStarted` and `ManipulationCompleted` events, but I got confused when I saw three different `ManipulationStarted` events get logged when I pressed using a simulated hand in editor.\r\n\r\nI then realized that my confusion occured because the same manipulation events were being fired both for the hand input source that began the drag operation, and also for the two hand manipulatable script. I\'m not sure where the third manipulationstarted event came from, perhaps from the second simulated hand.\r\n\r\nUsing this experience as an example, it seems like it would be better to not confuse ""manipulation started"" events that come from the Mixed Reality APIs with the events that indicate ""this two hand manipulatable has started moving""'"
1727,171656025,"b""Okay, I'll look at that this weekend."""
3737,270597133,"b'>TryGetHandRayPoint(currentController, out touchingPoint); [](start = 16, length = 57)\r\n\r\nIs TryGetHandRayPoint needed any more? It looks like this code is doing something like point = event.pointer.controller.pointer. Seems like you could just do `touchingPoint = eventData.Pointer.Position`.'"
3737,270597231,b'Is there still a need to track currentController?'
3855,272449296,"b'This is showing up on the preview as text, not an image. Maybe the link is broken?'"
3904,273777642,"b'No, I didn\'t know what they meant either. Updated to jus say ""create using 3D template""\r\n\r\n---\r\nIn reply to: [273692256](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3904#discussion_r273692256) [](ancestors = 273692256)'"
3904,273778313,"b""Updated to say 'next steps'\r\n\r\n---\r\nIn reply to: [273693048](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3904#discussion_r273693048) [](ancestors = 273693048)"""
3881,273792945,"b'I notice we are now adding dependency on .SDK which I think is okay since foundation now has toolkit, services, and SDK. But calling it out in case it is not okay.'"
3933,274656282,b'nit: I think public fields in structs normally start with a capital letter [reference here](https://microsoft.github.io/MixedRealityToolkit-Unity/CodingGuidelines.html#naming-conventions)'
3933,275877781,b'typo:used.'
3933,275879096,b'I believe private bools should start with lower case. It would be good to [review the coding guidelines here](https://microsoft.github.io/MixedRealityToolkit-Unity/CodingGuidelines.html#naming-conventions).'
3933,275879742,"b'Please put braces after ifs like this here, and below.\r\n\r\n```\r\nif (condition)\r\n{\r\n  then stuff\r\n}\r\n```'"
3933,275880360,b'Braces.'
3933,275880763,"b""What's the difference between transform and buttonContentTransform?"""
3933,275880981,"b""Doesn't the name 'transform' override the monobehaviour 'transform'?"""
3933,275884736,"b""We should make sure that the info endPos will display correctly even if the scale of the pressablebutton is very small like 0.01. Isn't maxPushDistance given in world units? """
3933,275885661,b'what is this 0.3f representing? Could we maybe take this magic number and have it be a more descriptive variable?'
3933,275886625,"b'just curious, why are you modifying zPosition as a ref variable instead of just returning the new zPosition as a return value for the method?'"
3933,275887178,b'magic number'
3773,275890875,b'Missing a newline at end.'
3773,275891112,b'I believe we should be using braces in if statements like\r\n\r\n```\r\nif (condition)\r\n{\r\nthen do stuff\r\n}\r\n```'
3773,275892035,b'Do we need a new namespace for this?'
3773,275892446,b'Braces'
3773,275892539,"b""Braces...there's more below, would be nice to fix please for consistency."""
3773,275893478,b'Private fields should start with lower case. See [coding guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/CodingGuidelines.html#naming-conventions)'
3933,276015346,b'Looks like this field is already declared above.'
3933,276015598,"b'I believe having the Tooltip attribute here will cause a compile error - ""Duplicate tooltip attribute""'"
4013,276739337,b'I like IMixedRealityPointerDragHandler. What are your thoughts on just adding OnPointerUpdated to the IMixedRealityPointerHandler interface? I can see a downside of this being a breaking change. The upside is it does not add another interface to MRTK.'
4013,276739542,"b'I like OnPointerDragged instead of OnPointerUpdated as well. So IMixedRealityPointerDraggedHandler, OnPointerDragged.'"
4013,276739701,b'Why are we setting IsFocusLocked here?'
4022,277023648,b'Great point! I will update.'
4022,277023725,"b'Oh, great suggestion!\r\n'"
4013,277025611,"b""Just because we don't want to raise pointer down or up events if the pointer is not enabled, meaning in GGVPointer case to not raise events when the object is not active. For other interactions for example hand rays, we don't want to raise events if say the hands are facing the user and the rays should be off"""
4013,277025704,"b""Interesting, sounds like we weren't doing this before. Was this a bug?"""
4013,277027123,b'Pointer Dragged.'
4022,277045576,b'Fixed.'
4022,277048080,b'Done.'
4022,277048429,"b""Going to keep this, first to make line computation easier, and second because I like being able to specify start and end points that aren't always centered about the slider."""
4022,277175543,"b""@Railboy I'm changing internal representation of start and end to be a distance from center of slider along the slider axis so that if you change the slider axis, the start and end handles maintain their distance to the center instead of snapping to zero. \r\n\r\nIt should still be easy to use line classes to draw the slider track, since you can still get and set the start / end positions of the slider track in world space."""
4056,277748982,"b""Don't you also need to update objectToHandRotation to use the pointer pose?"""
4056,277750167,b'Will this correctly use the grip pose rotation instead of the pointer pose rotation?'
4042,277754349,b'I think we no longer need this.'
4042,277757894,b'I think we no longer need this.'
4077,278390692,"b""I removed OnInputUp/OnInputDown from interactable because I don't see a case where OnPointerDown / OnPointerUp does not handle this, and because I couldn't think of a way to not respond to OnInputUp from PokePointer without specifically ignoring that type"""
4047,279038331,b'I wonder if you are building for ARCore / ARKit the display type should be transparent. Also...magic leap also should be transparent.'
4047,279038477,b'What does SourceID mean here and why is it always zero'
4047,279038787,"b""it's a little funny that you are changing currentDisplaytype in the getter. What if IsOpaque never gets called? Will currentDisplayType be invalid until IsOpaque is called? Is that a dependency you want to maintain?"""
4047,279039187,"b'Could you please comment the interface, like what it should be used for so others can understand why it exists?'"
4047,279039494,"b'Interesting...what bug is this fixing, out of curiosity? I wonder if it could get turned off and then not back on.'"
4035,279159965,"b'nit: can we please put brackets with our if statements, to follow the coding guidelines? You do this above.'"
4118,279616750,"b""Would be nice to explain why we are doing this null check here instead of just using pointerIdToPointerMap.Count, it's not obvious to me :-)"""
4118,279616921,"b'> Not to sound self-referential but this PR fixes the issue it fixes, i.e.: #4117. I agree ManipulationHandler could do with a general review (e.g. use of controller velocities) but in the meantime fixing those null references does no harm and help us with upcoming changes to gaze pointer.\r\n\r\nI think Stephen actually has a point. This will unblock people yes, but really we should remove all that velocity code from ManipulationHandler. I created a separate bug to track that. It sounds like this at least temporarily unblocks you though, which is why I approved this PR.'"
4035,279943226,b'What is the consequence of setting MRTK class to ExecuteAlways? Why do we need this?'
4035,279943880,b'HI @Railboy  could you please add the brackets around if statements? Just a reminder.'
4077,280211868,"b'Okay, I think I figured out why @killerantz  is listening to OnInputUp. Based on the comments it seems like previously the only way to globally listen for inputs was to listen for OnPointerUp events, and then fire OnClicked. Now, Pointer events are also dispatched globally. Since Interactable is registered as a global listener, it should also be able to receive all global pointer events.'"
4152,280285810,"b'Could you please add a comment here explaining why we are doing this in the code, so that when somebody new to the code reads it they know why we did it?'"
4148,280290213,"b'Curious, why did we remove this segment here?'"
4143,280290507,b'Are these TODO items still needed?'
4035,281065343,b'Reminder to delete this file and everything else under TemporaryTesting before checking in. '
4035,281065413,b'And then put something similar in a unit test so the behavior does not break in the future :-). Can be done in separate PR.'
4035,281065475,b'Reminder to revert this before merging the PR'
4181,281374029,"b""I saw those comments too. However, when I had the code above I noticed that when I ran all new 3 playmode tests that I had, the first test passed, but then the last few tests would fail (I forget which error now).\r\n\r\nAfter debugging for a bit I realized that when we create a new scene for every tests, the following happens:\r\n\r\n1. We create a scene, with one version of MRTK A for scene A.\r\n2. We unload / remove scene A, but MRTK for scene A is still around.\r\n3. We create a new scene B, but the MRTK singleton that we are using is still from Scene A.\r\n4. As we use scene B, but MRTK doesn't get any events from scene B because it seems to still be tied to scene A.\r\n\r\nWhen I removed the code to actually create this test scene, I actually managed to get all tests to pass. The reason I think this happens is that each test class creates and then properly tears down its own scene, including tearing down MRTK properly. So we get MRTK A with Scene A, MRTK B with Scene B."""
4181,281433752,"b'Okay, upon further investigation, I am wrong. Here is what I think happens in Play Mode Tests:\r\n\r\n1. At start of test run, test scene is created, with MRTK A\r\n2. All tests run in that one scene. \r\n\r\nIf we want to ensure that for each class / each test, we use a new scene, we need to destroy / create the scene in cleanup. Only problem is that when you create a new scene, the old MRTK instance is still sticking around. So if you create Scene B, the MRTK from Scene A is still around, it seems.\r\n\r\nI see two approaches:\r\n\r\n1. Destroy the scene for each test.\r\n2. In the cleanup for each scene, destroy all gameObjects in the scene. Could be very expensive.'"
4181,281433856,"b'It does, my tests are currently adding a bunch of lights to the tests, which is not correct.'"
4181,281475816,"b'Upon even further investigation (I tried adding back the technique of unloading old scene, and creating new one), I have realized why I removed the code in the first place. Two reasons:\r\n\r\nFirst, when I initially tried using this code and running two tests, I ran into the following error: ""A scene named \'TestScene\' already exists"". After I resolved that error by waiting for the async op to finish before loading a new scene, I ran into my second issue.\r\n\r\nThe second issue is what I mentioned above: that the MRTK from the old scene was still sticking around. The main symptom of this was that MRTK was throwing errors saying a main camera existed when it didn\'t. Also, after unloading a scene I would check in debugger in MRTK was still initialized, and it was.\r\n\r\nTo avoid going down a rabbit hole, I think for now a good policy is just to have all playmode tests run in the same scene. This currently means that all tests need to make sure to remove all objects they add. It\'s not great and I think we should solve the problem that MRTK is still around even when a scene is destroyed. However, I don\'t want to block completing this PR to do that, since this PR fixes bugs to manipulationhandler and does add new tests.\r\n\r\n@Railboy and @lukastoenneMS  I\'d love to hear your thoughts on this.'"
4181,281478162,"b'lights are not always needed, but I did create an InitializePlayspace method.'"
4181,281478586,b'Removed the TestFixture_ prefxi from PlayMode tests. I think we could also remove them from EditoMode Tests.'
4211,281885168,b'Ooh exciting :-)'
4211,281885713,"b'What if I want to record several different hand poses? Will these get overwritten? Might make sense to timestamp these, for example ""HandRecording-20190507_163011.json""'"
4211,281885865,"b'Curious, why are we debug.logging data and not saving to a JSON? I could imagine for example wanting to record Leap Motion hand movements.'"
4211,281886088,"b'Might be good for me to clarify: are these poses a single frame, or a recording, over multiple frames? I was assuming multiple frames. For example it would be extremely useful to be able to record hands as a user is pressing a button, or for example accidentally grabs something.\r\n\r\nI can share example code for how I did this when I was prototyping -- what I had worked for me and correctly stored timings to ensure that hand frames were replayed at exact same speed as recorded.'"
4211,281886174,"b'What is the frame of reference here? Relative to world origin 0,0,0 using camera.forward? Or, is it relative to the camera?'"
4211,281886447,"b'Curious, why do we need this, why did we not need this previously?'"
4240,282344035,"b""I'm noticing that after this change, several .asmdef files are including a dependency on Providers.WindowsMixedReality @davidkline-ms  and @keveleigh I don't know much the remifications of including this dependency, is this something that could bite us down the line?"""
4144,282345195,"b""Hm...this versioning stuff is interesting, but is it possible to move somewhere outside of the button class, so the button class can be focused on just that, pressing a button? Otherwise if we add this it's another thing we need to keep in our heads when using buttons, and coudl set a precedent for people putting unrelated code into classes.\r\n\r\nAlso, regarding versioning....is it required for this PR, or could we do the versioning experiment later? It would be too bad to prevent a bug fix from getting in just because we are experimenting with versioning."""
4144,282346634,b'Why directly set the properties here and not use the old method to determine IsTouching? touchPoints.Count > 0.'
4144,282346949,b'Is this guaranteed to be normalized? Is it okay that it is not normalized?'
4230,282348027,"b'The following command yields no results, so I believe that the reference is no longer valid.\r\n> git grep -i e676303390b2ee941b658c1d04ccdc57'"
4270,283087555,"b'This approach matches the approach used for OnSourceDetected, above. '"
4291,283087824,"b'It would be useful to describe alignment of the prefabs in a tooltip for the rotation prefab, since some people will not have easy access to the raw code and may not see this comment.'"
4270,283508769,"b""Oh interesting, I didn't know that. I simply wrote it this way to stay consistent with OnSourceDetected behavior. We may want to fix this in a separate issue. \r\n\r\nEDIT: I also just discovered that FocusProvider isn't MonoBehaviour, thanks Kurtis."""
4270,283509296,"b""Hm, interesting. Since this does not regress prior behavior (we did the same null check previously), I will keep this in for now. We can then fix this and other null checks later, as part of a separate issue. I'm trying to keep this scoped to implementing the specific behavior to match the shell."""
4270,283526354,"b'I could, but then the meaning of the else clause below would mean ""it is not near and enabled"", meaning that if the pointer was NearPointer and disabled, that it would fall into the else clause. Even though it might be okay, I think I\'d prefer to keep it this way for now, just so it\'s more clear what what else clause captures.'"
4270,283526744,"b""Okay, I'll expose the number of near and far active pointers as public property in FocusProvider. I won't make it part of the interface to avoid making a breaking change. """
4270,283590408,b'Just added some playmode tests to validate the state of cursor giving hand states.'
4270,283590976,"b""Removed this null check, because the pointer should never be null at this point in time. Other code in update loop already assumes the pointer is not null. It's appropriate in this case to crash/throw exception because this reflects program being in incorrect state."""
4270,283963599,"b'Actually, without this fix the playmode tests will fail, caused by a null reference exception that happens when removing the controller for a simulated hand.'"
4270,283963939,"b""Will also suggested this, I didn't do this because I wanted to follow the existing pattern. But it looks like the existing pattern is incorrectly checking null anyway I'll make the change"""
4270,283965596,"b""Okay, I see why it was not created as a global listener. The FocusProvider is actually not a Monobehavious, so cannot be registered as a global listener using `MixedRealityToolkit.InputSystem.Register(gameObject);`. Will keep it as is since I don't know of a solution to register the MRTK input system with a class that is not a game object."""
4270,283966222,"b'Oh wow, sorry.'"
1178,145011493,b'This looks like duplicate code compared to the existing lines below.'
205,82678402,b'I think a better name than just Example would be good. Like GameControllerTest.unity or something like that.\n'
205,82743523,"b""I agree but I was following the example set by ColorPicker: HoloToolkit-Examples/<Examplename>/Example.unity. Other examples don't have proper names under their folders either. I'll change mine as suggested.\n"""
205,82785514,b'Good point.  We should probably put in a issue for those as well.\n'
205,83063176,b'Sorry for the delayed response. Is this a Unit test type scene?\nIf so then please move it under the Tests folder under Input.\n'
205,83898465,"b""I'll merge this in soon as this is resolved on. Thank you!\n"""
205,84305763,"b""Sorry, I had a lot of work as well... no, it is not a unit test, more like an example. It's been renamed from Example.Unity as per a request above. \n"""
141,73007742,b'What is arean exactly? Sorry I was unsure if this was a typo or not.\n'
141,73008420,b'NIT: Typo: air-tap\n'
141,73008553,b'NIT: Remove Of cause\n'
141,73008604,b'Do you need to gaze at a line to remove it?\n'
141,73009260,"b""There seems to be some localized character at the end of the Tooltip. Can you please fix that for en-us so it's more readable?\n"""
141,73091069,"b""sorry, 'arean' should be 'area', and it's a error\n"""
141,73091210,b'thanks\n'
141,73091229,b'thanks\n'
141,73091315,b'User can gaze at the tip text of line and air-tap to remove the line \n'
141,73091359,b'ok\n'
319,86914714,b'Looks like GitHub codeflow is making these values weird ? :)\n'
319,86931370,"b""Yeah that's weird. I'll take a look at the scene\n"""
319,86979804,b'Looks like the keyword is getting hashed?\n'
319,87041917,"b""I don't know why this happened, but it was somehow corrupted. Looks like a hash gone wrong.\nIn any case, I fixed it, will be part of my next change..\n"""
141,73009814,b'Please follow consistent coding guides. \nif (condition)\n{\n    // some code\n}\nelse\n{\n    // some code\n}\n'
141,73091423,b'thanks\n'
141,73011730,b'Please follow curly braces pattern.\n'
141,73091457,b'thanks\n'
141,73012086,b'Did you mean to inherit from IClosable? Perhaps a better name may be? IPolygonClose or something?\n'
141,73091506,"b'good suggestion, thanks\n'"
141,73012120,b'NIT: extra lines. Please remove.\n'
141,73012259,b'Please follow curly braces pattern for if else.\n'
141,73012343,b'Define the 0.005f into private const ?\n'
141,73012436,b'I suspect this is what showed up as the character in your video :) You locale might be set different :)\n'
141,73091558,b'thanks\n'
141,73091581,b'ok\n'
141,73091620,"b'yep, and I will fix it for en-us\n'"
459,95253276,b'Could we name explicit variable types for this PR?\r\nMakes it easier for newbies and reviewers to better understand code.\r\nExceptions are fine for obvious types and same line creation with new keywords.'
1518,159317817,"b""I'm not a big fan that we have this empty override method in each of the classes.\r\n\r\nIs there a way to have the option of using this, without having to have an empty stub in every class that inherits from `Singleton`?"""
1518,160294455,"b'We could, but InitializeInternal is meant to solve a problem with script access ordering, which it will only do if it is used to initialize the object.  Having it be optional to include would render it useless, as certainly nobody would use it.\r\n\r\nI agree that it would be better to have had this from the start so they are used, and not empty.'"
1518,160296107,"b""Idk, the script runtime execution order issues seem to be a one off for most classes, not all.\r\n\r\nOption is better in this case, cause it's not something people will have to use every time."""
1518,160296170,b'Simply making the abstract method virtual in the base Singleton Class should be enough.'
1518,160296276,"b"">Having it be optional to include would render it useless, as certainly nobody would use it.\r\n\r\nI disagree, if there's a need, it'll get used.  We just need to make sure we document it correctly."""
141,73012710,b'Please do go through all your files and remove extra lines.\n'
141,73091630,b'thanks\n'
459,95253136,b'nit: explicit private'
141,73012811,b'Please have these localized to en-us.\n'
459,95253581,b'nit: explicit private'
459,95253632,b'nit: private'
459,95253690,b'nit: braces'
459,95253715,b'nit: braces'
459,95254166,"b'This causes a memory leak, unless cleaned up properly.\r\nPlease cache the material reference and delete in OnDestroy.\r\nSee https://github.com/Microsoft/HoloToolkit-Unity/pull/424 for examples.\r\nAlso: nit: variable naming is incorrect.'"
141,73013045,b'Or perhaps this character does not show up correctly?\n'
459,95254794,b'nit: please add explicit access modifier'
459,95254824,b'nit: please add explicit access modifier'
459,95254861,b'nit: private'
141,73370246,"b""Assets/HoloToolkit-Examples/GazeRuler/Scripts/Test/LineTest.cs(15,18): warning CS0414: The private field `LineTest.created' is assigned but its value is never used\n"""
459,95254915,b'nit: private'
257,81869924,b'Is this truly an example of a unit test scene? If unit test then it should reside in Utilities\\Tests folder.\n'
257,81870734,"b""I was following what was in Utilities. I'll follow what's done elsewhere and get back to you.\n\nOk, I understand now. Something a bit more technical.\n"""
257,81976042,"b'This should probaly have a more descriptive name as well like ""OutOfScreenIndicatorTest"" or ""HeadsUpDirectionTest"" .unity\n'"
1650,162461490,b'Does updating this material required for the gLTF update?'
1650,163089520,"b""The MotionControllerTest scene's cube is broken without it. I suppose it's not required for the glTF drop itself, but it fixes the main test scene for the glTF models."""
1453,157333373,"b'There are a couple files added back that were moved in the base Toolkit. This one and MicrophoneHelperSample should be removed. It might be a good idea to rebase before we merge this, since it looks like there might have been a merge somewhere that added these removed files.'"
1240,147255405,"b""This reference should be replaced with the new cursor on Managers -> InputManager's SimpleSinglePointerSelector script."""
1240,147255447,"b""This reference should be replaced with the new cursor on Managers -> InputManager's SimpleSinglePointerSelector script."""
1339,150373543,b'Should Z = 0 as well?'
1339,151258985,"b""The editor updated this every time I dismissed it. I'll have to look back and verify what Z should be."""
1555,159011032,"b""Is this adding a new cube to test out the new setting for teleporting? I don't think `InteractiveMeshCursor` is the right scene for that. Maybe `MotionControllerTest` or a new `TeleportingTest` scene?"""
1555,159054511,"b""It is adding an extra cube indeed. Do you see that as a real problem? There is a cube in the scene now, it's just a bit too high to easily place the cursor on. If you want it gone, I will delete it again"""
1555,159105054,"b""The only problem I see is discoverability, if this new cube is intended to be the test for this new feature, since it's in a cursor test scene."""
1206,146091510,"b""I think there might be some stale references in here, if you could re-save the scene and update it please, that'd be great!"""
1206,146688519,"b""Hmm, yeah it doesn't look like Unity is removing the old stuff. Cleaning up now."""
1415,155063228,"b""Should this scene work when running in the editor? Hitting play and having a controller connected (I'm using it via USB) always shows `No Controller Connected`, even when I can teleport and such with the controller."""
1415,155063952,b'Are you using an older Xbox or the Xbox one S?'
1415,155064127,b'Xbox One S'
1415,155065021,b'So the input still works even though it says no controller connected?'
1415,155070111,"b""I'm able to teleport, but I'm not able to do anything with the cube (should I be?)"""
1415,155070233,"b'Interestingly, I do get a debug statement\r\n![image](https://user-images.githubusercontent.com/3580640/33629686-cf6dfbc2-d9b9-11e7-8880-072d7108676b.png)\r\n'"
1415,155072162,"b""Seems like the scene may have gotten messed up in a merge. I'll double check this stuff later today."""
1415,155125584,b'Should be fixed now.'
2488,205160396,b'This seems to be more than just documentation changes.'
2488,205162229,"b'`ObjectToScale.transform.localScale = new Vector3(0, 0, 0);` -> ` ObjectToScale.transform.localScale = Vector3.zero`'"
2488,205181065,"b""I had done no changes regarding the coding as I only added some comments in the coding part. Besides, some of the coding are out of what I had learned so I won't touch those coding, sorry for making any inconvenience."""
2488,205183604,"b""I didn't change this part as well, maybe I'll help you to change the code and upload again."""
2488,205185507,"b'I remembered that I had added {} to those loops, is it ok?\r\n'"
2488,205561365,"b'The coding guidelines say that brackets should always be used:\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/CodingGuidelines.md\r\n\r\nThis is helpful because if someone later comes along and adds a line, it can be confusing why everything suddenly breaks. Keeping the brackets makes the intention of the code very clear, which is the most important part of code. :)'"
2488,205561412,"b""This doesn't add anything, let's remove it."""
2488,205560843,"b""This doesn't add anything."""
2488,205160599,"b""We don't normally document known unity messages and methods"""
2488,205161908,"b""unless someone changed it to be blue. This kind of speculative assumption of what the `FocusedColor` may be shouldn't be documented."""
2488,205162016,b'redundant'
2488,205181670,"b""I agreed that some of the comments are too redundant but I can't really understand the whole part of code, that is why I could only managed to add some of the minor and comments which seems to be meaningless haha."""
2488,205184004,"b'I just followed what I understand from the part of coding and my purpose is to provide convenience for the readers so that they can understand this easily, sorry for putting those redundant comments.'"
2488,205560702,"b""This explains what, not why, let's remove it."""
1436,154746068,"b""Where is a use case for this? If you have down and up you don't need press.\r\n"""
1436,154746167,b'I propose removing this addition to the interface.'
1436,154746418,b'I disagree.  This mirrors how Unity handles input and we should be doing that as closely as possible.'
1436,154746613,"b'This also opens up the Input Handler to use more generic inputs like keyboard presses, mouse clicks, etc.'"
4501,287470180,b'This actually seems like something that would be useful to expose as public property (getter only) rather than make protected. For example for a script that wants to animate something based on pressed amount.'
4357,287620335,"b'When you say ""grab on controller"", do you mean ""the grip button on the controller is pressed when using far interaction""? Interestingly, the current design of the BaseControllerPointer is actually *only* letting the select button to go through the pointer system, and I think very few people know that. The fact that pointers only dispatch when select button is pressed is also causing #4492.\r\n\r\nThis method as written will actually return false if you try to interact with pointer via the grab button. This is because the method currently just returns true if the pointer is a near pointer. And until #4492 is fixed you won\'t get events when you press the grab button anyway. \r\n\r\nWhen I understood the original description from @cre8ivepark , I actually thought when he said ""grab"" he was meaning ""near interaction"", as in ""hand / controller was near object when the \'select\' button pressed"". If dev configured interactable to respond to a button other than select, for example the menu button, then it would read ""hand/controller was near object when the \'menu\' button was pressed"". \r\n\r\n'"
4461,288337326,"b'Hey will, this is done now! Should be good to check in.'"
4587,288362099,b'Was this change intentional?'
4587,288362528,"b""I believe @thalbern actually fixes this in a very similar way in #4150 so I don't think it's needed any more, but thank you for suggesting it."""
4587,288362534,b'Thanks for this! It looks like the same check is needed for ButtonPressed and ButtonReleased.'
4404,288655675,"b""Hi ei2kpi, it looks like this is specific to your pipeline, not the mrtk pipeline. Could you please remove it? @MenelvagorMilsom please correct me if I'm wrong here."""
4618,288721601,"b'Great idea, this feels much safer.'"
4618,288728175,"b""Fixed. Note that when simulating in editor, the search could technically be run, so it might slightly impact people when they are trying to profile code. However, they can always just delete the search if it's impacting their performance profiling."""
4618,288732383,"b""Fixed by using Lars's suggestion to not actually run this check except when in editor."""
4552,289184804,"b'nit: might want to use the name TryGetTextColor and document what color gets set to if you return false, and what returning false means.'"
4552,289185708,"b'Similarly here, might want to use the name TryGetTextMeshProColor and specify what happens in case of failure. And below.'"
4646,289223728,"b'Will this work for other input types, for example sixdof controllers? It is directly accessing the hand positions, not the pointer data.'"
4107,289250915,b'Nit: capitalize'
4107,289250938,b'Default'
4107,289250985,b'Might be good to run this through a spell checker once (https://github.com/microsoft/vscode-spell-check) to catch any errors.'
4107,289251044,"b""This looks like it's missing content"""
4645,289488224,"b""No, I'm not really sure why. It looks like the focusprovider will always update all pointer focus info regardless of it it is active or not. This pattern of return early if not active is present in other pointers, for example LinePointer.  \r\n\r\nI'd rather not update FocusProvider right now, to avoid regressions. We can open an issue to investigate so we don't forget. Pinging @luis-valverde-ms  in case he has any thoughts."""
4263,289565252,"b""@keveleigh actually the comment in that issue was not that they are using distFront explicitly -- it was more like they had undone their original workaround to go back to the default value. I'm actually not clear how their original workaround got them to fix the issue they were having, to be honest."""
4263,289575747,"b""However, I think you do have a point Kurtis that I'd be curious to hear Niall's response to. I think this can go in and we can solve it in a separate issue, just in the interest of moving things forward. I'm sure once this is in we will discover other bugs.\r\n"""
4646,289593246,"b'Can we keep the Unity version to .9f1 please, for now? '"
4646,289593253,b'Was this change to quality settings intentional?'
4646,289593261,b'Might be good to remove this before checking in'
4646,289615495,"b""I was also actually hoping that instead of modifying boundingbox we could create a  new ProximityHandler component that would expose an event like OnPointerProximityChanged(ProximityEventData d), as well as a way to poll for the closest pointer information (which would return Infinity of no pointer is within grabbing distance). You would also probably want to have events like OnNearStateEntered, OnFarStateEntered, OnMediumStateEntered.\r\n\r\nProximityEventData would be something like this:\r\n\r\n```\r\nclass ProximityEventData\r\n{\r\n    ProximityState oldState;\r\n    ProximityState newState;\r\n    float oldDistance;\r\n    float newDistance;\r\n}\r\n\r\nenum ProximityState\r\n{\r\n    FarDistance,\r\n    NearDistance,\r\n    MediumDistance\r\n}\r\n```\r\n\r\nI think that with that component you could build the behavior you need for the bounding box handles by adding a ProximityHandler to each of the corner prefabs. \r\n\r\nYou could then just listen for those proximity events and change the visuals in the way you're doing here. Or, a designer could hook up the Unity events OnNearStateEntered, etc. to set different states in an Interactable, which would allow for somebody to make really interesting visual feedback based on the proximity of a hand to a corner."""
4684,289653181,"b""@MenelvagorMilsom this is the actual fix :-) the other changes in this PR are to fix a playmode test, remove some extra logging, and then add a playmode test that repros this issue so we don't hit it again."""
4685,289665500,b'this should actually use isPinching'
4685,289665504,b'Move this out of the for loop'
4646,289980393,"b""Yes it's probably out of scope, though it would be good to create an issue so we don't forget about this suggestion. We can then decide if that issue is in scope for GA. I created #4689 to track this"""
4691,290080299,b'Is this change intentional?'
4691,290080623,"b""Ah, yes it is: it's binary OR of Linux, Mac, Windows editors. (1 << 4) | (1 << 6) | (1 << 7). Thank you!"""
4695,290089719,"b""Why do we need both of these fields? Isn't RequiresFocus implied if IsGlobal is false?"""
4695,290089797,b'tabs?'
4695,290089834,b'odd spacing here.'
4673,290404447,"b'After this PR interactable would no longer set ""is gesture"" to true. Need to add that back in.'"
4685,290471625,"b""Hi Jarod, could you please explain why it might be a good idea to do that here? All of the PlayMode tests are currently just using Coroutines without async implementation, so for now I kept it using Coroutines for consistency. However, I'd like to understand why using async would be a better approach. I normally use async when I'm writing asynchronous code such as reading large files or making web / network requests, but not normally when doing playmode tests / in Unity. Perhaps I'm missing some untapped capabilities of using async instead of coroutines in Unity. Definitely willing to learn!"""
4685,290532690,b'@wiwei  did you try to just modify the .asmdef files to only include these projects in the editor? Was there an issue that you ran into that prevented you from doing this? Reading your comment it seems like there was a build issue when building for UWP .NET backend. I assumed I needed to do the same ifdef here.\r\n'
4685,290533283,"b""For now I'll check this in as is and maybe we can solve this more elegantly with an asmdef after we hear from will."""
4707,290547866,b'This comment is still referring to a motion controller. is that correct?'
4707,290549410,"b""Can you also make sure that one and two handed manipulation on HoloLens 1 is working with this change? I remember needing to modify WMRHand to support the GGVPointer after we discovered that two handed manipulations were no longer working on HL1. It took a while to get right and involved modifying WMRArticulatedHand. Want to make sure we don't regress that. Also, you could be able to grab and rotate the cup on HandInteractionExample scene, as well as use two hand manip to scale and rotate it."""
4707,290550224,"b'It was a little surprising to see the thumbstick and touchpad methods moved into the base class, since it feels like those are specific to the motion controller.'"
4707,290550250,b'Same with trigger and menu buttons.'
4695,290841060,"b'Okay, I understand. This feels potentially confusing to an external developer. Imagine if you\'re approaching interactable for the first time and you\'d see two fields -- requires focus and Is Global. Even as a developer familiar with the Interactable code it\'s a bit confusing.\r\n\r\nMaybe it would help to instead say ""speech command requires focus"" so that it\'s clear that this bool is specifically for speech commands.\r\n\r\nAside: It would be really nice to use other components that MRTK has to implement stuff like listening to voice, instead of re-implementing in Interactable and therefore adding more complexity to interactable. For example, you could instead add a SpeechInputHandler component to the game object and then just change the state of interactable when SpeechInputHandler fires. \r\n\r\nThere\'s a lot of variables in Interactable that depend on each other. As a developer working on interactable, it means there are many things to keep in your head when you\'re working and it\'s easy to accidentallly forget to for example remember that you now need to check BOTH RequiresFocus AND IsGlobal.'"
4695,290843227,"b""My more general aside about the complexity doesn't need to be addressed in this PR, just giving some feedback that I think we could actually re-use some of the code that already exists in MRTK to make Interactable simpler."""
4695,290843332,b'More issues with incorrect spacing.'
4673,290961561,"b'I thought about this, but HandTrackingInputEventData has fields like ""InputData"" which is hard to interpret. I think TouchPosition is more clearly communicating the underlying data. Think it will be eaiser for people to understand. '"
4673,290961687,"b'I thought about this, but HandTrackingInputEventData has fields like ""InputData"" which is hard to interpret. I think TouchPosition is more clearly communicating the underlying data. Think it will be eaiser for people to understand.'"
4673,290963651,"b'Yes -- if we are listening to global event, then it may be that no pointers are focusing the object.'"
4673,290963995,b'Done.'
4673,290964507,"b""I think @killerantz has been using this pattern for a while so I'm going to leave it as is for now to not introduce new bugs."""
4673,290965685,"b""Yes but I'd like to have this here in case it gets called from some other code."""
4673,290965901,b'Nice catch. Done.'
4673,290965948,"b'Nope, good catch.'"
4673,290966335,"b'Out of curiosity, why?'"
4673,290966584,b'Fixed.'
4673,290966857,b'Done.'
4735,290971689,"b""Any reason you are doing a string comparison here? We've been trying to avoid determining controller types by doing string comparison, since the name could easily change.\r\n\r\nIf you really want to check if it is a mixed reality controller, why not just do `if (currentController is WindowsMixedRealityController)`?\r\n\r\nBut, more generally, is this restricting you to only work with MR controllers? Would slate then break if you used an oculus, or a vive?"""
4735,290971835,"b""What if the GGVPointer exists but is not the first pointer in the list? Since you're not actually dealing with pointers in any of your code but with Input Down / Up, it's not very easy to get a pointer corresponding to an input down / up event. Input down / up are sent from input sources, but a single input source will have many pointers.\r\n\r\nIt seems like what you're trying to do here is determine if this is a GGV Hand or an articulated hand / motion controller. What you can do instead is the following:\r\n\r\n```\r\nif (data.currentController.IsRotationAvailable)\r\n{\r\n    // This controller supports rotation and therefore we can grab its position and rotation \r\n\r\n}\r\nelse\r\n{\r\n    // This controller does not support rotation and therefore we can just deal with position data.\r\n}\r\n```\r\n\r\nAlternately if you want this to work ONLY with WMR hands and WMR controllers:\r\n\r\n```\r\nif (data.currentController is WindowsMixedRealityArticulatedHand || data.currentController is WindowsMixedRealityController)\r\n{\r\n    // This controller supports rotation and therefore we can grab its position and rotation \r\n\r\n}\r\nelse if (data.currentController is WindowsMixedRealityGGVHand)\r\n{\r\n    // This controller does not support rotation and therefore we can just deal with position data.\r\n}\r\n```"""
4735,290972147,"b'Could you explain why you are doing a string compare against ""None"" here? I am wondering if there\'s a different way to write this to avoid the string compare...'"
4735,290972241,b'Is this method used anywhere?'
4735,290972493,b'Why do we need to get eye tracking data here?'
4735,290974752,"b""Again it's dangerous to assume that GGVPointer is the first pointer in the list. Instead, you can check if the controller is a WindowsMixedRealityGGVHand"""
4673,291018223,"b'I thought about it more and decided to go with your suggestion Luis, since I noticed PointerHandler uses a similar pattern.'"
4673,291018926,b'Done.'
4673,291019073,"b""For now, yes. Interactable is not really supporting two handed interactions correctly now. I'll leave that for a different PR though."""
4673,291025017,b'Done! I also refactored / cleaned up that code to remove duplication.'
4673,291288990,"b""I did try this but the assert fired very frequently. I'll look into it and see if this is a valid bug I can fix now."""
4673,291297326,b'Okay I realize now that my assert was just wrong. I was using focusingPointers.Count == 0'
4673,291302299,b'Fixed!'
4735,291393081,"b'I think you no longer need OnPositionInputChanged, looks like no interface implements this any more.'"
4735,291393652,b'Same with OnInputPressed'
4672,291440439,"b'Per the [MRTK Coding Guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html), it would be great if we could keep this field private, and add a public getter and setter'"
4695,291441089,b'Spacing'
4695,291441300,"b""I'm now realizing that RequiresFocus was documented, but I was confused because I didn't see it in our [API docs](https://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.UI.Interactable.html). I think if you use a format like this then the docs will populate, right @thalbern?\r\n\r\n```\r\n        /// <summary>\r\n        /// Does the voice command require this to have focus?\r\n        /// </summary>\r\n        public bool RequiresFocus = true;\r\n```"""
4695,291441532,b'@davidkline-ms  is this the proper / recommended way to get MRTK profiles now?'
4695,291441582,"b'What do we do if the user selects ""none"" for the speech commands here?'"
4695,291441632,"b""grammer nit: its, not it's"""
4695,291442023,"b'You can delete this method and just use [Array.IndexOf](https://docs.microsoft.com/en-us/dotnet/api/system.array.indexof?redirectedfrom=MSDN&view=netframework-4.8#System_Array_IndexOf_System_Array_System_Object_) instead. `Array.IndexOf(options, option);`. Also, any reason you would want this to be public?'"
4695,291442076,"b'Instead, do `currentIndex = Array.IndexOf(speechKeywords, voiceCommands.stringValue)`'"
4678,291461412,b'Reminder to include these lines:\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License. See LICENSE in the project root for license information.\r\n```'
4678,291462180,"b""Will this compile with the .NET backend? I recall a while back having trouble using the default value expression because that's only available in [C# 7.1 IIRC](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/default-value-expressions)"""
4765,291819864,"b'I don\'t think so. But it does assume that if a pointer does not provide rotation, then we should be using the pointer position instead of pointer.Rays[0].Origin. I couldn\'t think of any other way to support GGV hands without explicitly saying ""if controller is a ggvhand"" or ""if input source is a ggvhand"". I didn\'t want to do that check because then we would be introducing a dependency between .Services and .Providers, which I don\'t think exists right now. \r\n\r\nIf you or anybody else has a suggestion for how to check ""if we are on HoloLens 1 or with a GGV hand, use the position of the hand"" I\'m very interested! I myself am not happy with this, but couldn\'t think of a better way.'"
4695,291820176,"b""I would say yes, though looking to @Railboy and @davidkline-ms for the blessing since they own that system. But the ConfirmInitialized() has been the pattern I've been following."""
4695,291820189,b'Thanks!'
4695,291820253,"b'I see. Up to you. Just wanted to make sure you were aware of the tools available. If you wanted to use LINQ you could also do keywords.Skip(1).IndexOf(...) or similar to skip the first element. \r\n\r\nIs it a fair assumption to always assume that the first element is keywords.None? If ""None"" is not even a valid keyword, why is it even in the keywords list?\r\n\r\nIt\'s not a huge deal, just wondering if I can provide some suggestions that could help simplify the code. It was not obvious to me that the first element in the list always represents ""no keyword"". I would expect if no keywords are registered for the keywords list to be empty.'"
4765,292171055,"b""I actually tried that first, but then touch interactions broke. It's really helpful to try it yourself and see how it breaks, since it's a bit complicated. The Poke Pointer will set its ray cast to be in front of the touchable surface even when the finger tip is behind the surface. However, the position and rotation always follows the position/rotation of the finger tip. Again it's hard to explain in words so the best thing I'd recommend is to just implement what you think and then try scrolling via touch.\r\n\r\nHow would we solve this problem? \r\n\r\nA thing I thought up was to change position + rotation of the pointer to match the ray that poke pointer is using, but I was wary to do that because I didn't want to break existing behavior. """
4842,293183997,"b""boundsOverride is usually modified directly, not through the accessor, for example like this:\r\n\r\n```\r\nvar newObject = new GameObject();\r\nvar bc = newObject.AddComponent<BoxCollider>();\r\nbc.center = new Vector3(.25f, 0, 0);\r\nbc.size = new Vector3(0.162f, 0.1f, 1);\r\nbbox.BoundsOverride = bc;\r\n// This line of code directly modifies bc.size, no way I can think of to set a 'dirty big'\r\nbc.size = new Vector3(0.5f, 0.1f, 1);\r\n```\r\n\r\nI don't think this adds much overhead because we already do quite a lot of comparing previous / current state in the Update() loop."""
4842,293184320,"b'Why can\'t you set boundsOverride to null? I have it in my test cases and it works fine. \r\n\r\n```\r\nSetStatus(""Remove target bounds override"");\r\nbbox.BoundsOverride = null;\r\nDestroy(newObject);\r\nnewObject = null;\r\n```\r\n\r\nThe resulting behavior is that the bounding box will snap to the bounds of the children.\r\n\r\nI can add a comment that says ""if you set boundsOverride to null, the bounding box will match the bounds of the game object or children.'"
4848,293185005,"b""I thought about moving the rotation out of the else case but decided to keep it in the else case because keeping position and rotation together I think makes it easier to read. It's just a preference though and if you guys feel strongly you can move it out."""
4842,294025687,"b'Thanks for the comments. I don\'t want to return true if boundsOverride is null because that would mean we update rig and handles every frame that boundsOverride == null. I think the name of the method ""HasBoundsOverrideChanged"" is confusing so I added a comment (I could also call it HasBoundsOverrideBoundsChanged but that seems really long). \r\n\r\nCan you have a look and see if this new method makes more sense to you? I verified the new method works with my test scene.'"
4854,294025985,b'Nit: could you use trigger volumes instead? like stop manipulation in [OnTriggerEnter](https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnTriggerEnter.html)?'
4854,294026097,"b'hehe these are already being used, yay!'"
4893,294026501,"b""What's this for?"""
4893,294026525,b'Remove?'
4893,294026618,b'Should we do this in all our tests?'
4893,294026663,"b""@wiwei to keep me honest but I believe our policy is to not name tests with Test0X_blah and just use 'blah'. We should probably write that down somewhere."""
4895,295092506,"b""Couldn't you just call CreateRig()?"""
4895,295092538,b'nit:extra space'
4895,295092701,b'What is this for? Can you explain via  a comment? I am not immediately clear why if localScale is zero we force it to be non-zero'
4895,295092743,"b'Looks like this is duplicate from above, consider pulling out of the if statement.'"
4895,295092874,b'Can you please explain why you are doing this?'
4895,295093069,"b'It would be nice to avoid magic numbers like this, and in the line above. Can you explain why you have this multiplier here? '"
4895,295093124,b'It woule be nice to avoid magic numbers like this. Can you explain why you have this multiplier here? Especially since you re-use 0.02f down below...'
4895,295093467,b'nit: please add a line between methods.'
4942,295223110,"b'I\'m not actually clear what the sentence means. Does it mean ""if poke pointer is within this distance from any touchable, then the poke pointer will turn on""?\r\n\r\nIt would also be useful to add a tooltip here to explain this field in editor.'"
4942,295224571,"b'Interesting...what if somebody has a NearInteractionTouchable on an object, but it is on a Layer that is not touchable? Could you explain what happens in this case in the comment? My guess is the object would not be touchable.\r\n'"
4942,295224735,"b""Hm, I don't understand what this means, could you give an example?"""
4942,295225616,b'Could you print numColliders here so we know what to increase it to?'
4942,295226429,"b'Should this read: ""Distance behind the surface at which you will receive a touch **ended** event""?\r\n\r\nI thought distBack represented the ""depth"" of the plane. So, if you moved your finger more than 25 cm behind the surface (such as the button, or the UnityUI surface), then you would get a touch up.\r\n'"
4942,295227525,"b'Why are we no longer using distfront? My understanding was that we used distFront to determine the distance from surface that you would receive touch down event at.\r\n\r\nSo, if I wanted to get a touch down only when actually touching the surface, set distFront to zero.\r\n'"
4942,295230769,"b'Okay, reading the code more I understand: You will get touch started events any time you hit the surface, or any time your finger is up to pokeThreshold behind the surface. In other words, pokeThreshold is sort of like the ""depth"" of the touchable surface, is that right? Maybe ""surfaceDepth"" would be a more understandable term? You could then render it as a collider.\r\n\r\nI called it \'poke depth in this picture but \'surface depth\' might make more sense.\r\n![image](https://user-images.githubusercontent.com/168492/59758626-391a4d80-9243-11e9-9c98-f9f3c7a55e63.png)\r\n\r\nOr, am I misunderstanding the code?\r\n\r\nMaybe the comments can help explain as well the meaning of the variable?'"
4942,295231233,"b'It would be useful to actually draw the depth of the touchable as well so people understand when they get touch up events, for the surface. '"
4942,295231731,"b'Or if that\'s not the correct interpretation of ""PokeThreshold"", then perhaps a different visualization to help explain what ""PokeThreshold"" means. '"
4942,295232409,"b'We should add documentation to note that to make a Unity UI touchable you need to use NearInteractionTouchableUnityUI. There\'s a related issue to also add a ""how to set up unity ui for touch input"" #4949 '"
4942,295232531,b'Make sure to update the unity ui example scene and hand interaction example scene to use this.'
4942,295233474,"b'touchable surface, or any touchable?'"
4942,295234707,"b'It would also be good to mention that if a finger is more than this distance away from a touchable collider, you will always get a touch up event event. \r\n'"
4942,295239194,"b""Something to be careful of about touch interactions on HoloLens is people tend to move their hands quite far behind UI. For example, here is a capture of hand motion as somebody presses a button on a 2D slate:\r\n\r\n![image](https://user-images.githubusercontent.com/168492/59759497-10935300-9245-11e9-9e55-8fad3c0b6943.png)\r\n\r\nNotice how far behind the slate the person's finger moves.\r\n\r\nIf we go with this approach it will be important to keep touchableDistance quite high (~ .5,[ average arm length of male is 65 cm](https://www.reference.com/science/long-average-human-arm-62c7536c5e56f385)).\r\n\r\nReason is it would surprise people if they are for example scrolling and get a touch up event as they are scrolling the surface. The reason this could happen is people could move their hand quite far behind the slate because there's no physical surface stopping them.\r\n\r\nI'm not sure a value of 0.2 will be high enough to cover most of the ways that people scroll content -- people will likely disengage by moving their hand too far back behind the surface.\r\n\r\nNote that if the same variable for determining maximum touchable distance ALSO turns on the poke pointer visual and turns on input focus, then you will start getting focus events from poke pointers even when the pointer is very far away."""
4942,295240522,"b'I\'m not sure this class makes sense any more. It\'s original intention was to allow for a plane of infinite size that would be touchable. However, it seems like the poke pointer will always dispatch touchUp events once a pointer has passed some distance threshold. Additionally, I don\'t think the current behavior actually allows a touchable to be infinitely large. Finally, it makes the definition of ""NearInteractionTouchable"" a bit more muddled since NearInteractionTouchable is really a touchable surface of bounded size, which is essentially the same thing that this class is. \r\n\r\nHow do you feel about removing it? I don\'t think anything except the touchable sample uses it.'"
4942,295240578,b'It also was not released in RC2 so is not a breaking change.'
4942,295241064,b'Can you clarify that to make an object touchable it must have both nearinteractiontouchable AND the layer mask?'
4893,295244358,b'Does this have anything to do with manipulation handler? Should it reach TouchableInstantiate?'
4942,295609258,"b""Thanks for that explanation. It was actually really helpful. Any reason we wouldn't want to have such a long comment in the code? I actually think it would be quite helpful for people trying to understand the touch input system."""
4942,295610108,b'You could have for example a touchable volume instead of a touchable surface.'
4942,295612062,"b""I think we can do it, there's so many good things in this PR.\r\n"""
4942,295630100,"b""I think that dispatching of input in UnityUI is implemented in [MixedRealityInputModule (MRIM)](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L302).\r\n\r\nHere's what I think happens (based on my experience with [this PR](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4765/files). \r\n\r\n1. MRIM tracks all active pointers by listening to [sourcedetected](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L302), sourcelost\r\n2. MRIM implements [IMRPointerHandler](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L11)\r\n3. OnPointerDown, MRIM updates state of its tracked pointers.\r\n4. In [Process()](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L115), MRIM actually translates the pointer states it is tracking (pressed, not pressed, etc) into instructions for Unity to ProcessMouseEvent.\r\n5. As part of ProcessMouseEvent, Unity calls GetMousePointerEventData, which calls [GetMousePointerEventDataForMRTKPointer](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L188). \r\n6. That method is the thing that has the meat -- it takes the position and rotation of the pointer (actually, the rotations of Rays[0]) and converts that into a ray. This ray then gets used to figure out which UI element is hit in Unity UI. We don't need to worry about figuring out which Unity UI subelement is hit though. We just need to set up the ray so that it will hit Unity UI.\r\n\r\nIn short, I think as long as you can [set up that ray step](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/e18e7078bde38454816a0d3d2bd7c5e54bc2ccc5/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/PokePointer.cs#L74) at some point so that the position of ray step matches some place in front of the surface, and the rotation points toward the surface (so that the ray will hit the Unity UI), you will be fine.  """
4942,295630697,"b'I actually think since you are not changing the RayStep here, that UnityUI is likely to work. You probably just need to add a UnityUITouchable component and set it up.'"
4942,295631141,"b""Hm now reading Luis's comment above I feel like you and Luis probably already figured out what I said above...and you're already setting up the ray step. Keeping the comment anyway in case it helps somebody else."""
4895,295631883,"b""Great, glad you can provide an explanation, please provide one, then :-) @cre8ivepark I was hoping that this magic number would be explained and moved out into a variable, but it's not something that I would block on. It would just be nice to reduce magic numbers in our code."""
4942,295644167,"b""Here's an idea: In FindClosestTouchableForLayerMask, could you just do a graphics raycast for UnityUI? Don't worry about a sphere cast, just do a raycast. Reasoning is this: Unity UI is always going to be a flat rectangle, so you will always touch them from the front. You could set the position of the ray to be finger tip, and the direction of the ray the normal of UnityUI surface.\r\n\r\nSo, first find the colliders from volumes using the sphere cast, then also look for any UnityUI by doing a graphics raycast, ignoring all surfaces farther than touchableDistance."""
4942,295914967,"b""In partner apps I've scene they usually just have one Unity UI canvas, maybe 2."""
4995,296095398,b'Is this a separate bug fix? Seems unrelated.'
4995,296095419,b'This also seems unrelated.'
4995,296096168,b'Temp implementation? Do we want to check it in yet?'
4995,296096291,"b""It looks like you're trying to figure out what type of resize handle to use here, but I'm not fully following how because I don't understand what handleRigTransform is. Could you explain in a comment what you are doing here?"""
4995,296096892,"b""Setting handleRig from manipulationhandler feels like it's creating a bit of a coupling between BaseCursor and ManipulationHandler. You need to know that in order for the resize Rotate or Scale cursor actions to work, you also need to set handleRigTransform, and that specifically it needs to match the bounding box rigRoot transform (or at least have the same shape).\r\n\r\nIs there a more general way we could do this?\r\n\r\n\r\nImagine you were an external developer trying to figure out how to make the cursor show the diagonal resize cursor on your own custom asset on hover. It would require some sleuthing into our code to realize that you need to set handleRigTransform, and further that it needs to match the bounding box."""
4995,296097185,b'Why not just have the BaseCursor getter return gazeProvider.GazePointer.BaseCursor?'
5018,296465205,"b""I removed all the handy events so it's a simple class. Makes sense since we wouldn't want to break people once we removed it."""
4974,296809614,"b""I think all the changes in this file are no longer necessary, actually. Addison and I discussed a much simpler solution. Addison is on pat leave also. I'll take over the PR and just provide the two fixes in basecontrollerpointer and sphere pointer."""
4974,296862308,"b""Removed the changes here since they aren't relevant to the bugfix. Let's re-open the discussion in separate issue if needed."""
5033,296916652,"b'I think after #4695 you will need to update this to actually make sure that the button is being focused on, otherwise the test may fail. There\'s a new checkbox ""requires focus"" that might be checked in the model_pushbutton prefab. It will ensure that the object is actually being looked at before allowing interactable to activate from voice command.'"
5033,296916881,"b'seems like common code that you could factor out, it gets used in several test methods.'"
5033,296917203,"b""This line shouldn't be here because we want to actually ensure that Interactable registers itself for global input properly."""
5033,296917440,"b""Can you also make sure that no pointer is focusing on the interactable? To make sure that the interactable isn't accidentally receiving input from a focused object. """
5033,296918738,"b'Seems like instead of making sure that the button moves, it would be better to register a delegate for the OnClick handler, like we do in pressablebuttontests:\r\n\r\n```\r\nbool buttonPressed = false;\r\nbuttonComponent.ButtonPressed.AddListener(() =>\r\n{\r\n    buttonPressed = true;\r\n});\r\n// press the button...\r\n// blah\r\n// blah\r\nAssert.IsTrue(buttonPressed, ""Button did not get pressed when hand moved to press it."");\r\n\r\n```'"
5033,296918956,"b""Again, we shouldn't need this line. If Interactable.IsGlobal is true, it should register itself"""
5033,296919370,"b'What do you mean by ""until we can get animation working""? What animation?'"
5033,296919510,b'Why do we need to wait a second here?'
5033,296919632,"b'Again, would be better to use a delegate to ensure OnClick event was triggered.'"
5033,296919810,b'typo: inut => input'
5033,296920142,b'Note that this may require modifying Interactable.cs so that OnClick can actually be specified from code.'
4942,297022956,"b'Very helpful, thank you'"
4942,297023452,"b""I think static list for Unity UI is OK. It's definitely a case we want to still support (several partners depend on it)."""
5030,297042660,"b""I couldn't figure out how to make the radial solver billboard very easily, neither has any of the other 2 people I talked to about this. I think it's a sign that the component is not necessarily obvious to use. I would appreciate having billboard be part of solvers, or to provide an easy way to make a component billboard using radial solver. For now to unblock people it would be good to just point to billboard, since currently people have no great way to knowing how to add billboarding. At least docs pointing to something is better than nothing, no?"""
5036,297046954,b'add comment'
5036,297047045,"b'scale is 0.5, fix comment'"
4672,297051276,"b'```suggestion\r\n        [Tooltip(""If true, updates are smoothed to the target. Otherwise, they are snapped to the target"")]\r\n        private bool smoothing = true;\r\n        public bool Smoothing \r\n        { \r\n            get => smoothing; \r\n            set => smoothing = value; \r\n        }\r\n```'"
5036,297275648,"b'Yep, this was working for me! The only thing I needed to make sure was to change the profile back to original at the end of the test.'"
5033,297277658,"b'I see. Instead of looking at transform movement, can we just add a handler to OnClick method?'"
5033,297278397,"b""when validating the tests you can use `PlayModeTestUtilities.WaitForEnterKey` to actually wait until a key is pressed. I'd prefer to keep the test as short as possible (max 0.5 seconds) since if every test takes a second they will add up."""
4942,297306714,"b""Have a look at #5033 for an example of how to load prefabs. @Railboy  and I have been using that pattern (just load resource from string...). It isn't ideal because if the prefab names change the tests will break. I already had that happen to me. But it will at least unblock you. Maybe a static class exposing methods to load common test resources would be good, or a single class that would load test prefabs. This way there's just one place where the paths to prefabs used for tests exist. And then if a resource fails to load print a nice error to make it clear how to fix.\r\n"""
5036,297313105,"b""Yeah it's a bugfix, for #5029. I need it for the tests to pass. I can make it as a separate PR, but didn't want to add extra overhead of getting approve for such a small change."""
5036,297317711,"b""I found the commit that introduced the lateInitialize variable:\r\n\r\n```\r\n1c17f7847e1d3a3a8e125b876a9c57ad1fb42a6f\r\nFixed input handler race condition if input system and teleport system not found before gameobjects wake up\r\n```\r\n\r\nI think with my change, the handler will never register itself if the input system is not available when the component gets enabled. I think we need one more change. I'll go ahead and make that as separate pr to avoid having two changes in one"""
5036,297320951,"b'ah great suggestion, thanks.'"
5036,297334201,b'Moved to separate PR.'
5033,297470807,"b""@lukastoenneMS  and @Railboy  please coordinate in case Railboy's PR goes in first. Seems like touchableCollider could go away entirely."""
5033,297470918,b'This looks unrelated to the original change (Interactable tests). Did you intend to make the change here?'
5033,297471768,"b'Is it possible that this name could already be loaded by SceneManager? Maybe something a bit more unique like ""Microsoft.MixedReality.Toolkit.Tests.PlayModeTestScene"", or ""MixedRealityToolkit.PlayModeTestScene""? or, suffix it with the current date?'"
5033,297471882,"b""I've actually removed RnderSettings.skybox = null from all my recent tests because it's actually *harder* to see the black boxes we instantiateover a black background. Can you remove it?"""
5033,297471968,b'Should you also unload the scene here and delete the scene file that you created? '
5033,297472019,b'Currently I notice quite a few extra scenes showing up after I run playmode tests.'
5033,297472238,"b'I like all this cleanup, thanks \xf0\x9f\x92\xaf'"
5033,297472477,"b""I'm curious, why do we need to delete scenes we created in edit mode, but not onces created during playmode tests?"""
5033,297472880,"b'Hm...this method does something really similar to the one above, but has a very different name. Perhaps this method should be called ""PlayspaceToOriginLookingForward""  and the method above shoudl be called ""PlayspaceTCornerLookingAtOrigin"" or something like that. Trying to brainstorm more descriptive method names.'"
5033,297472960,"b'seems unrelated, did this change sneak in? or are you fixing a bug you found? Sometimes I do that, too. I normally make a note of small bugs like this that I fix in the PR to help folks in the future.'"
5033,297473141,b'\xf0\x9f\x99\x8f'
5033,297474136,"b""I've actually got a GA bug to fix that bug! #4703. I'll update this test to remove the push / pop modals."""
5033,297474526,"b""suggest moving that string into a variable defined above so people don't need to hunt for it. I feel like I've done this myself and regretted already not making it a variable (in pressablebuttontests)."""
5055,297738423,"b'I tried corners[i], and then corners[i].GetChild(0), but neither of those worked. The prefab is constructed in that very particular way, if you look at CreateScaleCorners(). You need to scale those particular nodes. I could instead create a list of the nodes to scale and use those...'"
5055,297738866,b'i was also quite bummed that i had to special case corners made via prefabs in this way. And then to look 2 levels deep in the hierarchy. Maybe @luis-valverde-ms  has some suggestions since he did bounding box prefabs?'
5055,297829896,"b'All right, I updated the approach to use an array of cornerVisual transforms, hopefully that approach is more understandable. '"
5065,297860634,"b'Nice, this will make tests for Unity UI far interaction easy to write too!'"
5064,297861184,b'oops :-)'
5064,297861538,b'This looks similar to the eventcatcher class @lukastoenneMS  has written...can you re-use eventcatcher at all?'
5064,297861880,b'See EventCatcherTestUtilities.cs'
5064,297864012,b'Thank you!!! \xf0\x9f\xa7\xa1 '
5064,297864260,b'Can we actually move this into a test utility? I think others would greatly benefit from having a simulated hand they can intantiate and use. '
5064,297864500,"b""It would be good to move that string into variable so it's not hidden here. """
5064,297864792,"b""Have a look at how lars is setting up and destroying tests in #5033. I think Lars will soon get his changes in, you'll probably need to update setup/teardown to match that pattern."""
5054,297897940,"b'Suggest ""allows for natural interactions like grab and rotate across platforms""\r\n\r\nThe main thing the input system does is allow for cross platform support -- that\'s I think why there are so many interfaces and abstractions.'"
5054,297898382,"b'Suggest also mentioning that pointers are also created by the device manager, and then attached to an input source.\r\n\r\nTo get all the pointers for a controller, do: `controller.InputSource.Pointers`.'"
5054,297898565,b'Maybe worth mentioning that the component that updates which objects are in focus is the FocusProvider.'
5054,297978750,"b""I don't think this is quite correct. I think this is mixing up two concepts:\r\n\r\n1. NearInteractionGrabbable and NearInteractionTouchable allow for certain pointers (esp near interaction pointers) to know which objects can be focused on.\r\n2. Interactable and ManipulationHandler, are examples of comonents that listen to pointer events to modify UI visuals (interactable), or move/scale/rotate stuff.\r\n\r\nPerhaps make the title NearIntearctionGrabbable/Touchable and add a section below about input event handlers."""
5069,298003388,"b'Since the new name is SelectionMode, can you update the enum name also?'"
5069,298003602,"b""note: it's probably too much for this PR, but per the [Coding Guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers) it would be nice to make these serialized and private, and then expose the fields via public properties."""
5069,298004551,"b""Why are you only updating dimensions.intValue if it's less than minMultiDimensionValue? Why not always update it?"""
5047,298020947,"b""I wonder if rendering a custom page like this might confuse people into not realizing you can launch an arbitrary url (they might think it's some special UI we have made internally). Have you tried instead just launching something like http://aka.ms/mrtk? or http://aka.ms/mrtkdocs?"""
5047,298266682,"b'That sounds great, thank you!!! '"
5123,298704602,b'Do you need to set prev position = cur position on first frame / on source detected?'
5123,298704891,b'unused variable'
5123,298705825,b'I think Lars has a convenience method in his latest interactable tests pr that you can call instead of doing manually.'
5033,298755708,b'```suggestion\r\n        const float buttonPressAnimationDelay = 0.25f;\r\n```'
5033,298755811,b'```suggestion\r\n        const float buttonReleaseAnimationDelay = 0.25f;\r\n```'
5047,298761057,"b'```suggestion\r\n                    Debug.LogError(""Launching URI failed to launch."");\r\n```'"
5120,298790334,"b'Out of curiosity, does anybody know why FocusEventData does not extend BaseInputEventData? The current structure is like this:\r\n\r\n![image](https://user-images.githubusercontent.com/168492/60380758-91014300-99ff-11e9-9960-707f56477610.png)\r\n\r\n\r\nI would expect something like this:\r\n\r\n![image](https://user-images.githubusercontent.com/168492/60380770-a8d8c700-99ff-11e9-8afe-8e0ac1db4e5c.png)\r\n'"
5120,298790385,b'Should we also dispatch focused changed events to the objects losing focus?'
5120,298790414,b'Will unfocusedObject still get the focusexitEventHandler dispatched? Seems like HandleEvent is just dispatching to the newly focused object.'
4899,298790833,"b""Noticed this one was bigger than the others -- just making sure since we don't have test coverage here, could you check to make sure teleport pointers behave okay after this change?"""
4899,298790846,b'Why does pokepointer need a line renderer? Not sure we want to assert here.'
4899,298790856,"b""This didnt' have execute in edit mode, why did you add ExecuteAlways here?"""
4899,298790874,"b""Why do you need this check here? I don't see why sphere pointer needs to have executealwaysattribute, and therefore why it needs this check."""
4899,298790897,"b""Why don't we want to validate this one during play mode, but it's okay to do this in the components?"""
5154,299154437,b'doc comment so people can see in the api docs as well?'
5154,299154909,b'Suggestion: you can now use TestHand class Luis wrote to make hand movement easier.'
5154,299154958,"b'remove comments, here and below.'"
4895,299156681,b'Instead of magic numbers could we move these to fields or constants in the file? '
5168,299587106,b'For a future PR: I wish that we could decouple movement / algorithms from visuals like light pulsing. Would have preferrred to have a LightPulse component that listens to when the button is pressed to play a pulse. That way you could customize / change when the pulse plays without needing to modify pressablebutton.cs.'
5168,299587452,b'Why does it need to be at the end of the list? Why not use a hashset?'
5168,299587851,b'Does this require a specific shader is used? Can you add that to the comment?'
5168,299588906,"b""Could you please explain why we need this class? I also wonder if it's appropriate to stick in utilities. If it's specific to the button, should it go there? """
5150,299791946,"b""Make sure you've pulled the latest changes to this file. Will made some edits recently you might be squashing over."""
5150,299793306,"b'@davidkline-ms is this the preferred way to access a service?\r\n\r\nixedRealityToolkit.Instance.GetService<IMixedRealityInputRecordingService>()\r\n\r\n \r\n\r\nIf not, what is the guidance for the right way to acquire services? I always look for code to copy/paste but would prefer a page I can refer to with ""here are a bunch of exmaples of the preferred way to acquire services"". For example, I often point people to https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html for instructions on the preferred way to have properties with public getters/setters.'"
5150,299793526,b'Could we please provide a bug reference here?'
5150,299793951,"b""@killerantz  FYI -- this is a pretty cool / clean way to show GUI as disabled if condition isn't satisfied (in this case PlaybackService != null) -- might be a nice way to clean up interactable. I didn't know about it until reading this PR, figured I would share."""
5150,299794594,b'Thank you for writing docs!!!!!'
5150,299794785,"b'Like the input simulation videos which were a huge hit, I have a feeling that making + sharing videos of how to use recording and playback in MRTK will be a big hit. @cre8ivepark  as FYI.'"
5162,299802222,"b""@Railboy I believe adding a listener to onpointerdragged, which gets called every frame, may increase memory usage. This is based on reading this comment in #5156 \r\n\r\n> UnityEvents are toxic. Eg, ManipulationHandler allocates about 1.5k when invoking any ManipulationEvent, 1.1k of which is UnityEvent overhead. ManipulationEvents are discrete so they're not a huge problem. But we should avoid using these for update events.\r\n\r\nI am thinking to create a follow up PR to remove this line, since we don't even do anything in OnPointerDragged (my mistake that I added it). Are there any other changes that you see in this PR that could cause lots of memory usage? I was only worried about onpointerdragged because it gets called every frame.\r\n"""
5156,299804330,"b'Easiest may literally be to just have two fields: \r\n\r\n```\r\nPointer firstPointer;\r\nPointer secondPointer;\r\n\r\nOnPointerDown(Pointer newPointer)\r\n{\r\nsecondPointer = newPointer\r\n}\r\n\r\nOnPointerUp/OnSourceLost(Pointer lostPointer)\r\n{\r\n  if (lostPointer == secondPointer)\r\n  {\r\n     secondPointer = null;\r\n  }\r\n  if (lostPointer == firstPointer)\r\n  {\r\n    firstPointer = secondPointer;\r\n    secondPointer = null;\r\n  }\r\n}\r\n\r\nprivate IMixedRealityPointer GetFirstPointer()\r\n{\r\n  return firstPointer\r\n}\r\n```\r\n\r\nThis of course assumed you never have more than two pointers, but I think this is fair and we can debug assert that.'"
5175,299808242,b'Remember to add the copyright block'
5168,300238383,b'Good point. I created #5201 to track fixing this.'
5244,302347908,"b'@Cameron-Micka  I believe this was for an experiment, and can be removed (no need for thumb cursor)'"
5321,303766940,b'Why 12?'
5264,304022611,"b'The expected behavior is to not need to move right up to the collider unless PokeThreshold is zero. If PokeThreshold was 0.1, then the touch should start at distance 0.1 away'"
5264,304022835,"b'The expected behavior is to not need to move right up to the collider unless PokeThreshold is zero. If PokeThreshold was 0.1, then the touch should start at distance 0.1 away.\r\n\r\nLet\'s file a new bug and try to get this fixed soon. Not a must have for GA, but perhaps an ""on deck"" bug feature for the next release.'"
5247,304073710,"b""Doesn't the input system already lock / unlock pointers? Or, is the problem that the GGVPointer gets locked, but not the gaze pointer?\r\n\r\nI'd recomment adding a comment explaining we we are locking / unlocking here."""
5321,304076655,b'@Troy will you be making this change? If yes please just run the PR and notify me when I should pay attention so I can merge this in.'
5307,304211791,b'Is it possible to hit divide by zero here?'
5336,304265776,b'move these up'
5336,304265935,b'Fix comment'
5336,304265994,b'Fix comment'
5336,304266077,"b'Comment this class, what expectedscroll means'"
5336,304266299,b'add comment explaining you needed to do this because currentpanposition actually gives you the current pan DELTA (I should update the naming of that property in HIPZ).'
5336,304266365,b'Remove comment'
5336,304266437,b'Add comment for the class'
5336,304571542,"b'Yes, I normally do this :-)'"
5339,304669914,b'Is is possible to also add a check to make sure that the object that is close to the hand has a NearInteractionGrabbable? Currently this will return true even if there are no grabbables near the hand.'
5339,304723937,"b'Recommend using `PlayModeTestUtilities.Setup`, see [SlateTests](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/a5359f5ed4dacfd812b7bc983285693f96bc0c55/Assets/MixedRealityToolkit.Tests/PlayModeTests/SlateTests.cs#L31)'"
5339,304724026,"b'We should do this for all tests, good idea.'"
5339,304724085,b'Recommend PlayModeTests.TearDown'
5339,304724478,"b'I could thing of an example: what if you wanted to show an object *just out of reach*? So, at the point where you still have a hand ray but if you move just a bit closer the ray disappears. How would a consumer determine that distance without this var? '"
5264,304733577,"b'>  Due to the way touchables convert pointer position into local space first and then do a scale-only inverse transform there may be errors.\r\n\r\nCan we please fix this, or file a bug to fix it?'"
5264,304734003,"b'regarding why we do PokeThreshold + Debounce threshold:\r\n\r\n>  PokeThreshold + DebounceThreshold (!) \r\n\r\nThis is to ""debounce"" the input, or to avoid getting lots of touch down and up if we are near the edge of the PokeThreshold  and the data is noisy. You can read a bit more about [debouncing here](https://en.wikipedia.org/wiki/Switch#Contact_bounce) in case you\'re not familiar (I\'m not sure if you were questioning the naming DebounceThreshold which I also think should probably just be DebounceMargin not threshold, or if you\'re not familiar with input debouncing).'"
5264,304734654,"b""Nice!\r\n\r\n> There just wasn't any comment in the code that indicated the intended behavior.\r\n\r\nLet's fix this so the next person (or us in a month) don't need to re-discover what's going on or discover that the specified behavior for poke pointer distances is not specified :-) I think putting something like the explanation you gave in the tests would be great. We should have caught this earlier, but now that we're here let's fix it.  \r\n\r\nNext time, before we approve PRs let's try to make sure the desired / expected behavior is detailed in the class comments for something as complex as input. We should all work together to better document input (and improve the architecture)."""
5372,305438573,"b'Ah, interesting. I thought we had to explicitly disable the renderers but looks like just disabling the data provider hides the line. Two more lined removed!'"
5014,305497170,b'I would call this a UX component like HandInteractionPanZoom or BoundingBox. Namespace should be Experimental.UI'
5014,305501101,"b""Interestingly, in UIKit, the inheritance goes the other way:\r\n\r\n[UICollectionView](https://developer.apple.com/documentation/uikit/uicollectionview) : [UIScrollView](https://developer.apple.com/documentation/uikit/uiscrollview)\r\n\r\nIt might be better restructure this so that we have a base class like UIScrollView, and a class UICollectionView which allows for laying out a collection of scrolling content in a grid-like fashion.\r\n\r\nNote also there's an existing class [HandInteractionPanZoom](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Slate/HandInteractionPanZoom.cs) that already computes the math for scrolling, panning, and zooming. We may be able to refactor / reuse that class to do something like the following:\r\n\r\n* HandInteractionPanZoom rename to ScrollView\r\n* ScrollView : Monobehaviour\r\n* Create TextureScrollView : ScrollView. This will display a texture that you can pan / zoom around. This is what the slate examples will use.\r\n* Create class ObjectCollectionScrollView : ScrollView. This will have the behavior you want: display arbitrary objects inside of a clipping window, and allow panning and zooming of content.\r\nprefabs to use Scrollview\r\n\r\nAnother approach that would be more in line with the composition programming approach would be the following:\r\n\r\n* Repurpose HandInteractionPanZoom to be a slightly more general scrollview class that doesn't assume it has a texture.\r\n* ScrollView's responsibilities:\r\n    * Moves and scales its child window, and crops the content accordingly.\r\n    * Handles all input, and dispatches input events to its children as follows:\r\n        * Re-dispatch touch down events\r\n        * On move, if touch passes dead zone, send cancel to its children\r\n        * On up, if input has not been cancelled, send touch up\r\n        * Note taht we also need to send pointer up events for far interaction and handle\r\n* Inside of ScrollView, put an ObjectCollection\r\n* To make ObjectCollection more efficient, have ObjectCollection recycle content that leaves the crop region of the scroll view."""
5014,305501377,"b'For this and other comments, it may actually be better to re-use the behaviors in HandInteractionPanZoom, which specify behavior in a more flexibly way: check boxes for lock horizontal and lock vertical movement, as well as enable pan / zoom.'"
5014,305501642,b'A more general solution would be just to specify a clipping region or bounds for the scrollview. This appraoch assumes that you will have a of items.'
5014,305502118,b'is there a way to turn off pagination?'
5014,305528786,"b""could you please share the whiteboard photos we took together when we discussed architecture? I don't recall where we landed, but not sure if passing through only interactables is what we wanted. I thought we wanted to have something more general."""
5369,305558753,"b""I could add another method to the GazeProvider interface :-)\r\n\r\nBut honestly I kind of feel like GazeProvider shouldn't be an interface, for this reason:\r\n\r\n> I think that, truth be told, it's really hard to implement the gaze provider correctly without having everything inside GazeProvider.cs"""
5359,305559162,b'spacing'
5359,305559280,"b'Might want to do less to get tests to run faster. As Lukas suggested perhaps we should have  a default ""num steps"" amount that\'s like, 10 or less.'"
5359,305559429,"b""It would also be nice to test two hand rotation as well, unless you have other high priority bugs to get to for GA (it's a nice to have)."""
5369,305567003,"b'Yes, this is covered in [PointerEventTests::Test(). ](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/f7f9e051327bc145012fc64804681f03d2cd709a/Assets/MixedRealityToolkit.Tests/PlayModeTests/PointerEventsTests.cs#L174)\r\n\r\n```\r\n            // Show hand far enough from the test collider to not give it focus\r\n            var rightHand = new TestHand(Handedness.Right);\r\n            Vector3 rightNoFocusPos = new Vector3(0.05f, 0, 1.0f);\r\n            yield return rightHand.Show(rightNoFocusPos);\r\n\r\n            // Should receive focus left events from gaze pointer\r\n            expected.numBeforeFocusChange++;\r\n            expected.numFocusChanged++;\r\n            expected.numFocusExit++;\r\n            handler.state.AssertEqual(expected);\r\n```'"
5369,305571014,"b'Refactored to remove duplicate code, but forgot to fix lastHitDistance, so leaving open.'"
5369,305571102,"b""In the current mrtk, FocusProvider and GazeProvider are quite closely coupled: FocusProvider basically updates all the data for gaze provider. I actually don't think the architects intended this. If you look at the IGazeProvider interface, all its fields are only getters, meaning I think architects intended GazeProvider to update itself. It would actually be pretty easy to see a system where this would work -- in gaze provider's update loop, GazeProvider just does a raycast and updates its fields. But the current code instead has FocusProvider updating GazeProvider. \r\n\r\nI'd rather not add to the interface, since I think its design is not so bad -- to encourage people to have the gaze provider update itself. It's just the specific implementation we have doesn't do that. Note I think we can restructure GazeProvider to completely separate it out of FocusProvider after GA (without breaking changes)."""
5369,305571288,"b""I looked into whether we could null out and then read some fields, but didn't find any. Instead I refactored the code so that we only ever populate the gazeprovider data in one location -- from the focus provider. Previously we populated the gaze provider data in two locations--once from FocusProvider, once from GazeProvider.InternalGazePointer. Is there still a cross-code dependency? """
5307,305604806,"b""The expected behavior is for the bbox component to actually detect the change in the bounds size automatically, calling createrig will actually hide the real bug. Can you remove this and I'll file a bug that bbox doesn't change when the bounds changes?"""
5307,305604830,b'Thanks for more tests :-)'
5307,305604872,"b""It's not immediately clear to me what these enums mean, which makes me think folks consuming this will be confused as well. Could you please explain what each value means in the summary comment? This way it will be captured in the documentation so folks can reference it."""
5307,306907170,b'Filed #5414 to track fixing the bug'
5307,306953839,b'why is this static? What would happen if there were multiple bounding boxes in the scene? Would the cached values still be correct?'
5307,306954315,"b""currentMesh? Or, is sharedMesh correct here? Or, does it not matter (in which case currentMesh would be easier for me to understand, since that's what you're initializing above)."""
5307,306955411,b'Are this comments still appropriate?'
5307,306957392,"b""Neat, I didn't know you could do this."""
5307,306958023,"b'I would do an assert here, not an if / continue. The previous for loop should have preventing rigRoots from being added to childTransforms.'"
5307,306958471,b'why are we adding an element to the dictionary when collider is null?'
5307,306959878,b'Why are we returning early here?'
5307,307003293,"b'In MRTK when we try to do something and then return bool if succeeded / failed, we normally use TryXYZ, could you please rename to TryAddRendererBoundsToTarget?'"
5307,307003572,"b'To help with understandability in future, could you please add comment to colliderCorners explaining what that variable represents? '"
5307,307004850,"b'This looks like a function that would be a great candidate for a unit test / edit mode test, since it has known inputs and outputs. It will be great to have to not only verify your changes but more importantly make sure nobody breaks you in the future :-)\r\n\r\nYou can learn more about writing edit mode tests [here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/UnitTests.html#edit-mode-tests)'"
5307,307004944,b'nit: extra line'
5307,307006740,"b""Since this PR fixes existing functionality I would be okay to complete this PR without tests, but would strongly suggest to add if possible. If not, could you please file an issue to write a test for this function so we don't forget? You can either assign it to yourself if you have time to help, or we can find somebody later to help with this."""
5379,307011902,b'Could you please explain why you removed this? It seems like this is changing behavior of GrabPoint so I want to understand repercussions.'
5379,307012442,b'Or zero if none is found?'
5379,307012680,"b'Perhaps we should assert here that the pointer exists in the map, returning zero if none is found might lead to some tricky to discover bugs in the future.'"
5379,307012979,b'nit: remove commented code.'
5379,307013412,"b'can we remove hostLocalGrabPoint variable if we are not initializing it? Or, is it already removed?'"
5379,307013761,"b'interesting, any idea why we need to add this?'"
5379,307014462,"b'It would be very helpful to add a test case for move/scale/rotate object when center != mesh center. I could see this as a feature that somebody could accidentally break in the future, we should protect against that since it was so hard to get working.'"
5379,307817926,"b""For near interaction, the origin of the grab point should be the average of the index and thumb, I was checking this earlier but didn't notice that the average calculation was commented out, great catch @keveleigh. \r\n\r\nIt would be really awesome if we could fix the sphere center computation from palm to average (index, thumb) before our GA release. @MenelvagorMilsom are you able to fix this, since I'm OOF?"""
5379,307819199,"b'@wiwei @thalbern and @cre8ivepark  FYI - it looks like we may be using the wrong position when doing hit testing for near interaction. It seems like we are using the index tip position when doing our sphere cast, when we should be using the average of index and thumb.\r\n\r\nFor doing actual movement / manipulation, using the palm (controller position) is a more stable point than the index and thumb, which is why we are having the transform controlled by ControllerPoseSynchronizer. \r\n\r\nHowever **the hit tests for computing which object is in focus / should receive input** should be done via average of index and thumb, to match the shell.'"
5307,309566353,b'Filed #5486 '
5307,309566700,"b""It just means a small comment on something that's not super important, but is usually also easy to fix. Things like properly spelling words in comments and spacing. """
5500,312183266,"b'Does this mean that hand contrained solver will work with motion controllers in addition to articulated hands? If so, some of the fields in `SolverSafeZone` might be confusing when using a motion controller, perhaps we should add comments describing behavior if using a controller, not an articulatedhand...\r\n\r\nOr maybe the point is moot because actually this only works for articulated hands, not other controller types.'"
5500,312187376,"b'What do AboveFingerTips and BelowWrist mean when we are using motion controllers, not articulated hands?'"
5500,312188082,b'What is the behavior if the user is using a motion controller?\r\n\r\nEdit: Just saw you throw error if not using hands. Suggest mentioning that in the doc comments (only supported with articulated hands).'
5500,312188418,"b'nit: straightened. straitened means ""characterized by poverty."" :-)'"
5500,312188523,b'What is the behavior if using motion controller?'
5500,312190960,"b""It looks like this supports both motion controllers and hands. Can you mention in the class comments that the it computes bounds of hands and controllers? I also noticed that the naming / location strongly indicate hands, but I think that's okay since the main usage is for articulated hands. However, we should mention in the docs + comments that controllers also work."""
5500,312195569,b'It would be good to mention that handconstraint will also work with motion controllers.'
5500,312195687,b'It would be good to mention that this only works with hands.'
5500,312287702,"b'```suggestion\r\n* [`HandConstraintPalmUp`](#handconstraint-and-handconstraintpalmup): Derives from HandConstraint but includes logic to test if the palm is facing the user before activation. This solver only works with [IMixedRealityHand](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand) controllers, with other controller types this solver will behave just like its base class.\r\n```'"
5560,312566696,"b'Hi, the paragraph does mention ""A derived class of [`HandConstraint`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint) called [`HandConstraintPalmUp`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp) is also included to demonstrate a common behavior of activating the solver tracked object when the palm is facing the user. ""\r\n\r\nWere you looking for something else? If so, please feel free to open a PR against mrtk_development. This PR is meant to be just a cherry pick of an existing PR into our stabilization branch, so would like to keep extra changes to a minimum, if possible, to avoid confusion between branches.'"
5618,313160257,b'What requires this?'
5618,313160398,b'Why not a struct?'
5618,313160840,"b'This also means that DrawTetherWhenManipulating will not be set-table from code, violates principle ""make stuff configurable from code""'"
5618,313161274,b'oof. thanks!'
5622,313177080,b'why 2?'
5622,313177217,b'Why not just use handjointutils?'
5622,313177246,b'why do we need to wait here?'
5618,313177717,b'i could see this being common code (wanting to get the position of a hand from the pointer or controller). Should we just expose a method HandJointUtils.TryGetJoint(Controller) and HandJointUtils.TryGetJoint(Pointer) ?'
5618,313177854,"b""I'm not sure what these changes accomplish. What am I missing?"""
5618,313178034,b'About my comment above about HandJointUtils.TryGetJoint(Controller). Seems like a great example of where that method would be useful.'
5618,313178267,"b'hah, again :-)'"
5618,313222185,b'Should this be initialized?'
5618,313224292,"b'Not needed for this PR, but I feel like we should create an IEnumerator in InputSystem that enumerates over all pointers, since I imagine many people want to iterate over all pointers in the scene.'"
5618,313224421,b'Hm....why are we squaring maxRadius here?'
5618,313224610,b'Could pointer.Result be null here?'
5611,313226372,"b'I\'m very curious (perhaps @keveleigh  you can explain since you understand the old solvers), isn\'t the Orbital solver supposed to implement tag-along behavior as well? Note that the name ""follow"" makes much more sense to me than ""orbital"" (which to me sounds like a planet orbiting me, so it\'s a behavior that orbits around as time goes on). But, I\'d just like to understand once we get this in, why anybody would want to use Orbital.'"
5611,313226644,"b'I\'ve always found this comment / description unclear. Instead of describing what the variable is, it would be more helpful to explain how increasing / decreasing the value changes the follow behavior. Also, does the ""time"" here actually mean ""seconds for object to lerp to the desired position""? I don\'t see how the math leads to that, I always wondered if ""time"" here was misleading...'"
5611,313226831,b'should be removed.'
5613,313587677,"b'In our RC2.1 release notes, we learned to provide upgrade instructions going forward. Definitely should add'"
5613,313588184,"b'Here is my suggested upgrade instructions. I took our RC2.1 instructions, followed them, and added instructions that were missing:\r\n\r\n1. Close Unity\r\n2. Delete all MixedRealityToolkit folders from RC1: MixedRealityToolkit, MixedRealityToolkit.Examples, MixedRealityToolkit.Providers, MixedRealityToolkit.SDK, MixedRealityToolkit.Services\r\n3. Delete your Library folder\r\n4. Import the new unity packages (Foundation is required, tools, extensions, and examples are optional). Import Foundation first.\r\n5. In your scenes, delete the\xc2\xa0MixedRealityToolkit\xc2\xa0and\xc2\xa0MixedRealityPlaySpace\xc2\xa0objects\r\n6. MixedRealityToolkit -> Add to Scene and Configure\xe2\x80\xa6'"
5645,313945878,b'Heh. Maybe we should increase the tolerance here.'
5628,313969929,"b'I am not a fan of the name ""Press Interaction Type"" Suggestions:\r\n\r\n* Near / Far Interaction Filter\r\n* Near or Far Interaction?\r\n* Interaction Filter\r\n* Interaction Distance Filter\r\n* Event Filter Type\r\n* Event Filter'"
5628,313970731,"b""@Troy-Ferrell and @Railboy  berni + i couldn't find a way to actually use an enum for the public field, it looks like the custom inspector only supports int lists. Do you have ideas / suggestions for how to use an enum here? """
5628,313971276,b'what happens in the null case? Does a default value fill in?'
5632,314080760,"b'Did you consider using [Select-String](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-6)?\r\n\r\nsomething like:\r\n\r\n```\r\n$matches = gci -r *.cs | sls -Pattern ""^using Boo\\.Lang;""\r\n\r\nif ( -not $matches -eq $null )\r\n{\r\n    Write-Output ""Issues found""\r\n    Write-Host $matches\r\n    exit 1;\r\n}\r\nelse {\r\n    Write-Output ""No issues found""\r\n    exit 0;\r\n}\r\n```\r\n\r\nYou could even be smarter and exit early.'"
5613,314490766,"b'Some people also use ARKit, ARCore. Should we mention that MRTK will compile and run for these other platforms, however those platforms have some issues?'"
5613,314491531,"b""There are now more paragraphs that don't match the links. Needs to be updated, or removed. Actually the list is pretty long and I don't think people will get that much value in the TOC (they will probably do a once-over read and move on), so I'd recommend just removing the whole TOC."""
5613,314491846,b'```suggestion\r\n#### Hand Menu Graduated from Experimental\r\n```'
5613,314492832,b'```suggestion\r\n- HandInteractionPanZoom\r\n```'
5562,314881282,"b'Do these need to be initialized? Also, I believe MRTK aims to use the pattern internal private serialized fields, public getters and setters.'"
5562,314881421,"b'We tend to use the name ""FocusHandler"" instead of *Trigger, for example see ""InputActionHandler""'"
5562,314881638,b'might want to move this input SDK/Features/Input/Handlers since the other event handlers are there.'
5562,314882622,"b'I remember @Railboy recently removed a bunch of code that was using OnValidate incorrectly #4899. Wanted to double check that this was appropriate usage. It seems like we are actually using OnValidate here as a proxy to ""when value changes, show changes in editor"". Is there another way to do this, maybe with the inspector?'"
5562,314883233,b'should this have a getter / setter?'
5562,314884325,b'Yeah I assume he is just checking that no null ptrs are thrown. I considered suggesting doing screenshot comparison but that seemed like it could break often and also could be error prone.'
5562,314884634,"b'idea: could you:\r\n\r\n1. make the outline some color like bright green (0, 255, 0)\r\n2. Capture camera texture\r\n3. Ensure that at least 100 pixels are bright green.\r\n\r\nscreen shot / capture camera texture and at least ensure that some'"
5159,315358795,"b""Hi @Alexees , I'm curious....did you ever have a case when you wanted the offset to be in world space? It seems by default the offset is in local space always."""
5613,315436757,b'How are we ordering the features? How about alphabetical? Right now it seems arbitrary'
5613,315436978,"b""Otherwise I'd suggest putting user-facing, new features first such as the hand menu and input recording."""
5016,316348364,b'Can you fix up the comment please?'
5016,316348888,b'Could you provide an example of why / when you might want to do this (for example when panning content)? '
5562,318250236,"b'Instead of taking a screenshot, could you just have a camera output to a RenderTexture, and then read the pixels from there?'"
5797,318271294,b'Does the default setting have everything enabled?'
5797,318271488,"b'Maybe by default we should have hand mesh off, and hand joint on only in editor (just like in HoloLens 2).'"
5797,318274128,b'Why not use the supported platforms flag? Like what we have in the pointer profiles for different pointer types.'
5798,318627163,"b'33ms seems pretty high actually. This means that if I press an release within 33 ms, a touch event will not be raised. You might want to use a value like what we used in https://gist.github.com/julenka/ccb662c2cf2655627c95ffc708cf5a69 of 0.003 sec (3 ms), or even better, write a quick test to find a min value by measuring the duration of touch contacts when you do a tap'"
5798,318633199,"b'It looks like this change is actually changing the meaning of contact epsilon. In the old code, contact epsilon meant ""if touch is down for > K_CONTACT_EPSILON, then we are manipulating / doing a gesture"". Now it means something very different: ""If touch is down for < K_CONTACT_EPSILON, then we have tapped so quickly that we should not raise a pointer click"".\r\n\r\nI don\'t think we need to have logic to not raise clicks if the touch down / up duration is too short -- most touch screen controllers these days do this kind of signal filtering at a much lower level. I recommend removing that logic and raising a click only if you are not doing a manipulation / hold.\r\n'"
5781,318710885,"b'Thanks for adding doccomments. In general, we are trying to have all of our classes have doccomments for classes + public methods, so really appreciate you adding this.'"
5781,318711359,"b'Oh dear. Yes, please fix :-)'"
5781,318712590,"b""These will be breaking changes. We should note this for the next release. @wiwei where are we collecting breaking changes? For now, I'll add the 'breaking change' tag to this PR."""
5781,318716288,"b'Hm...it seems strange to have an interface for a touchable that has a forward, , and then not have an interface for the Touchable that has a volume. \r\n\r\nAlso, do we really need all these fields? As far as I know, we just need a bounded plane, so a world-space point, a plane ""forward"" world space direction, and then a bounds, in local coordinates. We could even have the bounds be a Vector3. The bounds.z would be 0 for something that\'s flat.\r\n\r\nQuestion: Why are we doing local space, not world space here? @thalbern  I\'m guessing you know.\r\n\r\nHow about something like this:\r\n\r\n// The center of the touchable, in world coordinates (why not world?)\r\nVector3 WorldCenter { get; }\r\n// The front of the touchable, in world coordinates (for volumes, this value is ignored)\r\nVector3 WorldForward { get; }\r\n\r\n// I\'m not sure why we need up and right, so omitting those.\r\n\r\n// Bounds of the touchable, in world coordiantes. For flat things, make Z zero.\r\nVector3 LocalBounds { get; }\r\n\r\n// If true, touch events will be generated only when penetrating forward plane\r\nbool IsTouchableFromFrontOnly;\r\n\r\n'"
5562,318750461,b'do you need to initialize this? = new UnityEvent()'
5798,318764433,"b'I think we will want to still raise gesture / manipulation cancelled events eventually, could you create an item referencing this PR to add back those events?  I would probably use a different approach though (if we are in manipulating/gesture mode, then raise a cancel, not just based on a timeour).'"
5799,318834303,b'Suggest adding an example for how to Revert back to default behavior'
5562,318836072,b'What about if you instantiate the component at runtime?'
5781,319128959,"b""> Is there a reason that these are all protected in the first place?\r\n\r\nI think @MenelvagorMilsom  did the original implementation I believe, but I can't think of a reason other than he made it a base class so maybe wanted to make everything protected by default.\r\n\r\nI would say if it's not needed, better to not make the change unless it provides customer value. """
5823,319248679,"b'I think a for loop over toQuery here is excessive, remove'"
5823,319533568,"b'```suggestion\r\n        /// Additional distance on top of<see cref=""BaseControllerPointer.SphereCastRadius""/> when pointer is considered \'near\' an object and far interaction will turn off.\r\n```'"
5840,319708898,"b'Nope, not sure what that would mean'"
5840,319708968,"b'I had that lower, brought it up.'"
5840,319709163,"b'Updated to remove uses of ""you""'"
5840,319709182,"b'> or alternatively just make this is a static utils function that takes in a GameObject to make touchable, as well remove the monobehavior class\r\n\r\nI like that idea.'"
5840,319709225,"b""Couple reasons:\r\n\r\n1) When the header was marked with the monospace annotation, it was not clear that I could click it\r\n2) The monospace styling made me not realize it was a header, visually I wasn't able to break up the text into sections\r\n\r\nI ended up removing the link for consistency -- other headers didn't have links."""
5840,319709673,b'really? I like them this way actually. I find the monospaced formatting hides the fact that the text is a link.'
5840,319709684,b'Good catch'
5840,319710355,"b'What do you think of the new methods, @Troy-Ferrell?'"
5840,319808275,"b'Okay, reverted the change to stay consistent'"
5840,319808946,b'Made all links to xrefs have ticks.'
5854,320321764,b'Initialize name here'
5854,320322372,"b'FYI @Troy-Ferrell interactable doesn\'t actually update its state when instantiated from code -- it is always in ""disabled"" state. Troy are you already fixing this or should I file a new bug?'"
5854,320322779,"b""Note: I still think this change is valid, since i'm not sure why we need to predicate this particular event on a state change. We are already tracking state via hadFocus."""
5854,320322942,b'Add formerlyserializedas'
5854,320323840,b'Interactable'
5854,320324131,"b'Move these all out into methods, I think.'"
5853,320348274,"b""Hm...shouldn't this code live near where the input simulation files are?"""
5857,320447090,"b""These todos don't have any description, can you mention what you are doing?"""
5857,320447513,b'Delete'
5857,320447902,"b'Hm...what do you mean by ""main settings in Themes""? Can you maybe provide more details?'"
5857,320448538,b'Should you make these private and have getters and setters?'
5857,320448787,"b""Isn't there a way to mark these as obsolete? https://answers.unity.com/questions/559529/how-to-mark-a-method-obsolete.html"""
5857,320449109,"b""Is this how you're planning to enable migration? Are we going to expose this somehow to scripts so somebody can just run `updateInteractable.sh` or `updateInteractable.py` to fix up their assets?"""
5854,320490378,b'Creatd #5866 5866'
5854,320514942,b'Removed this constructor.'
5854,320516554,"b""It's because in AddReceiver I am specifying generic type, and generic types cannot AFAIK be instantiated with params. So, I need to do:\r\n\r\n```\r\n            var interactableEvent = new InteractableEvent();\r\n            var result = new T();\r\n            result.Event = interactableEvent.Event;\r\n```"""
5854,320517498,b'I added overload for returning all matches.'
5854,320517562,"b""But actually it seems odd that you'd have multiple of a type. But, it is possible so I added an overload."""
5781,320525787,"b'@LukasTeonneMS, I think this should be fine because the UnitUI touchables will not be hit by the spherecast anyway'"
5781,320525919,b'do we need these two usings?'
5781,320526507,"b""I'm still not sure where I would use this, could you provide an example of when I'd want to use it, and where it's used in MRTK? I don't see where it's used in this PR but perhaps I am missing something."""
5781,320526690,"b""Woah cool, I didn't know you could do that!"""
5781,320526824,b'should this be NearInteractionTouchableSurface?'
5781,320527468,"b""Since  we are  now negating LocalForward to be LocalPressDirection, will this mess up people who have created custom pressable buttons, or other custom elements that have near interaction touchables? Say in our next release, if those assets still have LocalForward to be pointing at (0, 0, 1), will they no longer be able to press buttons until they re-configure the buttons? If yes, let's try to figure out a plan for migration of our customers. A surprising number of customers create copies of our prefabs and then edit / customize them, and the breaks on upgrade might make them reluctant to upgrade and get all the goodness we are adding"""
5781,320532937,"b'@wiwei Adam and I were lamenting that NearInteractionTouchable needs to inherit NearInteractionTouchableSurface.\r\n\r\nMy ideal would be:\r\n\r\nNearInteractionTouchableSurface : BaseNearInteractionTouchable\r\nNearInteractionTouchableVolume : BaseNearInteractionTouchable\r\nNearInteractionTouchableUnityUI : BaseNearInteractionTouchable\r\n\r\nI\'d like to create a plan to get us there. Not needed for this PR since one of MRTK members can do this. \r\n\r\nSomething like this:\r\n- Mark NearInteractionTouchable as Deprecated \r\n- Provide migration guidance ""if this is something that should be touched only from the front, use surface, otherwise use volume""?\r\n- In one release after, delete NearInteractionTouchable\r\n\r\nI can create an issue to follow up on this\r\n'"
5781,320533540,b'Woah cool'
5781,320534227,"b'If I dragged a UnityUI button not on a UnityUI canvas, would they work? I thought UnityUI buttons needed to be on UnityUI canvases. It might be good to have a quick Hhow to add pressable buttons to UnityUI canvas"" section.'"
5854,320559614,b'done. good idea.'
5854,320564555,b'done. for all of them.'
5874,320864684,b'Why are we removing this section? It seems to be raising OnInputDown and Up events. Is it handled somewhere else?'
5781,320894045,"b'Oh, sorry. Let me update my ideal. \r\n\r\nNearInteractionTouchableSurface : BaseNearInteractionTouchable\r\nNearInteractionTouchableVolume : BaseNearInteractionTouchable\r\nNearInteractionTouchableUnityUI : NearInteractionTouchableSurface \r\n\r\nAnd then NearInteractionTouchable no longer exists, instead NearInteractionTouchable would be renamed to NearInteractionTouchableSurface.\r\n\r\nI was trying to say that I think the name ""NearInteractionTouchable"" is misleading, since it\'s really a touchable surface. It threw me a bit that NearInteractionTouchable : NearInteractionTouchableSurface but then I remembered that was the plan.'"
5868,321039543,"b'Should this be a default command in MRTK, or was it just for testing? Would recommend removing'"
5868,321357709,"b""Hm...it's a little unusual that this component requires textmeshpro (using TMPro) just so it can set the text here. Also, what if you wanted to use a different text label, not text mesh pro?\r\n\r\nWhat if you had a different approach, something like this:\r\n\r\n```\r\nclass TooltipConfirmation : Monobehavior {\r\n    public virtual void SetText(string s);\r\n    public virtual void Confirmed();\r\n}\r\n\r\nclass HoloLens2Tooltip : BaseTooltip {\r\n   public void SetText(string s) {\r\n       textMeshPro.text = s;\r\n   }\r\n    public virtual void Confirmed() {\r\n         kickOffAnimation();\r\n     }\r\n```\r\n\r\nThis will remove tooltip's dependency on textmeshpro, and allow people to use tooltips without needing textmeshpro (they can make their own).\r\n\r\nIn SpeechInputHandler, reference tooltip like this:\r\n\r\n```\r\nprivate TooltipConfirmation speechConfirmationTooltipPrefab = null;\r\n```\r\n\r\n"""
5868,321357908,"b""Can you please confirm that the `speechConfirmationTooltipPrefabInstance` deletes itself when its animation is over? Don't want to leave orphaned / old speechConfirmationTooltipPrefabInstance instances all over the scene."""
5868,321358509,"b'Can we instead have the following:\r\n\r\n1) a checkbox ""use speech confirmation tooltip""\r\n2) If checked, the speech confirmation tooltip prefab field shows up.\r\n\r\nOr, have a tooltip that clearly states ""if null, no tooltip will show up"". '"
5882,321364311,"b""@thalbern FYI, for your refactor. Don't lose this change"""
5882,321365402,"b'Should this be in Services, or SDK? @davidkline-ms I often wonder about this, whether to put things in services or SDK. What are the rules to follow for deciding if something should go into services or SDK? Maybe a one sentence rule of thumb to follow? Here\'s a strawman: ""If it related to getting data, it goes into services. Otherwise (UI, interactions, etc) put it in SDK""'"
5882,321365704,"b'Also I wonder if this should go into SDK, not core MRTK'"
5889,321544620,"b""btw, I'm not convinced this actually works"""
5889,321544701,"b""as in, the code didn't seem to be working for me before the change. I had properties that I wanted to render, and they were not actually getting updated."""
5882,321552298,"b""You can figure this out by looking at the asmdef files. It looks like SDK depends on a bunch of stuff, but services usually depends only on MixedRealityToolkit.\r\n\r\nI think if it isn't a core MRTK service like the input system, spatial mesh system, or boundary system, it should go into SDK. """
5903,321956434,"b'There\xe2\x80\x99s an issue when they happen on the same frame. I believe if you delete this code, then button releases will not work on Unity UI\xe2\x80\x94buttons will stay pressed. '"
5903,321956489,"b'David, I\xe2\x80\x99m a bit confused...why do you think this is not correct? Is it because the comment does not explain why we need to ensure touch up and lost are not on same frame?'"
5920,322888642,"b""couple reasons:\r\n1) gazepointer actually maps to two types: ggvpointer and GazeProvider's internal gazepointer\r\n2) the internal gazepointer actually cannot be referenced from anywhere.\r\n\r\nI'll add a comment explaining why. """
5920,322888882,"b""I'll add a comment. Without this, when the poke pointer is disabled, the finger cursor still shows up. This ensures that we actually hide the finger cursor if we cannot poke things. Otherwise the system is being misleadding."""
5920,322889916,"b'That would be a breaking change. Probably for the better since people really , but could break people. @davidkline-ms @wiwei woudl this be an acceptable change, to remove IsInteractionEnabled from being settable publicly?'"
5923,322932171,b'@wiwei what is the guidance on adding a copyright block here?'
5923,322932680,"b'Nit: make your comments consistent: so, \r\n\r\n// Like this\r\n\r\n//instead of having some like this'"
5923,322933915,"b""I would also recommend making sure that the line pointer's origin is close to initialPos. Otherwise, the ray could be in the correct direction, but located at like 100m away, and the test would still pass."""
5923,322934738,"b'make sure to normalize both Direction and forward. A * B = |A| |B| cos (theta) so if |A| or |B| > 1 you will have incorrect value. You could also just use AngleBetween, now that I think about it...'"
5923,322935165,"b""I don't think you actually need to move the hand around -- this test is supposed to just check the first frame. It's good practice  for learning but not needed to check in."""
5923,322935670,"b'I would only recommend adding delays if they are really needed. As is, this test will take ~ 5 seconds. Imagine if each of our 175 tests took 5 seconds. The tests would take a long time to run.'"
5920,322949558,b'Aw that was my quick prototype code :-) Fixed.'
5920,322959159,"b'I removed that, in favor of hooking up assets. '"
5920,322959257,b'Removed the prototype code.'
5920,322959382,b'I instead added a property IsToggle on interactable '
5920,322960646,"b""That's not quite the same behavior, since we don't want to mess with things if the behavior is default."""
5920,322961290,b'I simplified it a bit.'
5920,322961345,"b'```\r\n                Action<IMixedRealityPointer, PointerBehavior> setPointerState =\r\n                    (ptr, behavior) =>\r\n                    {\r\n                        if (behavior == PointerBehavior.Default)\r\n                        {\r\n                            return;\r\n                        }\r\n\r\n                        bool isPointerOn = behavior == PointerBehavior.On;\r\n                        ptr.IsActive = isPointerOn;\r\n                        if (ptr is GenericPointer genericPtr)\r\n                        {\r\n                            genericPtr.IsInteractionEnabled = isPointerOn;\r\n                        }\r\n                        unassignedPointers.Remove(ptr);\r\n                    };\r\n```'"
5920,322968180,"b'No, motion controller pointers are hand ray pointers as well :-)'"
5920,322968279,"b""Good point. TeleportPointer is also a line pointer, so it's better to be more specific."""
5920,322969313,"b'I would like to have the ""easy"" versions of these, because they are more discoverable, especially for people not familiar with generics. '"
5920,322986848,"b'Updated to the following enum:\r\n\r\nAlwaysOn,\r\nAlwaysOff,\r\nDefault'"
5920,322987424,"b""because I want to test IsInteractionEnabled of a specific pointer. Otherwise I'm just testing if a setter works. Instead, I'm searching for pointers and actually testing if they are enabled."""
5920,322987495,"b""Resolving this, I won't be changing it."""
5925,322992179,b'example comment'
5920,322996086,"b'> I think that doing things this way avoid some breaking changes, but also still adds code cruft (i.e. generally speaking casting to specific implementations from interfaces is not really the right thing to do).\r\n\r\nI thought about adding an interface, but wanted to avoid adding more interfaces. Additionally, this is a behavior specific to the input system / focus provider / mediator combo that the default MRTK uses. For example, a different system could provide this functionality in a different (simpler) way.\r\n\r\n> It feels weird to me that the default pointer mediator, which is a thing that the focus provider uses, has to then reach all the way back out of the system and find the focus provider (and treat it directly as THE default focus provider).\r\n\r\nI agree. I initially had the behavior set per mediator. Then I ran into the following problem: the behaviors would reset whenever I dropped and raised hands. This is because the mediator is created _per input source_. \r\n\r\nIt seemed like the simplest solution was to specify the behaviors in a location that was not going to change per source, which is why I picked the focus provider.'"
5920,322997093,"b'So if I\'m understanding, you want a way to get the pointer behavior for the gaze pointer.\r\n\r\nHow would you make that call when the gaze pointer is an internal class in GazeProvider?\r\n\r\nI guess we could say ""if you want to get the gaze pointer behavior, you need to instead actually call GetPointerBehavior<GGVPointer>""'"
5925,323011445,"b'With changes like this....\r\n\r\nWhat if people have crated their own interactable themes? Like MyCustomToggleBackground? If I upgrade, will I have my asset totally broken and need to rebuild it?'"
5925,323011915,b'Why removed?'
5925,323012469,"b""We're going through this with pointers now, we will probably add a Pointers folder under tests (getting lots of tests related to pointers). Probably makes sense to add a folder for Interactable. Not required, just a suggestion."""
5923,323013784,"b""linePointer.Position is better because the rays might actually change some day (if we want to say make teh ray a little higher from the pointer's position)"""
5920,323053221,"b'We chatted. I will try the following approach, though if run into major issues, will probably move off of it since it can be done at later time:\r\n\r\n```\r\ninterface IPointerPreferences\r\n{\r\n  // Returns the desired behavior for a given pointer\r\n  public PointerBehavior GetPointerBehavior(IMixedRealityPointer ptr);\r\n}\r\n```\r\n\r\nThen I would modify DefaultPointerMediator to take as a constructor:\r\n\r\n```\r\npublic DefaultPointerMediator(IPointerPreferences pointerPreferences)\r\n{\r\n  this.pointerPreferences = pointerPreferences;\r\n}\r\n```\r\n\r\nThen instead of accessing `CoreServices.InputSystem.FocusProvider` I would just look at `pointerPreferences`.'"
5920,323079456,b'and setting'
5920,323079540,b'Add doccomments'
5923,323362401,b'Add a comment describing the class. Look at the other tests for examples.'
5920,323370106,"b'Renamed to ""disable pointers""'"
5920,323377626,b'Thanks! I added a table'
5920,323378061,"b'I added a way to differentiate the hand ray and motion controller -- you specify behavior for pointer type, input type. This will allow you to turn off motion controllers but not hand rays.'"
5920,323513880,b'Yes it does.'
5947,324006575,"b'This seems pretty long (lots of code) for a skeleton. The idea of a skeleton is it should be something that people can use to start, so it should have lots only the bare bones things that people would want to re-use. It\'s true that most of our tests move a hand, but what about things like getting the input system, and pointers?\r\n\r\nThings to consider:\r\n\r\n1. It\'s good to show how to create a TestHand, but does every test really need the input system? \r\n2. Does every test really need to get the pointer? That seems like something fairly specific to what you were doing in your previous test.\r\n3. No real need to separate out ""initialPos"" into a variable\r\n4. There\'s an easier way to get the line pointer now: [PointerUtils.GetPointer\\<LinePointer\\>(Handedness.Right)](https://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.Input.PointerUtils.html#Microsoft_MixedReality_Toolkit_Input_PointerUtils_GetPointer__1_Handedness_). This means you don\'t need to get the input system, or controllers. It would also be useful to read how GetPointer<>() in PointerUtils works to see a more concise way of getting the pointers.'"
5947,324007025,"b""Don't think we really need a separate variable here, also is the comment adding anything? """
5947,324007247,"b""No need to comment this, the method's fairly clear. In general try to add comments to explain *why* you're doing something, or to explain what you're doing if it's complex. Describing what every line does can lead to people ignoring comments and to comments getting out of date. """
5947,324007298,b'It would be good to explain why we are doing a yield return here.'
5947,324007912,"b""It's a little odd that a skeleton would always override the base implementation. If that's the case, why not just to PlayspaceToOriginLookingForward always? I would recommend removing this actually."""
5944,324268665,"b'I actually never thought of rays as ""physics ray"". ""Physics ray"" to me implies that it\'s somehow part of Unity\'s physics system, meaning it\'s like a RigidBody or something fancy like that. A ray is just a position and a direction. Also, I would remove ""interaction enabled pointer"" since that confused even me, imagine what somebody new would think :-)\r\n\r\nHow about:\r\n\r\nGets the position and direction of the head.\r\n\r\nThe goal here is to make this an easy / understandable / approachable thing for people not familiar with MRTK. So, the way I\'d think about it is ""would somebody new to MRTK understand what this method does"".'"
5944,324269658,"b""When would the head ray contain invalid data? I'm not sure this needs to be a try get. Isn't getting the head gaze always just grabbing Camera.Main.position and Camera.Main.Rotation?\r\n\r\nNote: even if the gaze pointer is not active, I would expect this method to still return the direction that the head is pointing. Same for the hands -- if a hand exists in the scene, even if the line pointer is not active, I would expect the method to return a direction."""
5944,324270004,"b'Idea: instead of saying physics ray, I would just do a <seealso:Unity.Engine.Physics.Ray/> .'"
5944,324270726,"b""I think it would be good to explain what 'valid data' actually means here. Here's what I would expect:\r\n\r\nTrue if eye gaze is available, false otherwise. Eye gaze is available if a platform both supports eye gaze (for example, MRTK is running on HoloLens 2) AND the user has calibrated their eyes. If a user's eye gaze is not available, this method returns false and the output ray is set to null / empty / zero."""
5944,324271864,"b'This is interesting, but I\'m actually a bit confused by this because why is it that only one input is active? For example, if I\'m on HoloLens 2 and have my eyes calibrated, then both my eyes and my head should be available. So, what would the method return if I\'m on HoloLens 2 and have eyes calibrated?\r\n\r\nI can see the desire here might be for devs to understand ""is the system using the eye pointer or the gaze pointer as the main cursor"", but I think that might be convolving the purpose of the ""get eye ray"" and ""get head gaze ray"" methods, which are meant to just return where the user\'s head / eyes are facing, regardless of what input pointers are active.'"
5944,324274080,"b'If my left hand is up / detected by the system, but it is near a grabbable, then the line pointer will actually not be active / interaction enabled will be false. This means that this method could return false even if a hand is detected by the system. And actually reading the method even further, it could return false sometimes (say, if the system disabled grab pointers and line pointers), return the actual hand pointing ray sometimes (say, if the hand is not near a grabbable or touchable, and line pointers are enabled), and return the position and direction of the grab pointer sometimes (if the hand is near a grabbable and grab, line pointers are enabled). \r\n\r\nThis would probably be very confusing for developers, since I assume what developers expect when they call TryGetRay(InputSourceType.hand, Handedness.Right) is to get the position, direction of the hand ray -- the line that shoots out when the hands are not near anything.'"
5941,324402639,"b""It's a little bit strange that we are releasing the build produce without actually the code underlying it. Could you perhaps add a link to the pull request that adds the examples hub code into MRTK?"""
5944,324405070,"b""I think it's great to have a test that shows getting the data working even without pointers, however it would be nice to actually pull it out into a separate demo scene. As it stands, it's a bit hidden / not discoverable."""
5944,324405083,b'Remove'
5944,324405495,b'Normally for vector comparisons we use `TestUtilities.AssertAboutEqual`'
5944,324405636,"b""I'm not sure about the name RayUtilities. What about InputUtilities?"""
5938,324769291,b'is this a separate bugfix?'
5938,324773814,"b'Separate thought: would be nice to have a way to enforce that click is always before up, or vice versa.'"
5938,324774103,b'Hm...why is this also an input source? Any ideas of examples where we are using the gaze input source? Seems like device managers should raise input source detected.'
5938,324776003,"b'Wait, if MRTK is managing the focus provider, why are you disabling it here? Is it because when input system is disabled, we actually want to also disable focus provider?\r\n\r\nAh, reading your comments it sounds like yes. So currently disabling input system...\r\n\r\n- Disable Focus Provider\r\n- Disable Gaze Provider\r\n\r\nI can see why we want to disable focus provider if we disable input system (no longer want to send focus enter / exit events), but why the gaze provider? If we are disabling the gaze provider, we might as well disable every single data provider (hands, eyes, controllers). Currently our input system is actually doing not only input dispatch (dispatch focus, dispatch input events), but also dispatchign sensor data (gaze, hands, controllers). I actually think what we want eventually is to decouple providing sensor data (eyes, hands, controlelrs) from input dispatch. A first step is to only disable input stuff when input system is disabled. So I would only disable the focus provider, not the gaze provider (which is sensor data)'"
5938,324777961,b'extra?'
5938,324778615,"b'I would expect that even with input system disabled, that gaze would be running. In my mind, gaze is a sensor stream that is combined with input in MRTK, but should not be.'"
5938,324778771,"b'Would also recommend testing that when input is disabled, you cannot move cubes or push buttons. As well would recommend adding a test for a global input handler -- add a pointer handler, press a button, make sure the pointer handler gets no events. Same with input action handling (not just pointer events).'"
5938,324779428,b'What is this for?'
5955,324800575,b'Should this go under Experimental/Demos/UX/PrimitiveManipulator?'
5955,324801379,"b'I noticed the scene content is under ""MixedRealityPlayspace"", I don\'t think things should be under that node. Instead, put it under a new node SceneContent, like in the hand interaction examples scene'"
5955,324801714,"b'Same with the ManipulationHandler example, which I know is a bug in the existing scene.'"
5955,324804074,"b""I noticed there's no longer an option to rotate about the object center:\r\n\r\n![image](https://user-images.githubusercontent.com/168492/64980782-6e98fc00-d86f-11e9-864d-8705f724165a.png)\r\n\r\nI think it would still be good to have this, to allow objects grabbed at a distance to be rotated about their center points"""
5955,324821546,"b'Looks like you removed RotateAboutObjectCenter, but actually I found that very useful for rotating things with one hand at a distance. I noticed that the behavior is broken in the 2.0 release, and filed #5957. Maybe you can fix #5957 in the new manipulationhandler, and we can discuss whether #5957 needs to be fixed for the old one (I posted a workaround that people can do in the mean time).'"
5955,324822118,"b""Note that doing #5957 core idea is for far manipulation you need to use the grip pose instead of the pointer pose -- the grip pose rotates with the palm, but the pointer pose uses the hand ray. For motion controllers it's similar -- grip pose is the rotation of the 6dof where pointer rotates based on where the 6dof is 'pointing' (not the same as grip pose)."""
5955,324822438,b'Coding guidelines say to have private fields and public properties.'
5955,324882186,"b'channeling will here: use full names manipulationHandler and primitiveManipulator. Not that much work to type, easy to read.'"
5960,324907575,"b""Doc comment since it's public"""
5960,324908994,b'remove commented code'
5955,324911007,"b'How about ObjectManipulator instead of PrimitiveManipulator? PrimitiveManipulator sounds like it only works with primitives like sphere, cube.'"
5955,324912040,"b'Since we are refactoring, could we also make smoothing params consistent with Solver? On Solvers like Overlap and RadialView, there\'sa  ""smoothing"" checkbox, and then a ""move lerp time"" and ""rotate lerp time"" field. See Solver.cs:\r\n\r\n```\r\npublic static Vector3 SmoothTo(Vector3 source, Vector3 goal, float deltaTime, float lerpTime)\r\n        {\r\n            return Vector3.Lerp(source, goal, lerpTime.Equals(0.0f) ? 1f : deltaTime / lerpTime);\r\n        }\r\n```'"
5955,324913347,"b""This method actually doesn't seem so different from ManipulationHandler. Are you sure you can't just change the inspector? Seems like the only difference is that the HandMovementType and TwoHandManipulation type are flags. What else is different that requires us to have a new class?"""
5902,324924820,"b'Any reason you put this in Tools/Runtime (which will add another visual studio project) instead of under Examples/Input/Scenes/InputAxes? I would actually expect this to just be an example of how to display input axis data...To me, tools is a collection of stuff I can use to build my code, take screenshots, analyze dependencies. '"
5965,325262516,"b'If this is experimental, the file should go under Experimental/Demos/UX/etc'"
5965,325262717,"b'Same, should go under experimental'"
5965,325263287,"b'Move to experimental. And while we are at it, I think it would be nice to rename this to ""BoundsControlRuntimeExample"" and remove the word ""test"", since it is not a playmode or edit mode test.'"
5965,325263635,"b""Don't forget to complete this TODO."""
5965,325264325,b'Are you planning to do that in this PR?'
5965,325264712,"b'I believe MRTK makes events private, with public get/setters. Best to stay consistent.'"
5965,325265070,"b""Comment this field. It's not obvious what it does."""
5965,325265422,"b""Can you create a bug for this so we don't forget?"""
5965,325265503,"b""Can you create a bug so we don't forget?"""
5965,325265966,b'Either remove or file a bug. It will increase likelihood we complete the work if we have bugs for our todos.'
5965,325266065,b'Same here.'
5965,325267492,b'```suggestion\r\n        /// Returns true if the provider has any visible objects\r\n```'
5965,325269549,"b""To match the experimental structure elsewhere, please put under Assets/MixedRealityToolkit.Tests/Experimental/PlayModeTests/BoundsControlTests.cs and namespace Microsoft.MixedReality.Toolkit.Tests.Experimental, or similar if there's a structure you'd prefer. But it should include Experimental in folder and namespace."""
5965,325271667,"b""nit: curly braces. Also there's lots of extra whitespace here and elsewhere. Probably worth doing a pass to clean that up."""
5944,325403776,b'incomplete sentence'
5944,325403947,b'Link to the example scene if possible.'
5976,325476300,"b'If we are only setting this  value when constraints on movement is set, can we have a custom inspector that only shows these properties when that checkbox is checked? Niall has some great examples of how this has helped to simplify the new ObjectManipulator in his PR.'"
5976,325476735,"b'It would be good to specify here, and in comments, if this axis is in the object\'s space ""local space"", or the world space. It looks like the constraint is in world space, since if the constraint is set to just be X, then the object will have only its x value changing, which is a world space value.'"
5976,325477253,"b""It looks like this is doing constrained movement in world space, meaning that if we set constraint to be X, then the object will only move along the world - space x axis. The tricky thing about world-space X is that this is pretty arbitrary on HoloLens. The world-space +X axis points to the right of wherever the user was when she started the app. So, this X axis will change depending on where she is facing when she starts the app. It also is not related to the actual object's x axis, meaning that if the object is rotated a bit and constraint is X, it may appear to be stuck on a relatively arbitrary axis.\r\n\r\nI think the translation constraint should by default be in the object's local space, or at least using the coordinate system that the object had when manipulation started."""
5976,325481191,b'This line caused a compile error for me when I pulled the code. '
5944,325809912,"b""Good question, I didn't notice that, it was code from David."""
5944,325811668,"b""Great observations, I agree it's out of the scope of this PR. Let's work together to improve this :-) """
5944,325811976,b'Maybe a concrete thing we can do is to rename the pointers Rays property to Pointer.Segments or Pointer.RaycastSegments. '
5944,325825136,"b'InputRayUtils sounds good to me, thanks troy!\r\n'"
5944,325828134,b'Are you sure?'
5944,325840824,b'seems okay to me'
5944,325841119,"b""To get the ray for a pointer you can just grab the position and rotation of a pointer. I do think that we could cache the right and left hands, but not convinced it's such a massive perf hit. Will check."""
5944,325901619,"b""Okay, ran a profiler. The scene I have is slow, but this is because of UGUI.Rendering.UpdateBatches, most likely because I'm changing the text of a canvas every frame. Also I'm allocating some stuff every frame, probably the StringBuilder. So, nothing aggregious in accessing the controllers."""
5944,325912397,"b""Hm now that I've played more with the scene, I'm noticing that the framerate on the example scene does drop to 40. I'll file a bug on that, don't really want to ship with that. Worst case we will remove the code that renders the status of controllers."""
5944,325913027,b'#5996 '
5995,325915463,"b""You can remove this if check, I believe it was there unnecessarily. We don't do anything with the focus provider. I should have deleted that when I reworked the code to use pointer prefs, but I forgot."""
5995,325915755,"b""Troy's comment is great, thanks Troy!"""
5902,325929840,"b'Oh okay, makes sense. '"
5967,326260893,b'Is this intentional?'
5967,326270091,b'Do we need to fill in this value ever?'
5967,326286564,b'Please add doccomment'
5967,326286868,b'Please make all public methods have doccomments'
5967,326287761,b'Please add doccomments for all public fiends. '
5990,326307606,"b""Remove, that's from a different PR."""
5990,326307670,b'Also remove'
5990,326315637,b'Do you need to stop the previous coroutine before starting this one?'
5990,326316652,"b'That name is a bit confusing to me. I *think* it means ""transform to modify when doing the follow behavior"". Maybe AutoFollowTransformTarget?'"
5990,326318421,b'Recommend using SetToggled() instead'
5990,326318507,b'```suggestion\r\n        /// Coroutine which checks how far away this transform is from the user and enables the follow behavior at a specified distance.\r\n```'
5990,326319249,"b'You are calling StartCoroutine several times without ever stopping the coroutine. This will cause many coroutines to spin up, when I think you only ever want one to be running at a time. Make sure to stop any existing ones before running the coroutine.'"
5990,326320587,"b""I'm not really sure why this is in a coroutine, and not just in the update loop....is it for perf?"""
5990,326343394,b'What happens if somebody checks autoFollowAtDistance in the editor during runtime?'
5990,326344550,b'Add docccomment for the class'
6001,326348812,"b'Please follow the guidelines outlined [here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/ExperimentalFeatures.html) when adding experimental features. In particular, this file should be under MixedRealityToolkit.Examples\\Experimental. Additionally, all of the scripts supporting the experimental features should go under the appropriate Experimental folder.'"
6001,326364468,"b'seems simpler to just do StartCoroutine(UpdateListOverTime(loader, itemsPerFrame));'"
6001,326364942,"b""Do you ever set this to active if we don't do a lazy load?"""
6001,326365584,"b'Per experimental guidelines, please make namespace Microsoft.MixedReality.Toolkit.Experimental.Examples'"
6001,326366382,"b'Please add doccomments for all public enums, properties, fields.'"
6001,326366937,b'doccomments'
6001,326367033,"b'Doccomments here, and on all public properties please.'"
6001,326367365,"b""```suggestion\r\n        /// The distance the user's pointer can make before its considered a drag gesture\r\n```"""
6001,326367553,b'I think you just need to move these doccomments down to be above the public properties'
6001,326367788,"b""```suggestion\r\n        /// Seconds the user's pointer can intersect item before it is considered a drag.\r\n```"""
6001,326368399,b'Interesting.'
6001,326368805,"b""I don't understand what this comment means actually. What does it mean for this value to be zero? 2.0? """
6001,326369769,b'This is a bit misleading. I believe this is used to slowly reduce velocity by lerping.\r\n\r\ncurrentVelocity *= currentVelocity.\r\n\r\nWhat about other names?\r\n\r\nVelocityMultiplier\r\nVelocityDampen\r\nVelocityInvDampen\r\nVelocityDampenMultipler\r\n\r\nVelocityDampen is my favorite of those.'
6001,326369991,"b'```suggestion\r\n        /// The amount of time (in seconds) the <see cref=""PaginationCurve""/> will take to evaulaute\r\n```'"
6001,326370383,b'What is GameObject here? Is it containing the object that fired the scroll?'
6001,326370729,b'Do you need an int cast here?'
6001,326370829,b'Redundant comment'
6001,326370954,"b'Nit: add spaces after ""//""'"
6001,326372927,b'Why do you need to track both currentHandedness and currentPointer?'
6001,326374753,"b""Not necessarily. It's possible for a poke pointer to be attached to a VR controller. See https://twitter.com/julenka/status/1173477876630347776"""
6001,326377087,"b""It looks like you're trying to get the pointer endpoint here. How about using `pointer.Result.Details.Point`? \r\n\r\nNote: You should probalby make this a TryGet, since pointer.Result could actually be null.\r\n\r\nHere's how I would do this:\r\n\r\n1. Set pointer's [IsTargetPositionLockedOnFocusLock = False](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/4fd50b8923785dc2893d7cf9ac9d1adcffaf3cb5/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Slate/HandInteractionPanZoom.cs#L793) so that the poitner doesn't lock when you scroll.\r\n2. Grab pointer.Result.Details.Point\r\n\r\nNote that to support GGV / HoloLens 1 style, you will want to do something like:\r\n\r\n```\r\n\r\nif (!pointer.controller.SupportsRotation || poitner.Result?.Details? == null)\r\n{\r\n    return pointer.Position;\r\n}\r\nelse\r\n{\r\n   return pointer.Result.Details.Point;\r\n}\r\n\r\n```"""
6001,326378750,"b""This doesn't need to be a member var. Can you please do a scrub of all the member vars / fields and remove fields that don't need to be fields, in other words they can be local?"""
6001,326379190,"b""This doesn't need to be a field, can be local variable."""
6001,326379399,"b'Why are you serializing this field, but then hiding it?'"
6001,326379890,"b""I don't think this variable is necessary, and don't really understand how its being used, can you either elaborate on the comment, or remove the variable?"""
6001,326380209,"b'finalOffset? If this is the distance in front of collection when touch begins, how about ""touchThresholdDistance""?'"
6001,326380434,b'Dot product to do what?'
6001,326380602,b'\xf0\x9f\x98\x85'
6001,326380823,"b'I feel like you can just check if AnimateScroller != null, no need to have second variable'"
6001,326380872,b'nit: animateScroller'
6001,326381244,"b""don't you set this up above?"""
6001,326382027,b'why do we need this to be a field / property?'
6001,326382562,b'New way: `CoreServices.InputSystem.RegisterHandler<>()`'
6001,326383142,"b""I feel like youv'e done this twice already. Are we registering more than once? """
6001,326383332,"b'woah, again.'"
6001,326384493,"b""It's a little strange that you aren't using the touch input dispatch system (e.g. by adding NearInteractionTouchable and handing touch events). This code seems to be doing its own hit testing. Seems like it's okay for now since it's experimental. But I'm curious, what didn't work when you tried using NearInteractionTouchable?"""
6001,326384975,"b'Not sure this is necessary, unless you are forcing IsFocusLocked true on down'"
6001,326385127,"b""Also, this is only running if isTouched? So really doesn't seem necessary."""
6001,326385417,b'Why not just use currentPointer.Position?'
6001,326385851,"b""You don't need to do this -- mrtk handles this."""
6001,326386166,"b""Really don't recomment relying on the pointer visualization -- this could be arbitrary. Why not just use pointer.Position?"""
6001,326386617,"b""In fact, it seems this is just used to compute the projected point onto a plane -- I think you can find the poitner endpoint or project on a plan just by using the pointer's data and not bringing the visualizer into this code."""
6001,326386854,"b""There's no need to store this, since you are already storing currentPointer. Will help with readability of the code (there are a lot of fields...) to reduce unneeded fields."""
6001,326386970,b'focusedObject field also not needed -- you can get that just by storing currentPointer'
6001,326388647,"b'Hold up, I thought you were doing touch detection in your Update() loop. What is that code doing then?'"
6001,326389557,b'Um...hold up what is this doing? It looks like this is using the event if the object is NOT in the scrollable collection?'
6001,326389680,b'Is this basically preventing events from being forwarded to things like buttons?'
6001,326389966,b'No need to do isfocuslocked = false here.'
6001,326390086,"b'I see this repeated a few times. Might be able to factor out into a method ""releasepointer"" or ""resetstate""'"
6001,326393827,b'Please move to MixedRealityToolkit.SDK/Experimental/Inspectors/UX/Collections/ScrollingObjectCollectionInspector.cs'
6001,326393883,b'Put this in namespace  Microsoft.MixedReality.Toolkit.Experimental.Inspectors'
6001,326394336,b'You can use \r\nusing (new EditorGUILayout.HorizontalScope())\r\n{\r\n}\r\n\r\nEverywhere you do begin / end horizontal'
6001,326395857,"b""It's important to mention how the bounds are searched: first it tries to find collider on self. If it finds none, then it returns the bounds of the child mesh renderers.\r\n\r\nNote: this is not what I would expect. I would expect the behavior to try to find collider on self, and then look for children with collidres. In fact, have a look at BoundingBox.BoundsCalculationMethod and how that's used -- I think this utility method could just use that bounds calculation method to compute the bounds.\r\n\r\nNote: might be out of scope for this pr. In that case, I'd recomment just pulling this into ScrollingObjectCollection."""
6001,326396096,b'remember to normalize initialDirection.'
6001,326396228,b'you can just do return dot > 0'
6001,326397008,"b'the name is a bit confusing. I suggest:\r\n\r\nIsOtherSideOfPlane(this Vector3 vector, Vector3 normal, Vector3 planeOrigin)'"
6001,326398537,"b""This doesn't feel like a general utility to me. I actually don't understand what it's doing...perhaps move it back into scrollable collection for now? Or maybe you can help me understand what the code does."""
6001,326398647,b'This feels like it belongs in boundextensions'
5990,326658601,"b"">I suppose if they did that nothing would happen (which might not be desirable?).\r\n\r\nYes, can we make it work? Especially since this is not experimental, let's get it right."""
5990,326658699,b'>If they checked that option at runtime in the inspector and then called the settor that could cause a routine leak. Maybe we should add an OnValidate which calls the settor to support that case.\r\n\r\nGood idea'
6019,326723441,b'nit: \r\n```suggestion\r\n        /// the currently focus-locked (aka grabbed) object\r\n```'
6027,326814778,"b'careful, if you just set local forward here, localUp will be incorrect. Call SetLocalForward instead.'"
6027,326815435,b'you can just do nearIT = cube.AddComponent<....>()'
6027,326815643,"b'Instead of requiring dev to explicitly set the touchable collider, did you consider just calling SetTouchableCollider() on enable, if touchableCollider is null? '"
6027,326815921,b'Something like:\r\n\r\n```\r\nvoid OnEnable()\r\n{\r\n    if (touchableCollider == null)\r\n    {\r\n        SetTouchableCollider(GetComponent<BoxCollider>());\r\n    }\r\n}\r\n```\r\n```'
6027,326815956,"b'In NearIntearctionTouchable, not in this test file'"
6027,326816547,"b'Instead of testing ""does setting a value actually set a value"", I think the test will be more likely to catch bugs if you do something like:\r\n\r\n1. Create a cube.\r\n2. Add a touchable to it.\r\n3. Move the hand to touch the cube.\r\n4. Make sure that the cube was actually touched.\r\n\r\nThat will do a bit more testing of the end-to-end behavior (if I add a touchable to the cube, can I touch it), instead of the implementation (does calling SetTouchableCollider a value actually set a value).'"
6027,326818639,"b""And actually, what you could do is not add a new test method, but instead just remove the following two lines from  public IEnumerator NearInteractionTouchableVariant():\r\n\r\n``\r\n            touchable.SetLocalForward(touchNormal);\r\n            touchable.SetBounds(new Vector2(0.5f, 0.5f));\r\n``\r\n\r\nThat will actually test the bug fix (which is that adding touchable doesn't work out of the box)."""
6027,326818816,"b""There are actually several places that do this -- it's probably good to remove all those lines since they are no longer needed."""
5967,326826089,"b""Can you actually show how to load / instantiate a theme asset as well? Without that I'm having difficulty creating an interactable at runtime."""
6027,326848169,"b""I think this still needs to be converted to log warning or log error, don't forget to do that before checking in."""
6026,326849084,"b'Would rather keep the other tests the same, to not break them.'"
6026,326849089,"b'The other test is using 1, 1, 0.1'"
6031,326849191,"b""This seems much more like an example to me -- the scrip doesn't have tons of value beyond the example. Additionally, the ToggleFeaturesPanel prefab is used in HandInteractionExamples, isnt' it? In that case we don't want a home button. It feels like toggle features with a home button should be a separate prefab, that lives in the examples folder. Then you could move this script back to Examples folder, where I think it belongs."""
6001,326849338,"b""I think this needs to be removed, unless you're adding something in that folder"""
6001,326849358,"b'Instead of Experimental/Collections, I think Experimental/ScrollingObjectCollection will be much more discoverable for new folks. Even though technically you might want to eventually put stuff under Collections/ScrollingObjectCollection, I would optimize for discoverability with experimental features.'"
6001,326849372,"b'I think if all scripts could go under Examples/Experimental/ScrollingObjectCollection, and also SDK/...<the same>, that would be great'"
6001,326849449,"b""I think this should be in namespace Microsoft.MixedReality.Toolkit.Experimental.**UI** not Utilities, since it's a UI element"""
6043,327244190,"b'Did you forget to remove this commented out code, or comment it out on purpose?'"
6043,327245289,"b'Why do you need to use DestroyImmediate here instead of destroy? According to [this guidance](https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html?_ga=2.78406291.626937135.1569260631-1015154058.1557790993) ""This function should only be used when writing editor code since the delayed destruction will never be invoked in edit mode"". Can CleanUpUiRaycastCamera run at runtime, not edit time?'"
6043,327245626,"b""does this mean that some providers would be reset, but others wouldn't? What would be the consequence of that?\r\n\r\n"""
6043,327245706,b'I think this using is not needed'
6001,327283080,b'Please move this to Inspectors/Ux/ScrollingObjectCollection to be consistent with other file locations'
6001,327283620,"b'Could you use NodeList instead? This seems like a duplicate. In general, be wary of adding new public members, as it increases API surface we need to support.'"
6027,327340463,"b'>(please also add default behavior description to /// comment that will appear in docs\r\n\r\n@CDiaz-MS  please remember to do this as well, I saw you added the tooltip'"
6027,327340562,"b""I think it's out of scope for this PR, but would be good to probably make a custom inspector."""
6027,327340701,b'@CDiaz-MS  reminder to add doccomments to all public fields in this file.'
6027,327340850,b'The summary should be moved down to decorate `public Collider` not the private member'
6027,327342137,b'The new test looks good to me. '
6040,327344578,"b""I'd recommend something like this:\r\n\r\n1. Choose the MRTK core package:\r\n    - **Microsoft.MixedReality.Toolkit.Foundation** \r\n1. (Optional) Choose MRTK optional packages\r\n    - **Microsoft.MixedReality.Toolkit.Examples (recommended) ** \xe2\x80\x93 The package that contains all of our examples.\r\n    - **Microsoft.MixedReality.Toolkit.Extensions** \xe2\x80\x93 The package that contains extensions services and/or data providers.\r\n    - **Microsoft.MixedReality.Toolkit.Tools** \xe2\x80\x93 Contains some of the tooling that comes with MRTK (Build Window, etc).\r\n"""
6040,327345024,"b""Since it's not supported, should we just remove this until it is actually provided? """
6027,327381972,"b'```suggestion\r\n        [Tooltip(""BoxCollider used to calculate bounds and local center, if not set before runtime the gameObjects\'s BoxCollider will be used by default"")]\r\n```'"
6027,327381974,"b""```suggestion\r\n        /// BoxCollider used to calculate bounds and local center, if not set before runtime the gameObjects's BoxCollider will be used by default\r\n```"""
6043,327383145,"b""Can you comment that here, so people don't get surprised why you are using DestroyImmediate at runtime?"""
6043,327383784,"b""Why are we exiting early here? This seems like it's going to not execute services, potentiatlly randomly, if the services cound and MixedRealityServiceRegistry.GetAllServices().Count() do not match."""
6043,327385420,"b'It seems like your aim here is just to iteration through an IEnumerable<IMixedRealityService> while the collection might be getting modified (for example, if you changed profiles and now a service no longer exists.\r\n\r\nDid you consider something like this:\r\n```\r\nusing (IEnumerator<IMixedRealityService> enumerator = services.GetEnumerator())\r\n{\r\n    bool moveNext = enumerator.MoveNext();\r\n    while (moveNext)\r\n    {\r\n        execute(enumerator.Current);\r\n        moveNext = enumerator.MoveNext();\r\n    }\r\n}\r\n```\r\nFrom [this source](https://blog.magnusmontin.net/2015/02/28/enumerating-collections-that-change-in-csharp/). That has advantage of still enumerating over all services that exist, and also is a bit easier to understand (I had to think a bit about why you were doing this count comparison).'"
6043,327385678,"b'Curious, are these just fixing existing bugs, or is that needed specifically to get profile switching working?'"
5771,327829959,b'Ping @Railboy can you help answer here?'
6064,327858936,b'please comment public class'
6063,327860135,b'```suggestion\r\nThis tool is very useful when developing support for a new hardware controller. It can also help to confirm a suspected control mapping issue in the support class for an existing controller.\r\n```'
6067,327890489,"b""This made the test easier to see since i could see the hand animate. Note the test doesn't take much longer (~5 seconds instead of 1). I could move it back but I think many of our other tests animate hands and it makes it easier to see. Plus this emulated what real hands do better."""
6067,327890571,"b""This made the cube actually visible, previously you wouldn't be able to see the cube during 2nd part of test"""
6067,327935039,"b""I removed that, I think I can remove this as well though since i think these didn't do anything."""
6068,327938583,"b""Ah, so I think this means that if interactable's Enabled property is false, then when you enable the entire component, this will also set interactable's Enabled = true. Can you call this out in the comments for the Enabled property, so people know what behavior to expect?"""
6064,327941210,b'\xf0\x9f\x98\x8e'
6081,328361253,"b""Should we print an error if the directory doesn't exist, so it will be easier to diagnose in CI?"""
6084,328389494,b'good catch.'
6084,328389612,b'I just pushed it :-)'
6084,328396357,"b""I'l remove it/add explanation"""
6102,328864132,"b'```suggestion\r\n   // do not use AddComponent, as that will create a  duplicate handler that will not be used \r\n```'"
6104,328864999,"b""Isn't this a breaking change? People will need to adjust their code. Please mention in release notes https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5912"""
6104,328865185,b'could this be istoggled to make it more clear?'
6104,328865573,"b'Is it possible to provide suggestions / warnings if people use the old code, so it will be easy to know what code they should use instead? Something like ""SetFocus is deprecated, use HasFocus...""'"
6104,328866090,b'also add a test case for type == toggle instead of using dimensions?'
6104,328866536,b'Doing just a WaitForFixedUpdate caused unreliabletests. Please use WaitForInputSystemUpdate(). Sometimes the events take more than just a frame to propagate.'
6104,328866572,b'Same here.'
6115,328882181,"b'```suggestion\r\n    for i in range(1, repeat):\r\n```'"
6115,328882228,"b'```suggestion\r\n    parser = argparse.ArgumentParser(description=""Prints code that you can copy / paste into your test file to run tests repeatedly"")\r\n```'"
6125,329277698,b'please add summary comment as well. '
6125,329277998,"b'I would say something like ""Check if object rotation should be in local space instead of world space"". By the way, which local space is it in? The local space of the transform target, or the local space of object that this script is on?\r\n\r\nI wonder if we want to have an enum ""constraint transform space"" instead of a bool, something like:\r\n\r\nLocal\r\nWorld\r\nCustom / Specified by custom transform.\r\n\r\nThen we could use that enum both for rotation, and translation.'"
6125,329278101,"b'Oh this is a cool pattern, perhaps we should recommend it in  test docs. Out of curiosity, did you add this because otherwise it was hard to debug when tests were failing?'"
6125,329278389,"b'Would prefer to have two tests: one for local space constratint, one for world space constraint. Will make it much easier to understand test failures.'"
6104,329281086,"b'If you check in with WaitForFixedUpdate here, you will very likely add an intermittent test failure, as I just fixed that a few days ago. I think you copied the code before my fix. We can create a bug to track fixing everything, but for now I\'d say ""if it improves the code and doesn\'t regress stuff, and follows our principles, it\'s good"". \r\n\r\nBut please don\'t re-add this waitforfixedupdate, it took me a while to figure out and fix the bug. You can test this yourself by bulk running the tests in sequence.'"
6104,329284624,"b""I meant adding test case for setting ButtonMode but now I see there's no setter for that. Perhaps we should add one?"""
6104,329284734,"b""Reminder to properly handle destruction if the object jets disabled / destroyed. Not sure you are tracking enough state to enable that. Maybe you are and it's farther down in this PR :-)"""
6104,329284795,"b'I never really undrestood what ""RsetBaseStates"" meant. While you\'re here, maybe rename?'"
6129,329639118,"b'```suggestion\r\n            Assert.True(wasClicked, ""Interactable is enabled, and should receive click events"");\r\n```'"
6125,329641321,"b'Do you still need this, if you are doing the cleanup action above?'"
6075,329698178,"b""No, I wasn't sure how to debug that. Any ideas? """
6115,329815574,"b""Oh, I didn't know about that! I never actually tested that experience. I suppose you could just run that command line tests multiple times and parse output. I think the approach of modifying the code is still faster since every time you run a test from cmd unity does a bunch of extra work. I can mention the command line arguments though."""
6115,329876792,"b'Done, see run_repeat_tests.ps1'"
6140,329880799,"b'Instead of using playmodetestutilities, it would be nicer to just use TestHand class, it will make your code more concise, and TestHand hides things like waiting for frames.'"
6140,329880941,"b'Will this run instantly, or do you need to wait a few frames?'"
6158,330295317,"b""Should we just delete the file? What's the benefit of keeping it?"""
6158,330296067,b'Did you forget something? \xf0\x9f\x98\x8b'
6158,330297145,"b""Why is it called an _observer_? I don't really understand the naming. """
6158,330297459,"b""Random question: Why wouldn't I just add the obj I downloaded directly to my scene? What would be the disadvantage of that? Why would i want to use a spatial mesh observer?"""
6160,330302759,"b'Do you also need to check if there is a pressablebuttoneventrouter? Most pressable buttons use Interactable, which need a pressable button event router. Maybe check that case as well?'"
6157,330324601,"b'Resolved, I hope. Tried to add some examples.'"
6173,330684973,"b'```suggestion\r\n**Note:** Migration of existing projects to consume MRTK as a NuGet package is not yet supported, use MRTK via NuGet only for new projects.\r\n```'"
6165,330698526,b'Please add summary comment'
6165,330778025,b'I believe guidance is to avoid foreach loops in update() https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#use-for-instead-of-foreach-when-possible'
6165,330779231,"b'Since this deals with lifetime management, it would give more confidence if we stressed these tests a bit more, something like creating 100 objects, changing the materials every frame on each object, then destroying all 100 and ensuring nothing is leaked.'"
6186,330806210,"b""The hand interaction example change is out of place, I'll remove it."""
6186,330806461,b'I should see if I can avoid these changes by just modifying the toggle features panel prefab'
6193,331094625,"b'Please add comment explaining why we do this. Note that I believe real reason identified by @keveleigh is that the camera movement is mapped to AXIS_3, and AXIS_3 happens to be the select trigger on WMR controllers'"
6036,331165297,"b'This looks very interesting, following the guidance [""Documentation should be added in the same pull request as a fix / feature""](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/PullRequests.html#documentation-should-be-added-in-the-same-pull-request-as-a-fix--feature), it would be great to have documentation about how to invoke the system keyboard on input fields in `README_SystemKeyboard.md`'"
6036,331165827,"b'Do these need to be public? Any time you add public fields, it increases API surface. [Add public fields with care](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#add-new-public-fields-properties-methods-and-serialized-private-fields-with-care)'"
6036,331169571,"b'Ah shoot, just realized this and MixedRealityKeyboard.cs are not in the correct folder structure. Could you please place this and MixedRealityKeyboard under:\r\n\r\n`Assets/MixedRealityToolkit.SDK/Experimental/MixedRelityKeyboard/`?\r\n\r\n[Guidance here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/ExperimentalFeatures.html#experimental-code-should-live-in-a-separate-folder)'"
6001,331170427,b'This should go in the ScrollingObjectCollection folder'
6001,331170660,b'File should go under ScrollingObjectCollection folder'
6001,331170810,b'Figure out how to mark this as [Experimental] '
6036,331172584,b'Please also move to `Experimental/MixedRealityKeyboard` so all these files are in one location / easier to find.'
6036,331188755,"b'Since this is for an expermental feature, please place under `Assets/MixedRealityToolkit.Examples/Experimental/MixedRealityKeyboard`'"
6001,331238905,"b'Also, add to experimental guidelines: add [Experimental] attribute to experimental components.'"
6001,331240069,b'See if you can prevent this from being serielized'
6001,331304455,"b'Oh sorry, those were notes for myself. I already did this :-)'"
5988,340226410,"b'This is missing comments. One of our principles is ""comment all public methods"" so they show up in docfx.'"
5988,340226642,b'Is there a way to add lost tracking service via code? can you please add documentation?'
5988,340226832,b'Please comment public class'
6408,340348857,b'Does this mean we would have broken the .NET build if it was on?'
5830,340366162,"b""Even though it's technically not needed any more, for consistency please add a copyright block as described in [coding guidelines here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#script-license-information-headers)"""
5830,340366440,b'Please add to the appropriate namespace -- MRTK classes should be in a mrtk namespace. Please see [this guideline](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#mrtk-namespace-rules) for more.'
5830,340366925,"b'Please comment public methods, [refer to this guideline](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#property-method-event-summary-blocks)'"
5830,340368071,b'It would be good to mention that this actually modifies the input controllerHandedness as well.'
5830,340375710,"b'I stand corrected!\r\n\r\nhttps://docs.opensource.microsoft.com/content/releasing/copyright-headers.html#copyright-headers-in-microsoft-oss-project\r\n\r\n""Microsoft should not add a Microsoft copyright header to third party contributions to Microsoft OSS projects. We should never remove copyright notices from files.""\r\n\r\nNo need to add this.'"
6423,340707612,b'nit:extra line'
6280,341375235,"b""Will you be removing this asset, per Troy's comment?"""
6445,341396992,"b""It's not 100% consistent yet, but the current guidance for experimental features is to put everything in a top level folder, so a structure like `MRTK.SDK/Experimental/PinchSliderSpringBox/Scripts`, `MRTK.SDK/Experimental/PinchSliderSpringBox/Prefabs`. Otherwise, it is hard to find all the experimental features.  [Guidance here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/ExperimentalFeatures.html#experimental-code-should-live-in-a-separate-folder)"""
6445,341397066,"b""Cool I didn't know you could do that."""
6445,341399263,"b'I think this, along with the ScaleMaximum, need comments.'"
6445,341399316,b'Also needs comment for docfx.'
6445,341399735,"b""It looks like you don't use this anywhere, did you mean to add this file? Perhaps it was added by accident?"""
6445,341399894,"b""Oh, I see, it looks like you moved all of these into their own file. Any reason for this? Just to make this file shorter? I'm a bit wary to see a big change like this in an experimental feature, but if it's just moving code around I suppose it's okay."""
6445,341402588,"b'Instead of putting an experimental feature in an example, could you instead create a new scene under examples/experimental/pinchboxslider/Clippingbrain.unity, or something like this? Otherwise people may not realize that the pinch slider box is still experimental. '"
6445,341402653,b'I believe you used a similar pattern for the hand menu'
6315,341792229,"b'Technically this is public class, so it should have comment...though perhaps we should make exceptions for inspectors. I would prefer though to just always have principle ""if it is public class or method, it should have doc so docfx shows something, even a simple message""'"
6315,341792570,"b'Does this mean that now MRTK will have a file ""ProjectPreferences.asset"" under the MRTK.Generated folder when people use MRTK? Have we thought about what our guidance will be for upgrading between MRTK versions, if people have this asset? Will we ask people to delete the MRTK.Generated folder? '"
6315,341792655,"b""I wonder if we can test that project preferences will work. For example, a test that checks:\r\n\r\n1) If a preference does not exist, it gets added with default values.\r\n2) If we modify a preference, the preference after reload gets saves.\r\n\r\nIf we cannot do this as part of an automated test, how about adding this as a step in build call? I'm thinking about 2)"""
6460,342947253,b'minor style comment to keep code consistent: please indent so that all members have same indentation level'
6460,342947353,b'the indentation on this seems off as well. Please update so that spacing is consistent.'
6479,342952907,b'```suggestion\r\n            // Lerping an angular measurement from 0 degrees (default cursor position at tip of finger) to\r\n```'
6315,342954391,"b""> @julenka, possible alternative, assuming this works, make inspector classes internal? So it's not a public interface we have to cover/surface\r\n\r\nThat sounds good to me."""
6473,342956112,b'I like marking them as internal'
6473,342962287,"b""I think Catherine had a specific case she was fixing which required onclick to get called, I think otherwise the visuals didn't update? I don't fully remember..."""
6473,342962690,"b""super minor, but you don't need to pull this out into a separate variable lengths, since length is just used once. Just stylistically to be consistent with other code."""
6473,342963646,b'Why did you need to remove the isActiveAndEnabled check here?'
6493,343905003,b'I think IsNullOrEmpty covers that'
6493,343905421,"b'Great question. I think they just need to set up the profiles and events again, which is not great. I want to improve this message once we understand this bug better, but for now I think not throwing errors will be good '"
6503,344343009,"b'Hi, @wiwei this is a pretty tiny nit but I think the guidance was to do more like `Microsoft.MixedReality.Toolkit.Experimental.Examples.HandMenu`. See [this page](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/ExperimentalFeatures.html#experimental-code-should-be-in-a-special-namespace) for guidance on namespaces for experimental features.'"
6550,344950182,"b'Oh great point, thanks! I forgot to remove that'"
6543,344953445,"b'Should this go into experimental, since pulse is experimental feature?'"
6550,344972232,"b""I love the references to links! I'm bookmarking all of these"""
6550,344980445,"b""Thought about why the other fields don't call UpdateCollection() after and realized this is because you may want to change multiple properties in a frame, and only need to recompute once. Decided to follow that existing pattern to save on layout compute."""
6550,344981016,"b""lol. my vs code auto complete adds a '.false' every time I add a period..."""
6550,344981097,b'Thank you!\r\n'
6550,344983716,"b""No, it was so I could see the results :-) I'll make a comment."""
6550,344984732,"b'Fixed, great suggestion'"
6550,344985595,b'Let me know what you think of the  new error messages.'
6528,345366666,"b'> it feels like maybe we could have some unit test/check that the collider\'s bounds contains the actual object bounds themselves.\r\n\r\nI agree that it may seem low value, but it should also be a fairly easy test to add. And this would have the benefit of once the test is added we can be fairly sure that the behavior will not regress in the future. So I would vote for adding a test. It also follows our principle ""add a test for every bugfix"".\r\n\r\nIf we cannot get a test in, then I\'d recommend at least filing a bug, referencing this PR, and then describing what the test should do'"
6492,345495629,"b'Did you mean to put this in the folder ""NonNativeKeyboard"" instead of ""Non**e**NativeKeyboard""?'"
6492,345496589,b'Please comment all public classes so they show up in docfx'
6492,345496873,"b'Interesting, curious what features of TileGridCollection or GridObjectCollection were missing that required you to use this?\r\n\r\n'"
6492,345496967,b'Suggest moving this into the and MRTK/Experimental menu'
6492,345497378,b'Consider making these private and adding getters / setters. Not required for experimental code but would be for non-experimental code. Also perhaps consider using the existing GridObjectCollection (and perhaps adding missing functionality) over adding a new component for layout.'
6492,345497512,b'```suggestion\r\n        /// Walk hierarchy looking for named transform\r\n```'
6533,345509527,"b'For my own education, why did you need the .GetComponent<Camera>() at the end there?'"
6460,345576276,"b'The relative scale is a nice way to add backward compatibility, thank you for this. It would be good to document the meaning of ""relative rotation"" either in the interactable docs or if possible in a tooltip.'"
6460,345576560,"b'ScaleOffsetColor theme is used quite a often in MRTK, it would be nice to add the ""relative"" property here as well.'"
6460,346405183,b'Ah okay got it. Thanks for the clarification.'
6460,346894192,b'Thank you!\r\n'
6492,347031053,"b'Ah, good point regarding the width of tiles! By the way, fixed ""no matter the choice of column or row first, the gameobjects get sorted column first"" in #6550 so the grid object collection layout should work better in 2.2 \r\n'"
6599,347613920,b'the touchable needs to be configured to receive touch events'
6460,347620208,"b'```suggestion\r\n        /// Tests that the rotation theme with ""Relative Rotation"" custom property keeps the initial rotation of target GameObject.\r\n```'"
6460,347620933,"b'```suggestion\r\n        /// Tests that the scale theme with ""Relative Scale"" custom property also takes into account the initial scale of target GameObject.\r\n```'"
6460,347629696,b'```suggestion\r\n            // Transform asset object to asset paths.\r\n```'
6460,347688977,b'@gilbdev could you please add comments for this public method?'
6460,348191888,"b'Ha, just noticed I merged before comments were added. If you have time and could please add these in another PR (you can reference the same issue) that would be great! Thank you again for your contributions.'"
6650,348740536,b'I waffled on it myself. Removed.'
6650,348741299,"b""I was also surprised OnValidate did not work. The asset did not get marked as dirty / to save when I used OnValidate.\r\n\r\nI didn't notice any slowdown when checking on every asset save but can see that having such a precedent for all assets could cause a slowdown.\r\n\r\nExecuteAlways + Awake is working, so going with that approach"""
6650,348741342,b'Good catch!'
6650,348741441,b'Added asset versions'
6673,348799012,"b""hm i have a custom profile but my files don't show as changed."""
6673,348819094,b'It seems like Assembly-CSharp is not something that should exist in an MRTK asset. Will add code validation to check against that. '
6673,348847717,b'Ah! I was wrong. Fixing'
6321,349245587,b'How is this different from a solver?'
6738,350819989,b'Was this change intentional?'
6738,350822506,b'Hard to tell from the delta but I think the indentation might be off here.'
6738,350823022,"b'Interesting, could you provide a little context around why you need this Try/Catch here? Perhaps it was unintentionally added?'"
6738,350823222,b'Accidentally commented out code?'
6738,350823650,b'This looks like  a new file that might not need to be added'
6738,350823809,b'Accidental comment'
6743,351028500,b'This table formatted incorrectly for me in the preview'
6743,351028574,b'This table also formatted incorrectly in preview'
6743,351340120,"b""This is what I see, \r\n\r\n![image](https://user-images.githubusercontent.com/168492/69734677-683fbf80-10fd-11ea-89c8-1bc70200bff2.png)\r\n\r\nAh, after staring at it for about 30 seconds more, I'm still not sure what the table is telling me :-) Would recommend maybe changing the visualization. Maybe just a bulletted list, one for android, one for iOS?"""
6410,355546512,"b""Per gilbdev's comment, it would be nice to add a test to verify that changing the text of a button at runtime changes the button's text."""
6410,355547282,"b'Per [documentation guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#property-method-event-summary-blocks), please make sure all public PMEs (properties, methods events) have comments.'"
6410,355548426,"b'Per [pull request guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/PullRequests.html#creating-a-pull-request), please update documentation to describe how to use the button configurator. I think updating the Button documentation page would work (it would be good to work with @cre8ivepark on this). '"
6492,355621515,"b""@thalbern  Let's move this into mrtk experimental menu"""
6492,355696976,"b""Any reason we cannot address it in this PR? Is it because you're not able to modify the branch since Alexees owns it and would need to give you write permissions?"""
6824,355700696,"b'Do we need to instead say ""ensure version 2.10 of holographic remoting is installed, per #6811 ?'"
6820,355702064,"b""Following up on keveleigh's suggestion, here's an example of how you would convert the field to be exposed via code but also using a private serialized field:\r\n\r\n```\r\n[SerializeField]\r\nprivate int minValue = 0;\r\n\r\n/// <summary>\r\n/// Describe the field here\r\n/// </summary>\r\npublic int MinValue {\r\n    get => minValue;\r\n    set => minValue = value;\r\n}\r\n\r\n```"""
6820,355702341,"b'This would apply to all the fields in this component. Try making them private but serialized, and expose the values as public fields.'"
6820,355704303,"b""Following our [documentation guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#property-method-event-summary-blocks), please add comments for all public fields and methods. These will then show up in the [slider documentation](https://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.UI.PinchSlider.html). Note: some of the existing methods / fields don't have comments, which we should fix."""
6820,355704613,b'How is this different from `value`? Do we need the field? Is there a reason for it to be public?'
6820,355736058,b'```suggestion\r\n                // Round value \r\n```'
6820,355736193,b'```suggestion\r\n                    if (wholeNumbers)\r\n```'
6820,355736869,"b'Reading the code it looks like `MyValue` is the value of the slider clamped to minvalue and maxvalue, while value is just the normalized distance of the tick along the slider. It would be good to comment regarding this distinction, and to mention this in the documentation.'"
6820,355737133,b'Should OnValueUpdated only invoke when the value is actually different (myValue != value)?'
6820,355750510,b'Does setting Range on a private field do anything?'
6820,355751317,b'```suggestion\r\n                // Change of the position\r\n```'
6820,355751549,b'maybe \r\n```suggestion\r\n                startValue = 0.5f * (maxValue - minValue)  + minValue;\r\n```'
6820,355751652,b'```suggestion\r\n            SliderValue = (float) (startValue - minValue) / (maxValue - minValue);\r\n```'
6820,355753811,"b""What if somebody changes MyValue, but not SliderValue? Do you need to update SliderValue when MyValue changes?\r\n\r\nI'm thinking a case like this:\r\n\r\n```\r\nslider.MinValue = 2;\r\nslider.MaxValue = 4\r\nslider.MyValue = 3;\r\n```\r\n\r\nIn this case I would expect slidervalue to be 0.5f at the end of this.\r\n\r\nIt would be great to add a test to verify this works, as well as other new behaviors you've added. You can just modify [PinchSliderTests.cs](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Tests/PlayModeTests/PinchSliderTests.cs)\r\n"""
6820,355754247,b'It would be good to make this set-table from code.'
6820,355755076,b'```suggestion\r\n\r\n        IEnumerator LaunchUpdateTickMarks()\r\n```'
6820,355755382,b'Could you please explain why you need to wait here?'
6820,355755559,"b'What happens if no tick marks are present? People have actually used the pinch slider without any visuals at all, for example see this usage of pinch slider: #6445\r\n\r\nIt will be important to make sure that the pinch slider still works for people who do not specify any tick mark visuals, or any slider.\r\n\r\nIf you\'d like to make these required, then it might make sense to have a new class ""PinchSliderWithTickMarks"" that explicitly require track visuals, sounds, tick marks. Or you could make all of these optional -- if the visuals, tick marks, sounds are provided, they will be played. If these are not provided, they will not be used.'"
6820,355756436,b'It would be great to move these up to where the other fields are.'
6820,355757726,b'```suggestion\r\n            // Copy of the first point\r\n```'
6820,355761512,b'What if not SliderSounds are present?'
6820,355844232,"b'What if there is no grid object collection in the children here? It would be good to think about this case, since this component is actually used by a variety of people who may or may not want tick marks or a slider visual. There are a few options:\r\n'"
6820,355844303,b'```suggestion\r\n            // Delete old ones\r\n```'
6820,355844514,"b'What if max = 0.5 and min is 0.1, but I want 5 tick marks?'"
6822,356307323,"b'Pointers may also want to reset visual state, is pressed state. Perhaps a reset() method on the IMRPointer interface which would reset to default state in case pointer gets lost, etc.'"
6870,356911788,b'Revert this Julia :-)'
6870,356942589,b'Add comment'
6870,356942649,b'indent'
6870,357484781,"b""Oh whoops I forgot about this -- I was testing out the idea and forgot about this magic number. It worked sooner than I expected and I didn't clean up this code. I'll comment it and fix. Thanks for the careful review!"""
6870,357484912,"b""Yes you're correct -- I just forgot to clean this up."""
6870,357486000,b'Whoops. I made this PR too quickly. Nice catch.'
6870,357486054,b'```suggestion\r\n```'
6870,357486150,"b'Good catch, I need to fix that.'"
6870,357486220,"b""todo: Committed too quickly -- fix compile error's after applying Will's change."""
6870,357486711,"b""Oh cool, I didn't know about that. However, that function won't allow me to slightly increase the camera's FOV to have a slight buffer, or to use a distance from camera slightly larger or smaller. I could add a utility function that is a bit more flexible. I can explain in comments why I didn't use camera.IsInFov"""
6870,357487229,"b"">though now thinking about this - if we have that scenario, do we really want to leave that pointer enabled? like if there is a gigantic cube surrounding us like a room and we're close to the back wall of that room and there's objects to manipulate inside of that cube that might be able to trigger far interaction?\r\n\r\nActually line 56 tests exactly this case -- you are inside of a giant grabbable. I considered not supporting this edge case but then remembered a customer that mentione he was pleasantly surprised that he could move objects when he was inside of them. So if he accidentally was inside a huge object he could still move it. So I decided to support that edge case explicitly."""
6870,357487262,"b"">Looking at the test case - is there one also for this edge case?\r\n\r\nYes, see SpherePointerTests line 56. The very first test spawns a cube that's 1 x 1 x 1 m at the origin -- the camera is inside the cube."""
6870,357487350,"b""argh you're right."""
6870,357487414,"b""Oh cool, I didn't know about that. However, that function won't allow me to slightly increase the camera's FOV to have a slight buffer, or to use a distance from camera slightly larger or smaller. I could add a utility function that is a bit more flexible. I can explain in comments why I didn't use camera.IsInFov\r\n\r\n"""
6870,357487472,b'Whoops! Nice catch.'
6875,357493009,b'Agree with will -- reading the code it seems this shoudl be flipped but probably good to just verify the behavior because I could be wrong:\r\n\r\n```suggestion\r\n            transform.Rotation = Quaternion.LookRotation(faceAway ? directionToTarget : -directionToTarget);\r\n```'
6875,357493313,b'> I should probably write some sort of script that checks for usage of this going forward.\r\nThese have been very useful in the past :-)\r\n'
6863,357494599,"b'I\'m starting to notice these ""AddComponentMenu"" lines pop up -- do we have coding guidelines / guidance for when to add this? Should this be for every UX control? @thalbern  curious to hear your thoughts.'"
6863,357494814,b'Any reason for this change?'
6863,357494965,"b'Do we need any new tests for the curve pointer and line pointer? Perhaps things that test that a curve pointer actually collides against colliders along the curve, and line pointers collider along colliders that are straight. Just realized we may not have tests for this.'"
6822,357498667,"b'Thanks for adding these doc -- ""leave the code cleaner than when you arrived""'"
6822,357498902,"b'It would be good to add a ""why"" behind this so people understand the context -- we recycle pointers, not destroy them so when a hand is lost this should really reset the state completely.'"
6822,357498987,"b'Temporary? Do you mean to remove this during this PR, or after this PR?'"
6870,357801020,b'@thalbern  could you let me know if my comments resolve your concerns here?'
6870,357803037,b'Added comments explaining this.'
6870,357886899,b'Done'
6919,358617008,b'Reminder to add summary here'
6919,358618008,b'Any ideas for how to test that the visual of the spatial awareness system is not showing up? To test that turning off the spatial awareness actually hides the mesh. Perhaps you could search for a game object in the scene and test it is disabled.'
6822,359058279,b'Are these expected?'
6822,359060149,b'Interesting. I wonder if this can break input simulation? Would be good to check that input simulation is still working after adding the base calls.'
6822,359061998,"b'What is the behavior if `pointer.DestroyOnSourceLost` is true but `PlayModeTestUtilities.GetInputSimulationService().EnablePointerCache` is false? Would a pointer be disabled, but in a cached object list? I would expect the following\r\n\r\nWhen input source is lost....\r\nEnablePointerCache true, DestroySourceLost true => not sure the behavior\r\nEnablePointerCache true, DestroySourceLost false => Pointer gets disabled but moved into the cache\r\nEnablePointerCache false, DestroySourceLost false => Pointer gets disabled\r\nEnablePointerCache false, DestroySourceLost true=> Pointer gets destroyed'"
6822,359062412,b'```suggestion\r\n        /// Resets pointer to initial state. After invoked pointer should be functional and ready for re-use.\r\n```'
6822,359062605,b'Remove?'
6822,359063112,b'Do you want to ignore the change if enablePointerCache is already false? '
6822,359063845,b'why is it a stack?'
6822,359064200,"b""Is this because you're thinking 'access the most recently lost item first' since hands tend to disappear and re-appear?"""
6822,359064674,"b'Why would we ever have more than one pointer of a given controller, handedness in the stack here?'"
6822,359064945,b'Do you want to leave this in?'
6822,359066420,"b'should you only create this pointer if the hand and controller type match the current option? It seems like with this code, even if i have an articulated hand up, you will create all poitners for vr controllers and mouse controllers as well.'"
6822,359067228,b'Why did you remove this? Will Cursor and wheel speed still be initialized?'
6870,360173066,b'```suggestion\r\n```'
6870,360548408,"b""Yeah I know we used to have that, but actually I like keeping in separate since it makes it easier to read for me, even though it's a little more lines."""
6870,360585671,"b'I plan to do this in a follow up PR. To make it shared I want to add some unit tests, so I was waiting to do that in follow up PR to keep this from getting too complex.'"
6870,360587137,"b'Yes! I was planning to do that in a follow up PR. If I make it a public utility, I would need to add unit tests. Wanted to keep this PR scoped, and then in follow up PR add unit tests. Created #6950 to track the work.'"
6870,360587628,"b""Maybe, however given that the current approach is tested and known to meet performance requirements, I'd prefer to wait for a follow up PR. I would need to re-test the change, and am not sure there would be a huge benefit (the code is not too complex). I made a comment to consider that approach in the future."""
6870,360588664,b'whoops good catch.'
6870,360589638,"b""I'm not sure. Was just trying to be consistent."""
6963,362583373,"b'This is a frequently used scene, it would be good to make sure @cre8ivepark  is aware of changes here. Could you please describe the changes you made in this scene?'"
6960,362644766,"b'```suggestion\r\n        [Tooltip(""Angle (in degrees) between hand up and camera forward, below which the hand menu follows the gaze, if useHybridHandRotation is active."")]\r\n```'"
6960,362646016,"b'I see how this technique is a hybrid between the hand\'s rotation and the camera\'s rotation, which is nice. However, thinking about possible future rotation options, I wonder if we can use a name that describes the behavior a bit more explicitly. I could for example think of another rotation algorithm that would also be considered ""hybrid"" like ""make the menus rotation a combination of both hand rotations"", or ""make the rotation of the menu a combination of the palm and finger tip rotations"".\r\n\r\nPerhaps a name like `FollowHandUntilFacingCamera` or `FollowHandThenFaceCamera` would help describe the behavior better for people that are new to the framework?\r\n\r\n'"
6960,362647062,"b'Thanks for these new behaviors! Please also [update the documentation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/PullRequests.html#documentation-should-be-added-in-the-same-pull-request-as-a-fix--feature) to describe the new fields. The Solvers page, section [Hand Menu with HandConstraint PalmUp](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_Solver.html#hand-menu-with-handconstraint-and-handconstraintpalmup) would be a great place to describe the new behavior. \r\n\r\nUpdating documentation along with the new behaviors helps ensure that the documentation for MRTK stays up to date.'"
6960,362647803,"b'Interesting, I just had the thought that this could be made more general since currently the logic is ""if the palm faces the camera, follow the camera, otherwise follow the tracked object"". I think it could be more general by saying ""if the tracked object faces the camera, follow the camera, otherwise follow the tracked object"". Then it could work for things like motion controllers, other joints, or even following other game objects.\r\n\r\nNot required for this PR, but was just interesting.'"
6963,362650701,"b'```suggestion\r\n        [Tooltip(""The gameObject that contains the thumb visuals.  This will get rotated to match the slider axis."")]\r\n```'"
6960,363395137,b'Could you explain why we are setting direction to transform.right if the behavior is LookAtTrackedObject? Is it a fix for another issue you found? '
6960,363397590,"b""I believe this is actually a [breaking change](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html) since it is a change to a public property in a sdk asset. The new naming does seem more descriptive which is a positive. A drawback is that people may get compile errors if they update. This might be a case [where the breaking change adds value but can be written in a way that isn't breaking](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html#the-breaking-change-adds-value-but-could-be-written-in-a-way-that-isnt-breaking).\r\n\r\nWhat are your thoughts on the value vs drawbacks of this rename?"""
6960,363398250,"b'It would be good to make these two fields configurable at runtime, [following the principle ""support configuring in editor and at runtime""](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#support-configuring-components-both-in-editor-and-at-run-time)'"
6960,363398635,"b""It would be [good to write a test](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#prioritize-writing-tests) to ensure this behavior doesn't regress from somebody else's future changes. [Here is some information for how to write an run tests](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/UnitTests.html)."""
6977,363441417,"b""Is there any benefit to use continuing to provide the `MathUtilities.IsInFOV` method, if it is slower than usingWorldToViewportPoint? Perhaps we should mention in a comment in that it's more performance to use `WorldToViewportPoint` when possible"""
6977,363442216,"b""```suggestion\r\n```\r\n\r\nSuggest deleting this line -- I don't understand what it says in this context (think it made more sense when the comment described a camera method)."""
6981,363457680,"b'To make the feature more discoverable and avoid confusion like in #5953 I wonder if it would be better to put the follow solver under `SDK/Experimental/FollowSolver/Follow.cs`. What do you think? A disadvantage is we have other files already under `SDK/Experimental/Features/Utilities` such as Dwell and DirectionalIndicator. However, I think it would actually be good to move those eventually int folders like `SDK/Experimental/Dwell` and `SDK/Experimental/DirectionalIndicator`. When they graduate they could go under SDK/Features/Utilities '"
6981,363458289,"b'Did you mean ""snapping"" here?'"
6981,363508543,b'make sure to specify private. See [Access Modifiers](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers)'
6981,363508773,b'It is unclear to me from a quick read what this does. Could you please comment the method?'
6981,363510095,b'you can use `TestUtilities.PlayspaceToOriginLookingForward`'
6943,364358622,b'Was this intentional?'
6943,364369234,"b'Please make these private, serialized with property accessors to be consistent with the rest of mrtk. See guideline [Access Modifiers](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers\r\n)'"
6943,364369761,b'The class is named InteractionHint but the field descriptions are all specific to hand interactions. Should we rename this to HandInteractionHint?'
6943,364371274,b'Use `HandJointUtils.FindHand` instead of this method'
6943,364371548,"b'This is not used anywhere and is actually not the recommended way to access hand joints (use `HandJointUtils` instead), please delete.'"
6943,364372043,"b""For consistency, please don't use hungarian notation, as the rest of the mrtk code does not use it. Additionally, many of your other private fields don't use hungariant notation."""
6943,364372505,"b'MRTK also tends to expose & assign properties, would be good to follow the MRTK convention for consistency. Please also ensure that the visuals can be assigned via code, following [this guideline](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#support-configuring-components-both-in-editor-and-at-run-time)'"
6943,364372629,"b'Please comment public methods, or make private. Here and below.'"
6943,364373244,"b""Please don't use hungarian notation to be consistent with the rest of MRTK."""
6943,364373685,b'I believe currently IsHandTracked returns false always.'
6943,364374193,"b""As in previous file (and everywhere else), please don't use hungarian notation, to ensure consistentcy with rest of MRTK code."""
6943,364374445,b'There is some commented code at the end of this line -- did you intent to remove it?'
6943,364374502,b'Please use /// comments'
7016,364498261,"b""I'm curious to hear opinions on naming for these static variables, as well as whether people have ideas for how to implement this in a better way."""
7016,364886958,"b""Maybe? I'm hesitant to modify interfaces since it's hard to undo or change interfaces. """
6943,364888949,"b'This class sounds very similar to a solver...it would be nice if it could somehow use the solver so that we do not have duplicated classes if we put this into non-experimental. Imagine you\'re a new developer and you see this class, and also solver. You might wonder ""which one should I use?"". I imagine this might be very specific to the needs of Hand Coach. In that case, could you perhaps put the class in its own namespace (`Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach`)? '"
6943,364889081,"b""any reason this is protected? If it's protected, other classes will not be able to access this."""
6943,364889653,"b'Same, any reason this is protected?'"
6943,364890131,"b""I don't fully understand what this field is for...is the structure of the hand coach that you need an object to move to, and also the parent of that object? If so, why not just use targetObject.parent?"""
6943,364890589,"b'Could you describe what the animation controls? Lerp curve to me is similar to ""animation curve"" in that you\'re describing what this variable is, but not how it is used, or how somebody else might use it.'"
6943,364890863,b'@thalbern for consistency should we also use /// comments on private methods?'
6943,364891388,"b'Similar to my comment above, it might be good to put this helper into its own namespace so people understand that this is related to hand coach. Something like `Microsoft.MixedReality.Toolkit.Experimental.UI.HandCoach`'"
6943,364891790,"b'```suggestion\r\n        [Tooltip(""Duration of rotation around the CenteredParent, in seconds."")]\r\n```'"
6943,364895715,"b""Would be good to mention that this is experimental so people are aware the component is subject to change.\r\n\r\nAlso, I noticed we have some inconsistency in how we document experimental features. For example, in [scrolling object collection](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6001/files) we have a readme.md file under MRTK.SDK/Experimental/ScrollingObjectCollection/README.md. But for this feature we are putting it directlyunder `Documentation`. For consistency, how about we agree on either adding documentation under `Documentation/` folder or directly in a README under the experimental folder.\r\n\r\nAside: to increase discoverability and clarity, let's also add an **Experimental** section under **Guides/Feature Overviews**"""
6943,364901022,b'Fair enough.'
7012,365003271,"b'I believe this is removing a field in an asset, could this break people that depend on that somehow, or is it unused?'"
7012,365003516,b'This is removed but seems important. Can you explain why you removed it?'
7012,365004340,"b""Will this work if a developer has removed line pointers from their pointer profile but still wants to use solvers? I actually do this sometimes when I don't want far interaction. """
7012,365004913,"b'Ah, answered my own question -- I suppose if you are using the controller ray, then you likely are using Line Pointers or something that extends linePointer'"
7016,365006522,"b""I would prefer not to add more levels of inheritance until there's lots of signal (3 repeated classes) that a field could be re-used. Motivation is I find it really hard to navigate the code in MRTK because many fields are in many levels of base classes. Maybe I just need a better tool for navigating base classes (currently use class diagrams). I am thinking of making a third kind of near pointer, a Cone Pointer, as part of fixing #6634 (which I will probalby break up into multiple bugs). Then it woudl be appropriate to have a base class, I think. """
7016,365006732,"b'Good point! I still would prefer to wait until we have more need, specifically when creating a ConePointer. I can create a bug for this and mention that following up from #7016 we should make a base class.'"
7012,365027743,"b""b) seems riskier, so it's okay to go with a) for now. @thalbern or @wiwei , regarding deprecating fields, do you have suggestions? Another suggestion is we could mark the property as obsolete for a release, and not use it internally anywhere. We could remove it in 2.4."""
6943,365426484,"b'I think you can make these private, otherwise add /// comments'"
471,97614452,b'It looks like taking this branch prevents the cursor from going to `CursorStateEnum.Release` from `CursorStateEnum.Select`.  How about instead if we just reset IsInputSourceDown as part of `OnSourceLost` and left `CheckCursorState` the same?\r\n```cs\r\n        public virtual void OnSourceLost(SourceStateEventData eventData)\r\n        {\r\n            visibleHandsCount--;\r\n            if (visibleHandsCount == 0)\r\n            {\r\n                IsHandVisible = false;\r\n                IsInputSourceDown = false;\r\n            }\r\n        }\r\n```'
471,97617310,b'Great idea @thebanjomatic.'
471,97617831,"b""@thebanjomatic thanks for the catch, I've updated the PR"""
471,97620073,b'Is this check still needed now?'
471,97621422,"b""Don't think so."""
604,109931349,b'Would we just want to change to context to None here as well?\r\nWhat purpose does contextual have?'
604,109942654,b'I just keep consist with what OnInputDisabled does'
604,109943917,"b'I was just curious is all, thanks.'"
604,109944211,b'fine:)'
708,119958057,"b'Rather than disabling the warning, we made the field ""protected"" which has an added benefit that if a child class introduces a new SerializedField with the same name, the compiler will help us catch it, rather than leaving Unity to silently ignore the issue and leave us developers confused.'"
708,119959032,b'Is this check not needed anymore?'
708,119959136,b'Lines 281 to 290 were added during Build to fix/workaround some bugs. @NeerajW should have more insight.'
708,119971368,"b'Correct.  FocusManager is a required component just as much as InputManager is, so if we somehow end up with a scene without a FocusManager in it, we want a big loud error just like we get when InputManager is missing so we can fix it.'"
708,119971687,"b""Let me know what the verdict is on this, @NeerajW.  Ideally all our prefabs and test scenes have FocusManager setup correctly in them already (I know a couple months back, I made sure they all did in our project, but perhaps those changes didn't get propagated back into all tests scenes in this repo.  Let me know if you want me to check and fix them all."""
708,120185159,"b'Yes please double check here. I know without this check, we could not use the updates correctly with prefabs like BasicCursor or Cursor.'"
708,120227673,"b""Will do.  It looks like the InputManager prefab wasn't updated to use SimpleSinglePointerSelector, so I figure that could be one of the causes, but I'll dig in."""
708,120773450,"b""Yeah, by adding SimpleSinglePointerSelector to InputManager, that fixed the issues.  There were a few scenes that didn't have a cursor, but still used InputManager, so for those scenes, I disabled SimpleSinglePointerSelector accordingly."""
1332,150332715,b'Because this field was moved a few lines below the comment got left behind.  Should we also update this with a `<summary>` tag?'
1332,150335545,"b""Doesn't strike me as necessary but I'll follow your lead."""
2497,205793224,"b""Shouldn't this now be calling the new method with the interface parameter?"""
2497,206020402,"b'Following is the OnPointerSpecificFocusChanged method:\r\n![onpointerspecificfocuschanged](https://user-images.githubusercontent.com/14876006/43379037-039d5814-93e8-11e8-8661-d262a0f3b997.PNG)\r\n\r\nHere, if I call the old OnActiveModifier(CursorModifier modifier) method instead of the new one with interface parameter, I need to cast the ICursorModifier object to CursorModifer which will return null in all the cases when newFocusedObject has an implementation of ICursorModifier which is not CursorModifier.\r\nHence, the old OnActiveModifier(CursorModifier modifier) method will receive null as a parameter and pass null to the new implementation of the method.\r\n\r\nIn order to avoid this issue, I am calling the new OnActiveModifier with the interface parameter from OnPointerSpecificFocusChanged since ICursorModifier is the parent here and from inside of this method, I am checking if this implementation of ICursorModifier is CursorModifier, only then I call the old OnActiveModifier.\r\n![new_onactivemodifier](https://user-images.githubusercontent.com/14876006/43379311-61dc2594-93e9-11e8-9b4c-e19ef031c6b1.PNG)\r\n\r\n\r\nThis keeps the old functionality intact and will not give any errors or produce any unexpected behavior for those users who have custom classes inherited from these.'"
2518,206188354,b'should be protected virtual.'
2497,206389135,b'@StephenHodgson Are we good with this?'
319,86917220,b'Goal is that component can be added to any GameObject that wants to affect the cursor state?\n'
319,86917275,b'Please move Awake() down after the variables have been declared.\n'
319,86923847,"b""Yes, that's what the comment says. More specifically, it needs to be added to a game object with a collider\n"""
319,86980380,"b""We used the object's layer to do this as well. Not sure how straight forward that is though.\n"""
319,87079650,b'I modified the comment a little to clarify it\n'
319,87079686,"b'Agreed, done\n'"
839,131744410,"b""I'm finding this a little harder to follow because some state is implemented in this function related to Light, some is updated in OnCursorStateChange, and some is in ElementVisibility. Which one is used depends on whether we're becoming visible or invisible. If I were modifying this code, I think I'd have a hard time convincing myself that I'm doing it correctly for all the possible cases. Would it be possible to simplify this so that all state updates flow through a single path?"""
839,131755566,"b""Good points. I was over thinking it because it feels counter productive to set the visibility one way if I know for sure the visibility will be set back again in the same frame. I removed all the extra checks so the sequence now works like this.\r\n1. SetVisibility true/false\r\n2. The elements' visibility is set\r\n3. If visibility is true, then set the state change which will set the visibility of the ring or dot depending on state."""
2518,206188495,b'also protected.'
319,86917405,b'Sorry this class is a little unclear. What are these objects?\n'
319,86925314,"b'I\'ll clarify the comment.\n\nThis is a cursor that simply switches between activating different game obejcts based on its state. This allows someone to do exactly what HoloToolkit had before with the ""CursorWithFeedback"" test scene.\n'"
426,93769540,b'Nit: please use explicit variable declaration.'
426,93770474,"b'Oh. I almost never do that. Thank ReSharper for learning me that. Do you want me to change it, or are you just going to merge?'"
426,93771575,"b""It'd be easier if you did."""
426,93772106,"b""It also looks like you're missing a brace to close the outer if statement."""
426,93773078,"b'https://developer.microsoft.com/en-us/windows/holographic/performance_recommendations_for_unity\r\n> Do not use LINQ, as it causes heavy allocations.\r\n> Do not use lambdas, as they cause allocations.'"
426,93812237,b'Nit: please use a variable name longer than one character.'
426,93812248,"b""If we're removing comments, should we put new ones explaining the new behavior?"""
301,84475655,"b""While we're editing this file, could we make the Awake and LateUpdate methods private as well please?\n"""
301,84510273,"b""a consideration when we find these invalid configurations would be to Destroy(this) so the script doesn't run. This would remove the need to do null checks everywhere else.\n"""
301,84510314,b'Why FindObjectOfType instead of GazeManager.Instance?\n'
301,84510426,b'yay! :) \xf0\x9f\x91\x8d \n'
301,84511299,b'Where does `CursorOnHolograms` get set?\n'
301,84539858,"b""Typically, they are set in Unity's designer.\n"""
301,84539884,b'Good point.\n'
301,84540014,"b""I opted to go with enabled = false. That way, the object stays in Unity's preview mode so it can be inspected in the designer.\n"""
319,86917487,"b""I still don't understand why you would remove some simple classes that work for people.\nThis is like forcing people to use one prefab and I am not a fan on that.\n"""
319,86924253,"b""Because the HoloToolkit should be encouraging good coding practices and good patterns, as opposed to providing classes that can't be properly extended and are essentially forcing you to eventually to create your own copy of existing classes when you want to make app-specific changes.\n\nThis change provides good prefabs that people can use for a variety of purposes. It also provides a way for users that want to build scalable apps to build on top of the building blocks we are providing, without having to copy/paste code or greatly modify it.\n"""
319,87244514,"b""I want us to be careful with these statements. Let's have an inclusive mindset where we respect some people find value for these type of classes. I agree with the sentiment however that is a blanket argument. I will add it back if I see a need for it.\n"""
319,87260350,b'I want us to be honest.  Keeping deprecated classes can cause confusion and creates a fragmented code base.  We have to move others forward with solid examples that can be built off of rather than having sentimental attachment to prior iterations.  If anyone wants to get older versions they are free to do so.\n'
319,87284332,b'It is not sentimental. It is ensuring you are actually helping developers with varied levels of depth along the way.\n'
963,138489679,b'Please add the header!'
1415,155398704,b'These are all set to `mixedRealityTeleport.HorizontalStrafe`'
1415,155398769,b'Looks like you fixed already :)'
1415,155398847,"b'Haha yeah, I forgot to stage it somehow.'"
1415,155399810,b'Looks like the `mixedRealityTeleport.VerticalRotation` and `mixedRealityTeleport.HorizontalRotation` labels are swapped.'
533,119973886,"b'Why are these capitalized? I would expect capitalization for public fields, but not private fields.'"
533,120235188,"b'I usually capitalize readonly values, even when private. Same for private constants as well.'"
721,122295171,b'typo: isGlobalListe _r_ er'
721,122295422,"b'Though also, is this used?'"
721,122365825,"b'Whoops, first time I wrote an editor. That was a leftover from a failed first attempt. Also, take heed: by setting IsGlobalListener to true by default I changed the default behavior of the SpeechInputHandler. I modified my PR to set that default to false, so you actually have to consciously make your SpeechInputHandler a global listener. This is to prevent people rebuilding the sample and inadvertently ending up with a lot of global listeners'"
721,122513740,b'Good catch!'
1318,149739087,"b""While we're at it, this should get moved into it's own file as well."""
1318,149742970,"b""It already is...I also disagree with putting structs/enums/classes/etc into their own file 100% of the time. Sometimes it makes sense, but sometimes you lose context when it's isolated."""
1318,149746675,"b""> It already is... \r\n\r\nIdk how I missed this haha. \xf0\x9f\x98\x86 \r\n\r\nI disagree that the context is lost.  It def makes it much more readable, which is important in open source projects.\r\n\r\nI also find it annoying when people warp a public class in other public classes that don't have any dependencies to the class they're part of."""
1318,149759484,"b""@StephenHodgson, I believe you meant **wrap** a public class in other public classes.  I agree and disagree.  I think if you class looks like a turducken (https://en.wikipedia.org/wiki/Turducken) you're doing something wrong but if your class is really just a data type with constructors that belongs in the other classes namespace it's a perfectly acceptable model.  That's actually a very standard model in game development and all 5-6 engines I've shipped games in.  """
1318,149762314,"b""Haha yeah. I'm really taking about exactly that \xf0\x9f\x98\x86\r\n\r\nI just like having the shorter references instead of 5-10 references.\r\n`FirstClass.SecondClass.ThirdClass.FouthClass.YourActualRefetence`\r\n\r\nI find anything more than two to be completely unnecessary."""
1318,149764792,"b""I agree that readability is important if it enhances comprehension, but it doesn't always do that. Sometimes a *visible* but hard-to-read relationship can be easier to comprehend than a well-formatted *hidden* relationship.\r\n\r\nI'll c&v my earlier point about enums since it applies to this situation as well: Breaking them up into separate files destroys information about their purpose while adding complexity. Devs have to work backwards from variables one-by-one, forensically reconstructing relationships that would be clear at a moment's glance if they were just kept in the same file as the class that uses them.\r\n\r\nIt'll always be case-by-case but that's my 2c, anyway.\r\n\r\nAlso turducken is my new favorite programming analogy."""
708,119958202,"b""This fixes a bug.  When switching between a 6DoF controller's pointing ray and gaze, if the user is staring at an object, the focus wasn't updated correctly.  This change fixes that case."""
708,120185375,"b""Is there a test scene that demonstrates this feature 'switching between a 6DoF controller's pointing ray and gaze' ? If not please consider adding it."""
708,120226090,b'I was just about to add a message about that :).  I think that should be the default behavior.  Are you OK with me making the main InputManagerTest scene 6DoF-compatible and make the main InputManager prefab include the SimpleSinglePointerSelector and be configured correctly for 6DoF or GGV?'
708,120773290,b'I did this as part of the latest commits.'
1100,144415624,b'Should this be a tooltip?'
1100,144416181,"b""Is adding the 0 here better for perf? I'm curious, because I've never seen that before."""
1100,144416401,b'Why the strange casing here? Unregister and defocus seem to make more sense as single words.'
1100,144416529,b'What does this fix/change?'
1100,144417878,b'Do we no longer have to register pointable canvases?'
1100,144418523,"b'Should this be changed to public, so the rays can be turned on/off during runtime?'"
1100,144419472,b'Leftover comment?'
1100,144420218,"b'This used to be RaycastAll, I believe to then check for the prioritized layer masks. Does this do that automatically?'"
1100,144429850,"b""You'll never see the rays at runtime.  It's an Editor only thing."""
1100,144429885,b'Yes it does improve perf.'
1100,144429967,"b""Nope, I fixed it so we don't have to register the canvases"""
1100,144430060,b'Yes it called an extension method @Zod- wrote.  Lots of testing went into it.'
1100,144430129,"b""Left for debugging purposes.  Wasn't sure if we should wrap a debug bool someplace if we want to do quick testing."""
1100,144624666,"b""I'll revert this. Seems like an unnecessary change."""
1100,144625341,"b""This adds the selected object to the pointer event data that feeds back into Unity's native event system."""
1100,144640448,b'Also deFocusedObject a few lines lower.'
1100,144641792,b'sure'
1256,148094949,"b""Isn't this essentially the `AutoRegisterPointableCanvases()` method that you removed from `FocusManager` earlier? Is it needed again?\r\n\r\nIf so, I prefer the previous implementation. What if I don't want every single canvas to be registered?\r\n"""
1256,148102315,"b""This also looks familiar, except the previous implementation called `Clear(uiRaycastPointerData);` (in this case `pointerData`) before returning if it wasn't null. Should we do that here?"""
1256,148102952,"b""Why do we need two different Get methods here? Won't `GetSpecificPointerEventData` return the Gaze data if you pass in the right pointer?"""
1256,148103890,b'Do we not want/need distance anymore?'
1256,148106523,b'It was never used.'
1256,148106690,"b""Believe me I tried to make it that way but the `FocusEnter` and `FocusExit` methods don't supply a pointer source."""
1256,148106851,"b'No, we should only be clearing it before we update our UnityUIRaycasts.'"
1256,148108031,"b""Assigning your canvaes event camera is _very_ optoinal and is a manual step.\r\n\r\nThe difference with the previous implementation is that you actually had register all your canvases with the `FocusManager` during startup and at runtime, or before making your build, which I didn't like.  This is different because it doesn't require you to assign the canvases before you build.  It is similar in the fact that it searches the scene for you, and then assigns the canvases that only have their render mode set to `RenderMode.WorldSpace`.\r\n\r\nAlso, this is never run by the MRTK at runtime, I only added this here as a helper utility method for people who are generating canvases at runtime, and when you add the input system to your scene via the scene setup wizard.\r\n\r\nIf you don't want to assign the canvas then don't assign the `UIRaycastCamera` to your canvas' event camera.  In fact this is somewhat more of a manual setup, and would like to add a little button to the `FocusManager` to automatically add the `UIRaycastCamera` for you for all your enabled scene canvases (Similar to the scene setup wizard)."""
7606,402625968,"b""Is there a way to set this property from code? Looks like it's a private serialized property with no getter / setter, but maybe I missed something? Following MRTK principle [Support configuring both in editor and a runtime](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#support-configuring-components-both-in-editor-and-at-run-time) """
7606,402626746,"b'Rather than doing this, could we instead explicitly set lockCursorWhenFocusLocked = false in code?\r\n\r\nSimilarly, can we test lockCursorWhenFocusLocked  = true to make sure the old behavior of locking works as well?'"
7550,404224401,"b'Out of curiosity, why do these need to be removed?'"
7550,404224995,b'Does registering with no parameters register for bubble up? I noticed that you explicitly need to specify propagation phase in unregister but not in register.'
7550,404225360,b'If you want to mention the other option (which I think is optional) it would be good to also give an example.'
7550,404226191,b'Why are you exiting early if the event is sent directly to this object? Seems counter-intuitive so an explanation may help.'
7550,404231590,"b'In a future PR, it would be helpful here to either explain the phases of event propagation supported, or to link to a documentation page which explains the phases supported. '"
7550,404233541,"b'We have several other components that handle pointer events, and in particular I see people use PointerHandler quite often. What are your thoughts on either modifying PointerHandler to support event propagation, or creating a a new component such as PointerPropagationHandler (or similar) to allow devs to specify the event propagation phase to subscribe to?'"
7625,405287689,"b'Are we sure that prioritized layer masks are configurable on a per-pointer basis? I remember we added the layer masks for the PokePointer and later the GrabPointer and for some reason did not use the PrioritizedLayerMasksOverride, though at the moment I cannot remember why. One thing I noticed is that the PrioritizedLayerMasksOverride property is not currently exposed as configurable in editor for any of the pointer types, like the GrabLayerMasks and PokeLayerMasks properties are. \r\n\r\nBeing able to configure the grab layer masks in editor is something we want to keep because it exists and is being used by people already. @keveleigh if you wanted to deprecate grab layer masks, how do you envision users from editor POV configure the grabbable and poke-able layers? \r\n\r\nAdditionally to both of you, do you think that the naming ""grab layer masks"" is a bit more understandable than ""prioritized layer masks override""? While internally it does seem fine to use the PrioritizedLayerMasks property, perhaps exposing the easier-to-understand ""GrabLayerMasks"" property, and ""PokeLayerMasks"" property, is something we could still keep. \r\n\r\nSo, I would suggest reconsidering whether to deprecate GrabLayerMasks in the future, perhaps we can just internally use the inherited PrioritizedLayerMasks property, but keep the user-facing API the same.'"
7625,405288490,"b""Great suggestion! It would be good to file an issue and reference it here so we don't forget to do it in the future."""
7625,405288622,"b'It would be great to file an issue and reference the issue number here, to ensure we do not forget.'"
7625,405288742,"b'It would be great to file an issue and reference the issue number here, to ensure we do not forget.\r\n\r\n'"
7625,405288951,b'Incomplete comment.'
7625,405289405,"b'It would be great to verify that without your code fix, that this test fails, by the way. Just to verify that the test catches the fix :-) Can you confirm? This is a tricky case and I want to make sure that with the code broken, the test does fail.'"
7625,405290480,b'Would be good to verify that isinteractionenabled and isnear object are true here after moving to the interaction enabled pos.'
7625,405290836,b'```suggestion\r\n            // Reinitialize the overlapRect\r\n```'
7625,405739534,"b'It\'s a little unintuitive that we would be deprecating the grab mask but not the poke mask, I would expect that we would deprecate these thing together, since as a dev I would wonder ""why grab masks deprecated but not poke masks?"". Additionally, if we deprecate this, we will need to mention it in the release notes. I\'m not sure deprecating the field right now is needed to fix this bug, so how about we consider this for a future PR instead? I\'m a little worried that pulling the string on also deprecating the poke layer masks could cause more complexity than we expect. Thoughts?\r\n\r\nIn general, when thinking about deprecating things (which could require people to change their code) we should consider the costs and benefits to deprecating something. If it benefits us devs but not necessarily the users of the SDK, it may not be worth it. I this case what are the benefits to the user? The cost is extra cognitive load.'"
7625,405742565,"b""Good point Kurtis. I have a preference for keeping the existing behavior.\r\n\r\nThe current external facing behavior is that the pointer will use the grab layer mask, unless somebody sets PrioritizedLayerMasksOverride. Then when PrioritizedLayerMasksOverride goes to null, it defaults back to GrabLayerMasks. Let's think about this from POV of cost/benefit to the end-user of MRTK. What's the benefit of changing the API? The cost currently is we are changing behavior, so people may lose time reading release notes / debugging if code that they used to have now changes.\r\n\r\nIt seems there is not much benefit to changing the behavior to the end-user (though for MRTK devs there is benefit of simplifying the code, but we are just a few people compared to thousands that use MRTK). The cost is people may hit a tricky bug if we change the behavior."""
7625,405792236,"b'Might be good to do an assert of the assumption here, or print a warning message if somebody is using sphere overlap but the pointer is not a grab pointer. '"
7625,405792704,"b""This line is making me think. IIf somebody sets this to some custom value to override, and then to reset the behavior, sets PrioritizedLayerMasksOverride to null, are there cases where GrabLayerMasks would not properly be used? I *think* it's okay but the line is giving me some pause."""
7631,405878607,"b'Why not also support clicking when in articulated hands mode and the gaze cursor is active? This for example happens whenever you start the game and have no hands up (see the gaze cursor dot), or when you have no hands visible and say the word ""Select"" (or press the one key).\r\n\r\nReason I ask is becase most people will have the hands mode to be articulated, not gestures. So, if this requires the mode to be gestures, many people will not get to use or see it. It would be nice if you could just hit play and move the camera and click on things without needing to bring up the hands with the hand rays.'"
7625,405882494,"b""Actually, this code will only run when a sphere pointer is already near a grabbable object, so it's guaranteed to be near something. QueryScene only runs if interaction is enabled on the pointer, which is only true if the pointer is near a grabbable object.\r\n\r\nBut still, there is some redundant sphere casting going on, both in this code, and in the code that was there previously. I liked @RogPodge 's suggestion to cache the results from SpherePointer.OnPreSceneQuery. """
7631,407578508,"b""holdAction doesn't seem like the appropriate name here. GripPoseAction maybe?"""
7631,407579413,"b""It looks like you're removing the check for gesture blending will this cause the select gesture to happen immediately, rather than after a small delay? Are there any other side effects of this?"""
7631,407580402,"b'Can you explain what this new field is doing?\r\n\r\nIt would also be good to add an explanation of this new input field in [the gestures documentation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/Gestures.html), as part of this PR.'"
7631,407583740,"b'Since this is a new (and exciting!) behavior that you can left click to select items, please document it in the [input simulation documentation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSimulation/InputSimulationService.html) as well as the 2.4 release notes. A GIF for the release notes would be nice.'"
7631,407586288,"b'Now that input simulation is getting more complex, it would be nice to add a test to verify that input simulation is working as intended, that is when you left click a single select event is raised, when hand is up and you click a single event is raised and not two events (one from the hand, and one from the gaze cursor), and so on. Since it might be difficult to directly simulate pressing keys and clicking mouse buttons, you could write methods to the input simulation service to expose things like ""press left hand control key"" or ""press left hand activate button"", ""Press left hand toggle key"", etc.\r\n\r\nThis could be done as part of this PR, or if you\'d like to split it into two PRs, please file a bug and address it in a follow-up PR. Note that it would be good to get both the feature and test tests in the same release, so that we can be confident future work doesn\'t break existing functionality. It will also help increase confidence that this change doesn\'t have unwanted side effects.'"
7631,408484620,"b""It's great to see this test. It will be good to also make sure that interaction using the left and right hands work, that's actually what I'm more worried about with this change (it will make articulated hand interaction work, but not hands free interaction)."""
7639,410486828,"b'Ah, might be good to move this magic number into a variable, to make the code more readable and make it easier to change in case you use the magic number elsewhere.\r\n\r\nAlso, I think instead of having a single threshold, this should use two different thresholds: an enter threshold and an exit threshold. This is how [leap motion for hololens](https://github.com/HoloLabInc/LeapMotionInputForMRTK/blob/master/Assets/LeapMotionInputSimulation/Providers/LeapMotionHand.cs#L81) contributed by Tarokosu was implemented. I think this will help with accidental release when dragging objects. In testing this myself with my VR headset + Leap Motion, I found that I dropped things too easily when I was trying to drag objects around.'"
7679,410820760,"b'@cre8ivepark, any reason we want this to go from 0 to 90? Might be better to have a maxValue or multiplier public field that can be set to make it a bit more flexible, just to set a good example.'"
7679,410821331,"b'Heh, no way that box collider will not be collided with :-)'"
7679,410822224,"b""@KenJakubzak Why do you explicitly need to set updatesolvers to be false here? Is there a better way, perhaps adding an event listener to the manipulation handler that sets the handler.updatesolver = false? Reason I'm thinking it might be good to have that example, is so that we can show an example in code of how to implement world locking on drag."""
7679,410822783,"b'@KenJakubzak  SolverUpdateWaitTime is currently set to 1 second, which means each one of these tests will currently take 4 seconds. This test method is run 8 times, which means I believe it will add roughly 32 second to the playmode test pass run. Are all of these delays necessary? Have you considered using `yield return PlayModeTestUtilities.WaitForInputSystemUpdate()` instead to wait until input events propagate, or simply `yield return null` to wait for a single frame?'"
7679,410823014,"b'These magic numbers seem a little suspect...since this is a test and not something shared in the SDK code it seems okay, however it might be more readable cleaner to save these as named constants instead, and set a good example for the future.'"
7679,410823384,"b'```suggestion\r\n        [Tooltip(""With this active, solver will activate the UI after the palm threshold has been met and the user gazes at the activation point. If eye gaze information is not available, the head gaze will be used."")]\r\n```'"
7679,410823401,"b'```suggestion\r\n        /// With this active, solver will activate after the palm threshold has been met and the user gazes at the activation point.  If eye gaze information is not available, the head gaze will be used.\r\n```'"
7679,410823752,"b'```suggestion\r\n        /// Checks to see if the palm is currently facing the user; and if required, is it currently flat.\r\n```'"
7679,410824735,"b'As an aside, I just noticed that this method has an undocumented side effect -- it modifies the position and rotation behavior of the hand constraint in some cases. Would be good to mention this side effect in the method comment. Might be nice to fix this in the future.'"
7679,410825253,b'Interesting use of double assignment here. Is there actually any need for the local variable gazeActivated? Seems like you could just do:\r\n\r\n```\r\ngazeActivationAlreadyTriggered = (gazePosDistToActivationPosition < gazeActivationThreshold);\r\nreturn gazeActivationAlreadyTriggered;\r\n```\r\n\r\n'
7679,410825650,"b'Since these <param> blocks are empty and it is a private method (so not needed), suggest removing these empty <param> blocks'"
7679,410826128,"b'```suggestion\r\n        /// activate the attached menu. If joints successfully obtained, returns activation point for currently selected\r\n        /// safe zone. On failure, returns Vector3.zero.\r\n```'"
7679,410826451,b'Would be nice to rename to `Try GenerateHandPlaneAndActivationPoint` to follow the pattern used elsewhere in MRTK to use Try* when calling methods that could fail.'
7679,410826715,"b""It's a little  surprising to me that GenerateHandPlaneAndActivationPoint returns true/false but this method doesn't. It seems like this method could fail the same way GenerateHandPlaneAndActivationPoint could, yet in this one the result is to set values to Vector3.zero instead of returning false in case of failure. Seems like it would be safer to use the pattern to do TryBlah and return false instead of failure. This can help debug tricky bugs in the future."""
7679,410827500,"b'@KenJakubzak I would actually expect that if I called `SolverHandler.UpdateSolvers = false` before disabling a component, then on enable, that component would not all of a sudden call `SolverHandler.UpdateSolvers = true` for me. I think this was to solve a specific case in the Hand Menu examples scene where switching menus could cause menus to be stuck in space. Perhaps this should instead be implemented in a script scoped just to the example scene? '"
7679,410827753,"b'I think it would be good to have some sample code here that demonstrates how to set up the world lock on hand flip and well as drag to world lock logic in code, rather than simply by modifying the assets. Following our principle of making things easy to configure both in code, and in the editor.'"
7679,411509943,"b'These empty <param> and <return> blocks will raise errors in the mrtk_docs validation, just FYI.'"
7679,411510542,b'empty <param> and return blocks here also.'
7679,411513264,b'Empty <param> and <return> blocks.'
7679,411513354,b'Empty <param> and <return> blocks.'
7679,411513437,b'Empty <param> and <return> blocks.'
7679,411513596,b'Empty <param> and <return> blocks.'
7679,411513691,b'Empty<return> block.'
7705,412481060,"b'Per our guidelines, it would be nice to make these configurable via code if they are going into core MRTK.'"
7705,412483203,"b'After reading this for some time I finally understood that this will fire as soon as all keys are pressed down, but only once. It would be nice to explain that in a comment :-)'"
7705,412483226,"b'The 0.5 seems like an arbitrary magic number, would be nice to make this configurable via code, and exposed as a tunable variable.'"
7705,412483761,"b'This is a draft, but just FYI all these fields are missing correct tooltips and the class is missing a comment.\r\n\r\nAdditionally, following the principle to allow things to be configured both in editor and in code, make sure that this shortcut can be instantiated and configured from code via properties.'"
7714,413555789,b'Might want to log an error instead of warning here.'
7714,413556684,"b'Interesting, how did this work before?'"
7732,416749842,b'```suggestion\r\n        /// Event that is fired on the target object when the ScrollingObjectCollection is starting motion with velocity.\r\n```'
7732,416763238,b'Curious as to why we still need to listen to global input events. Any idea why we still need to be global input listeners?'
7732,416764042,"b'Would be nice to move this magic number into a variable, we missed this on the first review of the code.'"
7732,416766086,"b""When does this OnInputDown handler occur? I'm curious why the scrollingobjectcollection needs to handle both input down AND pointer events, seems like it should only need to handle one. Perhaps this was a mistake / could be improved decision in the initial experimental PR?\r\n"""
7732,416766996,"b'It could be useful to explain here, and elsewhere, why we reset the input tracking states when the event data is used.'"
7700,416770364,"b'Interesting, never saw use of a finalizer before in MRTK.'"
7700,416772505,"b'Out of curiosity, why do this in a finalizer instead of say in ondisable? Not suggesting one way or another, just curious.'"
7700,416772919,b'Any reason to call Object.Destroy instead of RemoveComponent? Again just curious.'
7700,416773526,b'Do we use CAPITAL_UNDERSCORE style for our enums? I thought we used CamelCase?'
7700,416774246,b'Interesting to see this in the finalizer as well.'
7700,416775209,b'Any reason we call DestroyImmediate here instead of Destroy? Docs suggest {it should only be used when writing editor code](https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html)'
7700,416776682,"b'warning: possible divide by zero here. consider either adding small value to the bottom, or checking for zero?'"
7700,416776860,b'possible divide by zero here also.'
7700,416777448,b'```suggestion\r\n        /// Returns the flatten indices to the corresponding flattenAxis mode.\r\n```'
7700,416777638,b'Might be good to capitalize / end with period in these comments.'
7736,416940611,b'missing <summary>'
7736,416940874,"b'This is an interesting dependency addition, might be good to double check with @keveleigh '"
7712,416961053,b'```suggestion\r\n        /// This method provides a mechanism to get this forward axis.\r\n```'
7712,416961364,b'Missing a /// <summary> comment describing the class.'
7712,416961551,b'Missing a /// <summary> comment describing the class.'
7712,416961795,b'Is this needed for the cone pointer?'
7712,416964066,b'Comment seems incorrect.'
7712,416964152,b'Commented out code?'
7712,416964969,b'It would be good to move this magic number into at least a member variable / constant.\r\n'
7712,416965683,"b'Please move this magic number into a constant, or better yet make this configurable.'"
7712,416965973,"b'Also, looks like this variable is not used anywhere.'"
7712,416966534,"b'Reading the implementation, it seems like this is actually half of the cone tip angle, so the actual angle of the cone is 120 degrees. This seems pretty large.'"
7712,416972970,b'It would be good to draw both the near object radius as well as the and the SphereCastRadius to get a full understanding of what the cone pointer is doing.'
7712,416973402,"b""Why do we need a duplicate class for this? Can't we use the SpherePointerGrabPoint?"""
7712,416973705,"b'This is missing a summary comment, but also I am not sure why we need this class to be duplicated?'"
7712,416973909,"b'\r\n```suggestion\r\n        /// When in editor, draws a cone that represents the grabbable sphere area\r\n```'"
7712,416973988,b'missing summary comments.'
7712,416974756,"b'Why is the cone overlap calculation the same as the sphere overlap calculation, in this case? I would expect the cone overlap to be different.'"
7736,417109741,b'Hold up...is this ever set to true? It looks like it is only getting set as false in the code.'
7741,417554736,b'Add back this summary comment.'
7712,418198178,"b'Make sure to communicate that this is only for purposes of showing / hiding hand ray, not for actually doing the grab detection. '"
7712,418199019,"b'It feels like it is going from palm joint to index tip, not grasp point. Is this correct?'"
7712,418199654,"b""For the near object check, seems like we should also have the min distance parameter? To cover removing the 'tip' of the cone."""
7712,418611597,b'```suggestion\r\n        /// Angle range of the forward axis to query in degrees. Angle >= 360 means the entire sphere is queried.\r\n```'
7712,418612594,"b'I think this comment is not correct, can you check it?'"
7712,418613499,"b""might want to assert / check that pointerAxis magnitude is 1. I don't think it's mentioned anywhere in the docs that its expected magnitude is 1 either, would be good to mention that in the docs."""
7712,418613986,b'Is this comment correct?'
2076,188014083,b'Good catch... missed that one.'
69,68149941,"b'Sorry to harp on this.\nFeels like an overkill to have another script attached onto my game object to do something as simple as GazeManager.Instance.FocusedGameObject.SendMessage(""FooBar"");\n\nI vote not having this script at all. And your change simply make the change to make focusedGameObject public.\n\n@jwittner and @keveleigh please weigh in on your preference.\n'"
69,68150279,"b""@NeerajW I think FocusedObjectMessageSender is great for the application level, but agree that it's overkill for the toolkit given it's simplicity.\n"""
69,68150661,"b""@NeerajW @jwittner @keveleigh\x7f So what's the consensus? Do we want add a separate class or add a convenience method to GazeManager?\n"""
69,68150951,b'My vote: Only the change to expose FocusedObject added to the HoloToolkit-Unity.\nMy suggestion: Use the class you wrote for your application.\n\n=)\n'
69,68151577,"b'@jwittner Sounds like your vote is for keeping SendMessageToFocusedObject in a separate class. So each option has 1 vote, and we need a tiebreaker :)\n'"
205,78402909,b'Perhaps you add a check if this capability is missing? And LogError?\n'
205,78403039,b'Please consistently use the:\nif(condition)\n{\n    // braces pattern\n}\nelse\n{\n}\n'
205,78403167,b'Perhaps a private member in the class?\n'
205,78403322,b'I would try to use some other word than Manipulated :) Since that is a gesture name.\n'
205,78415169,b'NIT: || pattern is broken here.\n'
205,78415420,b'NIT: Spaces missing around *.\n'
205,78415667,b'Nit: Indentation off here?\n'
205,78536091,"b""I couldn't find any way to verify this capability :( Unity also seems to swallow any exception that may be raised.\n"""
205,78536501,"b'Pardon my ignorance, but what would that accomplish?\n'"
205,78785598,b'Yeah I looked too and no luck.\n'
205,81135369,b'I think a more descriptive name than go is also good.\n'
205,81135531,b'Could we add some single spaces between our fields and the tooltip of the next field please?\n'
205,81135670,b'Nit: `private void Update()`\n'
205,81135951,b'Nit: please use explicit types\n'
205,81136576,"b'Nit: Instead of just go, could we rename this to be a bit descriptive? Like `rotateGo` or `goToRotate`?\n'"
205,82136490,"b""I used spacings to group together those properties that belong together. E.g. MoveXAxisName and MoveXAxisSpeed are grouped together. I guess it is a mater of personal preference - if the styling guide for this project calls for more spaces, I'll be happy to add them.\n"""
205,82136766,"b""The Unity class template omits the private for the Update function, I followed that. Looking through the project, half of the files have and half don't have the private modifier for these methods. I added it, since I personally prefer explicit privates.\n"""
205,82137232,"b'go replaced with objectToManipulate. Looking through the rest of the toolkit, var seems to be used widely, so I left that in.\n'"
205,82137306,b'renamed to objectToRotate\n'
572,107667863,"b'Why not mark obsolete if these classes should be used instead?\r\nBesides this class is currently broken anyway, & might even be able to be removed completely.'"
936,137207465,b'Mention obsolete in favor of what. Could remove the TODO then aswell if you mention the input source here.'
936,139293791,"b'Should we have a message letting people know what they should be using instead of this Obsolete class, or is this just used internally?'"
936,139294455,"b""It was never really working anyway, but I think it's good practice to add the message."""
1415,155062156,"b""Was this supposed to be added to the InputManager, to replace GamepadInput.cs? I don't see it."""
1415,155063176,"b""`GamePadHandlerBase` itself wasn't, but the `XboxControllerHandlerBase` was and it inherits from this class"""
1415,155064493,"b""Hmm, I don't see `XboxControllerHandlerBase` in the prefab, just `XboxControllerInputSource`."""
1415,155065176,"b""I'll double check."""
1415,155126319,b'Fixed.'
1521,156850576,b'this removes the customization of the selection buttons'
1521,157026051,"b'Ahh yes, this was left over from when I was investigating the double events. Reverting.'"
1415,155061208,"b""I'm getting an ArgumentException with this change, since it doesn't look like these axes were updated in InputManager.asset as well."""
1415,155062368,b'Which also means they should be updated in the Add Input Manager Axes menu'
1415,155064052,"b'Good catch.\r\n\r\nI was trying to keep in sync with your axis manager, but these must have gotten past me.'"
319,86542568,b'Missing licencing header\n'
319,86585290,b'Fixed\n'
319,86542653,b'Missing licensing header\n'
319,86544248,b'could be a for loop because this is embedded in the update loop.\n'
319,86585307,b'Fixed\n'
319,86585608,b'Fixed\n'
319,86917800,b'Sorry if I missed where you set the stabilization plane aka focus point. This is a must have.\nI would consider putting these long code blocks in functions and calling them in Update to display concepts better.\n'
319,86917833,b'Feel free to refer to the old GazeManager on how to do it.\n'
319,86917915,b'Will this guy raise the OnFocusEnter and OnFocusExit?\n'
319,86923964,"b""I'm not setting it. I thought you already had a script that sets the focus point based on the gaze manager's output. Wouldn't it just be a matter of adding that script to a game object in the scene?\n"""
319,86925571,"b'No, it raises FocusedObjectChanged. You can get the OnFocusEnter and OnFocusExit message through the input module, by implementing the IFocusable interface in your MonoBehaviour\n'"
319,86925637,"b""I agree with splitting the code in functions. From what I remember, it wasn't trivial to do because of dependencies between some variables, but can take a quick stab at it tomorrow.\n\nI'll look at the focus point stuff as well. Might just be a matter of adding it to the InputManager prefab.\n"""
319,87097940,"b'Fixed the focus point by simplifying that StabilizationPlaneModifier script a little, and adding it to the InputManager prefab so that everyone uses it by default.\n\nAlso split the Update method of GazeManager to make it cleaner\n'"
341,89188445,b'Probably should just remove this outright instead of commenting it out.'
341,89188704,b'Nit: remove comment'
341,89336785,b'Do we really want to overwrite any `position` we get with `Vector3.zero`?\r\n\r\nSame questions for each override below.\r\n\r\nDoes this just reset everything?'
341,89372218,"b""These are part of the 'BaseInputSource' abstract methods and properties. They have to be implemented although I can't find where it's used. I copied these implementations from 'GestureInput'."""
341,89373467,"b""Part of the problem problem is that BaseInputSource wasn't written to become a focus source. The original design was around having input sources and focus sources (which was originally only the GazeManager), with the InputManager doing the bridge between the two.\r\n\r\nIf instead of implementing IInputSource, GazeManager implements IFocusSource (new interface you'd create). you can get rid of these methods that IInputSource forces you to implement. Then, if we ever have 6DOF device support or anything else that is both a focus source and an input source, it could potentially implement both IFocusSource and IInputSource."""
1098,143344631,"b'Unsure how much of this will get removed, or just moved to the `FocusManager`.'"
1101,143345790,b'Is there a way to do this without the need to get the canvas components?\r\n\r\nMaybe caching them for use again later?'
1101,143345843,b'I need the canvas. I guess I could make a container to hold both to cache it.'
1101,143345959,b'We just need to know if both raycast results are from the same canvas?'
1101,143345966,b'Exactly'
1101,143345990,b'Is there a way to do this without all the allocations from linq?'
1101,143346025,b'What do you mean with by allocations from linq'
1101,143346070,"b""We've got a closure allocation on line 297, and multiple object and delegate allocations occurring in the linq statements. Generally good to avoid linq in update loops, if possible."""
1101,143346180,"b'Does it make sense if we made this a private field and just cleared the list each time, instead of allocating a new list?'"
1101,143346597,b'Instead of `new RaycastResult()` we could use `default(RaycastResult)`'
1100,144422334,"b""Should this go the other way (removing the other hit references)? This should be requested from FocusManager, that way GazeManager isn't special cased in apps, and motion controllers vs gaze is abstracted away."""
1100,144430454,b'This was kept to keep backwards compatibility for older projects.'
1162,144955259,"b""Doesn't this disable the above Obsolete warning?"""
1162,144959490,"b""No, it's wrapped around just the one field and the other obsolete warnings still show.\r\n\r\nWe disable then re-enable a few lined after."""
1162,144960958,"b'Right, but why is this event marked both Obsolete and has the Obsolete warning disabled?'"
1162,144965913,"b""It's to disable the Obsolete warning from using the `FocusedChangedDelegate`, but it doesn't disable the warning when subscribing to the `FocusedObjectChanged` event itself."""
1162,144972121,b'Ahh sweet!'
1265,148044152,b'we can probably remove this commented out part.\r\n\r\nDo we handle setting this later?'
1265,148044189,b'Ah found it.'
1265,148066246,"b'Yeah, sorry for the slop there. '"
1265,148066557,b'Was in the habit of just commenting out the original HoloToolkit code as a reference. '
1318,149744475,b'put back and mark obsolete. return default first ray.'
1318,149744764,"b""Seeing as this is a struct you don't need to use the new keyword each time.  ~~Setting the new values should be enough.~~\r\n\r\nOh I see, we're initializing the data this way.  Maybe you should have a utility method that does this for us instead. `UpdateRayStep()` or something along those lines."""
1318,149827001,b'\\+ Instructions.'
1332,150322024,b'should we make this virtual as well?\r\n(same question for `OnPreRaycast`)'
1518,165481972,b'nit: remove redundant base call and and method.'
1486,160003847,b'I think the rename is not needed. The usual pattern for singletons is the manager suffix.'
69,68141762,"b""Can you not do this already with OnGazeEnter and OnGazeExit?\nI don't see too much benefit of this in the generic class. You could write your own MessageGazeManager since this is a partial class and add this function to your class. \n"""
69,68143276,"b""The problem is that the object field in Responses array is populated only statically.\n\nHow would OnGazeEnter and OnGazeExit be able to help? They only give you events that the object starts or ends to be gazed on, but these methods don't give you an ability to send custom messages to the focused object.\n\nThis is meant to be used from KeywordManager to send messages to focused object: http://i.imgur.com/PAGXMTu.png\n"""
69,68143606,b'An alternate solution would be a seperate small class which you register with the KeywordManager that uses the HitInfo available on the GazeManager to find the current gaze intersected object.\n'
69,68144203,b'Recommend making private GameObject focusedGameObject to a public read only property. Handle custom messages in your class.\n'
69,68144288,"b'GazeManager already contains logic for detecting focusedObject, why not use data which is readily available? Besides, this is an elegant way to avoid leaking the GazeManager abstraction by not exposing FocusedObject outside of GazeManager.\n'"
69,68144638,"b""If you make the focusedObject public:\n1. Any other class can also use it for hands / gestures or voice. They can do whatever they choose to do with it. \n2. They also don't need to depend on SendMessage VS SendMessageUpwards or other variants.\n3. They could use it a more polymorphic way instead of this message way.\n"""
69,68145426,"b'@NeerajW Good point, I mentioned this in the forum thread. Exposing FocusedObject would create an additional dependency potentially used everywhere outside of GazeManager. This is probably fine, but PR intent was to minimize side effects and prevent the abstraction leaking outside of GazeManager.\n'"
69,68146106,"b""A thought - maybe not as bad of a leak, but doesn't SendMessageToFocusedObject leak the abstraction similarly? It requires that GazeManager know the focused object and that the object it tracks is capable of receiving Unity style messages. This feels like the same contract as exposing the data through a readonly property. Though less powerful ultimately.\n"""
69,68146362,b'@jwittner Subtle but valid since GazeManager uses SendMessage only as a private implementation detail.\n'
69,68146521,"b""But to implement the functionality on the focused object you'd have to know that SendMessage was used correct?\n"""
69,68147294,"b'Not necessarily, you can add a public method and invoke it directly if you wanted to.\n'"
69,68149467,b'I meant your specific use case here - it relies on knowing that SendMessage is used.\n'
69,68150321,"b'Oh, yes, this relies on SendMessage being used to enable dynamically created objects to receive recognized keywords without creating additional infrastructure for registering strongly-typed callbacks at runtime.\n'"
96,69628246,"b'Ben, these are big breaking changes to functionalities being used by many.\n\nPlease revert your changes to GazeManager.cs and add a new file instead.\nPerhaps something like: GazeManagerStabilizer.cs to better use with your functionality.\n'"
96,69628292,b'What is GGVInputModule?\n'
96,69628627,b'Since this is a partial class you can choose to reuse the variables being exposed in GazeManager.cs already.\n'
8443,486704944,"b""Consider using hashset instead of list here for better perf (not critical, since this probably won't run every frame and I assume the list will be short). HashSet will use O(1) for contains test where List will be O(N)."""
8443,486705271,b'Careful about magic strings and comparing to magic numbers. What is the difference between Active and Value?'
8443,486706161,"b""Why doesn't adding a new user-defined state also create an event configuration for it? Does user need to do this manually? How would I do this from code?"""
8443,486706481,"b""There's quite a bit of code overlap between this method and AddCoreState(InteractionState), can you re-use the code by for example doing this?\r\n\r\n```\r\npublic InteractionState AddCoreState(CoreInteractionState coreState)\r\n{\r\n    AddCoreState(coreState.Name);\r\n}\r\n```"""
8443,486706651,"b'It seems this method has the side effect of also ""Setting an event configuration"" -- mention this in comment that this is a side effect. '"
8443,486707299,"b""It would be useful if the InteractionState event included both the InteractionState AND the object that is the target of this event (e.g. the object receiving the event) -- I often find I miss not having an event's target when working with mrtk."""
8428,487216275,"b""It looks like this might have been an artifact of me using Unity 2019.4, where many other things were broken. I'll resolve this for now."""
8443,488092674,"b'Yup, resolving. It will be good to put this in the docs somewhere. '"
8443,518924610,"b""Minor -- do you need to use UnityEditor.Editor here, since there's `using UnityEditor` already?"""
8443,518925441,"b'Magic string, add to to variables above.'"
8443,518925768,"b'Consider moving this and all hard coded strings to variables, except perhaps the serialized property names. '"
8443,518930531,"b'Consider moving magic numbers like width to variables up top, so they can be easier to change later.'"
8443,518936399,"b'Is this expected? If not, consider printing a warning or error.'"
8443,518937060,"b""Consider making this a popup dialog so people see it -- sometimes I don't notice console messages because I don't have it visible in Unity."""
8443,518937440,"b'```suggestion\r\n    /// Base class for an Interactive Element.  Contains state management methods, event management and the state setting logic for \r\n```'"
8443,518938702,b'I see some duplicate code here and below. Consider factoring out into a method to avoid repeating yourself (see [DRY](https://medium.com/@learnstuff.io/dry-do-not-repeat-yourself-8518055b4cf) principle)'
8443,518942494,"b""Minor: you don't need to cast here."""
8443,518950874,"b'Will this be done as part of this PR, or a separate PR? I will assume separate.'"
8443,518951024,b'Is this coming in another PR?'
8443,518951865,b'Can simplify to `return statesDictionary[stateName]`'
8443,518952054,b'Mention that this returns null if no state is found.'
8905,519027343,"b'Please add summary comments for public classes, also I would suggest moving this to another file.'"
8905,519027422,b'Needs doc comments'
8905,519028626,"b'Might be good to do another pass to find all public methods classes and properties that are missing comments, though I think the CI server should be catching all these for you.'"
8905,519029278,b'Doccomments :-)'
8905,519029745,"b'Please comment why you are disabling this warning, also what is the warning?'"
8954,524752645,b'is there some code missing here?'
8954,524759819,"b""Some of our other interaction events finally started including information like what object was the original target of the event as well as the pointer that fired the event. I noticed that the HandTrackingInputEventData only includes the controller, not the pointer that fired the event. It also doesn't include the original target of the event. Consider adding those for this event, or to be honest in BaseInputEventData. Might want to just make this a bug to fix later. """
8954,524760427,"b'Consider factoring into method like ""IsStateValid"" or ""CanTransitionToState"" to reduce duplicate code'"
8964,527157261,b'Will the grabbed / clicked states also be separated as near / far?'
7486,388081089,b'Good point. I was just going for a minimum-impact change.'
7486,390748832,"b""Actually, EditorSceneUtils.GetRootGameObjectsInLoadedScenes() iterates over all open scenes but skips those which are not yet loaded. So I'm thinking that maybe the check should stay where it is now (?) In other words - the fact that the scene the event pertains to isn't loaded, won't affect the path where mixedRealityPlayspace is null."""
1165,145271281,"b""I think value / 2 is better for (human) readability and I don't think the CPU will mind (its not like we are doing this loop for thousands of objects). Or is there a coding convention I am missing?"""
1165,145271319,b'agree.'
1165,145272913,"b'It\'s easier to remove items in a list, see the ""RemoveInteractive""-method in the same file. If the data changes I don\'t delete all Interactives and their prefabs, only the delta and update all items afterwards (recycling objects).'"
1165,145909100,"b'Yes. The Dev would most likely implement his own ""DataProvider"", where he gets some data from an external source and than acts on it accordingly, putting that data into InteractiveSets/InteractiveGroups as he likes. So I also added some documentation that descibes it a bit more.'"
1165,145930732,"b""That would be the Collider in InteractiveToggle. I can attach the InteractiveToggle-script to any GameObject and have the collider in some child of that GameObject, so I don't think having it as required component is a good idea... we can however ignore the collider boundary size for layouting if it is not present. If you don't have a collider attached directly the user can define the distance between the InteractiveToggles by setting the Offsets-values. Alternatively I could iterate over transform.children recursively and calculate the biggest bounding box, but that seems a bit overkill."""
1165,145935815,b'Yes.'
1491,159038711,"b'yes, you still can, in fact it is better now: you can specify max rows or colums in the inspector for the grid (provided by the Unity-internal component ""Grid"" for UI that is used in 3D space here, same as the prototyping-examples).'"
2314,195936358,"b'Yeah, I added the original files, makes it easier for others to either modify existing icons or add new icons based on these.'"
2229,192513919,"b""This extra tab doesn't show up in my local copy. Is this a merge artifact that I can fix on github?"""
2229,192521050,b'Aha! Thank you!'
2229,192543633,"b""Vector3.zero isn't a compile-time constant, so it can't be used as a default value. How about:\r\n\r\nUpdateNodeFacing(CollectionNode node, OrientTypeEnum orientType, __Vector3 newPos = default(Vector3)__)"""
2229,192544053,"b""@paseb Can you weigh in on this one? I'm not sure what your intention was here."""
2229,192833806,"b""Unity serializes enums as integers, so as long as they're in the same position in the enum, the existing data reflects the rename. FaceForward and FaceForwardReversed will transition automatically to FaceParentForward and FaceParentBack.\r\n\r\nAs for references in code, they will be a compile error, but I hope these are easy enough to find and replace. I think this is a fair trade for getting it out of the inspector. I'll add a comment to the new value explaining its old name."""
2229,192834704,b'Relevant for upvotes:\r\nhttps://feedback.unity3d.com/suggestions/enum-members-decorated-with-hideininspector-should-not-appear-in-an-enum-popup'
2229,192892876,"b""Hmm. I'm not familiar with setting an enum to another value in the enum, and your sample doesn't compile. Can you elaborate on what you're suggesting?\r\n\r\nThe compile error I'm getting is:\r\nThe evaluation of the constant value for 'OrientTypeEnum.FaceForwardReversed' involves a circular definition\r\n"""
2229,192893007,"b'Oh, this is because FaceParentBack is defined after FaceForwardReversed. Hold on.'"
2229,192894454,"b'This works:\r\n```C#\r\n        FaceParentFoward,       // Parent Relative Forwards, this used to be called FaceForward\r\n        FaceParentBack,         // Parent Relative Backwards, this used to be called FaceForwardReversed\r\n        [Obsolete(""Please use FaceParentFoward"")]\r\n        FaceFoward = FaceParentFoward,             // Zero rotation\r\n        [Obsolete(""Please use FaceParentBack"")]\r\n        FaceForwardReversed = FaceParentBack,    // Zero rotation + 180 degrees\r\n        FaceParentUp,           // Parent Relative Up\r\n        FaceParentDown,         // Parent Relative Down\r\n```\r\nBut I almost think it\'s not worth the rename, since it replaces a confusing name in the inspector with an invalid confusing name and a clear name. Unless there\'s a way to fix that, I\'ll just put the names back to the old ones.'"
2229,192896721,"b""I haven't dealt with that yet. Do you mean to use an ifdef like this?\r\n```C#\r\n#if UNITY_2017_2_OR_NEWER\r\nusing UnityEngine.XR.WSA.Input;\r\n#else\r\nusing UnityEngine.VR.WSA.Input;\r\n#endif\r\n```"""
2245,192926569,"b""Won't renaming that field break existing data?"""
2245,192927378,"b""It should be private, except Solver needs it for the coroutine that should be in SolverHandler. I added a TODO for making it that way with Kurtis's refactor."""
2245,192928677,"b""Normal SolverHandlers run SolverUpdate() during the LateUpdate() on all the solvers on the game object. AdditionalSolverHandlers don't call SolverUpdate() at all, instead relying on the SolverUpdate() to update them. \r\n\r\nSimilarly, SolverHandlers call SeekTrackedObject() on all solvers when they need to reattach. AdditionalSolverHandler only calls it on the relevant solver.\r\n\r\nThis does remind me that we should require a SolverHandler component, since this relies on a SolverHandler managing SolverUpdate(). """
2245,192929540,b'@davidkline-ms Any ideas for an alternative? SolverHandlerForSecondTransform? SolverHandlerForAdditionalTransform? SecondaryTrackedObjectSolverHandler?'
2245,193243717,"b""Sorry, I'm not sure I understand your feedback."""
2245,194579665,"b""DrawPropertiesExcluding() is an easy way to fallback to the default inspector display while excluding the elements you've created custom behavior for. Here I'm excluding m_Script (since it would otherwise show up half way down the inspector pane) and the secondTransformOverride, which is already settable via the transformTargetProperty PropertyField."""
2245,194907231,"b""The intention was to be able to swap anything for any example, but you're right, we need to handle situations when the solverhandler comes back null"""
2245,195804242,"b""You can't apply [HideInInspector] to m_Script because it's not a variable in SolverInBetween."""
2245,196866349,"b""@StephenHodgson I agree with Kurtis, I don't think there's a more elegant way of redoing this. The DrawPropertiesExcluding pattern is much easier to extend and maintain than a full rewrite. If anything, we should encourage other full inspector rewrites to use the DrawPropertiesExcluding pattern instead so it becomes more recognizable. """
2245,197304167,"b""I think that has to do with the way GitHub does comments. If you click the link in this section's header it takes you to the commit the comment was made on. But if you go to the file itself at the tip of my branch, you can see the range property on line 15 as well:\r\nhttps://github.com/Ecnassianer/MixedRealityToolkit-Unity/blob/SolverExampleUpdates/Assets/HoloToolkit/Utilities/Scripts/Solvers/SolverInBetween.cs"""
2488,205206442,b'The idea here is that you should post your proposal before you do the work. That way other developers can comment on your plan and hopefully save you from potential pitfalls. So this is properly present tense.'
2488,205207826,b'Good find!'
2488,205208233,"b'I think both versions of this sentence remain unclear. Should this be ""The event data inside the event handler provides navigation offsets""? I\'m not sure what ""to take your action"" is trying to mean.'"
2488,205208665,b'Little mysterious changes like this make me nervous. Was this an intentional inclusion in the PR? What process added this blank dependency line?'
2488,205209548,"b'This isn\'t a proper use of the word ""startup"". Used as a noun, it is a newly formed company or the initial phase of a process. There is no verb form; it would be properly replaced with the word ""started"".\r\n\r\nThis sentence is probably too verbose in both versions. ""To get started as quickly as possible"" is sufficient.'"
2488,205211141,"b""One rule of thumb I use while writing comments is that if you need to write a comment that explains what your code does, you need to write more easily understood code. Comments should explain WHY you're doing it the way you're doing it, not HOW or WHAT your code is doing.\r\n\r\nHere's a made up example:\r\n\r\n**Good:**\r\n```\r\nOnSleep()\r\n{\r\nNetworkObject.Reset(); // We need to reset our network object, since they can get out of sync if packets arrived when we were sleeping\r\n}\r\n```\r\n\r\n**Bad:**\r\n```\r\n// This function gets called when the app goes to sleep.\r\nAwakeningNetworkObjectRecovery()\r\n{\r\nNetworkObject.Reset();\r\n}\r\n```"""
2488,205211502,b'The extra space you took out follows the normal convention and is not improper.'
2488,205559899,"b""This comment doesn't seem to clarify anything. Why does it refer to the Start() function? Let's just remove this comment\r\n"""
2488,205559927,b'same as my comment below'
2488,205560104,"b""Start() doesn't actually return anything. Let's remove this comment."""
2488,205560194,"b""This doesn't add anything to what isn't already visible in code. Let's remove this one."""
2488,205560251,"b""This doesn't add anything."""
2488,205560289,b'see below'
2488,205560415,"b""This comment says what the code is doing, not why. Let's remove it."""
2488,205560475,"b""This doesn't add anything."""
2488,205560642,"b""This doesn't add anything."""
2488,205560702,"b""This explains what, not why, let's remove it."""
2488,205560843,"b""This doesn't add anything."""
2488,205561365,"b'The coding guidelines say that brackets should always be used:\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/CodingGuidelines.md\r\n\r\nThis is helpful because if someone later comes along and adds a line, it can be confusing why everything suddenly breaks. Keeping the brackets makes the intention of the code very clear, which is the most important part of code. :)'"
2488,205561412,"b""This doesn't add anything, let's remove it."""
2542,208019931,"b""Would it be worthwhile having this as a property that could be set to an arbitrary game object? I'm not sure it will matter since this is the demo scene, but if someone lifts this for use elsewhere I bet they would customize it."""
2542,208035005,"b""What's the goal here? It seems like the only thing that can come from this is unexpected behavior? Would it be better to throw an exception or log an error? Otherwise, why not just offer object reference equality as the definition?"""
2542,208037793,b'Seems like this is at least worth a log. Is there a reason to no do that now?'
2542,208054541,b'Did you intend to make this project settings change? It seems out of place in this PR.'
2569,208414178,"b'In other places we use underscores as categorical separators. Essentially: ToolkitAcronym_ShaderType_AlbedoSettings\r\n\r\nUnder that system, two word color names would look like this:\r\nMRTK_Standard_SkyBlue\r\n\r\nSince transparency is essentially albedo, I thought it made sense as part of the color name. Using MRTK_Standard_Transparent_Emerald seems to imply that we should rename the others to MRTK_Standard_Opaque_Emerald which feels overwrought and excessively wordy.'"
2606,211032218,"b'Erm, it looks like this is not being ported from the latest version of the object collection. Here are very significant changes I made for the June/July release:\r\nhttps://github.com/Ecnassianer/MixedRealityToolkit-Unity/commit/945401107c48493cd1e649c5a92090cf4710a7b8#diff-67828c8d64af75261de12e4344488104'"
2606,211359200,"b'Was this reordering intentional? I generally try to avoid renumbering enums when I add a new one, in part because it breaks existing serialized data. But more generally a philosophy of ""if it\'s not broken, don\'t touch it"". :)'"
2606,211362692,b'We should take the htk->vNext port as an opportunity to rename FaceForward and FaceForwardReversed to FaceParentForward and FaceParentBack. '
2606,211364056,b'I think perhaps this should not appear in this diff?'
2606,211366320,"b""Is this different from Vector2.Angle? https://docs.unity3d.com/ScriptReference/Vector2.Angle.html If so, include the difference in the summary text, since it's not immediately apparent to me what the difference is."""
2606,211368543,"b'This is too generic of a name. ""SortType"" seems like it should have entries for QuickSort, BubbleSort, MergeSort etc. This should be something like:\r\n3DSortType\r\nSpatialSortType\r\nVolumetricSortType\r\nPositionalSortingType\r\nGameObjectSortType\r\n'"
2606,211368955,"b'Does vNext end enum names with ""Enum""? i.e, SortTypeEnum. I\'ve seen both in htk (SortType and SortTypeEnum), but I\'m not sure what the guideline is for vNext.'"
2606,211371501,"b""I think the best way to not have this happen is this:\r\n1) Always keep your fork's mrtk_development free of any changes.\r\n2) When you want to update, merge Microsoft's mrtk_development into your fork's, and it will automatically fast forward with no merge to deal with. Beautiful clean.\r\n3) Create your changes in a branch based on your fork's mrtk_development, don't ever* merge into it.\r\n4) Whenever you get an update from Microsoft's fork, *rebase* your branch to the new tip of your fork's updated mrtk_development branch. """
2606,211402669,"b'That feels like a synonym for ""sort"" to me? And it doesn\'t actually clarify what these are used for. =/\r\n\r\nMaybe we\'re barking at the wrong tree by calling it a sort. Should it be something like SpatialLayoutType instead? SpatialPatternType? 3DLayoutType?'"
2606,211403378,"b'Invisible seems misleading. What if this said ""Whether to include space for inactive transforms in the layout""?'"
2606,211405557,b'see above'
2606,211410053,"b'Would this inheritance be more useful if each SurfaceType called an overridable function? That way you would just override the behaviors you wanted differently, and could leave the rest of the LayoutChildren() function alone? '"
2606,211410136,b'Just seems like this is a huge block of functionality to override. :) (I am lazy)'
2606,211410347,"b""Is this TODO still relevant? I'm not sure what it's referring to"""
2606,211411513,"b'I haven\'t used this, so I\'m not sure what ""transform order"" is, but this documentation doesn\'t help me understand. If you know what this order does, can you improve the summary?'"
2606,211424017,"b""Aha! This all click into sense now that we've talked!"""
2606,211430259,b'Deja vu :D \r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2229#discussion_r192543633'
2606,211430933,"b""I think it is much better to rely on the base's default behavior (as shown here). By overriding that behavior and rebuilding it in our own inspector, we just make it harder to add properties to the class (e.g, they now need to be added in two places to show up in the inspector). From past discussions, I think @keveleigh is of the same opinion."""
2606,211432925,"b""It looks like some of Kurtis' changes got lost in the port, you can see this was fixed in the RadialMapping() function in ObjectCollection.cs here:\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2246/files/64f46d85b93b59faf2fd93f69a18deb9f706cdb0"""
2606,211433070,"b""I didn't bother to find this line in the previous PR, but this was probably also fixed there. (See my comment above)"""
2606,211438264,"b'What I\'m asserting is that the base.OnInspectorGUI() or DrawDefaultInspector() method is ""doing it right"". It removes code duplication and creates a clearer and easier to maintain inspector for future developers.\r\n\r\nThink of it in a more generalized way: say we had a class that provided a virtual DrawMe() function, and then we got a PR to bring in a child class that overrode DrawMe() by copy pasting the body of the parent class\'s DrawMe() and then added a text label at the bottom. We\'d ask for it to be refactored to a call to the parent function followed by adding the text label.\r\n\r\nThis is the same, we\'re inheriting behavior from the default inspector. It\'s bad practice to duplicate that behavior.'"
2662,213793492,"b'Do you see XR as a segment of the spectrum, rather than the entire spectrum itself?'"
2662,213795820,"b'I\'ve always read XR as ""{Wildcard} Reality"", thus the whole spectrum. But you know, we\'re all making this stuff up as we go, that\'s the fun part. :)'"
2662,213797425,b'I only see spaces in your commit. :D'
2606,216419199,b'bump'
2606,216423281,b'I think this now has both type suffixes XD\r\n'
2606,216425105,"b""Ok, I get this now. It's a tricky thing to describe. I can't come up with anything better than Collation Order, so I agree, we should use that. I feel like I had a math class once that had a name for this but I didn't think it would be an important thing to remember..."""
2760,216827431,"b'Good catch, that was just a copy pasting oversight. I removed it.'"
2770,217162527,"b'Line 43:\r\nDrawPropertiesExcluding(serializedObject, fieldsToExclude);'"
2770,217163358,"b'Microsoft, Valve, and Oculus all use ""motion controller"" as a generic term to refer to their devices. Seems pretty platform agnostic to me, and clearer than Tracked Controller IMO.'"
2773,217217457,"b""This was the question I was asking about our assumptions of whether tracker space 0,0,0 always overlaps world space 0,0,0 when the scene starts.\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/issues/2719#issuecomment-420449199\r\n\r\nI found a problem where the controllers were offset improperly and fixed it. I wasn't able to find any other problems with not moving the headset, so I removed this line. We will definitely hit problems if we zero out the offset between the headset and the Playspace. \r\n\r\nIf we can find another specific reason we were zeroing out the offset here, I'll fix that. We shouldn't be changing the position here."""
2770,217483685,"b""This makes the code more readable, and since we're in the middle of a port, it seems like the perfect time to polish up. I'm usually pretty against unnecessary code churn, but I don't think this should be reverted."""
2789,217846252,"b""I'm not very familiar with expression-bodied members, but doesn't this remove the setter? SolverHandlers need a public setter so they can be set to follow non-tracker objects (e.g, any random game object) at runtime. """
2789,218249808,"b'Ah, right. ""secondTransformOverride"" didn\'t show up in the diff, so I got the two mixed up. \r\n\r\nBut I guess that prompts a similar question. If this becomes read only, how does gameplay logic tell the solver to start tracking a motion controller again? It has to find the proper motion controller in the scene and override the TransformTarget? That seems like an undesirable complication.'"
2795,218282735,"b'As context: I\'ve only been getting involved with vNext over the last week or two, so I\'m very unfamiliar with how stuff below the UX layer has changed. The discussion around Solvers has been a crash course for me. :)\r\n\r\nI\'m only now starting to better understand the full scope of what controller visualizers are responsible for, and in many ways I think the name ""Visualizer"" has lead me astray on more than one occasion. As someone who hasn\'t been part of building the lower layers of MRTK, I assume a ""Visualizer"" is something that handles the visuals of the thing; meshes, textures, _maybe_ positions. But what I gather from how @SimonDarksideJ , @StephenHodgson , and this code uses the term, it is meant something more like ""Scene Visualizer""; an scene object which is the manifestation of a device in the scene. Something like an avatar. It\'s far more than just the visuals.\r\n\r\nBased on that understanding, I am going to put forward a hypothesis that @SimonDarksideJ and @StephenHodgson expect ControllerVisualizers to eventually have a whole suite of abstracted concepts. Handles, buttons, speaker and joystick locations might all be game object pieces of a ControllerVisualizers. There might be a world where an MRTK user could get a ControllerVisualizer, find a Speaker controller on it, and pass in an audio clip to be played on the controller\'s speaker. All in a cross-platform way that requires no knowledge of what actual hardware is attached. (Maybe not that in particular, but it\'s an example to give a sense of the scope.) \r\n\r\nAgain, extrapolating from what I think ya\'ll are saying: For every Device class, there will be a Scene Visualizer class. Nothing in the User Abstraction Layer should ever talk to a Device. Scene Visualizers are an MRTK Construct (or is it the MRTK Interface Layer? Side Note: What\'s really the difference?), so they\'re cool to talk with the fun Unity toys in User Abstraction Layer. \r\n\r\nOh... I just realized this is MVVM. Scene Visualizers are the View Model. The User Abstraction Layer is like the View. The Model is the Device.\r\n\r\nThis is in contrast to the architecture which I first assumed, which is that the Device layer offers interfaces to abstract things like ""Controllers"", which are free to be used by the User Abstraction Layer. Definitely a simpler architecture, but it has the downside of mingling the work of keeping track of a complex piece of hardware with the work of translating the output of that data into friendly formats. \r\n\r\nA ""Controller"" might be an abstract interface in the MVVM paradigm, but unlike in the simpler architecture, it\'s an abstract interface to be used only by the Scene Visualizer (AKA the View Model). There might be another abstract interface called ""ControllerVisualizer"" for use by things in the User Abstraction Layer (or maybe we would use more descriptive names for both like IControllerDevice and IControllerVisualizer).\r\n\r\nSo anyway, if I have captured the intent, I want to argue that ""Visualizer"" is a very confusing name for us to extend to people using MRTK. It seems too specific to rendering, and not the host of things that a View Model is responsible for doing.'"
2795,218545394,"b""Hmmm, maybe I don't understand the role of the DeviceManager/MRManager, @SimonDarksideJ ?\r\n\r\n>  the View - connecting a model to a vm\r\n\r\nIn MVVM, a View doesn't connect a model to a VM, in fact, it may not necessarily even correspond to a specific model of the data (though it does correspond to the *kind* of data that's stored in that model [a birthdate View can't connect to a Model of a audio clip]). The ViewModel is the class responsible for translating things like Unix Time (how it's stored in the model) to a string (what the View wants to display), and the View handles how strings look on the screen. A robust View Model might support several views (VM.TimeAsAudio(), VM.TimeASSentence(), etc). A View just wants a string or a number, some data to bind to. You could rewrite the model from a binary tree into an SQL database into a decryption tool and the View wouldn't need to change at all, it only talks to the ViewModel.\r\n\r\nMy understanding was that the Managers are sort of utility classes that help the Scene Representations stay coordinated/initialized with the device models, and helps the Views (User Abstraction Layer) get references to the right Scene Representations. I could see that described as part of the View Model, or alternatively simply a utility outside the MVVM paradigm (like a DNS service isn't specifically a part of the client-server paradigm, but is a necessary utility for implementing a client-server paradigm)."""
2795,218554775,"b'""GetVisualizerForHand()"" returning a controller is confusing on AR devices that support both hand tracking and motion controllers. This should probably be GetVisualizerForMotionController(), since a device might have both a right hand and a right motion controller at the same time.'"
2795,218556829,"b""I am a little concerned about the assumption that there is only one right handed motion controller at a particular time. There's nothing that prevents a person from connecting multiple bluetooth controllers. I might be a fine choice to just give them the first right handed controller the same way GetComponent<>() just gives the first component it finds, but I wish it was a little more explicit (or we should also offer a GetVisualizersForHand() that returns an array of all of them the same way there is a GetComponents<>()?)"""
2795,218557686,"b""None doesn't seem like a good default here, since it essentially means when it gets added it is in a non-functional state. Head is a better safe default."""
2795,218560177,"b""Doesn't making Awake asychronous violate Unity's order of operations contract?\r\nhttps://docs.unity3d.com/Manual/ExecutionOrder.html\r\n\r\nThough the Awake() docs don't specifically say Awake cannot be async, it does say it can't be a coroutine:\r\nhttps://docs.unity3d.com/ScriptReference/MonoBehaviour.Awake.html\r\n\r\nIt seems safer to stick with the spirit of Awake() and finish up before any Start()s get called. """
2795,218560731,"b'I like this addition, for completeness.'"
2795,218568565,"b""This isn't specific to SolverHandlers, and should be a utility function offered by another class/library. Otherwise we'll write it over and over again. Is there already a good place to move it?"""
2829,220021276,"b'Maybe we should take the lead from Vector3.Up, Vector3.Forward, Vector3.Left, Vector3.Back etc?\r\nhttps://docs.unity3d.com/ScriptReference/Vector3.html\r\n\r\nUp\r\nUpRight\r\nUpLeft\r\nUpForwad\r\nUpBack\r\n\r\nDown\r\netc\r\n\r\n?'"
2773,220041561,"b""Right, that's why I brought up the assumption in the other thread. We should be doing this somewhere else, but I don't know where.\r\n\r\nIt is totally reasonable for us to require that Camera to be at 0,0,0 in the scene before everything starts, I'm not disagreeing with that, but once we've offset the camera via tracking we can't arbitrarily zero it out in the TeleportManager.\r\n\r\nIf the scene starts and the physical headeset is 5 meters to the left of the center of the tracking space it should not be at world space 0,0,0 on the first frame its view renders. It should be at something like 500,0,0. (That doesn't preclude it being at 0,0,0 before tracking moves it the first time though).\r\n\r\nLook at it the other way: If a developer doesn't want to use our teleport manager, they disable it, this code never runs. That doesn't mean we still don't need to enforce a 0,0,0 camera in the scene, so we need that code to live somewhere else. If we're enforcing it somewhere else, we don't need it here."""
2840,220767688,"b""Sorry, I haven't been following this PR/issue. What is DiagnosticVisualization for? I'm not familiar enough to know how this relates to ControllerProxies (or another kind of scene proxy?)."""
2840,220774010,"b""I'd only name it a Proxy if it's a game object proxying something that lives in the device layer. If it's just a game object for visualizing diagnostic data, I think Visualization or Visuals or Visualizer are all fine names."""
2840,221028738,"b'We shouldn\'t just replace Visualization with Proxy everywhere in the code base. There are things which are just for visualization, and there are things that do more than visualization. If it does more than visualization, then it *might* be a Proxy.\r\n\r\nA proxy might have a reference to something it calls a Visualizer. It could be a render component, or a Transform, or a Game Object, but that Visualizer thing would only be about drawing visuals.\r\n\r\nIf we find a class that does visualization, and it goes beyond that and does more than visualization, then next question we should ask (according to Simon\'s definition on your fork) is ""Is this an agent working on behalf of another entity?"". If the answer is yes, then there\'s a good chance it\'s a proxy. I\'d go a step further and suggest it\'s a Proxy only if the ""another entity"" is a device in the Device Abstraction Layer.\r\n\r\n@ryzngard It seems like what you\'re doing here is not a device proxy like the ones we\'re discussing in another thread. Unless I misunderstand what you\'re up to, you don\'t need to rename it.'"
2844,221059877,"b""Since this is just a copy paste from that other doc, do you mind if I make these changes in a separate PR. That way it's just a huge subtract from the other file and a huge word-for-word add here."""
2844,221059909,b'Same as above.'
2773,221121352,"b""It wasn't, though it was sort of by design. My intention was to follow up with another PR that handles situations like that more robustly, perhaps even giving a warning when compiling. Would you be satisfied merging this if I created a task to track better handling incorrect parents and worked on it next week?"""
2773,221122169,b'Went ahead and created the task whether it goes in this PR or not:\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/issues/2850'
2812,221122719,"b""Super useful for debugging! :)\r\n\r\nAlso, it's a good reminder that our project may end up in headless servers, asymmetric multiplayer clients and other non-MR experiences, which requires at a minimum that it doesn't fail to build for Standalone PC."""
2853,221381445,"b""I don't know for sure that this exists, but is there not a way to do something like this:\r\n(setting.Type)update;\r\n\r\nWhy do we need to keep the setting value in these type specific fields? Only one of them can be set at once, right?"""
2853,221382585,b'Feels weird that this appears in several places. Should it be in a single place the project profiles? Would someone really want to set it to one value on a ButtonLayout and another on a ButtonCollider?'
2853,221382765,b'Same as above\r\n'
2853,221382888,"b'Though ""ButtonSize"" might be the class where the single reference belongs, if it\'s not in the profiles.'"
2853,221383457,"b'Default  = 0,\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/CodingGuidelines.md#initialize-enums'"
2853,221383929,"b""Is this code being saved for something else? If you're about to revisit it in your next PR, add a //TODO comment explaining what needs to be done, otherwise best to delete it.\r\n\r\n"""
2853,221384442,"b'Kinda unclear what ""arr"" is here. Is there a better name that we could use?\r\nAlso would help if all these functions had summary comments.'"
2853,221385961,b'Is this supposed to be commented out?'
2853,221386133,"b""We should probably display differently if we can't edit events. At the very least, there should be a label that they're readonly."""
2884,223098764,"b""I didn't touch any fonts I think it's just a serialization update."""
2884,223126744,"b""I went ahead and removed them so there's no uncertainty."""
2903,223898345,b'Why do we override the default script icon?'
2937,226127466,"b""Does changing the offset while the game is running actually work? I though we disabled this field since we don't regenerate the offset transforms once they're set. Does the AdditionalOffset and AdditionaRotation accessors reinitialize the offset transforms?"""
2937,226127919,b'Will things like puck trackers and other accessories need to be reversed too?'
2937,226388718,"b'Ah, I missed which branch this was going into!'"
2937,226389109,b'Awesome!'
3111,232420805,b'Seems like this should stay local?'
7490,388370073,b'Done!'
7490,388370251,b'Sounds good'
7490,388629900,"b'What would the deprecated property do though? Wouldn\xe2\x80\x99t it be fully broken? Also, what would we name the new property?'"
7490,388630880,"b'I could re-think things a little in an effort to keep it backwards compatible. Perhaps I could change these to properties that access an internal dictionary. . .\r\n\r\nJust saying it out loud doesn\xe2\x80\x99t sound quite right. This change certainly could bite someone, but it feel like a reasonable change to make with an appropriate release.'"
7490,388681996,"b'We could change this to an attribute, and return the \xe2\x80\x98 GltfMeshPrimitiveAttributes\xe2\x80\x99 instance hydrated with data from the dictionary. '"
7490,388682816,"b'Well, custom attributes is one use case that motivates making some of this public. I\xe2\x80\x99m sure more thought could be put into exactly what the public interface should be.'"
7490,391701638,"b'Doh, good catch. That should not be there. '"
99,69914873,"b'Hmmm.... I should have diffed this before committing. Te scene works fine, but I have no idea what all these deleted lines are about. Is this a problem?\n'"
99,70170659,b'Will do\n'
99,70388403,"b'Yes, it should. I left it in here becuase it took me a long time to find an RE that actually worked but in the end I plumped for the brute force method as it would allow a progression to encoding in SSML instead of text.\n'"
48,65247425,b'Nit: Probably want string.IsNullOrWhitespace\n'
48,65247445,b'Nit: Probably want string.IsNullOrWhitespace\n'
48,65247635,b'BitConverter.ToInt32 is probably more appropriate\n'
48,65248059,b'BitConverter.ToSingle is probably more appropriate\n'
53,65461196,"b'Was GitHub automagic, will manually edit and rebase.\n'"
87,69593294,b'Nit: Use the TimeSpan class to clean up manual arithmetic\n'
87,69593434,b'Nit: Something more descriptive than AppDesc would probably be preferred\n'
87,69593910,"b""Hm, is this needed? I don't remember having to kill apps that were running. Thought AppX tooling on the device handled this for us.\n"""
87,69594464,"b""Nit: Didn't see any coding style guides, but this would probably be a lot more readable with some line breaks (or converted to Method syntax).\n"""
87,69595332,"b'Nit: In a future rev., we should look this up in the registry as this can be configured differently.\n'"
87,69644571,b'Switch to EditorGUILayout.PasswordField so we get masked input in editor\n'
119,70732665,"b'This introduces ambiguity that will bite people. PFN should remain and propagate all the way out. Require callers and users to use PFN. Think of a theoretical ""Messenger"" scenario.\n'"
117,70859417,b'Entire file needs to be de-tabbed.\n'
117,70859952,b'Nit: Reminding myself to refactor the unmanaged code to eliminate a lot of these warts.\n'
117,70860436,b'Nit: May want to decorate all these imports with ExactSpelling = true to avoid any implicit oopsies.\n'
119,71070479,"b""Hm. So I see QueryAppDetails is called many times for package-specific tasks, like killing, uninstalling, getting logs, etc. These are all unique to the package the developer is deploying/working on. Name is not unique enough for these tasks. (For example, there can be two Messenger apps installed.)\n\nBut you're right PackageFullName isn't right either as it includes versioning information. (I get all these identity terms jumbled up, need a poster to affix to my wall!) If the user wants to deploy 0.2 and wipe 0.1, this would fail.\n\nInstead the middle ground here is use of PackageFamilyName. This is unique to the package, sans versioning, platform, and PRAID info. Can be read from `Identity/@Name` in the appx manifest.\n"""
130,71632848,"b'Nit: Might be a little nicer to do something like:\n\n```\nvar xdoc = XDocument.Load(appxManifestPath);\n\nvar nsm = new XmlNamespaceManager(new NameTable());\nnsm.AddNamespace(""p"", ""http://schemas.microsoft.com/appx/manifest/foundation/windows10"");\n\nvar name = xdoc.XPathSelectElement(""/p:Package/p:Identity"", nsm).Attribute(""Name"");\n```\n'"
130,71632928,"b'Nit: May want to use string.IsNullOrWhiteSpace here to cover "" "" case\n'"
130,71765556,"b'Don\'t you work at Microsoft and wrote this in the course of work on HoloLens? You may want to review your employment terms that likely automatically claim ownership in this case. (You checked the second box in the CLA, right? https://cla.microsoft.com/cladoc/microsoft-contribution-license-agreement.pdf)\n\nIf I were the author, the CLA I signed grants me the ability to retain ownership of the code I submit. So I could certainly see adding ""Copyright (c) Rafael Rivera"". As long as I agreed my submission would be licensed MIT everything should be OK. Microsoft employees could come in later, make a fix, and add ""Copyright (c) Microsoft Corporation"" on line 2 too.\n\nBut I\'m not a lawyer or work in LCA.\n'"
130,71768976,"b'I think this is definitely worth a new issue for tracking, maybe get LCA or the lead to track this down?\n'"
134,71982401,b'Nit: Empty lines\n'
134,71982407,"b'Nit: Nuke TODO, reformat comments in entire file as:\n// This is a comment\n'"
134,71982495,"b'Nit: I\'d remove everything after ""Update this camera for HoloLens defaults?"", avoids having to update this string blob when more defaults are added. Can move those details in docs if absolutely needed.\n\nIs it ever appropriate to update subsequent cameras in a scene like this? Not sure anyone would hit Yes here... e.g. they\'re probably using another camera to clear depth info for UI\n'"
134,71982504,b'Nit: Can we replace all these weird spaces with \\t? Or a bullet?\n'
134,71982543,"b'Nit: isUnityCSharpProjs could probably be renamed to be more descriptive, e.g. generateCSharpProjectsEnabled\n'"
134,71982567,"b'Nit: Seems this can be put in docs, not really needed in a dialog.\n'"
134,71982593,b'Nit: Delete\n'
134,71982602,b'Nit: Delete\n'
134,71982648,b'Nit: Might be time to put all these long strings into a resource file.\n'
140,72565403,b'Nit: Extra space\n'
185,75720510,b'Typo: strint\n'
185,75720872,"b""Nit: I'd use the Version class here to cleanup the manual string manipulation (e.g. Version.TryParse)\n"""
219,79310753,b'Nit: Spelling: Recommended\n'
219,79310760,b'Nit: Spelling\n'
219,79310851,"b'Perhaps ""Recommended with Internet Access"" would be clearer\n'"
221,79708538,"b""I'd eliminate all the public fields (go private) and expose properties only.\n"""
841,132599786,"b""I'll double check that formatting. \r\n\r\nThanks!"""
878,134047285,b'Hmm have the normalized and cumulative values gone from signature? '
878,134047703,"b'This beta release does not address the API changes, just the security update.'"
878,134047975,"b""I just downloaded b8 from Unity's site, and it will not build without these changes. What are you referring to?"""
878,134048439,b'[Critical Security Patch](https://unity3d.com/security?utm_campaign=other_global_information_2017-08-17-Global-Editor-Security-Notification&utm_content=2017-08-17-Global-Editor-Security-Notification&utm_medium=email&utm_source=Eloqua)'
878,134048593,"b""It doesn't address the cumulative updates that's been done with the other beta builds."""
1012,141133858,b'Why are we unwrapping this for now?'
1012,141134226,"b""Just for now. The dev branch didn't have this wrapped and we've got to go back and fix this."""
1015,141157575,b'Why was this removed?'
1015,141157828,b'Good question.'
1015,141158041,"b""I'll re-add it in my incoming merge PR"""
1015,141158298,"b""I guess it doesn't matter too much, since this is the end of the method either way. For consistency's sake, I'm re-adding it."""
1015,141158444,"b'Oh I see. It was the last return, which was redundant, and my formatting tool removed it.'"
1028,141409376,b'Should we move the tags parameter to the end of the statements that use it and make it null by default as well to keep it compatible with the master branch?'
433,93983870,"b'I think that removing the OnEnable / OnDisable calls here will create a bug where some input sources that are event-based (GesturesInputSource, for example) will still trigger events when they are disabled. You need to make sure that these input sources implement OnEnable and OnDisable, and properly Start / Stop their recognizers when needed.'"
433,93984180,"b'I see you did that with SpeechInputSource, it probably just needs to be added to GesturesInput'"
433,93984351,"b""I am for making this change because of all of its benefits, but just pointing out that the reason these event handlers originally existed was to allow developers to hook into the input sources directly if they wanted to bypass the input manager for some reason.\r\n\r\nI don't think that this change prevents users from doing that: they could simply use InputManager and have a class that registers itself as the one modal listener for their application, which would achieve the same purpose. Just adding this comment for awareness :)"""
433,94009911,"b'@maxouellet I added a check in InputManager.HandleEvent() to handle this issue.\r\nAlthough this is not the focus of this PR, I also replicated the behavior of SpeechInputSource into GestureInput. I found some inconsistencies there as it contains two GestureRecognizers. One of them was not being disposed. Please check it out too.\r\n'"
433,94083047,"b""The check you added to HandleEvent checks if InputManager itself is enabled / disabled. I was talking about an individual input source being enabled/disabled.\r\n\r\nFor example, if GesturesInput is disabled, it shouldn't be sending its events to the InputManager. The fix you made seems to address the issue properly (and the dispose seems good too)."""
572,107669057,b'Breaks cross platform input support'
341,89190924,b'Why make a second singleton type class?'
341,89210537,"b""There is still a lot of code that depends on a singleton GazeManager and this would allow a smooth transition.\r\nAll input sources should derive from BaseSingletonInputSource but this prevent them from deriving from Singleton<> so I created this one. \r\nI now think it's better to derive GazeManager from the existing BaseInputSource and add the singleton properties and methods but with Instance marked as Obsolete. What do you think?"""
341,89327728,"b""I'm not sure. I think @maxouellet and @paseb should weigh in."""
341,89371109,"b""I don't think we should make a second singleton class. I'm a little concerned about duplicating code here, and making GazeManager more complicated than it needs to be. I am not a fan of making GazeManager into an input source."""
341,89454784,"b""I agree. Once managers become input sources or focus sources they won't need to be singletons. This was just a hack to ease the transition."""
1936,180595806,b'please explicitly state visibility for class variables'
1936,180596255,b'what is the multiply by 5 accomplishing? is this something that should be configurable?'
1936,180826263,b'changes to this file are from previous commit(s) by other developers.\r\nIts not part of the Tooltip commit.'
1936,180826445,b'changes to this file are from previous commit(s) by other developers.\r\nIts not part of the Tooltip commit.'
1936,180826670,b'ill make the change anyway because its clear what the effect would be.'
1936,180827658,"b'You may wish to rebase against the may18_dev branch to eliminate files that you are not modifying. the branch was updated to ""final"" 2017.2.1.4 changes yesterday.\r\n\r\nThanks for being willing to change this, though after the rebase you may not need to :)'"
1936,180827949,"b'You may wish to rebase against the may18_dev branch to eliminate files that you are not modifying. the branch was updated to ""final"" 2017.2.1.4 changes yesterday.'"
2061,186884566,"b'I think these should just be switched straight up. [The source is obsolete](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/may18_dev/Assets/HoloToolkit/Input/Scripts/InputSources/SupportedInputInfo.cs#L15) for all versions, not just 2017.1 or newer.'"
1690,166484090,"b""What if I'm using a global listener and I don't want/need to pass a specific GameObject in? Can we give `listener` a default value (probably `null`), like we've done with the others? That'd also prevent this from being a breaking change."""
1690,166736202,"b""Good question. \r\n\r\nI don't think it's a good idea to make the object you're using to start the dictation a global listener.\r\nBut if you did, you'd have a script on the object that listens for the click handler:\r\n\r\n```\r\nOnInputClicked(EventData eventData)\r\n{\r\n    StartCoroutine(DictationManager.Instance.StartRecording(gameObject);\r\n{\r\n```"""
1690,166771893,"b""Ahh, I didn't mean the starting object being a global listener, but the one being sent the dictation results. If I want a button to start recording, but I want the results to be sent to a global listener (or two), my button would be forced to pass in some GameObject anyway."""
1690,166776944,"b""Okay, I'll make the listener optional."""
541,103600966,b'Just curious if there is a reason to be explicit about the string conversion here? The end result should be functionally the same.'
541,103602058,"b'I have a personal preference here for using the `inputManager` field from the inherited BaseInputSource class instead of `InputManager.Instance` everywhere. Besides being more verbose, its also ever so slightly less efficient to perform property access vs a field... but mainly its about the extra code length. '"
541,103603767,b'boxing'
541,103603879,b'I actually have a suggestion about making all the `InputManager` members static to remove the `.Instance` verbosity (https://github.com/Microsoft/HoloToolkit-Unity/issues/534)'
541,103604305,"b""I didn't realize one could grab the `inputManager` field from the base class.\r\nI was thinking _hey it's a singleton so I can just get it directly._"""
541,104800947,"b""I don't have strong feelings about this, but my understanding is that the standard across this codebase is to use CamelCase for constants, not ALL_CAPS."""
541,104801268,b'Same comment that @thebanjomatic made applies here'
541,104803055,"b""No worries, doesn't bother me one way or the other. I'll adjust my formatting wizard and revert."""
541,104803093,b'Will revert.'
541,105720093,"b'These constants names should start with an uppercase letter, as was the case originally. Relatively sure that the coding standard across HoloToolkit is to have constants start with an uppercase, even if they are private. '"
541,105720307,"b'Once you fix that, changes look good.'"
541,105724059,"b""It seems to be different everywhere.  I've seen UPPERCASE and CamelCase for const values."""
541,105726432,"b""My take on it is that it should be CamelCase (with uppercase fist letter). That's what it is internally in the team that wrote most of these addons in the first place.\r\nThat being said, in case of doubt, I'd say we should do the minimal change and not change how variables are named when we don't need to, unless it's a clear bad naming convention violation. This prevents unnecessary conflicts with other changes that might have pending by other contributors. So in this case, they'd stay with their original CamelCase naming.\r\n\r\nOtherwise this change looks good to me"""
541,105726686,"b""No worries, I'll be sure to look out for this in the future."""
541,105730321,b'What about for public const variables?'
820,131004683,b'Why the name change?'
820,131018818,"b'The name change is to better match the platform terminology. There\'s both a ""pointer ray"" and a ""grip ray"".'"
820,131020033,b'SupportsPointing made sense since this promotes the point and commit interaction vs gaze and commit. Ray could be anything.\r\nThoughts?'
820,131020861,"b""That's true! I renamed it to better show that there's more than one kind of ray, instead of just a pointing ray. Though, I don't know how often the grip ray will be used or how useful it is. I'm happy to revert!"""
1028,141232718,"b'nit: this ampersand is highlighted red for me on GitHub. I guess change it to an ""and"" to make it happy?\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/30893345-7ca21ae8-a2f2-11e7-92f3-62d4cbcc85fe.png)\r\n'"
1028,141234403,"b""I see it too, but I don't think it's anything to worry about.  Just some formatting thing on Githubs side."""
1028,142283329,"b""@keveleigh I figured out why it's marked red.  The `&` should be escaped to `&amp;`"""
1028,142493506,"b'This check is backwards. This is the editor input script, so we want it in the editor'"
1028,142494800,b'Is `&amp;` actually what you wanted here?'
1028,142498122,b'Yeah https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1028#discussion_r142283329'
1028,142498997,b'Good catch!'
936,139836215,"b'nit: missing a space between ""."" and ""Create"".'"
572,107669505,"b'I don\'t think it\'s a good idea to use ""Fire1"" for a presses. \r\nShould be mapped to something that describes what it is better, like ""XboxJoystickA""'"
572,107669593,b'Where are the rest of the joystick mappings?'
572,107766627,"b""This is Unity's default input name for the A button, so we wanted to make a script that works as much as possible out-of-the box. If a developer wants to use a different mapping/name, it's easy to customize in the inspector."""
572,107796739,"b'I very much disagree.  This wouldn\'t work ""out-of-the-box"" without modifying the input manager first anyway, unless devs are getting a copy of the input manager from the toolkit, which if that\'s the case then should be better named.'"
572,107807179,"b""> as much as possible out-of-the-box\r\n\r\nNot 100%, just as much as possible.\r\n\r\nI think the only additions they'd need to make in the scripts current state are mappings for the controller joysticks, and our goal is to minimize those changes."""
572,107808248,"b""No worries, I suppose it wouldn't matter anyway since one could just put in a new string."""
1415,153284310,"b""I frankly don't understand why the complicated new class for something simple like this. So I need to now implement interfaces to handle GamePad which previously just worked?\r\n"""
1415,153293369,"b""Yes, because if you weren't implementing the interfaces you were not handling the input correctly.\r\n\r\nThis new class isn't intended to complicate, and this isn't just something trivial to add onto the `InputManager.prefab` that doesn't follow the appropriate implementation patterns."""
1415,153300955,b'Then GamepadInput.cs cannot be marked obsolete. We have to keep the simple implementation working for everyone. '
1415,153301336,"b'The new, simple implementation is `XboxControllerHandlerBase`'"
1415,153549181,"b""For the most part the underlying logic is the same, with the difference here being that we're handling the input properly though the interface.\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/33331592-d87cd164-d416-11e7-824e-4147b1d7beba.png)\r\n\r\nThe important thing here is customization of the `Select` and `Horizontal Navigation Axis` that were hard coded previously.  Now users can map their own with easy dropdowns.  Because of the updated code structure, devs can now inherit directly from this class and implement their own additional logic on top of the standard inputs."""
433,94082897,b'Might make sense to simply call StartGestureRecognizer here.'
433,94085957,"b""It's just because all the ifs in StartGestureRecognizer are useless in here and it's how the both KeywordManager and SpeechInputSource have it."""
433,94510406,"b""nitpick: shouldn't this now be called StartGestureRecognizers (plural)?"""
433,94613567,"b""What's plural about this?"""
433,94821735,b'This change is starting both recognizers now:\r\ngestureRecognizer and navigationRecognizer.'
433,94821924,b'Not related to this change but we do lose the headRay. Do we carry that forward to the event handler?'
433,94828643,"b""Because the input system forwards information to whatever is being gazed at, I don't think you need the head ray coming from the gesture itself. On top of that, if you somehow need to know the current stabilized head ray at any point in time, you can ask GazeManager."""
433,94834597,b'Well that works for a scenario when looking at the same hologram when interacting. But there are scenarios where I could look away but still be interacting with the\xc2\xa0previously gazed at\xc2\xa0hologram. Especially in manipulation like scenarios.'
433,94855585,"b""Yes, which is why you can query the GazeManager for your head ray. Ideally, the gaze ray (coming from GazeManager) would be added to the input event data that your class gets from InputManager, but it isn't right now, so you have to query GazeManager.\r\n\r\nUsing the gesture's head ray wouldn't be correct in all cases, because it wouldn't take into account the stabilization of the head ray that the app might be doing."""
433,95078125,"b""@DanHolbert @NeerajW That's an internal implementation\xc2\xa0detail that the user should not need to know (as this is a public method).\xc2\xa0I copied this from the KeywordManager to keep it coherent but\xc2\xa0I think these should be called simply Start and Stop.\xc2\xa0The name of the classes don't include Recognizer and there's no need to know there's one or more inside."""
827,131238483,"b""Why did all the UNITY_EDITOR directives get removed? It's useful to use these APIs in the editor when using Unity remoting."""
827,131246714,b'UNITY_EDITOR is redundant even when remoting'
827,131247882,"b""Ahh, so this code will still run in the editor with the UNITY_WSA flag? Sweet, I didn't know that!"""
827,131251485,"b""Really it shouldn't matter even when remoting because the build should already be WSA"""
827,131265403,b'Sounds good'
910,137421577,"b'can interactionSource be null?  \r\n\r\nand since interactionSource is public, is the casing right?'"
910,137663794,"b""Since this constructor will only be called by Toolkit code (and the InteractionSource comes from the platform to begin with), I don't believe it can ever be null."""
910,137664744,"b""oh, I see, this isn't a monobehavior.  It has a constructor. :) """
354,90497602,"b""From a naming perspective, I wonder if this should be something like SpeechKeywordRecognizedEventArgs, or something else. I don't have a problem with Phrase, just bringing up the discussion in case somebody has a strong opinion on it. """
354,90544399,"b""This is the UnityEngine.Windows.Speech naming but I also don't like it much."""
354,90544860,"b""Yeah, I'm OK with leaving like that for now unless someone comes up with a better name. Makes sense to align with existing name for things."""
354,90632161,b'@maxouellet I just noticed that changing to SpeechKeywordRecognizedEventArgs avoids having to use explicit namespaces because of name clashing. I would then change the IInputSource event to SpeechKeywordRecognized. What do you think?'
354,90693128,"b'That works for me, I agree that having to use explicit namespaces is annoying.'"
572,107670259,b'breaks cross platform input support'
708,119959359,b'Are these removed intentionally?'
2872,222144175,b'This class behaves so different for UWP and non-UWP. Is there a more clever way to do this without pragmas everywhere? '
2872,222145059,b'\xf0\x9f\xa4\xae '
2872,222145151,b'Ah! I missed that this was for HTK only'
2872,222147484,"b""The only downside to using the concurrent queue is that it technically has different behavior. Here, and in the issue you linked, the queue gets drained all at once before allowing more work to be added. We could get in a state where the thread locks waiting for the queue to drain while continually adding work. \r\n\r\nI wonder if a CopyTo would be the best approach if we wanted to snapshot the queue per execution call...\r\n\r\nQueue also has a [SyncRoot](https://docs.microsoft.com/en-us/dotnet/api/system.collections.queue.syncroot?view=netframework-4.7.2), but I'm not sure that's really any better. It at least would work if someone used the Queue as a [Synchronized](https://docs.microsoft.com/en-us/dotnet/api/system.collections.queue.synchronized?view=netframework-4.7.2)\r\n"""
2896,223887823,"b""This is only for us to build the dll, but would be based on the project it becomes a part of. Since we aren't packing the unity dlls, the resolution would still be on the consumer.\r\n\r\nAs an aside, all of these variables can be overridden as build parameters as well"""
2896,223894867,"b""I highly recommend, but there are definitely some caveats we'll have to work through. We can talk in person about some of the shortfalls I've hit, or likely you'll see me having to address them in future PRs :) """
2896,223899378,"b""Potentially. I care a little less about where they are put, and more that they exist and work as intended. I haven't looked at the code that looks for these dynamically, but I know I hit an issue if I changed the structure too much. This might be worth a follow up issue to track """
2896,223903010,"b""More importantly, that means that UnitySetup could be used to provide override parameters for build. It wouldn't be necessary for you, a consumer of the nupkg, to care how we resolve the binary dependency; you would only need to make sure you do. That's where documentation of Unity Versions Tested will be really important. \r\n\r\nIf you wanted to include this as a paradigm for your builds, you could override easily. An example is the version number (which is easily visible because of the nupkg output)\r\n\r\n```\r\nS:\\src\\mrtk_ryzngard\\Build\r\n[feature/mrtk_packageManager \xe2\x89\xa1]\r\n>dotnet pack /p:Version=5.4.3-donotpublish\r\nMicrosoft (R) Build Engine version 15.8.166+gd4e8d81a88 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 38.73 ms for S:\\src\\mrtk_ryzngard\\Build\\MixedReality.Toolkit\\MixedReality.Toolkit.csproj.\r\n  Restore completed in 38.73 ms for S:\\src\\mrtk_ryzngard\\Build\\MixedReality.Toolkit.SDK\\MixedReality.Toolkit.SDK.csproj.\r\n  MixedReality.Toolkit -> S:\\src\\mrtk_ryzngard\\Build\\__output\\net471\\MixedReality.Toolkit.dll\r\nS:\\src\\mrtk_ryzngard\\Assets\\MixedRealityToolkit\\_Core\\Inspectors\\Utilities\\Lines\\DataProviders\\ParabolicConstrainedLineDataProviderInspector.cs(16,36): warning CS0169: The field 'ParabolicConstrainedLineDataProviderInspector.endPointPosition' is never used [S:\\src\\mrtk_ryzngard\\Build\\MixedReality.Toolkit\\MixedReality.Toolkit.csproj]\r\nS:\\src\\mrtk_ryzngard\\Assets\\MixedRealityToolkit\\_Core\\Inspectors\\Utilities\\Lines\\DataProviders\\SimpleLineDataProviderInspector.cs(14,36): warning CS0169: The field 'SimpleLineDataProviderInspector.endPointPosition' is never used [S:\\src\\mrtk_ryzngard\\Build\\MixedReality.Toolkit\\MixedReality.Toolkit.csproj]\r\nS:\\src\\mrtk_ryzngard\\Assets\\MixedRealityToolkit\\_Core\\Inspectors\\Profiles\\MixedRealitySpeechCommandsProfileInspector.cs(27,28): warning CS0169: The field 'MixedRealitySpeechCommandsProfileInspector.screenWidth' is never used [S:\\src\\mrtk_ryzngard\\Build\\MixedReality.Toolkit\\MixedReality.Toolkit.csproj]\r\n  MixedReality.Toolkit -> S:\\src\\mrtk_ryzngard\\Build\\__output\\netstandard2.0\\MixedReality.Toolkit.dll\r\n  MixedReality.Toolkit.SDK -> S:\\src\\mrtk_ryzngard\\Build\\__output\\net471\\MixedReality.Toolkit.SDK.dll\r\n  MixedReality.Toolkit.SDK -> S:\\src\\mrtk_ryzngard\\Build\\__output\\netstandard2.0\\MixedReality.Toolkit.SDK.dll\r\n  Successfully created package 'S:\\src\\mrtk_ryzngard\\Build\\__output\\MixedReality.Toolkit.SDK.5.4.3-donotpublish.nupkg'.\r\n  Successfully created package 'S:\\src\\mrtk_ryzngard\\Build\\__output\\MixedReality.Toolkit.5.4.3-donotpublish.nupkg'.\r\n```\r\n\r\nDotnet uses msbuild, so any msbuild paradigms transfer across. """
2896,225396647,"b""That's the plan for now. Feature branch won't merge until we've fixed issues. """
3159,234355786,"b'Should we add `DebugUtilities.LogCriticalError(string message, Exception e)` to have common formatting? '"
3159,234356457,b'What if we had `RegisterService<T>(Func<T> factory)` and simplified this across all of them? '
3159,234356644,b'Callers would do `RegisterService<IMixedRealityInputSystem>(() => Activator.CreateInstance(\xe2\x80\xa6))` '
1362,150913557,"b'Hmm, just tested and the behavior is different. GetWindow creates a new window if there is no window open and it defaults to emulationmode.none. '"
1362,150927775,"b'Ok, so now we wait for Unity to expose something that may be more helpful?'"
7917,427833356,"b""Didn't notice the LeapMotionProvider is built to a separate assembly. Removed the guards."""
7917,427835504,b'Guards were indeed not needed => removed.\r\nI also changed the example to display a message that Leapmotion is only supported in editor when in a UWP build.'
341,89210537,"b""There is still a lot of code that depends on a singleton GazeManager and this would allow a smooth transition.\r\nAll input sources should derive from BaseSingletonInputSource but this prevent them from deriving from Singleton<> so I created this one. \r\nI now think it's better to derive GazeManager from the existing BaseInputSource and add the singleton properties and methods but with Instance marked as Obsolete. What do you think?"""
341,89213126,"b""It changed from an event handler to a method called by the InputManager and it's member of the IFocusHandler interface. To implement the interface it has to be either public or implement the interface explicitly. This last option doesn't allow it to be virtual. It would have to call another protected virtual method."""
341,89262925,"b""What's the best way to do this in Git? """
341,89370661,"b""I'm now very careful with the braces but I missed those... ;)"""
341,89372218,"b""These are part of the 'BaseInputSource' abstract methods and properties. They have to be implemented although I can't find where it's used. I copied these implementations from 'GestureInput'."""
341,89454784,"b""I agree. Once managers become input sources or focus sources they won't need to be singletons. This was just a hack to ease the transition."""
354,90540899,"b""The propose of this PR is to use the InputManager handling mechanisms so I thought the UnityEvent wouldn't make sense anymore.\r\nAnyway, I'm going to follow the suggestion of creating a new SpeechInputSource and leave the KeywordManager like it was."""
354,90541370,b'I used the existing SphereKeyword.cs as a reference and it already uses a switch. '
354,90541808,b'I replicated the names from [PhraseRecognizedEventArgs](https://docs.unity3d.com/ScriptReference/Windows.Speech.PhraseRecognizedEventArgs.html) but I can change it.'
354,90544399,"b""This is the UnityEngine.Windows.Speech naming but I also don't like it much."""
354,90632161,b'@maxouellet I just noticed that changing to SpeechKeywordRecognizedEventArgs avoids having to use explicit namespaces because of name clashing. I would then change the IInputSource event to SpeechKeywordRecognized. What do you think?'
360,90836682,"b""When app starts with KeywordManager disabled and is enabled while executing, keywordRecognizer will be null so StartKeywordRecognizer won't be called. \r\nStartKeywordRecognizer already verifies if keywordRecognizer is null so this verification can be removed from here.\r\nThis condition also means that, if start behavior is not AutoStart, when KeywordManager is enabled it won't start. Is this the expected behavior?"""
354,91041064,"b""@HodgsonSDAS I wasn't worried about these ones as this is only testing code but you're right as it may be used as a reference.\r\nIf the method is private, [should the class be sealed](http://codebetter.com/patricksmacchia/2008/01/05/rambling-on-the-sealed-keyword/)? Or should just the method be protected virtual? What do you think?"""
354,91079068,b'@HodgsonSDAS Should then OnPhraseRecognized be an explicit interface implementation instead of public?'
354,91917302,b'This was required because of name clashing. Renaming new classes following discussion at https://github.com/Microsoft/HoloToolkit-Unity/pull/354#discussion_r90693128'
354,91917410,b'This was required because of name clashing. Renaming new classes following discussion at https://github.com/Microsoft/HoloToolkit-Unity/pull/354#discussion_r90693128'
354,91917820,"b""It's used to fill the keywords array. I just adapted what was already in the existing KeywordManager."""
354,91921204,"b""I copied this portion from MicStream.cs section above and didn't notice the slight difference. I placed this just below the Voice heading as it applies to all the section. I thought it wouldn't make sense to duplicate the warning for each voice handler."""
354,92141740,b'I can do it here but you will find it used in other places. '
354,92151795,"b""This 'return' was preventing the handling of multiple keys down."""
354,92152085,"b""Using a 'for' instead of 'foreach' to prevent allocations. Iterating backwards for performance."""
399,92402039,"b""ICollection does not support random access so it's not possible to use 'for' instead of 'foreach'.\r\nI suggest the use of the more general 'IEnumerable' instead of 'ICollection'. Maybe one second overload for 'IList' where 'for' can be used."""
398,92496763,"b'I believe Linq can be ""naughty"" in Update() but not in Start(). I also believe that var, Linq and Reactive Extensions are more readable, once you get used to. I\'m just following the project\'s rules here. ;)\r\nIn this case, there\'s a small performance gain as the array is iterated only once to fill both the dictionary and the keywords array.\r\nAvoidance of \'foreach\' has also been one of the common suggestions so I decided to try the reverse order for loop with prefixed decrement, that I usually use in C++ but never in C#. Foreach loop is [very performant on arrays](http://stackoverflow.com/questions/365615/in-net-which-loop-runs-faster-for-or-foreach/472258#472258). I can change that line.'"
398,92505248,"b'I run a [benchmark](https://gist.github.com/aalmada/b535b09ed83092b9288ff55d59b3b656) and to iterate an array of 100000000 ints, it takes:\r\n**foreach:** 972ms\r\n**for:** 742ms\r\n**reversed for:** 566ms\r\nIt confirms my experience but, in this case, the number of keywords is MUCH smaller so readability may prevail. Should I change it? To a foreach or a for?'"
398,92606439,"b""@keveleigh I realized just now that I need the index to assign to the keywords array. I'll have to leave it as a for loop but I'll change it to incremental order.\r\nHighly performing code is usually not elegant..."""
354,92635497,"b""It's based on the existing [SphereKeywords.cs](https://github.com/Microsoft/HoloToolkit-Unity/blob/0397cfab806d3e56dd18dffa4b90f4b511493f97/Assets/HoloToolkit/Input/Tests/Scripts/SphereKeywords.cs). I just changed it to apply the same color to all the children renderers.\r\nWhat do you suggest in this case?"""
354,92635971,b'This is based on the existing [DisplayKeywords.cs](https://github.com/Microsoft/HoloToolkit-Unity/blob/0397cfab806d3e56dd18dffa4b90f4b511493f97/Assets/HoloToolkit/Input/Tests/Scripts/DisplayKeywords.cs)'
354,92636052,b'I missed that one'
354,92636378,b'This is based on the existing [DisplayKeywords.cs](https://github.com/Microsoft/HoloToolkit-Unity/blob/0397cfab806d3e56dd18dffa4b90f4b511493f97/Assets/HoloToolkit/Input/Tests/Scripts/DisplayKeywords.cs). Should I change it on both?'
354,92668374,b'I changed this one only.'
354,92668425,b'I did it anyway ;)'
354,92668566,b'I added many more comments.'
354,92668916,"b""Fixed this using Resources.UnloadAsset(). I think that's OK for a test scene and for something that only happens on a voice command."""
354,92681479,"b""I thought of that too but I missed an error message stating that Resources.UnloadAsset cannot be used on materials. I'm working on a shader-based solution."""
354,92828669,"b""@HodgsonSDAS In the new InputManager architecture, event sources register with it. It then looks for a message handler in the object with the focus. If not there, it goes up the object hierarchy. It also supports global handlers and fallback handlers.\r\nThe SpeechInputSource is only the source that could replace the KeywordManager. I currently only support handlers for when the keyword is spoken as scripts. I'm prototyping support for inspector. \r\nIf this PR results in a better solution than the KeywordsManager, it would be nice to turn it obsolete as having both can be confusing to users.\r\nIt's also my fault but I've been trying to clear all reviews and this PR is loosing some focus."""
354,92829203,b'Can this performance tweak be left for after this massive PR is reviewed and merged?'
354,93042781,"b""Removing it makes the script enable checkbox disappear but we aren't handling it anyway and this is just test code... """
354,93042844,b'Damn tabs ;)'
433,94004999,"b""@maxouellet I placed the original IInputSource events in a separate file to make them reusable but to emphasize that no changes are needed in InputManager.cs when adding new events. I didn't place the speech handling code in here as this is a particular case and I didn't see any reuse case. I believe most new input events will not require any change to these files. Specially important for third-party libraries (HoloToolkit plugins).\r\nI made it partial because it allows adding extension methods in separate files but in the same class name. It makes no difference in compile and execution time but it's important for documentation. All methods will be found under the same branch.\r\nPlease note that there are already multiple managers in HoloToolkit that are partial. I always wondered if it was so that new functionalities could be added without an inheritance penalty."""
433,94006189,"b""I left the single-instance-event-data feature as it was although I was aware of this issue. I understand that the purpose is to avoid allocations and garbage collections but doesn't these fall into the short lived instances and the GC will reuse memory? """
433,94009911,"b'@maxouellet I added a check in InputManager.HandleEvent() to handle this issue.\r\nAlthough this is not the focus of this PR, I also replicated the behavior of SpeechInputSource into GestureInput. I found some inconsistencies there as it contains two GestureRecognizers. One of them was not being disposed. Please check it out too.\r\n'"
433,94085957,"b""It's just because all the ifs in StartGestureRecognizer are useless in here and it's how the both KeywordManager and SpeechInputSource have it."""
433,95078125,"b""@DanHolbert @NeerajW That's an internal implementation\xc2\xa0detail that the user should not need to know (as this is a public method).\xc2\xa0I copied this from the KeywordManager to keep it coherent but\xc2\xa0I think these should be called simply Start and Stop.\xc2\xa0The name of the classes don't include Recognizer and there's no need to know there's one or more inside."""
7539,393856583,"b""The problem of making these tunable is that we will pollute the editor with a lot of finicky constants, but I can add if you think it's beneficial"""
7539,393876124,"b""Cool, won't fix this for now. These tolerances are just for animation / rounding purposes and can be arbitrarily small."""
7539,393898357,"b'Added a new method BoundsExtensions.GetScaleToFitInside, the current one returns a Vector3 and not a single scale factor\r\n'"
7539,393910922,"b""I added a new method because the name didn't match either (BoundsExtensions.GetScaleToMatch())"""
7539,394630397,b'This component doesn`t require the rigidbody since it adds the component for you :)'
733,123214568,b'it is a valid one by UWP but okay I will change it :)'
733,123217980,"b'I have tried but I am using so many c# 6 language specs, so only WINDOWS_UWP  works.\r\nThis is not a Unity Condition but a UWP supported Condition. I will leave it that way.\r\n'"
733,123412509,"b'@StephenHodgson  Yeah  everything will be recompiled in UWP c# project, c#6 will work perfectly,  in WSA env'"
733,123413076,"b""in UWP it is a async void method  but unity editor cannot deal with the 'async' Key Word @StephenHodgson """
733,124237079,"b""user defined callbacks are always nasty.  I don't think we shall let them broke our processes  \r\nif we got here unhandled, the focus might not return to 3D View  \r\n"""
733,124237202,b'void function dose not need any return.  '
733,126628614,b'haha  you got me ....'
8758,500417235,"b""re 1. you require Unity 2019.4 and the 'verified' version of TMP is 2.1.1, so that's what I went with.\r\n"""
2872,222201363,b'`Guid.Empty` is the best way to do this'
3066,232099813,"b""cg has a `sign` function which should be a bit faster and more idiomatic than this ternary http://developer.download.nvidia.com/cg/sign.html\r\n\r\nThis will have the added advantage of setting the `uv.x` values (below) to `0` when that component of the normal is 0 - essentially increasing the chance of a cache hit on the texture lookup when the normals match the basis vectors.\r\n\r\nI've not profiled either of these :)"""
3066,232156487,"b""I don't have a problem with a sign of 0 in this case - its impact on the tri planar blend is exactly nothing, so it makes sense to me for its sign to match that. Any other choice is equally arbitrary IMHO.\r\n\r\nEspecially if it does give perf benefits - add a comment if you're worried about confusion. """
8451,482515237,"b""Added the `<summary>`.  Given the `UpdateTransform` method is public (and making that internal would be a breaking change), I'm inclined to keep it the same - if you're calling `UpdateTransform` you should really call `SetInitialTransform` too."""
539,103496210,b'indeed'
539,103497015,b'Could be done in the WorldAnchorManager itself. it will be in charge of storing/deleting and keeping trace of all user created anchors...'
539,103571118,"b""Benefits of storing all user anchors may not be relevant, if it's just for one RemoveAll method.\r\nAt this time, I am not prioritizing this anchor array"""
539,103571985,"b'Personal preference in term of readability.\r\nI am fine either way.\r\nDo you want me to inline the ""SpatialMappingManager.Instance"" usages ?'"
2011,184607239,"b""Okay, I though it was the standard way to call those methods, I'll change that."""
2011,184713507,"b""Sure thing: I'm doing the change right now."""
3664,267749622,"b'ah ok. my thinking was that this makes it clearer that some dlls need to get placed, but you\'re right that it comes at a cost of ""clutter"" that likely won\'t be viable for folks. I\'ll cleanup.'"
3664,267749971,"b'A small dev experience thing that i think __is__ nice about having some of this is that the folder structure is already there - makes placing the dlls just a little less painful. \r\n\r\notherwise, no probably not for the time being.'"
3664,268370912,b'not a good one - for clearer code-reuse i stil the (reused) method defs so that both the underlying peer and the unity events wrapper could consume it. will rename and split out to something more logical.'
3664,268373155,"b'well you\'ve gone and stumped me - because normally i\'d agree and expect to see ""Allow unsafe code"" in player settings would be needed for this to work at all, in the included Example, as well as in other ones (basically anywhere this script is built..) but i\'m not seeing that behavior locally...\r\n\r\nI\'ve got it unchecked and am able to run `mono` and `il2cpp` backend-based projects, in editor and in build (standalone). perhaps somehow related to this method being private?'"
3664,268375521,"b'this actually should be removed (deprecated that sample) in favor of clearer WebrtcSignalControls (more production applicable, extendable).'"
3664,268377115,b'this is unfortunately not trivial (as the native library also takes information in this odd format at this time). I will book a feature request for it but i will not be able to refactor to this myself at this point in time.'
3664,268377857,"b'captured (and tagged) in comment below, as it is unclear at this time if GH issues here is the right place to capture this work.'"
3664,268378417,"b""> TLDR: sure, that sounds great. I'll look to you for the changset to allow a signaling server to provide this info.\r\n\r\nah - thought you were proposing supporting giving native library something like:\r\n\r\n```\r\nNativePeer(List<IceServer> servers)\r\n```\r\n\r\nwhere\r\n\r\n```\r\nstruct IceServer\r\n{\r\n    string Uri;\r\n    int Port;\r\n    string Username;\r\n    string Credential;\r\n}\r\n```\r\n\r\nwhich imo is a more common way to describe a set of ice servers. Current native lib only supports one `Username` and `Credential` even if N ice servers urls is given.\r\n"""
3664,270854516,"b""\xf0\x9f\xa4\xa6\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f @StephenHodgson, oh wow, silly me - thanks for calling that out!\r\n\r\n@chrisfromwork i'm not sure how to best validate this...here's what i tried:\r\n\r\nil2cpp builds of `BoundryVisualization` and `WebrtcBasicSignalExample` seem to both include this code (ctrl+f in generated vs solution) - so i would guess that unsafe flag is always needed when building scripts from my asmdef, which seem to be built in all scenarios."""
3664,270862672,"b""I'll look to you/other MRTK folks for this, as [captured above](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3664#issuecomment-475829055) much of this logic is carried over from another project - not sure if it's best practice to modify this or leave as is."""
1453,153681417,"b""I wanted to fold this into LayerExtensions but was talked out of it as this isn't technically an extension. I'd be happy to consolidate."""
1453,153681868,"b""I went back and forth on this. The reason its in SolverHandler is to prevent duplicate TrackedObjectToReference fields. Since there can only be one SolverHandler component on an object, there is no worry of having TrackedObjectToReference being set multiple times - which would be the case if its in Solver (where it was originally). While this isn't the prettiest scope when extending Solver, it makes for an extremely clear editor component experience."""
1453,153682065,"b'There is, but its folded into AttachToObject. If we abstracted the attaching functionality from the controller event logic I could axe SolverControllerFinder.'"
1453,153682088,"b""I'll cut it. It was placeholder and didn't up needing it."""
1453,153682176,b're: both structs in SolverHandler: what is the best practice regarding own file?'
1453,153856638,"b""The only class I can find in MRTK that adds Raycast functionality is RaycastResultComparer. This class doesn't extend raycasting, its a helper class for comparing results. Is this the class you were thinking of? I can merge into that class, but the name will be a bit misleading.."""
1453,153928845,b'Whats the reasoning here for changing Mathf.Sin(camFOVrad / 2f); to *0.5f?'
1453,154781580,"b'When UpdateLinkedTransform is set to true, solvers share transform values via the Working variables and inherit work done by other solvers. Maybe state tracking is the wrong term?'"
1453,154782171,"b'Its currently in Input/Utilities, is there a better place for it?'"
1453,154785978,"b're 1: Will do.\r\nre 2: I\'ve intentionally set it up as a base class that has no editor accessible properties. It only handles the events tied to getting the controllers. AttachToController extends this class as a ""editor friendly"" script.\r\nre 3: Its currently in Input/Utilities\r\n'"
1453,154786726,"b""I'll remove it"""
1453,154787010,"b""I've found this in a few places, it looks completely fine in VS. I'll do a reformat."""
1453,154803886,"b""@StephenHodgson yeah, agreed. the main thing here is the motion math. I'd be perfectly happy to axe *RayCastFromHead* and move *SphereCastFromHead* to *GazeManager*."""
1453,155037799,"b""I currently have commits where *SphereCastFromHead* is folded into *GazeManager*. IMO it should probably belong there even if its currently a mess. *SphereCastFromHead* implements *RayStep* etc. I've gone ahead and cut *RayCastFromHead* since its literally just a wrapper for *GazeManager.Instance.HitInfo*."""
1453,155038114,"b'Per comment above, I can, but it implements *RayStep*.'"
1453,156261013,b'Good catch. the one we need to override is the protected serialized field enum *element* line 25. Deleting this duplicate.'
1453,156261687,"b""Yep. Missed a conditional. I'll update. Sorry, pulling the if def changes and trying to rectify it with my existing changes made for some confusion."""
1453,156262102,b'I was originally wanting to have the base methods handle handedness and *AttachToController* handle the *IsAttached* logic. Hence the missed conditional - Its not that simple. :)'
1453,156262382,"b""See previous comment. Fixing this. As far as the check, doesn't *newController.TryGetElement* in the base call provide enough?"""
1453,156262751,b'Yep. Added.'
1453,156262807,b'mergetool leftovers. Deleting.'
1544,158138724,b'I thought we were good on this one. The only Raycast class I can find in MRTK is for comparisons. *RaycastResultComparer.cs*'
1544,158139841,"b""I'm not sure why this is happening, it looks fine in VS. I reformatted/tabified - hopefully that should fix it."""
1544,158140787,"b""Same thing as the previous comment, it looks fine in VS. I'm not sure why this is happening. I'll reformat/tabify."""
1544,159806065,"b""*AttachToController* is overriding the The base class *ControllerFinder*'s protected element variable to be a SerializeField. Unity requires the *new* keyword when hiding the base class variable."""
1544,159806797,b'https://github.com/radicalad/MixedRealityToolkit-Unity/blob/MRDLSolver/ProjectSettings/ProjectVersion.txt - it looks fine to me?'
1613,161332846,"b""Inherited protected variables in the base class aren't exposed in the editor. We want them protected by default in the base class *ControllerFinder* so they're hidden by default when extending. *AttachToController* redefines these variables as *SerializedFields* so they're available via editor. This is why the new keyword is required. These changes remove functionality from *AttachToController*. """
1613,161807026,"b""Are you suggesting the fix be new *SerializedField* variables in *AttachToController* with getter/setters that apply the values to the protected variable in *ControllerFinder*? That makes sense to me - avoids the *new* keyword and still lets element / handedness be editable. Why is an approach like this cleaner than overriding the existing variables with *new*? Really I wish *virtual* was an option for variables and we'd be fine."""
1613,161825297,"b""Yep. That's why I was just overriding those two variables in the inheriting class - does nothing more than exposing them in the editor."""
1613,161828530,"b""Right, but that exposes it in the base class as well which I don't want."""
1613,161838863,"b'I tried to keep ControllerFinder as passive as possible - that way we can maximize the usefulness of the script. In the case of Solvers, SolverHandler extends ControllerFinder (for the controller finding ability - go figure) but handles the logic of when to get controllers differently, basically if you set the SolverHandler\'s enum to ""head"" it will bypass ControllerFinder etc. AttachToController is much more straightforward it and editor-oriented. So it makes sense to just expose those variables.\r\n\r\nI talked with @Railboy about the intent here. The reason we\'re in this spot to begin with is because I got pushback about duplicating the logic that existed in AttachToController. So there are a few options:\r\n\r\nLeave ControllerFinder alone, and then in AttachToController we have a variable that has an associated property that overrides the public property in the base class (currently in ControllerFinder, Handedness is virtual, we\'d have to change Element as well) and handle the logic there.\r\n\r\nDuplicate logic in AttachToController and they\'re their own things and don\'t try to complicate things.\r\n\r\nUse the MRTK editor as @Railboy proposed which would expose Properties in the editor.'"
2606,210996323,b'Any guidance on organizational structure? _Core.Utilities.Enums? SortType and OrientType seem to be the most useful.'
2606,210996834,"b""I didn't see any existing enums when I did a search -> related to the previous comment. Which should we pull in?"""
2606,210998600,b'What are you thinking would be included in it vs the base class? LayoutChildren()?'
2606,210998830,"b'Ah okay, the naming convention changed. Got it.'"
2606,211007417,"b""I'm kinda into it purely for an excuse to get to know the new system better. As far as use case, I get why its there in theory, but I've never used it myself, I almost scrapped it when I revisited it for this PR."""
2606,211007597,b'I realized I have null checks for the CollectionNode list. I switched it back to a class.'
2606,211008078,b'Old habits die hard. \xf0\x9f\x98\x84 '
2606,211010020,"b""Hmmm. I guess it wouldn't. The check that threw me the error is unnecessary. Because you need a child to make a CollectionNode to begin with."""
2606,211019000,"b""Not sure what you mean here. I'm just adding a custom button."""
2606,211021697,b'good catch.'
2606,211027415,"b""@davidkline-ms marked a change to drop them since they're private/internal. I figured I'd leave the explanation - just removed the XML format."""
2606,211362820,b'They showed up when I did a merge with the latest mrtk_development branch.'
2606,211374427,"b""Yep, that's what I followed, not sure why all of this stuff showed up. I'll try to revert and see what I can do."""
2606,211374836,"b""Thats what I thought too, but going through everything, I didn't find any enum suffixes so i've since renamed everything. Personally, I feel having the suffix helps with self-documentation."""
2606,211381399,"b""How About CollationOrderType. Technically this isn't for sorting - you need an order in which to sort."""
2606,211413850,b'Agreed.'
2606,211415987,b'That can come out.'
2606,211416074,"b""I'm not sure, I've never used it before - this is leftover from the original enum."""
2606,211418364,"b""That assumes SurfaceType needs to be implemented - which it doesn't. This Collection just happens to implement LayoutChildren with Surface types. The BaseObjectCollection contains the abstract LayoutChildren method - so more likely you would be inheriting the base collection and writing from scratch - not the grid collection. This is actually the main update I wanted to get into MRTK, as it is, the ObjectCollection is a great control, but since all of its specific functionality is embedded in the single class, its not very extensible."""
2606,211429069,"b'Its not the null check (it was unnecessary so I removed it), ObjectCollectionNode needs to be mutable. Switching to a struct broke basically every line where properties were being modified.'"
2606,211429153,"b""I'm not sure what you mean by this? I don't typically do custom inspectors."""
2606,211433162,"b""It compares sibling index, I'll rename to better describe the behavior."""
2606,211434499,"b'Sure. whatever is easiest, is there an existing example somewhere in MRTK?'"
2606,211656008,"b""in the UpdateCollection() method. This action gets called every time a user presses the custom inspector button. Like I said earlier, I haven't actually ever subscribed to this action in practice."""
2606,211656422,b'Does List<> behave as expected when wrapped in a property? I have the change in a commit -> just not sure about the setter working as one would expect.'
2606,211658481,"b'Ah, thanks @StephenHodgson. \xf0\x9f\x98\x84 Just curious, is there a perf reason for switching to a struct?'"
2606,216421106,"b'Works for me,  I put it at the bottom of the list for preference.'"
2606,216421221,b'Sure. Done.'
2606,216422382,"b""This actually has nothing to do with spatial layout. I'd suggest sticking with Collation here as it has to do with naming of objects vs when they appear in the hierarchy, conceptually it makes sense."""
2606,217217673,b'Is there a convention I should be following?'
2804,218485110,"b""You're right, its redundant."""
2804,218485767,"b""I suppose we can pass the existing FocusEventData into the virtual methods. The original created a new pointer event to pass along. To be honest, I'm not entirely sure why since the new FocusEvent is effectively a clone of the original."""
2804,218500280,b'This is what you mentioned yesterday. That sounds much more elegant. I can add it to this PR.'
2804,218500394,b'\xf0\x9f\x98\x89 naming artifact from HTK.'
2804,218502529,"b'It definitely should, is there an established pattern I can look at for handling multiple? `IMixedRealityPointer[]`?'"
2804,218505282,"b'This is how it worked previously, do you see a better approach? The important thing is the interactable list check. If the extending class overrides the original handler method, it will git every event call from `InputSystem` - where we really only want extending classes to get the event if interactable list check passes.'"
2804,218507904,"b""Since `IsFocusedRequired` is a public accessor, can't we just set it to false before we call `base.onEnable()`? Do we need to override the accessor here?"""
2804,218510262,"b'If the extending class overrides the original handler method, it will get *every* event call from `InputSystem`. Which is not the desired intent, the extending class should *only* get an event if it came from an object in the interactables list.'"
2804,218513876,"b'Currently (and desired): The handler contains the interactable check, then if valid, passes that on to the derived classes via the protected methods.'"
2804,218589936,b'We do not.'
2804,218677600,b'This is really good to know. I always thought any modification of a list required the setter as well. I\xe2\x80\x99d be happy to change.'
2804,218925006,b'Fair enough - just trying to be consistent. Do we have region recommendations in the code guidance?'
2804,218976456,b'fixed.'
2815,219629986,b'add `private`'
2823,219643030,b'Pull out your enums into separate files.'
2823,219643598,b'label your regions.'
2823,219644006,b'I used these static methods all the time in HTK. You should put them into a static extensions class. So helpful for creating bounds based on an object (and its children).'
2823,219644374,b'initialize your enums with = 0.'
2823,219644482,b'missing `<summary>` tags'
2823,219644629,b'make sure to add `/// <inheritdoc />` on interface implementations'
2823,219644943,"b""I'd also stick all your enums in a /BoundingBoxEnums/ folder."""
2823,219645011,b'I believe the file name suffix needs to match `type` as well.'
2844,221034739,"b'how about: ""To ensure we have a smooth transition, we need several key tasks to be completed and ensure we limit (as much as possible) any future breaking changes:""'"
2844,221035607,"b'Something like ""Build the new front-end architecture, enabling both new and existing users to start building from. Comprising of an initial set of interactable prefabs / components: ""'"
2844,221068960,b'works for me.'
3399,253227214,b'it is virtual?'
3399,253227515,b'do we want a setter here or is this something that can only be set in an inspector/profile?'
3399,253227771,b'A bunch of these look like they should have a setter.'
3399,253227807,b'this too.'
3399,253228061,b'remove'
3399,253228132,b'should we go ahead and remove it now?'
3607,268715331,"b""InteractionReceiver and the Interactables are entirely different. I agree InteractionReceiver should handle focus, and it did in the [HoloToolkit version](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/htk_release/Assets/HoloToolkit/UX/Scripts/Receivers/InteractionReceiver.cs).\r\n\r\nInteractionReceiver is a easy way to run shared logic on a group of  (I'm not saying _interactable_ since its overloaded) objects in the scene. Simply inherit InteractionReceiver, and override whichever events you desire. Objects in InteractionReceiver's list will bubble up.\r\n\r\nNote: _Interactable_ in the context of the HoloToolkit reference is describing a gameObject that the user can interact with."""
3763,271360400,"b""I'm really not sure what the point of eventData.Use() is since any handled event stops bubbling."""
3763,271373463,"b'Ah okay, so there is a global event handler implication here.\r\n\r\n> Another example: On components on the same game object all events are executed, no matter whether used is set or not.\r\n\r\nExactly. Not helpful.'"
3886,273132315,"b""Its not necessary as `OnCameraPreRender(CameraEventRouter router)` will never get called if `UseOnPreRender` wasn't set."""
3886,273134059,"b""Per Desk conversation, I agree. Its deferring LateUpdate's call to OnPreRender."""
3886,273549349,"b""We should be good as Its handled in `Start`. I'll double check though."""
3886,273641231,"b""Okay, had a conversation with @Cameron-Micka about this topic. I didn't know `Start` isn't called when an object is re-enabled. I'm shocked I haven't run into problems yet. :) Good catch - I'll update."""
4672,291706865,"b""Since you're in here, can you update the `SolverHandler.Start()` method to respect the offset values? I found a bug earlier this week, but haven't had time to open a PR.\r\n\r\n`        private void Start()`\r\n        `{`\r\n            `// TransformTarget overrides TrackedObjectToReference`\r\n            `if (!transformTarget)`\r\n            `{`\r\n                `AttachToNewTrackedObject();`\r\n            `}`\r\n            `else`\r\n            `{`\r\n                `// we need to ensure the offset gets applied`\r\n                `TrackTransform(transformTarget);`\r\n            `}`\r\n        `}`"""
4974,295898925,"b""I'm assuming it exists to bump up the inaccuracy of someone targeting an object to pick it up - i.e. they may mis-grab slightly. That said, SphereCastRadius could just be 0.05f larger \xf0\x9f\x98\x84 """
4974,295899272,b'I grabbed this from PokePointer - IMO its redundant. I can clean it up.'
4974,295900037,"b'This is a weird one, the GrabPointer is set to ""Grip Press"" - which on device works great. In editor, the ""pinch"" gesture only fires ""Select"". I don\'t know enough about input simulation to make that fix so I just stuck this in here. PokePointer doesn\'t even use the base.OnInputDown call so I figured it was okay.'"
4974,295901988,"b""Thankfully we don't have to worry about UnityUI here since this is for grabbing objects. I'll take a look."""
4974,295929122,"b'I removed `gameObject` since `grabbable.transform` is the same thing. Depending on garbage collection, a unity object can be null, but still exist so the component could still exist as well.'"
4974,296388285,"b'Now that @julenka showed me the Physics Raycasting bits in the `FocusProvider`, I better understand why this 0.05f margin exists. `SpherePointer` flags itself as ""near"" a collider to let `FocusProvider` do the more expensive overlap check.'"
4974,296388366,b'force reverted to go down a simpler route.'
6001,326706198,b'This exaggerates the calculated velocity in the scrolled list. The usage would be make a finger flick scroll the list in a disproportionally large amount. But I think you inadvertently found a bug as if this was zero it might kill all velocity - I need to check.'
6001,326708896,b'Yep.'
6001,326709375,"b""I do, I get implicit type compiler errors if I don't."""
6001,326711189,b'The inspector uses it to display the touch plane.'
6001,326713185,"b'Agree, a bunch of these can be local variables. Fixing now :)'"
6001,326724820,"b""I tweaked this a bit, but there are a bunch of scenarios where you can have UseOnPreRender enabled but these components wouldn't get set up properly.\r\n\r\n1. I have a scrollingObjectCollection set up at editor time, (uses OnEnable/OnDisable).\r\n2. I have a dynamic scrollingObjectCollection instantiated from code with UseOnPreRender configured, it exists in the scene, but UpdateCollection() is called at a later time. (uses UpdateCollection/OnDisable).\r\n3. At run time, at a later time, I decide I need UseOnPreRender (uses the Setter/OnDisable).\r\n\r\nI'm sure theres a better way to do this, maybe put this in the Getter as well as the Setter and then always reference the property?"""
6001,326726081,"b'It actually does, what I\'m doing is once the ScrollingObjectCollection has deemed an interaction a ""scroll"", it cuts off the `eventData` to the child item with `Use()`, and then determines when the scroll is released here.\r\n\r\nThis actually the magic of the list, I don\'t care _where_ your hand is when scrolling, only that you\'re on the correct side of the touch plane.'"
6001,326728174,"b'Agree. Now that this sits on top of the MRTK Input system, I dont think we need this any more.'"
6001,326731816,"b'Exactly, this is the first half of the ScrollRelease bit in the Update loop.'"
6001,326742556,b'Whoops. Not intentional :)'
6001,326770806,b'Should I just remove this now that @Troy-Ferrell has enlightened me on the `Plane` class? :)'
6001,326771713,"b""I'll move it, I think I put it here because it returns a Vector3.\r\n\r\nAdditionally, I'll tweak this so its an actual BoundsExtension method."""
6001,326772283,"b""I'll move it for now, I agree that it should traverse the hirerarchy of the Transform for all colliders."""
6001,326786590,"b""This is how I was finding a new point on the plane of the pointer's hit when scrolling with rays. Since you've taken a pass I'll go ahead and pull this out."""
6001,326945195,"b'I agree, not sure when, but the ObjectCollection classes were moved to Utilities.'"
6001,327286621,"b""I suspect this might have been an old merge. I vaguely remember not having access to NodeList at some point. I don't even reference it so I'm not sure why its there. Happy to remove."""
6157,330300342,"b""I feel like this contradicts line 40:\r\n\r\n> If adding an experimental feature, then writing tests and documentaiton are not necessary. Instead, follow [experimental feature guidelines](ExperimentalFeatures.md).\r\n\r\nI'd explicitly call out how to reconcile experimental features that may have some impact on MRTK code."""
6157,330301003,"b'I personally had trouble here finding a great example of how all folder types mapped. Specifically Experimental inspectors. We should probably just call out the folder structure explicitly like we do on line 6.\r\n\r\n> An example scene demonstrating usage, located under `MixedRealityToolkit.Examples\\Experimental` subfolder'"
6001,331252789,b'It is \xf0\x9f\x98\x84  _.../Experimental/Features/UX/ScrollingObjectCollection/README.md_'
6001,331259695,"b""Curious what the pushback is here? A couple arguments for the change:\r\n\r\n- In its current state, the list is inaccessible through `SerializedObject` (custom inspectors).\r\n- The list is of type `ObjectCollectionNode` which are `Serialized`.\r\n- The most common use case for `ObjectCollection` is setting them up at editor time. Pressing \r\n`Update Collection` generates this list. As a user, I'd expect the list to keep its state.\r\n- The original implementation serialized this field. https://github.com/microsoft/MixedRealityToolkit-Unity/blob/91107545a518aa543fd43376daa9ad420fa03fb9/Assets/HoloToolkit/UX/Scripts/Collections/ObjectCollection.cs#L27\r\n- IMO its a regression (which I take blame since I was the one who brought `ObjectCollection` to MRTK v2) The original PR #2606 had this as a public (serialized) field, which was changed due to PR feedback."""
6001,331281620,"b""I looked for a Class level attribute and didn't find anything. [Experimental] is only for properties."""
6001,334124542,"b'@Cameron-Micka FYI on the `MaterialInstance` issues. Also, that error is coming back.'"
6001,334180502,"b""This isn't supported by PressableButtons YET... @thalbern probably a UX task for the next release \xf0\x9f\x98\x84 """
6001,334180660,b'?'
6001,334180977,b'?'
6001,334181831,b'Ah good to know.'
6001,334182746,b'what if clipping box needs to use OnPreRender for items unrelated to the ScrollingObjectCollection?'
6001,334182795,b'good catch.'
6550,344946027,b'Remember to add method access modifiers.'
6550,344946385,"b""I'd probably pull this out and make it a separate file. I suspect it will be reused for future Object Collections."""
6563,345520428,"b""No idea. I do a `git clean -df` regularly, but Unity still manages to generate weird files. I'll remove \xf0\x9f\x98\x84 """
6573,346016817,b'Added an entry and detail page to docs. \xf0\x9f\x91\x8d '
7539,393827656,b'Make sure to use [private fields with property accessors](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).'
7539,393828046,b'Does this need to happen `OnEnable()` as well?'
7539,393828808,b'Make sure to use [private fields with property accessors](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).'
7539,393830255,b'Should be a separate [file ](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files) & initialized.'
7539,393830801,b'Should these be tunable properties?'
7539,393832783,"b""I'd put this in `OnEnable` to ensure every time the object is activated it will work as expected."""
7539,393833559,"b""Moving the initialization from `Start` to `OnEnable`, I'd move this to `OnDisable` to prevent the component registering multiple times."""
7539,393839026,"b""I'd consider moving these helpers to extension methods. `VectorExtensions` and `QuaternionExtensions`."""
7539,393840346,b'check out `BoundsExtensions.GetScaleToFit()` - this could be an overload.'
7539,393841268,b'Update the getting started section to Dock component. :)'
7539,393870679,"b""The only scenario I could see needing to change these tolerances would be very large, or very small items? I don't have a strong opinion - if you think exposing them would break people into jail, I'd say keep them private . Good thing is we can always expose them down the road."""
7539,393901734,b'Works for me - though you can overload with a different return type.'
542,103590312,"b'As far as I know, that is all the name is used for.'"
542,103590489,"b""I'll rename it to SpatialCollider as suggested above and also make this change. To be honest, I would actually prefer not even performing this test. Ideally, we want to ensure this member is always set and having it blow up with a null pointer exception would quickly draw attention to erroneous usage."""
542,103593524,b'Yup. Take a look at CreateSurfaceObject(). '
542,103599060,"b'Primitive colliders are not feasible -- mesh colliders are used for spatial mapping, too. Also, note that the code that generates these meshes runs ""asynchronously"" as a coroutine and periodically yields.  Also, it appears to me that Spatial Understanding produces a lot of really tiny meshes, which should be easier to set up.\r\n\r\nIf you look at where Commit() is called, on line 319, you can see that the routine yields immediately afterwards. This should be fine, especially considering that this is performed only once when finalizing the mesh.'"
542,103602910,b'Done and pushed.'
542,104846212,"b""There's one problem with that: setting to true would have to enable the collision meshes (potentially generating them for the first time) and this is too slow to do inside of a setter. Kicking off an async task of some sort also violates the principle of least surprise, I think. \r\n\r\nLet me know whether we should pursue this suggestion. I'm definitely open to making it work if there's a simple way of doing it that's consistent with the rest of the API."""
205,78536091,"b""I couldn't find any way to verify this capability :( Unity also seems to swallow any exception that may be raised.\n"""
205,78536501,"b'Pardon my ignorance, but what would that accomplish?\n'"
205,82136490,"b""I used spacings to group together those properties that belong together. E.g. MoveXAxisName and MoveXAxisSpeed are grouped together. I guess it is a mater of personal preference - if the styling guide for this project calls for more spaces, I'll be happy to add them.\n"""
205,82136766,"b""The Unity class template omits the private for the Update function, I followed that. Looking through the project, half of the files have and half don't have the private modifier for these methods. I added it, since I personally prefer explicit privates.\n"""
205,82137232,"b'go replaced with objectToManipulate. Looking through the rest of the toolkit, var seems to be used widely, so I left that in.\n'"
205,82137306,b'renamed to objectToRotate\n'
205,82743523,"b""I agree but I was following the example set by ColorPicker: HoloToolkit-Examples/<Examplename>/Example.unity. Other examples don't have proper names under their folders either. I'll change mine as suggested.\n"""
205,82751597,b'Done.\n'
205,84305763,"b""Sorry, I had a lot of work as well... no, it is not a unit test, more like an example. It's been renamed from Example.Unity as per a request above. \n"""
547,104187556,"b""It throws an exception. I decided not to be defensive about this, since the exception thrown by Unity itself is clear enough, and the property's description clearly points to what went wrong. Repeating / rephrasing the exception wouldn't have added much."""
547,104282822,b'Done'
547,104282823,b'Done'
547,107227269,"b""@NeerajW If you don't agree with my argument below, I'll move this under Utilities\\Tests\\Scenes as requested.\r\n\r\nHaving an entire scene as a building block is new to the HoloToolkit, but I feel that putting it under Utilities/Scenes is the right thing to do. \r\n\r\nI put it under Scenes because it is not a test scene for a prefab or a script, but is supposed to be used as a whole scene. The Utilities\\Tests\\Scenes would suggest that this is an example or test playground on how to use another part of the toolkit. But HeadsetAdjustment is a stand alone building block. \r\n\r\nDevelopers are not forced to use it, they can select what scenes are in their project in the Build Settings dialog. It is not even included by default."""
547,107243775,"b'Also, just to make sure: this scene is intended to be used similar to a ""Loading"" scene, not as a starting point for an entire app. The real app will be a separate scene after this one.'"
69,68143276,"b""The problem is that the object field in Responses array is populated only statically.\n\nHow would OnGazeEnter and OnGazeExit be able to help? They only give you events that the object starts or ends to be gazed on, but these methods don't give you an ability to send custom messages to the focused object.\n\nThis is meant to be used from KeywordManager to send messages to focused object: http://i.imgur.com/PAGXMTu.png\n"""
69,68144288,"b'GazeManager already contains logic for detecting focusedObject, why not use data which is readily available? Besides, this is an elegant way to avoid leaking the GazeManager abstraction by not exposing FocusedObject outside of GazeManager.\n'"
69,68145426,"b'@NeerajW Good point, I mentioned this in the forum thread. Exposing FocusedObject would create an additional dependency potentially used everywhere outside of GazeManager. This is probably fine, but PR intent was to minimize side effects and prevent the abstraction leaking outside of GazeManager.\n'"
69,68146362,b'@jwittner Subtle but valid since GazeManager uses SendMessage only as a private implementation detail.\n'
69,68147294,"b'Not necessarily, you can add a public method and invoke it directly if you wanted to.\n'"
69,68150321,"b'Oh, yes, this relies on SendMessage being used to enable dynamically created objects to receive recognized keywords without creating additional infrastructure for registering strongly-typed callbacks at runtime.\n'"
69,68150661,"b""@NeerajW @jwittner @keveleigh\x7f So what's the consensus? Do we want add a separate class or add a convenience method to GazeManager?\n"""
69,68151577,"b'@jwittner Sounds like your vote is for keeping SendMessageToFocusedObject in a separate class. So each option has 1 vote, and we need a tiebreaker :)\n'"
69,68437020,"b'Test examples illustrate sending keyword events to dynamically created objects. Two prefabs (cube+sphere) respond to FocusedObjectMessageSender events and are used in FocusedObjectKeywords scene, and two other prefabs (cube+sphere) respond to SelectedObjectMessageSender events and are used in SelectedObjectKeywords scene.\n'"
72,68441000,"b""OK, I'll revert that part.\n"""
72,68459726,"b'OK, done\n'"
72,68459740,"b'OK, reverted.\n'"
72,68462094,"b'Exactly. If not grid, I had to add some mechanism for placing dynamic objects.\n'"
72,68462732,b'Added extensive notes in README.md\n'
72,68463060,"b'@jwittner Yes, the value is having the possibility of multiple object selection policies and educating developers about potentially writing their own message senders and receivers, which IMHO keeps the modular spirit of HoloToolkit.\n'"
72,68463514,"b'@NeerajW Yes, Having only OnGazeEnter/Leave is limiting. There is another class ScaleObjectMessageReceiver that illustrates how simple message handlers can be added to different objects to enable interesting behaviors in a modular way. For example, to adjust object size, I now simply need to drop FocusedObjectKeywordManager into the scene and add ScaleObjectMessageReceiver onto my objects. I could see a growing library of these simple behaviors added to HoloTookit in the future.\n'"
72,68463548,b'Nope\n'
72,68464466,b'@NeerajW I added more extensive comments about voice commands since the note about KeywordManager responses may not be clear.\n'
72,68467771,"b'Looks like B22 is actually the latest now, but this probably needs to be done separately in another PR.\n'"
72,68469396,"b'We went back and forth on this in #69, the reason for refactoring this into a separate class is that developers will want different ways of handling object selection, not necessarily based on gaze, so it feels more natural to keep the send message part out of GazeManager, especially that there is also a SelectedObjectMessageSender, which shows a different way to select objects. Selection can also be via airtap, alone or in addition to voice commands.\n'"
72,68475763,"b'Issue #71 is not being able to send messages to dynamically created objects, and I was asked to create test scenes to illustrate how this would work in a real scenario. I understand the rationale to keep HoloToolkit as simple as possible, but removing dynamic objects would defeat the purpose of the test case and obscure the intent of the proposal.\n\nI think it would only help developers to have as many examples as possible.\n\nIf the desire is to keep HoloToolkit simple, I would suggest adding a separate Examples/Test folder under the root HoloToolkit folder instead of keeping Test folders alongside each module. Then, tests and examples can be excluded when importing a clean version of HoloToolkit into a production project.\n'"
72,68642143,"b""Could you share what wasn't fun about keeping cross-folder dependencies in separate folders?\n\nThis is what I thought:\nHoloToolkit/UnitTests/Input - would depend only on HoloToolkit/Input\nHoloToolkit/IntegrationTests/Input - could have cross-folder dependencies\nHoloToolkit/Examples/Input - could have cross-folder dependencies\n\nI think additional examples and tests could probably outweigh a potential inconvenience of having to delete a few more folders once in a project lifecycle.\n\nAnother way to do this is potentially create a separate repository (say HoloToolkit-Unity-Examples) which could point to HoloToolkit-Unity as a submodule.\n"""
117,70853983,b'pretty sure i need to init that space so the C++ side can safely write to it. I have const-fixed both sides to MAX_PATH which is 260\n'
117,70854881,"b'actually already done and just a stray comment, thanks for the catch\n'"
1560,158364727,"b'Hmm, why should static be there? The actual UserJoined and UserLeft events on SessionUsersTracker is not a static class. This makes it more inlined with the well-behaved RemoteHeadManager example class.'"
5610,313096956,"b""I think that having the InternalGazePointer class be a self-contained entity within the GazeProvider can lead to confusion for developers; especially when there's a UI element in the editor that allows them to define pointers (other than for gaze). \r\n\r\nIt doesn't need to be addressed in this PR, but can a work item be opened up to address this concern in the future? While being able to define your own GazeProvider means you also are able to define your own InternalGazePointer; it isn't very easily discoverable. """
5610,313098082,"b""Also, in the OnPreSceneQuery function for the internal gaze pointer; there's this line:\r\n`gazeProvider.HitPosition = Rays[0].Origin + (gazeProvider.lastHitDistance * Rays[0].Direction);\r\n`\r\nWhich then gets blown away by the call to UpdateGazeInfoFromHit() from the FocusProvider. """
7679,410830699,"b""Earnestly it was because I wasn't sure how to properly implement an event listener to that event in test code; though I remember being a bit hurried when implementing this test initially. I'll look into this."""
7679,410830857,"b""This was based on a different manipulation test that I saw that used the waits in this sort of pattern;  though I don't think as aggressively. I can make the changes you've recommended. \r\n"""
7679,410833217,b'Sure; can do.'
7679,410833267,"b""That's a fair assessment. I can change this. """
7679,410833366,b'I can do this.'
7679,410833387,"b'Sure, can do. '"
7679,410833479,b'Ah; this was an artifact of me trying to get this to work initially. Let me fix this. '
7679,410853188,"b""Actually; was thinking about this some more. This will happen whenever the object is disabled while running the coroutine. When reenabled, it simply won't reconnect due to it turning off the solver when deattaching from the hand (and the activation of the UI wouldn't necessarily lead to it having the solver update being turned back on; leading to the UI then being functionally broken again).\r\n\r\nI think our sample scene exposes this, but it isn't specific to just this scene as developers could hit this with their own app.\r\n\r\nWe could use another script to do this management as you; but at the same time, that means we have a component that could still end up in this state. \r\n\r\nWould a potential option be that we add this as an option the developer can select (through a publicly-facing bool)?"""
7679,410982613,b'Done. Changed it so that it consumes variables defined at the beginning of SolverTests'
7679,410982751,b'Done; removed this and replaced it with yield return null and waitfixedupdatetime (which other hand manipulation tests do as well)'
7679,410984558,"b""Actually; thinking about it some more. Fair point. We can hook onto the events that the buttons trigger and set these values when there's a menu switch in the scene. Will implement it now."""
7679,411561740,b'Fixed'
7679,411561832,b'Added that in above!'
7679,411562944,"b'By default the added functionality is set to false, so it will have the same functionality'"
7679,411592303,"b""Turns out we didn't need it and it was added in somewhat arbitrarily. """
7679,411592645,b'This is due to us needing the hands to be flat as default to activate the two large menus in the scene. '
7679,411595442,b'Just pushed a fix'
7679,411609698,b'Or thought I did; have to merge'
7679,411616927,b'Done for real this time'
134,72569230,"b""I'm hesitant to replace anything in the scene and a prefab is a bit of an\noverkill. One idea may be to replace it and then the original is disabled.\nIn that case it seems messy though. One issue is people take existing\nscenes from their Unity projects and then bring them to the HoloLens. In\nthis case they have existing projects. Maybe they have code that looks for\nthe main camera position (by name or tag) and now we've replaced that. Its\na fringe case but entirely possible. Its easy enough to change the camera\nand tell them about it. The settings aren't major (and they may have\nalready set their clip plane to be custom ie !=0.85f and we are just fixing\nsay, the position for them. I think telling them what we've changed is the\nfriendlier way.\n\nOn Wed, Jul 27, 2016 at 9:59 PM, Josh Wittner notifications@github.com\nwrote:\n\n> In Assets/HoloToolkit/Utilities/Editor/ConfigureMenu.cs\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134#discussion_r72565735\n> :\n> \n> > ```\n> >              return;\n> >          }\n> > ```\n> > -            Camera.main.transform.position = Vector3.zero;\n> > -            Camera.main.clearFlags = CameraClearFlags.SolidColor;\n> > -            Camera.main.backgroundColor = Color.black;\n> > -            Camera.main.nearClipPlane = 0.85f;\n> > -            SetCameraDefaults(Camera.main, true, output);\n> >   +\n> > -            //All done with MainCamera\n> > -            cameras = cameras.Where(o => o != Camera.main).ToArray();\n> \n> What if the tooling replaced the main camera with the prefab when this\n> ran? Could keep the same transform as the previous camera, but first setup\n> would have things that just worked with like two clicks.\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134/files/3933b816638f8cce7b4dc9c87ac4fbcaadee4ded#r72565735,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABqPDRn2UZ0GwRyGq7RKiYuotBmH7za4ks5qaDc1gaJpZM4JTeQs\n> .\n"""
134,72569344,"b'In the field, most people I see want project default setups and aren\'t\nusing the HoloToolkit yet. Assuming they d/l the toolkit to get this\nfeature they won\'t be using the prefab. Also developers I\'ve seen take\nexisting content and try to bring it to the HoloLens, another case they\nwouldn\'t be using the prefab. They also may have no idea about the prefab.\nIn that case no reason to replace it, just update the existing camera and\ntell them what changed so they are aware of behavior and its not black box.\n\nOn Mon, Jul 25, 2016 at 10:00 AM, Neeraj Wadhwa notifications@github.com\nwrote:\n\n> In Assets/HoloToolkit/Utilities/Editor/ConfigureMenu.cs\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134#discussion_r72102381\n> :\n> \n> > -            Camera.main.transform.position = Vector3.zero;\n> > -            Camera.main.clearFlags = CameraClearFlags.SolidColor;\n> > -            Camera.main.backgroundColor = Color.black;\n> > -            Camera.main.nearClipPlane = 0.85f;\n> > -            SetCameraDefaults(Camera.main, true, output);\n> >   +\n> > -            //All done with MainCamera\n> > -            cameras = cameras.Where(o => o != Camera.main).ToArray();\n> >   +\n> > -            //Check remaining cameras\n> > -            if (cameras.Length > 0)\n> > -            {\n> > -                foreach (var camera in cameras)\n> > -                {\n> > -                    Debug.Log(camera);\n> > -                    var cameraDetails = string.Format(""Update this camera for HoloLens defaults? \\r\\nThis will set position to 0,0,0 (on MainCamera only) and background color to Clear Flags:Solid color(Black). \\r\\n \\r\\n---------------\\r\\nName: {0} \\r\\nPosition: {1}\\r\\nTag: {2}\\r\\n---------------"",\n> \n> I am also not sure if we should be scanning for multiple cameras as only\n> those developers who know the specifics really well end up using multiple\n> cameras. I would recommend sticking to the main camera prefab from\n> HoloToolkit Utilities prefab.\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134/files/3933b816638f8cce7b4dc9c87ac4fbcaadee4ded#r72102381,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABqPDXCfL38dR8v-i17IwQyEa6okeBE2ks5qZOu1gaJpZM4JTeQs\n> .\n'"
134,72569575,"b'I\'d totally agree but the sample(s) (fairly recently unless changed)\nrecommended this in at least one location as such I\'ve seen most people use\nit in the field. I don\'t use it unless necessary (and its caused issues\nwith a recent unquoted space name) but just following default convention on\nthis. Most don\'t realize what it does.\n\nOn Sun, Jul 24, 2016 at 12:04 PM, Josh Wittner notifications@github.com\nwrote:\n\n> In Assets/HoloToolkit/Utilities/Editor/ConfigureMenu.cs\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134#discussion_r71993518\n> :\n> \n> > ```\n> >      {\n> >          // Build settings\n> > ```\n> > -            EditorUserBuildSettings.SwitchActiveBuildTarget(BuildTarget.WSAPlayer);\n> > -            EditorUserBuildSettings.wsaSDK = WSASDK.UWP;\n> > -            EditorUserBuildSettings.wsaUWPBuildType = WSAUWPBuildType.D3D;\n> > -            output.AppendLine(""*\\* Checking Build Settings for WSA"");\n> > -            bool isWsa = EditorUserBuildSettings.activeBuildTarget == BuildTarget.WSAPlayer;\n> > -            bool isWsaSdk = EditorUserBuildSettings.wsaSDK == WSASDK.UWP;\n> > -            bool isDirect3D = EditorUserBuildSettings.wsaUWPBuildType == WSAUWPBuildType.D3D;\n> > -            bool isUnityCSharpProjs = EditorUserBuildSettings.wsaGenerateReferenceProjects;\n> \n> I also don\'t think that this option should be a part of this process since\n> the generation of reference projects isn\'t a required or recommended step\n> for HoloLens development. Developers should change this option via the\n> Build Settings window to suit their needs.\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134/files/3933b816638f8cce7b4dc9c87ac4fbcaadee4ded#r71993518,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABqPDUg0OszDIfc7QwCNs8lfRaIg442qks5qY7dEgaJpZM4JTeQs\n> .\n'"
977,139943220,"b'Daft question @cre8ivepark .  Why is this all using the older ""TextMesh"" components rather than the new UI system?  Just seems odd.'"
977,140021439,"b'TextMesh will be deprecated in a near release as the new UI system is ""the way forward"". Although they haven\'t officially announced when that will be. Like the old GUI system as well when they sort out the editor UI.\r\nI agree there\'s nothing specifically wrong with it atm but it\'s not as manageable or scalable (granted, since I\'m new to MR, it might not make much difference in a inside-out 3D world :D)'"
1072,142825896,b'This causes an error on my machine.  Should be:\r\n```\r\nwebRequest.SendWebRequest();\r\n```\r\nusing 2017.2.0.f2-MRTP build'
1072,142825923,b'This causes an error on my machine.  Should be:\r\n```\r\nwebRequest.SendWebRequest();\r\n```\r\nusing 2017.2.0.f2-MRTP build'
1193,145485026,"b'That is a good point, firing up the VS Installer\r\n'"
1193,145485202,"b'Hmm, ok.'"
1193,145487801,b'nice idea.'
1193,145491346,"b""Possibly but not even sure if the MRTK and MR stuff is compatible with IL2CPP atm.\r\nI know the Xbox Live Unity library is currently incompatible with IL2CPP.  I'd suggest we make that a separate task and then update as required."""
1193,145491718,"b'Only needed for HL, which is why it\'s included there.  \r\nWill do a second look and see if we also need a ""Deploying WMR"" section'"
1193,145491844,"b'Will look at adding a ""Deploying WMR"" section'"
1193,145492075,"b'Yikes, never use that with UWP!! Either run , or build, open project and run.\r\nUnity has ALWAYS been awful with Build and Run with UWP'"
1193,145492203,b'The images were as close as I could make them to the same size.  Will have another look'
1193,145514939,"b'Ok, tweaked to look pretty'"
1193,145523200,"b""In it's own file for now\r\n"""
1193,145530694,b' # faceslap'
1197,146201586,"b""Unity warns that this field is only assigned but not used.\r\nPlease review and remove if it's not necessary ."""
1240,147158489,"b""@StephenHodgson Not sure about updating the Project version again.  Perhaps we should also remove this file from the  repo.\r\n\r\nIn any case, this PR shouldn't include changing this file."""
1256,148735410,"b'There are cases where you want read only canvases in any UI. Just so long as we have a plan for ""Interactable"" canvases and non-interactable canvases, we should be good.'"
1256,148735973,"b'Can we not use just ""Debug.Log"" everywhere.  This needs wrapping in it\'s own internal function so it\'s easier to control turning it off.  Possibly a separate PR.'"
1256,148747137,"b""I'd also like an extension for the Debug Methods so it's easier to manage them."""
1126,153907969,"b""I'm a bit on the fence.  Removing existing mappings could lead to issue, especially since most devs are already familiar and use them.\r\nBetter we simply manage our own and not interfere with other settings imho."""
1609,160372513,"b""Ok, I'll try resurrecting the old one's and renaming them.  \r\nAs these are root folders however, it's unlikely to cause issue."""
1611,160637855,"b""Was unsure why this changed, possibly unity it'self. But will revert this one\r\n"""
1611,160638634,"b""Reverting back to what's in Dev Working branch"""
1611,160639687,"b""That's odd, that should have changed. Will investigate.\r\nHad to rename Cursor to Base Cursor to not impact with the new Cursor namespace."""
1611,160639889,b'Agreed. Will rename folder and namespace to InputModule'
1611,160640183,"b'Should we rename Cursor to MRCursor then?\r\nAlthough, by renaming the Cursor class to BaseCursor, there were no other conflicts as we have no conflicting classes.'"
1611,160642825,"b'Resolved, bad rename - reverted here. (checked the rest of the code base and this was the only instance)'"
1611,160642864,b'Resolved'
1611,160642902,b'Resolved'
1611,160643555,"b""Don't like the placement of the InputManager, suggest it should be moved to the base of the MRTK.InputModule as it's a core class (as with other managers listed in this folder)"""
1611,160941052,"b""Sure, can re-rename them.  Although in some way it's good as it shows it's coming from Unity not MRTK.  Although I was thinking this last night."""
1611,160941317,"b'My only issue is that it would clutter the InputModule namespace.  Having each in their own namespace, ensures you know what are available when discovering elements.\r\nThis way, even through intellisense, you can easily discover what Cursors, Events, etc are available.'"
1611,160942018,"b'Ok, moved \r\n* InputManager\r\n* MixedRealityCameraManager\r\n* MixedRealityTeleport\r\n\r\nTo the root of the InputModule namespace'"
1611,160944235,"b'Like Cursor.  It doesn\'t block anything in the UnityEngine.Editor namespace as we are only extending it.\r\nBut having this highlights those scripts which are truly dependant on Unity ""stuff"" '"
1611,160945264,b'Renamed'
1620,161064712,"b""Good catch, darn Copy and Paste.\r\nit's in a few files and darn it I missed it.  Global fix incoming"""
1620,161066001,b'Resolved'
1620,161066938,"b""I'm all in favour of not mixing tabs / spaces.  Odd it should have changed though.\r\n"""
1620,161068264,"b'Ok, pushing a fix to resolve tabs for spaces across all the scripts. As that seemed to be the standard.\r\nMight up the change file count.  But seemed to be limited to scripts that were brought in to the project externally.'"
1623,161203599,"b'Just push your updates to your branch, that will update the PR automatically.'"
1636,161710360,"b""Ok, I'll revert this one, even though we created a separate issue to address this accros the project :D """
1636,161725283,b'Done\r\n'
1636,162030950,"b""Agree, I didn't like these.  I agree.\r\nAlthough in breaking the process, I'll just drop the additional namespace as the folders are needed to box the scripts together for AdaptiveQuality and GPUTiming."""
1636,162036365,b'Done.  Hopefully that will complete this phase of the namespace update.'
1636,162196660,"b""These are only temporary until the base DLL's are renamed.  hopefully the auto-gn should pick them up (else we'll review when importing the new DLL's / gen files."""
1636,162196764,"b""Darn it. I'll fix that in another PR.  Good spotting (5 mins after merge :O)"""
1636,162335279,"b""Yes, these will be updated when the base MRTK DLL's / autogenerated files are updated.\r\n\r\nFeature Branch isn't ready to be merged, but it's almost there."""
1636,162335466,"b'Because this will be targeting the dev branch and all links would be broken otherwise.\r\nWhen this eventually gets merged to master, then the links should be updated to master.'"
1636,162335652,"b""I've no idea why these keep getting changed.  Will revert back to those in the dev working branch in a new PR."""
1636,162335668,"b""I've no idea why these keep getting changed.  Will revert back to those in the dev working branch in a new PR."""
1636,162335745,"b""I've no idea why these keep getting changed.  Will revert back to those in the dev working branch in a new PR."""
1636,162352185,b'Resolved in #1648'
1636,162352236,b'Resolved in #1648'
1636,162352260,b'Resolved in #1648'
1636,162352275,b'Resolved in #1648'
1648,162471720,"b""There isn't a dev_working_branch on the base MRTK, hence why I had to revert :D """
1648,162472151,"b'I tried, you can have relative links to images. With hyperlinks it seems you can\'t with GitHub.\r\nAs to where they should point, they simply won\'t work against master until merged there.\r\n\r\nIn my view, stuff should ""Work"" in Dev, then when it\'s merged with master, they should be updated to work with master.   Else you aren\'t really testing it.'"
1648,162473758,b'Updated to new link'
1648,162473917,"b""Ok, tested again and relative hyperlinks do actually work, so I'll update the rest.\r\n\r\nWill make them a lot easier to maintain."""
1648,162478758,"b""Sorted, hard coded links be gone.\r\nOnly Dev_Working_Branch links are those that actually point to the Dev_Working_Branch :D (e.g. to tell you it's the dev place :D)"""
1650,162625168,"b""I agree, if the script file name hasn't changed, we should reserve the original .meta files"""
1666,163868605,"b'I was going to create another issue to standardise on our #IF statements throughout the project.  As we head towards a more multi-platform architecture, having single definitions for each state will be critical.'"
1666,163870563,b'#1667 created for sorting out later'
1666,163871517,"b'Why has this namespace changed, as it is located in the ""Common"" folder?'"
1666,163871792,"b'Why has this namespace changed, as it is located in the ""Common\\Extensions"" folder?\r\nPlus it dirties the base MRTK namespace'"
1666,163873087,"b""Whereas I didn't like these blocks everywhere for reflection. Is this flattening of the lookup going to cause future issues?"""
1666,164080698,"b'My point there would be (as per my comment below) then we should look to fix the generator for the future, rather than muddying / dirtying the API with rogue classes in the base namespace.\r\nFixing the source rather than the symptom.'"
1666,164080895,b'My Point @NeerajW is that (agreeing with @StephenHodgson ) is that we should fix the generator (in the future) rather than dirty the API.'
1666,164081117,"b""Yes, I had to fix those errors, which only shows up on a UWP build.\r\nFixed by altering it's name accordingly."""
1673,164793420,b'Removed'
1623,165055055,b'Please include the standard license text used in ALL MRTK scripts'
1623,165055296,"b""Please remove this and all other images from the base HoloToolkit folders. They're duplicates of the example"""
1623,165055350,b'Please include the standard license text used in ALL MRTK scripts'
1623,165055771,b'Please include the standard license text used in ALL MRTK scripts'
1685,165666955,"b""Strangely enough, Yes. Wouldn't compile without it.  Very odd.\r\nIf you think it's an issue. Lets' raise an issue and come back to this later."""
1685,165668987,"b""I changed it in the Editor.  Looks like Unity is still retaining the original project name in the asset.  I'll fix that.\r\n"""
1685,165821484,"b""Good point, I'll put the Microsoft bit back in and the suffix and then merge."""
1685,165821544,"b""That explains why it wasn't picked up before #Phew"""
1711,167666631,"b""I thought we removed this prefab some time back?  How come it's back?"""
1711,167667159,"b""Did you mean to remove this prefab? Can't see it elsewhere"""
1711,167668212,"b""If we've moved these to a new VirtualKeyboard namespace, the folder name should be renamed as well.."""
1711,167905217,"b'When you say ""I need to use both UX and Input folders in my project"" @NeerajW it makes me shudder.\r\n\r\nIMHO, the MRTK project is a full fledged asset, meant to be used / shipped as a whole.  It doesn\'t bloat the project or cause any issue by leaving the main MRTK folder intact.  in some way, that would be wholly resolved by having all the code wrapped in a single DLL (but let\'s not go there)\r\n\r\nWith Unity, there isn\'t any practical reason to remove asset code from a project and if people feel they need to , then we need to address that.  Simply put, just removing ""stuff"" without understanding why people do it is likely to cause runtime issues later because they removed too much.'"
1711,167973165,"b'Based on this @NeerajW , then we may need a small re-think on the Multi-VR solution to breed more modularization, if we intend (rather large) chunks to be able to be split off. '"
1717,168271257,"b'Possibly but this PR was only to future proof the current functionality rather than change it.\r\nBetter we have a separate PR to review ""Destroy""s use through out the project?'"
1718,168429333,"b'I thought the plan was to only support from 2017.2 from now.  But as this is targeting Dev, should it matter?'"
1718,168429542,"b'As dev is only going to support 2017.2+, I think this should be ok?'"
1718,168429693,"b'Agreed, Editor version should stay at 2017.2 until 2017.3.x is approved for use'"
1743,170293796,"b'Might be a little pedantic, but I\'m not sure about the use of the name ""Standard"".  Naming could be easily confused with Unity\'s own standard shaders or other shaders provided in other assets.\r\nI know it\'s in the MixedRealityToolkit shader folder to distinguish from other shaders, just not sure on the name.\r\nSo this is merely a descriptional issue. Happy to be overruled.'"
1743,170296799,b'Why do we have TWO materials folders in the new example.  Can the files in Models\\Materials be transferred to the Top level materials folder in this example'
1743,170297244,b'Seen needs to follow the new standards for examples and have a DialogBox detailing the reason for the scene.  Check @cre8ivepark work in the updated examples'
1743,170297565,"b'Ideally, the scene also needs to follow the updated standards.   The InputManager should be in a folder named ""Managers"" in the scene hierarchy.'"
1743,170298913,"b'In immersive, the scene are not visible as the floor boundary blocks view.  Suggest either re-orientating the scene objects above the floor, or disabling floor in the boundary for this example.'"
1745,170403706,"b'That\'s a fair point, if the hand draggable object was never meant to be affected, then this would change it\'s behaviour in the scene. Nice catch @keveleigh \r\n\r\n@michaellperry two suggestions:\r\n1: Make this configurable, so the user can opt to have the IsKinematic enabled / disabled with this option (Name it something like ""FreezePhysicsWhenGrabbed"").  Only do the behaviour if enabled.\r\n2: Alter the flow of the change to:\r\n* Have a private ""Altered"" bool to denote the setting was changed\r\n* Only set  ""Altered"" bool to true if isKinematic was altered (e.g. from true to false), if already False, it was not altered.\r\n* Only set isKinematic back to true of the ""Altered"" bool was true (and reset ""Altered"" back to false)'"
1759,170866610,"b""Simply put @KevinKennedy , builds have to work for BOTH UWP and Standalone.  So that consumers can utilise other frameworks for VR builds.\r\nIf it doesn't build standalone, it can't be merged."""
1759,170866771,"b""Agreed, we don't use internal (yet) in the MRTK, should be public or private to be clear."""
1759,170866978,b'See earlier comment as to why'
1761,170928786,"b'Please check namespaces, as these were all updated to MixedRealityToolkit'"
1772,171085065,"b'So, what do we use in place of this and does omitting it for standalone cause issue?'"
1773,171233272,b'Reset .Asset files'
1773,171233282,b'Reset .Asset files'
1773,171233299,b'Reset .Asset files'
1773,171233541,"b""Odd, even after regenerating the .asset files, this was the same.  Possibly a unity default they didn't update for 2017.3, odd\r\n"""
1773,171233829,b'com.Microsoft.MixedRealityToolkit-Unity and updated'
1759,171332603,b'Not that we support other non-MR targets (yet) but we cannot prevent users from using others with our asset in their project.'
1773,171333528,b'Project Settings file updated'
1773,171535911,"b'Let\'s chat about it when you get online.  It could be argued that the SDK has it\'s own examples and the MRTK might have it\'s own examples (for non-SDK use)\r\nI see the SDK being it\'s own ""thing"" entirely imho.'"
1743,171637670,"b""Soo close.\r\n![image](https://user-images.githubusercontent.com/1793042/36859953-f5a3ec64-1d77-11e8-9711-18ed94d4cad1.png)\r\nAs you can see from this screenshot, there are still a few issues:\r\n\r\n1: The dialog window is unreadable when you start the scene.  Might be better to place it at an angle to the left or right of the camera start position.  Just so the viewer can read about what they are going to see before walking around. (shouldn't have to walk to the other end of the room to find out)\r\n\r\n2: Need to position the elements down slightly, so all the headers can be seen without blocking each other (a minor point but just to improve its initial look)\r\n\r\n"""
1743,171982336,"b'Great stuff, if you want to pull those conflicts from Dev_Working and resolve, should get this merged today, syncing and reviewing'"
1785,172047917,"b'Due to the current state of Unity, we do not advise using the null coalescing operator.  Please revert to the old if == null check.'"
1791,172066345,"b""If it does, then it needs fixing again in stabilisation and then merging that fix in.\r\nThis PR only replicates what is in Stab now.\r\nAlthough, I agree, this should follow standards.  I'll fix here then submit another pr to stabilisation"""
1839,175256039,"b'This renders this function redundant. Was this intentional, if so, then just remove the function or update.'"
1839,175256063,"b""Can we separate out these Enums and if possible make them more generic? (one for each enum).  Also don't suffix them with Enum, as this is determined by its type.\r\nSeems these are fairly common UX style enums that should be standardised and reused.\r\n\r\nIf these really are ONLY for this component, then they should be private."""
1839,175256091,"b'Same comment as with Tooltip Connector, either generalise these for all UX as separate public scripts or make them private. As well as removing enum suffix'"
1839,175256134,"b'if there is only one case, then just use IF not switch.\r\n'"
1839,175256142,"b'Same as above, if only one case, use IF not switch.'"
1839,175256156,b'Good use of Switch.  Having multiple cases and a defined default.'
1839,175256169,"b'Same as above, use IF with switches with only one case and no default.'"
1839,175256191,b'Same Enum comments as before:\r\n* Separate out to unique cs file for public and make generic\r\n* Remove enum suffix'
1838,175256707,"b'Cannot just rename classes when the intention for the script has not changed.  Revert this change and mark the class as [Obsolete(""AudioEmitter is being deprecated, please use AudioInfluencerManager instead"")].  This causes a braking change which should be avoided for Master. (fine for dev_working)\r\n\r\nWhat is the reason for the file rename?  Does it change the base reason for the script or is it just cosmetic / influential.'"
1838,175256757,b'Do not separate out dependencies on to separate lines as thi makes it harder to read.  The standard used in MRTK is to have all dependencies on the same line as the class.'
1838,175256768,b'have you tested that this component can now be enabled / disabled as per the comment.'
1838,175256994,"b""Please extract enum in to it's own file.  We should never embed enums unless they are private"""
1838,175257004,"b'Please extract structs in to their own file, should never embed structures.'"
1838,175257121,"b'This demo scene needs updating to the new standards defined by @cre8ivepark \r\nShould have:\r\n* Information dialog describing scene\r\n* More information as to what it is demonstrating\r\n* Should be more of a Show normal, LoFi and HiFi so as to better demonstrate what the scripts provide. (use gaze to activate /  deactivate each)'"
1838,175566324,"b""Which is fine, but class name changes have to be controlled else they just break projects.  Given you are changing the logic and function of this class, it might be better to mark the old as obsolete (so you don't inadvertently alter existing projects using it) and create your new class to supercede it in a future release.\r\n\r\nYou would need to do A/B testing to ensure your updates don't break existing implementations."""
1838,175566586,"b""So from your testing, this update call has to stay in or consumers can't enable / disable it on the fly"""
1838,175567546,"b""It's not just about editor access @davidkline-ms , it's more of a stanards thing with Unity.  The recommended standard to use with such fields is to have a Private Field that is serialised (which makes it visible in the editor), then only add the public variant if you intend for the field to be accessed outside of the class."""
1846,175729822,"b""It's for a couple of reasons, a simple case is so that enum / struct changes don't affect the classes they are used by.\r\nOrganisationally, the intention is that PUBLIC enums / structs will be used by many classes, so should be separate.  Only if it is a private enum for a specific class should it be included in the class.\r\n\r\nThe other reason is because Unity! (the default answer for most cases)"""
1846,175730087,"b""Agreed, I'm going to do a PR on @StephenHodgson branch to add my thoughts (esp as the next section actually breaks this principle :P)"""
1846,175730229,"b""An example is provided in this section Do's / Dont's"""
1839,175776983,"b""Don't leave commented out code in the file. Just delete it. (git is your friend)"""
1839,175777610,b'Public enums should be in separate class files'
1906,178826279,b'#FaceSlap '
1906,178841424,"b'Added flags to ButtonAction and InputAction ""Just in case""'"
1906,178879186,"b""Let's leave constructors off for now and plan to add them later once we see how this is running\r\n"""
1909,179525636,b'Explain what a PME is before using the acronym. Always explain terms before their use.'
1916,179526604,b'The SDK folder can stay as it is for now until we start adding components.  A feature for a later sprint :D '
1916,179526884,"b'Rofl, my faux German filter must have kicked in :D '"
1916,179528567,"b'Darn it, in one update I changed it to 2018.1.0 Which seems to have not stuck. \r\nDO we want to change this again for this PR?\r\n'"
1920,179912217,"b'I may disagree on this.  While I agree and accept that in the MRTK-vNext, the only class using the Singleton will be the manager.\r\nHowever, that\'s not to say that other projects will already be consuming the singleton from the MRTK for their own projects, so it\'s still ""useful"" (even though we don\'t like it) for consumers projects.   Thoughts?'"
1920,179912237,"b""OK, that's why I put up both choices for us to determine.  The subscribers in children makes more sense as each manager can choose what to subscribe to, however, having it in the base class is cleaner :D \r\nRight, that's the path then"""
1920,179912248,b'This was only there as an example as it was separate before.  I expect a LOT of change to happen in this configuration profile as vNext evolves.'
1920,179912252,"b'We may use it later, just not used for now :D '"
1920,179912263,"b'OK, THat is certainly another way.  Having the methods defined in the interface and virtuals in the base.  Fair enough.'"
1920,179912264,b'Agreed'
1920,179913248,b'Agreed with your new method'
1920,179913252,b'Agreed'
1920,179913275,"b""Not sure I agree, as they are part of the active SDK, sure the InputSystem should grab these references, but at the time of SDK discovery, the input system wont exist yet (and we won't know which one we are using)\r\n\r\nThese are set (or will be) by the SDK discovery"""
1920,179913285,"b'Agreed.  But it won\'t ""do"" anything yet until we build a custom editor (the rabbit hole I fell in) to configure this'"
1920,179913289,b'Agreed'
1920,179913292,b'Agreed'
1920,179921339,"b'FFS, grrr\r\n'"
1920,179921342,b'Fair enough'
1920,179921346,b'Fair enough'
1792,180861726,"b""Don't get me started!"""
1954,181549087,"b""I agree, this is just hiding the problem rather than fixing the issue.\r\nI guess we'll review in vNext"""
1975,183539996,"b'I removed the implementations, but left in the Shell utility for when I eventually wear you down :P '"
2002,183793453,b'Sure\r\n'
2002,183793585,"b'I forgot about that one, thanks'"
2002,183793726,"b""Lol, without linq, it's horrible for loops :P """
2002,183794246,"b'Yes, because Unity CANNOT sort Tests :D '"
2002,183794586,b'Fair enough'
2002,183799779,"b'Can we keep this one Linq thing in, as there are no other ""nice"" solutions.  Plus it\'s is only used once on startup.'"
2002,183817782,"b""I've removed ALL bar one implementation.  Because there just isn't another clean way to Sort :D """
2002,183817821,"b'Tuple\r\nIn this case Tuple<Type,IMixedRealityManager>\r\n\r\n* Item1 is the type/interface\r\n* Item 2 is the Manager'"
2020,184641942,b'Need to be careful and check this is supported under IL2CPP :S '
2020,184643422,"b""I'm generally against Const's.\r\nShould these not be candidates for Scriptable Config>"""
2026,185043506,"b'We should standardise on the names of these assemblies.\r\nhaving ""MixedRealityToolkit"" as a prefix and either ""."" or ""-"" as a delimiter.\r\nSo this assembly would be either:\r\n* MixedRealityToolkit.Setup\r\nor\r\n* MixedRealityToolkit-Setup'"
2026,185044182,"b'We should standardise on the names of these assemblies.\r\nhaving ""MixedRealityToolkit"" as a prefix and either ""."" or ""-"" as a delimiter.\r\nSo this assembly would be either:\r\n* MixedRealityToolkit.Utilities.Editor\r\nor\r\n* MixedRealityToolkit-Utilities-Editor'"
2026,185045032,"b'We should standardise on the names of these assemblies.\r\nhaving ""MixedRealityToolkit"" as a prefix and either ""."" or ""-"" as a delimiter.\r\nSo this assembly would be either:\r\n\r\nMixedRealityToolkit.Setup\r\nor\r\nMixedRealityToolkit-Setup'"
2026,185064705,"b'We have checks on the ScriptingRuntime and ScriptingConpatibility\r\nShould we also not have one for the Scripting Backend, to ensure they use IL2CPP as the new standard for 2018?'"
2024,185090476,"b'Revert the namespace change for the Dev Branch, or retarget May or June Releases'"
2024,185090537,"b'Revert the namespace change for the Dev Branch, or retarget May or June Releases'"
2024,185090577,"b'Revert the namespace change for the Dev Branch, or retarget May or June Releases'"
2028,185743377,"b'Why remove this?  We do not want people to add components directly in to the runtime registry in the editor without using the Helper functions.  Like managers, it HAS to be managed.\r\nPlease revert this.'"
2028,186112959,"b'Fine with the rename, but this should NOT be static.\r\nPlease remove the static reference as it is only used in the tests'"
2028,186114791,"b'Please remove this asset.\r\nThere is a default configuration asset in the SDK already.  Remembering, the Toolkit alone is for advanced users, so they should setup their own (with guidance), the SDK is for noobs who need help.'"
2028,186121743,"b""Can we refactor this in to it's own function.  Possibly even a Utility class.  Seems useful for setting defaults."""
2028,186122562,"b'All MixedReality Toolkit interfaces should be prefixed to identify them as part of the toolkit (and someone elses)\r\nShould be either:\r\n\r\n* IMixedRealityFocusProvider\r\nor\r\n* IMixedRealityToolkitFocusProvider (granted this would mean renaming the others as well)\r\n\r\nThis should be something in our standards guide, ESPECIALLY if in core'"
2028,186123188,b'Same comment as the IFocusProvider.  Interfaces should all be prefixed with IMixedReality or IMixedRealityToolkit'
2028,186124802,"b'Name breaks guidelines, please update casing.\r\nAlso recommend calling this ""interactionInputSourceList"" for clarity'"
2028,186125357,"b'Is there a better way of interrogating the list to be more performant?  If we start to have a LOT (aka millions) of items in a scene, this could be a performance hog.\r\nConsider raising a task to review this.'"
2028,186125674,b'This might also work well as a c# jobs possibly.\r\nAnother Task required to investigate.'
2028,186126591,b'Missing documentation summary'
2028,186126709,b'Missing documentation summary'
2028,186126789,b'Missing documentation summary'
2028,186127258,"b'Consider naming this ""spatialInteractionSources"" to make it clearer.'"
2028,186127585,b'Missing documentation summary'
2028,186127620,b'Missing documentation summary'
2028,186127682,b'Missing documentation summary'
2028,186128133,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128235,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128274,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128301,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128336,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128382,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128448,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128637,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128788,b'MRTK Interface names should be prefixed with either IMixedReality or IMixedRealityToolkit'
2028,186128926,b'Still pending :D '
2059,187122839,"b""This isn't really needed unless you also want to prevent use at runtime (which we don't)\r\nCan we avoid #if tags unless we really need them."""
2059,187123406,b'I thought we agreed to not use other License texts throughout the project.\r\n@davidkline-ms ?'
2059,187123483,b'And here @davidkline-ms '
2059,187123568,b'And again?'
2059,187123626,b'Gremlins?'
2059,187123904,b'Questionable.'
2059,187124217,"b""Should this be in definitions?  It's a Struct after all."""
2059,187124360,"b'Same again, should be in definitions.  In a subfolder if need be.'"
2059,187133080,"b""For the MVP, we aren't targeting any platforms that run on arm. So let's leave it off now and reevaluate when we need it. """
2092,188110475,b'A possible contender.  \r\nThese datums are needed to store the various data types used by Input in a uniformed (multi-platform) manner'
2092,188110612,"b'Rofl, they are needed everywhere in these updates.  First Rule of testing, make sure it tests!'"
2092,188110667,b'Considering'
2092,188110831,"b""It's taken from the Enum atm, not sure it's needed yet but that will come from actual testing."""
2092,188110869,b'Like EVERYWHERE :D '
2092,188111102,"b""??  It's the position of the Grip, same as Pointer and the base Controller."""
2092,188111139,b'yup'
2092,188111169,b'agreed'
2092,188111235,b'Fair enough'
2092,188111275,b'OK'
2092,188436548,"b'I\'ll fix those later, with so much change, I want to make it ""work"" (tm) first.'"
2092,188436616,"b'tbc, when it works :P '"
2092,188439316,"b'Windows.UI.Input.Spatial.SpatialInteractionManager\r\nAlthough I\'m concerned about the ""GetForCurrentView"" call, as Unity may interfere.  In my experience, such a call can only work in the UWP app.'"
2092,188439425,b'Will review once we get further.'
2092,188439545,"b""Ahh, forgot to update the descriptions after moving them. Will fix that as it'll easily be missed\r\n"""
2092,188439594,b'Agreed'
2092,188439848,"b""We can review as we progress, as it's the Interface it implements, we have a bit more freedom. If it was a concrete class we would have issue."""
2092,188442900,"b'Used the same method as used in other parts of the toolkit. Will review and update.\r\n\r\nI don\'t particularly like this approach, but it will do until ""I can find something better""'"
2092,188443194,"b""Didn't work in the Unity project.  Although I could type and have the code recognised.  It caused errors in the Unity project.\r\n\r\nMaybe there is some magic to have this only recognised in the Player project (and ignored in the main one?)  /cc @StephenHodgson """
2092,188443301,b'fixed the interface descriptions'
2092,188443415,"b'Renamed to InputSourceState, including enum'"
2092,188590028,"b""Will review.  ANd I know you are against Wrappers @StephenHodgson but it's much better to control that from a Single class and use our own implementation, rather than spat Unity stuff everywhere as it leaves us open to issues if Unity introduce a breaking change.  I prefer to be in control, not unity."""
2092,188604403,"b'Yeah, great hand models do not make a Mixed Reality controller model :p '"
2092,188605271,"b""Again, we'll refine once we have an MVP.  The MVP is classes as a single API version with WMR controllers.  Then we can extend to support the next SDK/Controller - OpenVR"""
2092,188881879,b'On the namespace thing.  It IS using the UnityEngine.Debug.Assert. in the same way you do in the Input manager :D\r\n\r\nP.S. Wrappers would make this MORE clear :D'
2092,189431025,"b'Well, we have Handedness.None for those, or we can re-think.\r\n\r\nI\'m also considering restructuring the relationship between ""device"" and ""Controllers"" as I\'m starting to feel we need a separate ""detection"" logic for controllers.\r\n\r\n\r\nSomething less that the forced approach of VRTK and definitely separate to the ""all in one"" approach in current HoloToolkit.\r\n\r\nBut want to formalise these first controllers, first.'"
2092,189431086,"b'Already done and updated the InputSources you already have after I pulled your patest changes.\r\n\r\nUpdated the Capabilities logic to use the InteractionDefinitions dictionay, which is more efficient.\r\n\r\nBut I seriously need to rethink the ""Supports Capability"" logic, as it returns true if ONE of the required capabilities is valid, which could cause issue.'"
2092,189431105,"b'This is a pure test only (as highlighted in the commit), just a playgound while I test access.\r\n\r\nThe method here is already wrong and I need it to infer from the InputSystem, not direct from the controller.\r\nUlitmately though, both direct and input system will be required to cover advanced cases.'"
2092,189431141,"b'Rofl, I was going to remove the two new ones as I found a way around it following our discussion.\r\n\r\nSo, which method do you prefer??\r\n\r\n* A single 3DoF\r\n* Separate Position and Rotation 3DoF\r\n\r\n#Fight '"
2092,189431147,"b""It's the same as used in the InputSystem, but I'll review again."""
2092,189431160,"b'Fair enough, got to get our connotations right.'"
2092,189439675,b'Temp only. Need to separate device state to Mrtk state (so) but was to lazy to do it atm \xf0\x9f\x98\x8e'
2092,189439682,b'See above'
2092,189439698,"b'Same as above, wip'"
2092,189439977,"b'Possibly an oversight, was fairly quick in updating these, just to fix build errors.\r\n\r\nThere is thought that these should all be ""controllers""?? But I\'m not convinced on this one \xf0\x9f\x98\x82'"
2092,189440024,"b'We need to build a matix of the different input sources /types for how each should be handled and how configurable they should be.\r\nStarting with what we have today., e.g speech, gaze, touch, clicker, wmr controller, gesture, etc'"
2092,189440348,"b""There is that thought, but it happens when it's working in both roles. Will see if I can remove the duplication"""
2092,189440396,"b""It means the controller does the lifting of translating raw input in to its data classes. That would be static for each controller and shouldn't really be touched (it's particular to that controller)\r\n\r\nThe Dev should be more interested with what they then do with that data. """
2092,189440427,"b'Agreed, this was just being lazy as we need an internal state definition. But sure I my mind how that looks yet'"
2092,189440449,"b'Agreed, I think it was an oversight'"
2134,189456859,"b""As discussed, I personally don't like the multiple GET option as it complicates the API.\r\n\r\nWe should have the following allowing the model to store and retrieve the data as it sees fit:\r\n* Set Data\r\n* Get Data\r\n\r\n\r\nWhere as this is now:\r\n\r\n\r\n* Set Data\r\n\r\n* Get Bool\r\n\r\n* Get Float\r\n\r\n* Get....\r\n\r\n\r\nWhich makes the code look very messy.  I'd prefer to keep the original model I laid out and only return to this if we hit issues.\r\n"""
2134,189456863,"b""This isn't used for 6DoF unless I've missed something?  We have the Tuple for that."""
2134,189456866,b'I like this new separation'
2134,189511315,"b'I suppose that is a compromise, sure.'"
2092,189511456,b'that was YOUR change :P '
2092,189547927,"b""I'll be reverting following the discussion last night, yay more work.\r\n"""
2092,189547962,b'tbc'
2092,189547992,b'ok'
2092,189548014,b'ok'
2092,189548391,b'I think we resolved this in talk last night:\r\n\r\n* InputType is the Physical Input Type (maybe we should rename it)\r\n* Input Action is the Logical Action that is (should) be sent to the InputSystem\r\n\r\nThe mapping directs a specific input to output the action the dev has configured.  Multiple inputs can point to the same action.'
2092,189548529,"b""That would be fair, but I leave to you to review since I'm unplugging inputsource from the controllers now."""
2092,189548921,"b""But the other Pointer code needs to go in to it's own static class for reuse, leaving only \r\n\r\n* RegisterPointers (meant to initialise or replace all current pointers)\r\n* Unregister (although this could be achieved with RegisterPointers(null)\r\n\r\nPossibly Register Pointers needs renaming if the array is intended to be modified through it."""
2092,189549149,"b""Following comment below, if you intend Register to allow pointers to clear\r\n\r\nBut if it is already Null, you shouldn't allow assigning null.  You should only call register if there is something to register?"""
2092,189549292,b'As discussed above:   I think we resolved this in talk last night:\r\n\r\n* InputType is the Physical Input Type (maybe we should rename it)\r\n* Input Action is the Logical Action that is (should) be sent to the InputSystem\r\n\r\nThe mapping directs a specific input to output the action the dev has configured. Multiple inputs can point to the same action.'
2135,189553099,b'Maybe we should take some of these Enum Values for the Device Input Type (yay thought of a better name)'
2135,189553461,"b""Given the device nature of the use of this enum, I'll remove it from Input (or create a new one in _Core)"""
2135,189553680,"b""you were supposed to leave in the single Get, but I'll re-add this after merge"""
2137,189635339,"b""Lol, no, that was just one attempt, I used ID in another class, I'll fix that\r\n"""
2137,189830106,"b'lol, see comment. i ran out of time.'"
2127,190851410,b'Not having the same #IF as others?  No checking for NetStandard2?'
2127,190851430,b'Not having the same #IF as others?  No checking for NetStandard2?'
2173,191056603,"b'Except that Pointer is unique to pointers ONLY, Hold is a held state for any input\r\n'"
2173,191056608,"b'#Grumble, only a default :P'"
2173,191056614,b'Please elaborate @davidkline-ms ?'
2173,191058597,"b'Ok, sorted out the issue I believe you were pointing out.'"
2175,191069158,"b""Why change this to a var?  It's a fixed implementation with a concrete type, a var is just going to add unnecessary overhead"""
2175,191069175,"b'Following testing, we need to add a null check here'"
2175,191069198,"b""I approve of this abstraction,  I've been doing it more and more in refactoring."""
2175,191069220,"b""Not entirely sure why we need to have this, but not opposed to it.  The MR Manager is the one component in the toolkit that can't really be stripped out,. Unless we are now also looking at a consumable component model?"""
2175,191069233,"b'Why remove this error?  The MRManager cannot operate without a config, unless you have now replaced this with the popup you mentioned.\r\nEven with the popup however, it is still a valid error if you try to run the project without one'"
2178,191086792,"b'I do, to create the interaction for the controller'"
2178,191089749,"b'ok, removed'"
2178,191089752,"b'ok, removed'"
2184,191311324,"b""It's the simplest way to provide 1-1 mapping with a physical input without lengthy lookups or other costly mechanisms.  But agree that we should try and iterate on this later, for now, this works for the MVP."""
2184,191311958,"b""Axis is Optional, which is why there was an overload for the AxisType.  I left it off orrigially as it broke the Inspector, just added the overload and it's now fine?  Oh well."""
2184,191312040,b'Renamed'
2184,191312094,"b'Lol, my bad, moved'"
2184,191312742,"b'Yes, because the values we set are generic and this now uses the generic SET method you created :D \r\nElse, I would need to create overloaded versions for each value type.\r\n'"
2184,191312868,"b""It was added orriginally when we had an InputActions array, it is a little redundant now. However, I'd like to keep it for now as we haven't yet fully settled and re can remove this in the Alpha pass"""
2184,191313013,b'I moved them with the other Manager management code and put them in the order in which they are used there:\r\n\r\n* Container Add\r\n* Initialise\r\n* ...'
2184,191313082,"b""We'll need to re-evaluate controller finder and adapt when we get to that implementation."""
2184,191313230,"b""It's the generic device interface for ALL SDK's not just Windows"""
2184,191314023,"b""No, this is a simple DTO for the controller mapping profile, as we don't need the data parts of the InteractionProfile in the serialized configuration.  Unless you think we can do away with it?\r\nFrom this mapping, e create and initialize the interactiondefinitions at runtime."""
2184,191314405,"b'renamed to ""WindowsMixedRealityDevice"" (it\'s a device not a manager :D)'"
2184,191314424,b'Done'
2198,191469852,b'I like catch-alls and also good if I want to configure just one mapping for All controllers / SDK types'
2201,191608445,"b""I would ask if there is actually a good reason to remove the property.  It seems a useful override if you wanted to limit the pointer extent.  Unless this is being removed because it's causing a problem.\r\n\r\nLikely this will be re-implemented differently in vNext, so I would vote to keep it in for backwards compatibility for now."""
2204,191663048,"b""rofl, now we are strategizng on #if names :P  \r\nSure, I'll quickly change that so we can progress."""
2204,191676125,b'Already removed from your fix changes'
2204,191676399,"b""This is scaffold only as we haven't got the SDK detection stuff in there yet\r\nIn reality, NO.  As you can only have one headset on at a time :D (unless Zaphod Beeblebrox wants to try it)"""
2204,191676530,"b""We could but MVP.\r\nI'll see about using a different controller model in the devices PR."""
2204,191676921,b'Removed'
2204,191677904,b'Already moved'
2204,191678280,"b""I'll remove it.  I'm sure there was a good reason originally but I forget now."""
2204,191678467,"b'Grr, that was your property, but my bad for not documenting it when I grabbed it'"
2204,191684746,b'Done'
2184,191733076,"b""I'm thinking @StephenHodgson that we shouldn't be serializing these data fields.  Thoughts?"""
2184,192043348,"b'OK, will update with the next batch'"
2233,192571958,"b'If input source is not needed in creation, why is it part of the Gaze Constructor?\r\nDoes this need a little refactoring?'"
2184,192597155,b'Helped with debugging to find out what default options were set. Could also probably add test cases for the config values.'
2184,192597202,"b""It's not the singleton that was being initialized twice, is was the Runtime DeviceManager.\r\n\r\nIn MRManager.Initialise, we add managers and then call InitializeAllManagers.\r\nBUT, when you add a RunTime manager, we also initialize it (as it wasn't expected to add runtime managers during MRManager initialization, now we do)\r\n\r\nSO we need to ensure Runtime managers added on MixedRealityManager startup don't initialize themselves.  But it's needed at runtime of course."""
2184,192597313,"b""Make up your mind :P \r\n\r\nBut we need to find a good use case for serialising them.  These are input values direct from the controller, serialising doesn't help unless you want to enable some sort of suspend / resume.  But on resume, any serialized values will be immediately replaced with the next controller values.\r\n"""
2184,192789812,"b""It wasn't removed, it was simply replaced with the same methods in the Manager interface (which actually had more)"""
2184,192789845,b'Reverted'
2184,192789923,b'Sorted'
2184,192895539,"b""Great find @keveleigh \r\nIn the Controller code it is transforming using ``` CameraCache.Main.transform.parent.TransformPoint```\r\n\r\nIf you look in \r\nhttps://github.com/SimonDarksideJ/MixedRealityToolkit-Unity/blob/867acc556d5e4b1b827e2dd18faf8e3e29ef60a3/Assets/MixedRealityToolkit/_Core/Devices/MixedReality/WindowsMixedRealityController.cs#L189\r\n\r\nYou'll see that is transformed already.  Obviously the default setup I created was slightly flawed.\r\nSo we'll need to think of a generic way to correct this automatically for projects.\r\n\r\nDon't recall ever seeing any such guidance regarding scale for creating custom hands, so we'll likely need some docs on it.  The Cube's I initially created we the standard cube (e.g 1m, which might explain their size :D)\r\n\r\nGreat find and glad it was something so simple."""
2184,192896155,"b""Axis is correct in my understanding @davidkline-ms , as it describes the type of input data, from Axis 1d through to Axis 6d.  Digital is the only exception as it's an on/off state, pressed or not.\r\n\r\nWe can only go so far down the generic route when describing these things."""
2184,192896258,"b'Good point, will review'"
2184,192896275,"b'Good point, will review'"
2184,192896448,"b'in a TODO for a later PR, iterating on what exactly we need'"
2184,192896730,"b""The defaults are for only if you do not create any.\r\nIt's a different task to update the inspector to load defaults.  @StephenHodgson  and I are still testing / toying with the correct pattern for this."""
2184,192896864,"b'The defaults need to move to ""Per-Controller"" anyway, these are just test for now.  As each controller type will have it\'s own defaults :D '"
2184,192897019,"b""Fair enough, we aren't using it yes as the device doesn't initialise it.. yet.  But we can review in a later PR as we iterate forward"""
2184,192899322,"b""Double checked.  The function will only ever return a valid InteractionSource state.  If the type of the parameter passed in is not an InteractionSourceState, it will throw an ArgumentOutOfRangeException.\r\n\r\nDon't think we need anything more there really.  In reality, the check isn't needed, but I like to walk on the safe side and be sure."""
2184,193194826,"b'See above, the terminology is correct'"
2184,193198622,"b'Just confirmed and replicated locally.  Noticed a few interesting points we\'ll have to educate devs about, such as visualizer position (seems centered on the Touchpad), camera settings, etc.\r\n\r\nIt also highlights the need for:\r\n* An SDK component to create a default ""Rig""\r\n* A Rig validator, to avoid the issues detected here.\r\nPlus some other stuff, going to create some tasks for ""next steps"" once this is merged\r\n'"
2184,193254380,"b'If the RequestNewGenericInputSource returns null, then it will be null.\r\nThat was the pattern we settled on, unless you want to alter it now?'"
2293,195245433,"b'Lol, whoops, fixed.'"
2299,195251024,"b'I\'ll have a look, however Checking the type at runtime will incur a boxing cost most likely.\r\nMain point is it shouldn\'t matter using this implementation. Main reason for the check in the old version was that we had multiple datum storage, now we only have one. \r\n\r\nThe type set when the mapping was created enforces the data type stored.  Although I suppose we could have a ""Validator"" instead of building it in to the mapping.'"
2299,195251561,"b'DeviceInputType will GROW,  So I fully expect to add Thumbstick 1 / Thumbstick 2 when we do Xbox controllers.\r\n@StephenHodgson does disagree with me on this, but I cannot think of another way to uniquely identify differert hardware types in a fasterway than this lookup.  Most SDK\'s (Xbox Gamepad is a good example) use an enum, not an ID, then apply different ""GetValue"" methods for each control.\r\n'"
2299,195772523,"b""Not really, as it would further complicate the lookup.  The reason the DeviceInputType is the key, is so that when a button is pressed, the code takes the input and looks for the mapping for that input.\r\nWith it being an enum, it's an ID lookup in any case and as fast as we can make it.\r\n\r\nPhysical -> SDK -> InputType -> InteractionMapping"""
2299,195773622,"b""How does it limit us?  A key is unique, so we can't assign multiples.  Plus the interactions are what are configured for that physical input.  Theres not that many to create an issue.  \r\nAlthough, yes, we do need more input types as we add more physical controllers with more buttons.\r\n\r\nIt was suggested we also have a filter on the controller for what physical inputs a controller has for easier config"""
2299,195774983,"b""OK, then let's finish up this PR which was to address a different issue. Then create a task to revisit this later, as it is currently working."""
2299,195776770,"b'Agreed, the only time you should ever create a mapping in code, is for the controller device defaults'"
2299,195862743,"b'Tuple<T,T> is NOT a value type!, so we have to have this for this use case'"
2299,195862813,"b'Scaffold, but I shall remove the copied code'"
2299,195862833,"b'Scaffold, but I shall remove the copied code'"
2299,195862956,b'Will check as I thought I had added that.'
2299,195862977,"b'Scaffold, but I shall remove the copied code'"
2299,195862987,"b'Scaffold, but I shall remove the copied code'"
2299,195863002,"b'Scaffold, but I shall remove the copied code'"
2299,195863024,"b'Scaffold, but I shall remove the copied code'"
2299,195863116,"b'Duplicate comment.  However, I will double check'"
2299,196096691,"b'Quite possibly, worth adding'"
2299,196096841,"b'So, do you have a working alternative?\r\nNoting we have to handle BOTH value and reference types'"
2315,196097997,b'Still not sure we need this separate action.'
2315,196098544,"b'Note, Multi-VR breaking issue'"
2315,196098679,b'Multi-VR breaking issue'
2315,196107783,b'Then this should be a static in the InputSystem that derives from the Currently configured pointer action.  Unless you feel this is a different action to the one I would configure on the spatialPointer\r\n'
2315,196108015,"b""Ok, agreed. Create a task for an #IF UNITY pass to remove these.\r\n\r\nbut if I switched to standalone, this wouldn't work."""
2321,197151760,"b'Daft question, but do we really need to subdivide the SDK project, other than editor code?\r\nThis seems overkill as the SDK layer is a ""Take it or Leave it"" type of project.'"
2321,197152147,"b'Why remove ""Setup"" as it was a good clear distinction from the Editor setup code and the rest of the project?'"
2321,197169223,"b""Not for the SDK, it's not needed.  It's meant to be the simplest of projects, just drop in and use.   Doesn't need the same level of complexity as the main project."""
2322,197450658,"b'yes it was being used., That is until @StephenHodgson deleted the code in my devices branch :P \r\n\r\nBut, as to the Bool, I think that is currently only used by the Editor.  Will have to double check and validate in the controller space, that we test this before loading profiles.\r\n\r\nThis bool would / should also effectively disable controllers.   No config, no controllers :D '"
2334,197644179,b'RENAMED'
2334,197644190,"b""Except the controller mapping ISN'T"""
2334,197644339,"b'Then following this PR, create some unit tests to compare.  I compared before and it was comparable but easier to manage'"
2334,197645218,"b'it does, that is what the ""SetupFromMapping"" function is for.  The defaults are only for when there are NO mappings at all configured'"
2334,197647827,"b'Grr, sure.'"
2334,197647839,"b""This isn't about the input system, these are configuration coming from the configuration profile.  The default is just a backup if they forget to configure the mappings in the profile.\r\n\r\nAlthough, I suppose we could take the stand that if you don't configure mappings, it simply doesn't work :S"""
2334,197648205,"b'So, what do you want the changed statement to be?'"
2338,197741930,"b""Please review with the changes in the other PR, shouldn't be needed as it should not be using an interface\r\n"""
2338,197742124,b'How is this fixed by removing it>?'
72,68462299,b'Makes sense. Please do update the readme with such info.\n'
72,68473931,"b""I think even if the objects are placed directly in the scene we're still dynamically choosing which one to send the message to based on gaze. I believe this is a clear enough demonstration without needing to actually dynamically add the objects to the scene and removing this would make the pull request a lot simpler.\n"""
72,68475763,"b'Issue #71 is not being able to send messages to dynamically created objects, and I was asked to create test scenes to illustrate how this would work in a real scenario. I understand the rationale to keep HoloToolkit as simple as possible, but removing dynamic objects would defeat the purpose of the test case and obscure the intent of the proposal.\n\nI think it would only help developers to have as many examples as possible.\n\nIf the desire is to keep HoloToolkit simple, I would suggest adding a separate Examples/Test folder under the root HoloToolkit folder instead of keeping Test folders alongside each module. Then, tests and examples can be excluded when importing a clean version of HoloToolkit into a production project.\n'"
72,68477530,"b""Ah, I think the real underlying issue isn't whether the objects were created dynamically, but instead the current inability to dynamically decide what object to invoke from a voice command. I believe solving the latter solves the former and demonstrating it with placed objects would be fine.\n\nI believe as you do that we're likely to add more kinds of these helper strategies for command forwarding and think that by keeping the tests to the minimum required for a solution we'll have less to manage going forward. If others find value in the dynamic allocation I'm OK with keeping it, I just don't think it's necessary.\n"""
72,68605730,"b""Just a comment to clarify this:\n\n> > If the desire is to keep HoloToolkit simple, I would suggest adding a separate Examples/Test folder under the root HoloToolkit folder instead of keeping Test folders alongside each module.\n\nWe started like this but then we had cross folder dependencies which was not fun. This way developers can completely delete the folder feature areas that they don't rely on.\n"""
72,68642143,"b""Could you share what wasn't fun about keeping cross-folder dependencies in separate folders?\n\nThis is what I thought:\nHoloToolkit/UnitTests/Input - would depend only on HoloToolkit/Input\nHoloToolkit/IntegrationTests/Input - could have cross-folder dependencies\nHoloToolkit/Examples/Input - could have cross-folder dependencies\n\nI think additional examples and tests could probably outweigh a potential inconvenience of having to delete a few more folders once in a project lifecycle.\n\nAnother way to do this is potentially create a separate repository (say HoloToolkit-Unity-Examples) which could point to HoloToolkit-Unity as a submodule.\n"""
354,90522891,b'Why use switch instead of if statement?'
354,90525473,"b'readability. under the covers, switch on a string generates the equivalent IL that if/else-if blocks would up to a\xc2\xa0""magic number"" of cases at which time it\xc2\xa0uses a hashtable for better performance.'"
354,90534948,b'Great explanation Tim!'
354,90541370,b'I used the existing SphereKeyword.cs as a reference and it already uses a switch. '
354,90927152,b'This should be private'
354,91041064,"b""@HodgsonSDAS I wasn't worried about these ones as this is only testing code but you're right as it may be used as a reference.\r\nIf the method is private, [should the class be sealed](http://codebetter.com/patricksmacchia/2008/01/05/rambling-on-the-sealed-keyword/)? Or should just the method be protected virtual? What do you think?"""
354,91074598,"b'Just private.  Any Unity Methods are private unless overridden in a base class, then become protected.'"
354,91079068,b'@HodgsonSDAS Should then OnPhraseRecognized be an explicit interface implementation instead of public?'
354,91081543,"b""Good question, how are we handling other similar events throughout the new input system?\r\nI think it's fine the way it is, but if it doesn't match the pattern by @maxouellet then it should be updated to reflect that."""
354,92634292,"b""This is not a good way to change the color of a material. This method introduces memory leaks where and each renderer creates a [clone instance of the material who's color is being changed](http://answers.unity3d.com/questions/548420/material-memory-leak.html)."""
354,92635497,"b""It's based on the existing [SphereKeywords.cs](https://github.com/Microsoft/HoloToolkit-Unity/blob/0397cfab806d3e56dd18dffa4b90f4b511493f97/Assets/HoloToolkit/Input/Tests/Scripts/SphereKeywords.cs). I just changed it to apply the same color to all the children renderers.\r\nWhat do you suggest in this case?"""
354,92635961,b'Which has a bug attached to it. https://github.com/Microsoft/HoloToolkit-Unity/issues/236\r\n\r\nSolution: [Cache the references to your materials and make sure you destroy them when done](http://answers.unity3d.com/questions/711611/materials-count-increases-in-memory-issue.html)'
354,92668916,"b""Fixed this using Resources.UnloadAsset(). I think that's OK for a test scene and for something that only happens on a voice command."""
354,92677165,b'Not sure if `Resources.UnlaodAsset` will help here.  We should probably cache all the child renderers in a `material[]` on Start or Awake and destroy them when finished using this class.'
354,92681479,"b""I thought of that too but I missed an error message stating that Resources.UnloadAsset cannot be used on materials. I'm working on a shader-based solution."""
354,92818425,"b'It\'s probably best to cache all the renderers here, and be sure to check/update the cache if children are added/removed. (forgive the brevity)\r\n```\r\nprivate MaterialPropertyBlock propertyBlock;\r\nprivate Renderer[] childRenderCache;\r\n\r\nprivate void Start()\r\n{\r\n    propertyBlock = new MaterialPropertyBlock();\r\n    childrenRenderCache = GetComponentsInChildren<Renderer>()\r\n}\r\n\r\npublic void OnSpeechKeywordRecognized(SpeechKeywordRecognixedEventData eventData)\r\n{\r\n    switch(keywords)\r\n    {\r\n        case ""reset all"":\r\n            for(int i=0; i < childrenRenderCache.Length; i++)\r\n            {\r\n                ChangeColor(childrenRenderCache[i], Color.white);\r\n            {\r\n            break;\r\n    }\r\n}\r\n\r\nprivate void ChangeColor(Renderer, Color color)\r\n{\r\n    // Do Color stuff\r\n}\r\n```\r\n'"
354,92829203,b'Can this performance tweak be left for after this massive PR is reviewed and merged?'
354,92830335,b'Absolutely'
354,93036219,b'We can probably remove if empty.'
354,93042781,"b""Removing it makes the script enable checkbox disappear but we aren't handling it anyway and this is just test code... """
227,80178209,"b""We'll need to eventually rethink this design and remove the switch and .ToLower() use due to the limiting ordinal comparison going on behind the scenes (diacritics come to mind) and the tiny perf hit. OK for now.\n"""
227,80230235,"b""Agreed, but we also use keyword.ToLower() as well in the Keyword Manager, and I'll remove it there as well.\n\nThis class also needs to get the material instance on start, and got grab the components when the keyword is recognized.\n"""
354,92675569,b'You should cache like this instead: `cachedMaterial = GetComponent<Renderer>().material` in Awake or Start.'
354,92675823,"b""This should be ` Destroy(cachedMaterial);` and called in OnDestroy or when finished using the `cachedMaterial`.\r\nI'm not sure calling this method is actually doing anything beneficial and is really only supposed to be used on assets you load using `Resources.LoadAsset();`"""
582,107797308,b'Nit: extra line space and tab formatting'
341,89191283,b'Nit: Braces around if statements\r\n'
708,120204270,b'Must fix: What is the replacement here?'
708,120226788,b'(This thread continued in OverrideFocusedObjectTest.unity)'
554,104830498,"b""There was an additional warning here because the output wasn't being fully written in the vertex shader. We only write to uv.xy and uv.z, but uv.w wasn't used."""
1007,140894710,"b""Do we really need this class? Shouldn't the interactibles just implement what they need? We don't need clear references to interfaces in the InputManager since it uses Unitys event system that sends events to gameObjects which will then find the interface references on its own."""
1007,140906135,"b""The basic problem has been with the discoverability of interfaces for what interactions an object can consume.  This would be better solved on the InputManager front by knowing what event's I can consume as oppose to the guess work of going through all the interfaces especially for global listeners.  \r\n\r\nThe InteractibleObject just says I'm an easy base class that takes all interactions and you can easily find what you want to override by simply extending and override the function.  \r\n\r\nCurrently there's not an easy way to filter object interactions and or provide some base functionality for things you interact with that's common across all of them.  I'm open to other alternatives to provide filtering methods and other logic commonly across all interaction objects.  Perhaps this should be refactored in InputManager instead and provide better delegate hooks as opposed to just global listeners?\r\n\r\nThoughts?\r\n\r\nthanks,\r\n-pat\r\n\r\n"""
1007,140907504,"b'>The basic problem has been with the discoverability of interfaces for what interactions an object can consume. This would be better solved on the InputManager front by knowing what event\'s I can consume as oppose to the guess work of going through all the interfaces especially for global listeners.\r\n\r\n@paseb I\'m not sure if I understand this.  What do you mean by ""the discoverability of interfaces""?  From what I understand the reason why we\'re implementing the Interfaces was to get away from delegates and events to improve overall system performance.'"
1007,140909783,"b""@StephenHodgson, That performance is negligible. We have a slider with one side being general usability and discoverability and the other considered optimal performance.  I can handwrite a shader or write an app completely in assembly to get the best performance, though it would be crap for anyone to try to take that over or work off of what I've done.\r\n\r\nHaving just interfaces without the ability to quickly use intellisense to see what I can hook into from events represents the same problem.  That's why we need some middle ground and if someone wants to implement interfaces in all their base classes that fine.  Also if someone wanted to just extend an InteractibleObject and override an virtual function that should be fine as well.\r\n\r\nI prefer delegates or event/actions with names variables and really haven't seen any perf issues.  Has anyone done a hard study on the actual perf impacts?\r\n\r\nthanks,\r\n-pat\r\n"""
1007,140910976,b'The Unity event system does come with a overhead because it really just does a `GetComponent<Interface>` in the background.\r\nHere are some real basic profiler results run in the editor with ~30 and ~100 global listeners.\r\n![hwphjox](https://user-images.githubusercontent.com/5775094/30833077-cea35ec4-a24d-11e7-8ae4-8fd80270a408.png)\r\n![smcdkdn](https://user-images.githubusercontent.com/5775094/30833086-d8665fce-a24d-11e7-8578-9cd66b2d47fa.png)\r\n'
1007,140914202,"b'@Zod- Not sure what you have hooked up behind the 2 images above.  To be clear I wasn\'t talking about the Unity ""sendEvent"" event system but the c# tightly typed event delegates as such:\r\n\r\n`public static event Action<GameObject, InteractionEventArgs> OnTapped;`\r\n\r\nFor me the discoverability (intellisense and autocomplete of the callback) of what actions \r\nI can subscribe to outweighs any perf considerations.  Unless you\'re registering and unregistering a massive number of delegates you shouldn\'t notice any performance hit.\r\n\r\nthanks,\r\n-pat\r\n  '"
1007,140915108,"b""> That performance is negligible.\r\n\r\nI'd like to disagree, it was a major part of the reason the input system was refactored.  Although, I do have to agree with your analogy. The difference being that there's exposed interfaces for people to tap into and use as they need.\r\n\r\nI think the biggest issue here is that most people don't fully understand it, and how to use it properly.\r\n\r\n> Having just interfaces without the ability to quickly use intellisense to see what I can hook into from events represents the same problem.\r\n\r\nI agree, this is somewhat of an issue, and I can see the benefit to how this was arranged to make finding interactions easier.  This goes back to the previous point.\r\n\r\n> That's why we need some middle ground and if someone wants to implement interfaces in all their base classes that fine. Also if someone wanted to just extend an `InteractibleObject` and override an virtual function that should be fine as well.\r\n\r\nI think I better understand what this class is supposed to do now, thanks.  It's more of a basic building block for overriding and implementing custom logic.  I'm in favor of keeping it.\r\n\r\n>I prefer delegates or event/actions with names variables and really haven't seen any perf issues. \r\n Has anyone done a hard study on the actual perf impacts?\r\n\r\nYes, there was a [whole thread](https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/277) covering the tradeoffs and perf impacts with each type we suggested.  The biggest push was getting away from [`GameObject.SendMessage`](https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/224).\r\n\r\nSubscribing to delegate events decreases perf logarithmically, seeing a dramatic impact as more objects subscribe.\r\n\r\nAlthough with the push for the VR, it really doesn't matter but on mobile platforms."""
1007,140916506,"b""@paseb as far as perf is concerned, here's a link to a good perf test you can do on your own:\r\nhttp://jacksondunstan.com/articles/3043"""
1007,140917225,"b""@StephenHodgson, Thanks for the quick response!  I'm totally fine finding a middle ground were we can provide simple discoverability and fundamental building blocks that are easy to extend.  That was the whole purpose behind MRDL and HUX.  Getting away from `GameObject.SendMessage` was the right thing to do.  We provide both methods in MRDL to allow creators to leverage whatever method was easier for them though delegates were the easiest for quickly finding all the events you could plug into on a component.\r\n\r\nAre there other ways we could have a set of building block abstract classes that provide a foundation to rapidly develop off of?\r\n\r\nthanks,\r\n-pat """
1007,140917571,"b""> Are there other ways we could have a set of building block abstract classes that provide a foundation to rapidly develop off of?\r\n\r\nNot that I can think of, you're on the right track.\r\n\r\nHaving the option is fine, but really we shouldn't do all the hand holding.  At some point devs will need to make the custom logic themselves for their implementations in their own apps.  Giving the option and examples of what to use is better than packing it all in without a choice."""
1007,140918843,"b""I was just looking at Jackson's other articles as well.  Crazy sauce.\r\n\r\nSo in summary:\r\nI'm not sure we actually need InteractibleObject as a base abstract class but I'm not sure there is any other alternative that would provide the same easy override functionality.  A lot of the MRDL examples and base functionality uses InteractibleObject as a foundation class to build from.  I'm open to refactoring it moving forward though think we need it to integrate other MRDL functionality.  \r\n\r\nthanks,\r\n-pat\r\n"""
1007,140919757,"b""Whatever event system we will have in the end, an important thing to keep in mind is that inheriting from `InteractibleObject` has other side-effects than just implementing a single interface. \r\n\r\nI've recently run into the issue that adding a gameObject as modal will only absorb the interfaces that it implements and I needed it to lock them all. `InteractibleObject` will do this out of the box as it implements all interfaces but some may find this unexpected behavior?\r\n"""
1007,140920142,"b""Agreed, let's not forget that Unity plans on doing a whole revamp of the Input System as well in a near future release.  That's something we also need to take into consideration."""
1007,140922876,"b""@StephenHodgson,\r\n\r\n> At some point devs will need to make the custom logic themselves for their implementations in their own apps. Giving the option and examples of what to use is better than packing it all in without a choice.\r\n\r\nI'm not worried about devs as they should be fine using and finding the interfaces.  They are not the only ones using the toolkit and currently the toolkit is really only targeting devs.  I'm more focused on designers, tech artists, creative coders and anyone else that want get off the ground quickly and have an extensible set of abstract classes to build off of.  That's sort of the purpose of MRDL and bringing some functionality over to MRTK.\r\n\r\n@Zod- InteractibleObject isn't meant to be the one ring but simply a starting point to extend from.  Any dev would most likely start with base classes that just implement the interface they want anyway and not start with InteractibleObject.  I'm completely open to other implementations if they meet the same goal for accessibility.\r\n\r\nAgain awesome input on all fronts!\r\n\r\nthanks,\r\n-pat"""
1007,141092021,"b""Given that the modal issue and that the input system will be changing on the Unity side in the near future I'll remove InteractibleObject in favor of specifically targeted interactibles starting just with the base button class.  I think we also need a better way to subscribe to interactions through input manager but can look at that later.\r\n\r\nthanks,\r\n-pat\r\n"""
1007,140847508,b'Why is all this commented out?  Should it be removed?'
1007,140848250,b'What did this use to do?  Why was it removed?'
1007,140859957,b'nit: braces'
1007,140859986,b'formatting.'
1007,140860608,"b""Sorry I had the wrong version in there.  That used to filter and send forward the events after filtering that it's coming from and interactible in the list.  Changed this to filter and only fire the protected virtual functions based on the interactible being in the list.  I'd like to clean this up on the InputManager side allowing for external subscriptions to specific objects in the future but wanted to not have any changes to core HTK manager scripts for now.\r\n\r\nShould be resolved in the last commit."""
1007,140919169,b'This should have been resolved with the last commit.  Should have proper spaces.'
1007,142005401,b'Why is this commented out?'
1007,142275406,"b""Because Focus locking is not currently part of the FocusManager and Modal isn't we we'd want either.  Looking adding focus locking to FocusManager and the ability to have a beam controller for focus as well as cleaning up the interface to just having one for focus.  Though for the time being I commented it out till we updated the focus manager side of things.\r\n\r\nI talked with @keveleigh about this today as well.  I'll have a separate pull request for those changes."""
1007,140859799,b'nit: formatting.'
1007,140863616,"b""What am I missing here on formatting? I've updated the code comments for Input down but the other formatting looks valid to me.\r\n\r\nthanks,\r\n-pat"""
1007,140865405,b'Could be tabs vs spaces'
1007,140866926,"b""Hmm.. they should all be set to spaces.  Let me double check.  I'm not seeing the usual discrepancies in the GitHub webview I usually do when it's tab/space mangled.  Will double check.\r\n\r\nthanks,\r\n-pat"""
1007,142005499,b'Could we make this optional?'
1007,142276009,"b'Hi @StephenHodgson,\r\n\r\nWhich part would you want to be optional?  The debug log?  This is more a simple example script to show easy usage for InteractionReceiver and the debug log could be removed completely.  Do we define anywhere a conditional for logging?  Might be something to add in the future to enable/disable log spew.\r\n\r\nthanks,\r\n-pat'"
1007,142279945,b'Yeah just the debug log.\r\n\r\nLogs are pretty expensive.'
1007,142283679,"b'Yeah totally agree and usually have a #define ENABLE_LOGGING or something equivalent for toggling on and off.\r\n\r\nthanks,\r\n-pat\r\n'"
1479,155049117,b'Should we also add the toolkit version here?'
1479,155054277,"b'Hmm yeah, either here or a separate version.txt. It probably makes sense to have it all-in-one.'"
1479,155065879,b'MRTK_Version.txt or something akin.'
1479,155066164,b'I added MRTKVersion.txt to the HoloToolkit folder.'
695,130713509,"b'When I ran this, I noticed that the cursor passed right through the UI. The buttons lit up and could be tapped, but I found it visually disturbing that the cursor remained far behind the buttons instead of snapping to a collider on the buttons.'"
695,130713968,"b""Personally, I'd prefer if this UI were separated from HoloToolkit.Sharing. I use Unity networking in my applications and would find this control useful if it wasn't tied to the HoloToolkit.Sharing library."""
695,130715794,b'Looks like a good change. The above comments are suggestions.'
695,130716955,"b""This is mainly for the HTK sharing, so that's why it is highly coupled.\r\n\r\nI think uNET has a lot more flexibility and doesn't have a IP requirement seeing as they have their own matchmaking services built in."""
695,130717266,"b'BTW, your first comment is because of [this bug](https://github.com/Microsoft/HoloToolkit-Unity/issues/804) which has a PR https://github.com/Microsoft/HoloToolkit-Unity/pull/805'"
695,130718423,"b""The ability to enter an IP address may be useful in other contexts. For example, sometimes an app needs to connect to a server or another HoloLens on the local network at a specific IP address. Often in an enterprise application using the Unity matchmaking service may not be desired.\r\n\r\nBut I see in your later comment that this won't be needed in sharing in the future (Discovery Client) so probably not worth completing this pull request. Although it might be useful to have a UI for entering IP addresses during development, I don't think a finished application should require manually entering IPs."""
695,130972363,"b""I see the benefit, but I think that's something devs should do in their own project."""
484,98954480,b'This is fab :)'
513,101098017,b'Typo: unpack'
617,110981644,b'Nit: did this file really require these usings?'
617,111001603,"b""It doesn't, but the source files in the HoloToolkit repo still have these usings (and I used a script to copy everything over from there to the Unity project).  I can remove those there and then revert this part of the change in HoloToolkit-Unity."""
159,73903682,b'Did the default change for the entry? I think the previous default was Primary Client?\n'
159,73905342,"b'This is different than ""HoloToolkit.Sharing.ClientRole"" which is used in the client to specify Primary Client or Secondary Client from the user perspective. That remained unchanged with Primary Client being default.\nThis enum is used by the sharing framework to respond to a Network Discovery broadcast and I assume there is an internal mapping for the Client roles.\n'"
159,73905755,"b""That's right. Thanks for reminding me Alex.\n"""
484,98754012,"b""If you remove a user here and continue to increment 'i', you'll skip the next user in the list, right?  Say\xc2\xa0the user at 2 is removed. \xc2\xa0'i' increments to 3, but now the user at\xc2\xa03 is the one that was previously at 4.\r\n\r\nCould fix this by reversing the order the loop is iterated over, and by\xc2\xa0using RemoveAt instead of Remove to avoid a new linear search through the list."""
484,98767345,b'Yeah I noticed this while testing. Thanks!'
177,75350964,b'NIT: discoveryClientListener\n'
177,75351051,b'NIT: Convert comment to ToolTip please for better in editor usage.\n'
177,75351156,b'private variables should be: pingIntervalCurrent cased.\n'
177,75351191,b'isTryingToFindServer\n'
306,84728218,b'Nice :)\n'
306,84728383,b'Remove these lines then?\n'
306,86182942,b'Nit: Extra line\n'
513,101098266,b'I am surprised you changed it to var ;) :)'
513,101098395,b'Why are these being changed?'
513,101126723,"b""Haha, I updated my formatting wizard to catch when the type is evident, like when creating new instances.  You're pretty much writing it again after declaring the type. I think it's fine as long as it's readable.  I had a few people sway me to the darkside \xf0\x9f\x98\x88 \r\n![image](https://cloud.githubusercontent.com/assets/13334553/22979407/43aa44ba-f364-11e6-9df5-d8f3cf60c385.png)\r\n\r\n\r\n"""
513,101127830,b'Same reason as above.  The formatting wizard caught it.'
1518,165482016,b'nit: remove redundant base call and and method.'
1911,179179498,"b""Not sure I agree with this change. It's setup to do a specific thing."""
1911,182589488,"b""I'll defer to @StephenHodgson here."""
2469,204573371,b'Does this need to be a nullable float?  Surely 0 would suffice without the overhead. (or -1)'
2475,204573701,"b""It's helpful documentation for now. Can remove in beta if need be."""
2475,204697351,"b""I'll double check the id's for all the controllers, they are ours and should be sequential"""
2484,205065666,"b'Is the ""|"" meant to be a "">"" character to denote a blockquote?\r\nChange or remove.'"
2484,205065738,"b'Is the ""|"" meant to be a "">"" character to denote a blockquote?\r\nChange or remove.'"
2490,205384953,"b""Given this is us configuring the editor layout to draw correctly, I see no reason to have this configurable.  It's not something a user would touch."""
2490,205393223,"b'Remove Assert, not needed as we SET W it below.'"
2490,205393643,"b'Change this line to the following and remove the rotationCache lines above it.\r\n```rotationProperty.quaternionValue = Quaternion.Euler(rotations.x, rotations.y, rotations.z);```'"
2490,205393880,"b'Change these three lines as follows:\r\n\r\n```\r\n            rotations.x = rotationCache.eulerAngles.x;\r\n            rotations.y = rotationCache.eulerAngles.y;\r\n            rotations.z = rotationCache.eulerAngles.z;\r\n```\r\n\r\nDevs only think in eulars, Not a Quaternion expressed in a V3 :P '"
2469,205404141,"b""Daft sticking point, if this call is to prevent the function running.  Then it should be the first thing in the call.\r\nDon't declare values unless they are intended to be used or you are just generating garbage."""
2469,205404274,"b'Same here, This should be the first thing in the call.\r\n'"
2469,205404806,"b""Can we add a comment to the header of this class to detail it's capabilities, if some are not intended to be implemented until later.\r\nAlso ensure the boundary documentation reflects this."""
2469,205405101,b'Summary tag'
2490,205498685,"b'If we are still moving ahead with this, then this Assert will still need to come out.'"
2492,205548018,"b'No longer, this visualizer works for all platforms now!\r\nBut your right, that summary tag should be updated'"
2492,205548442,"b""Either it's handled or not.   Nothing happens if it's not handled, so no default is really required.\r\n\r\n\r\nAnd yes, leaving the scope open for the visualizer to be enhanced later to support different types."""
2492,205548508,"b'Ok, fair enough'"
2492,205550533,b'The names are set as per the SDK they came from.'
2492,205550743,"b'No.  The offset is to position the model closer / further away from the controller pose.\r\nIf you change it the controller will ""drift""'"
2492,205552419,"b'No, it\'s a fall though case, no need for an else.  Plus with the ""Return"" the function terminates, so an else would be meaningless'"
2492,205552607,"b'If hand isn\'t managed, nothing should happen.  A default case wouldn\'t ""do"" anything so wouldn\'t be needed'"
2492,205552670,"b'If hand isn\'t managed, nothing should happen. A default case wouldn\'t ""do"" anything so wouldn\'t be needed'"
2492,205552997,"b""Darn you @StephenHodgson , you told me it wouldn't work/ Right changing it back!!!"""
2492,205553420,b'removed'
2492,205572053,"b""Done, although it's not showing?\r\n"""
2492,205625846,"b'That should be an issue against the devices and not the visualization PR.\r\nBut in any case, it\'s against Tracked as that is when the SDK starts sending pose / button updates.  In a non-tracked state, you only get buttons.\r\n\r\nI believe this is a Unity issue btw @keveleigh , I have had on occasion, events being fired but not being received by a client script.  You can see this if you attach a debugger to the Input ""RaisePoseInputChanged"" event in the OpenVR controller.  This eventually gets to the ""HandleEvent"" function in the InputSystem, you see the event FIRE with data but the OnSourcePoseChanged event is not received by the visualizer.\r\n\r\nIt\'s intermittent though and seems linked to the performance issue that is observed on the standalone build.\r\n\r\n\r\nSwitch to UWP and it works perfectly.'"
2492,205625902,"b""Hmm, I'll check\r\n"""
2492,205625943,"b'And yes, works fine for me :D'"
2492,205626237,"b'Yup, checked the prefabs and they have the default materials and lighting that come with the controller\r\n![image](https://user-images.githubusercontent.com/1793042/43292912-813675e6-912f-11e8-998c-cb50239b6c40.png)\r\n'"
2492,205772814,"b'As stated in Chat.  Prefab rotations are only start values, they are overwritten when moved.\r\n\r\nUnless you are saying that on Controller initialisation, we capture that value and persist it for the lifetime of the Controller, possibly?\r\n'"
2492,205773199,"b""This feature is superfluous in Alpha and was removed.  We will review going forward if it's actually required."""
2492,205776195,"b""Got 'em, merged and done\r\n"""
2496,205778525,"b""If we are agreed with this rename.  This should be done in the visualization PR, as that has already made changes to this (and the inspector) classes.\r\nSo please revert these and I'll rename in the visualizer PR"""
2496,205798805,"b""Can we then move this file to another folder then, say handlers? (including it's inspector)"""
2492,205892228,"b'I believe so, as we took the entire controller bundle for both the hands and the touch controllers.\r\nEach are downloaded separately'"
2492,205892345,b'With this rotation they are angled correctly in view.  Try it and see :D  '
2492,205917748,"b""Sure, I'll remove them and add links to where they can download them"""
2492,205917816,"b""OK, I'll reset the rotations and leave devs to align themselves, or you can update the controller models @davidkline-ms """
2492,205922645,b'Rotation reset'
2512,205973248,"b""What if the ActiveProfile is null?\r\nShouldn't happen, but if the user deletes their current profile, it will be null"""
2513,205973275,b'Summary Tag'
2513,205973283,"b'Initialise with ""= 0""'"
2513,205973291,"b'Initialise with ""=0""'"
2513,205973315,b'Summary Tag'
2513,205973324,"b'Initialise with ""=0""'"
2513,205973329,"b'Initialise with ""=0""'"
2513,205973340,"b'Initialise with ""=0""'"
2513,205973345,b'Summary Tag'
2513,205973348,b'Summary Tag'
2513,205973377,b'Summary Tag'
2513,205973386,b'Summary Tag'
2513,205973523,b'Summary Tag'
2513,205973534,b'Summary Tag'
2513,205973541,b'Summary Tag'
2513,205973548,b'Summary Tag'
2513,205973553,b'Summary Tag'
2513,205973560,b'Summary Tag'
2513,205973566,b'Summary Tag'
2513,205973590,"b'Also, loads of empty spaces in this script'"
2513,205973631,b'Please fill in the rest of the summary tags'
2513,205973652,b'Can this not be achieved with the Standard shader?  Do we really need more that one?\r\n@Cameron-Micka ?'
2513,205973678,b'Also needs summary tags on all the public functions'
2513,205973756,b'Does this need to be a specific Line rotation type?  Can it not be genericised for just RotationType?'
2513,205973776,b'Update Summary tags through script'
2513,205973960,b'Should this shader be configurable in the scriptable conifg'
2513,205974046,"b'Can we genericise this base call in to something like\r\n```AssureDependency(object value, string message) { if (object == null) { Debug.Log(message);} ```\r\nTo reduce the sheer amount of duplicated calls to Nullcheck /  Debug.Log in this script.\r\n'"
2513,205974084,b'The particles initial values should be configurable.'
2511,205980073,"b""Let's review that in Beta.  I expect the examples scenes to grow moving forward."""
2519,206211726,"b'Needs to also have a check for ""MRManager.HasActiveProfile""'"
2519,206212126,"b'Needs to also have a check for ""MRManager.HasActiveProfile""\r\n\r\nShould this be a standard?'"
2519,206213698,"b""We don't need both, as ConfirmInitialised is called within HasActiveProfile"""
2513,206307453,"b""Agreed.  Reference and even prompt people to download it, but don't actually include it.\r\nIn 2018.2, we can solve this better by adding it as a dependant package"""
2513,206344506,"b'Agreed, materials / textures for the SDK should be in the standard assets folder'"
2513,206344844,b'Nudge'
2513,206344945,"b'Except for vNext, they should.'"
2513,206345597,"b'Agreed, should use standard math functions for min and max values'"
2513,206346023,"b'It\'s just that we have ""if null / Debug"" repeated everywhere.'"
2513,206346165,b'Summary'
2513,206346211,b'Summary'
2519,206669208,"b'Any should also include None, as it relates simply to ANY input.\r\nAs for both, it relates to ""Both hands"" effectively.\r\n\r\nOther is a special case for new / custom controllers that we simply don\'t have a definition for, but still allow to function and participate in the framework until it evolves to include it.\r\n\r\nOther could be included in Any, but I don\'t think so due to it\'s custom nature, it needs to be treated in a special case.\r\n\r\nSo Left / Right / Both (left or right) / None (gamepads, joysticks, etc) / Any (Left, Right or none) / Other (custom thing we haven\'t touched yet)'"
2538,207343856,"b'agreed, boundary changes should not be included with example scene updates'"
2533,207348880,"b'Question, could this be part of the inputSource request?\r\nrather than put this in every device we create, effectively copying the same code.\r\nOr failing that, move this to a static function to return configured pointers for a given controller / type and hand'"
2533,207349447,"b""why change this to None, it makes no sense?  The generic is the Fallback device, so any new OpenVR controller will be supported by default using the default options until it's added.\r\n\r\nPlease revert this."""
2533,207350085,"b'why have you changed this, you have now broken the specific device implementation, meaning there is only one controller.\r\nAs discussed previously, we need the separate definitions to allow for variations between the controllers as required, input mappings, SDK models (when we support them) and others.\r\n\r\nPlease revert this back'"
2533,207350455,"b'Concerned by this change, as we are not creating each by their type.\r\nYes, we have generalized the input, but other things as we move forward will be specific.'"
2533,207350880,"b""OpenVR controllers only support pointing, e.g. one pose.\r\nTesting however, will prove whether each needs a different offset pose for forward.  \r\nThey don't have a grip pose, which I proposed we may have to simulate later."""
2533,207351297,"b""We've agreed not to do documentation on inspectors for now, as they are fairly self explanatory.\r\nAlso, they are not part of the API, they are internal to unity. """
2533,207351571,"b'just use HasActiveProfile, as IsInitialized is checked within HasActiveProfile'"
2533,207368635,"b'odd, might need to check that function then'"
2533,207368914,"b""then you need to add an Xbox controller class to handle it differently, not default none as that breaks all other new controllers we haven't defined"""
2533,207643513,"b'Update is already called in the GetOrAddCotroller, so this was in effect calling it twice.'"
2533,207645921,"b""Why change/ remove this.  Had to add this as it caused issues on startup, unless you've resolve them?"""
2533,207647480,"b'Seems crazy to have two separate identical switch statements, any change we can reorganize it to make it tidier? '"
2559,208604508,"b'Good that we are bringing this back in to the base controller.\r\nHowever, it only covers creation, what about destruction of the controller when source is lost?'"
2559,208605333,"b'Move this section above the previous, we should check for an override first and THEN use the global if none found'"
2559,208618907,"b'OK,  I missed the requirement that this implementation required prefabs, so that should be noted in the documentation '"
2559,208619811,"b""With the refactor, we can remove this class now as it doesn't do anything in ALpha"""
2568,209294937,"b'Not sure about dropping the nodes events, by the spec, these are controllers attached but not tracked yet.\r\nE.G. A wmr controller NOT in view but still connected and provides button and three dof data.  same with other controllers.\r\nNeeds further testing'"
2568,209435330,"b""It might not trigger for wmr, but it does for Oculus and vive. Can you confirm @keveleigh\r\nWorked for me. \r\nDon't forget @StephenHodgson openvr/SteamVR starts with Vive, with addons for wmr & rift"""
2568,209917407,"b""Again, why is the default NULL?\r\nIf we don't recognise it in OpenVR, it should be the generic controllr NOT NULL"""
2568,209918934,"b'Why not just use ""Xbox""?  Seems a little convoluted. '"
2568,209919073,"b""Ad what about generic gamepads?  They wouldn't be supported here."""
2568,209920160,"b""Have you tested connecting both gamepad and WMR controllers are the same time?\r\nThis virtual / override seems to indicate only one can work at a time.\r\nPlus we never add just the UnityDeviceManager and the UnityOpenVRDeviceManager anywhere, unless you have also made changes to the MR manager?  Plus if both are active, are they not going to conflict (I don't think they would, but just asking)"""
2609,211055433,"b""I think it's fair to say, some speech is pass through, words to be displayed.\r\nSome are commands, which are actions to be performed. \r\n\r\nI think that is what you are getting at @keveleigh, correct?\r\n\r\nIf so, that works be a different pr, as this is just bug fixes and what you are suggesting would be a change. """
2568,211067498,"b""Without trying to get to crass, heck no.\r\n\r\nThese aren't readable config elements and we are not trying to do unitys job for them by documenting their API. \r\n\r\nCurrently the dev / user does not see any of this, they see controller input x maps to action a, that is all.  We have already done the hard work translating the Unity docs to resolve these. \r\n\r\nWhen / if a dev wants to create their own controller (using the Unity input system, which we wouldn't advise) they will need to confer with the Unity docs as they do today. The same can be said when we enable the dll method, you will need to use Steams/Oculus/whatever to build the underlying mapping.\r\n\r\nLet's not overenginer this when the vendor already documents this and devs should already be used to it. We can handle this with our own documentation"""
2568,211067565,"b'> We can make a very readable UI by allowing users to select their controller type and then see the controls available for mapping\r\n\r\nAgain, no, far to complicated. These are to support the MRTK default configuration. We are already going to supply a custom option for users to build their own, so changing this works not help and is overly complex.\r\n\r\nThey either use what we give them (most users) and advanced users will either use the custom option, or more likely create their own controller to our spec'"
2594,211094639,"b'Please strap this in a Windows #if, \r\nThis should Not be in the core input manager. Will need to refactor this out to another layer later. \r\n\r\nWe ideally should never have platform specific dependencies in a manager '"
2594,211348104,"b""Just wrap it for now, good enough for summit. Won't be enough time now to make it fully cross platform."""
2606,212838750,"b'Initialise with \r\n```ColumnThenRow = 0,\r\n```\r\nAs per the enum standards'"
2606,212838766,"b'Initialise with\r\n```Cylinder = 0,```\r\nAs per the enum standards'"
2606,212838826,b'Please ensure you use the correct spacings in the script. \r\nProperties both public and private should be spaced between them.'
2606,212838882,"b""Don't use Throw, as it can case Unity to crash which makes it really hard to debug.\r\n\r\nUse \r\n```Debug.LogWarning`` or ```Debug.LogError`` instead (depending on the seriousness of the error.\r\nInclude help text in the error where possible to ease diagnosis"""
2606,212838912,"b'Initialise with\r\n```None = 0,```\r\nAs per the enum standards.'"
2606,212838923,"b'Initialise with\r\n```None = 0,```\r\nAs per the enum standards.'"
2639,213043681,"b'No, we should use default images in their place @davidkline-ms as a default until we have agreed new images\r\nText alone looks darn ugly'"
2639,213043708,b'As above'
2639,213043724,b'As above'
2639,213043750,b'As above'
2660,213773188,"b'hahahaha, I tested.\r\n\r\nWE can add labels, normal users cannot.\r\nAnd as with the other vNext tasks, we have pre-fixed them for now to make them clear vNext Tasks and not issues or suggestions.'"
2660,213773319,"b'Agreed, will update the sections'"
2660,213774235,b'Fixed'
2660,213793069,"b""It's been the standard for all the vNext tasks so far to make them stand out. :D """
2687,214540769,"b""The BaseDeviceManager already provides this, so it's a little redundant here"""
2687,214541005,b'LogWarnings in active code?'
2691,214695541,"b'Hmm, not sure. Will double check and revert if ness'"
2691,214699393,b'Needed a static reference a the dictation controller is static all over the place\r\n'
2691,214705522,"b'Actually, each ""implementation"" should be able to support multiple platforms, where possible.'"
2691,214745187,"b'Nope, simply because I could enable speech but only use dictation or vice versa'"
2691,214745206,"b'If you recall, I changed to this approach on your request :P '"
2691,214745263,"b'Wah?, will revert.  Unity did it, not me\r\n'"
2691,214745493,b'Will break out the dictation selector as requested and udpate'
2691,214746316,"b""Correct, no controllers with this implementation.  The manager should end up being cross platform when we add more capabilities.  Or we'll use a different devicemanager for azure, google, Intel, etc"""
2691,214746339,"b'yes, for the moment until we look at other dictation systems'"
2695,214842834,b'Can we make these RegisterPointer(s) calls more generic and put them in the InputSystem?\r\nSeeing this duplicated / replicated around the project.'
2695,214917858,"b'Fair enough, make a task for it later :D '"
2691,215408831,b'Updated and also moved feature to a new PR'
2691,215408974,"b'Ok, will supplement the interface, the manager does already have those capabilities '"
2691,215415983,b'Done'
2691,215417262,b'Done'
2691,215417328,b'Done in both speech and dictation'
2691,215417732,"b'Done, my bad'"
2691,215417889,"b'Yes, else the activator does not recognise it.  It will assume the value is an Int and not find the constructor.'"
2691,215417927,b'Done'
2707,215423098,b'feck'
2707,215424503,b'fixed'
2687,216159955,b'then get it sorted @StephenHodgson :P'
2737,216385519,"b""No need to create a list here just to loop it.  Simply do a for on the args.semanticMeanings.  It's already behind the #if, so no need to convert it."""
2606,216449915,"b""If it's not needed, then simply remove it (if you need it later, GIT will remember :D)"""
2771,217177446,"b""Don't think we need this check.  It could be possible to configure a rule with the same action.\r\nIt's up to the user at the end of the day how they configure it.\r\n\r\nMaybe only log a warning, just to inform them.   But better that is done in the inspector rather than here."""
2771,217177788,"b'A lot of this is the same code for each type. Possibly there is a way to genericise it, maybe?'"
2771,217178023,b'I love the reuse of our original pattern :D '
2771,217178932,"b'Will need to check these in the inspector.  But would be better if this was hidden, like with the interaction definitions.  So the user simply selects an action and the rule is stored based on the axis of that action maybe?'"
2775,217379507,"b""Revert this for now. Granted most of us are using f2, but we didn't agree to update it in the project yet. Plus it's not part of this PR"""
2779,217532206,"b'Please reword the header to \r\n""Do not add additional spaces between square brackets and parenthesis:""\r\nOld statement was too passive'"
2773,217532841,b'Agreed'
2784,217551151,"b'That was it, I recall rejecting bring it in and conceded slightly when we changed the implementation in line with the MRTK approach.'"
2784,217551455,"b'Yikes, missed that.  I cannot think of any good reason why any component outside of the device layer would need to enumerate the managers, especially the devices.\r\nThe abstraction is there for a reason to ensure maximum compatibility.'"
2779,217678905,"b'With the architecture of the framework, there should not be much need for readonly fields, especially as most things are made configurable or extendable.\r\nBut a lot of the guidance was formed based from issues found in the HTK and to avoid them in the future.'"
2779,217679070,"b""because it's good practice, this was one of the first guidelines added when we started the document.  To ensure consitancy across the solution. (also recommended in MSDN I believe from the discussions we had back then.)"""
2779,217679118,b'Good catch :D '
2795,217922558,"b'Err, no.  This is constantly updated as new Scene objects are added to / destroyed in the scene.\r\nUnless I fundamentally misunderstand what a Readonly list does :D '"
2795,217922715,"b""I don't think so, as the TrackedObject attachment is unique to the solvers atm.\r\nPlus, (eventually) this could just contain regular scene objects that don't care whether they are tracked."""
2795,217922731,"b""I thought about it.  However, this call is used so infrequently I didn't think we needed to optimise it.\r\nOpen to review of course :D (as per standards)"""
2795,217926636,"b'How does this ""double down"" on the Solvers needing a Pose Synchoniser on them?  This solution does nothing of the sort.\r\n\r\nThe Current Visualizer uses the pose synchronizer to move and manipulate the Controller model.\r\n\r\nThis PR allows you to access the GameObject the visualizer is using.\r\n\r\nThe Only thing added, is the ability to capture the Visualizer model in the MR  Manager for ANY component to use.  For which the visualiser (only on initialization and new controller detection) interrogates.\r\n\r\nSo, where is your concern?\r\n\r\n'"
2801,218245664,b'I think this is fine here.'
2795,218320961,"b'Agree, an interesting way to re""visualize"" the concept to another pattern.\r\n* A Device is the ""Model"" - data\r\n* The DeviceManager/MRManager are the View - connecting a model to a vm\r\n* The scene ""things"" are the view models - providing functionality'"
2795,218588587,"b'Agreed, I tried to make this is as generic as possible, but I take your point that ""hand"" probably isn\'t the correct verb here.'"
2804,218607069,b'So can we rename it to something more like what is actually is?'
2804,218607513,b'interactablesList?'
2804,218608932,"b'Yeah, I\'m also not sure about ""translating"" the events here. I can understand having a ""isInteracted"" check before doing something but not sure this is the correct path.\r\nMaybe if there was an ""IMixedRealityInteractable"" interface maybe...  But still not sure.'"
2809,219073613,b'Nice catch @davidkline-ms :D '
2824,219665818,"b'This check needs to be inside the previous IF, as the system can be turned OFF'"
2824,219665822,"b'This check needs to be inside the previous IF, as the system can be turned OFF'"
2824,219665862,"b""I'm usually against Statics but this would save time.\r\n\r\nHowever, this will ONLY work for the Core managers, components / devices and runtime managers will still need to use the discovery system"""
2824,219665876,b'Not checking for no boundary system\r\n```\r\nMixedRealityManager.BoundarySystem?.Register\r\n```'
2824,219665879,b'Not checking for no boundary system\r\n```\r\nMixedRealityManager.BoundarySystem?.Unregister\r\n```'
2824,219665883,b'Not checking for no boundary system\r\n```\r\nMixedRealityManager.BoundarySystem?.\r\n```'
2824,219665897,b'Not checking for no boundary system\r\n```\r\nMixedRealityManager.BoundarySystem?.\r\n```'
2824,219665899,b'Not checking for no boundary system\r\n```\r\nMixedRealityManager.BoundarySystem?.\r\n```'
2824,219665911,b'Not checking for no Input system\r\n```\r\nMixedRealityManager.InputSystem?.\r\n```\r\nUpdate and check throughout'
2824,219665919,b'Not checking for no Input system\r\n```\r\nMixedRealityManager.InputSystem?.\r\n```\r\nUpdate and check throughout'
2824,219665926,b'Not checking for no Input system\r\n```\r\nMixedRealityManager.InputSystem?.\r\n```\r\nUpdate and check throughout'
2824,219665931,b'Not checking for no Teleport system\r\n```\r\nMixedRealityManager.TeleportSystem?.\r\n```\r\nUpdate and check throughout'
2824,219665941,b'Not checking for no Input system\r\n```\r\nMixedRealityManager.InputSystem?.\r\n```\r\nUpdate and check throughout'
2824,219665948,b'Not checking for no Input system\r\n```\r\nMixedRealityManager.InputSystem?.\r\n```\r\nUpdate and check throughout'
2824,219665951,b'Not checking for no Input system\r\n```\r\nMixedRealityManager.InputSystem?.\r\n```\r\nUpdate and check throughout'
2824,219675083,"b""I'm going to ignore the fact you just said that :P """
2833,221112621,"b'Not sure about removing this null check, seems quite valid'"
2833,221113190,b'Unless the InputSystem is off and I add the BaseControllerPointer to an object manually (or other component consuming it).  Which means it will sit forever in this loop.'
2872,222231590,"b'Agreed, should really be assigned to a property for assigning in the editor.'"
2852,222256361,"b'No redundant code, either remove or implement\r\nSame throughout this file'"
2852,222256678,b'Is this shader / inspector needed in favour of using TXText now?'
2853,222257902,"b'Agreed, I know @davidkline-ms especially hates magic numbers.\r\nThis should be a single field in a configuration profile and have all elements consume that (possibly camera settings)'"
2853,222258387,b'That does confuse things as this would check in broken code to fix in a later PR.\r\nThis needs to be fixed in the source branch before pushing a new PR.'
2902,224506500,"b""Shouldn't these pointer updates be in a separate PR?"""
2951,226856616,"b'```suggestion\r\n                if (GUILayout.Button(""Create a new profile""))\r\n```\r\nbetter title'"
2963,227975959,"b'Yeah, thanks for that. Had to rename it to match how it was, now I got to rename it back to how I originally copied it :P '"
2976,228512519,"b'Can you revert these changes to the MixedRealityToolkit class, as this does not resolve the issues in #2979 \r\nPR #2981 pushed to resolve the underlying issue.'"
2976,228512725,"b'If needed, I can include the ""IsAssignableFrom"" change, if it\'s felt this actually helps.'"
240,80684805,b'Nit: private\n'
240,80684860,b'Nit: public\n'
240,80685010,b'update should also be explicitly private\n'
240,80736260,b'This seems wrong. Why are we removing TapToPlace from the gameobject? Did I read this wrong?\n'
240,80742235,b'This allows us to not check for spatialMappingManager and worldAnchorManager in update.\n'
240,80743010,"b""I think I pushed changes with the public/private stuff.  What's the norm, should I respond to each individually?\n"""
405,92957277,b'Nit: missing braces'
405,93058415,b'Would it be beneficial to also make this public to enable the placement of an object right away?'
405,93058762,"b'Could we also either put everything on one line, or a new line after each comma?'"
405,93058918,"b'I could see that being useful. For instance if you want to automatically place an object in a location when the object ""hovers"" over that location. I agree with making it public.'"
405,93059459,"b'One more little nit, but this is just personal preference, explicit vars.'"
405,93059658,"b""Exactly, I've got a few instances where this is beneficial."""
405,93059938,b'Was wondering about that when reading this through. Sorry if I missed it but is there a md file somewhere outlining coding style preferences?'
405,93060776,"b'Not sure if I like the rename, `IsBeingPlaced` kinda makes more sense with the name of the class.'"
405,93061712,"b""@HodgsonSDAS I'm thinking about how it will be used as a base class. For instance:\r\n\r\n`public override Update() {`\r\n` if (IsBeingPlaced) { ... }`\r\n`base.Update();`\r\n`}`\r\n\r\nOr if it's in an outside class accessing this component:\r\n\r\n`if (gameObject.GetComponent<TapToPlace>().IsBeingDragged) { }`\r\nvs\r\n`if (gameObject.GetComponent<TapToPlace>().placing) { }`"""
405,93062025,"b'Also, could we add in the comments how it would be useful to mark this true if you wanted to make the object placeable immediately?'"
405,93062422,b'Yeah good point.  Not sure if dragging is the correct verb here is all.  '
405,93062435,"b""My bad  ... didn't see you said `IsBeingPlaced` instead of `IsBeingDragged`\r\n\r\nMaking this true would place the object immediately without the user doing any gestures. I'll add that to the comments."""
405,93062683,"b""What about `IsBeingEdited`? or `IsEditable`? (I don't favor the second option, though, because it'll flip all the logic)"""
405,93063295,"b'> Setting this true will place the object immediately.\r\n\r\nWhat about: ""Setting this to true will enable the user to place the object in the scene.""?'"
405,93063302,b'@HodgsonSDAS Looking back I realized I actually said `IsBeingPlaced` instead of `IsBeingDragged` ... I think `IsBeingPlaced` is actually the best choice. \xf0\x9f\x98\x84 '
405,93063614,"b""When it's set to true it's placed on the world immediately. I feel wording it like that will cause the misconception that it will _allow_ the user to place objects when it is true instead of forcing the object to be placed on set to true."""
405,93065197,"b""I'm not sure if I follow.\r\n\r\nFlipping this bool only enables us to update the position of the `GameObject` during the update loop.\r\n\r\nThe only place we set the object's anchor is in `Start` and `OnInputClicked`."""
405,93067173,"b'""Setting this true will place object immediately"" makes it sound like the object will not be movable unless the user clicks the object again, but the way it\'s currently implemented will actually result in the opposite.'"
405,93067797,"b""@HodgsonSDAS You're right. My bad again. My brain just isn't working well with words this morning."""
405,93068390,b'No worries @madvlad you rock dude. Thanks for submitting this PR.'
405,93120160,b'Is this used?'
405,93120639,"b""We don't have a file outlining explicit preferences, but it's probably something we should define soon. That plus #409 """
405,93144984,b'Do we still need to move the gameObject if the parent has been moved above?'
405,93145213,"b""It might be good to print out the name of the parent auto-selected here, just in case the desire was actually to use a GameObject higher in the hierarchy but it wasn't set properly."""
405,93157298,"b""Where is it used though? I can't find any references to it in this script."""
405,93157407,"b""Good catch, we should be checking to make we should either update the `ParentGameObjectToPlace `'s transform position/rotation, or the game object's, this script is attached to."""
405,93157725,"b""Agreed, what if it's nested into a few children?  We should also handle those cases as well.\r\n\r\nI think it might be easier to just assign the parent object in the inspector, but this current implementation overwrites whatever you put in the inspector."""
405,93157814,"b""I think it's meant to be used on lines [118](https://github.com/Microsoft/HoloToolkit-Unity/pull/405/files#diff-f264c3c46b9de1628a050b4e9253ea5dR118) & [124](https://github.com/Microsoft/HoloToolkit-Unity/pull/405/files#diff-f264c3c46b9de1628a050b4e9253ea5dR124), where you've pointed out we still only update the game object the script is attached to."""
405,93162924,b'@S-Hodgson-MMOARgames On line 154 we check to see if ParentGameObjectToPlace was specified in the inspector. Only if it has not been specified do we try to figure out the parent on our own.'
405,93162970,b'@keveleigh This is a leftover from a previous implementation. My next commit will remove it.'
405,93241655,b'Ahh okay must have missed that.'
645,114592595,"b'Would we still want to toggle the ""IsBeingPlaced"" value in this case, or should we just do nothing if the AnchorStore isn\'t available yet?'"
702,119491444,b'Indentation looks off here'
1509,156546427,"b""I think we inherit from the `TapToPlace` so we don't have so much duplicated code."""
1509,156739912,b'The point is precisely not to :) We are separating as much cross feature as we can :)'
1509,156755657,"b""This script requires `IInputClickHandler`, which is in the Input folder as well. Inheriting from `TapToPlace` wouldn't add any additional dependencies."""
1509,156763671,"b""Yeah, we're already using the `HoloToolkit.Unity.InputModule` so it kinda defeats the purpose."""
1509,157043297,b'I will be removing these classes as I am not convinced this is the right way anyway to handle this.\r\n'
420,93572835,"b'This should probably be: ""HoloToolkit/Spatial Mapping Tap""'"
1972,182276027,"b'Add the ""Licensed under.."" comment'"
403,93147029,b'Will this and defaultMat.mat keep regenerating themselves when the fbxs are imported?'
403,93159293,"b'No I disabled the regeneration of the materials by the fbxs, even on reimport (unless they get deleted at re added, the fbx meta file holds the flag for importing materials.)\r\n\r\nSee [SRMesh.obj meta](https://github.com/Microsoft/HoloToolkit-Unity/blob/dd450377881d61137d9d72952942df615263e695/Assets/HoloToolkit/SpatialMapping/Tests/Meshes/SRMesh.obj.meta#L23) and [FakeSpatialMapping.fbx meta](https://github.com/Microsoft/HoloToolkit-Unity/blob/dd450377881d61137d9d72952942df615263e695/Assets/HoloToolkit/SpatialMapping/Tests/Meshes/FakeSpatialMappingMesh.fbx.meta#L26)'"
403,93163556,b'Looks good then!'
5,58638436,b'HoloToolkit/Occlusion\n'
5,58638451,b'HoloToolkit/Wireframe\n'
5,58638761,b'Please mark this as a deliberate passthrough\n'
5,58743546,b'Destroy vs DestroyImmediate perhaps?\n'
5,58754964,"b""I feel Destroy is more appropriate here. We don't have a need to remove these objects this instant (as in before the end of the frame) and Destroy is generally seen as safer\n"""
5,58755466,"b""I'm sorry, I'm not familiar with that concept. Could you explain more/link to an explanation/post example code?\nThanks\n"""
5,58770576,b'Resolved offline and integrated into latest push\n'
321,86627228,b'why is the bottom of the range 5 instead of... 1 or zero?\n'
321,86627539,b'good question. either 0 or 1 seems reasonable\n'
321,86630922,b'new min value is 0\n'
1838,175256707,"b'Cannot just rename classes when the intention for the script has not changed.  Revert this change and mark the class as [Obsolete(""AudioEmitter is being deprecated, please use AudioInfluencerManager instead"")].  This causes a braking change which should be avoided for Master. (fine for dev_working)\r\n\r\nWhat is the reason for the file rename?  Does it change the base reason for the script or is it just cosmetic / influential.'"
1838,175269915,"b""On top of that, it's harder to see if there were any changes to this class."""
1838,175477867,"b""Putting the old name back is no problem. The reason for the change is that the old name wasn't very accurate in describing what the script does."""
1838,175566324,"b""Which is fine, but class name changes have to be controlled else they just break projects.  Given you are changing the logic and function of this class, it might be better to mark the old as obsolete (so you don't inadvertently alter existing projects using it) and create your new class to supercede it in a future release.\r\n\r\nYou would need to do A/B testing to ensure your updates don't break existing implementations."""
1838,175569602,"b""The rename was 100% about being more accurate about what the class does. The core functionality doesn't change. some logic definitely does (ex: provide a means to fix #1825, and to actually handled disabled influencers).\r\n\r\nI am fine using the old name and logging an issue to rename in vNext."""
1838,175270221,b'could we rename `ai` to `influencer` or something like that?'
1838,175270251,"b""This seems odd. Let's replace `MonoBehaviour` with `GameObject` instead."""
1838,175270279,b'formatting seems off'
1838,175270309,"b""let's check for null here in case the dev set it in the inspector"""
1838,175270337,b'could this be const instead?'
1838,175270350,"b""if it's expected for devs to modify this value let's remove the readonly modifier."""
1838,175270378,"b""let's use encapsulation with a private serialized backing field.\r\n(same for all public fields below)"""
1838,175270383,"b""let's serialize this so devs can set it in the inspector"""
1838,175480043,b'sure. it is a holdover from the previous version of the code'
1838,175512937,b'This is why I generally use static readonly instead of const: https://blogs.msdn.microsoft.com/davidklinems/2006/10/27/const-vs-static-readonly/\r\n\r\nDevs are not expected to modify either of the neutral frequencies.'
1838,175513327,b'the values can currently be set in the inspector as a public field. marking them private and serialized will prevent scripts from modifying these values at runtime.\r\n\r\nthe intent is to allow both editor and runtime changes.'
1838,175514429,"b'the AudioSource value is read from the one attached to the component. if we encapsulate the audio source, we prevent the devs from setting values such as 3d audio settings, etc. if we expose this to the inspector, we could be enabling the audio influences being applied to the wrong sound source.'"
1838,175564150,"b'this comes from querying the game object. this class, by design, does not expose the AudioSource to the inspector. this was true of the earlier version as well.'"
1838,175570745,"b""I'll take a look"""
1838,175570914,b'what part seems off? either my editor is set different from yours or I am just not seeing it :)'
1838,175655349,"b'Right, and if we use a public property to access them, then we still have both, as intended.'"
1838,175655637,b'spaces could be off.'
1838,175865626,b'The compiler complains about casting to GameObject via the as keyword (used to avoid InvalidCastException). I will see if there is a better solution than casting to a MonoBehaviour.'
1838,175256994,"b""Please extract enum in to it's own file.  We should never embed enums unless they are private"""
1838,175257004,"b'Please extract structs in to their own file, should never embed structures.'"
1838,175270102,b'we could probably put all the parameters on a single line.'
1838,175270138,"b""If this is a Manager, then shouldn't we be able to get it's singleton instance instead of getting the component?"""
1838,175270152,"b""let's use the summary tags here"""
1838,175270179,b'please use encapsulation with a serialized private field so you can set the quality in the editor.'
1838,175479146,b'This is a component level manager. It manages the influencers that are effecting the AudioSource attached to the game object. I can rename it (in vNext) to be a Controller if that seems better.'
1838,175479424,b'Are we using summary tags for privates as well as publics? Will the auto documentation tool do the correct filtering?'
1838,175479713,b'I am able to set the quality in the editor. this also allows it to be changed via code.'
1838,175542571,"b""I'll extract the enum and the struct from the class. They are specific to working with this class, so I'll leave them in the source file, but make their names clearly imply that they are for use with the AudioLoFiEffect."""
1838,175544046,"b""I'll extract the enum and the struct from the class. They are specific to working with this class, so I'll leave them in the source file, but make their names clearly imply that they are for use with the AudioLoFiEffect."""
1838,175567546,"b""It's not just about editor access @davidkline-ms , it's more of a stanards thing with Unity.  The recommended standard to use with such fields is to have a Private Field that is serialised (which makes it visible in the editor), then only add the public variant if you intend for the field to be accessed outside of the class."""
1838,175570978,"b'@SimonDarksideJ, are you advocating having BOTH a private and a public field? or are you advocating for a private field and a public set of Get/Set methods? or are you recommending a differently named public property?\r\n\r\nFor something that was originally intended as being public, it seems that a single public field makes sense.'"
1838,175655868,"b"">  are you advocating having BOTH a private and a public field?\r\n\r\nNo private field with public property. We're trying to ensure encapsulation."""
1838,175655918,b'I guess that depends on the tool we use.'
1838,176183460,"b""In either case I'd like to at least inspect it and see a description via tooltip"""
1838,176190886,"b""Could probably be marked private, since it isn't used outside this class."""
1838,176201337,b'Summary tags were added throughout.'
1838,176203773,b'Thanks!'
321,86628217,b'how does this get undone in removeeffect?\n'
321,86629198,"b'okay, I see.  \n'"
321,86629956,"b'yeah, AudioEmitter.cs is responsible for restoring the volume. \n\nfrom Update()\n                audioSource.volume = initialAudioSourceVolume;\n'"
321,86630009,"b'Toolips are nice, but ToolTips are more practical.\n'"
321,86630228,b'Please use float.\n'
1838,175256757,b'Do not separate out dependencies on to separate lines as thi makes it harder to read.  The standard used in MRTK is to have all dependencies on the same line as the class.'
1838,175256768,b'have you tested that this component can now be enabled / disabled as per the comment.'
1838,175269963,"b""kinda odd formatting, it's probably safe to put this on a single line."""
1838,175269984,b'@SimonDarksideJ it was moved to the end of the file for some reason.  We can probably revert this change.'
1838,175270001,"b""Agreed, there's not many anyway so no need to break them up."""
1838,175270042,"b""What was the purpose of renaming this? Just for cosmetic reasons?\r\nCould we revert these just so it's a bit easier to focus on the real changes?"""
1838,175270082,"b""Why change this method to exclude an audio source?\r\n\r\nWhat if a dev already has an audio source cached and they wanted to use it instead of having to get the component here?\r\n\r\nLet's just check if the provided audio source is null, then then get it if needed."""
1838,175478636,"b""The audio source parameter shouldnt have been there originally. It's not a huge deal to put it back and ignore it."""
1838,175511443,"b'It got moved to get it out of the way. I tried eliminating it and was no longer able to enable/disable the component.\r\n\r\n@SimonDarksideJ, yes, I have tested (and verified via Unity docs) that Update is one of the functions that allows for enabling/disabling components.\r\n'"
1838,175512004,"b""I'm going to restore a set of overloaded methods and mark them as deprecated.  They will call the AudioSource-less versions."""
1838,175544277,b'This was changed for clarity.'
1838,175566586,"b""So from your testing, this update call has to stay in or consumers can't enable / disable it on the fly"""
1838,175568951,"b'Yes. Per the documentation for MonoBehaviour, one or more of the following must be present to be able to enable/disable on the fly.\r\n\r\nNote: There is a checkbox for disabling MonoBehaviour on the Unity Editor. It disables functions when unticked. If none of these functions are present in the script, the Editor does not display the checkbox. The functions are:\r\nStart()\r\nUpdate()\r\nFixedUpdate()\r\nLateUpdate()\r\nOnGUI()\r\nOnDisable()\r\nOnEnable()\r\n\r\nUpdate is convenient, but then again, so is Start().  I am willing to have an empty method for either of those two.'"
321,86912535,"b""Hmm given that the signatures are same I would have expected ApplyEffect to perhaps return the effect GO so I don't have to do a GetComponent again. And that effect passed into RemoveEffect. But I guess this works too. \n"""
321,87029044,b'There is no requirement for an influencer to use a single filter. Returning a GameObject would be insufficient.\n'
145,73072038,b'I also wonder if you make this into an actual event that people can sign up for?\n'
145,73078819,"b'I did it using unity messages to follow the unity model for this sort of thing, which I\'ve noticed the rest of the HoloToolkit does.  Examples of the top of my head are ""OnGazeEntered"", ""OnSelect"", but know there are a bunch more.  Are there any examples in the HoloToolkit where someone follows the .net event pattern instead of the unity message pattern?\n'"
145,73122337,b'What about using a proper unit event ? (see OnGazeEnterEvent for ex.)\nThat sounds cleaner to me instead of using string based messages.\nJust my 2c.\n'
145,73240962,"b""I was thinking the same thing, but wasn't sure how ActiveEvent presented itself in the editor. If it's configurable in the editor I also think that the UnityEvent is the way to go!\n"""
145,73305741,"b""Performance wise, UnityEvent are slower than delegates but they can nicely be set straight from the inspector so I find them very powerful.\nIt's also cool how you create your own dynamic events (for ex. call this function that accept a Color, I did that in this ColorPicker test), so to me it's definitely the way to go.\nTo finish we all know how slow SendMessage is ! ;-)\n"""
145,73450650,"b'I\'m fairly new to Unity, and I believe I\'m following the conversation here, but I\'m go to restate it just to make sure. So please feel free to aim me in the right direction if I\'ve got something wrong.  I used the SendMessage Event system which is baked into Unity to do this, and I understand it is quite slow because it is using reflection internally.  \n\nFrom reading above I believe that @stbertou and @NeerajW are suggesting the same thing, which is to follow the pattern recently added for OnGazeEnterEvent.  The advantage of this is that I get visibility in the Unity editor and can configure the receiver of the event there instead of passing it on the play method as I currently have it implemented.  This does not result in an improvement in performance since it still uses SendMessage to decide when to trigger the event.\n\nHere is why I don\'t think this is appropriate for this situation.  Imagine that I have UAudioManager configure to play 3 sounds: Sound1, Sound2, Sound3.  Now imagine that I want  to do something after Sound1 is complete but not after Sound2 and Sound3.  How I currently have this implemented I would do this with:\n\n```\naudio.PlayEvent(""Sound1"", gameObject, ""OnSound1Complete"");\naudio.PlayEvent(""Sound2"", gameObject);\naudio.PlayEvent(""Sound3"", gameObject);\n```\n\nFollowing the unity event pattern I don\'t see how you accomplish the same thing, you would attach an event  and it would get executed after every sound is completed. \n\nDoes that make sense?\n'"
145,73584612,"b""Right, I think that's in line with my question about ActiveEvent being present in the editor. It seems like right now only the AudioSource would be present in the editor right?\n"""
145,73631133,b'That is correct AudioSource is present in the editor but ActiveEvent is not.  There is no change in this behavior.\n'
1274,148034788,"b'If these are no longer needed, we can remove them outright.'"
1274,148052522,b'Removed.'
1274,148034853,b'nit: extra line space'
1274,148051560,b'Trimmed the space.'
1274,148035181,b'We can remove these as well.'
1274,148051599,b'Removed.'
1274,150418511,b'nit: braces.'
1274,148035947,"b""How will this affect people already using the parameters?\r\nWill they get out of index exceptions?\r\nMaybe we should catch these where it's used and reassign them, or warn the users that the parameter is set incorrectly."""
1274,148036220,b'Awesome!  Could you also call out the new `ClassName.MethodName()` in this way please?'
1274,148044194,"b""It shouldn't, as these values map to the parameter indices in the spatializer plugin (in fact, they wind up cast as an int when calling into the plugin).\r\n"""
1274,148050607,"b'We should be safe, this enum is private to the class, and the functions that used them are now marked obsolete and have no code in them.'"
1274,148051699,b'Updated the warning text.'
1274,148056951,"b""There isn't really a new function, volume attenuation is now controlled by the unity volume curve on the audio source.  This is now a parameter in the audio event and replaces the Min/Max gain and UnityGainDistance parameters that used to be in the audio event."""
344,89846589,b'Are these still needed? If not then please delete.'
344,91493319,"b""Yes , it seems that we don't need those lines. We will delete it."""
344,93956687,b'Please update the PR and I will merge it. Thanks!'
827,131244204,"b'nit: this name change removes the word ""Behavior"", causing it to be less accurate and less clear what it\'s referring to.'"
827,131251197,"b""Sounds good. I'll update."""
1274,150418539,"b""What replaces this?\r\nWhat is the new usage?\r\nWhy didn't the usages get updated in the `EditorEvents` down below?"""
682,117642557,"b""Changing MeshMaterial to meshMaterial is the only intentional change here. I'm guessing the other differences are just due to resaving the file and picking up other changes that affect serialization."""
682,117643519,b'That is correct.'
472,97685572,"b""Do you think it's better to just point the Readme to\xc2\xa0the documentation page?\r\nThis way if the main doc page gets updated,\xc2\xa0this page will not fall behind.\r\n\r\nAlso perhaps link the\xc2\xa0case study from this page?"""
472,97783834,"b""That's a valid point.  What is the frequency of updates to the documentation?\r\nI simply did just that for the Spatial Mapping Wiki.\r\n\r\nI think it would be beneficial to also include the link to the case study.\r\n\r\n"""
187,76534614,"b""Since **SpatialUnderstanding.cs** is not sample code and is part of the actual toolkit, shouldn't **ScanSearchDistance** be an inspector variable instead of a constant?\n"""
187,76534685,"b""I'm not sure if this is nit picking or not (I don't personally think it is) but these member variable names don't match the naming conventions for the rest of the toolkit. I've seen both ProperCase and camelCase but I have not seen any use of the underscore in inspector variable names. Great use of the tooltip though. Thank you for that.\n"""
187,76534776,"b'According to the [.Net Capitalization Conventions](https://msdn.microsoft.com/en-us/library/ms229043%28v=vs.110%29.aspx), DLL should not be upper case. In fact the naming of the type itself is correct.\n\n> The PascalCasing convention, used for all identifiers except parameter names, capitalizes the first character of each word (including acronyms over two letters in length), as shown in the following examples:\n> \n> PropertyDescriptor\n> HtmlTag\n> \n> A special case is made for two-letter acronyms in which both letters are capitalized, as shown in the following identifier:\n> \n> IOStream\n'"
187,76534883,"b'Unless there is a very specific design reason to do so, enums should defined directly inside a namespace and not nested within a class. Otherwise, any use of the enum outside of the containing class requires prefixing the class name to use it. For example, notice the required prefix usage in SpatialUnderstandingCustomMesh line 151.\n'"
187,76534973,"b""This one's a NIT for sure, but member variables, event definitions and properties are interspersed throughout the class. I would like to see them better grouped together. I'd especially like to see all member variables defined at the top.\n"""
187,76535077,"b'C# [naming conventions](https://msdn.microsoft.com/en-us/library/ms229040%28v=vs.110%29.aspx) dictate that this enum should be singular (ScanState) since an instance of it will never contain more than one state (Flags). \n\n> \xe2\x9c\x93 DO use a singular type name for an enumeration unless its values are bit fields.\n> \xe2\x9c\x93 DO use a plural type name for an enumeration with bit fields as values, also called flags enum.\n'"
187,76535466,"b""I don't know if this is intentional or desired, but it looks like GeneratePlayspace_UpdateScan will get called even for the ScanStates.Finishing state. It may be desirable to grab one more final update, or it may be desirable to skip another update since the finalization process seems quite intensive. Thought I would at least point it out.\n"""
187,76639702,"b""As Jeff is being consistent in his naming, let's keep his convention here.\n"""
245,81128611,b'Nit: Could you put the`!UnderstandingCustomMesh.isImportActive &&` on the next line?\n'
245,81758060,b'Nit: private\n'
245,81758240,b'Nit: private\n'
594,108692721,"b""Nit: I know the order really doesn't matter to the compiler but I think the delegate should be declared above the event."""
594,108692982,b'```\r\nif (OnScanDone!=null)\r\n{\r\n    OnScanDone.Invoke();\r\n}\r\n```'
594,108693750,b'if `UnderstandingCustomMesh.HasMeshSectors` is public why even add this property?'
594,108695883,b'Allright! '
594,108697021,b'previously it was private - so this was implemented. Merged! Will remove the property'
594,108697071,b'sure - rookie error'
594,108697369,"b""No worries, essentially you're just checking to make sure there's subscribers before invoking the event."""
594,108750661,b'Why move here?'
187,76535790,"b""Is there a reason this is called **DrawProcessedMesh** when the SpatialMappingManager calls it **DrawVisualMeshes**? If there is a specific reason to rename it, should it at least be plural to indicate that we're drawing more than a single mesh?\n"""
187,76678838,"b""There is an open request to change 'DrawVisualMeshes' to 'DrawSurfaces', so I would not try matching the SpatialMappingManager. Also, since this flag controls rendering of the 'processed' meshes as opposed to the 'raw' meshes, the name is more accurate. I would probably leave it singular here, since it matches the class name.\n"""
245,81128763,b'Nit: should be `IsImportActive`\n'
245,81129848,b'Nit: should be `maxFrameTime`\n'
245,81130171,"b""Nit: If this class is public, it should belong in its own file.  If it's private, then make it explicit.\n"""
245,81130388,b'Nit: local variables need to be put on their own lines.\n'
245,81130850,b'Nit: remove extra new line\n'
245,81131700,b'Nit: Start and Update should probably be closer to the top of the class.\n'
245,81187587,b'Love this idea!\n'
245,81187774,b'NIT: private variables are recommended to start with small case. camelCased.\nverts\ntris\n\nPublic variables and properties are PascalCased.\n'
245,81187848,b'Should it be a property?\n'
245,81197431,"b""If it were a monobehavior to avoid the editor looking at it maybe...  otherwise I'm not sure if it matters.\n"""
245,81199534,"b""Looks like when we call `MeshData()` we're making a new `Mesh` anyway.  I think a public property with a private getter might be a good idea.\n\nThen again does `MeshObject` need to be public anyway? seems like every time we go through a new sector we're overwriting this value anyway.\n\nMight not hurt to add each `MeshObject` we create to some sort of public list or something in case anyone wants to get them.\n"""
245,81258362,"b'This code:\n// And create a surface object using the mesh.\n                    AddSurfaceObject(meshdata.MeshObject, string.Format(""SurfaceUnderstanding Mesh-{0}"", transform.childCount), transform).AddComponent<WorldAnchor>();\n\nrelies on the meshdata being accessible, and adds the mesh to a list callers can get through the SpatialMappingSource base class, usually via the SpatialMappingManager.\n'"
245,81350646,b'Makes sense to me.\n'
245,81603549,b'This feels pretty application specific - can we make it public?\n'
266,83022072,b'Nit: extra space\n'
266,83022202,"b'Are we actually using Linq in this class?  If so, do we _need_ to?\n'"
266,83062351,b'True. Nothing I saw in this change seemed Linq related.\n'
266,83265945,b'Is there a better namespace to get the ElementAt extension from?\n// Get the next MeshData.\nMeshData meshData = meshSectors.Values.ElementAt(meshSectorsIndex);\n'
432,94611623,"b""nit: explicit var. Can't tell if float or DateTime."""
432,95048045,b'Sounds good.'
542,103470206,b'I suggest using a more specific name. `Collider` is a name for a Unity class.  I suggest `SpatialCollider` or something along those lines.'
542,103470327,b'Nit: `if (Collider != null)`'
542,103470801,b'Where do we use the object name?\r\nIs it just for naming the object in the hierarchy of the scene?'
542,103590312,"b'As far as I know, that is all the name is used for.'"
542,103590489,"b""I'll rename it to SpatialCollider as suggested above and also make this change. To be honest, I would actually prefer not even performing this test. Ideally, we want to ensure this member is always set and having it blow up with a null pointer exception would quickly draw attention to erroneous usage."""
542,103591646,b'Agreed.'
542,103593329,b'Just one last thing. Do we need to set the `sharedMesh` to null before we set it?'
721,122295422,"b'Though also, is this used?'"
727,122512006,b'nit: typo: duplicate e in  ...WhenBeeingPlaced'
727,122512590,"b'Also, any way to shorten this bool name? I don\'t think the whole thing will show up in the Inspector. Maybe ""DrawMeshesDuringPlacement"" or ""AllowMeshVisualizationControl"" (which may still be too long).'"
727,122512755,"b'nit: ""Setting this to true will allow this behavior to control the DrawMesh property on the spatial mapping.""'"
721,122513740,b'Good catch!'
733,123335584,"b'@StephenHodgson, WINDOWS_UWP is defined on that page, under the description for UNITY_WSA_10_0.\r\n\r\nIt does seem like UNITY_WSA should work as well though.'"
732,123368335,"b""Ooh thanks for catching that. I didn't even think to check!"""
697,124406080,b'nit: extra empty line'
697,124406302,"b'nit: typo: ""intstnace""'"
697,124406350,"b'nit: typo: ""Qquality""'"
740,125972779,"b'nit: Weird formatting here. I think this added indentation is correct, but should also be added to the following six lines.'"
740,126263174,b'Whoops looks like I missed that this was merged! '
729,126817061,"b""Ahh yes, I've been meaning to try that out in this project. I'll do it in my next PR though."""
777,127068471,"b'Your PR description says ""Removed references to `EditorUserBuildSettings.wsaUWPBuildType`. It will be removed in future versions of Unity."" It\'s still here though. Did you mean `EditorUserBuildSettings.wsaSDK`?'"
717,127073073,b'Why do we no longer raycast against the UI anymore here?'
717,127073208,b'Is this left over from testing?'
717,127074362,b'Aha! Awesome'
793,128319029,"b'Yep, this was left over from when we removed the ability to look around with the right stick and added bumper rotation.'"
793,128319883,b'What do you mean?'
793,128320113,b'For spawning the touchpad visualizer? Sounds good'
793,128336805,"b""I added a summary comment at the top to describe what it's doing. Let me know if you think comments along the way are still needed."""
793,128337404,"b""At the moment, model loading via this path won't work in the editor. We could leave the existing visualizer script in, renamed, which will support loading a GameObject and will work in the editor, but then we'll have two scripts doing essentially the same thing."""
793,128377570,"b""Since this script relies on non-Unity code for spawning the models on source detected, we'll never get a source detected event in the editor."""
793,128377683,"b""Yep, that's correct. I can clarify left/right, but I figured the GameObject names were sufficient. """
793,128387442,b'Yep \xf0\x9f\x99\x81 '
820,131018818,"b'The name change is to better match the platform terminology. There\'s both a ""pointer ray"" and a ""grip ray"".'"
820,131019881,"b""I could leave a third Vector3 called position and default it to either one to prevent breaking, since this is event data. I think making position explicit as far as which one it's referring to is important and worth a breaking change."""
820,131020861,"b""That's true! I renamed it to better show that there's more than one kind of ray, instead of just a pointing ray. Though, I don't know how often the grip ray will be used or how useful it is. I'm happy to revert!"""
827,131238483,"b""Why did all the UNITY_EDITOR directives get removed? It's useful to use these APIs in the editor when using Unity remoting."""
827,131238663,"b'UNITY_STANDALONE should probably be UNITY_STANDALONE_WIN, since I doubt the Windows Speech APIs will work on Mac or Linux :)'"
827,131240010,b'What happened to all this?'
827,131244204,"b'nit: this name change removes the word ""Behavior"", causing it to be less accurate and less clear what it\'s referring to.'"
827,131244777,b'Should probably update Keyboard_onTextUpdated -> Keyboard_OnTextUpdated (and Keyboard_onClosed) as well.'
827,131247882,"b""Ahh, so this code will still run in the editor with the UNITY_WSA flag? Sweet, I didn't know that!"""
827,131248614,"b""I wasn't able to find it anywhere in this PR. The only added file I see is SupportedInputInfo.cs (and its meta)."""
827,131265403,b'Sounds good'
831,131775917,"b""Ooh good idea! It was definitely feeling a bit repetitive, but I hadn't thought of that."""
841,131984453,"b'Regions in this script were unindented, but other regions (like in DictationInputManager.cs) were untouched. Was this intentional?'"
873,133553009,b'Good catch; updated.'
878,134047975,"b""I just downloaded b8 from Unity's site, and it will not build without these changes. What are you referring to?"""
886,134865347,"b""Do we expect the bounds to change during an app's lifetime? It seems like it could be expensive to regenerate the bounds every time this method is called. Could it be set in Start()? Or perhaps poll in Update until we get a response, if we expect it might not be immediately available."""
886,134865588,"b""Also, boundaryBounds doesn't get reset anywhere, so it keeps getting added to each time this method is called."""
886,134866261,b'Why do we check IsDisplayOpaque here? '
886,134867672,"b'Do we need to do anything with [XRDevice.SetTrackingSpaceType](https://docs.unity3d.com/2017.2/Documentation/ScriptReference/XR.XRDevice.SetTrackingSpaceType.html), or does this just work?'"
888,135322523,"b""Interesting that this hadn't already been set!"""
886,135323000,b'Typo: TryGetGeomerty'
886,135323178,b'Missing header'
886,135323245,b'Missing header'
886,135323730,"b""That's true, but I wasn't sure if it'd be better to check if the bounds are empty/not set-up instead, so we aren't locking ourselves into a specific display type vs bounds actually being supported/present."""
888,135329046,"b""Ohh interesting, this must be why we've never noticed it ([here](https://msdn.microsoft.com/library/windows/apps/hh464936) under **Internet and public networks**): \r\n\r\n> The internetClientServer capability includes the access that the internetClient capability provides, so you don't need to specify internetClient when you specify internetClientServer.\r\n\r\nProbably doesn't hurt to keep it set though!"""
887,135329450,"b""What is this capability used for in the Toolkit that isn't covered by InternetClientServer? """
887,135331397,b'Sounds good!'
887,135351712,"b""Weird, yeah, that's definitely a stale link. [Here's the Win10 documentation](https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations)."""
886,135924699,b'MixedRealityToolkit'
883,136164528,b'They do'
929,137416407,"b'Does this line (and the line after) need to be in the repo? It seems like this will allow people to commit their own specific folders to be ignored, even though nobody else will have them.'"
910,137663539,"b""Ahh yes, I was trying to think of a way to combine the two methods, but didn't think of using float.maxvalue. Thanks!"""
910,137663557,b'Done :)'
910,137663794,"b""Since this constructor will only be called by Toolkit code (and the InteractionSource comes from the platform to begin with), I don't believe it can ever be null."""
929,137899562,"b""What's being ignored with these two folders that can't just be removed from the repo (like you did with the SharingWithUNET lighting data)?"""
929,137903091,"b""I don't seem to have that file, and it doesn't seem to be generated at any point? Why the need to both delete **and** ignore the folder?\r\n\r\n/Assets/HoloToolkit-Examples/FastConfigurableShader/Scenes/FastConfigurableTest doesn't exist."""
929,137903978,"b""How do I build the lighting? I've built both scenes a couple times, and I don't see the lighting assets or these ignored folders"""
929,137906470,"b""So building lighting is a manual step? Why do we need to ignore these folders then, instead of just making sure the people that build lighting don't check in the asset? This seems like a problem that could expand to needing to add every scene's folder to the .gitignore."""
747,137911056,b'Please revert :)'
747,137911115,"b'Same as above, about the var not being obvious.'"
747,137911213,"b""I don't think this var is obvious, since I'd think it's a GameObject based on the Instantiate."""
747,137912098,b'Why?'
747,137912602,"b'If I\'m working in the Toolkit, why do I need HeadsetAdjustment? Why do I need SceneLauncher? Saying ""Why _not_?"" doesn\'t answer any of those questions. I build my open scene, and that\'s all I care about. If I want to use these, let me, but don\'t force me to. It\'ll add more work for me to uncheck/delete them and then make sure not to commit that change. '"
747,137913144,"b""So, SceneLauncher becomes useful if I'm testing more than one scene, or do I get anything with just one? I'm not 100% clear on why it's useful, which is why I'm asking about it becoming the default.\r\n\r\n>Yeah I just wanted to know your reasoning why you wouldn't want it, is all.\r\n\r\nAnd I just wanted to know your reasoning why you did :)"""
747,137913298,"b'Also, does this change cause me to do any additional work? Do I need to manually add my scene somewhere to show up in the launcher, or can I just build with my scene and it works? Trying to fully understand.'"
952,137937141,"b""My hesitation with using `SharedMaterial` is that I'd then be changing the material for every object that uses the default material. I instead added a Destroy call in ControllerInfo's OnDestroy to clean up after itself, but let me know if you prefer `SharedMaterial` instead."""
963,138489586,b'Please update the readme as well.'
963,138489679,b'Please add the header!'
963,138489866,"b""If solid color isn't set for the clear flags, does changing this value do anything that could be unwanted?"""
977,139226557,"b""It'd probably be good to check controllerState.Handedness.Equals(InteractionSourceHandedness.Left) here instead of a string comparison (and the right controller below)."""
977,139227847,"b""Can these be TextMesh instead of GameObject? It'd save having to do all the GetComponent<TextMesh>() calls below."""
977,139227931,b'Is SerializeField needed for public variables?'
977,139241803,"b""This still shows up, causing duplicate info across the text panels (though, interestingly, I don't see it in any of your screenshots). Should we remove it in favor of yours?"""
977,139261390,"b""I didn't catch this last time, but please capitalize the first letter of all the public variables here."""
977,139261671,b'Please revert this override. My intention was to show one override and one controller model in the test scene.'
981,139319171,"b""Does anything check for this returning null? Looks like now it'll return string.Empty if nothing is found."""
936,139834980,"b""Is there a way to append instead of replace? I'd prefer not to be destructive here."""
936,139835262,b'nit: typo: EVent'
936,139835951,"b""Do you think it's more useful making gamepad input separate events, or to combine them with the motion controller events? They share a set of input axes, and source detected/lost could be handled similarly."""
936,139836215,"b'nit: missing a space between ""."" and ""Create"".'"
828,140844090,"b"".obj is also used for some Visual Studio generated files, but I think we might catch all those with the obj/ folder ignore. It's probably safe to remove all *.obj ignores, negating the need for this specific one"""
1007,140857735,"b'We have https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/Dev_Unity_2017.2.0/Assets/HoloToolkit/Input/Scripts/InputSources/InteractionSourceInputSource.cs for motion controller input, though this does a couple things not present there.'"
1007,140869869,"b'Agreed! (Also agreed on ""that\'s a lot of source!"" haha! Definitely open to rename suggestions \xf0\x9f\x98\x84). I added handedness as a variable in the source data, but I don\'t believe there\'s any way to actually pass that through yet. I think the two best ways would be to add a TryGetHandedness or to add it to each of the event data classes. Thoughts?\r\n\r\nAccessors for velocity would be great as well!'"
1015,141157575,b'Why was this removed?'
1015,141158041,"b""I'll re-add it in my incoming merge PR"""
1015,141158298,"b""I guess it doesn't matter too much, since this is the end of the method either way. For consistency's sake, I'm re-adding it."""
1016,141166673,"b""Ahh, this slipped past. I'm not sure...it seems like recent Unity versions are generating this, but I don't think we'd need it unless we use it. I can add it to the .gitignore."""
1016,141166754,"b""I did, but it looks like some of those changes didn't make it in here yet. I'm adding now."""
1023,141212331,b'Do these not default to null?'
1023,141212627,"b'This if/else is basically ""if dimensions is Vector3.zero, draw the floor at Vector3.zero"". If dimensions can never be null, we can probably remove the check entirely and just draw at Vector3(0, dimensions.y, 0)'"
1028,141232509,b'Double semicolon'
1028,141232718,"b'nit: this ampersand is highlighted red for me on GitHub. I guess change it to an ""and"" to make it happy?\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/30893345-7ca21ae8-a2f2-11e7-92f3-62d4cbcc85fe.png)\r\n'"
1028,141233604,"b""I'm not yet sure how I feel about recreating Unity's enum here. It'll add code maintenance whenever the platform changes, and it's a breaking change for anybody using the existing event data classes. What do we gain over wrapping all references with UNITY_WSA?"""
1028,141236688,"b""I don't believe SupportedInputInfo is a Unity enum.\r\n\r\nYeah, forward compatibility makes sense for cross platform, though all apps will still need to add a press type to their existing events anyway.\r\n\r\n>Well that's why it's a dev branch right?\r\n\r\nNow we're talking! Haha \xf0\x9f\x98\x9c"""
1049,142273734,"b'This is the HoloLensCamera prefab GUID. What about the other camera prefabs?\r\n\r\nWe should probably go down to 1 prefab anyway, which adapts to any situation.'"
1049,142278226,"b'Weird, it was definitely a different GUID when I commented, though my window must have been out of date!\r\n\r\nIf we want to go down to 1 prefab, reusing the HoloLensCamera GUID would probably be best to maintain forward compatibility, right?'"
1049,142281773,"b'Cool, in that case, MixedRealityCameraParent would be the preferred one to use. '"
1028,142493506,"b'This check is backwards. This is the editor input script, so we want it in the editor'"
1028,142494800,b'Is `&amp;` actually what you wanted here?'
1028,142497795,"b""(Comment on the folder change) Interactions seems like it could be a base-level Input folder instead of inside Utilities. They're a pretty important part of input."""
1028,142501514,"b'I agree with them being separate from the input system (like has been mentioned in #1032), but I disagree with them going into Examples. Yeah, it\'s not quite the ""core"" system, but it\'s still a collection of generic scripts that easily add functionality to an app.'"
1059,142541238,b'This not starting from i=0 causes AddMixedRealityCamera to not appear in the menu'
1080,142791206,"b'I added an AnimateHome method to use them. I never call it, since the home button will leave the app when pressed, but it\'s useful to keep the references to the home button info while removing the ""unused"" warnings.'"
1072,142793180,b'nit: was adding a second empty line intentional?'
1080,142796565,"b""As far as I'm aware, there's a plan to expose a GetNativeModel (or something) API, which will stop us needing to call the platform API. I'm also investigating using a native DLL to get/load the models, which should work in the editor as well."""
1080,142802436,"b""InteractionManager doesn't provide a way to get the controller model. The only way to get it at the moment is through SpatialInteractionManager"""
1080,142806330,"b""It probably should. I'll re-add it for now, but it should be removed sooner rather than later."""
1080,142806414,"b""Hrm yeah, that's a good idea! I'll look into adding those extension methods."""
1126,144157797,"b'Yes, four lines above this one, at line 151. I changed it so the three buttons were aligned horizontally instead of stacked vertically.'"
1126,144158062,"b""True! I didn't change it originally because it only maps to the menu button on the right motion controller. `XBOX_VIEW` maps to the menu button on the left motion controller. I'm sure there are better names for the two, but I didn't come up with any in the moment haha."""
1126,144158264,"b""No, but it has a menu button. As mentioned above, our currently named `XBOX_MENU` maps to the right motion controller's menu button. Our currently named `XBOX_VIEW` maps to the left motion controller's menu button. I'm sure we can come up with better names!"""
1126,144158400,"b""Ahh okay. I'll revert this one."""
1141,144368254,"b""This will break 2017.2 building when this change is merged back into the dev branch (or when master i updated to work with 2017.2) because there's a Material in the GLTF namespace as well. Likely, renaming it to GLTFMaterial is the best fix."""
1126,144372779,"b'`CONTROLLER_LEFT_MENU` and `CONTROLLER_RIGHT_MENU` could work, banking on the fact that not many people know the left button on the Xbox controller is actually called View haha...'"
1100,144414161,b'Is this statement not true?'
1100,144415624,b'Should this be a tooltip?'
1100,144416181,"b""Is adding the 0 here better for perf? I'm curious, because I've never seen that before."""
1100,144416401,b'Why the strange casing here? Unregister and defocus seem to make more sense as single words.'
1100,144416529,b'What does this fix/change?'
1100,144417878,b'Do we no longer have to register pointable canvases?'
1100,144418523,"b'Should this be changed to public, so the rays can be turned on/off during runtime?'"
1100,144419472,b'Leftover comment?'
1100,144420218,"b'This used to be RaycastAll, I believe to then check for the prioritized layer masks. Does this do that automatically?'"
1100,144420465,b'Why not?'
1100,144422334,"b""Should this go the other way (removing the other hit references)? This should be requested from FocusManager, that way GazeManager isn't special cased in apps, and motion controllers vs gaze is abstracted away."""
1100,144424262,"b""This (and StartGestureRecognizer) were renamed to Start/StopGestureRecognizers(). Looks like that's being ignored in the change."""
1100,144428350,"b'Please revert. This is checking that the prefab is set in the inspector, then it gets instantiated. This will never be called as written, since teleportMarker gets set as a result of this check and will thus alway be null here.'"
1100,144428540,b'Should this be CameraCache.main now?'
1100,144432332,"b""It was added in #1122. I see now that you made other changes that didn't show up for me while reviewing, changing from two [tT]eleportMarker variables to one."""
1100,144622774,b'enabled is used in lines 16 and 31 (of the new version). Should we remove those references then?'
1100,144623252,"b'How do you decide a ""good"" breaking change? This entire PR was a breaking change. This is such a minor one, it would be easily updated.'"
1100,144623645,"b""I'd say no on the teleport marker being optional. Users should know that teleporting is a possibility before it happens."""
1100,144640448,b'Also deFocusedObject a few lines lower.'
1126,144652348,"b'Used to be private, forgot to change the casing, whoops!'"
1128,144668595,b'typo: breaking'
1162,144923562,"b""Woah, why? Doesn't Unity use this to determine which version the assets are are made with, then uses that info to migrate to new versions? This seems dangerous and could result in assets being updated incorrectly."""
1162,144939642,b'Our ProjectVersion.txt should be the latest released and tested Unity version.'
1162,144940023,"b""If the recommended way to get the Toolkit is via our released UnityPackages, that shouldn't be a problem. We can require a version of Unity for the Toolkit project that is different from the version used in an app."""
1162,144952969,"b'If we really need to support all these previous versions, you should probably add `!UnityEngine.VR.VRDevice.isPresent` for non-2017.2.'"
1162,144955259,"b""Doesn't this disable the above Obsolete warning?"""
1162,144955902,"b'Hmm, I believe this returns true on HoloLens, which would break this flow.'"
1162,144956072,b'Another change from `Application.isEditor` -> `VRDevice.isPresent`'
1162,144956319,b'typo: Untiy'
1162,144957409,"b""Please revert. The Toolkit's version should be the latest updated and tests Unity version. Pre-2017.2 versions of Unity don't support full mixed reality development."""
1162,144960226,b'I believe the released Fall Creators Update SDK is 16299.'
1162,144960958,"b'Right, but why is this event marked both Obsolete and has the Obsolete warning disabled?'"
1162,144961393,"b""I can't seem to wrap my head around what this is checking for. No headset and not the editor. What case is that?"""
1162,144966883,b'I believe `VRDevice.isPresent` returns true on HoloLens.'
1162,144967848,b'Oh wait...I misread your statement. Makes sense now!'
1162,144968152,"b'I mean line 48, where it says `10.0.16267.0`. That should be `10.0.16299.0`.'"
1162,144972121,b'Ahh sweet!'
1175,144990101,"b'This should stay 1, for `Hand`. I believe 0 is `Other`.'"
1175,144990170,"b'Same as above, this should stay 1.'"
1175,144991342,"b'We should probably still have an `Instance != null` check here, just in case.'"
1178,145009508,b'I think the final `Build` link is supposed to be `Boundary`.'
1178,145009813,"b'Should this change to master now? Pending my PR though, I guess.'"
1178,145010584,b'Looks like some of the changes in this file were lost.'
1178,145010613,b'nit: rogue spaces'
1178,145010756,b'Looks like some unfinished merge conflicts made their way here.'
1178,145010927,b'nit: extra space'
1178,145010978,b'nit: extra space on the above two lines'
1178,145011493,b'This looks like duplicate code compared to the existing lines below.'
1196,145519416,"b'I thought about that, perhaps adding the ID and a null object to the Dictionary, but I thought that might cause issues somewhere along the line. If I add enough null checks as well though, that might work.'"
1197,146044031,b'The Toolkit has a [wireframe shader](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/SpatialMapping/Shaders/Wireframe.shader) already. Can we reuse it?'
1208,146045776,"b""Should this be added in the get finder as well? Otherwise, a Singleton Instance set when get is called doesn't look to be protected this way."""
1206,146047075,b'Is this needed? The `if (Application.isEditor)` call above should prevent this from being called outside the Editor.'
1206,146091510,"b""I think there might be some stale references in here, if you could re-save the scene and update it please, that'd be great!"""
1240,147255405,"b""This reference should be replaced with the new cursor on Managers -> InputManager's SimpleSinglePointerSelector script."""
1240,147255447,"b""This reference should be replaced with the new cursor on Managers -> InputManager's SimpleSinglePointerSelector script."""
1246,147486252,b'We should keep this automatic badge updating URL in the README.'
1246,147488890,"b'Why is the [v1.2017.2.0](https://github.com/Microsoft/MixedRealityToolkit-Unity/releases/tag/v1.2017.2.0) release marked for use with Unity 2017.1.2? This should be v1.2017.1.3 instead (or v1.2017.1.2.1 if we really want that many numbers haha).\r\n\r\nv1.2017.2.0 should work with Unity 2017.2, per the [roadmap](https://github.com/Microsoft/MixedRealityToolkit-Unity#roadmaps).'"
1246,147490703,"b'True, but the HoloLens one should still point to the ""latest"", right? We could hard code it here and have the updating one be true for HoloLens.'"
1242,147497612,"b""Oof, looks like I made some changes while testing that didn't get reverted. Thanks for catching!"""
1206,147509010,"b'This should also have `LoadAlternateControllerModel(source);` right before the `yield break;`, that way the alternate models will load in the editor if needed. Right now, nothing will load in the editor.'"
1256,148094949,"b""Isn't this essentially the `AutoRegisterPointableCanvases()` method that you removed from `FocusManager` earlier? Is it needed again?\r\n\r\nIf so, I prefer the previous implementation. What if I don't want every single canvas to be registered?\r\n"""
1256,148096279,"b'Does this need to be an extension, or can we just wrap our DontDestroyOnLoad calls with the if check?'"
1256,148099336,b'When does inputEventData.selectedObject get set to something?'
1256,148099488,b'Do we have added documentation anywhere saying that this setting now changes all my canvases?'
1256,148099868,"b""Why remove/obsolete this instead of rewriting it to return the new check? It's very similar to what this already returns (a null check on something on `FocusManager`)."""
1256,148100654,"b""I believe this functionality diverges from how it works in the shell (though it's been a while since I've tried it, so it has possibly changed). Do we want that?"""
1256,148102315,"b""This also looks familiar, except the previous implementation called `Clear(uiRaycastPointerData);` (in this case `pointerData`) before returning if it wasn't null. Should we do that here?"""
1256,148102952,"b""Why do we need two different Get methods here? Won't `GetSpecificPointerEventData` return the Gaze data if you pass in the right pointer?"""
1256,148103890,b'Do we not want/need distance anymore?'
1197,148367336,b'This appears to be a duplicate of:\r\n[MixedRealityCameraManager.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityCameraManager.cs)\r\n[SceneContentAdjuster.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Boundary/Scripts/SceneContentAdjuster.cs)\r\nand\r\n[DisplayDependentObjectActivator.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Scripts/DisplayDependentObjectActivator.cs).'
1256,148368580,"b""Yeah, they need an update soon for sure.\r\n\r\nThere's nothing in the scene settings window that tells me that this option will change all my canvases. I'd say this should be a new option in the window, because I don't necessarily want my canvases all updated just to put the InputManager prefab into the scene."""
1256,148368684,"b'That sets `focusedObject`, yeah, but where does `inputEventData.selectedObject` get updated?'"
1256,148369846,b'Does that mean `FocusEnter` and `FocusExit` will only work in uGUI with gaze?'
1256,148373636,"b""I just tested it, and the shell transfers the pointer on input down, while providing a click/up on input up, matching how the Toolkit has it before this change.\r\n\r\nI think we should match the experience of the shell has much as possible, so things are familiar. I'm open to discussion on that though."""
1256,148374617,b'Thanks!'
1256,148378074,"b""Should our implementations differ from what's familiar in the shell?"""
1197,148380293,b'Is this a duplicate of https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/SpatialMapping/Shaders/Occlusion.shader?'
1197,148381951,b'Can this be replaced with https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Shaders/Obsolete/UnlitConfigurableTransparent.shader?'
1197,148381994,b'Can this be replaced with https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Shaders/Obsolete/UnlitConfigurableTransparent.shader?'
1197,148382740,b'Does this path exist here? There are several references to HUX in these scripts.'
1197,148392767,b'Duplicate of https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/UX/Materials/3DTextSelawik.mat'
1197,148392947,b'Duplicate of https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/UX/Materials/3DTextSelawik.mat'
1197,148409748,"b""Did any scenes use the old material and need to be updated? Also, there was a second duplicate 3DTextSelawik material as well. There's one in HoloToolkit/UX/Materials, and this PR is adding another in HoloToolkit/UX/Resources/Materials"""
1305,149246322,b'Should this be [`Bezier`](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)?'
1256,149499343,"b'The shell implementation is how I described it above:\r\n\r\n> I just tested it, and the shell transfers the pointer on input down, while providing a click/up on input up, matching how the Toolkit has it before this change.'"
1305,149527717,"b""This is another thing that should be cleaned up in the model itself. I believe we used these exact models in the Academy courses, where we saw the same thing.\r\n\r\nBasically, the fbx generates an empty folder called templates when imported into Unity, which git ignores because it's empty. Unity then deletes the meta file because the folder doesn't exist on anybody else's version of the repo, and then it recreates the empty folder and the meta when it reloads the model in some cases."""
1318,149742970,"b""It already is...I also disagree with putting structs/enums/classes/etc into their own file 100% of the time. Sometimes it makes sense, but sometimes you lose context when it's isolated."""
1256,149758978,"b'Do we want to change the expected press type from the platform here, or should we handle this on the receiving end instead, checking for either `InteractionSourceKind.Hand` or `InteractionSourcePressInfo.Select`?'"
1256,149762161,"b""That doesn't answer my question."""
1256,149762376,b'Should we add checking for `InteractionSourceKind.Hand` here: https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs#L425\r\n\r\ninstead of changing the press type in the event data?'
1256,149816126,"b""Not sure I agree, because I might want something different to happen in my app if it's hand vs controller vs voice, but this change is fine.\r\n\r\nDoes voice properly pass a Select type?"""
1256,149823511,"b'> But currently voice doesn\'t raise souce up/ down/ clicked so it doesn\'t matter.\r\n\r\nI don\'t believe this is true. I was getting source down events in SimpleSinglePointerSelector when saying ""select"", but I\'ll double check.'"
1256,149824418,"b'Confirmed: The ""select"" voice command both steals pointer focus (via OnInputDown) and enlarges the cube in the test scene (via OnInputClicked).\r\n\r\nEDIT: However! Voice does properly send a type of `Select`, so there\'s no change needed here.'"
1256,149831991,"b'Correct, talking about the context of `InteractionInputSource`.\r\n\r\nNow that I think about it, it would be worth testing this on HoloLens (I only checked it on an immersive headset). I wouldn\'t be surprised to see the ""select"" keyword sending in a type of `None` as well there, because this type didn\'t exist in RS1. That\'s likely the issue we\'re running into here.'"
1256,149834749,"b""Right, it comes from `InteractionManager` and `GestureRecognizer`, into the Toolkit via `InteractionInputSource`.\r\n\r\nLooks like it comes through with a source ID of 0 and a type of Voice. That led me to notice a bug though, because we don't pass the source kind through the events at the moment; it's only accessible through `TryGetSourceKind`, but Voice doesn't really have its own source, so that always returns the default of `Other`."""
1308,149845671,b'nit: extra whitespace'
1308,149850454,"b'Pressing the buttons with a motion controller doesn\'t seem to call this code (voice ""select"" works). Is that something that\'ll be fixed with your uGUI fixes?'"
1308,149850599,"b'The buttons are in the floor on an immersive HMD, so we should probably put a `SceneContentAdjuster` on them.\r\nAlso, I tried that, and the `SceneContentAdjuster` only seems to work in Play mode. When I built and deployed to an immersive HMD, the buttons were still in the floor. Was that tested to work when deployed?'"
1308,149851088,"b""`SceneContentAdjuster` also overwrites the X and Z values, which doesn't seem ideal."""
1256,149851473,"b'The change here for `Hand` should likely also be made for `Voice`, so I don\'t believe that is a separate issue. If you test the uGUI stuff on HoloLens and use the ""select"" keyword, does it work as-is?\r\n\r\nThe Voice source type = `other` is definitely a separate issue.'"
1256,149855361,"b'I left a device reimaging, so I should be able to test tomorrow!\r\n\r\nAh! Enjoy your vacation :)'"
1339,151258985,"b""The editor updated this every time I dismissed it. I'll have to look back and verify what Z should be."""
1350,151263196,"b""I think that was a hold over from only having active pointers registered. It looks like you've changed the way that works though, but I haven't had a chance to review all these recent changes."""
1298,151268480,"b""Won't this break existing links and discoverability of the `obsolete` message?"""
1298,151271764,"b""Oh, the GUID points to the new script. What's the point of the obsolete marker then, if any existing references will migrate?"""
1387,151822701,"b""Do these calls need to be `#if`ed out? It seems like they'd just return false on earlier build targets."""
1339,152084330,"b""It's more of an informative message in the test scene, showing which of the pre-existing cubes are inside/outside the boundary."""
1339,152100274,"b""Hmm...I don't think so. Although the floor is only set in opaque headsets right now, that doesn't necessarily have to be the case forever. The height offset really only comes from Stationary vs RoomScale."""
1339,152101152,b'Would there be a benefit to that change?'
1339,152103870,"b""Hmm true. As-is, this method is only called once, but I'll update this to future-proof it a bit."""
1339,152104503,b'![image](https://user-images.githubusercontent.com/3580640/33040393-c4ad61da-cdef-11e7-975a-2f54592410a6.png)\r\n'
1339,152105437,"b'Unlit Configurable. The old guid is missing, and the material had the magenta error shader applied.'"
1339,152106896,"b""> Why are we choosing -3 anyway?\r\n\r\nExperimentation in the editor found that this got it out of the way, and is only used in the case where a headset isn't attached. Otherwise, it functions as normal.\r\n\r\nIt might not even be worth showing the floor in the editor at an arbitrary location, since it doesn't mean much without a headset attached and a boundary defined."""
1433,153296687,b'This seems to update almost every time I open the project. Is there any way to get it to stay the same?'
1126,153862299,"b'If the box is unchecked, this script goes through and deletes all the Toolkit axes. Is that sufficient for reverting to the previous state?'"
1126,153862496,b'This only adds to the current mappings. Is there a downside to leaving the default mappings?'
1126,153862574,"b""Yep, I left Unity's default mappings untouched."""
1373,153971960,"b'Hmm, the formatting looked nicer before this change, having each column align from top to bottom.'"
1373,153972096,b'Should this be `HoloToolkit.Unity`?'
1339,154231677,"b'To prevent broken links in the Inspector, to help make migrating to the new script as easy as possible.'"
1339,154232435,"b'This allows the dev to select which tracking space type they want, to more easily support seated-experience apps like MixedReality250. '"
1468,154469958,b'Please double check tabs -> spaces :)'
1468,154471254,"b'Yep, the Toolkit uses 4 spaces as a tab. Several of the added lines in here (such as the one this comment is on) are actual tabs though.'"
1339,154741373,"b""I'll take a look."""
1339,154743120,b'My change was wrapping the lines in the `IsInitialized` checks to prevent null refs on teardown.\r\n\r\nThat sounds like something to look into though. Perhaps https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputHandlers/IPointerSpecificFocusable.cs'
1436,154745188,"b""All of that exists under `InputHandlers`. I'm sure there are improvements to the names or event groupings that could be made though.\r\n\r\nTouchpad XY comes from [IControllerInputHandler.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputHandlers/IControllerInputHandler.cs)\r\n\r\nTouchpad Pressed and Released comes from [IInputHandler.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputHandlers/IInputHandler.cs)"""
1436,154747041,"b""When would I use `OnInputPressed` that I couldn't use `OnInputDown`?"""
1436,154751937,"b""I understand it from a polling perspective, like the Unity APIs, but I'm not sure I understand it from an eventing perspective. Will the event fire constantly until the input is released? I don't see any code actually firing or using this event."""
1407,154776753,"b'Has this been completed, or should we wait on the upcoming Toolkit release to mark it completed?\r\n\r\nAlso, should this specify MRTP vs not?'"
1479,155054277,"b'Hmm yeah, either here or a separate version.txt. It probably makes sense to have it all-in-one.'"
1415,155061208,"b""I'm getting an ArgumentException with this change, since it doesn't look like these axes were updated in InputManager.asset as well."""
1415,155062156,"b""Was this supposed to be added to the InputManager, to replace GamepadInput.cs? I don't see it."""
1415,155062368,b'Which also means they should be updated in the Add Input Manager Axes menu'
1415,155063228,"b""Should this scene work when running in the editor? Hitting play and having a controller connected (I'm using it via USB) always shows `No Controller Connected`, even when I can teleport and such with the controller."""
1415,155064127,b'Xbox One S'
1415,155064493,"b""Hmm, I don't see `XboxControllerHandlerBase` in the prefab, just `XboxControllerInputSource`."""
1479,155066164,b'I added MRTKVersion.txt to the HoloToolkit folder.'
1415,155070111,"b""I'm able to teleport, but I'm not able to do anything with the cube (should I be?)"""
1415,155070233,"b'Interestingly, I do get a debug statement\r\n![image](https://user-images.githubusercontent.com/3580640/33629686-cf6dfbc2-d9b9-11e7-8880-072d7108676b.png)\r\n'"
1415,155379298,"b""We don't have vertical rotation set up. The right stick's Y is used for intent checking when the right stick's X is within range to trigger a rotation, that it's mostly in a right/left direction."""
1415,155379856,"b'""Vertical strafe"" makes me think of going upwards, but the left stick is only used for side to side and backwards strafing.'"
1415,155380210,"b'Do we need all these things seemingly mapped twice? HorizontalStrafe <-> LeftThumbstickX, HorizontalRotation <-> RightThumbstickX etc.'"
1415,155380336,b'This should be `InputMappingAxisUtility.CONTROLLER_RIGHT_STICK_HORIZONTAL`'
1415,155380367,b'This should be `InputMappingAxisUtility.CONTROLLER_RIGHT_STICK_VERTICAL`'
1415,155380410,"b""What does this do? I don't see it used anywhere."""
1415,155392531,b'Where is it used?'
1415,155392643,"b""Yeah, it's backwards from the previous version.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/33690836-438ee6fc-da9a-11e7-95e1-69c84f01f171.png)\r\n"""
1415,155392649,"b""Yeah, it's backwards from the previous version.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/33690836-438ee6fc-da9a-11e7-95e1-69c84f01f171.png)\r\n"""
1415,155393057,"b""> The right stick's Y is used for intent checking when the right stick's X is within range to trigger a rotation, that it's mostly in a right/left direction.\r\n\r\nIt's used to make sure the stick isn't too high or low when pressed to the left or right, to try to filter out false positives.\r\n\r\nhttps://github.com/StephenHodgson/MixedRealityToolkit-Unity/blob/49133ed42330ec96674caaa7e5ce6a8fc2901c6e/Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs#L171"""
1415,155393124,"b'Yeah, forward sounds better to me'"
1415,155396770,"b""Should `useCustomMapping` be true by default to prevent the breaking change? Otherwise it uses the new mappings by default, if I'm understanding correctly."""
1415,155398324,"b'Good question. I\'m not completely convinced the drop-downs here will work, since they\'re used for more than just one thing.\r\n\r\nThumbstick X is used for both teleporting forward and preventing false positives on the Thumbstick Y strafing.\r\n\r\nThumbstick Y is used for horizontal strafing and preventing false positives on the Thumbstick X teleporting forward. \r\n\r\nIf I set the new Horizontal Strafe to `Xbox Left Stick Horizontal` and Forward Movement to `Xbox Dpad Vertical`, the false positive detection becomes useless.\r\nOf course, maybe we don\'t really need it! If the horizontal strafe values are set to values that physically can\'t be returned once the thumbstick is at a certain vertical value, those checks aren\'t needed anyway.\r\n\r\nAdditionally, if I map `Horizontal Strafe` to something that isn\'t a (-1,1) axis, like `Xbox A`, it strafes me to the right on every press, with no way to go left, but hopefully that\'s something the dev will be able to figure out isn\'t supported.\r\n\r\nHmm, also using `Xbox Dpad Vertical` in my scenario above would break teleporting with motion controllers, since they don\'t have a Dpad. That\'s why we defaulted to only using thumbsticks (and that it matches the shell).\r\n\r\nOne last thought I had is that all of these options start with ""Xbox"", which might be misleading, since they\'re used for the motion controller teleporting as well.\r\n\r\nThis ended up being longer than expected!'"
1415,155398512,"b""If I've changed the string axes to my own custom values already, this will break me."""
1415,155398704,b'These are all set to `mixedRealityTeleport.HorizontalStrafe`'
1415,155398769,b'Looks like you fixed already :)'
1415,155399810,b'Looks like the `mixedRealityTeleport.VerticalRotation` and `mixedRealityTeleport.HorizontalRotation` labels are swapped.'
1415,155400163,b'But the `useCustomMappings` flag being set to false by default will ignore that serialization and instead use the drop-downs by default.'
1415,155403204,"b'Hmm, good point. In this case, we tailored the experience to match the shell, but it\'s possible devs would want to use buttons or other inputs instead of the thumbstick. I\'m not sure they\'d want to use different values though, since they\'re basically ""is the thumbstick pushed forward/left/right/etc"".'"
1415,155403626,"b""That seems overly complicated vs setting `useCustomMappings` to true by default. Is there a reason we shouldn't do that?\r\n\r\nIf I've previously used the custom mappings, but want to switch to using the drop-downs, I'll have to reset my custom mappings exactly or this will switch me over every time I load the project."""
1415,155404576,b'Yeah. Needing to reset the axes exactly is a minor inconvenience for those benefits'
1415,155405005,"b""> But it's essentially the same as just resetting the component.\r\n\r\nAgreed. Could be a good addition later, but I don't consider that blocking. There are definitely other ways to reset."""
1415,155405295,"b""Agreed, if I'm just unchecking the box to see what it does."""
1471,155671841,b'typo in the variable name: `Fisrtpass`'
1453,155897724,"b""Keeping this in the `#if UNITY_WSA...` block hides it when the build target is anything except UWP, The best fix I found when trying to fix this was to put an `#endif` at line 47 above, then wrapping the contents of `AddControllerTransform` and `RemoveControllerTransform` with the `#if`, so the methods themselves are visible regardless of the build type.\r\n\r\n`OnDisable` and `OnDestroy` shouldn't need to be wrapped."""
1453,155897888,b'This `#endif` causes there to be one too few braces in build targets other than UWP. It can be removed if my previous comment is implemented.'
1453,155898015,"b'![image](https://user-images.githubusercontent.com/3580640/33789134-6b508956-dc2b-11e7-8e9a-e08460135e6c.png)\r\n\r\nLooks like this was refactored out but not addressed here. It can probably be removed here, right?'"
1453,155898182,"b'Should `IsAttached` be implemented here? This seems like something that makes sense in `AttachToController`, but not necessarily in this more generic case.'"
1453,155898360,b'typo: cosnsumption -> consumption'
1453,155898660,"b""It doesn't look like this method gets called anymore, which breaks this script."""
1453,156234622,"b'`base.RemoveControllerTransform` should be called in here, right?'"
1453,156234858,b'Not sure what this file is'
1453,156235094,"b'We should still check handedness here, like it used to.\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1453/files#diff-b901af09abe8d8ffcedd390d233ef120L86'"
1453,156237486,"b""This whole method should be inside the check, right? Not just the `base` call? Since we don't want anything to happen otherwise.\r\n\r\nThat, and we should likely have a check to make sure `base.AddControllerTransform(newController);` was actually successful, like in the case where the element isn't found and there's nothing to attach to. """
1453,156237739,"b'Does this need to be `new`, or can it be removed and use the one found in `ControllerFinder`?'"
1407,156238663,"b'Release tag should drop the `v1.` here, right?'"
1509,156755657,"b""This script requires `IInputClickHandler`, which is in the Input folder as well. Inheriting from `TapToPlace` wouldn't add any additional dependencies."""
1521,157026051,"b'Ahh yes, this was left over from when I was investigating the double events. Reverting.'"
1526,157050939,"b'My hesitation to destroy was to preserve the Singleton instance, but if devs are properly checking `IsInitialized` and whatnot, that should be okay.'"
1526,157051800,"b""Bounds isn't nullable, so it won't nullref\r\n![image](https://user-images.githubusercontent.com/3580640/34012584-3620f278-e0c9-11e7-90ff-e8dec7b44067.png)\r\n\r\nAddressing Stephen's comment below about destroying instead of disabling will prevent the method from being called as well."""
1521,157053499,"b""Since it's a test class, I feel like that's unlikely, but I'll change it."""
1453,157100024,b'This used to be `protected`. Should probably be changed back to fix\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/33789039-cc82cab4-dc2a-11e7-967e-359170d89e1a.png)\r\n'
26,62602895,"b'Option 1: \xf0\x9f\x91\x8d \n\nI think we should reserve using Singleton to the cases where more than one instance is problematic, and avoid using it as a means to simplify a single use case.\n'"
38,63634281,b'Are you trying to throw this out of the method or just use this as a means to log the error in your catch below?\n'
48,65241098,"b""Since there's only one call in here, could the contents of StartSpeech just live in the Start method?\n"""
48,65244115,"b""I mean, we can move the StartSpeech code to Start, but I feel like we're splitting hairs a little. Especially since that doesn't affect the public interface. If you want me to move the .cs file to the Utilities folder I can do that too, but I would like to ask what else we need to take care of in order to get this pull request approved. The original pull request was submitted 28 days ago and I'm starting to feel like it's never going to make it in.\n\nI'm jbienz in the GAL. Maybe we could setup an internal call to discuss any remaining issues and get them all taken care of and accepted?\n\nThanks!\n"""
48,65246713,"b""These were the last few comments I had, so, as long as nobody else has anything else to say, I'm happy with the state of things.\n"""
48,65247425,b'Nit: Probably want string.IsNullOrWhitespace\n'
48,65247445,b'Nit: Probably want string.IsNullOrWhitespace\n'
48,65247635,b'BitConverter.ToInt32 is probably more appropriate\n'
48,65248059,b'BitConverter.ToSingle is probably more appropriate\n'
48,66319979,"b""The update I'm about to submit includes this change.\n"""
48,66319992,b'The mono version of string does not include IsNullOrWhitespace. It only includes IsNullOrEmpty.\n'
48,66320006,b'The mono version of string does not include IsNullOrWhitespace. It only includes IsNullOrEmpty.\n'
48,66320143,"b""BitConverter is not as efficient here because of the offset parameter and the way it's used during conversion. It helps with being more memory efficient by not having to copy to new byte arrays in order to use BitConverter.\n"""
48,66320423,"b""BitConverter can't be used here for two reasons: The float value that Unity expects is little-endian and it must also be within the range of -1 to +1. This method does the conversion correctly for the expected audio floating point value and BitConverter would not.\n"""
48,66349351,"b""I think I'm a little confused - Doesn't BitConverter.ToInt32 take an offset as well?\n\nLooking here: https://msdn.microsoft.com/en-us/library/teew1ee0(v=vs.80).aspx\n"""
38,63634513,b'Should this and bytesToInt be Pascal case instead of Camel?\n'
38,63634574,b'Are we using regions in the Toolkit?\n'
38,63634957,"b""Out of curiosity, what does supporting stereo look like? Merging the two channel data buffers you're building above somehow?\n"""
38,63738799,"b""Unity requires the audio to be interleaved (I believe every 4 samples if I remember correctly). You would set the 3rd parameter in the Create method above to 2 and you would interleave the audio samples L R L R L R etc.\n\nFor TextToSpeech and for spatial audio there's not much of a reason to do this because TTS is usually mono and Unity cannot do spatial placement with stereo audio clips. I have the TODO in there in case we wanted to make the Wav class a general purpose class. But that may very well be overkill for the the toolkit.\n"""
38,63772751,"b""Ah, that makes more sense. Maybe in this case it'd be better then to simplify this code, dropping the unnecessary conversion and storage of two channels, and put it directly in the TextToSpeechManager? Something called Wav.cs seems like it should be flushed out and generally usable.\n\nThere's another comment in the code where it justifies it's assumption of only 1 or 2 channels with a statement about the likelihood it'd have more (line 51). I have issues with that too as the code looks like it'll create the wrong sample list in those cases - better to detect and throw an exception or something.\n"""
498,99442072,b'TODO: Need to find out if having a SIL license if\xc2\xa0ok under an MIT project.'
498,100408010,b'Any word on this?'
498,101097376,b'Yes we got approval from LCA on this! WOOT!'
498,99442203,b'Typo: open -> open'
765,126571449,b'nit: explicit access modifiers. (Is this public or private?)'
765,126571491,"b'nit: All the Unity API methods should be private, not public.'"
1007,140889933,"b""I've had issues with this code. When enabling/disabling buttons several times the uv-rects of the icons start breaking. See an example here: https://puu.sh/xIL06/0c20ded28c.webm.\r\n\r\nThis ended up solving it for me but it's more of a workaround than an actual fix, maybe someone with more time or knowledge of the code can figure it out:\r\n```csharp\r\nprivate void OnEnable()\r\n{\r\n    if (Application.isPlaying)\r\n    {\r\n        ClearInstancedAssets();\r\n    }\r\n\r\n    StartCoroutine(RefreshIcon());\r\n}\r\n\r\nprivate IEnumerator RefreshIcon()\r\n{\r\n    SetIconName(iconName);\r\n    yield return new WaitForEndOfFrame();\r\n    SetIconName(iconName); // UVRect of the icon atlas will be broken without this, but why??\r\n}\r\n```\r\nAlso a tip for debugging it: You can trigger the fix by selecting the button object in the hierarchy because that triggers   setting the icon again from the property drawer."""
1007,140920225,"b""@Zod- Thanks for pointing this out.  Yeah, this looks like some bad ref issues.  I'll look into it.  I didn't originally write the code and I know we have a thread about the issue on the MRDL GitHub repo."""
1007,141502723,"b""@Zod- I have experienced similar issue. I'll ask Lars who created this.\r\nThanks!"""
1007,141504465,"b""This is unfortunately due to a [common font glitch in Unity](https://www.google.com/images?q=unity+garbled+fonts) which we've attempted to mitigate (with limited success). Some causes are fairly deterministic but others are mysterious.\r\n\r\nWe've got an [issue on it here](https://github.com/Microsoft/MRDesignLabs_Unity/issues/64) with @Zod's workaround.\r\n\r\nSurprisingly I've yet to see this in [Unity's issue tracker.](https://unity3d.com/search?refinement=issues&gq=font) We should try to get a bug submitted."""
765,126571572,b'nit: extra line space'
765,126571630,"b'nit: this. is implied, we can safely remove it.'"
765,127311653,b'Should these have some description?'
765,127311799,b'Oh I see it in the variable names below.'
795,128365245,b'Ideal for mixed reality applications?'
795,128366988,"b'Oh yeah, we wrote that before we branded everything MR.  Or now from the unity standpoint is it XR?'"
795,128367166,b'Since the namespace will be Unity.XR'
765,126571903,"b""This should be broken out into it's own file, in an Editor folder."""
827,131244777,b'Should probably update Keyboard_onTextUpdated -> Keyboard_OnTextUpdated (and Keyboard_onClosed) as well.'
765,126572893,b'nit: private'
765,126571978,b'nit: extra line space'
765,126572017,b'nit: tab formatting'
765,126572046,b'nit: extra spaces'
765,126572118,b'nit: explicit private access modifier for Unity APIs'
765,126572214,b'We could switch to a for seeing as this is in an update loop.'
765,126572298,b'We could cache this vector allocation as well bc of the loop.'
765,126573095,b'Why does this method have an underscore prefix?'
765,126573198,b'Nit: we should cache this component as a private field in awake or start.'
765,126582223,b'nit: private'
765,127322081,b'NIT: Vector3.one'
701,119909447,"b""This is a great idea!  I'm concerned about all of the hard coded values.  A thought would be to rework this such that the api is float GetUsabilityScaleFactor(Camera camera, float targetPPD) and return the scale factor required to get the targetPPD.  This way you don't need to have any of the hard coded values (aside from the min/max scale factor) and I think you'll get a good result.\r\n\r\n\r\n"""
701,119957515,"b'Thanks for the feedback.  Can you say a bit more about what the caller would pass in for targetPPD and how they would choose that?\r\n\r\nUltimately, we felt we wanted something similar to [""device-independent pixels""](https://en.wikipedia.org/wiki/Device-independent_pixel) in 2D UI frameworks, so that most creators can design for whatever device they physically have access to, and things will ""just work"" on devices they\'ve never physically tested.'"
701,119971433,"b""That's a good question, it might be that we default to 42 (~what HoloLens is), and people can adjust based on their experience.  I think sqrt(targetPPDOf42)/sqrt(cameraPPD) will get you a value that is close to what you've calculated through user testing (1.96 vs 2.18).  \r\n\r\n\r\n\r\n"""
701,120532674,"b""I like it!  It's also nice that it's asymptotic, so devices with very high PPDs won't scale content down too fast.  Check out the new changes."""
339,89843618,"b'So we are consistent with other HoloToolkit shaders, please make this:\r\n\r\nShader ""HoloToolkit/3DTextShader""'"
339,89843693,b'Or something inside the HoloToolkit drop down for ease of discovery in Unity.'
553,104825121,"b""The rest makes sense and looks good to me, but I haven't come across this function before, and its unclear to me if its necessary or not. Presumably it was if you added it, but I'm not sure what the exact purpose is."""
553,104825975,"b'The other shaders appear to be using UNITY_SAMPLE_TEX2D instead of tex2D, maybe that macro this scenario? (speculating)'"
553,104826240,"b'I was trying to follow the [documentation from Unity](https://docs.unity3d.com/Manual/SinglePassStereoRendering.html).\r\n\r\n>**UnityStereoScreenSpaceUVAdjust**\r\n>Returns the result of applying the scale and bias in sb to the texture coordinates in uv. This only occurs when UNITY_SINGLE_PASS_STEREO is defined, otherwise the texture coordinates are returned unmodified. This is often used to apply a per-eye scale and bias only when in Single-Pass Stereo rendering mode.'"
553,104826308,"b""Ultimately I'm unsure how to test this out exactly.  What to look for and all that good jazz.\r\nMight need to break out the frame debugger."""
553,104827088,"b""I'm also unsure if `_MainText_ST` should also be type half4."""
553,104827100,"b""What is a bit confusing is that I think the single-pass rendering that the hololens uses may or may not have the same kinds of requirements. There are two different defines for single-pass:  UNITY_STEREO_INSTANCING_ENABLED and UNITY_SINGLE_PASS_STEREO. \r\n\r\nThe stereo instancing method doesn't use a packed render texture, but instead outputs to a render target array. Those macros and the linked documentation seem to pertain more to scaling and transforming uv's to the left or right eye target position which isn't necessary on the hololens."""
553,104827549,"b'As far as testing, you *should* be able to just set the stereo method to ""Single Pass Instanced"" and throw a 3DTextPrefab onto the scene. That being said, I wasn\'t able to reproduce the problem in my current environment (5.6b10). It was reported earlier this morning in Slack and I was filing the bug on their behalf.  \r\n\r\nI can throw 5.5 back on and try to reproduce there, but I might not be able to get around to that tonight.'"
553,104828137,"b""No worries. Hmm, I haven't been on slack in a while, thanks for reporting here.\r\nI'll probably do a bit more research on this in the meantime."""
904,136188589,"b""What's with the strange space formatting?"""
904,136189937,"b'The formatting keeps getting funky, I will fix.'"
904,136478400,b'One more weird tab'
1021,142587807,"b'Images should be a power of 2, so mipmapping works better (eg, 64, 128, 512, 1024, 2048, etc)'"
1021,142775376,b'@StephenHodgson Updated the image file to 2048x512px. Thanks!'
1007,143087864,b'Seems like this folder got removed but this meta file still remains. Please remove'
2061,186886669,"b""What's this from?"""
2061,186887680,b'I missed adding this file as part of #2052 '
2030,185561679,b'Same issue here too per https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2029#discussion_r185561364'
1197,148392767,b'Duplicate of https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/UX/Materials/3DTextSelawik.mat'
1197,148408542,b'@keveleigh Removed duplicated 3DTextSelawik material.'
1197,148409748,"b""Did any scenes use the old material and need to be updated? Also, there was a second duplicate 3DTextSelawik material as well. There's one in HoloToolkit/UX/Materials, and this PR is adding another in HoloToolkit/UX/Resources/Materials"""
1197,148625128,b'@keveleigh Deleted the one under Resources and verified the scenes. Thanks!'
1007,143088534,"b'Pretty sure we already have a material named ""Wireframe"" in `SpatialMapping/Materials/`'"
1508,156546544,"b""What's with the naming of these assets?"""
1508,156546597,b'We should probably rename the animation to be more descriptive.'
1508,157010116,"b""No idea. This is a modified version of an MRTK asset, I'm not sure who created it initially."""
1508,157017466,"b""We're not importing any animation from this model."""
1007,143088692,b'We should probably disable the material import for `CursorRing.fbx`'
1007,143088961,b'We should disable material import for all the Cursor_Scale meshes as well.'
1007,143089217,b'All the materials in the models folder should be moved over to the Materials folder.'
1305,149526487,b'Is changing the reference to this file going to break anything?'
1305,149526709,"b""Possibly. I'll revert the change. Better safe than sorry."""
1305,149527717,"b""This is another thing that should be cleaned up in the model itself. I believe we used these exact models in the Academy courses, where we saw the same thing.\r\n\r\nBasically, the fbx generates an empty folder called templates when imported into Unity, which git ignores because it's empty. Unity then deletes the meta file because the folder doesn't exist on anybody else's version of the repo, and then it recreates the empty folder and the meta when it reloads the model in some cases."""
1007,143089058,b'What kind of file is this? Does Unity recognize and use it?'
1305,149244123,"b""What's up with this .fx asset?"""
1305,149463224,"b""I'm not sure! It seems like it's getting auto-generated, but I don't know how or why. @keveleigh noticed this in the other pull request as well. Theories, anyone?"""
1305,149474146,b'Disable the material import on the mesh asset.'
1305,149485288,"b""That's where we're stumped, it's already disabled."""
1305,149504653,"b""Could we remove this, and it's meta file until we get it sorted out?"""
1305,149506121,"b'Yup, removed.'"
1453,153679393,"b""Nit: remove this file and it's associated meta."""
1197,148380293,b'Is this a duplicate of https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/SpatialMapping/Shaders/Occlusion.shader?'
1197,148388918,"b'Yes, it can be deleted.'"
1197,148381951,b'Can this be replaced with https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Shaders/Obsolete/UnlitConfigurableTransparent.shader?'
1197,148392211,b'Yes. Both TransparentUnlit and TransparentUnlit2 have been deleted and materials using them have been updated.'
1821,173981280,b'What is compatibility level 3? I only have one possible value.\r\n![image](https://user-images.githubusercontent.com/3580640/37315162-6ff770e4-2615-11e8-8b9b-934c04e79bc8.png)\r\n'
1821,173981497,"b'If this fixes the namespace issue, do we still need to move to 4.6?'"
1821,173981563,"b""Also, if we do move to 4.6, this only *sorta* fixes the namespace issue. With this change, it's still using the Toolkit's old extension method instead of the new official one. Should we not move to the platform's extension method and delete the Toolkit's, since the old Toolkit one only existed to fill the gap of an official one?"""
1829,173985000,"b""Yeah, that's weird. I'll dig in."""
1821,173985048,"b""Right, but enum value 2 (and 0, and 1, and probably any number since I only have one option) was .NET 4.6 for me too. I'm curious which version of Unity seemingly has more than one value here."""
1829,173985734,"b'Cool, the meta files have all been reverted. Not sure what changed them.'"
1821,173986773,"b'Yeah, must be'"
1818,175148249,b'Why is `UseRemove` being removed in these lines?'
1846,175880364,b'What about [protected fields](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1659#discussion_r163358898)? '
1838,176190886,"b""Could probably be marked private, since it isn't used outside this class."""
1856,176270130,b'Good catch! Updated both your comments.'
1934,180501013,b'typo: Proejct\r\ntypo: lastest'
1934,180501188,b'typo: Suppport'
1963,182173702,b'nit: typo: SpriteAtlast'
1976,182836215,b'typo: initilizer -> initializer'
1976,182836370,b'typo: WIndows -> Windows'
2024,185077359,b'Please revert the summary removal.'
1884,185313319,"b'This folder should live under the HoloToolkit folder, probably in the SpectatorView folder, instead of being in a new top-level folder.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/39490092-7f3e59d4-4d3c-11e8-9b9d-3df30a6d93b5.png)\r\n'"
1884,185313442,b'Missing license header'
1884,185313779,b'This file (and its corresponding PNG) have a typo: Swticher -> Switcher'
1884,185314057,b'This sounds like something @fieldsJacksonG was seeing with his SpectatorView implementation as well.'
1884,185314432,b'nit: formatting. This script has a mixture of tabs and spaces throughout'
1884,185314657,b'Missing license header'
1884,185314857,b'Missing license header'
1884,185314898,b'Missing license header'
1884,185315062,b'Missing license header'
1884,185581387,b'Looks like the existing header was removed here.'
2030,185590915,"b""This image doesn't seem to exist."""
2030,185590937,"b""This image doesn't seem to exist."""
2030,185591236,"b""This image doesn't seem to exist."""
2030,185591429,b'Please format these as code with the surrounding ``` markers'
1884,185591905,b'https://bitbucket.org/Unity-Technologies/unity-arkit-plugin/src/3691df77caca2095d632c5e72ff4ffa68ced111f/LICENSES/MIT_LICENSE?at=default&fileviewer=file-view-default'
1884,185598150,"b""Or cleanup the `material` in `OnDestroy`.\r\nAccording to Unity, it's [not recommended](https://docs.unity3d.com/ScriptReference/Renderer-sharedMaterial.html) to modify the materials returned by sharedMaterial, since it changes all instances of that material and changes the actual material file in the project too. They do [have a note](https://docs.unity3d.com/ScriptReference/Renderer-material.html) about cleaning up the material:\r\n>This function automatically instantiates the materials and makes them unique to this renderer. It is your responsibility to destroy the materials when the game object is being destroyed."""
2036,185662751,"b""It's public here, but private in the master branch. Looks like there are probably some other changes to be made."""
2035,185662767,b'This one is private.'
2036,185663353,b'Changes from the original Dev -> Master PR have now been migrated.'
2035,185664003,b'Agreed!'
1884,185675990,"b'Yeah, these should normally get set in the Inspector (and they do here):\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/39555504-9f6360ea-4e2e-11e8-9151-93e0ef203338.png)\r\n\r\nLooks like the `== null` makes this call is more of a ""worst case, somebody forgot to set this in the inspector. Instead of failing, let\'s go find it.""'"
1884,185676093,"b'Yeah, lots of tabs vs spaces'"
1884,185676419,"b'`Vector3(0.00f, 0.0f, 0.06f)` != `Vector3.zero`'"
1884,185677238,b'![image](https://user-images.githubusercontent.com/3580640/39555723-45e3675c-4e30-11e8-948f-284bee966e15.png)\r\n'
1884,185677281,b'![image](https://user-images.githubusercontent.com/3580640/39555730-51486fa2-4e30-11e8-95d2-10722c4def31.png)\r\n'
1884,185677367,b'![image](https://user-images.githubusercontent.com/3580640/39555750-6d282cee-4e30-11e8-860c-e2e42f1c3147.png)\r\n'
1884,185677484,b'![image](https://user-images.githubusercontent.com/3580640/39555771-8f21d3ae-4e30-11e8-9933-bbb02f6bf052.png)\r\n'
1884,185677627,"b'Once the `WSA.meta` mentioned below is gone, this one will need to be deleted too, as the folder will be empty.'"
1884,185905052,"b""Looks like the ARKit plugin doesn't completely support building for UWP, so there are some changes made here that wouldn't be present if a dev imports on their own."""
2061,186884566,"b'I think these should just be switched straight up. [The source is obsolete](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/may18_dev/Assets/HoloToolkit/Input/Scripts/InputSources/SupportedInputInfo.cs#L15) for all versions, not just 2017.1 or newer.'"
2061,186887785,b'This matches line 358: https://github.com/davidkline-ms/MixedRealityToolkit-Unity/blob/fb3fc5086606be1a5e3c9aacc3d01e6cc843187e/Assets/HoloToolkit/Input/Scripts/Utilities/Interactions/HandDraggable.cs#L358'
2061,186891620,b'The PR had been updated\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/39787130-b3885bee-52d8-11e8-8922-1623d6b86e6a.png)\r\n'
2061,186892094,"b""Also, your red lines don't match up. There's an `#endif` between them"""
2059,187131828,"b""Anything that comes from another project with its own license (which allows us to redistribute!) should be preserved as-is, since we're redistributing, not re-licensing. In this case, it's coming from https://github.com/svermeulen/Unity3dAsyncAwaitUtil, along with its [corresponding license file](https://github.com/StephenHodgson/MixedRealityToolkit-Unity/blob/ccaa711444e297df08717363c0ffe2d994b435f8/Assets/MixedRealityToolkit/_Core/Utilities/AsyncUtility/License.md) in the root of the folder."""
2059,187132162,"b""@SimonDarksideJ Unless you're referring to a conversation I might have missed? But this is the way we've been handling third party components, like the GLTF loader."""
2072,187476823,b'Weird spacing'
2075,187476953,b'Should we remove the component? Or will this be fine?'
2075,187481347,"b""Yeah, mostly a question about if there will be any perf hit to leaving this unused component in the scene. I don't think there should be much, since it doesn't have an `Update` loop or anything."""
2072,187483360,b'I thought the same thing!'
2077,187652461,b'Causing it to disappear in the Inspector for different build types can also cause lost prefab values as the build types are switched back and forth.'
2077,188007020,"b'Do you have an example of how it was fixed in another place that would solve this situation? \r\nIf we have cases where things are disappearing from the Inspector, we should reevaluate what we did there. If we have cases where this was solved without `#pragma` and without things disappearing from the Inspector, we should probably put a note in the coding guidelines letting people know our expectations.'"
2115,189119519,b'Looks like this came namespace-less from the plug-in:\r\n\r\nhttps://bitbucket.org/Unity-Technologies/unity-arkit-plugin/src/b4d4bbf5f4bfe454cad3fa2ecd897f5b785952ea/Assets/UnityARKitPlugin/Plugins/iOS/UnityARKit/Editor/UnityARBuildPostprocessor.cs?at=default&fileviewer=file-view-default'
2115,189119771,b'Also came namespace-less:\r\nhttps://bitbucket.org/Unity-Technologies/unity-arkit-plugin/src/b4d4bbf5f4bfe454cad3fa2ecd897f5b785952ea/Assets/UnityARKitPlugin/Plugins/iOS/UnityARKit/Helpers/AR3DOFCameraManager.cs?at=default&fileviewer=file-view-default'
2115,189120005,b'https://bitbucket.org/Unity-Technologies/unity-arkit-plugin/src/b4d4bbf5f4bfe454cad3fa2ecd897f5b785952ea/Assets/UnityARKitPlugin/Plugins/iOS/UnityARKit/Helpers/UnityARCameraManager.cs?at=default&fileviewer=file-view-default'
2115,189120247,b'Should this be Examples?'
2115,189121026,"b'I agree about preferably not going namespaceless :/\r\n\r\nAs I understand, there were other edits to allow building for UWP. Likely, we should try to contribute those (and these namespace edits) back to the original repo.'"
2029,189128675,"b""This file is missing its meta. I'll add one."""
2127,189375037,"b'Is ""depreciated"" here correct? I always thought it was ""deprecated.""'"
2127,189381269,"b""Also, I'm not sure I read in [that blog post](https://blogs.unity3d.com/2018/03/28/updated-scripting-runtime-in-unity-2018-1-what-does-the-future-hold/) anywhere that .NET is not longer supported as a backend. All I read is that the .NET 3.5 Scripting Runtime Version is being removed in favor of .NET 4.x and .NET Standard 2.0. Am I missing something? There's no mention of IL2CPP or .NET as backends at all. It largely reads as an announcement that the Experimental tag is being dropped from 4.x."""
2127,189383529,"b""Aha, there's the source. Thanks!\r\n\r\nLooks like it's not deprecated until 2018.2.\r\n![image](https://user-images.githubusercontent.com/3580640/40256070-1eba85fa-5a9e-11e8-90aa-9d4a348ec392.png)\r\n"""
2127,189394277,"b""@cre8ivepark or @johnppella, is this supposed to be used? Looks like it's not. Are there planned but unimplemented features here?"""
2127,189394394,"b""@cre8ivepark or @johnppella, is this supposed to be used? Looks like it's not. Are there planned but unimplemented features here?"""
2136,189630185,"b""I've used `#WINDOWS_UWP` like `#UNITY_WSA && !UNITY_EDITOR`, useful when you're using platform, non-Unity APIs."""
2127,189662825,"b""The commit says these (the changes in ApplicationViewManager.cs) are coming from the dev branch, but I don't see these changes there. Do they need to be ported over?"""
2136,189687802,"b""Yep, from my tests just now, `WINDOWS_UWP` was defined in build configurations where `UNITY_WSA && !UNITY_EDITOR` was also true (and vice versa).\r\n\r\nThe `NETFX_CORE` define this change is replacing didn't work when building for IL2CPP.\r\n\r\nSome examples (WSAOnly is `WSA && !Editor`):\r\n\r\n| UWP IL2CPP | UWP .NET | Editor |\r\n| --- | --- | --- |\r\n| ![image](https://user-images.githubusercontent.com/3580640/40325697-98db41a8-5cf1-11e8-9b8c-cd722437dcb5.png) | ![image](https://user-images.githubusercontent.com/3580640/40325772-d3c6062c-5cf1-11e8-98c5-2b7806200a88.png) | ![image](https://user-images.githubusercontent.com/3580640/40325784-daafa3ee-5cf1-11e8-892f-30f38820d366.png) |\r\n"""
2201,191599616,"b""This class was added by me in the PR that added the visualization. The visualizer doesn't need to know about the pointer's extent all the time.\r\n\r\nWhy should it stay?"""
2201,191600027,"b""This was present in the MultiPointer Refactor branch, but that's because pointers and pointer visualization were one and the same. Here, they're separate, and tracking the extent in multiple places isn't necessary."""
2201,191609065,"b""The removal is not the `extentOverride` present in [`InputSourcePointer`](https://github.com/keveleigh/HoloToolkit-Unity/blob/PointingRaysExtra/Assets/HoloToolkit/Input/Scripts/Focus/InputSourcePointer.cs#L41). The removed `extentOverride` was added in [my PR adding pointer visualizations](https://github.com/Microsoft/MixedRealityToolkit-Unity/blame/may18_dev/Assets/HoloToolkit/Input/Scripts/Utilities/BaseControllerPointer.cs#L15), to the classes that are solely responsible for the visualizations (and not actual pointing/interaction). It was not actually doing anything, except being [immediately overwritten with the default cursor distance](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2201/files/56b9a6ecc6ce59c2ef9d8f5644af3c6f96871cf0#diff-269f5fd5cb2a1585a50c71319e1706b6L312) (again, because this class only cares about visualization, not pointing). I shouldn't have added it in the first place.\r\n\r\nThis is a change to something that was not present prior to the most recent release candidate (RC2). It was not present in any previous release, and is not the removal of the actual pointer's extent override, which is useful and untouched."""
2224,192192302,"b""I'm not sure what this means. Are you saying to explicitly set this to a specific default value?\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/40800172-759ac6fc-64c4-11e8-9b7b-23da32beba79.png)"""
2224,192226295,"b'`DoNotFlatten` is kinda a `None`, but that would make it more obvious.'"
2229,192514217,"b""It looks like it's because `FaceParentUp` is preceded with tabs, while the others are spaces."""
2212,192540914,"b""Does this need to be a MonoBehaviour? Its [only use](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2212/files#diff-cca878975ff11b2420bc1b4d7e52b8baR249) is with the 'new' keyword, which causes a Unity warning.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/40868278-31c99b90-65c0-11e8-8272-60972465ccdf.png)\r\n"""
2184,192890205,"b""The controller position is way off into space because the Head object is at (0, 1, -10). Updating this to (0, 0, 0), as well as reducing the cube to a MUCH smaller size haha ((0.1, 0.1, 0.1) worked fine), the controllers show up correctly.\r\n\r\nMoving to (0, 0, 0) is a temporary fix though, as we'll need to take into account an object on top of the camera moving it, via teleportation or something similar.\r\n\r\nIn master, we use [`CameraCache.Main.transform.parent.TransformPoint`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputSources/InteractionInputSource.cs#L737) to take this into account, since Unity's APIs don't.\r\n\r\nEdit: Actually, this is a different issue, where the camera itself is placed at a non-(0,0,0) start point. I'm not sure we take that into account in master either, but I'll take a look.\r\n\r\nEdit2: Confirmed, we don't handle this in master either. Hrm."""
2184,192891335,"b'It follows Unity\'s terminology, where they\'re all ""input axes"", but the type can be different things:\r\n![image](https://user-images.githubusercontent.com/3580640/40943567-74822572-6806-11e8-9a14-a21c871ad0e5.png)\r\n'"
2184,192893953,b'Now with gif:\r\n\r\n![](https://user-images.githubusercontent.com/3580640/40944057-39cbe808-6808-11e8-8b38-2e007629eacd.gif)'
2245,192896671,b'Please remove tabs'
2245,192896925,"b""What's the purpose of this one that isn't supported by the regular SolverHandler?"""
2245,192896987,"b""I have a refactor in progress that resolves some of this. I'll retarget it for this PR and work with @Ecnassianer to get it all in at once."""
2184,192904360,"b""@SimonDarksideJ Ahh yep, I realized after I commented that it actually isn't the teleportation issue I as I originally thought (especially since you already took that into account!), but actually an issue with the camera itself starting at a non-(0,0,0) location. I just checked, and we have this same problem in master too."""
2184,192944537,b'> I wanted to use what we already have\r\n\r\nHave = have in master or somewhere else?'
2184,193600664,"b"">such as visualizer position (seems centered on the Touchpad)\r\n\r\nAssuming we're using the pointer position, it's centered at the tiny sphere here:\r\n![ezgif-2-3ac46a4ce7](https://user-images.githubusercontent.com/3580640/41072414-7f056812-69b2-11e8-8638-81ab4b278999.gif)\r\n"""
2184,193603857,"b'The video was taken using master, where it loads the same way as the other controller. The API should return the correct model for the controller you have attached.'"
2245,194485558,b'`Start` was removed from ControllerFinder'
2245,194899659,"b"">Should this live in the Solvers folder?\r\n\r\nNah, it's only for the example."""
2245,194901497,"b""`HoloToolkit.Unity.Examples.Utilities` isn't currently in use, and most of the others in the folder are in the `HoloToolkit.Unity.InputModule.Tests` namespace. We probably need to take a namespace pass in the examples."""
2245,194902581,b'Yep'
2245,194904228,"b'Since this script is only used in the solver example scene, the `spawnedObject` is guaranteed to be set up correctly.'"
2245,194904387,"b""I don't believe the Solver system has support for hands. It attaches specifically to the motion controller model."""
2245,194905665,"b""I'll update the namespace here though."""
2245,196171644,"b'`DrawPropertiesExcluding` is a built-in Unity method, so it seems acceptable to me.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/41552062-87048438-72e2-11e8-832f-cb2c02bb38dd.png)\r\n\r\nOther options would be:\r\n1. Having the script field appear in the middle of the inspector\r\n![image](https://user-images.githubusercontent.com/3580640/41553543-e74ee226-72e6-11e8-903d-1ec4cc2cb636.png)\r\n2. Rebuilding the entire inspector from scratch\r\n\r\nNeither of which are better alternatives, in my opinion.'"
2299,196285584,b'> We should most def not do this.\r\n\r\nHow do you see it being implemented?'
2299,196286631,"b'> No we don\'t. A button is a button\r\n\r\nWe currently have explicit `Menu` and `GripPress` (etc) buttons defined. Why are those not just ""button""? How do you differentiate between different buttons in the controller mapping profile if they\'re all just `Button`?'"
2317,196535615,b'Should the `./` be added to all of them?'
2318,196612227,"b""`internal`? (There are some other cases of this too, but I'll leave one comment for discussion.)"""
2322,197273091,"b'Is `ControllersProfile` guaranteed to never be null here? What if I want to use the configuration profile, but not a controller profile?'"
2322,197291857,"b'Should we add an `== null` check then instead? If I delete the ControllersProfile from the ConfigurationProfile, Unity crashes on play.'"
2245,197302478,b'Yep!\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2245/commits/3774baa37615255b4c92bc7b57345e9e15aac44e#diff-e39ae4e27a8b2d933242b6b4fbaf451cR15'
2245,197304119,"b""I see it in the full diff, but it's probably not showing up here because the comment is on the line above it.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/41750074-ca4c44c2-756e-11e8-9d0c-ca1a899e43ff.png)\r\n"""
2322,197304476,"b""It also looks like unchecking `EnableControllerProfiles` doesn't actually do anything except hide the field in the Inspector (if the field is filled in before unchecking, it still runs and works), but that's unrelated to this PR."""
2322,197306936,"b""It disables the bool, but the bool doesn't seem to be used anywhere except to decide whether to display the field in the Inspector. As long as `controllersProfile` has a value before the field disappears, `GetControllerMapping` still uses it."""
2329,197837840,b'The misalignment is because the whitespace has changed from spaces to tabs.'
2337,197904422,b'GetInteractionbyType -> GetInteractionByType?'
2351,198037670,b'OnSourceLost seems like it should still decrement here.'
2351,198038283,b'Nit: stray empty line'
2351,198042169,"b""`SixDofPosition` seems misleadingly named. Also, does it give us anything that querying `ThreeDofPosition` and `ThreeDofRotation` (perhaps in addition to TrackingState) wouldn't?"""
2351,198044936,"b'Just the ""position"" part of it, to me, since it\'s position + rotation. If that\'s commonly referred to as ""six dof position"", then we\'re good. I feel like I\'ve normally heard it referred to having ""six degrees of freedom"", with the inference being position + rotation.'"
2351,198045386,"b""> We're simply raising an event that the data in question was changed\r\n\r\nRight, but do we get anything out of raising an event with a SixDof that we wouldn't get from raising an event with the two ThreeDofs? Seems like we're tracking duplicate data."""
2351,198046054,"b'> Pose is also often used as a form of both Position & Rotation without scale\r\n\r\nOoh, I personally like using pose'"
2351,198047819,"b""> Not sure I understand\r\n\r\nPossibly me neither! I'll take a better look tomorrow"""
2351,198286782,"b""Going back to my comments from last night:\r\n\r\nThis event data currently has 4 things it might contain:\r\n1. `TwoDofPosition`\r\n2. `ThreeDofPosition`\r\n3. `ThreeDofRotation`\r\n4. `SixDofPose`\r\n\r\nWhat's the benefit of providing `SixDofPose` at all, instead of using the existing `ThreeDofPosition` and `ThreeDofRotation`. Additionally, how do I even know which value to look at?"""
2351,198286982,b'What is the difference between this and `SourcePoseEventData`?'
2351,198309498,"b""I think I understand and am pretty sure I agree with not wanting to split them up, but I still have those questions:\r\n\r\n1. How do I know which values in the event data I should care about? \r\n2. The benefit of SixDof vs using the two ThreeDof values. This would also reduce the number of places for me to check for populated data\r\n\r\nIf it seems like I don't actually understand, please let me know how this is actually expected to be used!"""
2351,198553205,b'Agreed. There has to be some way to actually know \r\n\r\n>if you happen to get the data you need'
2354,198887204,"b'Extra space here (there might be one on the above `if` statement, which is what was throwing this line off).'"
2354,198887476,b'Meta changes still here.'
2357,198917930,b'This is the bug fix.'
2359,199048680,"b'What serialization does this break? None of the names I changed have the `[SerializeField]` tag, or are you referring to something else?'"
2359,199048745,b'Good to know about that `[FormerlySerializedAs]` tag! That seems very useful.'
2358,199049342,"b""The pop-up menu was only using the input handler to direct modal input in. It additionally had a handler for when the close button is pressed (which essentially did the same thing). Instead, I'm reusing the same event, which means that only the button needs to handle the input events."""
2359,199049933,"b""Sounds good! I've recently made sure not to change any naming and such in master that would be a breaking change, but I'll have to look into that tag above for potentially helping enforce our coding guidelines in already-existing incorrect cases."""
2351,199050111,"b'What does ""approximate tracking"" mean that checking position/orientation accuracy wouldn\'t?'"
2212,199050566,"b""It's also in Utilities, while the rest of bounding box is in UX."""
2388,199916015,"b""Ahh, good question.\r\n~Disabling just the script didn't do anything, since it was driven through events. I updated this line to disable the entire GameObject, which prevents events being directed via focus.~\r\n\r\n~Hrm, apparently unchecking the box in the Editor is not the same as `enabled = false;`? Testing now.~\r\n\r\nActually none of the above, but a result of the way these scripts are set up. See below."""
2388,199930119,"b""Okay so, the way this script is currently written, there's a GestureInteractive component that drives events into the SliderGestureControl. SliderGestureControl doesn't know about the GestureInteractive, so I'd have to search for it and disable both.\r\n\r\nYou were right about `enabled = false;`, if this was written as a single script responding to the input system's events (it feels like it probably could be, but that's outside the scope of this PR/issue)."""
2396,200503755,"b""> I'm also wondering if the WMR controllers show up in the openvr APIs\r\n\r\nThey might show up if you're using the [WMR/Steam utility](https://store.steampowered.com/app/719950/Windows_Mixed_Reality_for_SteamVR/)."""
2406,200569608,"b""I don't believe changing the class name of an extension method is a breaking change, since you don't reference the class name to call the method.\r\n\r\nThis extension method is only used in the grab mechanics example scene, hence the change to the corresponding namespace.\r\n\r\nSince the single script that calls this method is in the same namespace, no usings needed to be updated.\r\n\r\nBy global extensions, do you mean moving it to `namespace HoloToolkit.Unity`, or somewhere else? We probably could, but this method seems pretty specific to the example as-written."""
2428,202184430,b'Is an essentially empty Update loop really better than a compiler directive?'
2428,202184699,"b'The meta files in vNext were incorrect. They must have been regenerated for some reason. These have now been reverted to their state in master.\r\n\r\nThere are possibly others, but I only checked (for now) the ones relevant to this PR.'"
2457,203555394,"b""![image](https://user-images.githubusercontent.com/3580640/42912002-146a6280-8aa2-11e8-9d07-f0b87e741f12.png)\r\n\r\nThe master project isn't compatible with this syntax."""
2467,203902539,"b""Ahh yeah, I copied the line above which destroys the cursor's parent: https://github.com/keveleigh/HoloToolkit-Unity/blob/9525e0803aacc26dfa13b493a0f44300c656137d/Assets/HoloToolkit/Utilities/Scripts/Editor/SceneSettingsWindow.cs#L132\r\n\r\nI can update it to instead just destroy its own GameObject, like the InputSystem does (multiple times, for itself, the `EventSystem`, and the `StandaloneInputModule`): https://github.com/keveleigh/HoloToolkit-Unity/blob/9525e0803aacc26dfa13b493a0f44300c656137d/Assets/HoloToolkit/Utilities/Scripts/Editor/SceneSettingsWindow.cs#L92\r\n\r\nor should all of this behavior be updated?"""
2469,203919271,"b""This meta doesn't have a corresponding folder.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/42978769-8c45c6be-8b83-11e8-8c03-386b807645c0.png)\r\n"""
2469,203919284,"b""This meta doesn't have a corresponding folder.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/42978774-9248cf02-8b83-11e8-84af-3966ed2fa705.png)\r\n"""
2475,204496915,"b""If hand is included under `MixedRealityMotionController`, is the clicker not also?\r\n\r\n`MixedRealityMotionController` also doesn't make me think of hands...they should either be separate, or renamed to `MixedRealityInputSource` or something."""
2475,204497251,"b""nit typo: it's -> its"""
2475,204501850,"b""Looks like this isn't used anywhere: \r\n![image](https://user-images.githubusercontent.com/3580640/43094659-6dd377f2-8e68-11e8-9acb-5046df67d21f.png)\r\n"""
2469,204508322,b'extra line'
2469,204510065,"b""The original `ContainsObject` method [transformed the provided location into the camera's frame of reference](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/june18_dev/Assets/HoloToolkit/Boundary/Scripts/BoundaryManager.cs#L175) before checking it. Do you do that anywhere?\r\n\r\nThis is important, because it accounts for the case where you've teleported and the boundary follows you. Without this change, the `Contains` method always checks as if the boundary is wherever it was at app launch.\r\n\r\nIt also [changed the rectangle params when they're requested](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/june18_dev/Assets/HoloToolkit/Boundary/Scripts/BoundaryManager.cs#L237)."""
2475,204529848,b'Are these expected to be an exhaustive list? It seems like Menu is missing.'
2475,204529970,"b'What do these id numbers refer to, and why do they jump from 5 to 10?'"
2475,204565323,"b""So they're the...Unity Axis ID? The values here don't seem to match the values there. 10 is `Trackpad-Thumbstick Position` here but Right Controller Trigger there."""
2475,204566761,"b""It's also a defined `DeviceInputType` not represented here.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43105129-aa8d8d48-8e88-11e8-97f2-1b3050d7e4d1.png)\r\n"""
2469,204574428,"b'0 and -1 are valid `FloorHeight`s, since it exists along the Y axis.'"
2475,204589953,"b""Still my question from before: what does this ID mean, and is there a reason they aren't sequential? It doesn't match the 10 on the link you provided (https://docs.unity3d.com/Manual/OpenVRControllers.html), nor do any of the others.\r\n\r\n10 here is `Trackpad-Thumbstick Position`; 10 there is Right Controller Trigger.\r\n\r\nIt's also not used at the moment:\r\n![image](https://user-images.githubusercontent.com/3580640/43109235-9714a3a2-8e9a-11e8-882f-d0e0dbd3ba6d.png)\r\n"""
2455,204597964,b'Is there a benefit to not using the auto-property here?'
2492,205534433,"b""Why quarternions? Settings in the inspector should definitely be something that actually makes sense to the dev without directing them to some other site. I don't see a benefit to forcing a dev to convert their Euler rotation into a quaternion."""
2492,205545913,"b""Where did this (and all the other) controller model come from? Do we have the right license to redistribute them? I don't see any license files in this PR."""
2492,205613967,b'Should these prefabs have materials?\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43290592-63a61276-90e3-11e8-9a11-8750e89cd992.png)\r\n'
2492,205618280,"b""Have you gotten this to work? I never receive this event for a controller.\r\n\r\nThe issue seems to be in OpenVRDeviceManager, where the event only fires if a controller hasn't been added to the active controllers list. From my observation, it always gets added first in the `nodeAdded` event, so no event fires.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43291084-0ad6226a-90e5-11e8-8f2f-c7eac6ff2154.png)\r\n\r\nAlso, is there a reason why OnSourceDetected/Lost is raised based on the tracking state? It makes more sense to me to be keyed off the nodeAdded/Removed events."""
2492,205627098,b'The material has no textures.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43293069-32346bfc-90ed-11e8-8070-ae1475462a54.png)\r\n'
2492,205627273,"b""> But in any case, it's against Tracked as that is when the SDK starts sending pose / button updates. In a non-tracked state, you only get buttons.\r\n\r\nRight, but a source is still there. We handle tracked state in the controller implementation, separate from a source existing.\r\n\r\n> That should be an issue against the devices and not the visualization PR.\r\n\r\nAgreed, but it was causing me (and everybody? This is working for you on Standalone?) to be unable to test this PR on Standalone, hence the mention of it.\r\n\r\nI'm working on a PR with some fixes."""
2496,205650702,"b""Why are these removed now? These are offsets from the controller, not offsets for the controller. Where's that now handled by the visualizer?"""
2496,205654495,"b""Default in master is left; default in June is unknown.\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/blob/june18_dev/Assets/HoloToolkit/Input/Scripts/Utilities/ControllerFinder.cs#L42\r\n\r\nThis was changed to facilitate spawning AttachToController/ControllerFinders at runtime, so it doesn't try to attach to a controller in OnEnable (which happens on Instantiate) and then get its handedness changed in Start (which happens after settings can be changed on the script)."""
2496,205654516,"b""Where? It's a massive PR. The only thing I see are controller offsets for the model."""
2492,205655203,"b""What's the replacement?\r\n\r\n(Also...why was this turned into a MotionControllerVisualizer?)"""
2496,205818390,"b""Since this is being renamed as (as far as I could tell from our conversation yesterday) redone slightly differently than AttachToController, can we change the meta's GUID to not prevent porting the original AttachToContoller over at some point?"""
2496,205823300,"b""If we think it'll eventually do everything the original script did, we can keep them. It feels like it's going for a slightly different use case though."""
2496,205828239,"b""In master/June, the children are set inactive at first, then a check is made to try to find a controller. If one is found, they're immediately made active again in the callback.\r\n\r\nHere, they're set active after SourceDetected, but that misses the case where a controller was detected before the prefab is instantiated.\r\n\r\nThis and ControllerFinder seem to have been ported incompletely or edited after the fact feature-wise, so I'm going to do a re-port soon."""
2496,205830636,b'Good call; I missed that.'
2496,205831443,"b""General, non-PR question: is the source pose grip pose, position pose, or both? Do we expose them both somewhere? I couldn't find it yesterday, other than them going through the same event without a way I could findto distinguish what you were getting."""
2496,205832326,"b'But...where is the ""source position"" centered? It has to be one of them.\r\n\r\nMixedRealityInputPoseHandler didn\'t seem to distinguish between grip and pointer.'"
2496,205834855,"b""What if I don't want to use InputActions?"""
2492,205881797,"b'How should these look with this rotation? The left one looks rotated forward and the right one looks rotated backward, but neither of them seem aligned with each other. Is that correct?'"
2492,205885640,"b'Are we following this license correctly? Particularly (emphasis mine):\r\n\r\n>you may only license, sublicense or redistribute the source, binary or object code of the Oculus SDK **in its entirety**\r\n\r\nand\r\n\r\n>may only be used with Oculus Approved Products and may not be used, licensed, or sublicensed to interface with software or hardware or **other commercial headsets**, mobile tablets or phones that are not authorized and approved by Oculus'"
2492,205907497,b'I tried it! My experience is described above with the rotations seeming off.'
2492,205919162,"b""As checked in (with the rotation), this is what I'm seeing:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43349833-88975f7a-91b7-11e8-8155-d89032ced2cf.png)\r\n\r\nThe controllers are laying on the table, with the touchpad/thumbstick facing up and the tracking light ring facing forward. Is that what you expect?"""
2510,205953607,b'I believe only those with write access can [assign issues](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/).'
2510,205953619,b'Requuest'
2510,205953665,b'thge'
2510,205953725,b'Nit: Open VR -> [OpenVR](https://docs.unity3d.com/Manual/VRDevices-OpenVR.html)'
2510,205953730,b'HoloLens'
2510,205953752,b'Empty spaces?'
2510,205953755,b'Extra line'
2513,206291214,"b'Is Text Mesh Pro being checked in as an option (and all our components will also work with Unity text) or as the way the Toolkit does text? Seems like something not everybody needs, and would add dependencies to anybody who wants to use our UI/UX text components when Unity text would suffice. Not a huge fan of that being added.'"
2522,206631735,"b'This was changed because, when building for UWP XAML, it tries to cast the value (previously -1) into a uint when doing the enum conversion and throws an error. See: #2384'"
2513,206638613,"b""What's this change?"""
2519,206649776,b'throughout'
2519,206650103,"b""Does InitializeInternal get called when the editor isn't playing?"""
2519,206650510,b'Why does the event system need to be on the same GameObject as the `FocusProvider`? None of the existing example scenes are set up this way.'
2519,206657346,"b""Where does it get called while the editor isn't playing? I've yet to see it be called, and I can't find any code that would do it."""
2519,206657908,b'thoughtout -> throughout'
2519,206665862,"b'through out is fine too if that plays nicer with spell check, just not ""thought out""'"
2519,206668699,"b""> I think the event system is added to the UIRaycastCamera that is found under the camera.\r\n\r\nRight, but we're checking against a different GameObject here. Should this be `focusProvider.UIRaycastCamera.gameObject`, to match the `FocusProvider.UIRaycastCamera.gameObject.EnsureComponent<EventSystem>()` line above? Otherwise, we're adding to one GameObject and checking against a different one."""
2519,206673478,b'I think we need to add `inputSystemType.Type != null` here.\r\nOtherwise: \r\n![image](https://user-images.githubusercontent.com/3580640/43484936-a2f8e64e-94c4-11e8-88c0-8fe74e709cb6.png)\r\n\r\nMatches line 183 and the boundary manager checks.'
2519,206674588,"b""Do we have guidelines on using the public vs the private inside the same class?\r\nI feel like I've seen @SimonDarksideJ comment about using the private."""
2519,206675370,b'Haha all good! '
2519,206675686,"b'Yeah, it looks like those are the only two with `SystemTypes`'"
2519,206676102,"b""`FocusProvider` vs `focusProvider`.\r\n\r\nYour previous commit changed which one was being used. I commented on the wrong line, though this one has `focusProvider` in the removed portion and `FocusProvider` in the added portion too, even though they're different lines.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43485875-4a2c6c7c-94c7-11e8-9f17-a45d31ca8890.png)"""
2502,206685722,"b""Please update this to match our other asmdef names (they start with `Microsoft.MixedReality.Toolkit` instead of `MixedRealityToolkit`). Probably `Microsoft.MixedReality.Toolkit.Examples.Demos.StandardShader.Inspectors` (though that's a little long haha)."""
2502,206699217,"b'>It def creates a new instance every time you call it.\r\n\r\nFrom your first link:\r\n\r\n>If the material is used by any other renderers, this will clone the shared material and start using it from now on.'"
2502,206708908,b'Is this not doing that?\r\n\r\nhttps://github.com/Cameron-Micka/MixedRealityToolkit-Unity/blob/8499045c2f442a2d840c6aa5f04500e8a75615ec/Assets/MixedRealityToolkit/_Core/Utilities/ClipPlane.cs#L107'
2502,206709510,"b""Not sure what the issue is here, but I'm missing many prefab references in basically all the scenes. It doesn't like any guids have changed though.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43491665-47f9f600-94da-11e8-9ff2-3e46c6691e3d.png)\r\n"""
2502,206719635,"b""Yeah, I'm not seeing any messed up metas on my end either. I tried regenerating the Library folder with no success."""
2521,207056892,"b'It does not! It updates the MRTK logo with the updated version I added (which is transparent, so I also removed the transparent logo you added that was identical to this new one).\r\n\r\nThis PR leaves the rest of the scene, text and all, alone.'"
2521,207057725,"b'Changes ""[Display Resolution Dialog](https://docs.unity3d.com/Manual/class-PlayerSettingsStandalone.html)"" from ""Enabled"" to ""Hidden By Default"".\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43553370-7ca583fa-95a3-11e8-8c01-85dd9bb02a72.png)\r\n\r\nThis is the popup that shows up after you build for Standalone and launch the exe. With this change, that popup only appears if you launch the app while holding alt. I\'ve found that it helps for ease of launching after building, especially when a headset is involved.'"
2533,207416867,b'WinMR headset with OpenVR:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43618630-56c9ff4a-967e-11e8-96e2-53ef291c487a.png)\r\n\r\nPreviously this correctly fell back to `GenericOpenVR`.'
2533,207418396,"b""You can't break existing support for controllers. WinMR on OpenVR has been supported since the `OpenVRDeviceManager` was implemented."""
2533,207418474,"b""This code doesn't even get called if you only have an Xbox controller connected. Mixing and matching controllers seems more unsupported than removing the generic fallback."""
2533,207418531,"b"">There wasn't existing support for it.\r\n\r\nThat's literally what GenericOpenVR is. I've been using it for most of my testing."""
2533,207419048,"b"">It's not in the list of devices, so it wasn't supported _correctly_\r\n\r\nThat's the entire point of the generic fallback. We cannot get in the business of hardcoding every OpenVR-compatible controller name into the Toolkit."""
2533,207420103,"b"">Agreed, but then how do we get around fact that even non open VR controllers get added?\r\n\r\nI keep trying, but I've yet to see an Xbox controller trigger this code. Do you have repro steps?\r\n\r\n>And it's not like we're hard coding anything, but adding the name of the controller to the list\r\n\r\nYes, a hard-coded list of strings."""
2533,207421676,b'Where would we get the controller names from?'
2533,207622955,b'Should this be `startPoint.Position` to match https://github.com/StephenHodgson/MixedRealityToolkit-Unity/blob/c2e196261d24ed8774589ba3b073b963e4ab2388/Assets/MixedRealityToolkit/_Core/Utilities/Lines/DataProviders/SimpleLineDataProvider.cs#L63?'
2533,207625129,"b""Why don't we update the controller data here anymore? Now the data in a `SourceDetected` event will be empty, or is it properly filled in elsewhere?"""
2533,207626146,b'What happened to the `GlobalPointingExtent`? Would be nice to have an option to not have to set the same extent on every pointer.'
2533,207643970,b'This _is_ `GetOrAddController`'
2533,207646028,b'What was the bug? Why would `case 0` set one thing (`endPoint`) but get a different thing (`startPoint`)?'
2533,207647062,"b""Shouldn't be raising input changes, no.\r\nShould be filling in the state though, in case a dev wants to query it in `SourceDetected`. Is that happening?"""
2533,207647325,"b""> (why didn't you just say that?)\r\n\r\n>Should this be **startPoint.Position** to match [link](https://github.com/StephenHodgson/MixedRealityToolkit-Unity/blob/c2e196261d24ed8774589ba3b073b963e4ab2388/Assets/MixedRealityToolkit/_Core/Utilities/Lines/DataProviders/SimpleLineDataProvider.cs#L63)?\r\n\r\n\xf0\x9f\x99\x83"""
2533,207647688,b'In here? [`InteractionManager_InteractionSourceDetected`](https://github.com/StephenHodgson/MixedRealityToolkit-Unity/blob/c2e196261d24ed8774589ba3b073b963e4ab2388/Assets/MixedRealityToolkit/_Core/Devices/MixedReality/WindowsMixedRealityDeviceManager.cs#L149)'
2533,207652632,b'It was being used here:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43663204-6a8ca894-971d-11e8-8b86-d28c5af29dcc.png)\r\n'
2533,207655282,b'Agreed.'
2542,207713206,"b""It's a tiny value to raise the PlayArea plane above the floor at (0,0,0). Why would you need to configure it?"""
2545,208043934,b'>I simply copied from master for this one and left as is.\r\n\r\nWhere did you copy from master for this?'
2545,208074733,"b""We definitely need this, otherwise the controller position/rotation won't be in world space. Not everything that needs this info is parented under the camera parent, so we should transform into world space."""
2545,208091646,b'>Sounds expensive\r\n\r\nOne time at startup? '
2545,208325318,b'There are/will be solvers that depend on the positions of sources. I guess we can address it then.'
2545,208328435,"b""Pointers don't need to be destroyed when their source is lost?"""
2545,208328475,"b'A lot of these additions doesn\'t seem like things that would be in a ""`BaseControllerPointer`"" and are teleport-specific. Why are they here and not in specific pointer implementations?'"
2545,208333989,"b""Right, but hiding/showing pointers depending on the state of other pointers seems like a common scenario and could get out of hand if every pointer needs to be written into the `BaseControllerPointer`. Teleportation isn't necessarily a special case, though I suppose we can take another look in beta."""
2568,208390190,b'Why change this?'
2568,208390216,b'Why change this?'
2568,208392006,"b'I see the WMR touchpad touch coming through `new MixedRealityInteractionMapping(6, ""Trackpad-Thumbstick Touch"", AxisType.Digital, DeviceInputType.TouchpadTouch, MixedRealityInputAction.None, KeyCode.JoystickButton16)` as expected. Do we need this? '"
2568,208392545,"b'What is ""Press"" vs ""Touch""?'"
2568,208430582,"b""I think these mappings are only valid for UWP. I'm not getting anything anything through these new mappings on Standalone/OpenVR. Are you able to run this?"""
2568,208755682,"b'![image](https://user-images.githubusercontent.com/3580640/43867722-3f7e09d0-9b1f-11e8-923c-228fbd6c140f.png)\r\n\r\nMine comes through slightly differently (Samsung controllers, which might be why?).'"
2568,208758996,b'Good question\r\n'
2568,208759148,"b'>I suppose we could do a partial match here.\r\n\r\nPossibly, but we might need to take into account future controllers with different button configurations that might match our partial match.'"
2568,208770760,"b'With this change, [the line in `UpdateButtonData`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/8e6554e86d8627c13251544af9463de6d0486d50/Assets/MixedRealityToolkit/_Core/Devices/OpenVR/GenericOpenVRController.cs#L358) that allows for converting a `SingleAxis` to an `OnInputDown/Up` event will never be called.'"
2568,209031998,b'`pointerOffsetPosition` being set with the rotation seems odd. Should this be `pointerOffsetRotation`?'
2568,209069066,"b'Nothing is currently coming across many of these axes in Unity 2018. Adding this breaks WMR usability in OpenVR, until Unity fixes their bug.'"
2568,209102095,"b""The generic axes are still working, it's just the WMR-specific axes. We could use those here if we want, though touchpad position doesn't seem to be coming through any axis at the moment, since it's the component that's specific to WMR (a thumbstick and a touchpad together)."""
2568,209307359,"b'>these are controllers attached but not tracked yet\r\n\r\nWe should probably be triggering `SourceDetected` events off those then, and drop the tracking ones. `SourceDetected` is independent of and distinct from the tracked state.\r\n\r\nButton state from an ""undetected"" source doesn\'t sound like a valid state to me.'"
2580,209437694,b'![vaguegrippingantipodesgreenparakeet-size_restricted](https://user-images.githubusercontent.com/3580640/43996118-c22819a4-9d70-11e8-82be-784628fb4ec7.gif)\r\n'
2580,209437891,b'But probably not in a way that better than `foreach` :P '
2580,209440946,b'What is `<para/>` and why?'
2584,209706334,b'I think this should be below the `OverrideFocusedObject` check. That should override everything.'
2584,209707021,"b""What's the benefit of overriding here, when we don't do anything differently than the base class?"""
2584,209712725,"b""Isn't that just for virtual methods called in base constructors? """
2583,210341516,b'Misplaced region tag?'
2583,210446969,"b'In this case, death by...one cut?'"
2606,211003621,"b""I'm not what we'd gain that'd be worth the perf impact of routing local events like this through the event system. I'm sure @radicalad knows more about the use of this, it seems to me like mostly the objects in the collection or related objects would care about this event, instead of routing it to every global/modal/etc listener as well."""
2596,211005184,"b"">If I suggested anything recently it was to use layer masks :p\r\n\r\nHow do you convert a layer mask to a layer number easily? I haven't been able to find anything other than repeatedly bit shifting and keeping track of how many times you have to shift, which seems unnecessary.\r\n\r\nThis value is used for setting a layer, not for use as a layer mask."""
2596,211005584,"b"">We don't need auto start.\r\n\r\nWhy not? An app experience might want the system set up but doesn't want it to start mapping or analyzing until a specific trigger. On the other hand, some apps will want it all started up at launch."""
2596,211009064,"b"">Because it would be up to the developer as to when they choose to enable it.\r\n\r\nYes, that's why this is an option in the profile. The developer gets to choose their profile settings.\r\n\r\n>Either it starts enabled or it doesn't. Simple as that.\r\n\r\nHow is this different from that? The system is set up, and, according to this setting, mapping is either enabled or isn't."""
2609,211054171,"b""Why can't I use speech without input actions? The `SpeechEventData` provides the recognized text, so there are other ways to tell what was recognized."""
2609,211057568,"b'>If so, that works be a different pr, as this is just bug fixes and what you are suggesting would be a change.\r\n\r\nThis is a change, because it now hides the speech command profile if no input actions are defined. Previously, it threw a null ref but still let you set up keywords.'"
2594,211079547,b'Why does the tapped event only reference the gaze pointer? WMR controllers can trigger this event too and likely have their own pointers.'
2594,211079687,"b'Also, why the choice of a `PointerClicked` event only, instead of an `InputClicked` to align with `InputDown/Up/etc`?'"
2594,211079724,"b""Yeah, there's potentially some weirdness in the HTK implementation too. We should definitely test to make sure it works as expected."""
2594,211085481,b'Where are clicks handled in the controller implementation? We definitely should not filter them out here.'
2594,211085493,"b""It's a trigger click, if you're using a controller."""
2594,211090525,"b'>I thought that\'s what you were suggesting.\r\n\r\nNope! I think everything that comes through this recognizer is valid and should be turned into the appropriate events, without filtering by type. \r\n\r\nI don\'t think the gesture recognizer being its own input source makes sense. The events are coming from the same input source as the source detected / input down / etc events from the controller implementation, so it makes sense to me that these should reference the same Controller/source.\r\n\r\nI also think pointer clicked for the UWP WMR controller implementation makes more sense to happen here, since it\'s a better defined ""click"" event than using an input up event, and provides things like `tapCount`.\r\n\r\nI started an implementation of the gesture recognizer a week or so ago that maintains the references to the input source and their pointers and whatnot. What do we gain by making this separate from the controller implementation?'"
2620,212518432,"b""I'm not able to actually select anything, possibly because of this line? Anything I select in the invert dropdown stays at `Nothing`."""
2620,212522218,"b""It doesn't look like this value gets used to write the settings back to the properties anywhere. I've opened a PR with some fixes, assuming I'm not misunderstanding how this is being used.\r\n\r\nhttps://github.com/Jarodshow/MixedRealityToolkit-Unity/pull/1"""
2637,212783604,"b'I left these names from my earlier, more full refactor, where pointers might want to do more than just raise the events when they respond to a ""press"". For now, I can update them to your suggestions, as they\'re more descriptive for the current implementation.'"
2637,212783628,"b""I left this more generic, in case there's an unhanded WMR controller out there. We're focusing more on hands in this implementation (and I basically only filled in `select` anyway haha...), so I'll update the name."""
2638,212792719,"b""I think it's fine as-is. If for perf concerns, it appears there's no real difference:\r\n\r\nhttps://stackoverflow.com/questions/263191/in-c-should-i-use-string-empty-or-string-empty-or-to-intitialize-a-string"""
2638,212809434,"b""Ahh, I see! I wasn't sure what you were asking from your original comment."""
2639,212839126,"b'Doesn\'t look like #2620 was integrated/rewritten correctly. Also not sure why the change in the list was made, causing the display to go from ""Invert Y"" to ""Invert Invert Y"".\r\n\r\nBefore: \r\n![image](https://user-images.githubusercontent.com/3580640/44633016-c8afe200-a939-11e8-93d6-d505d0b57628.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/3580640/44633018-d06f8680-a939-11e8-82ce-408545aa0400.png)'"
2639,212839198,"b'Would the MRTK be correctly categorized under ""video game or VR experience""? I\'m not sure.'"
2639,212839206,"b'Also on that note, where did the rest of the images come from and what are their licenses?'"
2639,212839477,b'Why can controllers without a handedness not have a model?'
2639,212839507,b'Is the controller-specific model override field intentionally no longer displayed for all non-generic controllers?'
2639,212839806,"b""I'm seeing a couple bugs in this inspector, but didn't find the exact line for them.\r\n\r\nRepro steps:\r\n1. Scroll down to the generic Open VR Controllers. Do this on the **Right** Hand Controller, as there's a different bug preventing repro on the Left Hand Controller.\r\n2. Try to change the Generic Type to Unity Controller while there's a Handedness selected. It won't change.\r\n3. Switch the handedness to None, and switch to Unity Controller, successfully.\r\n4. Change handedness to anything other than None, successfully.\r\n\r\nThe bug is either in step 2 or step 4 (or potentially both), depending on whether Unity Controllers support handedness, I suppose."""
2639,212839893,"b""Another bug I didn't find a line for.\r\n\r\nRepro steps:\r\n\r\n1. Scroll down to the generic Open VR Controllers. Do this on the **Left** Hand Controller.\r\n2. Try to change the Generic Type to Unity Controller while there's a Handedness selected. It won't change.\r\n3. Switch the handedness to None, and switch to Unity Controller.\r\n4. Observe that the Right Hand Controller has been changed to Unity Controller instead of the Left Hand Controller."""
2639,212840279,"b""Have you checked that HoloLens hand position comes through spatial pointer and not spatial grip? If I'm remembering correctly, the Unity API surfaces that info across the grip type, not the pointer type."""
2639,212840297,"b'Where did the ""Invert X Axis?"" fields go?'"
2639,212840757,"b'""Invert X Axis?"" was displayed on single axis mappings. Now, nothing is there. Where\'s the ""single dropdown"" that allows for inverted single axis mappings?'"
2639,212886578,"b'To clarify, does ""made"" here refer to drawing the images yourself?'"
2639,212886893,"b'>and actually fixed a few issues.\r\n\r\nFor future reference, what specific issues did you fix, and are they things we need to keep an eye out for?'"
2639,213020104,b'Which issue? The only issue mentioned in this PR is the one about adding the pop-up windows.\r\n\r\nAre you referring to the constructor updates mentioned in this PR?'
2660,213735633,"b'Agreed, this is what labels are for.'"
2660,213792292,"b""Yeah, that's what we're saying. We'll be the ones adding the labels, since only users with write permissions can. Whether it's prefixed or not, we'll be adding the labels, so the prefix seems redundant."""
2660,213794036,"b""Right, and this is a request to change the way things are done going forward. We don't have to do the same thing forever!"""
2662,213796632,b'I also tend to use MR instead of XR.\r\n\r\nI updated the order of this list.'
2679,214183106,"b""Should we instead check and never create the input source in the first place, if touch isn't supported?"""
2707,215428289,"b""The namespace doesn't match the folder. Shouldn't this be in the `Assets/MixedRealityToolkit/_Core/Definitions/Utilities` folder?"""
2727,216116221,"b""Visibility affects the imported mesh and doesn't import a new file/object, so that seems like something that should stay for mesh accuracy.\r\n\r\nI'll remove blend shapes."""
2727,216116258,"b""I'll go ahead and apply these settings to all models already in the Toolkit."""
2737,216468344,"b'[Semantic meanings](https://docs.unity3d.com/ScriptReference/Windows.Speech.SemanticMeaning.html) are provided via the [GrammarRecognizer](https://docs.unity3d.com/ScriptReference/Windows.Speech.GrammarRecognizer.html) and SRGS.\r\n\r\n[SRGS](https://github.com/Microsoft/HolographicAcademy/blob/Holograms-212-Voice/Completed/ModelExplorer/Assets/StreamingAssets/SRGSColors.xml) lets you specify lists of possible words to fill in specific slots in a command. For example, you can make a command ""{color} square"", where {color} can be `red`, `blue`, or `green`. The semantic meaning lets you figure out specifically which color the square should be, where the key will be `square` and the value will be `red`, `blue`, or `green`.\r\n\r\nIn this case, I\'m not aware of the KeywordRecognizer supporting semantic meanings (in fact, it [might be null in this case](https://docs.unity3d.com/ScriptReference/Windows.Speech.PhraseRecognizedEventArgs-semanticMeanings.html)), so we can likely leave it out until we support GrammarRecognizers.'"
2742,216500995,b'Probably'
2742,216516987,"b""The managers list being passed in? It's created in the original method call and not passed on until the return. I'm not sure where else it could be modified."""
2750,216771839,b'Why not `true` here?'
2750,216771853,"b""Looks like there's a difference in the vNext version of this script vs master. [`isVisible` was intended to be exposed in the editor](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/Cursor/Cursor.cs#L122) and enforced in `Awake()`.\r\n\r\nThis would match your added `disableCursorOnStart` in the pointer, though that's perhaps more configurable if you need to add the same cursor on multiple pointers with different visibilities."""
2750,216777402,"b""But `isVisible` should be the current visibility of the cursor. If it's false, this will set it to false again?"""
2750,216778525,b'This is very confusing. We check to see if the object is active before we potentially set it active?'
2750,216784231,"b""Which it will always be after the first time, right?\r\n\r\n[`SetVisibility` sets `isVisible` to be itself](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2750/files#diff-0df32f8308189929c96b3a5e6b59ca08R110) (because it's the parameter). Then, this script uses the exact same value from then on."""
2750,216786765,"b""Doesn't the gaze pointer check right above filter out HoloLens anyway?\r\n\r\nThis being anything other than true doesn't make sense and adds a circular reference if the cursor sticks around after a source lost. Visibility will stay false from that point on."""
2750,216795778,b'Seems like this bug was introduced in https://github.com/Microsoft/MixedRealityToolkit-Unity/commit/d0a80f02127e2dfcedcaf97710aab129ff1898a9#diff-0df32f8308189929c96b3a5e6b59ca08R144 by making visibility tied to source detected/lost. Why was that added?'
2750,216798375,b'How were they not enabling correctly? I remember them working fine before that change.'
2750,216809033,"b""Since the commit I linked mentions the touch cursor, I added a bool check to base cursor visibility on source detected.\r\n\r\nhttps://github.com/StephenHodgson/MixedRealityToolkit-Unity/pull/29\r\n\r\nThis allows for the touch cursor to hide/show based on a touch being present, while not breaking the gaze cursor or overriding the teleport cursor's initially disabled state."""
2747,216832190,"b'duplicate ""manager"" (or some other issue, depending on what you meant to write)'"
2747,216832452,"b""Why do we keep a count reference that's expected to stay equal to `MixedRealityComponents.Count`? Seems like duplicate data."""
1373,153971960,"b'Hmm, the formatting looked nicer before this change, having each column align from top to bottom.'"
1373,153972096,b'Should this be `HoloToolkit.Unity`?'
1496,157350644,b'Do we still need these declarations?'
1496,157351601,"b""Since this is a Singleton, does it makes sense to rename this to `VirtualKeyboardManager`?\r\nThe name also implies that it would handle regular keyboard input as well, when it doesn't.\r\n\r\nThoughts?"""
1496,157351623,"b""This could be a GameObject Extension method.  I wonder if something similar already exists?\r\nI'll take a look."""
1496,157351648,"b""Why not assign this object in the inspector, so we don't have to look it up each time?"""
1496,157351747,b'We should probably add the class attribute that requires the AudioSource component.'
1496,157351927,"b'Lookup is only used at Awake, so once in every time it starts'"
1496,157351949,b'Possibly. I personally am not very much in favor of name changes as they brake code'
1496,157351976,b'I do not agree. The audio source could be attached to the keyboard and spatialized so clicking actually comes *FROM* the keyboard. That is how I use it. '
1496,157352015,"b""Shouldn't be an issue here since we use a prefab, and the GUID will map the updated component.\r\n\r\nWe could also add another class definition above that uses the old name and mark the old name obsolete in case someone was referencing it before."""
1496,157367435,"b'True that. I am using some of the new public methods I introduced, so renaming will break only one application - mine ;) . But I can live with that'"
1496,157368227,b'You are right. There is a Utils.GetChildRecursive. Apparently I did not search well enough when I added this. Updated the PR to use that method and removed mine from Keyboard.cs'
1496,159014316,b'typo in method name: `Activty` -> `Activity`'
1496,159014401,b'nit typo: `dication` -> `dictation`'
1496,159014428,b'typo in variable name: `dication` -> `dictation`'
1496,159014432,b'typo in variable name: `dication` -> `dictation`'
1496,159014469,"b""Should this feature be locked behind a `bool` setting, in case I don't want the keyboard to close automatically?"""
1496,159105134,b'Looks like this was removed in https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1496/commits/9fc3bade2abdc74c119d72240bff10f86fbf3ff9 but re-added in https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1496/commits/b4e89803adf6b46c6770a8df869e5e590dc262d2. That second commit seems to have reverted both the first commit I linked and https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1496/commits/0c6e01c1ebc877f93ea52585318ae6b0c02e777b. Was that intended?'
1496,159295481,b'Should we do anything here?'
1496,159295517,b'Should we be doing anything here?'
1496,159301826,"b'It might be good to display the hypotheses in the text field as we get them, [like 212 does](https://github.com/Microsoft/HolographicAcademy/blob/Holograms-212-Voice/Completed/ModelExplorer/Assets/Scripts/MicrophoneManager.cs#L119).'"
1496,159376181,"b'The key difference here is that [212](https://github.com/Microsoft/HolographicAcademy/blob/Holograms-212-Voice/Completed/ModelExplorer/Assets/Scripts/MicrophoneManager.cs#L119) has dictation input and dictation input only. And replaces the text every time the user starts dictation. This adds/inserts text. The user might press arrow or other keys during dictation. How are you going to delete whatever hypothesis text was inserted again and replace it by definitive text? \r\n\r\nJust my curiosity - does this imply there is a new issue and merging is now blocked again, or are we discussing just some future improvements?'"
1496,159376237,"b'Well, what are you suggesting?'"
2169,191035354,b'Recommend a comment re: why here.'
2522,206630380,"b""MinValue?  (technically you might be able to connect a *lot* of keyboards, but you can't connect negative keyboards!)\r\n\r\n"""
2522,206631735,"b'This was changed because, when building for UWP XAML, it tries to cast the value (previously -1) into a uint when doing the enum conversion and throws an error. See: #2384'"
1305,149244924,"b""If we're referencing this `PointSet` outside of `Bezeir` we should move it into it's own class, otherwise it should be private."""
1305,149245032,b'Nit: Editor scripts should be in their own classes.'
1305,149246322,b'Should this be [`Bezier`](https://en.wikipedia.org/wiki/B%C3%A9zier_curve)?'
1305,149459878,"b""D'oh. I always forget the 'I before E except after B' rule."""
1305,149468939,"b""I've made them private. The only other class that needs to know about them is the Bezier editor."""
1305,149484762,"b""I think this one's worth discussing. There are benefits to keeping some editors nested under the scripts they target like this.\r\n\r\nEg the latest [Spline](https://github.com/Railboy/MixedRealityToolkit-Unity/blob/9b290c185bbcef999e68e585fb1a1da104f594d5/Assets/HoloToolkit/UX/Scripts/Lines/Spline.cs) class, where 'points' is now private. Other scripts are forced to access these points via GetPoint and SetPoint, which keeps things clean. But the Editor script still has direct access to the 'points' array, allowing it to do some error-checking stuff that wouldn't be possible otherwise.\r\n\r\nTo get the same functionality with a separated Editor you'd have to define editor-only public properties or some other potentially confusing kludge.\r\n\r\nDevs also benefit from seeing that a custom editor has been declared and from seeing the logic inside it without having to go on a scavenger hunt."""
1305,149245198,b'regions would be better'
1305,149245263,b'nit: extra line spacing'
1305,149245270,b'nit: braces'
1305,149527395,b'nit braces'
1305,149527606,b'nit braces'
1305,149527636,b'nit braces'
1305,149527684,b'nit braces'
1305,149527713,b'bit braces'
1305,149527825,b'nit braces'
1305,149527955,"b""Maybe a name that's longer than lr. `lineRenerer`?"""
1305,149245442,b'Editor scripts should live in an Editor folder'
1305,149245484,b'nit: braces'
1305,149473301,"b'This extends [MRTKEditor](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Scripts/Inspectors/MRTKEditor.cs), which must be kept outside Editor folders in order to function.\r\n'"
1305,149473609,"b""I really _really_ don't like this pattern."""
1305,149487011,"b'Yes I can tell it makes your skin crawl, lol. Maybe we should open a dedicated issue to discuss the pros / cons.'"
1305,149490974,"b""> your skin crawl\r\n\r\n\xf0\x9f\xa4\xa3 I wouldn't go _that_ far, but yes. It goes against all the industry standard best practices. """
1305,149500168,"b'>It goes against all the industry standard best practices.\r\n\r\nUnity-land is a weird place, man. Sometimes down is up and black is white. I long for the clarity of a pure C# repo.'"
1305,149503933,"b'Haha, Unity development is a different beast. I think a lot of traditional software engineers get tripped up with some things.'"
1305,149528098,b'nit braces'
1305,149245632,b'nit: braces'
1305,149490165,b'Fixed.'
1305,149507503,b'was there an update for this?'
1305,149522315,"b""It's been committed."""
1305,149528490,b'nit braces'
1305,149528518,b'nit braces'
1305,149528545,b'here too'
1305,149528642,"b'nit braces.\r\n\r\nAlso, we should cache this get component call in start or awake'"
1305,149528662,b'more braces'
1305,149528961,b'fields should be declared at the top of the class'
1305,149529004,b'nit: braces'
1305,149529228,b'we should serialize this `transformHelper` and give users the option to assign it in the inspector instead of searching this way.'
1305,149529258,b'nit braces'
1305,149699366,b'Moved into a property a la LineRendererBase.'
1305,149245690,b'nit: formatting'
1305,149245734,b'nit: extra line spacing '
1305,149245825,b'nit: fields should be declared at the top of the class'
1305,149490142,b'Moved.'
1305,149507557,b'Not seeing this change yet.'
1305,149526178,b'This has been committed as well.'
1305,149529607,b'nit braces'
1305,149529644,b'more braces'
1305,149529698,b'some more'
1305,149245886,b'private or public accessors?'
1305,149245917,b'not being used?'
1305,149473981,"b""I don't think they're needed since they're const & can't be modified."""
1305,149474411,"b""I think it's always good to know, that way future devs know what scope they're in."""
1305,149480030,b'Removed.'
1305,149491117,"b""I'm a little confused because a const can't use get / set accessors. Are you thinking we should change these to public properties that return constant values?"""
1305,149491525,"b""It's just helpful to know if this information should have the _ability_ to be accessed outside the scope of just this class.  Idk it's really not a big deal here. Just my 2c"""
1305,149500812,"b""No worries, I just use const all the time so I wanted to get on the same page. If you post an 'ideal scenario' I'll modify the class."""
1305,149529932,b'nit: use `gameObject.EnsureComponent<ParticleSystem>();` instead'
1305,149530004,b'nit braces'
1305,149530031,b'nit extra space'
1305,149530050,b'more braces'
1305,149530123,b'braces'
1305,149530160,b'braces'
1305,149530570,"b""I've noticed we get the line base line a lot. Maybe we should also require the component on the classes that use it."""
1305,149530597,b'Also: braces'
1305,149530783,"b""you could even make source a property and get the component if it hasn't yet been initialized.\r\n\r\nAlso: braces"""
1305,149692043,b'Good idea.'
1305,149696654,"b""LineBase is abstract so we can't require it. But this actually is why we created the [UseWithAttribute] - I'll add those attributes now."""
1305,149530995,b'we could use `gameObject.EnsureComponent<MeshFilter>()` here too.\r\nAlso : braces'
1305,149531320,"b""nit braces.\r\n\r\nAlso, are we handling the case if we're rendering the line when we're not in playmode? (or does this not get rendered if we're not playing?)"""
1305,149531479,"b""Let's go ahead and do this TODO. seems simple enough"""
1305,149691545,b'Done.'
1305,149691892,b'It only renders the mesh in play mode. Otherwise it uses gizmos.'
1305,149700381,b'Good idea. Really useful extension.'
1305,149246036,b'missing access modifiers'
1305,149474837,"b'Not needed since they\'re const.\r\nI could make them static with a Get accessor? eg:\r\npublic static string DefaultLineShader { get { return ""Particles / Alpha Blended""; } }'"
1305,149475624,b'So what happens if someone tries to use a custom shader for line rendering?'
1305,149487466,"b'These are just failsafe values. If they specify a material and property name, that material\'s shader is used. If they leave the material null, a material is generated at runtime using the ""Particles/Alpha Blended"" shader.'"
1305,149531570,b'ensure component here too'
1305,149531748,b'why call `this.StepMode` are we hiding an inherited property?'
1305,149531847,b'fields should be declared at the top of the class'
1305,149700674,b'Legacy cruft. Removed.'
1305,149730314,b'Moved.'
1305,149246090,"b""nit: put in it's own file"""
1305,149246204,"b""Each of the enums in this class could be in their own files as well, and probably don't need to be in this `LineUtils` class"""
1305,149246290,b'not used?'
1305,149246313,b'not used?'
1305,149475960,b'Removed.'
1305,149475998,b'Moved.'
1305,149478911,b'Removed.'
1305,149496271,"b""Moved all enums out of the LineUtils class.\r\n\r\nWe should still keep them in a single file, either LineUtility.cs, or possible in LineBase.cs alongside the LineBase class. Or maybe we could compromise and put them in a single enum-only class called LineBaseEnums.cs.\r\n\r\nHere's my reasoning - clumping enums together with the class that interprets them is informative. It's a form of documentation that says: these things all related - taken together, they form a complete picture of this object's possible behavior.\r\n\r\nBreaking them up into separate files destroys that information while adding complexity. Devs have to work backwards from variables one-by-one, forensically reconstructing relationships that should be clear at a moment's glance."""
1305,149531983,b'we can probably remove this region now'
1305,149532045,b'more braces ;) Here and down the rest of this class'
1305,149246455,b'not used?'
1305,149246474,b'line space'
1305,149479057,b'Removed.'
1305,149532287,b'braces here and below'
1305,149532458,b'we should cache this instead of getting the component each update.'
1305,149688287,"b""Normally I'd agree but I don't want to add a new field to the class for the sake of a Gizmos function. Given that Lines can have multiple LineRenderers I worry that its presence would be confusing for devs.\r\n\r\nSince we only do the GetComponent call while the editor isn't playing it won't be a performance issue."""
1305,149246552,b'nit: formatting'
1305,149532559,b'nit braces'
1305,149532588,b'braces'
1305,149532620,b'braces'
1305,149532653,b'extra space'
1305,149532725,b'Do we want to create a new hash set each time we draw the footer?\r\nMaybe we can cache this.'
1305,149532834,b'We can probably cache this list and clear it each time we add a point'
1305,149534098,b'braces'
1305,149687329,b'Cached as a static variable.'
1305,149687340,b'Cached as a static variable.'
1486,155664909,b'Should this actually be in UX or InputModule?'
1486,155664948,b'No WSA platform checks'
1486,155667435,"b""Not sure. There will be multiple pointer types with different looks, shapes, capabilities, etc. So we're kind of veering into design / UX territory rather than core functionality."""
1486,155665033,b'I think this also should belong in InputModule namespace'
1918,179880323,b'I recommend co-locating properties and their backing fields'
1918,180233093,b'Please add a summary block for this class.'
1918,180233171,b'is this something that should be serialized in the inspector?'
1918,180233297,"b'mFadeCounter -> fadeCounter, and similar below'"
1918,180233631,b'should this call ResetFade?'
1918,180233753,"b'For re-use (see comment in FadeIn), should there be a way to ""instantly"" reset?'"
1918,180233812,b'See comment in FadeIn()'
1918,179880446,b'Please add { } to this if statement'
1918,179880578,"b'event though this is a simple one line if, please wrap the return statement in { }'"
1918,180233956,b'please add summary block'
1918,180234051,b'mStartingLoader -> startingLoader (and similar)'
1918,186931357,"b""What's the comment mean?"""
1918,180234186,b'please add summary block'
1918,179880741,"b'If these enums are intended to be referenced outside of this class, please move them outside. if they are not, then they can be made private/protected.'"
1918,179880814,b'{ alignment.'
1918,179880850,b'please wrap the return statement in { }'
1918,179881074,b'please wrap return statement in { }'
1918,179881256,b'please use { } with if statements (even one line ones)'
1918,179881354,b'please use { } with all ifs'
2127,189394394,"b""@cre8ivepark or @johnppella, is this supposed to be used? Looks like it's not. Are there planned but unimplemented features here?"""
2127,189660531,b'oneButtonSet is required when the dialog is going to have only one button.\r\nThe oneButtonSet and twoButtonSet variables do not need to be flagged with SerializeField\r\nsince they are currently not set in the editor in the example ( this is a leftover from the original implementation from which this example was ported).. They can also be defined in the GenerateButtons() function since they are only used within that func. '
1918,180234347,b'Please add summary block'
1918,180234534,"b""Recommend renaming as IndicatorStyle, it's more readable that way :)"""
1918,180420655,"b""I'd actually recommend keeping it the way it is so that the parameters and Fields that use this Enum can be named IndicatorStyle.\r\n\r\nGenerally I use Enum or Type suffix for that reason."""
1918,180511466,b'I can see that.'
1918,180234677,"b'Recommend renaming to ProgressMessageStyle, for readability'"
1918,180234750,b'Recommend renaming to ProgressStyle'
1918,180417075,b'I think the naming is fine.\r\n\r\nGenerally I stick with Enum or Type suffix so that my parameter or field name can be the shorter version.'
1007,143095999,b'Spelling interactable'
1007,143096044,b'Spelling: interactable and abstract'
1007,143096126,b'Spelling subscribe and interactables'
1007,143096187,b'interactable'
1007,143096203,b'spelling'
1007,143096248,b'`BlockFocus` or `LockFocus`?'
1007,143096312,b'Should be in editor script.'
1007,143096336,b'Why is this commented out?'
1007,143267873,"b'LockFocus, b = bool.  Changed it to _LockFocus.'"
1007,143268254,b'Need to add the functionality to the focus manager in MRTK.  On the HUX side individual focusers can have focus on an object locked which is different than modal as you can interact with anything else you like but focus is locked to an object for that focuser.'
1007,143268988,"b""Public fields should not have underscore prefix.  Why can't it be `IsLockFocused`?"""
1197,148382740,b'Does this path exist here? There are several references to HUX in these scripts.'
1197,148388870,"b'Agreed.  Also, referencing the GUID would probably be better so people can move this asset as they please.'"
1197,148390349,"b""In the interest of moving things along I've removed references to HUX gizmo icons. We can discuss bringing them back after the merge."""
1339,154740610,"b""Isn't this an event in the InputManager?\r\n\r\nWe probably don't need to subscribe to this kind of event if we can get it through the interface.  Might see a perf improvement here."""
1339,154743120,b'My change was wrapping the lines in the `IsInitialized` checks to prevent null refs on teardown.\r\n\r\nThat sounds like something to look into though. Perhaps https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputHandlers/IPointerSpecificFocusable.cs'
1339,154746067,b'Exactly the interface I was talking about :)'
1007,143095976,b'unused `System` and `System.Collections`'
1936,182585897,b'nit: not really needed. the following line describes the class'
1936,182586169,b'what should happen if GetComponent fails? is there a cleaner solution than a nullref exception?'
1936,182586277,b'can the child be at an index other than 1?'
1936,182586321,b'what should happen if GetComponent fails?'
1936,182586385,b'what if GetComponent returns null?'
1936,182586540,b'please wrap with { }'
1936,182586661,b'recommend range checking in the setter (for when set by code)'
1936,182586719,b'recommend range checking value in the setter'
1936,182587066,b'consider renaming IsOn to IsDisplayed'
1936,182587157,"b""this isn't wrong, but looks a bit odd...."""
1936,182587385,b'please wrap in { }'
1936,182587433,b'is this no longer needed?'
1936,182587498,b'please align the {'
1936,182587574,b'please align {'
1936,182587612,b'please format as \r\n}\r\nelse\r\n{'
3717,269807202,b'Added'
3718,270125195,b'Updated'
3726,270189359,"b""```suggestion\r\n    /// Struct containing information related to a camera's resolution and framerate.\r\n```"""
3725,270557426,"b""Yes, on that line it's passed into the `DispatchEventToObjectFocusedByPointer` method, which then uses it to determine if it should continue handling event dispatch."""
3725,270558046,b'Moved them back below the `if`'
3725,270561155,"b'Since focused objects and the modal stack [work together to ensure the right objects get the event](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3725/files#diff-4cee86eaf4620444450371e114592641R357), it makes sense to me to keep them intertwined.'"
3741,270899642,"b'Oof yeah, good catch. It causes a few other problems too...working through them now.'"
3744,270949198,"b""I think it's [Frustum](https://en.wikipedia.org/wiki/Frustum), not Frustrum."""
3741,270951364,"b'I moved them around. The ""other problems"" I mentioned turned out to be unimportant.'"
3765,271374043,"b""Might be good to add the [`FormerlySerializedAttribute`](https://docs.unity3d.com/ScriptReference/Serialization.FormerlySerializedAsAttribute.html\r\n) here, so we don't break set-ups that already have this on."""
3765,271389095,"b'```suggestion\r\n        [FormerlySerializedAs(""enableHandMeshUpdates"")]\r\n```'"
3799,271904572,b'Missing `IMixedRealityInputHandler`?'
3812,272106225,b'The docs build is failing due to an invalid link.\r\n\r\n```suggestion\r\n      href: Performance/PerfGettingStarted.md\r\n```'
3794,272116951,"b'Do we even need to create a new GameObject and save this as a transform? As far as I can tell, we only use its position. Could we just save off the `Vector3` position on line 218?'"
3805,272127910,b'```suggestion\r\n![Boundary Visualization Boundary Wall Settings](../../External/ReadMeImages/Boundary/BoundaryVisualizationWallSettings.png)\r\n```'
3745,272128967,b'This reference needs updating.'
3819,272230722,b'Should we also remove the corresponding `Initialize` variants?'
3819,272251743,"b""~~Hmm yeah, does seem weird that it's ignored. Not sure that was intentional. (Also, looks like the method summary has some stale parameters)~~"""
3819,272252112,"b""Whoops I didn't refresh!"""
3864,272622442,b'```suggestion\r\n2. Browse the document structure and see if your new document could be mentioned under the [See also](#see-also) section of other pages.\r\n```'
3864,272622512,"b'```suggestion\r\n3. If available, have someone with knowledge of the topic proof-read the page for technical correctness.\r\n```'"
3864,272622570,"b'```suggestion\r\n4. Have someone proof-read your page for style and formatting. This can be someone unfamiliar with the topic, which is also a good idea to get feedback about how understandable the documentation is.\r\n```'"
3855,272633326,b'Should be fixed!'
4019,276869974,"b'None of these are specific to WindowsMixedReality, so they should probably be moved into just `Toolkit.Input`, with the rest of the interfaces and profiles. #Resolved'"
4019,276870003,b'This one #Resolved'
4019,276870013,b'This one #Resolved'
4019,276870029,b'This one #Resolved'
3890,277797619,"b""I'm not sure this most recent change makes sense in the flow of this method. Previously, it was written so it:\r\n1. Checks for a main-tagged camera.\r\n2. If it doesn't find one, search the scene for any non-tagged cameras.\r\n3. If it doesn't find any non-tagged cameras, create one.\r\n4. If it does find a non-tagged camera, use that.\r\n5. If it finds more than one, look for name or use the first one.\r\n6. Return\r\n\r\nNow, searching for a non-tagged camera will never be hit (because we always create a new main-tagged camera if one doesn't exist), and we may create a new camera even if one already exists:\r\n\r\n1. Checks for a main-tagged camera.\r\n2. If it doesn't find one, create a main-tagged camera.\r\n3. Return"""
3890,277805070,"b'Ahh, good call, yeah. Should we remove much of the rest of this method then, to help prevent confusion, etc?'"
4049,277915907,"b'My guess is that this was written the original way because, in the editor while playing, making changes to the `sharedMaterial` propagates those changes back the the material file. Not sure we should update by just removing the original logic, since it might lead to unexpected in-editor behavior.'"
4049,277917194,"b""It's also the Unity recommendation to [not modify materials returned by sharedMaterial](https://docs.unity3d.com/ScriptReference/Renderer-sharedMaterial.html), but as long as the caller of this method doesn't actually modify the material, we might be fine."""
4049,277917522,"b""Oh though I misread the original version, which didn't use `sharedMaterial` outside the editor."""
4032,278348007,"b""I'm not sure it makes sense to completely remove the xref, since it's useful to get to the API docs.\r\nWasn't the script just renamed?"""
4088,278703096,"b""That was how I had it originally, to match the SpeechInputProvider, but I couldn't think of another way to resolve this warning without just defining a non-async version in the other function declaration: \r\n![image](https://user-images.githubusercontent.com/3580640/56763565-9c15c980-6757-11e9-97f9-f41b5d558bc2.png)\r\n"""
4088,278703342,"b'Ah, I suppose I could define a no-op await or something.'"
4088,278746865,b'Updated to tighten the scope.'
3890,278755200,"b'```suggestion\r\n                    Debug.LogWarning(""No main camera found. The Mixed Reality Toolkit requires at least one camera in the scene. One will be generated now."");\r\n```'"
4116,279623045,"b""I'm not sure this suggestion compiles.\r\n![image](https://user-images.githubusercontent.com/3580640/56942854-af1af780-6ad1-11e9-8198-27ce06c54734.png)\r\n\r\nIt doesn't appear better than using new:\r\n![image](https://user-images.githubusercontent.com/3580640/56942831-9874a080-6ad1-11e9-9290-21505c776470.png)\r\n\r\nExplanation of the above:\r\nI ran three variations 1,000,000 times per update loop.\r\n1. **TestOneMult** is a simplified, but compilable, version of the above suggestion: `var test = Vector2.one * 1;`.\r\n2. **TestOne** is...`var test = Vector2.one;`.\r\n3. **TestNew** is `var test = new Vector2(1, 1);`\r\n\r\n| | TestOneMult| TestOne| TestNew|\r\n| ------| ------------- |-------------| -----|\r\n| Time (ms) | 494.19      | 171.82 | 161.86 |\r\n|GC Alloc (B) | 0     | 0|  0 |\r\n"""
4116,279634626,"b""I ran through perf testing the proposed new method (`TestNewM()`) and the existing method (`TestExisting()`).\r\n\r\nLooks like using Vector2 equality checks and multiplication is much more expensive than the existing method of dealing entirely with float comparisons.\r\n\r\nValue types (like Vector2) don't allocate on the heap, so there's no GC either way, but it does measure more expensive for other reasons.\r\n\r\nThe internals of my test methods are functionally identical to the code here (but feel free to run your own tests to double check), just run 1,000,000 times per update. Obviously that's way higher than the scale we're dealing with here, but it helps to measure the comparison.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/56944483-66b30800-6ad8-11e9-82a3-3d7d6f3ddc63.png)\r\n\r\n| | TestExisting| TestNewM|\r\n| ------| ------------- |-------------| \r\n| Time (ms) | 173.93      | 1394.3 | \r\n|GC Alloc (B) | 0     | 0| """
4116,279846023,"b""I pasted the tests above exactly as they're written. I thought that was interesting as well. When you're measuring a difference of 10ms over the span of a million runs, there may be some unexpected results with rounding and whatnot. I don't really think this test says anything specific on the comparisons between those two.\r\nTesting only 1000 times led to One being faster than New _most_ of the time.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/56978945-84f72300-6b2d-11e9-91f9-c1a2ea25bafd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/56978002-609a4700-6b2b-11e9-8a12-2ecbe0287f91.png)\r\n"""
4116,279846518,"b""If you've run these tests and see different results, let me know."""
4116,279847426,b'>Not very scientific method of you mate. Easy way to win over someone who takes things at face value.\r\n\r\n@StephenHodgson I posted the exact tests I ran in my original post:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/56979668-2e8ae400-6b2f-11e9-8633-de856bf3a949.png)'
4116,279860251,"b""Here's a gist of the exact script I ran with the deep Unity profiler attached.\r\n\r\nhttps://gist.github.com/keveleigh/05c22aa9c6609841636f40b823c791c6\r\n\r\nHere's a second script I just ran to measure the methods without the profiler (I originally attached the profiler to try to detect allocations):\r\n\r\nhttps://gist.github.com/keveleigh/e2ecd3b4a07c68397a6d66138678ca25\r\n\r\nPlease feel free to run both of this scripts and report back if your data appears different.\r\n\r\nSecond script data (still run 1 million times, but measured with stopwatch instead of Unity deep profiler):\r\n\r\n| | TestOneMult| TestOne| TestNew|\r\n| ------| ------------- |-------------| -----|\r\n| Time (ms) | 74.3      | 26.76 | 25.04 |"""
4116,279865650,"b""For completeness.\r\n\r\nHere's this gist I ran under the Unity deep profiler to get the screenshot and data above:\r\nhttps://gist.github.com/keveleigh/e5b312e6bba6b472d6b724705884d20d\r\n\r\nHere's this test with stopwatch instead of profiler:\r\nhttps://gist.github.com/keveleigh/46e205c2550442298fe4364945615250\r\n\r\n| | TestExisting| TestNewM|\r\n| ------| ------------- |-------------| \r\n| Time (ms) | 32.1      | 204.9 | """
4116,279958123,"b""These tests were intended to test the existing code vs the new proposed code, not really anything about the validity of the Vector2. That was what [the other tests](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4116#discussion_r279860251) were for.\r\n\r\nMy tests showed that the existing code (`TestExisting`) was more performant than the proposed change (`TestNewM`). It seems to me that if changing the `&&` to `||` fixes the original bug (the proposal at the beginning of this comment chain), that'd be preferred, perf-wise."""
4131,280503921,"b'Do these need to be tabs? Or can they be spaces, like the code formatting?'"
4143,280504590,b'```suggestion\r\n\r\n```'
4145,280845158,"b'```suggestion\r\n<img src=""../Documentation/Images/Interactable/InteractableToggleCollection.png"" width=""450"">\r\n```'"
4171,280861976,b'```suggestion\r\n\r\n```'
4074,280937040,"b""I'm going to go ahead and merge this PR as-is to get it in, then add this to my incoming docs PR."""
4181,281266229,"b'Is this not needed? The comment above mentions that the remaining lines work in edit mode (and are blocked by a `!EditorApplication.isPlaying` check), but that we need to set the scene up manually in play mode.'"
4185,281326055,"b'Is this correct?\r\n\r\n```suggestion\r\n   $proc = Start-Process -FilePath ""$editor"" -ArgumentList ""-projectPath $(Get-Location) -runTests -testPlatform playmode -batchmode -logFile $($logFile.Name) -editorTestsResultFile .\\test-editmode-default.xml"" -PassThru\r\n```'"
4181,281404200,"b""Yeah, I'm not aware of the naming being a requirement. TestFixture is NUnit's term, and it's an optional attribute that can be added to the class.\r\n\r\nIf anything, the numbering helps organize the test fixtures in the Test Runner window in a specific order (instead of alphabetically)."""
4211,281742018,"b""This meta file doesn't have a corresponding folder."""
4211,281743964,"b""This will cause additional issues for https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4067.\r\n\r\n@wiwei mentions in that issue having done some relative file path work. It'd be good if we can leverage that here as well."""
4211,281746698,b'In keeping with the [coding guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers) to make sure only properties are public.\r\n\r\n```suggestion\r\n        public TrackedHandJoint ReferenceJoint { get; set; } = TrackedHandJoint.IndexTip;\r\n```'
4227,281818449,b'This feels like information that might be useful to have *somewhere*.'
4230,281873348,"b""Is this a reference we don't need anymore? I'm not sure exactly what it's referring to."""
4232,281940333,"b'```suggestion\r\n        /// and user approved, along with proper device eye calibration. This will fallback to head-based\r\n```'"
4338,283940863,"b""Looks like this should already happen in the `Transform` call. Were you hitting cases where it wasn't?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Utilities/MixedRealityPlayspace.cs#L35"""
4317,283954796,"b""This doesn't build. The `UnityEditor` namespace is only present in the Editor itself. You'll need to wrap this and the namespace in `#if UNITY_EDITOR`.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/57724810-79811d00-7640-11e9-93ab-a4c685632ee1.png)\r\n"""
4270,283968223,"b"">It's not safe to use ? on monobehaviors.\r\n\r\nWhile true, FocusProvider isn't a MonoBehaviour."""
4446,285231079,"b'We should probably turn off `importMaterials` for these models, since this PR is also including its own materials and prefabs.'"
4437,285245008,"b""This seems like it'll call itself recursively forever? Happens in a few scripts in this PR.\r\n\r\n```suggestion\r\n                if (inputSystem == null)\r\n```"""
4437,285245379,"b""Should we cache these `as` calls so we aren't casting every time?"""
4437,285258331,b'```suggestion\r\n                if (inputSystem == null)\r\n```'
4437,285258394,b'```suggestion\r\n                if (inputSystem == null)\r\n```'
4468,285317159,"b'```suggestion\r\n                $""The Mixed Reality Toolkit requires Unity {MinUnityVersion} or newer (2018.3 will likely continue to work).\\n\\nUsing an older version of Unity may result in compile errors or incorrect behavior."",\r\n```'"
4468,285317232,"b'```suggestion\r\n        private static readonly string MinUnityVersion = ""2018.4"";\r\n```'"
4466,285320220,b'```suggestion\r\n        /// </summary>\r\n```'
4466,285320305,b'Missing header'
4466,285320309,b'Missing header'
4317,285355991,b'https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_build?definitionId=15\r\n\r\nThe automated builds seem fine'
4317,285695364,"b""@railboy Do you (or anybody else) have a build break or actionable call stack? I have not had issues building after this change.\r\n\r\nLooks to me like it's currently not breaking the build because there's something in the namespace that's available at runtime (the \xe2\x9a\xa0 means only available in the Editor): \r\n![image](https://user-images.githubusercontent.com/3580640/58040291-036e3180-7aea-11e9-9777-35e5e43e6166.png)\r\n"""
4317,285696870,"b""Might just be a misconfiguration on Unity's part which we probably shouldn't depend on though."""
4466,285702567,b'```suggestion\r\n        /// Read only copy of the list of registered data providers.\r\n```'
4500,286188124,"b""This should ease #3971 on WSA, but we'll still need a proper fix for all platforms."""
4484,286192378,"b""We should probably make sure the ID, description, and any other stale data from the create button (axisCodeX/Y as well) are reset for this action.\r\n\r\nMight be an unrelated bug in the generic action mapper that everything is copied from the previous action, even if you aren't able to change it in the UI."""
4484,286192627,b'These should be added to the default interactions in the class as well:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/9ab0e9b69afe45f7856b5731436ae427c3fe7cc4/Assets/MixedRealityToolkit.Providers/OpenVR/GenericOpenVRController.cs#L37'
4505,286233732,"b""```suggestion\r\n      - ${{ if eq(parameters.ScriptingBackend, 'default') }}:\r\n```"""
4505,286233811,"b""```suggestion\r\n      - ${{ if eq(parameters.ScriptingBackend, '.NET') }}:\r\n```"""
4527,286730912,"b""Do these need to be public? They seem like they'd only be interesting within the class itself for figuring out where to position itself."""
4527,286731874,b'Should this commented out code just be removed?'
4526,286739973,b'```suggestion\r\n        private Vector4 tilingPropertyVector = Vector4.one;\r\n```'
4526,286740018,b'```suggestion\r\n                tilingPropertyVector.x = lineDataSource.UnClampedWorldLength * tileMaterialScale;\r\n```'
4526,286740039,"b'```suggestion\r\n                tilingPropertyBlock.SetVector(""_MainTex_ST"", tilingPropertyVector);\r\n```'"
4514,287127292,"b'The [FormerlySerializedAsAttribute](https://docs.unity3d.com/ScriptReference/Serialization.FormerlySerializedAsAttribute.html) should be added here, to preserve previous asset serialization.'"
4466,287156709,"b""Are you referring to `IMixedRealityDataProvider GetDataProvider(string name);` vs `T GetDataProvider<T>(string name = null)`?\r\n\r\nThe reason, as I understand it, is that both calls need something to actually let you define what you're looking for. The first call lets you ask by name, while the second one lets you ask by type and an optional name."""
4548,287160808,"b""Not sure if this is what it's supposed to be, but was my best guess :)\r\n```suggestion\r\n        protected void DrawDropDownProperty(Rect position, SerializedProperty prop, string[] options, GUIContent label)\r\n```"""
4548,287160855,"b'```suggestion\r\n                DrawDropDownProperty(position, actionId, actionOptions, new GUIContent(""Input Actions"", ""The input action filter""));\r\n```'"
4466,287450355,"b""There were a few things going on here:\r\n1. The in-editor simulation wasn't properly registering itself as an `IMixedRealityEyeGazeDataProvider`\r\n2. You're right that this check wasn't sufficient to catch those cases anyway\r\n\r\nI've updated both."""
4498,287527461,"b""I'm not sure it makes sense to `Dispose` the keyword recognizer fully when just disabling the system.\r\nThis should also be happening already in the system's Dispose call. Are you not seeing that called reliably?"""
4498,287527630,"b""`Disable` should only really be called from the service's manager. We shouldn't need to call it here.\r\nIs a manager (maybe `MixedRealityToolkit.cs`?) trying to destroy services that it hasn't disabled yet?"""
4498,287528161,"b""[From the Unity docs](https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html):\r\n\r\n>This function should only be used when writing editor code since the delayed destruction will never be invoked in edit mode.\r\n\r\nAlso:\r\n\r\n>You are strongly recommended to use Destroy instead.\r\n\r\nDoes the order of deinitialization cause issues that can't be resolved in other ways? #Resolved"""
4498,287528647,"b""Also, are we not able to destroy using the input system's `GazeProvider` reference? Probably after a cast to `MonoBehaviour` or `UnityEngine.Object`."""
4619,288751213,"b""I'm not sure if this PR fully fixes #4579. It seems like this null setting take place within the `UnregisterService` call itself, instead of just when we're destroying every service."""
4619,288751568,"b""What's the benefit of removing this?"""
4619,288768978,"b""Should we clear the input system's reference to the focus provider?"""
4645,289461860,"b""This seems interesting. Do you know if there's a reason we're running `OnPostSceneQuery` on pointers that aren't active?"""
4263,289467678,"b'With this change, it looks like there will always be a `BaseNearInteractionTouchable` within ""touching"" distance. Previously, using `distFront` as the cutoff, we\'d only determine the closest touchable object if the pointer was within a specific distance from it (which means there might be no closest touchable in many cases). Were we missing cases with that method?'"
134,71982567,"b'Nit: Seems this can be put in docs, not really needed in a dialog.\n'"
134,71982593,b'Nit: Delete\n'
134,71982602,b'Nit: Delete\n'
134,71982648,b'Nit: Might be time to put all these long strings into a resource file.\n'
134,71993518,"b""I also don't think that this option should be a part of this process since the generation of reference projects isn't a required or recommended setup step for the HoloLens. Developers should change this option via the Build Settings window to suit their needs. Please remove this part.\n"""
134,72102193,"b'Instead of this, can we use the Main Camera prefab which is available in the HoloToolkit? That way there is one prefab with all HoloLens recommended settings.\n\nAnyone else have any thoughts on this?\n'"
134,72102381,b'I am also not sure if we should be scanning for multiple cameras as only those developers who know the specifics really well end up using multiple cameras. I would recommend sticking to the main camera prefab from HoloToolkit Utilities prefab.\n'
134,72565735,"b'What if the tooling replaced the main camera with the prefab when this ran? Could keep the same transform as the previous camera, but first setup would have things that just worked with like two clicks.\n'"
134,72569230,"b""I'm hesitant to replace anything in the scene and a prefab is a bit of an\noverkill. One idea may be to replace it and then the original is disabled.\nIn that case it seems messy though. One issue is people take existing\nscenes from their Unity projects and then bring them to the HoloLens. In\nthis case they have existing projects. Maybe they have code that looks for\nthe main camera position (by name or tag) and now we've replaced that. Its\na fringe case but entirely possible. Its easy enough to change the camera\nand tell them about it. The settings aren't major (and they may have\nalready set their clip plane to be custom ie !=0.85f and we are just fixing\nsay, the position for them. I think telling them what we've changed is the\nfriendlier way.\n\nOn Wed, Jul 27, 2016 at 9:59 PM, Josh Wittner notifications@github.com\nwrote:\n\n> In Assets/HoloToolkit/Utilities/Editor/ConfigureMenu.cs\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134#discussion_r72565735\n> :\n> \n> > ```\n> >              return;\n> >          }\n> > ```\n> > -            Camera.main.transform.position = Vector3.zero;\n> > -            Camera.main.clearFlags = CameraClearFlags.SolidColor;\n> > -            Camera.main.backgroundColor = Color.black;\n> > -            Camera.main.nearClipPlane = 0.85f;\n> > -            SetCameraDefaults(Camera.main, true, output);\n> >   +\n> > -            //All done with MainCamera\n> > -            cameras = cameras.Where(o => o != Camera.main).ToArray();\n> \n> What if the tooling replaced the main camera with the prefab when this\n> ran? Could keep the same transform as the previous camera, but first setup\n> would have things that just worked with like two clicks.\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134/files/3933b816638f8cce7b4dc9c87ac4fbcaadee4ded#r72565735,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABqPDRn2UZ0GwRyGq7RKiYuotBmH7za4ks5qaDc1gaJpZM4JTeQs\n> .\n"""
134,72569344,"b'In the field, most people I see want project default setups and aren\'t\nusing the HoloToolkit yet. Assuming they d/l the toolkit to get this\nfeature they won\'t be using the prefab. Also developers I\'ve seen take\nexisting content and try to bring it to the HoloLens, another case they\nwouldn\'t be using the prefab. They also may have no idea about the prefab.\nIn that case no reason to replace it, just update the existing camera and\ntell them what changed so they are aware of behavior and its not black box.\n\nOn Mon, Jul 25, 2016 at 10:00 AM, Neeraj Wadhwa notifications@github.com\nwrote:\n\n> In Assets/HoloToolkit/Utilities/Editor/ConfigureMenu.cs\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134#discussion_r72102381\n> :\n> \n> > -            Camera.main.transform.position = Vector3.zero;\n> > -            Camera.main.clearFlags = CameraClearFlags.SolidColor;\n> > -            Camera.main.backgroundColor = Color.black;\n> > -            Camera.main.nearClipPlane = 0.85f;\n> > -            SetCameraDefaults(Camera.main, true, output);\n> >   +\n> > -            //All done with MainCamera\n> > -            cameras = cameras.Where(o => o != Camera.main).ToArray();\n> >   +\n> > -            //Check remaining cameras\n> > -            if (cameras.Length > 0)\n> > -            {\n> > -                foreach (var camera in cameras)\n> > -                {\n> > -                    Debug.Log(camera);\n> > -                    var cameraDetails = string.Format(""Update this camera for HoloLens defaults? \\r\\nThis will set position to 0,0,0 (on MainCamera only) and background color to Clear Flags:Solid color(Black). \\r\\n \\r\\n---------------\\r\\nName: {0} \\r\\nPosition: {1}\\r\\nTag: {2}\\r\\n---------------"",\n> \n> I am also not sure if we should be scanning for multiple cameras as only\n> those developers who know the specifics really well end up using multiple\n> cameras. I would recommend sticking to the main camera prefab from\n> HoloToolkit Utilities prefab.\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134/files/3933b816638f8cce7b4dc9c87ac4fbcaadee4ded#r72102381,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABqPDXCfL38dR8v-i17IwQyEa6okeBE2ks5qZOu1gaJpZM4JTeQs\n> .\n'"
134,72569575,"b'I\'d totally agree but the sample(s) (fairly recently unless changed)\nrecommended this in at least one location as such I\'ve seen most people use\nit in the field. I don\'t use it unless necessary (and its caused issues\nwith a recent unquoted space name) but just following default convention on\nthis. Most don\'t realize what it does.\n\nOn Sun, Jul 24, 2016 at 12:04 PM, Josh Wittner notifications@github.com\nwrote:\n\n> In Assets/HoloToolkit/Utilities/Editor/ConfigureMenu.cs\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134#discussion_r71993518\n> :\n> \n> > ```\n> >      {\n> >          // Build settings\n> > ```\n> > -            EditorUserBuildSettings.SwitchActiveBuildTarget(BuildTarget.WSAPlayer);\n> > -            EditorUserBuildSettings.wsaSDK = WSASDK.UWP;\n> > -            EditorUserBuildSettings.wsaUWPBuildType = WSAUWPBuildType.D3D;\n> > -            output.AppendLine(""*\\* Checking Build Settings for WSA"");\n> > -            bool isWsa = EditorUserBuildSettings.activeBuildTarget == BuildTarget.WSAPlayer;\n> > -            bool isWsaSdk = EditorUserBuildSettings.wsaSDK == WSASDK.UWP;\n> > -            bool isDirect3D = EditorUserBuildSettings.wsaUWPBuildType == WSAUWPBuildType.D3D;\n> > -            bool isUnityCSharpProjs = EditorUserBuildSettings.wsaGenerateReferenceProjects;\n> \n> I also don\'t think that this option should be a part of this process since\n> the generation of reference projects isn\'t a required or recommended step\n> for HoloLens development. Developers should change this option via the\n> Build Settings window to suit their needs.\n> \n> \xe2\x80\x94\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/Microsoft/HoloToolkit-Unity/pull/134/files/3933b816638f8cce7b4dc9c87ac4fbcaadee4ded#r71993518,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABqPDUg0OszDIfc7QwCNs8lfRaIg442qks5qY7dEgaJpZM4JTeQs\n> .\n'"
134,72722515,"b""I agree that many developers will want to enable this change to make development easier, but it's not a HoloLens configuration property and so we should leave it untouched in this code.\n"""
134,72722672,"b""I think you're right regarding the swap with the prefab. I think applying the camera changes via the configure menu makes more sense.\n"""
134,73005672,"b""Exactly, it's not a black box that is why everything is documented [here ](https://developer.microsoft.com/en-us/windows/holographic/camera_in_unity)which also points to the HoloToolkit Main Camera prefab. We should get developers in the flow of the docs and the toolkit. I am sure you can help with that :)\n"""
134,73006363,b'I do find this useful in general development. Just another thought :) And Adam is right the tutorials do recommend this to make development easier.\n'
219,79310753,b'Nit: Spelling: Recommended\n'
219,79310760,b'Nit: Spelling\n'
219,79310851,"b'Perhaps ""Recommended with Internet Access"" would be clearer\n'"
219,79322778,"b""Agreed. And I wouldn't call it a Nit either. It should be fixed.\n"""
219,79322780,b'Agreed\n'
219,79322782,b'Agreed\n'
219,79903183,"b'Nit: @ strings are difficult to maintain, better off just throwing this into a .resx, which makes localization later much more palatable. \n'"
219,80141576,"b""Internet Client is also needed for using a DictationRecognizer, which might be a less-obvious reason to check it. You'll also need it checked to use Unity's profiler. Up to you if these are worth adding to the description!\n"""
414,93314730,"b'nit: typo ""dispay""'"
392,92180041,"b""This is enforced in another script: [Enforce Editor Settings.](https://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Editor/EnforceEditorSettings.cs)  I like that it enforces automatically instead of when the user deliberately applies settings.  It also ensure's we're using [visible meta files](https://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Editor/EnforceEditorSettings.cs#L23)."""
392,92180292,b'nit: braces'
392,92180492,b'nit: braces'
392,92181640,b'nit: explicit'
392,92181797,b'Nit: missing licensing header '
392,92182590,b'Not my code. This was the original code. I can add braces if you want.'
392,92182605,b'Not my code. This was the original code. I can add braces if you want.'
392,92182618,b'Not my code. This was the original code. I prefer var personally but I can change it if you want.'
392,92182647,b'Ditto'
392,92183243,"b""I'm not sure I'm following your request or guidance here. Are you wanting this to call your Enforce Editor Settings function instead of doing what it's currently doing? This is the original code as it was before I created the windows, but that doesn't mean it can't be changed. Having said that, your Enforce Editor Settings does not ask the users permissions before changing to text serialization and I seem to recall some users being unhappy about that happening automatically without their consent."""
392,92185409,"b""I'm mostly just trying to point out there's two, and wanted to open discussion to which method is best.\r\n\r\nWhen in a development environment, where many people are regularly committing to shared repositories, it's best if the unity editor has both Serialization and Visible Meta files enabled.\r\n\r\nI can only see the usefulness of having binary when building final applications, but generally this is done by either one person, or an automated build agent.\r\n\r\nThe final assets get optimized by Unity during build time anyway."""
392,92191992,"b'I\'m very much in agreement with you about leveraging text serialization and visible metadata files when sharing Unity projects with a team. However, the only reason text-based serialization is enabled in this context is because some of the settings we want to change (namely enabling VR for WSA and adding HoloLens as a VR device) are not exposed via APIs. Therefore we have to change them in the project file, which is obviously much easier to do if the project is text instead of binary.\r\n\r\nWe could add an option here to turn on visible metadata as well, but that\'s not really a ""HoloLens setting"". It\'s more of a workflow setting so I don\'t feel it belongs in this window. I\'m open to hearing feedback from others on this though. The way I wrote these windows it\'s extremely easy to add new options.'"
392,92199441,"b""I agree, that's why it's in the other class, because really these are not HoloLens specific editor settings."""
392,92231234,b'nit: remove empty line'
392,92231281,b'nit: empty line space'
392,92231340,b'nit: empty line space'
392,93957989,"b""I wonder if we should respect Unity's/Microsoft's casing\xc2\xa0here like:\r\n1. Instead of Wsa to WSA\r\n2. Uwp to UWP"""
392,93958045,b'I agree explicit declaration does make the code more readable. Thanks Jared for updating!'
392,93958448,b'Have these and above strings been verified with Unity 5.5? I remember some of them changing.'
392,93958471,b'I vote for improving it :)'
392,93958566,b'Agreed this is not a HoloLens settings hence makes more sense\xc2\xa0in the other class.'
392,94458011,"b'[.Net Capitalization Conventions](https://msdn.microsoft.com/en-us/library/ms229043(v=vs.110).aspx) dictate that the PascalCasing convention be used for all identifiers except parameter names. A special case is only made for two-letter acronyms (not three letter acronyms).\r\n\r\nAlthough Unity does upper case three letter acronyms and Microsoft does upper case three letter acronyms in C++ code, Microsoft does **NOT** upper case three letter acronyms in UWP code. Feel free to search the [Windows API reference for Windows Runtime apps](https://msdn.microsoft.com/en-us/library/windows/apps/br211377.aspx) and you will find that no three letter acronyms (including UWP and WSA) are capitalized.'"
392,94458204,"b'Yes, this code has been tested and verified with the final shipping version of 5.5'"
747,130730956,b'What is the purpose for having a special UI and list of scenes in the SceneLauncher? Previously the list of scenes was automatically generated from the list of scenes the user specified via the built-in Unity scene list in Build Settings. With this change there will be two mostly-equivalent lists and UIs.'
747,130734446,"b""Is the intent to here to keep the Scene Builder list up-to-date with the build settings? It seems like this may miss some cases such as:\r\n* A scene is removed from the build settings and a different one is added. (Lists will have the same length, but different elements.)\r\n* Build settings are updated without opening the SceneLauncher prefab in the inspector, so update doesn't occur.\r\n* Build settings are updated while SceneLauncher prefab is already open in inspector, so OnEnable isn't called again.\r\n* SceneLauncher prefab is modified by this function, but Unity is closed without saving the change to the prefab. (Would editor code be required to mark it dirty or save the prefab?)"""
747,130772779,b'This just makes it easier to add scenes to the build settings without having to go through the build window.'
747,130773160,"b""I'll double check to make sure that these cases are covered."""
747,130931550,"b'It\'s an interesting idea, but I don\'t like the way it is turning out. It adds a lot of complexity to have the code for an editor that is duplicating the build settings functionality, it could be surprising that editing a list in the scene launcher also changes your build settings, and also it is complicated to keep the two lists in sync. Here are some alternatives I would consider:\r\n1) Revert to the previous approach where the user specifies scenes using the build settings via the standard Unity API and using SceneList.cs to persist a list of the scenes when builds are created. Optionally, a custom editor for SceneLauncher could have text informing the user that the scenes that are available can be selected via Build Settings.\r\n1) Maintain a completely different list in SceneLauncher. This isn\'t exactly what HoloToolkit needs, but some projects might want to have a long list of scenes in the build, but only have a subset of those scene launchable from the SceneLauncher menu. For example, a project that uses additive scene loading where some of the scenes can\'t run by themselves wouldn\'t want all of them to be launchable. Giving the SceneLauncher its own list without trying to tie it to the build settings might simplify things. Additionally, it would be nice to have a custom editor for SceneLauncher with a utility buttons for ""Add All Scenes from Build Settings"" so that users who want everything don\'t have to manually add scenes one at a time. Unfortunately, scenes are added to HoloToolkit all the time and people probably wouldn\'t think to go into SceneLauncher and click the button to add their new scene. So SceneLauncher would probably fall out of date and only launch some of the scenes that are available.\r\n\r\nWhat do you think, Stephen?'"
747,130932797,"b""I'll have to get back to you on this. I've got a few other priority items to take care of."""
747,133355191,"b""> - A scene is removed from the build settings and a different one is added. (Lists will have the same length, but different elements.)\r\n\r\nIn my latest update this is no longer possible.\r\n\r\n> - Build settings are updated without opening the SceneLauncher prefab in the inspector, so update doesn't occur.\r\n\r\nDo you mean that it isn't serialized into the prefab?  Then I believe you are correct this does not handle that edge case.\r\n\r\n> - Build settings are updated while SceneLauncher prefab is already open in inspector, so OnEnable isn't called again.\r\n\r\nFixed.  Updates the prefab list when the user navigates back into the editor from the build window.\r\n\r\n> - SceneLauncher prefab is modified by this function, but Unity is closed without saving the change to the prefab. (Would editor code be required to mark it dirty or save the prefab?)\r\n\r\nI think making sure people intentionally save changes is better.  We could also prompt to ask if people want to save before quitting."""
747,133355274,"b""> 2. Maintain a completely different list in SceneLauncher. This isn't exactly what HoloToolkit needs, but some projects might want to have a long list of scenes in the build, but only have a subset of those scene launchable from the SceneLauncher menu. \r\n\r\nI totally agree, we should make this only show scenes we would want to switch to.\r\n\r\nWhat do you think about having a list of the scenes from the `EditorBuildSettings` with a check box that gives users the choice enable or disable the button?\r\n\r\nThat way the `SceneLauncherEditor` no longer changes the `EditorBuildSettings` and it only reads and lists the available scenes to enable/disable. (although I would like to ensure that at least the current scene is added to the build)."""
747,134817456,"b""I like this idea. Sorry I haven't had a chance to take a look sooner. I intend to do so soon if I can."""
747,134817951,"b'No worries, I definitely understand.'"
747,135599664,"b""[fixed in latest]\r\nIs this O(n^3) with three nested loops when it could be O(n^2)?\r\n\r\nThe outside for loop creates a list element for each item in the build settings. The two foreach loops check for matching scenes and assign IsButtonEnabled to the previous setting if they match. But on every check of the outer for loop it's checking all scenes (foreach EditorBuildSettings.scenes).\r\n\r\nShould it just check for the current scene in oldBuildSceneMapping without using the first foreach loop? Or could both foreach loops be moved outside of the for loop?"""
747,135631300,"b""When I open up the build settings, add a scene, and then Run in Unity then a button for the added scene doesn't show up. First I have to select the SceneLauncher prefab in order to display it in the inspector in order to get the list of buttons to update. Can we try including a [PostProcessScene](https://docs.unity3d.com/ScriptReference/Callbacks.PostProcessSceneAttribute.html) attribute that calls CheckBuildScenes so that we ensure that this update has when the app is built or run?"""
747,136219326,b'Great idea'
747,136482032,"b""There wasn't an easy way to use `PostProcessScene` attribute because it has to be a static call to the class, and our serialized properties could still be unset.  We would somehow still need to know about our prefab somehow, even if it's in the scene."""
747,136487854,"b""Btw, by default if a new scene is added it's automatically disabled unless the user goes and enables it, so I think we would want people to update this prefab anyway.  Updating the build settings, doing the post process, and then building wouldn't have made the buttons show up anyway."""
392,92181766,b'Nit: missing licensing header '
392,92182630,b'Argh! I can fix that.'
664,115734280,"b""what's this empty if statement for?"""
664,115734421,b'nit: extra lines after brackets for namespace & class'
664,115734594,b'nit: please use brackets in all if statements'
664,115734774,b'nit: extra line space'
664,115738967,"b'nit: brackets around this if else, please'"
664,115739456,b'nit: brackets'
664,120665909,b'nit: `if(!Directory.Exists(directoryPath))`'
664,122776928,b'Nit: Unity methods should be private.  Goes for OnDisable and OnGUI too.'
664,115735112,b'nit: formatting is off by one space to the right'
664,122777424,"b'Nit: Should this class be its own file?  If not, then class should be private.'"
354,92816594,b'We should probably revert this back.'
496,99440962,"b""Why are we doing this? Just\xc2\xa0because we are unable to add the externals folder into the asset package?\r\nOne of the main reasons for\xc2\xa0making it external was they are binary files that don't compile\xc2\xa0under Assets.\r\nAdding a zip file with the same stuff does not help that cause.\r\n\r\nI think we can come up with a\xc2\xa0better solution than a zip file under Assets.\xc2\xa0\r\nJust for solving the problem of mismatching SharingServer.exe binaries problem, we could always add a check in code\xc2\xa0in the Launch Sharing Service option to check version numbers. I think that would better than the zip.\r\n\r\nWhat do you think?\r\n"""
496,99441291,"b'Perhaps print a message,\xc2\xa0please download latest sharing binaries or something akin.'"
496,99446259,"b""This was just a placeholder file I meant to delete.\r\n\r\nBut the purpose of the zip file is so that users have everything they need when they import the asset package the first time. The external binaries are in the zip file and are only unpacked when users opt to use the sharing services in the HoloToolkit/Configure/Apply Project Settings menu.\r\n\r\nThe inclusion of this zip file shouldn't affect compile time, nor make it into a build."""
496,99450998,"b""But it does mean there is another copy of this\xc2\xa0uncompilable code in the repo now right? I guess that's what I'm not sure if the best option. So when someone updates the External folder they also now need to update the zip file."""
496,99459869,"b""Everything would compile fine, lol.  This PR _would_ create a duplicate of the External resources but in a zipped format (I would like to discuss exactly how we want to handle that).  Ideally this Externals folder should only live in the [HoloToolkit](https://github.com/Microsoft/HoloToolkit) and not this repo, with this repo only having the bundled external assets that could, in theory, get updated automatically (pretty much what https://github.com/Microsoft/HoloToolkit-Unity/issues/279 talks about).  Currently it would have to be done by hand, but to be honest, the main HoloToolkit doesn't really change all that often.\r\n\r\nI'm thinking about this in a couple of ways:\r\n\r\n1. This project is a simple framework for learning & sharing with the community.\r\n2. This project is for staging and deploying an asset package that people will download, either from here or the Unity Asset Store, and should contain all the resources needed.\r\n3. For advanced developers to download and tailor this project  by exporting an asset package that fits their needs.\r\n\r\nThe main goal of the bundled external resources is to ensure when people import the asset package they have everything they need to get started **all in one place**.  Currently you'd have to go and find the sharing services, download them, then make sure they're in the correct place yourself.\r\n\r\nCurrently if someone was to create a new project and import the current asset package, and try to use any of the menu items related to the sharing service they will get errors:\r\n![image](https://cloud.githubusercontent.com/assets/22268546/22616068/78f1ac84-ea73-11e6-91c8-b649dd9224c7.png)\r\nThe second message talking about manually coping some .exe is rather vague. It doesn't even give you a clue where to obtain it, considering that external folder doesn't exist if you've only downloaded just the asset package and not the whole HTK project."""
747,130736256,"b""Wouldn't we want to include all the scenes from HoloToolkit-Unity here so that the SceneLauncher is ready to run for HoloToolkit users who want to browse everything it has to offer?"""
747,130773258,"b'I thought I did just that, but it depends on if people import just the core HoloToolkit or also the Examples and Test asset packages as well.'"
747,130773658,"b'In fact, I should update the serialization to only include scenes from the core HTK.  The `SceneList` serialization will get updated anyway when people add/remove scenes from the Build Settings.'"
747,135596117,"b'Need to add a step to the instructions:\r\nAfter adding scenes to the build, you can use the Scene Mapping setting in the SceneLauncher prefab to control which scenes are included or not included in the SceneLauncher menu.'"
747,135600857,"b""Would it be better to keep this inside the scene instead of using a prefab? When the user wants to modify and test SceneLauncher settings, they are likely to open and the SceneLauncher.unity scene. But you can't change the IsButtonEnabled settings from that scene. Instead you have to go to the SceneLaucher.prefab in order to change them, adding an extra step and a little bit more knowledge needed in order to use SceneLauncher. Ordinarily I'm in favor of breaking settings into prefabs so that scene is easier to manage, but this scene is already pretty simple.\r\n\r\nThat's my thinking, but I can also appreciate the cleanliness of using a prefab, so if you feel strongly about this a prefab is OK with me."""
747,135629053,"b'Let\'s make the keyword Scene Launcher. Possibly also include ""Scene Loader"" as an additional alternative, but the main keyword should match the name of the scene.'"
747,136219066,"b""Agreed, I'll see what I can do."""
747,136219153,b'Updated'
747,136486192,b'Done. I also removed step 2 because the refactor gave the ability to put the scene at any index.'
747,137118552,"b'In addition to the README.md, the instructions also appear in on-screen in the SceneLauncher prefab. Should add the ""After adding scenes to the build, you can use the Scene Mapping setting in the SceneLauncher prefab to control which scenes are included or not included in the SceneLauncher menu."" step to these instructions as well.'"
747,137121835,b'This needs to be changed to Scene Launcher. Scene Loader is the old input source keyword that no longer fires.'
747,137130939,"b'Huh, I thought I updated that, sorry!'"
747,137131031,b'Will do.'
747,137703526,"b""For me, this text overlaps with the scene launcher buttons. Too many \\n newlines? It seems to line up better if there is just one carriage return after each sentence. Personally, I don't mind having to scroll way over to read lengthy text--I might even prefer that to making the block much taller.\r\n\r\nHere is what I'm currently seeing:\r\n![instructionsoverlap](https://user-images.githubusercontent.com/17389739/30195101-41dc0648-940c-11e7-94db-3a8f8aaafbba.png)\r\n"""
747,137703676,"b""\xf0\x9f\x98\x82\xf0\x9f\x98\x82\xf0\x9f\x98\x82 I can't win """
747,137703742,"b""I didn't think about what it looks like in the scene after the buttons got generated. I'll have a fix in a bit after dinner."""
386,91839988,b'Not sure how this new line was added?'
484,98757841,b'Thanks for helping fill out this documentation!'
484,98772125,b'No worries!'
547,107219300,b'Should this be a Scenes folder under Tests following the convention in other folders?'
5402,306909625,b'Should I:\r\n1. Assert that this index is the mapping I expect it to be (based on InputType or something)\r\n2. Iterate through the mappings to find the one I want (based on the same criteria)'
5402,306912891,"b"">do you know if they'll still hit the null exception\r\n\r\nThey won't. The only thing they'll experience is the clicker and voice sending events without mapped actions."""
5370,306936773,"b"">/Assets/MixedRealityToolkit.Tools/DependencyWindow\r\n\r\nLooks like this was added before your PR, but I don't think a relative link like this resolves to anything in our generated docs."""
5370,306943745,b'```suggestion\r\nOften taking screenshots in Unity for documentation and promotional imagery can be burdensome and the output often looks less than desirable. This is where the [ScreenshotUtility](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Tools/ScreenshotUtility) class comes into play.\r\n```'
5370,306943862,b'```suggestion\r\nThe ScreenshotUtility class aides in taking screenshots via menu items and public APIs within the Unity editor. Screenshots can be captured at various resolutions and with transparent clear colors for use in easy post compositing of images. Taking screenshots from a standalone build is not supported by this tool. \r\n```'
5369,306959261,"b""I was about to write this same comment! I think I'm mostly agreed with the conclusion here, where the more common data provider to pointer relationship seems more muddled with the gaze provider than any of the hand / controller pointers. On initial thought, I'm not sure about the GazeProvider doing its own raycast (to try to get it to follow the pattern of the other providers / pointers as much as possible), but its possible we'll need to special case it."""
5402,306973964,"b""Whoops, I went down path 2 before I saw your response. I can revert pretty easily to the other, but I'm good either way"""
5415,307002571,"b""If we pass this an argument it doesn't support (`-find`), does it error or just not find anything?"""
5421,307443767,b'Do we want this to keep its voice command?'
5421,307444058,b'Is this new GameObject intentional?'
5429,307506712,b'Oh whoops haha definitely'
5429,307517452,b'Added'
5330,307525341,b'Would we want to separate this out into an `IMixedRealityGraphicsRaycastProvider` instead?'
5330,307539257,"b'That was mainly my thought, about only wanting to implement one. Worst case, they can copy over the existing implementation, which is just a single line anyway\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/d097f5b87365296b936b364da36630643e118fbd/Assets/MixedRealityToolkit.Services/InputSystem/DefaultRaycastProvider.cs#L39'"
5432,307559741,b'Did you mean to add all these to the .gitignore?'
5379,307564659,"b'>for near interaction pointer.Position returns the palm position\r\n\r\nHuh, I thought we moved the grab pointer to ~a point between your index finger and your thumb~ actually it looks like we just put it right at the position of the index finger? Via:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/3c98d9c582e90214fa4685dc02ae78553c36c492/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/SpherePointer.cs#L87\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/3c98d9c582e90214fa4685dc02ae78553c36c492/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/SpherePointer.cs#L102\r\n\r\nand\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/3c98d9c582e90214fa4685dc02ae78553c36c492/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/SpherePointer.cs#L120\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/61920724-68417000-af0f-11e9-86c2-668103c9f205.png)\r\n'"
5051,307822927,"b"">does MRTK make any guarantees about the timing of the hold/manipulate gestures\r\n\r\nI don't believe so. We just forward those events along from the gesture recognizer and don't synthesize them for other platforms"""
5379,307824227,"b""~Ahh interesting. Since we use `pointerPosition` as the origin of the raycast due to its use in updating `Rays[0]`, it feels like we might have a missed setting or something somewhere to update the position to the same value.~\r\nDidn't see @julenka's responses while drafting that comment. I understand better now, cool!\r\n\r\n>but will it work for all pointers\r\n\r\nIt should! Hopefully all pointers have their rays updated properly to where they should be raycasting from (which feels like it should be their position?).\r\n\r\n>Currently what we're doing here works grand.\r\n\r\nSounds good!"""
5051,307828609,"b'Since we now check that the action is set before even spinning up this `GestureRecognizer`, do we want to do the same for the manipulation/hold/tap recognizer?'"
5432,307831032,b'I think I can revert. One sec!'
5432,307831489,b'Done!'
5051,307839001,"b"">IIRC, going into navigation mode also turns off hold (and now tap)\r\n\r\nOh huh, I thought we had done some tests a while back and found that wasn't the case, but I could be misremembering."""
5458,308485965,"b""Oh, since this is a private function, the summary / remarks don't actually get published anywhere :/"""
5455,308486176,b'```suggestion\r\n        /// The visible mesh material in use by the spatial mesh observer.\r\n```'
5458,308819713,"b""Cool yeah, I can put a more full link in. I was thinking more getting an xref working, which isn't super translatable while reading to figure out exactly where you need to go."""
5458,308823435,b'Added'
5473,308952310,b'Does this path resolve properly even when consumed via Nuget?'
5473,308952628,"b'Also, I think there was some work done previously to support the MRTK in different locations / folder names than the default'"
5473,308953398,b'This file I think https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs'
5443,308978505,"b""There might be a perf concern around calling `TryGetService` potentially every frame, or even multiple times per frame.\r\n\r\nI think the current service lookup with the registry is more performant than the original one, which is when we wrote this pattern with the caching of services, but it still might be good to make sure we aren't regressing performance with this change.\r\n\r\n@davidkline-ms """
5443,309330228,b'@SimonDarksideJ Changing the `ActiveProfile` at runtime tears down all services and spins up new ones.\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs#L91'
5473,309429926,b'nit: inconsistent syntax between this (`get { }`) and the ones following (`get =>`).\r\n\r\nCould we turn them all into `private string Foo => MixedRealityToolkitFiles.Bar()`? :)'
5480,309466547,b'Could we add an additional parameter to the existing yml called `publishingEnabled`?'
5480,309466691,"b""I guess we'd have to create a new pipeline either way (I thought of this first as a way around that), but at least removes some duplicate code? (mostly the other file)"""
5483,309478706,b'Incomplete?'
5526,310878476,"b'Is there a benefit to this change, or just more clear scoping?'"
5526,310879718,"b""I think I had this conversation at some point, but do we still prefer this custom `DocLink` attribute to Unity's built-in `HelpURL`?\r\n\r\nhttps://docs.unity3d.com/ScriptReference/HelpURLAttribute.html"""
5526,311163496,"b""Agreed for sure about being more obvious! I don't remember the exact consensus from the previous conversation"""
5530,311257764,"b""![image](https://user-images.githubusercontent.com/3580640/62574456-6485e580-b84d-11e9-8e98-ea4f4af69aa5.png)\r\nDoesn't look like this line prints"""
5493,311290329,"b""Is this correct? This class isn't a `ScriptableObject`"""
5493,311291751,b'```suggestion\r\n                return HasFocus ? InteractableStates.InteractableStateEnum.Focus : InteractableStates.InteractableStateEnum.Default;\r\n```'
5532,311320525,"b'```suggestion\r\n        [Tooltip(""How solver will orient model. None = no orienting, TrackedTarget = Face tracked target transform, SurfaceNormal = Aligned to surface normal completely, Blended = blend between tracked transform and surface orientation"")]\r\n```'"
5541,312114394,b'Good catch!'
5578,312601607,"b""There's another mapping profile as well (not sure what the difference in mappings is, if we could squash them into the default):\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/prerelease/2.0.0_stabilization/Assets/MixedRealityToolkit.Examples/Demos/Input/Scenes/InputActions/InputActions.MixedRealityControllerMappingProfile.asset#L2192"""
5589,312650489,b'No longer need to `Load`?'
5610,313105641,"b""Agreed! I'll file an issue about InternalGazePointer"""
5610,313107148,b'https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5612'
5613,313143041,b'Find and replace `ga` :P\r\n\r\n```suggestion\r\n        InputSystem?.Register(gameObject);\r\n```'
5613,313143066,b'```suggestion\r\n        InputSystem?.Unregister(gameObject);\r\n```'
5613,313143124,b'```suggestion\r\n- `KeepOrientationVertical` public property has been added to control whether orientation of associated GameObject remains vertical\r\n```'
5618,313158489,b'This (and quite a few other properties below) had their setters removed in this PR. Was this intentional?'
5627,313550804,"b'It looks like one side effect of this would be that we can no longer use the eye gaze pointer in combination with near interaction, which I think I remember was a use case some of our partners wanted / were using.'"
5631,313581163,b'Is this now superseded by `PlayerSettings.SetVirtualRealitySupported`?'
5648,313989759,"b""Shouldn't this stay the same?\r\n\r\n```suggestion\r\n    public partial class MixedRealitySceneSystem : BaseCoreSystem, IMixedRealitySceneSystem\r\n```"""
5687,314823013,b'This sample does exist: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/prerelease/2.0.0_stabilization/Assets/MixedRealityToolkit.Examples/Demos/EyeTracking/Scenes/EyeTrackingDemo-05-Visualizer.unity'
5736,316319543,b'I *think* I saw that this was fixed in the latest VS 2019\r\n\r\nhttps://github.com/microsoft/msbuild/issues/3746'
5756,316819352,b'Do we care about profiles in the examples folders?'
5771,317324265,"b""I think this change will break most existing services, which don't explicitly mark the editor as a supported platform (like WMRDeviceManager) when running in the editor:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/WindowsMixedRealityDeviceManager.cs#L26"""
5771,317325165,"b""The idea here was that you care more about the active build target in the editor than the fact that you're in the editor.\r\n\r\nI added the editor as an explicit target to mark editor-only services, which did muddy the definition a little bit (for example, you can't currently mark something as in-app only, ignoring running in the editor)."""
5771,317325190,b'There may be some more changes needed here'
5771,317325364,"b'Removing this would make things a little less configurable, i think, since all services that *can* run in the editor *will* run in the editor, even if one only runs when the build target is Standalone and one only runs when the build target is UWP.'"
5797,318284951,b'This may be super useful for https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5771\r\n@Troy-Ferrell '
5811,320412619,"b'Is this meant to mirror the MRTK\'s namespaces?\r\n\r\n```suggestion\r\nFor example, an input data provider created by the Contoso company may be ""Contoso.MixedReality.Toolkit.Input"".\r\n```'"
5811,320413372,b'To match the `CustomEditor` attribute:\r\n\r\n```suggestion\r\npublic class MixedRealityInputSimulationProfileInspector : BaseMixedRealityToolkitConfigurationProfileInspector\r\n```'
5811,320413971,"b'```suggestion\r\nOnce created, the data provider can be registered with the input system and be used in the application.\r\n```'"
5811,320414486,"b""This is a super nit, but there are quite a few spots in these docs where lines have a newline in the middle of them (like here, with one word alone on a new line). Though it doesn't have an effect on the rendered docs, it reads a little weird in the raw markdown."""
5811,320414811,"b'Same as my previous question about these example namespaces:\r\n```suggestion\r\nFor example, a spatial awareness data provider created by the Contoso company may be ""Contoso.MixedReality.Toolkit.SpatialAwareness"".\r\n```'"
5811,320442275,b'Ah that makes sense!'
5864,320486653,"b""```suggestion\r\n        but empty doccomments don't add value to code.\r\n```"""
5876,320890696,b'Why did this move out of `SetupDefaultInteractions`? Is that not being called or not being called reliably?'
5876,320891248,b'```suggestion\r\n# Mobile Devices SDK (Android / iPhone)\r\n```'
5876,320892635,"b""I'm not sure I understand this change. Why would we start the touch when the touch phase is stationary (which I think can happen multiple times during a touch) instead of the existing start when a touch controller is added?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/5876/files#diff-11e52ac5aede93183e1852123ffc04cbL124"""
5864,321044180,"b'Do we want to just remove them or (more work, but) should we actually define them all?'"
5864,321044430,"b""I guess, as long as there's some tool that lets us also see where param / return documentation is missing"""
5890,321491004,b'Is this used anywhere anymore?'
5890,321491216,b'Is this supposed to be changed instead of commented?'
5890,321491402,b'Todo later?'
5890,321492061,b'What does this change do?'
5890,321498571,b'Have you tested in an immersive headset as well to verify some of these changes?'
5892,321543685,"b""Does Unity provide any enums for theses values we could use, to always stay in sync and know when we're not?"""
5892,321572753,b'\xf0\x9f\x98\xa2'
5892,321573021,b'It seems like this is adding a new case to this `if` (there were two on this line and now there are three):\r\n\r\n```suggestion\r\n                if (mode == RenderingMode.Cutout || mode == RenderingMode.Fade ||\r\n```'
5874,321941142,"b'This change will also require some changes to the OpenVR WMR Controller, which also uses `SingleAxis` + `*Press` to simulate a digital input from an axis:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/89fb1f941856963b0012c6755ddaf61a94d4b999/Assets/MixedRealityToolkit.Providers/OpenVR/WindowsMixedRealityOpenVRMotionController.cs#L37\r\n\r\nEither we update the grip axes there to be `Digital`, or we can reinstate this code and change the above `MixedRealityInteractionMapping`s to be `SingleAxis` as well.'"
5903,321948644,"b""We should definitely move these into the pointer at some point. Don't need to block this PR on it though, since it's existing behavior."""
5903,321948683,"b'Was this to match the behavior with source detected / input down, or was there an issue when they happen on the same frame?'"
5902,322368397,"b""Since the number of axes and buttons is explicitly set by Unity, I think we're okay here.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/64553278-f02bdf80-d2ed-11e9-8c50-85979d723089.png)\r\n\r\nI do like the idea of logging a warning anyway, but since `ControllerMappingLibrary` is an editor script and this is a runtime script, it was less straight forward."""
5902,322375357,b'Turned both 28 and 20 into consts for axes and buttons respectively.'
5908,322378440,b'@wiwei Intentional `**` at the end of the line in your suggestion?'
5914,322472129,"b""This was left over when you reverted a change to the mappings during the review of #5265 but the profiles weren't updated as well."""
5914,322475846,b'Refactored out `GetDefaultInteractionMappings()`'
5892,322557272,"b""I believe that's non-breaking: the names have changed, but the meanings/behaviors are the same both before and after `int`-wise.\r\n\r\n`TransparentCutout` -> `Cutout`\r\n`Transparent` -> `Fade`\r\n`PremultipliedTransparent` -> `Transparent`"""
5902,323868969,b'Moved this into a RuntimeTools folder in the Tools package.'
5951,324388329,b'```suggestion\r\n    /// This Async Coroutine Runner is just an object to\r\n```'
5951,324388623,b'No longer needed?'
5951,324803007,"b'I think there may have been some side effect of calling this at edit-time. Not sure if the work done since then prevents this code from being called then, so it may no longer be necessary.'"
5902,324930779,"b""Mostly some feedback that this is less of an example of the MRTK and more a tool to build new controllers for the MRTK.\r\nThis scene doesn't use any MRTK scripts, but calls directly into Unity Input in order to determine proper mappings for each button / thumbstick / etc on a physical controller.\r\nI'm happy to put it wherever people feel is most correct!"""
5967,325344520,"b""```suggestion\r\nThemes allow for flexible control of UX assets in response to various states transitions. This may involve changing a button's color, resizing an element in response to focus, etc. The Visual Themes framework is made up of two key pieces: 1) configuration and 2) runtime engines.\r\n```"""
5967,325348451,"b'```suggestion\r\nFor the given property, which can be identified by `ThemeStateProperty.Name`, return the current value set on the targeted Host  GameObject (i.e the current material color, the current local position offset, etc). This is primarily used for caching the start value when easing between states.\r\n```'"
6128,329285248,"b""This doesn't seem like a script meant for the `Tests` namespace"""
6075,329286532,"b'Huh, that seems concerning. Do you have any ideas why there might be a few frames of lag?'"
911,136511574,b'Ok'
1101,143346034,"b""I'm not sure if I understand this line quite right.\r\n\r\nAre we checking if `raycastResult.gameObject` is null, or does this return a bool, if we've hit a `GameObject`?"""
1101,143346046,"b""It's a null check since the struct requires an assignment to all properties"""
1101,143346292,"b'We should probably keep this inside the `GazeManager` class as a private struct, or at the very least move this class into the input feature area scripts/utilities folder.'"
1101,143346432,"b'Instead, I could also move all of this logic out of the GazeManager and add an extension as `EventSystem.current.Raycast(UnityUIPointerEvent, RaycastLayerMasks)`. This solves a general problem with Unity until they finally fix their `RaycastAll` method to sort by separate canvases first.'"
1101,143346474,"b""That also sounds like a great idea. I'd just like to keep all the feature area's scripts together in their respective folders.\r\n\r\nI'm slowly trying to decouple the feature areas so they can work on their own if needed."""
1101,143495795,"b""Can we confirm that this `GetComponent` isn't being called each update?"""
1101,143509191,b'It is being called each update for all raycast target UI elements in its path. This would be 1-3 elements in a properly set up UI.'
1101,143518201,"b""It seems like we're just getting the component to check to see if it's the same depth.  \r\n\r\nIs there another way we can do this?  This will impact performance too much."""
432,94476069,b'nit: please put on single line'
432,95047581,b'Will do.  This style is going to take me some getting used to :).'
432,95047798,"b""I think breaking on methods with long parameters is okay, but I think it's more for consistency."""
977,139226557,"b""It'd probably be good to check controllerState.Handedness.Equals(InteractionSourceHandedness.Left) here instead of a string comparison (and the right controller below)."""
977,139227847,"b""Can these be TextMesh instead of GameObject? It'd save having to do all the GetComponent<TextMesh>() calls below."""
977,139227931,b'Is SerializeField needed for public variables?'
977,139241803,"b""This still shows up, causing duplicate info across the text panels (though, interestingly, I don't see it in any of your screenshots). Should we remove it in favor of yours?"""
977,139261390,"b""I didn't catch this last time, but please capitalize the first letter of all the public variables here."""
977,139943220,"b'Daft question @cre8ivepark .  Why is this all using the older ""TextMesh"" components rather than the new UI system?  Just seems odd.'"
977,140019555,b'@DDReaper really either can be used. It makes no difference. '
977,140021439,"b'TextMesh will be deprecated in a near release as the new UI system is ""the way forward"". Although they haven\'t officially announced when that will be. Like the old GUI system as well when they sort out the editor UI.\r\nI agree there\'s nothing specifically wrong with it atm but it\'s not as manageable or scalable (granted, since I\'m new to MR, it might not make much difference in a inside-out 3D world :D)'"
977,140028052,"b""It's more of a performance issue."""
59,66656768,"b'Should this be something like, Make sure the asset is not null in the editor?\n'"
59,66660633,"b""The line before instantiates  DirectionIndicatorObject = InstantiateDirectionIndicator(DirectionIndicatorObject); \nIt's instantiating and setting the instantiated object back to the same variable name.  \nWe could set it to a different variable name.\n"""
1373,151797476,b'Are any of the others under .Utilities?'
1373,151798164,"b""No, they're all under `HoloToolkit.Unity`"""
1126,144147939,b'`Edit Input Manager` seems more appropriate.  Also 2 should be 3.'
1126,144148115,b'Why did this change?  Did we also change the `StartVertical` to `StartHorizontal`?'
1126,144157797,"b'Yes, four lines above this one, at line 151. I changed it so the three buttons were aligned horizontally instead of stacked vertically.'"
1126,144157974,"b""I'm blind \xf0\x9f\x98\x86 """
1256,149778293,b'Might want to break this text out into a const string.'
1256,149802153,b'Will do :)'
887,135329450,"b""What is this capability used for in the Toolkit that isn't covered by InternetClientServer? """
887,135330740,"b""This goes back to our prev conversation in the update PR haha.\r\n\r\nI'll apply those learnings."""
887,135331397,b'Sounds good!'
887,135335312,"b""The [documentation for win 10 capabilities](https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-uap-capability) hasn't been updated recently. Keeps [sending me back to win 8](https://msdn.microsoft.com/library/windows/apps/hh464936)."""
887,135351712,"b""Weird, yeah, that's definitely a stale link. [Here's the Win10 documentation](https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations)."""
1126,144148169,b'FYI Some of these changes are pending in another PR.'
1126,144158400,"b""Ahh okay. I'll revert this one."""
602,110245637,"b'Rather than indent the entire method, it may be cleaner to check the opposite condition and return early.'"
602,110245927,b'nit: project convention is to place opening braces on new lines.'
602,110245957,b'nit: project convention is to place opening braces on new lines.'
602,110246010,b'nit: remove spaces around arguments'
602,110246479,b'Can we rename this `IsNewEditorSession()` or `TrueOncePerEditorSession()` to make it more clear that its not `TrueOnceEver()`'
1126,144148333,b'Should be `CONTROLLER_MENU` because the Xbox and Motion controller shares this button mapping.'
1126,144158062,"b""True! I didn't change it originally because it only maps to the menu button on the right motion controller. `XBOX_VIEW` maps to the menu button on the left motion controller. I'm sure there are better names for the two, but I didn't come up with any in the moment haha."""
1126,144158264,"b""No, but it has a menu button. As mentioned above, our currently named `XBOX_MENU` maps to the right motion controller's menu button. Our currently named `XBOX_VIEW` maps to the left motion controller's menu button. I'm sure we can come up with better names!"""
1126,144158298,"b""Oh, wow, I didn't know that.  Yeah we should really work the names out."""
1126,144158478,"b""We could always add a duplicate entry into the `InputManager.asset` that maps to the same button, but with different names.\r\n\r\nBut I'm not sure if it's a good idea."""
1126,144372779,"b'`CONTROLLER_LEFT_MENU` and `CONTROLLER_RIGHT_MENU` could work, banking on the fact that not many people know the left button on the Xbox controller is actually called View haha...'"
1126,144373642,b'I like it! \xf0\x9f\x98\x82'
1126,144395313,b'We should also add the Xbox Controller references to the description.'
1126,144648248,"b'This class could be private, unless it needs to be public, then it should be in its own file.'"
1126,144648282,b'This enum could be private'
1126,144648382,b'Why are all these public variables camelCase?'
1126,144648439,b'Should we make this string a const?'
1126,144648522,b'Should we make all the axis names consts as well?'
1126,144650452,b'This could be made readonly'
1126,144652348,"b'Used to be private, forgot to change the casing, whoops!'"
949,137930613,"b""nit: we don't need to change the name.  Please revert."""
970,139314707,b'nit: removed extra line'
985,139465095,b'We need to wrap this to be 5.6 compatible. '
936,139834980,"b""Is there a way to append instead of replace? I'd prefer not to be destructive here."""
936,139836701,"b""Not that I'm aware of. This step is optional, and I've kept this flexible where people don't have to use the provided `InputManager.asset` and map their own.\r\n\r\nI'd also rather overwrite so there are not overlapping or conflicting mappings."""
1072,142825896,b'This causes an error on my machine.  Should be:\r\n```\r\nwebRequest.SendWebRequest();\r\n```\r\nusing 2017.2.0.f2-MRTP build'
1072,142825923,b'This causes an error on my machine.  Should be:\r\n```\r\nwebRequest.SendWebRequest();\r\n```\r\nusing 2017.2.0.f2-MRTP build'
1178,145009813,"b'Should this change to master now? Pending my PR though, I guess.'"
1178,145015214,b'Yup'
1126,153681621,b'I think we should probably make a backup copy anyway in case users want to revert their changes.'
1126,153681847,"b'I forget, but did we ever add the option to get a clean InputManager.asset or does this only add to the current mappings?  ~~What happens if users do this more than once? Do we have a way to prevent duplicate entries?~~'"
1126,153681915,b'Ahh good we do.'
1126,153862299,"b'If the box is unchecked, this script goes through and deletes all the Toolkit axes. Is that sufficient for reverting to the previous state?'"
1126,153862496,b'This only adds to the current mappings. Is there a downside to leaving the default mappings?'
1126,153887648,"b""I prefer to have a way to get a clean copy without all the extra mappings I won't need."""
1126,153907969,"b""I'm a bit on the fence.  Removing existing mappings could lead to issue, especially since most devs are already familiar and use them.\r\nBetter we simply manage our own and not interfere with other settings imho."""
1126,153909486,b'I like having the option.'
764,128363226,"b""Without some descriptive text, it's getting hard to determine whether these classes truly belong in Utilities or your examples folder."""
1049,142273734,"b'This is the HoloLensCamera prefab GUID. What about the other camera prefabs?\r\n\r\nWe should probably go down to 1 prefab anyway, which adapts to any situation.'"
1049,142277266,b'Pretty sure I updated the GUID to point to be the `MixedRealityCamera` prefab.\r\n![image](https://user-images.githubusercontent.com/13334553/31103257-d29614b2-a78a-11e7-94b1-4ce1c0e7fa83.png)\r\n'
1049,142277420,"b'@keveleigh would you prefer the `MiedRealityCamera` prefab, or the `MixedRealityCameraParent` prefab?'"
1049,142278226,"b'Weird, it was definitely a different GUID when I commented, though my window must have been out of date!\r\n\r\nIf we want to go down to 1 prefab, reusing the HoloLensCamera GUID would probably be best to maintain forward compatibility, right?'"
1049,142278584,"b"">If we want to go down to 1 prefab, reusing the HoloLensCamera GUID would probably be best to maintain forward compatibility, right?\r\n\r\nI don't think so.  I'd fear the new branch would get a lot of missing references if we changed that.\r\n\r\nI think it's fine the way it is, cause the scene settings window will just replace the camera in the scene anyway.  That way devs have the option to update and use the new prefab."""
1049,142281773,"b'Cool, in that case, MixedRealityCameraParent would be the preferred one to use. '"
1049,142282532,"b""I'll update the GUID to point to it."""
1059,142541238,b'This not starting from i=0 causes AddMixedRealityCamera to not appear in the menu'
1059,142547406,b'Fixed in #1072'
1059,142547566,b'I thought I had fixed this. Sorry about that. Must have slipped in my rebase retry.'
1256,148099488,b'Do we have added documentation anywhere saying that this setting now changes all my canvases?'
1256,148105845,b'Nope I need to update **_ALL_** the docs \xf0\x9f\x98\x85 '
1256,148368580,"b""Yeah, they need an update soon for sure.\r\n\r\nThere's nothing in the scene settings window that tells me that this option will change all my canvases. I'd say this should be a new option in the window, because I don't necessarily want my canvases all updated just to put the InputManager prefab into the scene."""
1256,148369882,"b""Ehh, Idk. You def want this change, or else none of your canvases will work with the input system.  I can't think of a reason why you wouldn't want to set it, unless you _want_ the canvas to be unusable. """
1256,148735410,"b'There are cases where you want read only canvases in any UI. Just so long as we have a plan for ""Interactable"" canvases and non-interactable canvases, we should be good.'"
1256,148797137,"b""If you don't want an interactive canvas, simply remove the event camera from it."""
1256,149497411,b'@DDReaper my latest commits have made this easier to do by asking users if they want to update their world camera to the RaycastCamera.'
1575,166762128,"b""Is this required for adding the input system prefab, or should we give the choice of one or the other instead of forcing it even if I don't check the Update Canvases box?"""
1575,166767518,b'This is required when using the input system prefab.'
1575,166768317,"b'New setups are auto opt in, while existing setups are opt out. '"
2467,203883009,"b""Do you want to destroy the GameObject?\r\n\r\nWhat if there's other components ppl are using on it?"""
2467,203885805,"b'destroying the parent seems risky.\r\n\r\nshould we just leave what we find alone if it\r\n\r\nalso, we should warn users if we find more than one pre-existing spatial mapping manager\r\n\r\n'"
2467,203902539,"b""Ahh yeah, I copied the line above which destroys the cursor's parent: https://github.com/keveleigh/HoloToolkit-Unity/blob/9525e0803aacc26dfa13b493a0f44300c656137d/Assets/HoloToolkit/Utilities/Scripts/Editor/SceneSettingsWindow.cs#L132\r\n\r\nI can update it to instead just destroy its own GameObject, like the InputSystem does (multiple times, for itself, the `EventSystem`, and the `StandaloneInputModule`): https://github.com/keveleigh/HoloToolkit-Unity/blob/9525e0803aacc26dfa13b493a0f44300c656137d/Assets/HoloToolkit/Utilities/Scripts/Editor/SceneSettingsWindow.cs#L92\r\n\r\nor should all of this behavior be updated?"""
2467,203914991,"b""I'd rather have a warning of too many spatial mapping managers and leave the existing one(s) untouched"""
6493,343911498,"b""Won't `iEvent.ClassName` null ref before that?"""
6502,343913100,"b""With `|=`, I'm pretty sure this will always return `true`, since `canInstall` is defaulted to `true` above. Seems reasonable to leave it as `=`.\r\n\r\n```suggestion\r\n                    canInstall = DevicePortalConnectionEnabled && IsHoloLensConnectedUsb;\r\n```"""
6502,343913687,b'Looks like your merge removed some recent changes in mrtk_dev'
6536,344808719,"b'Should we cache the squared `inputThreshold` in `Awake` or `Start` or somewhere, to prevent repeated math here?'"
6542,344847582,"b""Does this get used / referenced anywhere? Or is it meant for future-proofing? I don't think this can currently change at runtime"""
6542,344848836,"b""Changing the value in the inspector won't call this code path though"""
6542,344851443,b'May want to [use `Mathf.Approximately` here](https://docs.unity3d.com/ScriptReference/Mathf.Approximately.html).'
6542,344853631,"b'```suggestion\r\n                if (!Mathf.Approximately(cachedInputThreshold, inputThreshold))\r\n```'"
6549,344930789,"b'```suggestion\r\n                Debug.LogWarning(""A profile was not specified for the Unity AR Camera Settings provider.\\nApplying Microsoft Mixed Reality Toolkit default options."");\r\n```'"
6549,344931176,b'> Applying Microsoft Mixed Reality Toolkit default options.\r\n\r\nWhere does this happen?'
6549,344936171,"b'```suggestion\r\n                Debug.LogWarning(""A profile was not specified for the Unity AR Camera Settings provider.\\nUsing Microsoft Mixed Reality Toolkit default options."");\r\n```'"
6544,345316319,b'Do we know if the build machines have Android and iOS support installed?'
6563,345514666,"b""What's this folder meta? `Assets/Build.meta`"""
6533,345516561,"b""Ooh...looks like more was copied over from the `CameraCache` script than necessary. Doesn't do anything in this case and could be removed"""
6570,345917690,"b'Along the lines of https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6564 and https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1012?view=vs-2019, it might be good to also update the constructors to `protected`.'"
6570,345918153,"b'I think if you add a few spaces (3 or 4?) at the beginning here, these will appear more in-line with the list'"
6570,345929170,b'```suggestion\r\n    ![Enabling the camera system](../Images/CameraSystem/EnableCameraSystem.png)\r\n```'
6578,346100042,b'Can do!\r\n\r\nNot sure the source. @railboy?'
6591,346621998,b'Added!'
6590,346950092,"b""```suggestion\r\n    <description>Mixed Reality Toolkit provider adding support for mobile (phones and tablets) AR devices. NOTE: This package requires Unity's Package Manager AR Foundation as well as AR Core and/or AR Kit packages.</description>\r\n```"""
6608,347043684,"b'```suggestion\r\n3. If using Unity 2019.x, the assembly definition file for the Unity AR provider needs to be modified to have the **UnityEngine.SpatialTracking** reference added.\r\n```'"
6622,347657021,"b""Do we need to go out to 4 digits for these? We've typically only used 3 for MRTK."""
6622,347657448,b'Remove?'
6635,348185852,"b'Are we leaving these files in the UnityAR folder as well? Seems redundant with these one level up now, and no other subfolder'"
6647,348237955,b'Do you happen to know why this serializes an `int` instead of the actual `MixedRealityInputAction`?'
6649,348250968,"b'Should this be referencing the WSA version of this DLL?\r\n\r\n```suggestion\r\n            string dllPath = Utilities.GetFullPathFromAssetsRelative($""Assets/../MSBuild/Publish/InEditor/WSA/Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll"");\r\n```'"
6642,348614705,b'Are these tooltip text settings no longer needed? Or are they represented elsewhere now?'
6673,348793311,"b'I think the Examples Hub has its own specific profile, instead of using the default here\r\n\r\n```suggestion\r\n    configurationProfile: {fileID: 11400000, guid: 23872a85e06a8a54f9381e062152f891,\r\n```'"
6673,348793624,b'I think the Examples Hub profile needs this update as well'
6686,349272567,b'Is `stripVxCount` guaranteed to be `>1`?'
6692,349305556,"b""Hmm, good point. It's referred to as PVCamera in most of our platform docs, but I can expand it to PhotoVideoCamera"""
6692,349305975,b'I also added a documentation button next to the setting for more information:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/69374853-d991f500-0c5b-11ea-8b1f-a742d1d3090f.png)\r\n'
6692,349313218,"b""That's true. I can add a little more, but I didn't want to overload the tooltip with information and instead added a documentation link next to it to the full platform docs: \r\n\r\n![image](https://user-images.githubusercontent.com/3580640/69374853-d991f500-0c5b-11ea-8b1f-a742d1d3090f.png)"""
6692,349317818,"b'Do you think I should rename the profile entry to be more specific to that, or update the tooltip (or both)?'"
6692,349334801,b'Added some info to the WMR camera settings docs'
6692,349334838,"b'Updated, thanks!'"
6692,349351942,"b""Oh good call! I'm going to merge this as-is and add some additional info soon."""
6698,349375620,b'```suggestion\r\n        public static async void BuildAll(bool install = true)\r\n```'
6702,349669532,"b""I'm never sure which condition to put when there's an `#elif` in the middle! The original `#if` or the `#elif`?"""
6702,349670836,"b'Sometimes the checks are already within a larger `#if UNITY_WSA` check (like this case, a few lines higher), so I chose not to duplicate it.'"
6704,349703911,"b""Oh right! I didn't go through these for content so much as formatting/spelling, but I'll take a quick pass now."""
6702,349706470,b'Updated to `WINDOWS_UWP || DOTNETWINRT_PRESENT`'
6702,349706485,b'Updated to `WINDOWS_UWP || DOTNETWINRT_PRESENT`'
6704,349710358,b'Updated'
6704,349710784,b'Updated'
6704,349711049,"b""I did a quick pass on refreshing this article. I'm not against replacing it with a new doc in an upcoming iteration"""
6718,349844855,b'Should we make this part of the configurator instead?'
6718,349844888,b'```suggestion\r\n                    // Go back to the start of the file.\r\n```'
6718,349844962,b'make this a const or readonly?'
6718,349844983,b'make this a const or readonly?'
6718,349845055,"b'```suggestion\r\n    ""com.microsoft.msbuildforunity"": ""0.8.1"",\r\n```'"
6718,349845104,b'Is this how it gets written in? Any way to correct the indentation?'
6718,349845596,"b'My thought is making this opt-in. We can gate everything around the presence of the adapter, with remoting / additional feature support (like autoplanar) gated behind an opt-in.'"
6718,349856973,b'Do we need the reader for this or could we use [`File.ReadAllLines`](https://docs.microsoft.com/en-us/dotnet/api/system.io.file.readalllines?view=netframework-4.8)?'
6718,349857002,b'Similar question but [`File.ReadAllText`](https://docs.microsoft.com/en-us/dotnet/api/system.io.file.readalltext?view=netframework-4.8)'
6733,350480061,"b'```suggestion\r\nThe version 2.3.0 plan has been finalized. While some details may change as the iteration progresses, the following describes the overall plan for the next MRTK release. For the latest status of the release, please visit the [milestone page]( https://github.com/microsoft/MixedRealityToolkit-Unity/milestone/10).\r\n```'"
6733,350480648,b'```suggestion\r\n- Leap Motion support (Unity 2018 and Unity 2019)\r\n```'
6733,350481138,b'> All new platform support\r\n\r\nThere may be times we spin up support for a platform not supported by XR SDK. Would we surface this as a custom plugin for XR SDK vs MRTK?'
6731,350482577,"b""I believe this namespace just for the `APIInformation` class. The actual LSR API calls should be calling into the adapter at runtime.\r\n\r\nIf I'm remembering correctly, the API preventing converting this whole file to the adapter was the `HolographicDisplay` API calls to enable third camera render, and I hadn't yet had time to implement them back.\r\n\r\nhttps://github.com/keveleigh/HoloToolkit-Unity/blob/370beef85a2b7eb356e97816add5f77dcdd59632/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/WindowsMixedRealityCameraSettings.cs#L77"""
6742,351051798,"b""The latest fixes went into 2018.4.13f1.\r\n\r\nThere may be additional fixes in the future, but it's in much better shape at that point. Not sure exactly how we want to word that."""
6731,352414328,b'Do we want to account for the case where this #define has been set but the adapter has since been deleted?'
6731,352414492,b'```suggestion\r\n#endif // UNITY_WSA && DOTNETWINRT_PRESENT\r\n```'
6731,352414675,b'Updated'
6738,352420346,"b""Agreed, I'm not sure I understand what this is doing."""
6738,352421057,b'Can we do a null check for `CoreServices.InputSystem` instead of a `Try/Catch`?'
6738,352421228,"b'I think this should stay as an error. Having no active profile is not a state we should ever be in.\r\n\r\n```suggestion\r\n                Debug.LogError(""No Mixed Reality Configuration Profile found, cannot initialize the Mixed Reality Toolkit"");\r\n```'"
6738,352421330,"b""If this is happening because we're manually setting the profile to null for some reason, it should just be swapped directly to whichever new profile is going to be set.\r\n\r\nIf we see issues with that approach, pinging @davidkline-ms  :)"""
6738,352421474,b'@thalbern Should headers / titles for the entire page stay in caps?'
6738,352421729,b'I think Windows Device Portal is considered branding maybe and is capitalized as-is in our platform docs:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/69931962-1b9e1080-147e-11ea-85c0-62e27a9e3b27.png)\r\n'
6754,352422643,b'Should this be `0.8.*` to match the csproj?'
6754,352422810,b'Do we want to be (can we be?) a little more specific here for the MSBuildForUnity scope? `com.microsoft` is pretty large.'
6781,353263449,"b""Ah yeah, in some classes it's named `GetOrAddController`. Some inconsistent naming we can clean up."""
6783,353335250,b'Does this new `ToArray()` call not create different garbage or have a perf impact?'
6731,353490671,b'Nit: todo'
6731,353491041,b'Nit: todo'
6731,353491534,b'Nit: inconsistent indentation?'
6731,353492149,"b""Should we only add this if reprojection is set to autoplanar? Feels weird to potentially add a MonoBehaviour that won't do anything"""
6731,353492651,"b'Though I suppose if we support changing the value at runtime, this is the only way?'"
6795,353972952,"b""Looks like some whitespace changes here. We've typically had `#region`s indented as they were before this change."""
6795,353974052,"b""Use [`Application.isEditor`](https://docs.unity3d.com/ScriptReference/Application-isEditor.html) here? Since these aren't editor-specific APIs, just editor-specific behavior."""
6795,353974420,"b'nit: for readability, might be good to keep this empty line around'"
6803,354491366,b'Can we re-use the `Microsoft.MixedReality.Providers.UnityAR.Editor` assembly for this?'
6803,354491516,b'Missing summary'
6803,354491926,"b'Should we leave this for reference, just in case somebody happens to get in this state?'"
6803,354495992,b'Deleting this will cause https://github.com/microsoft/MixedRealityToolkit-Unity/blob/a8793f503f09f9c419fe78dd0699dee19fed4c75/pipelines/templates/common-Unity2019.yml#L9 to fail. Do we have a way to trigger this new path from the pipeline?'
6803,354558906,"b'Ah okay, makes sense'"
6790,354999060,"b'Looks like it returns `return errors.Count == 0`, which seems like the opposite of this statement\r\n```suggestion\r\n        /// <returns>true if no errors encountered, false otherwise</returns>\r\n```'"
6790,354999878,"b'Do we not still want to clear, in case a non-empty list is passed in?'"
6820,355644770,"b'This feels like it could be a [public property](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#do-9) for the private serialized field.\r\n\r\nAlso, please be sure to [add a summary](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers)!'"
6820,355646738,"b'We typically recommend adding a serialized backing field for Inspector visibility, with a public property if code access is needed outside this script : https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#do-9'"
6820,355646908,b'Can this be `private` to prevent the need for this tag?'
6820,355647673,b'The repo [has typically used camelCase](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions) for private fields.'
6824,356195415,"b'```suggestion\r\n1. In Unity, open **Window > Package Manager**\r\n```'"
6846,356755469,"b""When `MixedRealityProjectPreferences.LockProfiles` is true, should we update this to warn something along the lines of \r\n\r\n>You're editing a default profile. These changes may be overwritten during an MRTK upgrade. We recommend cloning for editing profiles.\r\n\r\n?"""
6781,356795836,"b'I think we may want to swap the order of `UpdateController` and `RaiseSourceDetected`, like in the old `InteractionSourceDetected` implementation.\r\n\r\nOtherwise, an app may receive button press events or source pose events before a source detected event.'"
6482,356873451,b'Missing summary tag for `protected` method'
6482,356874121,"b'Should this be marked `Obsolete`, like you did in MixedRealityServiceConfiguration?'"
6482,356874154,"b'Should this be marked `Obsolete`, like you did in MixedRealityServiceConfiguration?'"
6482,356874199,"b'Should this be marked `Obsolete`, like you did in MixedRealityServiceConfiguration?'"
6858,356925228,"b""If possible, it'd be great to move this newly `public` enum [into its own file](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files)."""
6880,357312521,"b""Turns out it looks like this code wasn't rendering in the inspector anyway.\r\nI instead made a custom inspector with the experimental feature readout"""
6880,357312644,b'![image](https://user-images.githubusercontent.com/3580640/70740244-98768900-1ccd-11ea-93f7-eb8ada4b0802.png)\r\n'
6872,357335068,"b""I have a follow-up PR I think you're going to like \xf0\x9f\x98\x89"""
6889,357367426,"b""Do you have a screenshot? I don't see much of a difference on my end"""
6889,357368522,"b'What I see, in the MS Docs renderer for VS Code (which I think should mostly match our github.io styling?):\r\n\r\nAs-is:\r\n![image](https://user-images.githubusercontent.com/3580640/70748667-476f9080-1cdf-11ea-9472-f7af3c2247b7.png)\r\n\r\nWith this change:\r\n![image](https://user-images.githubusercontent.com/3580640/70748657-40e11900-1cdf-11ea-87e4-690249aa44f8.png)\r\n'"
6889,357368723,"b"">I recall seeing after publishing once I could view it\r\n\r\nAhh okay. I'll build DocFx locally and check"""
6889,357369375,"b""Do you have https://marketplace.visualstudio.com/items?itemName=docsmsft.docs-preview?\r\n\r\n(I recommend the whole pack, if you don't have it https://marketplace.visualstudio.com/items?itemName=docsmsft.docs-authoring-pack)"""
6889,357371099,"b""Ah you're right it looks different in the generated doc (more compressed), but I feel like it looks the same on https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/Pointers.html#far-pointers?"""
6889,357371266,b'![image](https://user-images.githubusercontent.com/3580640/70749105-54d94a80-1ce0-11ea-848c-6c6ecc8253b7.png)\r\n'
6482,357374170,"b'(From other comment):\r\n\r\n>No because they all cast to the appropriate profile type. InputSystem is just weird that it does not have a unique BaseInputConfiguration class. ServiceConfiguration is meant to be generic and hence why I obsolete that one\r\n\r\nOhh I see now that the others have specific types, but this one is still `BaseMixedRealityProfile`.'"
6891,357442468,"b'```suggestion\r\n    ""name"": ""Microsoft.MixedReality.UnityAR.ConfigCheck.asmdef"",\r\n```'"
6891,357445056,"b'I think we should keep this, since the Unity project checked in here should be set up for optimal MRTK testing. Removing it may also affect the NuGet build'"
6891,357445543,"b""After thinking about it...I'm not sure if this entirely fixes #6856. The asmdef still depends on specific assemblies in the ARFoundation package. Does it resolve gracefully when the package isn't installed?"""
6482,357447240,b'These should be [private fields and/or public properties](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation)'
6482,357447756,"b""Oh! I thought `ScriptableObject`s were serializable by default.\r\nWhat's this new attribute enable?"""
6482,357454663,b'Cool works for me!'
6891,357455237,b'Looks like PR validation failed and answered my question: \r\n![image](https://user-images.githubusercontent.com/3580640/70763304-7c440d80-1d08-11ea-97bd-d0b8e28c94f2.png)\r\n'
6482,357456076,"b""I'd vote yes, since I prefer we treat all code in the repo to the same standard, but am happy to open it up for discussion!\r\n\r\nProtected classes / methods show up in our docs too (though this is a bad example, since it has public fields...might need to do an update pass on the repo): https://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.Editor.MixedRealityWireframeShaderGUI.Styles.html"""
6482,357737341,b'Works for me!'
6482,357738682,"b'I think this is my only remaining question, where it looks like both properties here use the same profile type'"
6482,357740254,b'Nit: it might be good to document these abstract methods to help explain their implementation in new classes of this type'
6482,357741089,b'Same with these virtual methods'
6895,357781827,"b'For this one could we even go one step further, or would that muddle the guideline?\r\n\r\n```suggestion\r\npublic int MyVariable => myVariable;\r\n```'"
6889,357791285,b'I replaced the img tag with markdown and resized the image to the 400 pixels specified in the img tag'
6482,357852712,"b'Should we leave these public, in case these classes to be extended if devs extend the MixedRealityCameraSystem/Profile?'"
6891,357880013,"b'```suggestion\r\n            string[] definitions = { ""ARFOUNDATION_PRESENT"" };\r\n```'"
6891,357880042,"b'```suggestion\r\n                ScriptingUtilities.AppendScriptingDefinitions(BuildTargetGroup.Android, definitions);\r\n```'"
6891,357880061,"b'```suggestion\r\n                ScriptingUtilities.AppendScriptingDefinitions(BuildTargetGroup.iOS, definitions);\r\n```'"
6891,357880076,"b'```suggestion\r\n                ScriptingUtilities.RemoveScriptingDefinitions(BuildTargetGroup.Android, definitions);\r\n```'"
6891,357880089,"b'```suggestion\r\n                ScriptingUtilities.RemoveScriptingDefinitions(BuildTargetGroup.iOS, definitions);\r\n```'"
6891,357880366,b'Do we want to move `ARFOUNDATION_PRESENT` into the asmdef constraints now?'
6891,357880638,"b'```suggestion\r\n            string[] definitions = { ""DOTNETWINRT_PRESENT"" };\r\n```'"
6891,357880660,"b'```suggestion\r\n                ScriptingUtilities.AppendScriptingDefinitions(BuildTargetGroup.WSA, definitions);\r\n```'"
6891,357880675,"b'```suggestion\r\n                ScriptingUtilities.RemoveScriptingDefinitions(BuildTargetGroup.WSA, definitions);\r\n```'"
6502,358395187,"b""I don't think `&& IsHoloLensConnectedUsb` is needed here, since we should support deploying over WiFi as well as over USB."""
6502,358404153,"b""I'm not sure I see this button in the new build window. Is there a new flow for this?\r\nSide-note: I also don't think the old description is accurate. Should be:\r\n>Pairs the USB connected HoloLens with the Build Window so you can deploy _**via WiFi**_"""
6502,358404969,b'nit: Looks like the regions are aligned with the edge instead of inline'
6502,358410903,"b""This ends up looking a little odd: \r\n![image](https://user-images.githubusercontent.com/3580640/70934976-05529180-1ff4-11ea-81ac-e9a8ed5cb933.png)\r\n\r\nsince it's capitalized as `ARM` in other places, like Unity's build window:\r\n![image](https://user-images.githubusercontent.com/3580640/70934999-14394400-1ff4-11ea-9af4-fb7fb0b1a889.png)\r\n\r\n"""
6502,358412669,b'I think this was previously `.Contains` to account for a potential port in the IP address field'
6502,358418588,"b'Does this account for `ip.Contains(EMPTY_IP_ADDRESS)`, like the previous version of this check did?'"
6502,358419403,"b'Also, I think this might miss some other cases the previous version accounted for. From the `IPAddress.TryParse` docs:\r\n\r\n>[...] if ipString is ""1"", this method returns true even though ""1"" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false. [...] Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format\r\n\r\nPreviously there was a split on `.` to ensure the address was formatted correctly:\r\n\r\n```c#\r\nvar subAddresses = ip.Split(\'.\');\t\r\nreturn subAddresses.Length > 3;\r\n```\r\n\r\n\r\n'"
6502,358422706,b'Is this automatically a successful connection? Is there any failure case?'
6502,358423000,"b'If I use a random IP, and test the connection, I see a confusing combination of messages:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/70936644-92e3b080-1ff7-11ea-8ecd-5fd66a242d13.png)\r\n'"
6502,358424953,"b""Was this case removed intentionally? Seems reasonable that we wouldn't want people editing the default local case, which shouldn't have much variation from `127.0.0.1` or `Local Machine`."""
6502,358428502,"b""`Pair HoloLens` grabbed the IP address off a USB-connected HL and added it to the connections list. I don't see that happening with `Test Connection`"""
6858,358431807,b'```suggestion\r\n        }\r\n```'
6858,358432596,"b""Does this need to be `public`? It seems like local state management that we wouldn't necessarily want other scripts arbitrarily setting."""
6858,358433108,b'Please add summary tags for these new public properties. They can match the above Tooltip text'
6502,358440277,"b""Do you have repro steps for that? I haven't seen it reported before"""
6502,358440757,b'And managing that state better while still preventing the user from overwriting it and getting into a bad state feels preferable. We probably want the local state to always be represented'
6502,358443806,"b'>So it\'s really a ""Discover Device IP"" vs a ""Pair Device"" because pairing a device with a pin is a totally separate process.\r\n\r\nAgreed! ""Pair Device"" definitely overloads with some already existing flows in a confusing way'"
6502,358447785,"b'>if I typed in 127.0.0.1\r\n\r\nThat\'s the purpose of the default local machine setting, and it auto-adds the port number since that doesn\'t change for USB deployment:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/58b51a014478bd3fcd98dd14bcb15d1e7b3cde15/Assets/MixedRealityToolkit/Utilities/WindowsDevicePortal/DevicePortal.cs#L740\r\nI didn\'t think manually adding 127.0.0.1 would be needed. Did you need to change the port to something specific for some reason?\r\n\r\n>Basically the code was trying to lock down UI input when it was a local connection...but it wasn\'t doing that in all code parts.\r\n\r\nI think we should update the other code paths that weren\'t locking down instead of removing the lock down. This ""Local Machine""/""127.0.0.1"" setting should be equivalent to the ""Device"" setting in Visual Studio, which is always there as an option. Maybe it needs a rename to be more clear? Or two settings: one for the actual PC Local Machine and one for a USB-connected HoloLens (like proposed in https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5698), since this single setting does change behavior based on if a HoloLens is attached (which is why I added the different labels based on which situation you\'re in in https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6501).'"
6502,358451519,"b""> Assets/MixedRealityToolkit/Utilities/BuildAndDeploy/BuildDeployWindow.cs -> Assets/MixedRealityToolkit/Inspectors/Setup/BuildDeployWindow.cs\r\n\r\nI'm not sure this rename makes sense. This isn't an inspector but a standalone editor window."""
6502,358451823,"b'Why not keep it contained to the existing `BuildAndDeploy` folder, where all/most of the associated code already lives?'"
6919,358563942,"b""Interestingly, this doesn't match the pasted code in https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6908 and also seems like it should resolve to `false` on first start? Since `autoResume` defaults to `false`."""
6919,358564745,"b""Oh I see this isn't the WMR class. Whoops!"""
6919,358565834,b'The AutoStart behavior is handled in Initialize in both of the derived classes:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/7c6b2907cd20d9aa8880bf4e99b457d3478a54e8/Assets/MixedRealityToolkit.Providers/ObjectMeshObserver/SpatialObjectMeshObserver.cs#L111\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/7c6b2907cd20d9aa8880bf4e99b457d3478a54e8/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/WindowsMixedRealitySpatialMeshObserver.cs#L420\r\n\r\nWe should keep the `autoResume`  behavior I commented on above here.\r\nThe intent was:\r\n\r\n1. Initialize -> autostart based on `StartupBehavior`\r\n2. Disable -> set `autoResume` if currently running\r\n3. Enable -> restart if `autoResume` is set'
6925,358917661,b'Please remove the empty `Start` and `Update` functions.'
6925,358917770,"b'```suggestion\r\n                //The user chose the ""Yes"" button            \r\n```'"
6925,358918242,b'Please remove the empty `Start` and `Update`'
6925,358918717,b'Please move these [public enums into their own files](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files).'
6925,358918990,"b'Will this be needed? Otherwise, please remove'"
6925,358919798,b'There are a few `public` fields throughout these files. We recommend updating these [into serialized private fields with public properties](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation) if code access is needed outside these scripts.'
6924,358928760,"b""We should update these to either be [serialized private with public accessors](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation) or just public properties if serialization support isn't needed."""
6924,358929498,b'Can we cache these when `manipulatedObject` is set instead of calling `GetComponent` twice every `Update`?'
6924,358930428,b'[Is this TODO tracked elsewhere as well](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#todos)?'
6924,358930704,b'nit extra space'
6924,358931742,"b'Mentioning the [encapsulation guideline](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation) again here, though this class is marked as a TODO, so it could be addressed at the same time as that.'"
6924,358931831,b'Missing documentation for these public variables'
6924,358932130,b'Missing summaries in this file'
6924,358932526,b'Can these public enums be moved [into their own files](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files)?'
6924,358932751,"b'nit: this region has some public properties as well, for those fields'"
6924,358936001,"b""We have a few other enums for axis definitions as well. I wonder if we can reuse some or replace some existing ones with this.\r\n\r\nThis one is probably the best candidate for replacement, since it explicitly defines all combinations of 1 or 2 axes, which flags are good for!\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.Utilities.PivotAxis.html\r\n\r\nThis one might be replaceable with this enum as well, though we'd have to account for the possibility of multiple values being set:\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/api/Microsoft.MixedReality.Toolkit.BoundsExtensions.Axis.html"""
6924,358937397,b'Where / how is this used?'
6924,358937741,b'breaking change?'
6924,358938881,"b'Breaking change, or does the migrationhandler help with this?'"
6924,358944767,b'Thanks for the context!'
6924,358948635,"b'I wonder if we can use `[MovedFrom(true, sourceClassName:""TransformScaleHandler"")]` to ease migration in code'"
6858,358983908,b'Ah just removing an extra space at the end of the line. Not super important!'
6919,359023889,"b""It's a bit of a change in behavior, but yeah I think I agree with you that this way is more configurable and better."""
6939,360079893,"b""Could this be made `internal` instead? It doesn't feel like something we want callable from anywhere.\r\n\r\n```suggestion\r\n        internal void EnsureControllerModel(InteractionSource interactionSource)\r\n```"""
6939,360080528,"b""nit: please wrap the following line in `{` `}`, which is the style we've been using even for single line cases"""
6939,360083949,"b""Since loading the model from the API at runtime is an async call and might span multiple frames, is there the potential that we'll either:\r\n\r\n1. Block here for a while while that loads?\r\nor\r\n2. Still return before the model has been loaded?"""
6858,360089106,"b""Ah, along the lines of https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6924#discussion_r358936001, we should definitely try to standardize out axis enums. Don't think it's worth blocking this PR right now though"""
6891,360186768,"b'I\'ve been thinking about this with some of the XR SDK work, and I think (if I\'m correctly interpreting ""break"" here) that if a type or data provider is referenced in a profile but its assembly won\'t load in the current context, then you just shouldn\'t have that type referenced. Either fix the issue (add ARFoundation, etc) or remove the type, because it won\'t work.\r\nAlso, our services should be set up properly to not try to be instantiated on platforms that don\'t support them. In which case, a red UnityARCameraSettingsProvider in my profile when I\'m set to UWP seems...reasonable? Since it\'s not valid for my current configuration but also shouldn\'t be created thanks to our platform filters.'"
6891,360187051,b'Removed'
6891,360187878,b'Fixed'
6891,360188887,"b'It looks like Unity 2018.4.13 added the same behavior as Unity 2019, where missing assembly references are ""fine"" and the assembly still loads correctly:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/71221330-211e9780-2281-11ea-9056-89283c7416b1.png)\r\n\r\nProposal: Remove this code that manually loads and writes into the assembly definition and instead update our min version to be 2018.4.13 and take advantage of Unity\'s way of handling this scenario.'"
6891,360189319,b'Updated to `ReconcileArFoundationDefine`'
6891,360190419,"b'@davidkline-ms, did you leave `.Toolkit.` out of these assemblies intentionally?'"
6891,360193967,b'I updated the asmdefs to include `.Toolkit.Providers.` like our other assemblies'
6891,360200728,"b""I went ahead and made this change, but do let me know if you have concerns or a scenario to test and I'll make sure things are good!"""
6891,360201543,b'Added'
6939,360509124,"b""I think that makes sense. We'll just need to make sure it accounts for the case where a controller was connected then lost before the model finished loading."""
6870,360550535,b'Can we reuse/extend this method:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Utilities/MathUtilities.cs#L496 \r\nor its camera extension:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Extensions/CameraExtensions.cs#L34\r\nor does this do something different?\r\nCould we add it as a math utility if it might be useful elsewhere as well?'
6870,360587365,b'Sounds good!'
6960,362570807,"b'Do you think this would make sense as an enum, in case there are other styles like this in the future (or any you can already think of)?\r\nOr does it make more sense as something in addition to other settings?'"
6863,362574543,"b'I think this was correct before:\r\n\r\n```suggestion\r\n        [Tooltip(""Used when no focus target exists and select is not pressed"")]\r\n```'"
6863,362576197,"b'Or something like:\r\n\r\n```suggestion\r\n        [Tooltip(""Used when a focus target doesn\'t exist and select is not pressed"")]\r\n```'"
6891,362630488,"b""I'm not sure I think that's a bad thing. It's at least a visual indicator that the current build settings don't support the type, then the supported platforms list prevents it from being referenced at runtime."""
6891,362630723,"b""But I'm definitely down for a different solution either way, which could just be reverting https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6891/commits/3633c8d4853b3c6c5d93300587ae81d91cac3ca5 (but maintaining the typo fixes :P)"""
6891,362928767,"b'```suggestion\r\n        /// - If AR Foundation has been uninstalled, remove the assembly references. \r\n```'"
6891,362929042,"b""Don't forget to remove this one too!"""
6977,362971937,b'Might have been accidentally added?'
6977,362972318,"b""```suggestion\r\n            /// Utilizes a cache to test if this collider has been seen before and returns current frame's calculated result.\r\n```"""
6977,362972491,"b'```suggestion\r\n        /// <param name=""fieldOfView"">Field of view for the cone which calculates its radius</param>\r\n```'"
6978,362980689,"b'We could also have a BaseSpatialPlaneObserver, and there could be one for point clouds or any arbitrary spatial representation'"
6978,362981005,"b'Ah yeah, I can update this. Copied and pasted as it was'"
6978,362981142,"b""Not sure I understand. This is a public property and doesn't need a serialized backing field."""
6978,362981497,b'This one follows the [Use [...] auto properties where possible](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers) guideline'
6978,362982214,"b""I'm not a huge fan of mixing and matching `=>` and the `{ }` syntax between getters and setters. This property's setter has multiple lines and needs the existing syntax.\r\n\r\nThough, we don't have an existing guideline on my statement! So I could go either way"""
6978,362982286,b'Updated'
6978,362982464,"b'I tried to keep BaseSpatialObserver as generic as it already was, with some additional functionality. Everything mesh-specific went into the mesh one.'"
6891,362985385,b'>until we formally require newer patch versions of 2018.4\r\n\r\nI feel that this could be a reason to do so'
6891,362985617,b'Should we explicitly add `private` here?'
6891,362985820,b'Should we explicitly add `private` here?'
6977,362995178,b'![image](https://user-images.githubusercontent.com/3580640/71755377-2a8e2f00-2e3f-11ea-8902-8e3e4407d67d.png)\r\n'
6983,363442179,"b'nit\r\n```suggestion\r\n                materialEditor.ShaderProperty(independentCorners, Styles.independentCorners, 2);\r\n```'"
6983,363442208,"b'The rest of this script looks like it uses spaces instead of tabs, which makes the spacing on these lines look odd. Please replace the tabs with spaces.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/71842435-7bd43380-3076-11ea-9d16-85f9dfa3a2dd.png)\r\n'"
6822,363515074,"b""The docs only mention:\r\n\r\n>Methods Begin and End are marked with ConditionalAttribute\r\n\r\nLooks like we might be creating an `Auto` that then does nothing because its internals are compiled out:\r\n\r\n>Begin is called in the constructor and End in the Dispose method.\r\n\r\nThough it's a struct, so the perf impacts may be minimal in this case"""
6988,363533322,b'```suggestion\r\n        true)]\r\n```'
6988,363533428,b'```suggestion\r\n        /// Is a profile explicitly required?\r\n```'
6988,363533875,"b'This seems incorrectly / misleadingly named.\r\n\r\nIn the original PR, @Troy-Ferrell asked for this to be removed: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6133/files#r332631565\r\n\r\nIs it used?'"
6988,363534653,"b'I might be missing something, but is this called anywhere?'"
6988,363535307,"b""Looks like in the original PR, it was refactored out of MixedRealityInputSystemProfileInspector.cs, but that script isn't here"""
6989,363584048,"b""This one shouldn't increase very much, if at all, and really only needs to exist while we support both legacy Unity XR and XR SDK.\r\n\r\nI'll add some comments though!"""
6989,363584233,"b'Yeah, I waffled on actually changing this namespace or not. It makes it more ""correct"", but is a breaking change, like you pointed out. I can revert'"
6989,363585725,"b""Hmm...good point. I left the full `WindowsMixedReality` in there since it's WMR-specific, which would probably make the other provider something long like...`WindowsMixedRealityXRSDKUtilitiesProvider` or `XRSDKWindowsMixedRealityUtilitiesProvider`, which matches my naming so far but is a bit wordy.\r\n\r\nI've been keeping scripts which use the existing XR pipeline with the same naming patterns we've been using (as opposed to adding `Legacy` or something) and adding `XRSDK` to differentiate."""
6989,363837307,b'Added a summary with some remarks'
6987,363841349,b'This empty return is failing PR validation'
6989,363868875,"b""It's the `ISpatialCoordinateSystem` at the root of the scene. Happy to use a different word if something else makes it more clear!\r\n\r\n>The current native root ISpatialCoordinateSystem"""
6989,363870081,"b'This change will resolve to `The current native frame IHolographicFrame` as opposed to just `The current native IHolographicFrame`, which I think is more clear.'"
6989,363870752,"b""For this static class as it's currently named and written, no. This class is specific to Windows Mixed Reality. I can still rename it though, since it's a little redundant."""
6989,363911357,"b'It may be needed here, but the existing .NET workaround was specific to marshaling the `ISpatialCoordinateSystemPtr`. It would need updating to support `IHolographicFramePtr`, and the DotNetWinRT adapter may provide a better workaround for .NET Native. Testing needed.'"
6989,363912019,b'Renamed to `UtilitiesProvider`'
6989,363912120,b'Added a note to #6922'
6989,363912832,"b""I'm going to leave this as-is, since it's only called in one place and, although a bit confusing with all the `#ifdef`s, I'm not sure moving it into a function will help overall reading of the method."""
6989,363914174,"b""We may move to a pattern like that in the future, but I've been thinking of these `Utilities` as platform-specific extensions, where we're able to implement additional platform-specific features based on Unity's native pointers. I'm only familiar with the native pointers for WMR, though other platforms may have them. When we want/need to take advantage of another platform's native pointer in the future, we can best figure out how to do that then. In my opinion, making it explicitly platform-specific is my preferred pattern, since there may not be a straight forward abstraction for each concept."""
6992,363924242,"b""Do we want to override `MixedRealityInteractionMapping`'s `.Equals()` method instead?"""
6988,363947295,b'Can the base `IsProfileRequired` be used here?'
6987,363954635,b'removed'
6983,363969949,b'One more:\r\n\r\n```suggestion\r\n\t            #pragma shader_feature _INDEPENDENT_CORNERS\r\n```'
7001,364017535,"b'Should this be 3, for a `Vector3`?\r\n\r\n```suggestion\r\n            if (vector3Array != null && vector3Array.Length == 3)\r\n```'"
7007,364338224,"b""What does this do? I can't find it in Unity's docs.\r\nBased on the name, it seems strange, since there's definitely more GUI code after it!"""
7015,364499412,b'Do we want to remove the raw URL below in favor of an in-line link?\r\n\r\n```suggestion\r\nA subset of the MRTK codebase uses PowerShell for pipeline infrastructure and various scripts and utilities. New PowerShell code should follow the [PoshCode style](https://poshcode.gitbooks.io/powershell-practice-and-style/).\r\n```'
7015,364499690,b'https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#links\r\n\r\n>Prefer links embedded in a sentence'
7013,364500228,"b""I think that's okay. As a toolkit, we're in a bit of a unique situation where we have to straddle multiple Unity versions. I don't think that's a typical thing apps and other projects consuming MRTK do.\r\n\r\nIf they're building on Unity 2019.3, they get our (and Unity's) XR SDK types. If not, this assembly doesn't mean anything to them, and never will unless they update their project."""
7013,364886680,"b""I thought about this as well. We could, as I think we may run into platforms that support a boundary but don't support XR SDK or Unity's boundary APIs.\r\nIn this case, though, I think it's more similar to my other response. Devs will either be choosing XR SDK or Unity's legacy XR for their app, and won't need to (or can't, since Unity doesn't really) support both side-by-side."""
7012,365005955,"b'Yeah, unless this is replaced somewhere in the same script, I think it should stick around. This class is intended to be used for more than just pointers.'"
7012,365006262,b'Is the gameobject name updated somewhere else now?'
7012,365007321,"b""I think this + https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7012#discussion_r365006262 will now cause pointer GameObjects to be named correctly but anything that's a ControllerPoseSynchronizer but not a pointer to not update their name"""
7013,365022514,b'Whoops!'
7013,365027173,"b""The version defines? They don't exist in asmdefs in Unity 2018, so they should be removed on reserialization automatically."""
7013,365027415,b'Updated'
7012,365379706,"b'Interesting...looking through, I thought this script used to do more as far as ""set the handedness in the inspector, then wait for a controller to be detected with that handedness and synchronize"". It doesn\'t appear to do anything like that anymore.\r\nOf course, that\'s also probably a better use case for solvers than this. I think I\'m less concerned about this removal now, since...it doesn\'t do anything? At least in the base class.'"
7018,365462332,b'Should we remove the old one?'
7018,365463176,b'Can we / do we want to reconcile this with the `Try Repair` functionality in the inspectors?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/f38399007d30bcee7d3e7ceb27c058074650a311/Assets/MixedRealityToolkit/Inspectors/PropertyDrawers/TypeReferencePropertyDrawer.cs#L224'
7018,365463289,"b'nit\r\n```suggestion\r\n            ""Microsoft.MixedReality.Toolkit.Input.InputPlaybackService, Microsoft.MixedReality.Toolkit.Services.InputSimulation"" },\r\n```'"
7018,365463330,"b'nit\r\n```suggestion\r\n            ""Microsoft.MixedReality.Toolkit.Input.InputSimulationService, Microsoft.MixedReality.Toolkit.Services.InputSimulation"" },\r\n```'"
7045,365490241,"b'Would it be possible to move the string in the last parameter out to be a variable, like is done for the lines above? For this line and the next.\r\n\r\n`private static readonly string usedMemoryString = ""Used: "";`'"
7045,365490291,"b""They're up on line 38 or so"""
7032,365908936,"b""We haven't included it in any of the main releases so far:\r\n\r\n2.1: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6251\r\n2.2: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6618"""
7032,365909510,b'Was this branch built on mrtk_dev but merged into stabilization? Looks like there are some dev branch only changes that were included.'
7049,365935603,"b""We don't want to commit these defines, but let the code resolve them when the project is loaded in the editor."""
7049,365935895,"b'Otherwise, looks good!'"
7061,366514874,b'Yep! Basically everything except the asmdef name and specific defines is duplicate logic.'
7061,366515031,"b""Ooh thanks, I'll take a look at this!"""
7061,366527159,"b'Yep! XR SDK ""core"" doesn\'t support these additional volume types, since it supports a common cross section and WMR supports more than other platforms.\r\nAs a result, there are WMR-specific extensions in the WMR XR SDK package to allow using them. I have a custom define in this assembly definition that keys off the existence of the WMR-support package for XR SDK.'"
7061,366527499,b'This is the convention we used in the existing WMR mesh observer. @davidkline-ms might be able to add more background on the implementation.'
7061,366527746,"b""Type name changed between an early XR SDK revision and now, but I didn't update the comment :) thanks!"""
7061,366547974,b'Updated!'
7070,367029974,"b'Is this something that could be removed from the base prefab as well, or is its removal specific to this prefab variant?'"
6939,367629123,"b""Yeah, I'm not super sure about that comment either. I think it's a side-effect of overriding the base `TryRenderControllerModel`, which can't have platform-specific references (like the interaction source).\r\nIt does seem like something we can pass in though, similar to what you're doing in this PR."""
6939,367629297,"b'If not, should we clean anything up? The model?'"
7084,367708870,"b'```suggestion\r\nInstead of ""RuntimeSwapparoo.asset"", it\'s possible to have some arbitrary set of profiles which apply to\r\n```'"
7087,368064381,"b""Is this the default, or the only option? I don't remember if this is configurable or not"""
7087,368064492,b'```suggestion\r\n            if (!string.IsNullOrEmpty(persistentState))\r\n```'
7088,368143461,"b""Yes! I've had that same thought in the back of my head for a bit.\r\nI think it makes sense, since, as far as Unity is concerned, the two XR paths aren't really mix-and-match. It's one or the other, and only one once we hit Unity 2020."""
7103,369131952,"b"">if the shader of the assignee is null, internally it will just be set to the MRTK Standard Shader so it's save to just check and not assign any if no material is found.\r\n\r\nIf nothing is set in the profiles (either for the global override or a platform-specific override), does it default to Unity's Standard shader, or the magenta coloring? Seems unexpected for it to default to MRTK's Standard without us setting it here, but I might be missing the other line that does that"""
7093,369162179,"b""I'm also thinking about removing this concept and replacing it with concrete static classes, the existing one for the legacy XR pipeline and a new one for XR SDK. I'm not sure there's any overlap in MRTK code where a generic one is needed, but I'm not sure how this might be used by other devs.\r\n\r\n@davidkline-ms """
7093,369178522,b'Separate PR'
6939,369308404,"b""Yeah, that's true! As long as the model correctly disables itself after load. We can run some tests for this case post-merge"""
7113,369313518,"b'```suggestion\r\n  <!-- Check if MSBuildForUnity is being used to resolve, by checking if its version is present or not -->\r\n```'"
7124,369833828,b'Base between the XR SDK and legacy implementations?'
7124,369835304,"b""It sure doesn't look like it! This was copied over from https://github.com/microsoft/MixedRealityToolkit-Unity/blame/mrtk_development/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/XR2018/WindowsMixedRealityArticulatedHand.cs#L187.\r\n\r\nIt's used in the linked class but...not really. I'll clean this up in both places (and continue investigating how we can better base class these, e.g. https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6973#issuecomment-577360562)"""
7124,369835769,b'This one only calls into WMR APIs.'
7124,369839061,b'updated'
7124,369839108,b'updated'
7124,369839209,b'Added proper #define checking a few lines lower'
7124,369851729,"b""I can refactor this out into an ArticulatedHandUtils. I think yeah, we'll eventually get rid of the legacy path, but it's possible we'll want to update this between now and then. Sharing the logic definitely makes sense."""
7096,369876731,b'Missing MSFT license'
7124,370308982,"b'I think I want to merge this as-is, then open a followup PR today refactoring out the shared code.'"
7131,370327138,b'#7132 '
7103,370327897,b'Ahh good catch. I see it now. Thanks!'
7124,370329211,b'This needs to be rotated slightly to properly match other joint orientations. Fix incoming'
7096,370335370,b'License header'
7124,370341633,"b""With the way things are currently inherited, since they each have their own dependencies on specific Unity APIs, there isn't a super straight forward way to base class this.\r\nWe could potentially go down the path I'm taking for the controller definitions sometime in the future."""
7124,370413490,"b""Gonna leave this for now. Depends on some XR SDK fixes that haven't shipped yet"""
7124,370413917,"b""Hmm...I can't think of anything specific offhand for what might be outside the WMR_ENABLED in the future. I'll move it to wrap everything"""
7124,370415502,"b""I feel like there was some reason I didn't do this initially...i'll take another look at it"""
2245,192893677,b'breaks cross platform building.'
2245,192896925,"b""What's the purpose of this one that isn't supported by the regular SolverHandler?"""
2245,192928620,"b""Plus, that's an odd name. If we need a second SolverHandler, I would prefer that it have a name that implies its purpose."""
2245,192928677,"b""Normal SolverHandlers run SolverUpdate() during the LateUpdate() on all the solvers on the game object. AdditionalSolverHandlers don't call SolverUpdate() at all, instead relying on the SolverUpdate() to update them. \r\n\r\nSimilarly, SolverHandlers call SeekTrackedObject() on all solvers when they need to reattach. AdditionalSolverHandler only calls it on the relevant solver.\r\n\r\nThis does remind me that we should require a SolverHandler component, since this relies on a SolverHandler managing SolverUpdate(). """
2245,192929540,b'@davidkline-ms Any ideas for an alternative? SolverHandlerForSecondTransform? SolverHandlerForAdditionalTransform? SecondaryTrackedObjectSolverHandler?'
2245,193145423,b'I like SecondaryTrackedObjectSolverHandler.'
1453,153679852,b'nit: extra line space'
1453,153679890,b'nit: should this attribute be directly above the class declaration and under the summary comments?'
1453,153679941,b'nit: use `CameraCache.Main`'
1453,153680041,b'Should `TracktedObjectToReferenceEnum`  be outside the scope of `SolverHandler`?'
1453,153680129,b'nit: use `CameraCache.Main`'
1453,153680137,b'nit: use `CameraCache.Main`'
1453,153681868,"b""I went back and forth on this. The reason its in SolverHandler is to prevent duplicate TrackedObjectToReference fields. Since there can only be one SolverHandler component on an object, there is no worry of having TrackedObjectToReference being set multiple times - which would be the case if its in Solver (where it was originally). While this isn't the prettiest scope when extending Solver, it makes for an extremely clear editor component experience."""
1453,157333402,"b""Line 119 doesn't have the `!`. Which one is correct?"""
1453,157333514,"b""Does this call work anymore with the change to `protected`? Though really, I feel like this pattern should be reworked. Calling a script's `OnEnable` doesn't seem like the best way to do things. Can `SolverHandler` be a `ControllerFinder`, that way we don't have to keep track of handedness in two places (`SolverHandler.TrackedObjectToReferenceEnum.MotionControllerRight` and `ControllerFinder.Handedness`)? Or perhaps `ControllerFinder` can have some events this script can register for, like `AttachToController` has."""
1544,158105941,b'missing UNITY_WSA around the WSA namespaces'
1544,158172772,b'Should/can we make this abstract to enforce?'
1544,159781728,b'Should be \r\n```\r\n#if UNITY_WSA \r\n#if UNITY_2017_2_OR_NEWER\r\nusing UnityEngine.XR.WSA.Input;\r\n#else\r\nusing UnityEngine.VR.WSA.Input;\r\n#endif\r\n#endif\r\n```'
1601,160005491,"b'So I understand, you are adding these for patch release correct?\r\nAnd will remove them later in your 2017.3 PR?'"
1601,160006350,b'Whichever comes first'
2245,192893742,b'should we go ahead and move it?'
2245,192896987,"b""I have a refactor in progress that resolves some of this. I'll retarget it for this PR and work with @Ecnassianer to get it all in at once."""
1453,153680263,b'nit; extra line space'
1453,153680304,b'nit: formatting'
1453,154765781,b'Typo? Orientation instead of Orrientation?'
1453,154765948,b'Summary please :)'
1453,154766096,b'Typo: GetOrientationRef()'
1544,158106098,b'use `CameraCache.Main`'
1544,158172910,b'odd formatting here.'
2815,219629986,b'add `private`'
2815,219673998,b'Done'
1453,153680387,b'nit; please put attribute directly above class declaration '
1453,153680438,"b'nit: formatting,'"
1453,153680501,b'nit: * 0.5f'
1453,153928845,b'Whats the reasoning here for changing Mathf.Sin(camFOVrad / 2f); to *0.5f?'
1453,153930618,b'Multiplication is faster than division '
1453,154766218,b'Consider adding Range attribute.'
1453,154766805,b'Is this comment consequential?'
1453,154767097,b'So scale gets applied to parent transform?\r\nHow does this work if the target transform is the camera?'
1453,154786726,"b""I'll remove it"""
1544,158173125,"b""If we're just defaulting the value, is it still an error, or could this just be a warning?\r\nAn error would imply that the system wouldn't continue to function if we get to this point."""
1453,153680609,"b""Pretty sure there's already a class that should help find the controllers."""
1453,153682065,"b'There is, but its folded into AttachToObject. If we abstracted the attaching functionality from the controller event logic I could axe SolverControllerFinder.'"
1453,153680638,b'nit: extra line space.'
1453,153680659,b'Do we need this?'
1453,153680756,b'Nit: move to its own file?'
1453,153680791,b'nit: move to its own file?'
1453,153682088,"b""I'll cut it. It was placeholder and didn't up needing it."""
1453,153682176,b're: both structs in SolverHandler: what is the best practice regarding own file?'
1544,158173393,"b""Why do we require this component be attached to the GameObject if we're inheriting from that class?"""
2245,192893831,b'extra line'
2245,192893884,b'could this be a property instead?'
2245,192927378,"b""It should be private, except Solver needs it for the coroutine that should be in SolverHandler. I added a TODO for making it that way with Kurtis's refactor."""
2245,194475907,"b""Let's make the name for this GameObject a bit nicer."""
2937,226127919,b'Will things like puck trackers and other accessories need to be reversed too?'
2937,226137935,"b""Likely not, but those types also likely won't go into the legacy Toolkit. We'll need to address this a little more elegantly in vNext, since the legacy Toolkit assumes that the only platform controller models we'll receive are from the Windows MR APIs.\r\n\r\nI can rework it here first if you'd prefer, but I don't think it's a scenario we'll encounter."""
2937,226388718,"b'Ah, I missed which branch this was going into!'"
2245,192893928,b'fields should be private'
2245,194476019,b'missing summary tags should match tooltip'
2245,194476272,b'extra lines'
2245,194899119,"b'should we add [Range(0f, 1f)]?'"
2245,197300085,b'Did we add the range?\r\n'
2245,197302478,b'Yep!\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2245/commits/3774baa37615255b4c92bc7b57345e9e15aac44e#diff-e39ae4e27a8b2d933242b6b4fbaf451cR15'
2245,197303172,"b""Weird it's not showing up in the diff."""
2245,197304119,"b""I see it in the full diff, but it's probably not showing up here because the comment is on the line above it.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/41750074-ca4c44c2-756e-11e8-9d0c-ca1a899e43ff.png)\r\n"""
2245,197304167,"b""I think that has to do with the way GitHub does comments. If you click the link in this section's header it takes you to the commit the comment was made on. But if you go to the file itself at the tip of my branch, you can see the range property on line 15 as well:\r\nhttps://github.com/Ecnassianer/MixedRealityToolkit-Unity/blob/SolverExampleUpdates/Assets/HoloToolkit/Utilities/Scripts/Solvers/SolverInBetween.cs"""
1453,153680836,b'nit: formatting.'
1544,158106301,b'formatting in this class seems off'
1544,158139841,"b""I'm not sure why this is happening, it looks fine in VS. I reformatted/tabified - hopefully that should fix it."""
2480,205223628,b'not used?'
2480,205226979,"b""We should be checking the value here to make sure it's within our range above.\r\n\r\n```\r\n/// <summary>\r\n/// The division of steps this object can tether to. Higher the number, the more snapple steps.\r\n/// </summary>\r\npublic int TetherAngleSteps\r\n{\r\n    get { return tetherAngleSteps; }\r\n    set\r\n    {\r\n        if (value < 2)\r\n        {\r\n            tetherAngleSteps = 2;\r\n        }\r\n        else if (value > 24)\r\n        {\r\n            tetherAngleSteps = 24;\r\n        }\r\n        else\r\n        {\r\n            tetherAngleSteps = value;\r\n        }\r\n    }\r\n}\r\n```"""
2480,205227134,b'do we really need a region for a single enum?'
2480,205227778,"b""This description doesn't really fix anymore."""
1453,153680878,b'nit: formatting'
1453,154768037,b'NIT: There are strange one space off formatting issues in this file.'
1453,154768093,b'Delete?'
1453,154768307,b'Delete?'
1453,154787010,"b""I've found this in a few places, it looks completely fine in VS. I'll do a reformat."""
1453,153680961,b'nit: formatting'
1453,153681010,b'nit: missing braces'
1453,154768937,b'Delete?'
1544,158106596,b'formatting in this class is bad too'
1544,158140787,"b""Same thing as the previous comment, it looks fine in VS. I'm not sure why this is happening. I'll reformat/tabify."""
1544,158174432,b'switch?'
1544,158174605,b'switch?'
1544,158174659,b'nit: missing braces'
1544,158174723,b'What work is there that needs to be done here?'
1544,158175013,b'Do these values get updated?  Should they be const?'
2245,194476642,b'No changes to Solver.cs did we remove the base start method from it?'
2245,194485558,b'`Start` was removed from ControllerFinder'
1563,158375640,b'Should this be a monobehaviour or maybe an extension?'
1563,158387462,"b""Hmm. It could be an extension but I'd probably still want a monobehaviour to call into that extension method as I tend to just add this behavior to gameObject or prefab that I need to sort.  """
1563,159308536,"b""We should check if it's null first before searching, that way we can give devs the option to serialize this into the prefab/scene."""
1563,159308600,b'nit; all Unity Methods should be private'
1563,159308672,b'nit: extra line'
1563,159308747,b'please use the `<summary>` tags'
173,74997292,b'NIT: Please convert these to ToolTip.\nI have heard feedback from folks that tool tips work better than summary comments in editor. \n'
173,75714868,b'Does /// mean they are commented out?\nWill this mean the ToolTip does not show up in the Unity editor when you hover over the field?\n'
173,75902067,"b""Hey @NeerajW, yes indeed that's not correct, it should be fixed ! Sorry about that.\n"""
96,69999482,b'Could you please add summary descriptions for these useful functions?\n'
96,69999841,b'Sure thing!\n'
96,70136711,"b""Assets/HoloToolkit/Utilities/Scripts/StabilizationPlaneModifier.cs(92,19): warning CS0219: The variable `lastHitDistance' is assigned but its value is never used\n"""
96,70137685,b'Deleted.\n'
96,70139305,"b""I'll believe it when I see it. ;)\n"""
96,70303063,"b'Nit: Non of the projects other const values use CAPS, maybe we should avoid it here?\n'"
96,70303637,b'Nit: Use planePosition here to mirror behavior of other implementations.\n'
96,70303960,"b'A quick search of ""private const"" shows me several values. CAPS isn\'t being used in any, though I\'m seeing a mix between lowerCamelCase and UpperCamelCase. Is there a preference?\n'"
96,70304097,b'Why not use Time.deltaTime here to calculate the true velocity?\n'
96,70304650,"b""Because velocity is only sometimes updated, and tracking can be controlled externally, there are cases where the previousPosition wouldn't represent last frames position, but instead the last frame that tracking was enabled. Maybe make TrackVelocity a property and reset previousPosition when going false->true.\n"""
96,70304883,"b'If this only tracks TargetOverride\'s last position, we should make it\'s name more clear - ""targetOverridePreviousPosition"" or analagous.\n'"
96,70306106,b'@NeerajW do you have a sense of our standard here? Does it differ from the private/public camelCase/PascalCase standard?\n'
96,70322508,b'StyleCop recommendation is PascalCased for const.\n'
96,70346367,"b'Based on previous experiences, my team was under the impression that we wanted to pass in a value based on how fast the app should be running or how quickly the stabilization system updates, because otherwise it will be slightly off for the frame when being set.\n\nHowever, I tested it with the Time.deltaTime and found it to work solidly.\n'"
96,70353394,"b""I could understand calculating velocities across different time intervals (e.g. to capture a smoothed velocity), but I don't get why you'd want to pass in an inaccurate velocity as would be the case if the app here wasn't running at FOCUS_POINT_FRAMERATE. Any docs/forums point you in this direction? Or just general experience?\n"""
96,70356016,"b""This is looking better, but now I realize you've got the same issue with late sets of the `TargetOverride`. If that variable changes we should clear the previous position as well.\n"""
96,70358459,"b'Fixed, though this comment is still visible.\n'"
96,70360404,"b'If someone sets `TargetOverride = null` after having set it to a valid Transform, this will throw an exception.\n'"
96,70360478,"b""Probably because I didn't put it on an affected line. =(\n"""
708,119958993,"b""StartAwareSingleton isn't necessary for input to work, but it is analogous to StartAwareBehaviour which is already in HoloToolkit, so I feel we should take this addition.  It was very useful when making our app.  Anyone feel strongly that we shouldn't?"""
1717,168244587,b'Do we want to check if application is editor and use destroy immediate if true?'
1717,168271257,"b'Possibly but this PR was only to future proof the current functionality rather than change it.\r\nBetter we have a separate PR to review ""Destroy""s use through out the project?'"
99,69936708,"b""Please follow variable naming convention in this file. I don't believe variables start with _.\nExample: stripTagsRegex\n"""
99,70170659,b'Will do\n'
99,70324933,b'Should this be removed?\n'
99,70324996,b'Typo: case -> cause\n'
99,70325303,b'Typo: Two periods\n'
99,70388403,"b'Yes, it should. I left it in here becuase it took me a long time to find an RE that actually worked but in the end I plumped for the brute force method as it would allow a progression to encoding in SSML instead of text.\n'"
221,79680294,b'NIT: This class does not follow the naming convention typically followed for public fields.\n\npublic TextToSpeechVoice Voice;\n'
221,79680428,b'True for other fields as well.\n'
221,79700691,"b""Ahh. I see. I've spent all these years only using fields for private use and only exposing properties. Therefore I've been in the habit of making fields camel case.\n\nI'm happy to fix this, but how do you guys recommend I proceed? I can fix just the Voice field or I can fix all of them. If I fix all of them, what are the potential consequences with Unity serialization? For example, any existing project that has TextToSpeechManager in the scene will have the Audio Source serialized to audioSource. Does Unity handle the case change or will it break the scene? And if it breaks, are we OK with that?\n\nLet me know what you think and I'll change it.\n"""
221,79708538,"b""I'd eliminate all the public fields (go private) and expose properties only.\n"""
221,79739642,"b""Do others agree with this? The fields have to be serializable or they can't be set in the inspector, but I'm ok with making them private and exposing properties. And again, just want to make sure we're OK with a potentially breaking change. I am if you guys are.\n"""
221,79739974,"b""Actually, I take that back. If we do SerializeField and wrap that field in properties we shouldn't be creating a breaking change. I'll make that change now and update.\n"""
338,89213846,b'Nit: should this be `if(IsSpeaking())`'
338,89237241,"b""Yeah, that'd make the code more concise! Incoming..."""
631,112431364,b'Nit: please remove extra line.'
631,112433530,"b'Let\'s word it this way:\r\n""Handy for avoiding situations when a text is submitted, but audio clip is not yet ready because the audio source isn\'t playing yet.""'"
631,112433603,b'Nit: extra line.'
1506,156287537,b'Not properly wrapped to support VR namespace'
1506,156787046,"b""I'm confused by this.  It seems in order to 'correctly' wrap it, I would need to add a ton of #if-ed code, that is only destined to go out of date, this won't be in a version or MRTK that is intended for <2017.1."""
874,133871537,b'Awesome.  Does this PR also update the core MRTK scripts that use this obsolete reference?'
874,133885226,b'I did not find any references to this method.'
874,134307078,b'Why are we not just deleting this class then?'
874,134309033,"b""I'm not sure what the strategy is for making methods obsolete. This is in the public Utils class so people could potentially use it in their projects. Do we just straight up remove methods or set them obsolete and delete them in 1-2 releases?"""
874,134309227,"b""Like your approach of making it obsolete! Let's use it for now and see how it pans out."""
874,134383286,"b""@Zod- yup you're correct, generally we mark as obsolete and remove later after people get a chance to update their references."""
1387,151822701,"b""Do these calls need to be `#if`ed out? It seems like they'd just return false on earlier build targets."""
240,80594635,b'NIT: Public properties are PascalCased. \ngameObjectToAnchor should be GameObjectToAnchor.\n'
240,80594672,b'NIT: AnchorName instead of anchorName.\n'
240,80594702,b'NIT: AnchorStore instead of anchorStore :)\n'
240,80594723,b'Should this be private set; ?\n'
240,80595172,b'NIT: Boo anchorName here instead of AnchorName :)\n'
240,80598965,b'done\n'
240,80598978,b'done\n'
240,80598995,"b'done and yes, so done.\n'"
240,80599011,b'done.\n'
240,80684662,b'Nit: private\n'
240,80684687,b'Nit: private\n'
240,80684703,b'Nit: private\n'
240,80685270,b'Nit: private\n'
340,89844202,"b'Any reason why these are all caps? Please make them: Create, Delete.'"
340,89844670,b'Please ensure TapToPlace.cs works with your changes.'
484,98759225,"b'Nit: not your change at all, but\xc2\xa0this is probably meant to say ""Other times we must wait for the tracking system to locate the world"" or something along those lines.'"
484,98772310,b'Fixed.'
539,103471219,b'Any chance we could use a for loop?'
539,103471604,b'We can most likely just check if `SpatialMappingManager.Instance != null` then try searching the scene.'
539,103472327,"b""I wonder what the trade off of keeping a list of anchors would be vs searching the scene for all the `WorldAnchors`. Then we wouldn't need to reference the spatial mapping manager because we'd only know about the anchors we've been trying to keep track of.  The drawback here though I think is that if a developer didn't know they had to keep track and just adds an anchor then it would be skipped."""
539,103496210,b'indeed'
539,103497015,b'Could be done in the WorldAnchorManager itself. it will be in charge of storing/deleting and keeping trace of all user created anchors...'
539,103553584,"b""Why cache if we're just going to use it a couple of times in the same method?"""
539,103571118,"b""Benefits of storing all user anchors may not be relevant, if it's just for one RemoveAll method.\r\nAt this time, I am not prioritizing this anchor array"""
539,103571985,"b'Personal preference in term of readability.\r\nI am fine either way.\r\nDo you want me to inline the ""SpatialMappingManager.Instance"" usages ?'"
539,103576259,"b""It's no big deal, I was just wondering if there was a purpose is all.\r\n\r\nI think it's fine."""
539,103576499,"b""No worries. Yeah I think it would be a good addition, but there's no real good way to prevent users from adding anchors outside of the `WorldAnchorManager` and making sure they get registered appropriately. """
742,131515073,b'I should double check this and make sure this is a desired change.'
1083,143208665,"b""The anchor is never attached in this method, so I don't think this comment is quite right,"""
20,61009027,b'Please add another commit which will fix converting Tabs to spaces in all the shaders.\n'
354,93036302,b'Tab offset.'
354,93042844,b'Damn tabs ;)'
454,94994712,"b""Love it! Might I\xc2\xa0suggest a highlight property in here? So\xc2\xa0we can highlight a material when\xc2\xa0the user's gaze enters.\r\nI'm open to other suggestions on that but I think we should have it\xc2\xa0:)"""
454,96471855,"b""It said\xc2\xa0an email response would show up here but\xc2\xa0that seems untrue :P\r\n\r\nI'm potentially OK with it - is this something that couldn't be accomplished through swapping to\xc2\xa0a material with a different diffuse color though?"""
454,96492221,"b""Swapping materials could be bad. It's been known in the past to create mem leaks in unity if not properly implemented."""
454,96715502,"b""Let's add highlights using the emission mask using a test scene in a following PR."""
476,98031909,b'Was this change intentional?'
476,98032335,b'Yes. This GUID is already being used by another shader.\r\n```\r\nThe GUID for Assets/HoloToolkit/Utilities/Shaders/FastConfigurable.shader is already in use by Assets/HoloToolkit/Utilities/Shaders/VertexLitConfigurableTransparent.shader. Assigning a new guid.\r\n```'
476,98032647,b'so much for globally unique :+1: '
476,98032972,"b'Haha the probability is low, but sometimes can happen.\r\nJust gotta use really big prime numbers when generating!'"
619,111280883,b'nit: single line formatting'
619,111280997,b'nit: single line formatting'
619,111281016,b'nit: single line formatting'
619,112025237,b'nit: private accessor'
619,112823971,"b""Why don't we fade the alpha channel also? Wouldn't fading only the rgb channels result in the object blacking out instead of fading in mixed-reality capture?"""
619,112933872,b'How come we are duplicating this code? HoloToolkitCommon.cginc still exists in Assets/HoloToolkit/Utilities/Shaders'
554,110969033,"b'This is the only place where `UnityObjectToViewPos` is called (instead of `UnityObjectToClipPos`). This helper method returns a float3 instead of the float4 returned by `mul(UNITY_MATRIX_MV, vertex)`. Since we are only using the z-value, the semantics of this code should be identical to the original code.'"
257,81753285,"b""I'm not entirely sold with the name OnTop.  I think this should be a bit more descriptive. Like: RenderOnTop or RenderLast (since we're most likely putting it at the end of the render queue).\n"""
257,81929987,"b""Nit: indentation.   Also check tabs vs spaces (can't  verify on mobile!) \n"""
257,81930208,b'Unused? \n'
257,81930603,"b""Nit: Indentation/ verify no tabs (Unity default template has tabs,  but I can't check on mobile!) \n"""
257,81930800,b'Remove fog comment\n'
118,70726677,"b""Not sure if that'd work, but it's what Occlusion.shader does, which is already in HoloToolkit-Unity.\n"""
7605,401833329,b'I know the previous implementation is already `public` but...do you think it needs to be? These feel like implementations internal to the raycaster.'
7605,401847616,"b""This one's a new method signature though, right?"""
7605,401856480,"b""I wonder if there's a perf gain to be had by only raycasting against the layer masks in `prioritizedLayerMasks` instead of `UnityEngine.Physics.AllLayers`?"""
7605,401858889,b'Also realized that this leads the single layer mask case to raycast all the way to `maxDistance` instead of just the first hit object. Which also means the `TryGetPrioritizedPhysicsHit` method has to iterate through all hits to find the closest one. Are you seeing any perf differences here?'
7605,401935739,"b""I'm fine with either. My gut says to start `private` and expose if needed"""
7606,401973496,b'Does removing this change the default value for all other pointers too (like the hand rays)? Do they need to be explicitly set to true elsewhere now?'
7606,401978350,"b""I think removing this means we might want to double check any component that assumes things about this value. Looks like most of them cache the incoming value and re-set it after the interaction, but there's at least one that just blindly sets it back to `true`:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/18fe32fd8d627216754885c7fecf4cf2434aa07d/Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs#L2082"""
7606,402485290,b'Since this is cached at the beginning of the method now:\r\n\r\n```suggestion\r\n            if (!(currentPointer is IMixedRealityNearPointer) && currentPointer.Controller.IsRotationAvailable)\r\n```'
7606,402485799,b'Since this is cached at the beginning of the method now:\r\n\r\n```suggestion\r\n            if (currentPointer?.Result?.CurrentPointerTarget == null\r\n                || !ContainsNode(currentPointer.Result.CurrentPointerTarget.transform) || initialFocusedObject != null)\r\n```'
7606,402486757,"b""Re: @cre8ivepark's comment\r\n\r\n```suggestion\r\n        private bool lockCursorWhenFocusLocked = true;\r\n```"""
7609,402547558,"b""I'm not sure it's specific to `.1f1`. Our pipelines run them on 2018.4.6 and .12. Were you seeing otherwise?\r\n\r\n```suggestion\r\nCurrently playmode tests are meant to be run in Unity 2018.4 and may fail in other versions of Unity\r\n```"""
7609,402550431,"b""Yeah let's do it!"""
7606,402634288,"b""Since this value is only used on startup when the pointer is created, I think we should encourage people to use the pointer's existing property at runtime (via `GazeProvider.GazePointer.IsTargetPositionLockedOnFocusLock`) instead of exposing the same concept twice."""
7606,402637083,"b""@RogPodge might be worth adding a note to that effect in the docs somewhere, if that's the path we go"""
7611,403219644,"b'Instead of the `#pragma warning disable`, you should be able to set this explicitly to `null` to get rid of the warning:\r\n\r\n```suggestion\r\n        [SerializeField]\r\n        private AudioClip _clickSound = null;\r\n```'"
7611,403220809,"b""We've tended to not use the leading `_` in this codebase. https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions"""
7611,403221530,b'nit: extra empty line here'
7611,403223675,b'Please add a summary and [the `AddComponentMenu` attribute](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#adding-new-monobehaviour-scripts) here.'
7611,403238069,b'Is there a downside to just updating the prefab to contain all the relevant `NearInteractionTouchableUnityUI` and audioclip components? And leaving them there regardless of if touch is supported? Especially if this script is already being added to the prefab by default'
7615,404249855,b'I believe this flow has changed a bit as of https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7246'
7615,404250968,b'![image](https://user-images.githubusercontent.com/3580640/78585194-46aebd00-77ee-11ea-8ff4-42608e2fe5e5.png)\r\n'
7615,404251246,b'This was changed in #7246'
7615,404280420,"b""Might be useful to add a link (I think this is the correct syntax)\r\n\r\n```suggestion\r\nBuilding your app with eye tracking should be similar to how you would compile other HoloLens 2 MRTK apps. Be sure that you have enabled the *'Gaze Input'* capability as described above in the section [*A note on the GazeInput capability*](#a-note-on-the-gazeinput-capability).\r\n```"""
7615,404308329,"b'Awesome, thanks!!'"
7619,404312175,"b""Why's this being removed?"""
7550,404315337,b'It might be good to rewrite this the same way `IMixedRealityEventPropagationData` was broken out into its own interface. Otherwise this is a breaking change.\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html#the-breaking-change-adds-value-but-could-be-written-in-a-way-that-isnt-breaking'
7619,404316049,"b'https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7550 updates the input system a bit.\r\n\r\n@davidkline-ms and @vaoliva, it might be good to work together to make sure the new additions are instrumented well and tested for perf.'"
7613,405109421,b'Was this change meant for this PR?'
7613,405110787,b'nit: looks like this file and SharingServiceProfile use tabs instead of spaces'
7613,405111205,b'Can this be placed in an editor-only assembly instead of being wrapped with this `#if`?'
7613,405111480,"b'If the editor-only assembly is created, this should be moved there as well.'"
7613,405114131,"b'It feels odd to me to have tool-specific (in this case, Photon) code in what seems to be a generic service profile. Can this be done in a more tool-explicit way? Might help define how other tools might integrate as well'"
7625,405258398,b'I think this also ends up fixing https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4719'
7625,405261377,"b""I wonder if, instead of manually setting this here, we'd want to make `BaseControllerPointer`'s `PrioritizedLayerMasksOverride` property `virtual`, then override it in this class to point to our `grabLayerMasks` field (and deprecate the existing `GrabLayerMasks` property). As this line makes pretty obvious, we kinda have an existing duplicated concept here. Thoughts?"""
7625,405326938,"b""@julenka To expand a bit on my proposal, I agree with you that the user-configurable field should definitely stick around. I was proposing to reconcile the read-only `GrabLayerMasks` property with the base class' `PrioritizedLayerMasksOverride` property, instead of just setting them to be the same thing in this line. The serialized field currently backing `GrabLayerMasks` should definitely stay (so nothing will change as far as the inspector is concerned), and I think it should instead back `PrioritizedLayerMasksOverride` while the read-only property is deprecated.\r\n\r\nAs far as naming, I think it's fine to keep using the specifically named layer mask terminology in the inspector, but it feels odd to me to redefine an existing concept with a new name. I'd prefer consistency, personally, so that if you know how to set layer masks on one pointer you know how to set them on all, instead of looking for a specific pointer's custom defined layer mask property. It also lets you set them based on the pointer interface instead of the concrete type. Additionally, the existing property is read-only, while `PrioritizedLayerMasksOverride` can be set at runtime as well. I'm also thinking about the scenario where `PrioritizedLayerMasksOverride` is changed at runtime, but in this PR the grab pointer would ignore that internally entirely. Making it backed by the existing field would fix that.\r\n\r\nGoing forward though, you bring up a good point that `PrioritizedLayerMasksOverride` isn't exposed in the inspector anywhere currently. It doesn't affect us here, since we already have a serialized field for layer masks in this class, but it might be interesting to expose at a lower layer at some point, so other pointer types have the option as well."""
7625,405331526,b'I believe this one is tracked by https://github.com/microsoft/MixedRealityToolkit-Unity/issues/3758'
7625,405734174,b'```suggestion\r\n            get => grabLayerMasks;\r\n            set => grabLayerMasks = value;\r\n```'
7625,405735598,b'```suggestion\r\n        /// <inheritdoc />\r\n        public override LayerMask[] PrioritizedLayerMasksOverride\r\n```'
7625,405737003,"b""So yeah, following up on what I was thinking below, I think we can go this route. We could also go down the route of just re-setting `PrioritizedLayerMasksOverride` to be equal to `GrabLayerMasks` any time `PrioritizedLayerMasksOverride` is null when we're running through `OnPreSceneQuery`. That'd allow devs to still override this while falling back to `GrabLayerMasks` instead of overwriting it all the way through. I _think_ I'm good either way, but wanted to put it out there to see what people thought."""
7625,405823007,"b""In the past we've done checks like `is GrabPointer`"""
7625,405864809,"b""Ah yeah, in this case it's at-worst N spherecasts per frame, but fewer if we hit something at a higher priority raycast (it returns early in this case). But, the at-worst case is actually probably most of the time, when nothing is being hit."""
7631,405871729,"b'Is this something we\'d want to put in the input simulation profile? That way it\'s configurable, instead of just searching the actions for ""select""? Then could be grabbed out of the profile below like `SimulateEyePosition` is on line 225.'"
7631,405875695,b'Maybe `Handedness.None`?'
7634,406462778,b'```suggestion\r\n        /// to detect when eye tracking is lost.\r\n```'
7635,406541239,"b""```suggestion\r\n                // It's above the visible area\r\n```"""
7635,406541267,"b""```suggestion\r\n                // It's below the visible area\r\n```"""
7639,406839851,b'Probably worth converting these into `<summary>` tags so they show up in the docs'
7639,406847609,"b""I think we follow this pattern elsewhere too, but I wonder if we should update to, instead of caching `jointCount`, caching the result of `Enum.GetNames(typeof(TrackedHandJoint))` and iterating through that? That way, we aren't casting `int`s to `enum`s, which could fail if we decide to skip indices in the enum in the future for whatever reason"""
7639,406849900,"b""nit: I'm pretty sure dictionaries are fine with this syntax for both cases, so we don't have to check that it contains the key and explicitly call `Add`. Also might be good to check that `TryGetJoint` succeeded\r\n\r\n```suggestion\r\n                if (TryGetJoint(handJoint, out MixedRealityPose pose))\r\n                {\r\n                    jointPoses[handJoint] = pose;\r\n                }\r\n```"""
7639,406853554,"b'`Leap.Hand` defines things like `pinchStrength` and `grabStrength`. Do we want to try to use that data here for select and grab, instead of defining our own?'"
7639,406856035,"b""To fit [our naming conventions](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions), `leapServiceProvider` and `attachmentHands` should be in PascalCase since they're properties."""
7639,406856907,"b'Instead of asking the device manager for all hands and finding itself when needed, could the correct `Hand` be passed in the `UpdateState()` method and cached?\r\n\r\nOr, does it need to be set multiple times? Could it be cached in the constructor and re-used?'"
7639,406857964,b'You should be able to use the pattern introduced https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6822 to utilize the pointer cache instead of destroying them.\r\n\r\n`RecyclePointers(trackedHands[handedness].InputSource);`'
7639,406858979,"b'Looks like the XR SDK types were removed from the mapping profile. These types are only loaded and serialized in Unity 2019.3, so it might be good to make sure to reserialize this there.'"
7639,406867784,"b'Yeah, currently all the configuration checkers run on every recompile'"
7639,406869900,"b'If we expect the GUIDs to stay consistent, those can be used to find the paths regardless of where they are in the assets hierarchy or project structure. Less discoverable what they mean in the code (would need to document what they represent), but removes any dependency on specific paths.'"
7639,406878932,"b""In other config checkers, we explictly append, and only when it doesn't already exist:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/3f9d102e2f43a7acc2f9f81edae32f84acc9bf2a/Assets/MRTK/Providers/XRSDK/Editor/XRSDKConfigurationChecker.cs#L81-L92\r\n\r\nWe could do that here, since I think the only thing we need to add is the `LeapMotion` reference?\r\n\r\nIt also gets removed in the case where the ref doesn't exist (but I think recent versions of 2018.4 and 2019 should handle this case without error):\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/3f9d102e2f43a7acc2f9f81edae32f84acc9bf2a/Assets/MRTK/Providers/XRSDK/Editor/XRSDKConfigurationChecker.cs#L107-L118"""
7646,406969002,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateHandJointsPerfMarker = new ProfilerMarker(""[MRTK] ArticulatedHandDefinition.UpdateHandJoints"");\r\n```'"
7646,406969350,"b'nit, to match the others\r\n```suggestion\r\n\r\n        private static readonly ProfilerMarker RefreshDevicesPerfMarker = new ProfilerMarker(""[MRTK] UnityJoystickManager.Update"");\r\n```'"
7646,406970471,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateControllerPerfMarker = new ProfilerMarker(""[MRTK] GenericOpenVRController.UpdateController"");\r\n```'"
7646,406970503,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateControllerDataPerfMarker = new ProfilerMarker(""[MRTK] GenericOpenVRController.UpdateControllerData"");\r\n```'"
7646,406970713,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateControllerPerfMarker = new ProfilerMarker(""[MRTK] BaseWindowsMixedRealitySource.UpdateController"");\r\n```'"
7646,406971508,"b'I _think_ this is only used in this context? To prevent a potential ""field not used"" warning.\r\n\r\n```suggestion\r\n#if WINDOWS_UWP || DOTNETWINRT_PRESENT\r\n        private static readonly ProfilerMarker UpdateHandDataPerfMarker = new ProfilerMarker(""[MRTK] WindowsMixedRealityArticulatedHand.UpdateHandData"");\r\n#endif // WINDOWS_UWP || DOTNETWINRT_PRESENT\r\n```'"
7646,406972813,"b'To match the method name:\r\n\r\n```suggestion\r\n        private static readonly ProfilerMarker ApplyPointerBehaviorPerfMarker = new ProfilerMarker(""[MRTK] DefaultPointerMediator.ApplyPointerBehavior"");\r\n```'"
7646,406972835,b'```suggestion\r\n            using (ApplyPointerBehaviorPerfMarker.Auto())\r\n```'
7646,406973849,"b""Was this change intended for this PR too?\r\nIf so, do you happen to have perf measurements before / after? Looking at the code, I'd expect this to be better, but was wondering to be sure."""
7646,407584032,"b""I think this should should be in the scope of the derived class' markers, this will show up in the profiler's hierarchy under that marker and we'll be able to see the split of time for each system"""
7631,407611045,"b""Actions here should be obtained from the controller mapping profile. We shouldn't define actions for these mappings in code like this. If you're seeing a case where mappings are being obtained without the actions expected from the profile, we should figure out the issue there (serialization maybe, if you're adding a new handedness option)."""
7631,407611317,"b""This feels odd to me. The base class should handle this case. Possibly related to my other comment, if we're looking to add a new handedness to this class."""
7664,408954707,"b'```suggestion\r\n        [SerializeField, Tooltip(""How the rows are aligned in the grid"")]\r\n```'"
7664,408955479,"b""Would be good to add `<summary>`s to the public properties. The text can be the same as the corresponding field's tooltip"""
7671,409165913,"b'```suggestion\r\n> There may be additional data following the method name. This is used to identify conditionally executed, potentially expensive functionality that may be avoided by small changes to application code.\r\n```'"
7671,409166044,"b'```suggestion\r\nIn this example, the hierarchy has been expanded to show that the UpdateHandData method of WindowsMixedRealityArticulatedHand class is consuming 0.44 ms of CPU time during the frame being analyzed. This data can be used to help determine if a performance issue is related to application code or from elsewhere in the system.\r\n```'"
7639,409805614,"b""Yeah, I agree this pattern feels odd, though I think it's the only way currently for a controller to know its device manager.\r\n\r\nIn this case, it looks like this is mainly used to grab the corresponding Leap `AttachmentHand` from the device manager and cache it. @CDiaz-MS Do you think this might be place (like with `Hand`) that the constructor can take these in as parameters or can be set manually by the data provider? Maybe with a `SetHands(AttachmentHand attachmentHand, Hand hand)` method or something, if we don't want to mess with the constructor's parameters and add plug-in specific types to it. It feels like these are things that the data provider can actively provide to the MRTK class instead of needing to be asked for it."""
7639,409806675,"b'Interesting to know to specifics of what those APIs provide! Thanks!\r\n\r\n>Also the Leap.Hand grabStrength is only 1 if all fingers are together, shown in the gif below\r\n\r\nDo you think the data is ""good enough"" to use >0 as a grab? Or some threshold?'"
7639,409807626,"b'Also, did you consider `pinchDistance`?\r\n\r\n>float PinchDistance\r\n>\r\n>The distance between the thumb and index finger of a pinch hand pose.\r\n>\r\n>The distance is computed by looking at the shortest distance between the last 2 phalanges of the thumb and those of the index finger. This pinch measurement only takes thumb and index finger into account.'"
7639,409812906,"b""Do these properties need to be `protected`? It feels like they could be `private`, since I'm not sure if we expect this class to be extended and these used. Were they added for a different reason?"""
7639,409813456,b'Is this used?'
7639,409815994,"b""It feels like the contents of `TryGetJoint` should be moved to a different method which grabs and stores the jointPoses from the Leap APIs (which would be called here instead).\r\n\r\nThe reason I say this is because `TryGetJoint` is a public method. We have some scripts that ask `IMixedRealityHand`s for their joints, which means that each time it gets called we'll be running through the steps of grabbing the data from the `AttachmentHand`, converting it, etc, even though we've cached the result here.\r\n\r\nFor example, in the WMR articulated hand class, we simply return this cached value:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/614f4a069fd108caa31dc6eaa0d6bb1b739065c8/Assets/MRTK/Providers/WindowsMixedReality/XR2018/Controllers/WindowsMixedRealityArticulatedHand.cs#L63"""
7639,409818198,b'nit: extra space'
7639,409818483,b'```suggestion\r\n        /// <inheritdoc />\r\n        public override void Enable()\r\n```\r\n'
7639,409818622,b'```suggestion\r\n        /// <inheritdoc />\r\n        public override void Update()\r\n```'
7639,409819854,"b'Does this guarantee the provider will be at a local position of (0,0,0) under the camera to start with? Or will it be slightly offset if the camera has moved?'"
7639,409825280,"b'Yeah, I think we should use PascalCase for `static readonly`\r\n\r\n[StyleCop agrees](https://github.com/StyleCop/StyleCop/blob/c2b30c50c4cccd963fc74525b0bdf01c74f6d831/Project/Docs/Rules/SA1311.html#L26-L27) \xf0\x9f\x98\x9c'"
7676,409885702,"b'Possibly a nit, but I wonder if there\'s a better name we can use here. If I\'m just looking through the properties, I\'m not sure what ""legacy"" would be referring to.\r\n\r\nMight just be something that can be solved via documentation though, or updating the summary tag and tooltip to more explicitly describe what happens when i check / uncheck this.'"
7639,409889388,"b""Agreed 100% on not changing the constructor. Good points!\r\nWhat about something like an `internal void SetHands(AttachmentHand attachmentHand, Hand hand)` method that the device manager can call immediately after creating the hand? It looks like the manager keeps track of `AttachmentHand`s and `Hand`s based on handedness, so it should be able to tell what maps to what. Then the leap hand can use its locally cached references at runtime.\r\n\r\nI'd recommend against `GameObject.Find` any time we can get around using it. Always a cost to searching the whole scene for something!"""
7676,409902990,"b'>Use MRTK v2.3 anchoring\r\n\r\nI\'m not sure about that one either, since what if 2.4 is my first experience with MRTK or this component?\r\nI think ""anchor along axis"" is good'"
7631,409930596,"b""I think this might want to be\r\n\r\n`private bool isSimulatingGaze => !isSimulatingLeft && !isSimulatingRight && !IsAlwaysVisibleLeft && !IsAlwaysVisibleRight;`\r\n\r\nI'm able to get into a slightly weird state when Y or T to toggle the hands `IsAlwaysVisible*`, where the hand is present and its pointers registered, but the simulated GGVPointer is also active. In this state, the gaze cursor disappears since another source is active (and so the gaze pointer is inactive), but I can still click using the simulation."""
7688,411529284,"b'This is a demo script, but it could be good to add some `<summary>`s and docs.'"
7688,411529487,b'Is this file part of this change?'
7688,411539732,b'Is some text being removed here?'
7688,411540426,b'Is this the `ObjectManipulator` being added? It looks odd to me that one component is being removed but two are being added.'
7679,411543499,"b'To clarify, since it looks like this prefab is being updated and renamed without the GUID changing, if I was previously using `PalmUpHandMenu.prefab` in my scene, will I see a behavior change when I update to MRTK 2.4 with this new prefab, or do they behave identically by default?'"
7679,411545148,b'Empty `param` and `returns` blocks will fail PR validation'
7679,411545994,b'It looks like these methods are obsolete: https://docs.unity3d.com/2018.4/Documentation/ScriptReference/Assertions.Must.MustExtensions.html. Can we use something else instead?'
7688,411567197,"b""Yeah, I think mostly I was wondering if an object was being edited in a scene and that was being saved back to the prefab, which might save some scene-specific content. If you're editing the prefab directly, I think this is fine! Might just be some stale serialization that was changed in the past"""
7679,411590283,b'It looks like `useGazeActivation` is set to true for this prefab: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7679/files#diff-98a1886079d65361204ca692bd06d7cfR271'
7679,411590973,b'What new settings are needed for this profile? Can we re-use the default profiles instead?'
7679,411604455,b'```suggestion\r\n        private const float SolverUpdateWaitTime = 1.0f; // in seconds\r\n```'
7679,411604754,b'PR validation was failing due to the missing space. Updated'
7639,411710804,"b""I'd vote for leaving it as-is. When it's in scope like this and the base class has its own marker, the Unity profiler shows these nested in the call hierarchy and it becomes more obvious which class' base is being called."""
7639,411740173,"b""This isn't always the case. It'd be good if we could add consistency here across our mappings, but unfortunately they weren't created that way. I think for now, it might be good to remove this `<summary>`. The other is good!"""
7639,411741477,b'Would it be possible to add a documentation button here? Something like https://github.com/microsoft/MixedRealityToolkit-Unity/blob/40988308135e59bcc79b30823e56348851963437/Assets/MRTK/Providers/WindowsMixedReality/Shared/Editor/WindowsMixedRealityCameraSettingsProfileInspector.cs#L47'
7639,411742330,b'Was going to ask this. Thanks for already documenting it!'
7639,411743361,"b""It might be good to do a quick pass on which of these `public` properties need to remain public and which can be made private. I think some of these are now passed directly to the class that needs them (like this one and the hand class, I believe). I think it's definitely better to use the minimum expected / needed scope up front and expand if necessary."""
7639,411744383,b'nit: empty line here between `if` and `else if`'
7639,411754467,b'Sounds good to me! You definitely know best'
7639,411766618,b'Oh! Completely missed that you had a button in a different spot. Thanks for moving!'
7688,412344897,"b""```suggestion\r\n    /// Resets the gameobject's position to its starting position as soon as it's moving outside the provided bounds\r\n```"""
7712,413413461,"b'We probably want a new perf marker for this new method, to differentiate form the grasp point perf marker'"
7712,413416470,"b""Instead of assuming this is an `IMixedRealityNearPointer` and reaching directly into its methods, would it be possible to instead set the pointer's ray to align with this grasp axis? That's how we use the `NearGraspPoint`, and right now just use `Vector3.forward` as the direction:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/ee6cbf9883b311b8f8c3f725d885bf6a051818d1/Assets/MRTK/SDK/Features/UX/Scripts/Pointers/SpherePointer.cs#L130\r\n\r\nThen, like where we use the ray's origin for the `OverlapSphereNonAlloc` point, the direction could be used at this point:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/9fc72f2c79a36b346724ac42fbbf6d3a5fc5a702/Assets/MRTK/Services/InputSystem/FocusProvider.cs#L1274"""
7703,413958276,"b'Small question on the toggle features panel: does it make sense for the one we use in our example scene to be the SDK prefab? It feels very specific to our scenario. It might be interesting to have a generic one, with ours being an example prefab variant or something.'"
7723,414045866,"b""Small note is that XR SDK also supports native WMR in Standalone builds, without needing SteamVR and the WMR plugin. These steps are required for Unity's legacy XR though.\r\nNot sure if we want to mention this somewhere or not."""
7176,414901459,b'Ooh good call. Do you have an idea of what this might look like? Search the scene for an MRTK canvas or something?'
7735,416088049,"b'Since this is a public property, the [name should be in PascalCase](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions) and have [a `<summary>` tag](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers).'"
7735,416088376,b'Intentionally left commented?'
7735,416089549,"b'Especially since this is a `public` class, we should be sure to follow [our encapsulation recommendations](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation). It looks to me like these can just be turned into auto-properties.'"
7735,416090702,b'Also some `<summary>` tags.'
7176,416747371,"b""Proposal that I'm looking for feedback on (@cre8ivepark, @thalbern, @CDiaz-MS, @wiwei, @davidkline-ms):\r\nSince this PR is adding ~2mb of images just for this tool, I'd prefer we somehow make those an optional import. Not sure if we move everything to the Tools package, or if we take this path, where we host our images somewhere (on the docs site?) and load them when the Toolbox is opened via the following code:\r\n\r\n```suggestion\r\n                Icon = AssetPreview.GetAssetPreview(Prefab);\r\n\r\n                imageWebRequest = UnityWebRequestTexture.GetTexture(iconURL);\r\n                imageWebRequest.SendWebRequest();\r\n                EditorApplication.update += CheckForLoadedImage;\r\n            }\r\n\r\n            private void CheckForLoadedImage()\r\n            {\r\n                if (imageWebRequest.isDone)\r\n                {\r\n                    EditorApplication.update -= CheckForLoadedImage;\r\n                    Icon = DownloadHandlerTexture.GetContent(imageWebRequest);\r\n                }\r\n```\r\n\r\nThe icon falls back to a Unity-generated prefab preview, which isn't as nice as the hand-created icons we'd be loading, but is something. That way, those without internet can still see an image."""
7730,416761023,b'Updated'
7730,416761138,b'Deleted'
7730,416761297,b'Refactored out the const'
7730,416761448,b'Updated to correctly describe the property'
7730,416761507,b'Expanded'
7730,416763529,b'Updated'
7730,416773057,"b"">in this file\r\n\r\nIs this referring to `ProjectPreferences` or `MixedRealityProjectPreferences`? I believe the reason it's being put into `ProjectPreferences` is so it gets written to a serialized asset and will persist across sessions, etc."""
7700,416840329,"b""Slight nit, but could these arrays be declared `static readonly` outside the method, so we aren't `new`ing an array each time it's called?"""
7700,416841103,b'nit: extra whitespace\r\n\r\n```suggestion\r\n                    {\r\n```'
7700,416841878,b'to match the formatting of the rest of the file\r\n\r\n```suggestion\r\n        ProximityObjectsChangedEvent ProximityObjectsChanged { get; }\r\n```'
7736,416927321,"b""There's also an `IsInteractionEnabled` on the gaze pointer that might be usable here. It's managed by the gaze pointer visibility state machine and should behave a deterministic way across platforms. Can we replace `SimulateGaze` with that?"""
7736,416944252,"b""It feels off to me that this assembly would need to know about input simulation. Doing it this way would also mean we'd need a corresponding fix in the XR SDK version of this assembly, and any future platforms that support hands in the editor (Leap Motion might exhibit this same issue)."""
7736,416964232,"b""I don't think we'd need to make any changes to the gaze pointer, but instead only simulate gaze here if `CoreServices.InputSystem.GazeProvider.GazePointer.IsInteractionEnabled` is `true`. I _think_ this case should be handled by that property already"""
7736,416975474,b'Might be interesting to see how using that value with `isSimulatingGaze` in `SimulatedHandDataProvider` affects things too.'
7740,417506668,"b'Oh interesting, any reason why we use png for most of our images, but jpg for a few here?'"
7740,417506793,b'```suggestion\r\n* *Occlusion* - Mesh data will be occlude items in scene using the *Occlusion Material*\r\n```'
7738,417535375,"b'This is being added, but is it used yet anywhere?'"
7741,417563821,b'```suggestion\r\n#endif // WINDOWS_UWP\r\n```'
7741,417563847,b'Are we able to [use `WINDOWS_UWP` here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#use-platform-dependent-compilation-to-ensure-the-toolkit-wont-break-the-build-on-another-platform)?\r\n\r\n```suggestion\r\n#if WINDOWS_UWP\r\n```'
7740,417652011,"b""Do we want to leave this in our toc, in case anybody hasn't updated for whatever reason? We could add an `[Obsolete]` tag to it like your `[Experimental]` tags below"""
7700,417652888,b'```suggestion\r\n        private float wireframeEdgeRadius = 0.001f;\r\n```'
7700,417653203,"b'Do these events need `null` checks, or are they guaranteed to be _something_?'"
7738,417671063,b'```suggestion\r\n                    if (pointerComponent == null)\r\n```'
7738,417671134,"b'Looks like this case was flipped, leading to the test failures'"
7176,418172602,b'I just pushed a change to move the Toolbox and its related resources (images and json data) from the SDK package to the Tools package.'
7738,418270610,b'```suggestion\r\n                    if (pointer.IsNull())\r\n```'
7176,418360390,"b""Added a dropdown to the Unity UI section, which finds all `CanvasUtility`s in the scene (and thus valid MRTK canvases):\r\n\r\n![MicrosoftTeams-image (5)](https://user-images.githubusercontent.com/3580640/80771057-026dbe80-8b07-11ea-86b6-74b36e3e45d8.png)\r\n\r\nWhen a component's button is selected, it's automatically placed under the selected canvas in the dropdown.\r\n\r\nIf none are detected, the buttons are disabled and the following shows up:\r\n\r\n![MicrosoftTeams-image (4)](https://user-images.githubusercontent.com/3580640/80771091-24ffd780-8b07-11ea-844c-c84e5b599bd3.png)\r\n"""
7748,418625929,"b'Whoops, not sure where my originally referenced comment went:\r\n\r\nTo prevent this from being a breaking change for any dev who might use this API in their own app, we should keep these two methods around and tag them with `[Obsolete(""Use PlatformUtility.IsPlatformSupported instead, which accounts for both the in-editor and runtime case."")]'"
7762,418682907,"b""```suggestion\r\n* The editor UI for screenshots should use light gray theme editor as not all users have access to the dark theme and we'd like to keep things as consistent as possible.\r\n```"""
7756,418762313,b'Yeah seems reasonable to me!'
7765,418762667,"b""It looks like we still try to delete these (at least, I can't see the path where the `Delete` method is excluded). Will it just fail because none of the paths exist?"""
7766,418768951,"b""Agreed, I think we generally shouldn't be recommending string comparisons. The event data should have handedness though! And then it becomes cross-compatible with any hand implementation that provides this data."""
7770,419558481,"b'Since this script largely contains code from the other licensed file, we should likely have the license here as well.\r\n\r\n```suggestion\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\n\xef\xbb\xbfusing Microsoft.MixedReality.Toolkit.Input;\r\n```'"
7770,419559702,b'Please add a class summary'
7770,419637451,"b""```suggestion\r\n                // Check whether we're supposed to disappear\r\n```"""
7770,419637662,b'Fixes the PR validation checker blocking on a comment without a space at the beginning'
7756,419640449,b'```suggestion\r\n![Button](Images/Button/MRTK_Button_UsePlated.png)\r\n```'
7756,419640580,b'```suggestion\r\n![Button](Images/Button/MRTK_Button_SizeCustomization1.png)\r\n```'
7756,419640657,b'```suggestion\r\n![Button](Images/Button/MRTK_Button_SizeCustomization2.png)\r\n```'
7756,419640710,b'```suggestion\r\n![Button](Images/Button/MRTK_Button_SizeCustomization3.png)\r\n```'
7756,419640914,b'```suggestion\r\n![Button](Images/Button/MRTK_Button_SizeCustomization4.png)\r\n```'
7774,419665732,"b""Oof yeah, good catch! I'll redo"""
7774,419686973,b'Updated'
7775,419694495,b'Added a bit more info about scenarios when you might want to try alternate methods'
7774,419695119,"b'I (unfortunately) intentionally left these mismatched, as they match the spellings in Unity:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/81008477-db193900-8e07-11ea-90e6-0a25b6b9b9a5.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/81008492-e1a7b080-8e07-11ea-914e-8f33a87d12af.png)\r\n'"
7768,419755127,"b""I think this should be able to be updated to the following, and you can remove the `var nearPointer = (IMixedRealityNearPointer)pointerData.Pointer;` line, so we aren't checking type / casting twice.\r\n\r\n\r\n```suggestion\r\n                    if (pointerData.Pointer is IMixedRealityNearPointer nearPointer)\r\n```"""
7768,419755210,b'```suggestion\r\n        public IEnumerator InputSimulationArticulatedHandNearGrabbable()\r\n```'
7768,419763734,"b""What does this change do? I think most (all of the ones I looked at, at least) of our near pointers use `IsNearObject` as part of their `IsInteractionEnabled` checks. Do we care if a near pointer is near an object but not able to interact with it due to some other part of the `IsInteractionEnabled` check? My gut says we wouldn't, but maybe I'm missing something"""
7791,420259442,"b""I wonder if we want to have scoped validation run on this job too. It's a pretty quick run (on the order of seconds) that could serve as a quick out for both jobs in case there's an initial issue. Otherwise, we're running tests on a PR that's going to be updated and have tests run on it again before merging."""
7791,420266759,"b""Of course, on the other hand it'd show up as a failure for both jobs, when it's really the same single failure."""
7802,420950719,"b""Looks like doc validation failed on this. I think just referencing the .md file is good and gets updated during the docs build to point to the correct .html page.\r\n\r\n```suggestion\r\nThis new feature makes it easy to change the icon and text of the buttons. Icon supports quad, sprite, and TextMesh Pro's SDF font texture. See MRTK's [Button documentation](README_Button.md#how-to-change-the-icon-and-text) for the details.\r\n```"""
7802,420969915,"b'Nit: extra whitespace\r\n\r\n```suggestion\r\n<br/><img src=""https://user-images.githubusercontent.com/13754172/75299783-d6724c00-57ea-11ea-88b1-85e4a585212f.gif"" width=""450"">\r\n\r\n**Hand Menu Improvements**\r\n```'"
7814,421129536,b'```suggestion\r\n        /// Enable hands free input\r\n```'
7833,422278936,"b""While testing this out, it seems like this gets called even when no MixedRealityToolkit script exists in the scene. This leads to:\r\n\r\n```\r\nException thrown while invoking [DidReloadScripts] method 'Microsoft.MixedReality.Toolkit.MixedRealityToolkit:OnDidReloadScripts ()' : NullReferenceException: Object reference not set to an instance of an object\r\nMicrosoft.MixedReality.Toolkit.MixedRealityToolkit.RegisterInstance (Microsoft.MixedReality.Toolkit.MixedRealityToolkit toolkitInstance, System.Boolean setAsActiveInstance) (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:720)\r\nMicrosoft.MixedReality.Toolkit.MixedRealityToolkit.OnDidReloadScripts () (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:1478)\r\n```\r\n\r\n`OnValidate` (I believe) only gets called on things actually present in the inspector, so it sorta guarantees that something will exist."""
7833,422279476,b'I wonder if we can get by with keeping `OnValidate` but using [`EditorApplication.delayCall`](https://docs.unity3d.com/ScriptReference/EditorApplication-delayCall.html) to postpone it outside the `OnValidate` scope?'
7833,422285164,"b""Also wonder if we can just stop calling `AssetDatabase.Refresh()` in `ProjectPreferences`, which seems to be the root of this issue (and some others). There's a comment saying \r\n\r\n>// Sometimes Unity has weird bug where asset file exists but Unity will not load it resulting in _instance = null. \r\n                        // Force refresh of asset database before we try to access our preferences file\r\n\r\nbut I haven't been able to repro"""
7833,423155704,"b""I think this should be left as-is. The `Instance` getter also calls `RegisterInstance`, so we'd be calling it on the same instance twice here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/d50838d18f0f8445357a66a974c0fc8fe11cb14e/Assets/MRTK/Core/Services/MixedRealityToolkit.cs#L554\r\n\r\nSo either left as-is or made only a reference to the `Instance` getter, like we do with \r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/d50838d18f0f8445357a66a974c0fc8fe11cb14e/Assets/MRTK/Core/Services/MixedRealityToolkit.cs#L485-L486\r\n\r\nI think I prefer as-is, since then we'll be explicitly registering the instance of the script that's actually in the scene and getting its `OnValidate` called, instead of searching the scene like the getter does.\r\n\r\nWere you seeing cases where the existing code wasn't working as expected?"""
7839,423161911,b'```suggestion\r\nNote that BoundsControl is still in experimental phase and therefore API or properties might still change in the next version.\r\n```'
7840,423162411,b'```suggestion\r\nThe `UseEyeTracking` property from `GazeProvider` implementation of `IMixedRealityEyeGazeProvider` was renamed to `IsEyeTrackingEnabled`.\r\n```'
7840,423172473,b'Do we want to recommend `CoreServices.InputSystem.GazeProvider` instead of `FindObjectsByType`? That way we have a single static reference to it instead of searching the scene.\r\n\r\n```suggestion\r\nif (CoreServices.InputSystem.GazeProvider is GazeProvider gazeProvider)\r\n{\r\n    gazeProvider.UseEyeTracking = true;\r\n}\r\n```'
7840,423172820,b'From other comment:\r\n\r\n```suggestion\r\nif (CoreServices.InputSystem.GazeProvider is GazeProvider gazeProvider)\r\n{\r\n    gazeProvider.IsEyeTrackingEnabled = true;\r\n}\r\n```'
7840,423173276,b'From other comment:\r\n\r\n```suggestion\r\nif (CoreServices.InputSystem.GazeProvider is GazeProvider gazeProvider)\r\n{\r\n    gazeProvider.IsEyeTrackingEnabled = true;\r\n}\r\n```'
7840,423173338,b'From other comment:\r\n\r\n```suggestion\r\nif (CoreServices.InputSystem.GazeProvider is GazeProvider gazeProvider)\r\n{\r\n    gazeProvider.UseEyeTracking = true;\r\n}\r\n```'
7846,423350519,b'nit: extra whitespace\r\n\r\n```suggestion\r\n    }\r\n```'
7846,423350786,b'Small nit to match brace style in the rest of the file:\r\n\r\n```suggestion\r\n        public IEnumerator TestGltfCustomAttributesData()\r\n        {\r\n            // Load glTF\r\n```'
7846,423354670,b'```suggestion\r\n    /// <summary>\r\n    /// Provides data accessors and conversions useful while reading and using glTF objects.\r\n    /// </summary>\r\n    public static class GltfConversions\r\n```'
7848,423873402,b'```suggestion\r\n1. Set the target platform in **File > Build Settings** to **Universal Windows Platform**\r\n```'
7848,423875455,"b""We might want to clarify that this step is only if you want to run on the legacy XR pipeline.\r\n\r\n```suggestion\r\n    - Ensure that the **Windows XR Plugin** is not installed if the project isn't using [XR SDK](../GettingStartedWithMRTKAndXRSDK.md), as the legacy **Windows Mixed Reality** package will not function alongside it\r\n```"""
7859,424142768,"b'Yeah, the `TryGet*` code zeros it out before returning `false`.'"
7859,424142998,"b""I guess we could cache the last known good value and reuse that? But for WMR at least, it's most likely we get all or nothing."""
7880,424793798,"b'My gut says that we shouldn\'t revert this, since changing mesh data can get pretty expensive. especially if the data hasn\'t changed, it\'s probably best to avoid the below code.\r\n\r\nLooks like the hand sends an empty meshinfo to alert the visualizer to clear the mesh: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/cdd703dd1173ce59a01642da2933133006a125b3/Assets/MRTK/Providers/WindowsMixedReality/Shared/WindowsMixedRealityArticulatedHandDefinition.cs#L101-L103\r\n\r\nMaybe if we can improve the `meshChanged` detection (like detecting going from a ""cleared"" mesh to actual data again). I think the `!= null` check prevents that:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/cdd703dd1173ce59a01642da2933133006a125b3/Assets/MRTK/Core/Providers/Hands/BaseHandVisualizer.cs#L180-L182\r\n\r\nMaybe if the old array is null and the new one isn\'t, that\'s a `meshChanged` situation? '"
7859,424823868,"b'```suggestion\r\n                                // If either position or rotation is available, use both pieces of data given.\r\n                                // This might result in using a zeroed out position or rotation. Most likely,\r\n                                // either both are available or both are unavailable.\r\n                                if (positionAvailable || rotationAvailable)\r\n```'"
7885,425323036,"b'```suggestion\r\n> The configuration dialog will reappear if one or more of the recommended settings is left unchecked. To prevent this from occurring, apply the desired options, then relaunch the dialog via  **Mixed Reality Toolkit** > **Utilities** > **Configure Unity Project** and click **Ignore**. This will prevent the configuration dialog from reappearing automatically.\r\n```'"
7885,425323217,b'```suggestion\r\nRegisters Spatial Awareness as layer 31 to enable easy and consistent configuration of raycast and physics options.\r\n```'
7885,425323992,b'```suggestion\r\nMicrosoft Windows spatializer that is provided by Unity as part of the Windows Mixed Reality and Windows XR Platform packages.\r\n```'
7888,425544153,"b""```suggestion\r\n>[!IMPORTANT]\r\n> If using Unity 2019.3.x, select **ARM64** and not **ARM** as the build architecture in Visual Studio. With the default Unity settings in Unity 2019.3.x, a Unity app will not deploy to a HoloLens if ARM is selected due to a Unity bug. This can be tracked on [Unity's issue tracker](https://issuetracker.unity3d.com/issues/enabling-graphics-jobs-in-2019-dot-3-x-results-in-a-crash-or-nothing-rendering-on-hololens-2).\r\n>\r\n> If the ARM architecture is required, navigate to **Edit > Project Settings, Player**, and under the **Other Settings** menu disable **Graphics Jobs**. Disabling **Graphics Jobs** will allow the app to deploy using the ARM build architecture for Unity 2019.3.x, but ARM64 is recommended.\r\n```"""
7886,426059903,b'```suggestion\r\n    /// Helper component that gathers the most commonly modified button elements in one place.\r\n```'
7889,426739038,b'Was this updated intentionally or should we try to keep it with the old GUID?'
7869,426741134,"b'It looks like this `MenuItem` has the same name as line 17 (same with the other two `MenuItem`s). Should this one be something like \r\n```suggestion\r\n        [MenuItem(""GameObject/MRTK Debug Utilities/Validate Renderer"", true, 41)]\r\n```\r\nthough, it also doesn\'t look like this prints anything?'"
7869,426794747,"b""Oh cool! I didn't realize that was a thing, awesome!"""
7902,426797609,b'Do we want the visual profiler on for the examples hub? Looks like it was previously off:\r\n```suggestion\r\n  enableDiagnosticsSystem: 0\r\n```'
7902,426798051,b'@davidkline-ms Will this have any unexpected side effects in other uses of this profile?'
7902,426798940,"b'Hmm, I\'m not sure if we want to make this change or not. I like the simplicity of the repo being set up for just the HandInteractionExamples scene, which makes build / deploy / test a bit simpler. I\'m interested to see what others think though.\r\n\r\nWe could probably add a repo script that\'s basically ""set up build settings for Examples Hub"" if we want the easy ability to build the hub?'"
7902,426809829,b'Thirteen other scenes are being added in this PR as well: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7902/files#diff-8f3c83eb79d0b4aa8cf581a168df971c'
7902,426810743,"b""Since this is the root ProjectSettings/EditorBuildSettings.asset, it'll change the default included scenes for the repo's project. I think the scene system adds missing scenes to the build settings, which might be what we're seeing here?"""
7902,426816138,"b'By default when opening the repo though, I only see \r\n![image](https://user-images.githubusercontent.com/3580640/82246958-74614880-98fa-11ea-8fd9-188b1446eee4.png), not all the others.'"
7917,427626018,"b""Is this needed? I believe this assembly is only marked for the editor and Windows standalone, so I don't think it even attempts to build for UWP during compilation. The change in LeapMotionConfigurationChecker.cs might be all that's needed?"""
7917,427626313,b'https://github.com/microsoft/MixedRealityToolkit-Unity/blob/9e60cb3f7850f61bb91a0dc2b5016e42ca54930f/Assets/MRTK/Providers/LeapMotion/Microsoft.MixedReality.Toolkit.Providers.LeapMotion.asmdef#L6-L10'
7917,427676765,"b""@CDiaz-MS Does the provider's assembly only building for editor and Windows Standalone not prevent it from being included in a UWP build? It doesn't look like it's the scripting define that excludes the DLL, or even prevents the code from running in a UWP build:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/9e60cb3f7850f61bb91a0dc2b5016e42ca54930f/Assets/MRTK/Providers/LeapMotion/Microsoft.MixedReality.Toolkit.Providers.LeapMotion.asmdef#L6-L10"""
7917,427677191,"b""So, it sounds like the UWP build completing is expected, since the Leap code isn't included in the build regardless of the `#if` define. (Additionally, this PR adds `#if !WINDOWS_UWP || UNITY_EDITOR` to the Leap provider to prevent it from running in UWP builds, but I'm not sure that's needed as I don't think this assembly is actually built for UWP https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7917#discussion_r427626018)"""
7920,427761021,"b""I think the parameters for `Clamp` are slightly switched around here. It looks like it's [`Clamp(value, min, max)`](https://docs.unity3d.com/ScriptReference/Mathf.Clamp.html), but this looks like it's using it as `Clamp(min, max, value)`. """
7937,428356787,"b""nit: this removes the extra whitespace, but there's also a duplicate blank line here"""
7937,428357378,b'nit: this line could be removed'
7712,428361651,"b""Would it be possible to use a different / more descriptive name than `Hololens2ShellGrabPointer`? I've seen in the past that some people were confused about `HoloLens2PressableButton` because they thought it could _only_ be used on HL2, when in reality it simply matches the HL2 shell (which itself doesn't tell me much about how this is different from the default). Could we use something like `ConicalGrabPointer` or `ConeBasedGrabPointer`? @julenka """
7712,428361999,"b'Since this is returning data that seems to match the direction this pointer is pointing, should it be:\r\n```suggestion\r\n            return true;\r\n```'"
7712,428362676,"b""Making this `public` seems slightly odd to me, especially since it seems like it's only called outside this class from the test.\r\nCould we instead make the properties re-init or update the corresponding `SpherePointerQueryInfo`s when they're set?"""
7712,428363746,"b""We could maybe add setters for any value that might need updating on the `SpherePointerQueryInfo`, so we don't have to recreate them and can just update specific values? Especially since that class is `private`, so making any public properties still won't allow others to mess with things. And it seems like the class is pretty deterministic and doesn't depend on previous state."""
7712,428365649,"b'The parameter is named `axis` in the interface, so it might be good to leave it consistent here.'"
7712,428861946,b'To match the file name:\r\n\r\n```suggestion\r\n  m_Name: ConicalGrabPointer\r\n```'
7712,428862257,b'```suggestion\r\n    The default grab point will query for nearby objects in a sphere around the grab point. By replacing the prefab with the `ConicalGrabPointer` prefab\r\n```'
7712,428864103,"b""Do you think this needs to be added to the interface? It's possible I missed a reference, but as far as I can tell, this is only used internally to `SpherePointer`."""
7712,428910145,"b'Adding this to the interface makes this PR a [breaking change](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html) for existing implementers of the interface, which would be best to avoid if possible. It\'s also not necessarily relevant to all near pointers, which includes the poke pointer which can\'t ""grasp"" (i feel the same way about `TryGetNearGraspPoint`). I think to prevent the breaking change, and to prevent needing to add this to the poke pointer where the concept isn\'t possible, it might be best to hold off adding it to the interface.'"
7952,429441686,"b""Yep! Oddly, they were calculated but the resulting vectors weren't actually used. I tried to walk through the history a bit, but couldn't find a point where they were ever used."""
7967,430560523,b'```suggestion\r\n            // Calling the Instance property performs important initialization work.\r\n```'
7969,430578751,"b""I thought we had a configuration checker that disabled this asmdef on UWP. I can't seem to find it though...so I might be misremembering. I feel like I remember us talking about having to mark stuff as non-readonly and whatnot to get it to work. (which, I do feel like docs is likely the better way to go about it than digging into someone's packages)"""
7971,430593729,"b'On a similar note, should we update our in-code documentation references to point to the actual release?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/31f1a04118d3a35a1c7855d0a01034bfa7a0cb77/Assets/MRTK/Core/Utilities/StandardShader/BaseMeshOutline.cs#L11'"
7969,430594834,"b'No I mean, if this is our guidance, it should definitely be here as well. I want to make sure the checker is removed though, if it exists, since I much prefer this to a tool digging into the package cache. Do you remember such a configuration checker / process, or am I completely misremembering that existing?'"
7971,430596132,"b'Yep, similar to what we did with NuGet in the past: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7278'"
7984,431533775,"b'Should this check for null and return false if so, like the previous failure case did?'"
8000,433359348,"b""I think we still need some mechanism for detaching everything that's currently under the playspace. Otherwise, the next line (`UnityEngine.Object.Destroy(mixedRealityPlayspace.gameObject);`) will destroy the playspace and all its children, including any custom hierarchies. From reading your description, I'm assuming the camera is still under the playspace _somewhere_, even if it isn't a first tier child, which means it'll be destroyed too."""
7984,433435856,b'```suggestion\r\n            string projectFilePath = GetProjectFilePath(buildInfo);\r\n            if (projectFilePath == null)\r\n            {\r\n                return false;\r\n            }\r\n```'
7978,434252167,b'We recommend that [all fields be private with public properties for access (if needed)](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).\r\n\r\nYou can use `[SerializeField]` on private fields if you need them to show up in the inspector.'
7978,434252331,b'This will likely also require some field naming updates: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions'
7978,434252603,b'Please make sure [all public methods are properly documented](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers)'
7978,434252917,b'Please make sure to add [explicit access modifiers](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers) for clarity.'
7940,434690730,"b""Since it looks like we call `GetComponent<NearInteractionTouchableSurface>();` both here and in `WorldSpacePressDirection`, every time they're called, it's probably worth caching the result and only trying to get the component again if the cached value turns null."""
8013,434697012,"b""Do you think we'd want to use [`Mathf.Approximately`](https://docs.unity3d.com/ScriptReference/Mathf.Approximately.html) here to account for potential floating point error? Especially since we're comparing to the result of a `.magnitude` call, which returns the result of a square root call:\r\n\r\nhttps://github.com/Unity-Technologies/UnityCsReference/blob/61f92bd79ae862c4465d35270f9d1d57befd1761/Runtime/Export/Math/Vector2.cs#L189"""
8013,434699775,"b'minor nit, but instead of adding `Quaternion.identity` to all these, could it be added as the default value of the new parameter? i suppose in that direction (in already existing code), `Vector3.forward` could be added as a default too since most of them pass that in explicitly.'"
7940,434727476,"b'@Zee2 Perfect, thanks!'"
8017,435506660,"b""Was just thinking through these same things, especially around\r\n\r\n>frankly it's not used anywhere in this file\r\n\r\nwhich just seems weird to me. Agreed fully with everything you said."""
7978,436891192,b'```suggestion\r\n\r\n        private void Update()\r\n```'
7978,436891334,b'```suggestion\r\n\r\n        private void CalculateJoystickRotation()\r\n```'
7978,436891408,b'```suggestion\r\n            CalculateJoystickRotation();\r\n            ApplyJoystickValues();\r\n```'
7978,436891491,b'```suggestion\r\n\r\n        private void ApplyJoystickValues()\r\n```'
7978,436892800,"b""We haven't typically used `_` in method names. Also not sure if it might make more sense to make this an `UpdateJoystickMode` method that takes in the desired enum? That way we don't have to keep adding new methods if new modes are added."""
7978,436893683,"b'Does this need to be public? If so, it also needs to follow the patterns and casing from https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7978#discussion_r434252167'"
7978,436894634,"b'If this enum needs to stay public (I think dependent on if the below field needs to be accessed publicly), it should [go into its own file](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files) and be [documented](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers).'"
7978,436895256,"b""With the public methods below for changing joystick mode (like `JoystickMode_Move`), I'm not sure this needs to also be public."""
7978,436895536,b'```suggestion\r\n        private Vector3 startPosition;\r\n        private Vector3 joystickGrabberPosition;\r\n        private Vector3 joystickVisualRotation;\r\n        private const int joystickVisualMaxRotation = 80;\r\n        private bool isDragging = false;\r\n```'
8015,437723142,"b""Need to pass `pointerId` as a parameter now that this isn't an inline method"""
8033,438331652,b'Do we want to include 2020+?\r\n\r\n```suggestion\r\n#if UNITY_2019_1_OR_NEWER\r\n```'
8033,438332355,"b'Something about the wording here feels confusing to me\r\n\r\n```suggestion\r\n        [MenuItem(""Mixed Reality Toolkit/MSBuild/Remove MSBuild for Unity"", true)]\r\n```'"
8033,438335270,"b'Do you know how often this gets called? I know some Unity GUI components redraw a lot, and this can be a potentially expensive method to call twice per draw (it loads/reads the manifest file twice per method call, so four times per draw). Not sure if this just gets called once when the menu is opened or not, but figured it was worth calling out.'"
8033,438335628,"b'Related to the other suggestion\r\n\r\n```suggestion\r\n        [MenuItem(""Mixed Reality Toolkit/MSBuild/Remove MSBuild for Unity"", priority = 100)]\r\n```'"
8033,438338555,b'We have some other docs that call out using the configuration dialog to enable this feature. The one I know of is https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Tools/HolographicRemoting.html#hololens-2'
8015,438340668,"b""One thought I just had was if the other `OnSourceLost` path properly handles this released state. I think there was an assumption here that this script would receive this event first, mark the pointer data as released, then forward that along to the UI.\r\n\r\nActually, looking through the code now, I think even if these go in the expected order, we'd likely still remove the pointerData from `pointerDataToUpdate` before sending the released event. Fixing that is probably outside the scope of this PR, but I wanted to call it out."""
8015,438341494,"b'Do you think we even need this assert anymore? The pointerId being removed before we get here feels like an ""allowed"" scenario, especially now that you fixed the bug around accessing a key that was already removed.'"
8033,439000521,"b""Looks like this only gets called when the menu pops up, not continuously as the menu is visible. I think we're fine leaving it as-is, as long as you don't feel there's any noticeable lag or whatnot when bringing up the menu"""
8033,439001319,"b""Hmm that's true..."""
8050,439673941,"b""It feels like `try`/`catch`ing exceptions due to the collection changing instead of more completely managing the lifecycle could lead to unexpected behavior.\r\n\r\nFor example (but please correct me if I'm wrong here!):\r\n\r\n1. In update, the profile changes\r\n1. This exception is thrown, and (as far as I can tell), the new providers don't get `Update` called on them and instead this method bails\r\n1. `LateUpdate` is called on all (now, the new) data providers\r\n\r\nIf a data provider does something in LateUpdate to follow up on something that's expected to be done in Update, and I think there's a fairly strong promise that system lifecycle happens in a specific order, the provider _could_ get into a weird state."""
8050,439674089,"b""Also it looks like only `Update` and `LateUpdate` are wrapped. What if I try to change the profile when a system is enabled / disabled / reset (maybe not a common scenario, but I'm not sure)?"""
8050,439674721,"b""Yeah, I'm not against `foreach` but I think I'd prefer to keep the loop as it was originally."""
8050,439675223,"b'To follow up on this, I remember we had a conversation a while back about more explicitly handling where / when the profiles are torn down and started up. Something like:\r\n\r\n1. New profile is set\r\n1. Old services are torn down\r\n1. All remaining service lifecycle code is cancelled for this frame\r\n1. Next frame, new services are spun up\r\n1. Normal service lifecycle resumes'"
8050,439675814,"b'All this to say I really think handling the lifecycle of all this more explicitly and completely might lead to not having to spot-fix specific issues one at a time (for example, if we wait until the next frame to try to recreate the UIRaycastCamera, would we have to make the `DestroyImmediate` race condition change? or does the frame boundary complete the clean-up and leave the scene fresh for the new services?).'"
8058,440531963,b'Not sure how I feel about marking so many of our assemblies with this tag. Our existing link.xml might be a contributor to reported increased build times. https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5273#issuecomment-513974004'
8058,440532139,"b""Can we just mark types that are used via `SystemType` serialization? It feels like that's the problem case."""
7984,440537572,"b""Side note, but I believe this bug was fixed in https://github.com/microsoft/msbuild/pull/4389 and I don't think we actually need to write this anymore (as long as the build system VS installations have updated to the fixed version)"""
7984,440537821,b'But gonna merge this and take it one step at a time'
8058,441711870,b'@davidkline-ms I think this another data point for using the `AssetDatabase` APIs instead of the way the MixedRealityToolkitFiles class is currently written. Those APIs _should_ search across all Assets and Packages and we can then get the proper loading path from that.'
8072,442474080,b'I think some of these asmdefs were edited in Unity 2019 (this is a new field in 2019). Should we make sure these are serialized in 2018 before we check in?'
8072,442474782,b'All these added AssemblyInfo.cs files is a good reminder that we should try to revive #7986 / https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8005'
8072,442477171,"b""I don't think we want to check these changes in. It's updated automatically when the project is loaded in 2019, but left un-checked-in to preserve 2018 support."""
8072,442478206,"b'We have https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MRTK/Core/Utilities/Editor/AssemblyDefinition.cs already, which we use for reading from json etc. Are you able to reuse it here?'"
8088,443732453,"b""On the new folder name, do you think there's a benefit in aligning this with the way the WMR folder is? \r\n![image](https://user-images.githubusercontent.com/3580640/85319889-15519f00-b477-11ea-9883-f5f8b0eacd57.png)\r\nwe don't currently have an Oculus / XR2018, but Oculus / XRSDK could be good from an alignment standpoint.\r\n"""
8088,443734249,"b'Do we want this to be valid for desktop Oculus too? Maybe a question directed at @wiwei too\r\n\r\n```suggestion\r\n        SupportedPlatforms.Android | SupportedPlatforms.WindowsStandalone,\r\n        ""XRSDK Oculus Device Manager"")]\r\n```'"
8088,443736140,"b'You can remove all these axis and keycode data, since they aren\'t used on XRSDK.\r\n\r\n```suggestion\r\n            new MixedRealityInteractionMapping(1, ""Axis1D.PrimaryIndexTrigger"", AxisType.SingleAxis, DeviceInputType.Trigger),\r\n```'"
8088,443737850,"b""Looks like this is currently in the default assembly. Don't forget to [make an assembly definition](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/CreateDataProvider.html#create-assembly-definitions)!"""
8088,443748783,"b""This is the mapping that isn't handled by default in the `GenericXRSDKController` class. The WMR class handles it explicitly. I'll open a PR with what should be a fix."""
8088,443875677,"b"">have a XRSDK folder but no XR2018 folder\r\n\r\nYeah I think that's the right move. Oculus in this case is referring to the platform, not the devices, so the other definitions in the OpenVR folder should stay there."""
8088,443880295,"b""With the new assembly, you'll need to double check the profile and likely reserialize"""
8088,443880588,"b'You may need to reserialize this one as well, to update it with the new assembly'"
8088,443880897,"b""I think these can be removed, since there doesn't seem to be any overridden data here. Can just use the defaults!"""
8088,443881809,"b'This should be in the `OculusXRSDKTouchController` definition, similar to how the WMRUsages are in the WMR-specific class. That way, this class stays as generic and cross-platform as possible!'"
8088,444362643,"b""I'm not sure I fully understand what this `if` is doing. It reads out a `triggerData`, but it doesn't look like that's ever used. Can this be another case in the switch?"""
8088,444363623,"b'It also looks like `DeviceInputType.TriggerTouch` gets handled in the base class already, though with a different `CommonUsages` feature'"
8058,444416133,"b'Oof yeah, none of the called methods provide any info on whether they were successful or not. Might be able to pipe a bool all the way back up, but I think some parts of this class need to be rewritten for robustness / performance anyway. Probably best to do it then.'"
8088,444425223,"b'Ah yep! Since the WMR motion controllers don\'t have capacitive touch sensors on the triggers, we instead report that it\'s ""touched"" as soon as the trigger is pressed to any amount. Since I don\'t see an equivalent `triggerTouch` in the [CommonUsages](https://docs.unity3d.com/ScriptReference/XR.CommonUsages.html) (though I was expecting one!), I\'m not sure another way to do it.'"
8088,444430964,"b""It doesn't look like these cases are currently used (and I don't think GGVHand will be needed even when the Oculus XR SDK plug-in supports hand tracking). Should they be removed until it's implemented?"""
8088,444431555,"b'Are all of these buttons currently supported in MRTK? Or is this PR intended to be ""phase one""?'"
8088,444436334,b'Should we go ahead and add support for [`OculusUsages.indexTouch`](https://docs.unity3d.com/Packages/com.unity.xr.oculus@1.0/api/Unity.XR.Oculus.OculusUsages.html) now too? Seems like it resolves the question around accessing the capacitive touch sensor on the trigger!'
8088,444437746,"b""I wonder if we want a second pass through to get `HandTracking` devices explicitly. Out of scope for this PR, but maybe something for future investigation. I believe HL2 currently marks hands with both characteristics, so we're fine there."""
8088,444438097,b'Seems like `GenericOpenVRController` is being removed. Is this intentional?'
8088,444439277,"b""We may need to add some data provider guards around XR platform soon, since both this and the WMR device manager will run on Windows standalone. We'll likely get duplicate controllers in that case.\r\n\r\nI'm currently investigating a better way to take advantage of the cross-platform nature of XR SDK with our data providers (in theory, we should really only need one!). Mostly commenting here for info, and less for any action in this PR."""
8019,444577243,"b'For fields, we typically recommend [private fields with public property accessors (if needed)](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).'"
8088,445012668,"b'```suggestion\r\n            {InputDeviceCharacteristics.Controller, InputDeviceCharacteristics.HandTracking};\r\n```'"
8088,445012977,b'I think all devices that would match this case will match either of the first two cases as well'
8088,445020038,"b""One thing we might want to do here is make sure that devices that are returned from previous `InputDevices.GetDevicesWithCharacteristics` calls aren't re-updated or re-detected. I think the re-detected case is okay with the existing logic, but it feels like we'd be updating the same controller multiple times potentially."""
8088,445040558,"b'Combining my comment with this thread:\r\n\r\n>Adding these to the enum will likely break all existing profiles, since this is serialized into the controller mapping profile and this will change the underlying values of all following entries (like Trigger below).\r\n>\r\n>Although I agree that this placement makes the most sense to locate them near related entries, we should add them to the end to maintain existing enum values (or mark each one explicitly, but that could get messy).'"
8088,445041728,"b'Although our assets might be updated, this may break any custom profiles that aren\'t re-serialized.\r\n\r\nThough...I\'ve been thinking about ignoring the serialized values in many cases, since it\'s not editable by a user and we should just use the ""latest"" values from the class itself.'"
8088,445044906,b'Does this break the controller mapping sync? or do we already ignore these values when trying to align actions?'
8088,445070362,"b""I don't think it's an exact match, because all XR SDK input sources contain several (HL2 hands have ~6 or 7 I believe) marked characteristics.\r\n\r\nThis API checks the characteristic flags for all flags you pass in though, so these three will look for:\r\n\r\n1. All sources that are marked as a controller\r\n1. All sources that are marked as hand tracking\r\n1. All sources that are marked as both a controller and hand tracking\r\n\r\nI can't think of a way for group 3 to contain sources that weren't already matched in the first two groups."""
8180,455953374,"b'Ah, probably should just be simulateEyePosition'"
8180,455970934,b'Just trying to simplify the eye simulation things from 2 boolean variables to a single enum'
8180,456027219,"b'I actually had a concern about getting rid of this old one (i.e. simulateEyePosition property) but I guess because bool == true == 1 and bool == false == 0 actually map pretty well, I think this ends up being just fine.\r\n\r\nYou\'ll probably wanna validate this, but if you instead do FormerlySerializedAs(""simulateEyePosition"") it MIGHT be okay.\r\n\r\nThe only other thing to mention is that you\'d probably want to keep the old public bool (mark it as Obsolete) and then make it just map to defaultEyeGazeSimulationMode == CameraForwardAxis i..e SimulateEyePosition => defaultEyeGazeSimulationMode  == CameraForwardAxis or SimulateEyePosition => defaultEyeGazeSimulationMode  != Disabled)'"
8180,456029557,b'```suggestion\r\n        /// Enable eye simulation\r\n```'
8180,456667318,"b'Yeah, I\'m kinda confused what the `FormerlySerializedAs` name is referring to. I don\'t see anything that was previously called `eyeGazeSimulationMode`. Should this be `[FormerlySerializedAs(""simulateEyePosition"")]`?\r\n'"
8313,471777744,b'Curious why select is not just the left mouse button?'
8313,471814696,b'I was just thinking maybe assigning a different keycode rather than the existing one associated with hand (with no specific reason). I am more than happy to change it to the left moue button and please let me know.'
8313,472284525,"b'Nit: I know this section is mimicing previous ones - there\'s not a lot of space between each property. It could be worth adding some whitespace between each couple of things (i.e. \r\n\r\n```\r\n[SerializeField]\r\n        [Tooltip(""Key to simulate a menu press on the motion controller"")]\r\n        private KeyBinding motionControllerMenuKey = KeyBinding.FromKey(KeyCode.M);\r\n        /// <summary>\r\n        /// Key to simulate a menu press on the motion controller\r\n        /// </summary>\r\n        public KeyBinding MotionControllerMenuKey => motionControllerMenuKey;\r\n```\r\n\r\nto\r\n\r\n```\r\n[SerializeField]\r\n        [Tooltip(""Key to simulate a menu press on the motion controller"")]\r\n        private KeyBinding motionControllerMenuKey = KeyBinding.FromKey(KeyCode.M);\r\n\r\n        /// <summary>\r\n        /// Key to simulate a menu press on the motion controller\r\n        /// </summary>\r\n        public KeyBinding MotionControllerMenuKey => motionControllerMenuKey;\r\n```'"
8313,472286438,b'I see now the refactoring that you were mentioning around shared stuff between the hand and motion controller data provider!'
8313,472287139,"b'It looks like most of this is pretty much stuff from the existing here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/ee161fdd81aa6ab591659bae75f64e02c6a2cdce/Assets/MRTK/Core/Providers/InputSimulation/SimulatedHandDataProvider.cs\r\n\r\nIf there are any interesting deltas, can you call them out?'"
8313,472394861,b'The main difference is all fields and functions that are specific to hand are removed (e.g. `bool IsPinching` and `float gestureBlending` in `SimulatedControllerState` / `jointCount` and `SelectGesture()` in `SimulatedControllerDataProvider`). I think this file (the new `SimulatedHandDataProvider.cs` after shared fields etc. are removed) can provide a clearer picture in terms of deltas:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/a26de109a452639b85011e782666747551c5e746/Assets/MRTK/Core/Providers/InputSimulation/SimulatedHandDataProvider.cs'
8313,473293761,b'```suggestion\r\n                if (isSimulatingGaze)\r\n                {\r\n                    lastSimulationGaze = time;\r\n                }\r\n```'
8156,451865134,b'Could this still be checked whenever `IsPinching` is called instead of setting it as a result of setting `GestureBlending`? Feels like an odd side effect of setting a different property.\r\n\r\n```suggestion\r\n        public bool IsPinching => gesture == ArticulatedHandPose.GestureId.Pinch && gestureBlending == 1.0f;\r\n```'
8156,451870293,"b""Looks like this was originally changed in https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7631, which allowed for the gaze-based input simulation instead of needing hands up. Mostly commenting to make sure that feature didn't regress, though I think our tests should catch if it did!"""
8156,451873136,b'Yeah testing it locally it works! That original change might not have been completely necessary \xf0\x9f\x98\x86 '
8171,454657912,"b""Should `gestureBlending` for gaze just always be 1.0? There's not much for it to transition between, since there's no physical representation like there is for hands."""
8171,454678268,"b""it seems wrong to override a bunch of code around setting and getting the `gestureBlending` variable to ensure that it stays fixed at 1.0f when we're using the hands free input simulation. I think its better to let `gestureBlending` be set and managed as usual and just target how isPinching specifically behaves."""
8171,454707961,"b'Yeah, that seems good!\r\n\r\nMy thought was around removing the line where we cycle through the gaze blending:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/99b0f02b76fd7b5b13e8d9c8c35729af6e307f2e/Assets/MRTK/Core/Providers/InputSimulation/SimulatedHandDataProvider.cs#L335\r\n\r\nand set it to 1.0f, like `Reset` does, and leave it:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/99b0f02b76fd7b5b13e8d9c8c35729af6e307f2e/Assets/MRTK/Core/Providers/InputSimulation/SimulatedHandDataProvider.cs#L109'"
8171,454708980,"b'Oh! Missed the parts where setting the gesture property resets it to 0.0f. Yeah, bigger change than I thought.'"
8313,472299587,b'Checking my reading - SpatialPointer and SpatialGrip are handled the same way (i..e these 5 lines of code are the same right?)'
8313,472301267,b'nit: missing doc comments for the public properties here and below\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers'
8313,472423311,b'It could be helpful to have some rotation to the controller initially to mirror the orientation of the controllers when they are held.  Maybe something like the gifs below?  It would be consistent with the initial orientation of the simulated hand.\r\n\r\n\r\n\r\n\r\n| Current| Slight Rotation|\r\n|---|---|\r\n| ![MotionController](https://user-images.githubusercontent.com/53493796/90555342-12f48400-e14c-11ea-8ab5-11a8e89f91e6.gif) | ![MotionControllerRotate](https://user-images.githubusercontent.com/53493796/90555362-17b93800-e14c-11ea-9157-bd173dd4854e.gif) |'
8313,472429377,b'+1 on this -having consistency with the initial rotation matching the hands seems good.'
8313,472494614,b'Change made!'
8313,472495260,b'Comments added.'
8313,472496819,"b""That's right - redundant code removed."""
8313,473294164,b'```suggestion\r\n        public bool IsTracked => isTracked;\r\n        \r\n        [SerializeField]\r\n        private bool isSelecting = false;\r\n```'
8313,473294376,b'Same for isGrabbing/isPressingMenu - the mismatched set of things are grouped together down below.'
8348,474840337,b'```suggestion\r\n            return (IsSelecting ? 1 : 0) * 100 + (IsGrabbing ? 1 : 0) * 10 + (IsPressingMenu ? 1 : 0);\r\n```'
8348,474840732,"b'Oh neat, I guess that also simplified this as well'"
8348,474846319,b'Thanks for the catch!'
8348,474923590,b'nit: separate the struct into a different file https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files'
8348,475034614,b'Missing namespace in the new file'
8348,476030299,b'Would you mind checking whether line 5 is the namespace you are looking for?'
8348,480477221,"b'Oh sorry, I said ""namespace"" but meant ""license header""'"
8348,480782596,b'Thanks for the catch! Just opened a PR to fix that.'
8313,472297653,"b""What are you thoughts on putting this on SimulatedMotionControllerData instead of the controller state? It's just interesting seeing a callback split between a state and data object (in which case, maybe it would just be helpful to explain a bit more about what the difference is between the state/data/provider objects)"""
8313,472413647,b'Is the plan to switch to Stopwatch.GetTimestamp or keep DateTime.UtcNow?'
8313,472422076,"b""I believe there's merit in the current implementation. The relationship between state/data/provider is a little complex, but here is my current understanding: `DataProvider` generates `Data` for each controller. `Data` stores the state of a controller itself. `State` holds data that are required by `DataProvider` to generate `Data`. I prefer leaving the function as it is for two reasons: 1) The updater function is specific to this data provider instead of a controller or its `Data`. For example, in test scripts custom update functions are used to update `Data`; 2) the current implementation aligns with existing behavior in `SimulatedHandDataProvider`. I am open to further discussion and please just let me know."""
8313,472423683,b'The code here is from the existing `SimulatedHandDataProvider` and there is no plan to change in this PR.'
8264,468024685,b'Is this going to be a material that developers set as a display option? Or is it on that will always (or never) be present?'
8264,468027384,b'I really have no idea what you mean here. What is the question or call to action?'
8264,468217754,"b'Do you expect developers to need / desire to switch between the physics material and the visible / occlusion materials? If so, we should ensure that there is proper handling in the DisplayOption property.\r\n\r\nThanks!'"
8264,469314909,"b""I don't expect them to do that. It's either on or off. Having said that, the null check should go. You should be able to turn it OFF as well. """
8906,519019711,"b""Along the lines of https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8906/files#r518260139, wondering why this was moved to the end. Most other `base` calls at the end of the methods are called out with\r\n\r\n>// Call the base after initialization to ensure any early exits do not\r\n>// artificially declare the service as initialized.\r\n\r\nbut this one doesn't appear to have a failure case."""
8906,519019939,b'thanks for pointing that out. it was moved in error.'
7646,406969350,"b'nit, to match the others\r\n```suggestion\r\n\r\n        private static readonly ProfilerMarker RefreshDevicesPerfMarker = new ProfilerMarker(""[MRTK] UnityJoystickManager.Update"");\r\n```'"
7646,407013870,"b""There's another mistake in this marker... The string has the wrong method name."""
7646,407547656,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.Update"");\r\n```'"
7646,407547809,"b'```suggestion\r\n        private static readonly ProfilerMarker AddTouchControllerPerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.AddTouchController"");\r\n```'"
7646,407547874,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateTouchDataPerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.UpdateTouchData"");\r\n```'"
7646,407547972,"b'```suggestion\r\n        private static readonly ProfilerMarker RemoveTouchControllerPerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.RemoveTouchController"");\r\n```'"
7646,407566320,b'fixed.'
7646,407566377,b'fixed'
7646,407566432,b'fixed'
7646,407586423,b'fixed'
8050,465279438,"b""It feels like this order is a bit off - ReadProfile needs BoundaryProfile (i.e. if it's null, it will crash right?)\r\n\r\nOr is the check of BoundaryProfile == null on line 59 not needed?"""
8050,465309926,b'@davidkline-ms '
8050,465367354,b'Let me double check. I believe all of the systems that have this method may behave the same.'
8906,518260139,"b'Inconsistent with the other `base.Initialize()` changes. This one is at the beginning of the method, while the others have mostly been moved to the end.'"
8906,518293070,b'missed that one. i would love to hear your thoughts on the earlier comment.'
7646,407549291,"b""It feels like just knowing that the base class is taking time isn't actually super helpful - if there were some way to also propagate the actual system that might make these markers more helpful here."""
7646,407567022,"b' i can look into this. in many cases, the derived class will also appear in the trace as they typically call the base as well as their own custom code.'"
7646,407584032,"b""I think this should should be in the scope of the derived class' markers, this will show up in the profiler's hierarchy under that marker and we'll be able to see the split of time for each system"""
7646,407587701,"b'@keveleigh, are you proposing adding implementations that are only markers and calls to the base class for each derived class? or are you indicating that the trace context should make it clear with the markers as they currently are?\r\n'"
7646,407604136,"b'Per discussion, leaving this as-is and will evaluate if further refinements are needed after spending time using this change.'"
8050,439673941,"b""It feels like `try`/`catch`ing exceptions due to the collection changing instead of more completely managing the lifecycle could lead to unexpected behavior.\r\n\r\nFor example (but please correct me if I'm wrong here!):\r\n\r\n1. In update, the profile changes\r\n1. This exception is thrown, and (as far as I can tell), the new providers don't get `Update` called on them and instead this method bails\r\n1. `LateUpdate` is called on all (now, the new) data providers\r\n\r\nIf a data provider does something in LateUpdate to follow up on something that's expected to be done in Update, and I think there's a fairly strong promise that system lifecycle happens in a specific order, the provider _could_ get into a weird state."""
8050,439674089,"b""Also it looks like only `Update` and `LateUpdate` are wrapped. What if I try to change the profile when a system is enabled / disabled / reset (maybe not a common scenario, but I'm not sure)?"""
8050,439675223,"b'To follow up on this, I remember we had a conversation a while back about more explicitly handling where / when the profiles are torn down and started up. Something like:\r\n\r\n1. New profile is set\r\n1. Old services are torn down\r\n1. All remaining service lifecycle code is cancelled for this frame\r\n1. Next frame, new services are spun up\r\n1. Normal service lifecycle resumes'"
8050,439675814,"b'All this to say I really think handling the lifecycle of all this more explicitly and completely might lead to not having to spot-fix specific issues one at a time (for example, if we wait until the next frame to try to recreate the UIRaycastCamera, would we have to make the `DestroyImmediate` race condition change? or does the frame boundary complete the clean-up and leave the scene fresh for the new services?).'"
8050,439680237,"b'> if we wait until the next frame to try to recreate the UIRaycastCamera, would we have to make the DestroyImmediate race condition change? \r\n\r\nthat appears to be an issue based on Unity indicating the object exists after Destroy and before cleanup. MRTK is checking the next frame and, seeing that the object exisst, does not recreate it.'"
8050,439680323,b'Super appreciate the feedback here! '
8050,439680729,"b""> All remaining service lifecycle code is cancelled for this frame\r\n\r\nI'll see what i can do to ensure complete update/cleanup between changes. It may introduce an extra frame, or so, between shutdown and restart."""
8050,439714530,"b'> What if I try to change the profile when a system is enabled / disabled / reset.\r\n\r\nThe [Late]Update try/catch is only for data providers. Services are covered by the handling in ExecuteOnAllServices* methods, which are called in most (very few exceptions) situations.\r\n\r\nAn earlier incarnation of this change had exception handing for all data provider methods (enable, disable, etc) and that was originally deemed unneccessary.\r\n\r\nHappy to revisit!'"
8050,440297180,"b""@keveleigh had a really good callout which I didn't see addressed and wanted to mention it specifically - if something fails to get a Update call, should it still get a LateUpdate() call? \r\n\r\nIt would probably be better here I think to defer actions on the list while an update loop is occuring, and make it so that if there's a register/unregister it will either get:\r\n\r\n1) deferred for register\r\n2) If unregister, we can augment the list with more metadata to indicate that it's pending destruction, so that queries for it don't resolve.\r\n\r\nI think otherwise you do risk getting weird behavior where the unregistration of one provider could halt progress for everyone else."""
8050,443015673,"b'I will investigate some more. \r\n\r\nFrom what I recall when investigating this before, the LateUpdate will not get called due to the shutdown / restore process that occurs. \r\n\r\nI _defintely_ want a cleaner solution here'"
8058,443734655,"b""Why the comment change from retry -> register? The parameter name is retryWithRegistrar + the name of this function is register so I would assume that it's trying to register."""
8058,443860122,b'mistake :)'
8105,446477518,b'\xf0\x9f\x91\x8d'
8906,518260916,b'Why not?'
8906,518293616,b'the thought here was to disallow because Destroy implies that the object is going away. I could1 100% be wrong here.'
8906,518332468,"b'upon further review, removed the check'"
8906,519020130,"b'Is this meant to use the Unity-defined `Debug.Assert`, or is this namespace correct?'"
8906,519020654,"b'good catch, looks to have been added by visual studio. i will remove\r\n\r\n'"
7833,422278936,"b""While testing this out, it seems like this gets called even when no MixedRealityToolkit script exists in the scene. This leads to:\r\n\r\n```\r\nException thrown while invoking [DidReloadScripts] method 'Microsoft.MixedReality.Toolkit.MixedRealityToolkit:OnDidReloadScripts ()' : NullReferenceException: Object reference not set to an instance of an object\r\nMicrosoft.MixedReality.Toolkit.MixedRealityToolkit.RegisterInstance (Microsoft.MixedReality.Toolkit.MixedRealityToolkit toolkitInstance, System.Boolean setAsActiveInstance) (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:720)\r\nMicrosoft.MixedReality.Toolkit.MixedRealityToolkit.OnDidReloadScripts () (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:1478)\r\n```\r\n\r\n`OnValidate` (I believe) only gets called on things actually present in the inspector, so it sorta guarantees that something will exist."""
7833,422279476,b'I wonder if we can get by with keeping `OnValidate` but using [`EditorApplication.delayCall`](https://docs.unity3d.com/ScriptReference/EditorApplication-delayCall.html) to postpone it outside the `OnValidate` scope?'
7833,422285164,"b""Also wonder if we can just stop calling `AssetDatabase.Refresh()` in `ProjectPreferences`, which seems to be the root of this issue (and some others). There's a comment saying \r\n\r\n>// Sometimes Unity has weird bug where asset file exists but Unity will not load it resulting in _instance = null. \r\n                        // Force refresh of asset database before we try to access our preferences file\r\n\r\nbut I haven't been able to repro"""
7833,422953448,"b""I also couldn't repro this one."""
7833,422979561,b'Nice catch Kurtis. '
7833,422979790,b'That works!'
7833,423155704,"b""I think this should be left as-is. The `Instance` getter also calls `RegisterInstance`, so we'd be calling it on the same instance twice here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/d50838d18f0f8445357a66a974c0fc8fe11cb14e/Assets/MRTK/Core/Services/MixedRealityToolkit.cs#L554\r\n\r\nSo either left as-is or made only a reference to the `Instance` getter, like we do with \r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/d50838d18f0f8445357a66a974c0fc8fe11cb14e/Assets/MRTK/Core/Services/MixedRealityToolkit.cs#L485-L486\r\n\r\nI think I prefer as-is, since then we'll be explicitly registering the instance of the script that's actually in the scene and getting its `OnValidate` called, instead of searching the scene like the getter does.\r\n\r\nWere you seeing cases where the existing code wasn't working as expected?"""
7967,430560523,b'```suggestion\r\n            // Calling the Instance property performs important initialization work.\r\n```'
8050,439656907,"b""@keveleigh  and @wiwei  double checking -- what's our policy on foreach loops? Not sure where we landed, want to make sure there is no perf impact."""
8050,439663986,b'it is easy enough to keep the for loop and catch a different exception \r\nwhichever makes folks happy :)'
8050,439674721,"b""Yeah, I'm not against `foreach` but I think I'd prefer to keep the loop as it was originally."""
8050,439714344,"b'Sounds good. I will restore the loops and update the exception handling,'"
8054,440287968,b'Nit: \r\nif ()\r\n{\r\n}\r\nelse\r\n{\r\n}\r\n\r\n'
8050,440289846,"b""foreach is fine - @luis-valverde-ms did some work a while back to check on this and I believe this hasn't been an issue since the non-year-named Unity releases."""
8050,440290805,b'Definitely going back to for loop in this case is better - as it stands this change adds more memory allocation on each frame.'
8050,440291190,b's/catch\\(/catch (/g\r\n\r\n'
8274,468222974,b'```suggestion\r\n### Test Utilities\r\n```'
8274,468223050,"b'```suggestion\r\nThe optional Microsocft.MixedRealityToolkit,.TestUtilities package includes a collection of utilities used by the Mixed Reality team to author unit and other validation tests.\r\n```'"
8274,468223145,"b'```suggestion\r\n| | TestUtilities | Methods to simplify creation of play mode tests, including hand simulation utilities. |\r\n```'"
8274,468223325,b'```suggestion\r\nThe Unity Package Manager version of the MRTK foundation package (`com.microsoft.mixedreality.toolkit.foundation`) contains most of the same content as the [asset package version](#foundation). \r\n```'
8274,468223518,b'```suggestion\r\nThe examples UPM package (`com.microsoft.mixedreality.toolkit.examples`) contains the same content as the [examples asset package](#examples). \r\n```'
8274,468223798,b'><< link to package contents page (make a reference to asset packages) >>\r\n\r\nIs this missing?'
8274,468223915,b'```suggestion\r\n- [Test utilities](#test-utilities-package)\r\n```'
8274,468224732,"b'Do we also want to upload the .tgz files to our releases, so people can download them and import to UPM via the [local tarball option](https://docs.unity3d.com/Manual/upm-ui-tarball.html)?'"
8274,468225817,b'```suggestion\r\n![Importing samples](../Images/Packaging/MRTK_ExamplesUpm.png)\r\n```'
8274,468225892,b'```suggestion\r\n![Extensions samples](../Images/Packaging/Extensions_Samples.png)\r\n```'
8274,468231048,b'```suggestion\r\n![Importing samples](Images/Packaging/MRTK_ExamplesUpm.png)\r\n```'
8275,468707457,"b'Correct, according to the Unity C# reference, `.Clear()` is called before anything is added: https://github.com/Unity-Technologies/UnityCsReference/blob/61f92bd79ae862c4465d35270f9d1d57befd1761/Modules/Subsystems/SubsystemManager.cs#L26:L29'"
8267,468748403,b'>Version: 1.5.0 - preview 7\r\n\r\n@CDiaz-MS @davidkline-ms I feel like I remember we had been running into issues between preview 6 and preview 7?'
8270,468748842,"b""Ahh true, after the clear, the subsystems are added to the list. Though, as long as the display subsystems stays the same count, it shouldn't be reallocating, right? `Clear()` without `TrimExcess()` keeps the original capacity I thought, and it looks like the subsystems are [copied in directly](https://github.com/Unity-Technologies/UnityCsReference/blob/61f92bd79ae862c4465d35270f9d1d57befd1761/Modules/Subsystems/SubsystemManager.cs#L35-L44). (Though, if it stays the same count...there's no need to call it multiple times? I'll investigate)\r\n\r\nI think that after https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8275 is merged, this can be converted into making a call into that, which should only call `GetInstances` when the current display subsystem stops running (or one never starts up)."""
8256,468750630,"b""There's also a Unity-defined epsilon! https://docs.unity3d.com/ScriptReference/Mathf.Epsilon.html"""
8271,468805312,b'Followed up offline. Resolving this and merging!'
8275,468825866,"b""According to the AR Subsystems documentation at https://docs.unity3d.com/Packages/com.unity.xr.arsubsystems@2.1/manual/index.html:\r\n\r\n>You may only have a single subsystem per platform.\r\n\r\nIt's referring to the scenario of a specific type of subsystem, not all subsystems, but does appear to confirm that you can only have one mesh provider running at a time."""
8270,468831206,"b'Reworked this to call into the `XRSubsystemHelpers` class, which handles the lifetime of the cached subsystem better than this code did.'"
8267,469372723,"b'```suggestion\r\n> This installation checks (when the application starts) if the AR Foundation components are in the scene. If not, they are automatically added to make it work with ARCore and ARKit.\r\n```'"
8267,469373009,"b'```suggestion\r\n> For more information about AR Foundation components and installation, check this [documentation](https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@2.2/manual/index.html#samples).\r\n```'"
8290,469575392,"b'Should this be added with the same file name, so the old image is replaced? Or should we just delete the old image?'"
8306,470836779,"b""Should `PublishUpmPackages` be added to [our settings file](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/pipelines/config/settings.yml) so it's checked in? Where is it defined?"""
8306,470837490,"b""We might want to explicitly pass the parameter in via the pipeline tasks too, so it's clear which pipeline will publish or not by looking at the yaml."""
8294,471686147,"b'Correct, if legacy XR is active the subsystems should all not be running (if any are installed) and this helper call here will return null.'"
8307,471749882,b'Looks like this script is using tabs for indentation. Please convert to spaces to match the repo.'
8307,471750046,b'Can this use `Application.isEditor` instead?'
8307,471750905,"b""This feels somewhat like an example script, or at least not an SDK script that's specific to the pulse shader."""
8307,471753683,"b'It feels odd to me that this needs to be a global listener but the `OnPointerClicked` assumes the pointer will have a hit point on the mesh. Can this instead be a focused listener on the parent object of the meshes? That way any mesh that gets tapped will have the event propagate up to the parent, and it can gather them all.'"
8307,471754382,"b""Please update all the fields to be `private` with `public` property accessors if needed, to follow [the repo's guidelines on encapsulation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).\r\n\r\nThere are also a couple that appear to use Hungarian notation (like this bool starting with `b`), which isn't a standard we've used in this repo. They should be updated to just the names."""
8259,471780658,b'Updating the namespaces will also allow devs to import this side-by-side with the original MRTK-Quest extension without type collisions.'
8259,471783862,"b'Actions shouldn\'t be hardcoded like this. It should instead be read from the controller mapping profile\r\n\r\n```suggestion\r\n            new MixedRealityInteractionMapping(0, ""Spatial Pointer"", AxisType.SixDof, DeviceInputType.SpatialPointer),\r\n```'"
8259,471784222,"b""Several of these overrides seem like they shouldn't be in `#if OCULUSINTEGRATION_PRESENT`, since they're used at edit time to fill in the mapping profile and might throw errors if the Oculus SDK isn't installed"""
8259,471787422,"b""Do we need this file if we're using our own device manager?"""
8259,471788015,"b""Should this stay in the ThirdParty folder, given that it's being brought in a bit more to the MRTK? Keeping it here would also interfere with anyone who imports the original extension on top of MRTK 2.5."""
8316,471806661,b'Should the UPM packages be published to `artifacts` here too?'
8328,472683609,"b""I forgot to call this out in the PR description. This is a new field from #8127, and, since this profile was reserialized when I made the data provider change, Unity added it to the serialization with the default value.\r\n\r\nThis will be okay to check-in, otherwise it'll keep adding itself anytime anybody edits the asset. """
8324,473191758,"b'Since these two tasks are almost identical, is there a way to just use the `${{ if` clause to include/exclude `-ExcludeBuildNumber`? I think the display name is the only other difference, as far as I can tell'"
8334,473192098,b'Intentional change?\r\n\r\n```suggestion\r\n- davidkline-ms\r\n```'
8327,473194007,"b""If there's a way to put a link in here, do we want to have a link to the issue in the comment above (https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8326) for more info about the crash?"""
8259,473256603,"b""Do we want to make this more generic, like `OculusHand`? I assume in the future, Oculus will ship different headsets with different names that also have hand tracking, and it feels like this code would work there too and isn't specific to Quest."""
8259,473259382,"b'Do we need / use these scripts in the Debug folder? This one also seems like duplicate functionality to the Follow solver, which allows you to select a specific joint to follow:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/8a2b2f56e649244bad69f20e6f59fceca6782fbe/Assets/MRTK/SDK/Features/Utilities/Solvers/SolverHandler.cs#L64-L66'"
8259,473260877,"b""Are these the same GUIDs from the original repo? We probably want to regenerate them, so there aren't GUID clashes for anybody who already has the original extension installed when they update MRTK (or installs later)."""
8259,473262649,"b""Do you know if there are any differences between this profile and the default in this repo other than the extension controllers being present? We might not need to include some of these profiles and can just use the main repo's default, since I see the new types being added to it in this PR."""
8327,473292997,b'Is this meant to reference MSB4U?'
8339,473376316,b'```suggestion\r\n\r\n```'
8339,473377430,"b""Nice! Doesn't have to be in this PR if we want to keep the scope to Leap, but should we update the rest of the configuration checkers to use this new method?"""
8339,473377696,"b'Nit:\r\n\r\n```suggestion\r\n            text.text = ""The Leap Data Provider can only be used on the UWP platform in the editor and NOT in a UWP build."";\r\n```'"
8339,473378961,"b'Do you consider this case an error, or should it just silently return since the reference is present either way?'"
8339,473381302,"b""Do the menu items need to be made public for something else to call them? Or should they be left private so they're only call-able via the menu item?"""
8339,473382720,b'Is this a path change for 4.5.1? Or is it also the path for 4.5.0?'
8339,473399636,b'Oh good point!'
8307,474170320,"b'I believe `CoreServices.SpatialAwarenessSystem.SpatialAwarenessObjectParent` should give you the parent used for any meshes, right @davidkline-ms?'"
8356,474987988,b'Should we go the other way and update all references to match the class name?'
8259,474989585,"b""Ooh, I'm not sure we should check this one in. We'd need to double check the license. Is this used for the hand support, or in an example scene?"""
8259,474989863,b'Is this included in the Oculus package?'
8259,474990131,"b'We might want to drop the `locale`, so it defaults to wherever someone is browsing from:\r\n\r\n```suggestion\r\nA [Oculus Quest](https://www.oculus.com/quest/) is required.\r\n```'"
8259,474990681,"b""My previous comment seems to have dropped off: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8259#discussion_r473256603\r\n\r\n>Do we want to make this more generic, like `OculusHand`? I assume in the future, Oculus will ship different headsets with different names that also have hand tracking, and it feels like this code would work there too and isn't specific to Quest."""
8259,474991058,"b""If this represents a prefab, can it just be a `GameObject` reference? That way it doesn't have to be in `OCULUSINTEGRATION_PRESENT`, which we've had issues with in the past when serialized fields are in `#if` blocks."""
8259,474991856,"b""I know most of this is coming from the other repo, but this feels like a weird thing to store in the profile (is this a profile? it feels like it's somewhat a profile but used differently)"""
8259,474992901,"b""Maybe a stretch goal, but it'd be great if we eventually reconcile this class with the [ArticulatedHandDefinition](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MRTK/Core/Providers/Hands/ArticulatedHandDefinition.cs) class, which tries to standardize several common hand concepts, like these default interactions.\r\n\r\nOther hand classes use it like https://github.com/microsoft/MixedRealityToolkit-Unity/blob/0fa524aa93b255b0a6710ce913be3a5782d1093c/Assets/MRTK/Providers/LeapMotion/LeapMotionArticulatedHand.cs#L43"""
8259,474993360,"b""Should all this teleport logic just be removed, since it's commented out? I think there are some other references to it, and some custom teleport classes being checked in (like CustomTeleportCursorHandler) and a CustomTeleportPointer reference higher up in this class."""
8259,474993526,b'Comment references HL2. Might need updating / removing'
8259,474993824,b'A couple typos throughout this `skelton` -> `skeleton`'
8259,474994417,"b""This is maybe a larger question, but do you know if we're able to talk directly to whatever APIs this avatar prefab gets the hand data from instead of needing dependencies on in-scene components from another SDK / toolkit?"""
8356,474996480,b'Physics sounds more natural to me'
8259,475011498,"b""Yeah definitely! At that point you'll be in code that's probably already wrapped in `OCULUSINTEGRATION_PRESENT`, so it'll be good"""
8259,475016140,"b'I wonder in this case if we need a dependency on something in the Oculus package for rendering, or could we use [the rigged hands](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7993) that were added recently? Since I think they\'re based on the joint events, it should ""just work""\xe2\x84\xa2 and it\'ll be done in a bit of a more cross-platform way'"
8348,475034614,b'Missing namespace in the new file'
8348,480477221,"b'Oh sorry, I said ""namespace"" but meant ""license header""'"
8386,480512635,"b"">doesn't provide the ability to add extra input actions, and the parabollic pointer needs a Vector2 action to work.\r\n\r\nCould you fire an arbitrary input event based on a teleport input action mapped in a device manager profile? For example, have a\r\n\r\n```\r\n[SerializeField]\r\nprivate MixedRealityInputAction teleportAction;\r\n\r\npublic MixedRealityInputAction TeleportAction => teleportAction;\r\n```\r\n\r\nIt seems like there's already code to handle this case:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/4e60a8bcbde64dd05fd86062b314736b6d7d629f/Assets/MRTK/Providers/Oculus/XRSDK/MRTK-Quest/Scripts/Input/Controllers/OculusHand.cs#L336-L339\r\n"""
8386,480512960,"b'I know this is already-merged code, but this `MRTKOculusConfig.Instance` pattern goes against a lot of the established MRTK patterns. This feels like a lot of it should be part of a data provider profile, with accessors on the data provider instead of on some singleton ScriptableObject.'"
8386,480514172,"b""Can we do this without adding another third party dependency? It's great if people can optionally pull that repo and assign sounds, but I don't think we should pull it into this repo (especially since it comes with its own, non-MIT license)."""
8386,480516806,b'We already have a blue (and other colors) material. Can we use those instead? https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MRTK/StandardAssets/Materials/MRTK_Standard_Blue.mat'
8386,480517608,b'Would also help with an assigned teleport action (referenced at https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8386#discussion_r480512635)'
8259,480520269,b'@RogPodge Did this get looked into or was it added?'
8386,480741168,"b'Ingesting repos like this can lead to GUID clashes (easily fixable, yeah) and getting out of sync with the source. It\'d be good to include a guide or pointer to using both of these together in an app, but I feel like adopting the license and importing the files are decisions best left to devs, plus they\'d be getting the latest and greatest audio clips instead of whenever we decided to snap.\r\n\r\nWe also already have a set of audio clips: https://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk_development/Assets/MRTK/StandardAssets/Audio \r\n\r\nHover Click.wav sounds somewhat similar (at least in intent) to several of the existing clips (ButtonPress, or Manipulation_Start for a louder version, or maybe Shell_Click_In or Select_Secondary).\r\nNew Object Interaction.wav does sound a bit different than any of our clips, but we have existing ""interaction"" noises throughout that could be the default.\r\n\r\nI feel like providing a consistent set of audio clips, with guides on other sets to use (like the MRTK-Audio repo) would be better than pulling these in ourselves. Adding @cre8ivepark if we feel like certain sounds are missing from the default set.'"
8307,481324723,b'A diff shows almost entirely shared code between this and `SurfacePulse`. Could this inherit from that class and override where needed?'
8307,481325739,b'We might want to add `FormerlySerializedAs` tags for all these field renames.'
8307,481522358,b'Do we want the `Debug.Log`s?'
8451,482170395,"b""Please add a `<summary>` here to describe when / how this should be used.\r\n\r\nAlso, since it's only currently used by other input simulation classes, could it be `internal`? Or do you expect this method to need to be called manually by a dev as well?"""
8451,482172415,"b""slight nit, but we've tended to be explicit with null checks in this repo:\r\n\r\n```suggestion\r\n                if (CameraCache.Main != null)\r\n```"""
8386,482182581,"b'We may also want to check that the `teleportInput` value has actually changed. I might be missing it, but is there currently a guard for that or will it be sending a constant stream of `Vector2.zero` when not in teleport pose?'"
8386,482610065,"b""nit on the capitalization of `SettingsProfile`, since it's a private field"""
8386,482610717,"b'```suggestion\r\n    [CreateAssetMenu(menuName = ""Mixed Reality Toolkit/Profiles/Mixed Reality Oculus XRSDK Profile"", fileName = ""OculusXRSDKDeviceManagerProfile"", order = 4)]\r\n```'"
8386,482612606,"b""We might want to change the pattern here, since we've tried to hold off on the pattern of changing the profile at runtime. Could the hand material be set on the device manager instead (or really, I feel like it should be applied directly to the rigged hands instead of asking this class to do it)?"""
8386,482612755,b'```suggestion\r\n  isCustomProfile: 0\r\n```'
8386,482612801,b'```suggestion\r\n  m_Name: DefaultOculusXRSDKDeviceManagerProfile\r\n```'
8386,482612898,"b'Might want to change the asset name too, to follow our other profile names'"
8386,482613442,b'Looks like one License.txt was updated but this one still has the old verbiage'
8386,482614276,b'nit on [the capitalization](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions) of these private fields (camelCase vs PascalCase)'
8386,482615203,"b""This one's maybe a larger undertaking (unless we just remove this ability (for now?)), and since it's already present we could hold off on making this change during this initial round"""
8488,485185689,"b'To keep the original formatting?:\r\n\r\n```suggestion\r\n        private static readonly string GLTFModelsPath = $""Common{Path.DirectorySeparatorChar}Gltf{Path.DirectorySeparatorChar}Models"";\r\n```'"
8386,485211109,"b'Do we need to do all this manual pointer management now that we\'re only using the ""official"" teleport pointer? This feels like a case that should be handled by the pointer mediator.'"
8386,485211464,"b'Another question about manually managing the teleport pointer now that we\'re using the ""official"" one. I don\'t think any other input source manages this manually. Do you know why we need to do so here?'"
8386,485211783,b'Looks like this is bringing in some mrtk_dev changes :/'
8386,485212132,b'Yep mrtk_dev was merged with https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8386/commits/44e59b453de82fda5308f036b6c5aeb717166f07'
8386,485215937,"b""You're probably gonna need to rebase out the merge commit from this branch. Committing https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8386/commits/177f4df6ce0a28cdc1d56b9d0976e05e87583b46 will revert the changes in mrtk_dev when we sync stabilization to dev, which we don't want."""
8488,485249577,b'Should this line be restored? Feels necessary'
8386,485261665,b'Does this need to be `public`?'
8386,485261866,"b""Also, since it's a property, [should be `PascalCase`](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions)"""
8058,445241803,"b'There\'s an edge case I found that this does not work for:\r\n\r\n1. Texture you are looking for is under ""StandardAssets"" subfolder, under the ""PackageCache"" folder.\r\n\r\nthis set of if statements sets the token to be ""assets"" in that case.'"
8058,445683085,"b""Good catch! Thanks @julenka! I'll add a fix (and test case)"""
8058,445740313,b'fixed and new edge case tests added'
8379,476581798,b'Are we going to need a menu item for manual initialization like the others?'
8379,476600872,"b""Good question! Nope - in this case since the other functions already handle this lazy-init, the menu based thing isn't necessary."""
8105,445839994,"b'For cases when MRTK is installed via UPM, will this actually put the link.xml file in the Packages or PackageCache folder, instead of assets folder?'"
8105,445840800,"b'It should be created in MixedRealityToolkit.Generated, in Assets.'"
8105,445840909,b'Just like custom profiles'
8105,447102234,"b'```suggestion\r\n            ""    below (in the previous example, we would remove the TeleportSystem below). \\n"" +\r\n```'"
8105,447106185,"b""What are your thoughts for going forward - if we have to add a new assembly to that list, but they already have an autogenerated one, we're gonna tell them to just delete the link.xml to regenerate a new one right?"""
8105,447118739,"b'For 2.5, it would be solved by documentation (""add these lines if you customized, delete the file if you didnt""). Ideally, we would add some UI in a future release.'"
7869,426741134,"b'It looks like this `MenuItem` has the same name as line 17 (same with the other two `MenuItem`s). Should this one be something like \r\n```suggestion\r\n        [MenuItem(""GameObject/MRTK Debug Utilities/Validate Renderer"", true, 41)]\r\n```\r\nthough, it also doesn\'t look like this prints anything?'"
7869,426754460,"b""it's intentional that it has the same menu item - the validation method will just make sure that menu item is grayed out - (you flag a validation method by the bool in the menuitem attribute)"""
7869,426755134,"b""ahhh but now i just realize that this one has the wrong priority - which didn't seem to bother unity for some reason - but i'll patch it up anyways :D , should be 40, not 41"""
7869,426794747,"b""Oh cool! I didn't realize that was a thing, awesome!"""
7730,416754819,b'Why not use the public property InstalledSpatializers?'
7730,416757350,"b'So I guess this utility wont catch changes to the list where the number stays the same, but the plugins change right?'"
7730,416763529,b'Updated'
7730,416976612,b'Correct. That was out of the scope of this implementation. It is likely a fairly corner case (ex: uninstall unused spatializer x and install new spatializer y) between project loads.'
7855,424042740,"b""I think the only odd side effect here is that if the spatializers do change (i.e. added/removed) then we won't pop up - i.e. it's odd that if you have one configured it will show up on spatializer count change, but not when it's not selected.\r\n\r\nIt's almost like that should be moved first then to work around that?"""
8873,514540301,"b""Can we make this a property, to try to reduce the number of `public` fields we have and so we won't need the `NonSerialized` tag?"""
8873,514540451,b'Should these be implemented?'
8873,514542848,"b""Also, nit, but since these aren't methods we expect to be called manually, could these be [implemented explicitly](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/interfaces/explicit-interface-implementation)? That way the methods are hidden from our docs and intellisense, but still callable by Unity."""
8873,514582813,b'I do not think so as we are not doing serialization with GLTF objects at the moment.'
8873,514593810,"b'Oh, true!'"
8873,519975250,"b'For completeness, in case these scripts ever get used elsewhere for serialization, it might be good to implement `OnBeforeSerialize()`'"
8873,520595455,b'The Private and public fields do not seem connected.  Was this intentional or has something been missed?'
8873,520735699,"b'Ok, I think I see your reasoning, separating the serialization from the access via enum.'"
8873,520766833,"b""Unity's deserializer doesn't handle enums the same way the glTF spec does. The spec serializes them by string, while Unity serializes them by int value, so this has been broken since it was first contributed.\r\n\r\nThese are connected via the `ISerializationCallbackReceiver` events below. Unity deserializes it as a string and it's converted into the enum."""
8873,515395913,"b""Does this work in the UWP build? For some reason I feel like I remember `default` vs `default(GltfComponentType)` isn't allowed in the versions of things Unity uses"""
8873,515432110,b'I have confirmed that it indeed works on HL2.'
8873,519976053,"b""Interesting that this one was already PascalCase. Is that how it's serialized? Or was this deserialization (even more) broken before?"""
8873,520285087,b'The latter is the case.'
8873,520603823,"b'Additionally, a string CANNOT have a default of None, the correct ""empty"" default for a string is String.Empty.'"
8873,520767496,b'Much of this is moved to the `ISerializationCallbackReceiver` handlers below. The default is still there.'
8873,520767542,"b""Why can't it be null? It's a reference type."""
8873,520608716,"b'Why have you removed the Region?  These are there to help organize the code, please revert.'"
8873,519977518,"b""Was this another previously incorrectly named field? Seems like it's been renamed to `minFilter`"""
8873,520284241,b'Yes'
8873,520613253,"b""In this class, you have correctly reset the value to the default specified by Khronos, but in other classes you haven't.  \r\nCan we ensure the change is consistent and either preserves the default or does not."""
8873,520768118,"b""Can you point out cases where the default is dropped? I can't find any."""
7846,423354670,b'```suggestion\r\n    /// <summary>\r\n    /// Provides data accessors and conversions useful while reading and using glTF objects.\r\n    /// </summary>\r\n    public static class GltfConversions\r\n```'
8873,515397092,"b'Can you think of any way to make this a non-breaking change? I\'m not coming up with anything at the moment, since the (newly private) backing fields have to match the file\'s field name (unless there\'s a tag or something to say ""this field is serialized with this name even though it\'s named differently""?)'"
8873,515400723,b'I tried but noting came to mind (I even remember trying `FormerlySerializedAs` with no luck).'
8850,512993431,"b""Do you need to edit the underlying array? Or just need access to the data?\r\n\r\nIf you just need access, I recommend this property returns an `IReadOnlyList` instead, to align with [CA1819](https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1819) and inform the caller that the list shouldn't be changed.\r\n\r\n```suggestion\r\n        public IReadOnlyList<Vector3> Positions => positions;\r\n```\r\n\r\n(if you accept this change directly, you'll need to add `using System.Collections.Generic;` as well manually)"""
8850,513276613,"b'yes, I just need underlying data'"
8850,513358436,"b'@keveleigh, I have some other commits after 1776dc4. I just wanted them to exclude from this pull request. Can you help me on this? Thanks'"
8850,513587266,"b""@SGHolospace Yep! It looks like, from your branch, you should be able to call `git reset 1776dc4140dd694a23a66276e28e8a889075b807`, which will reset your branch back to that commit https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8850/commits/1776dc4140dd694a23a66276e28e8a889075b807. Then, you'll need to call `git push -f` to force push your remote branch and remove the two extra commits."""
8000,433359348,"b""I think we still need some mechanism for detaching everything that's currently under the playspace. Otherwise, the next line (`UnityEngine.Object.Destroy(mixedRealityPlayspace.gameObject);`) will destroy the playspace and all its children, including any custom hierarchies. From reading your description, I'm assuming the camera is still under the playspace _somewhere_, even if it isn't a first tier child, which means it'll be destroyed too."""
8000,433447707,b'Yeah the camera definitely needs to stay under the playpsace. \r\n\r\nHere is how it currently looks in MRTK-Quest.\r\nCenterEyeAnchor is the main camera\r\n![image](https://user-images.githubusercontent.com/7420990/83447223-1a926f80-a41e-11ea-8985-7e84424b2ad3.png)\r\n'
8000,433448543,"b""One thing to consider with this, is that I'd like to instantiate the Oculus rig at runtime so that all these oculus specific scripts aren't included in the scene if you're not working with Oculus. \r\nIdeally Id be able to destroy the camera currently in place, and replace it with it with this rig at runtime, but it seems the gaze pointer leaves behind dangling references when destroyed at runtime."""
8000,433449201,"b""Regarding your point on destroying whats under the playspace, I don't think that's really a problem in my case, but I do agree that considering how to properly detach things makes sense. I just didn't wanna do some aribtrary detaching that could in fact hinder the destruction process."""
8000,436210592,"b'@provencher, have you taken a look at how the UnityAR camera settings provider manages required camera and playspace components? \r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/releases/2.4.0/Assets/MRTK/Providers/UnityAR/UnityARCameraSettings.cs\r\n\r\nNote, the above link is to the 2.4.0 implementation'"
7605,401821447,b'super nit\r\n\r\n```suggestion\r\n        private static readonly RaycastHit[] RaycastHits = new RaycastHit[MaxRaycastHitCount];\r\n```'
7605,401824376,"b'I wonder if just changing to use `RaycastNonAlloc` here too would be more performant? Even though we only have one layer mask and can let Unity handle the first hit, are we still allocating?'"
7605,401833329,b'I know the previous implementation is already `public` but...do you think it needs to be? These feel like implementations internal to the raycaster.'
7605,401837765,"b'reducing visibility is a breaking change. i wanted to avoid breaking anything,'"
7605,401838419,"b'good question. if we created a single element array, there would be no need for Unity to allocate the return'"
7605,401838650,b'same could be done for spherecast as well'
7605,401847616,"b""This one's a new method signature though, right?"""
7605,401855186,b'updated.'
7605,401856480,"b""I wonder if there's a perf gain to be had by only raycasting against the layer masks in `prioritizedLayerMasks` instead of `UnityEngine.Physics.AllLayers`?"""
7605,401858889,b'Also realized that this leads the single layer mask case to raycast all the way to `maxDistance` instead of just the first hit object. Which also means the `TryGetPrioritizedPhysicsHit` method has to iterate through all hits to find the closest one. Are you seeing any perf differences here?'
7605,401907080,b'i think i will go back to the previous single layer impl and investigate the new method in another pass'
7605,401907688,"b'not sure, but at least the raycaster should ignore irrelevant layers. should investigate in a separate pass\r\n'"
7605,401935294,b'true. the intent was to enable the nonalloc form of raycast to be used in place of the original. do you think we should make this one private?\r\n'
7605,401935739,"b""I'm fine with either. My gut says to start `private` and expose if needed"""
7605,401936426,b'done'
7748,418625929,"b'Whoops, not sure where my originally referenced comment went:\r\n\r\nTo prevent this from being a breaking change for any dev who might use this API in their own app, we should keep these two methods around and tag them with `[Obsolete(""Use PlatformUtility.IsPlatformSupported instead, which accounts for both the in-editor and runtime case."")]'"
8424,481305428,"b""I had no idea, that's nuts!"""
8487,485141235,b'Latest changes approved on #8424'
7531,391924683,b'Is there a reason these went from public to private'
7531,391924575,b'Is there a reason this went from public to private'
8424,481309342,b'I noticed that we always turn the keyword on now. Does this still work as expected when a renderer is added to a inactive clipping primitive (ie the renderer should not be clipped until the clipping primitive is activated)?'
8424,481311928,"b'Is this being used anywhere? Maybe a good name would be ContainsRenderer? Or something akin to ""this primitive currently influences this renderer. Just because ""Check If Clipped"" might be interpreted as ""is this renderer straddling the clip vs not-clipped threshold?""'"
8424,481312768,"b""I'm always hesitant to use the hasChanged flag since you are unsure who else is mutating it. But, I can't think of any other way to achieve this optimization. """
8424,481382009,b'I added this to check renderers instead of making a copy of the renderers on every frame from scroll. But currently not using it. Can delete it or rename it.'
8424,481424186,"b""I'll leave it up to you! Just was curious why it was added. It might be a good API to have for developers (or we might not want to bother supporting it). """
8424,482095844,"b""I've removed. We can add it if we need it."""
8424,482099858,b'Renaming for something relative to any kind of changes. Other name ideas are welcome.'
8424,483307941,"b""Just a heads up I don't think this was removed."""
8487,485141333,b'Latest changes approved on #8424'
7531,391924368,b'Is there a reason this went from public to private'
7531,391930257,"b""Yes, I'm glad you asked! That is so users can extend these classes as outlined in the new documentation: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/6882e739656f792ee1c7c56cfd4a183ea46a843d/Documentation/Rendering/ClippingPrimitive.md"""
7531,391948083,"b""can you add comment explaining what this should be? Since it's targeted to be extended. Same for others"""
7531,392411021,b'Good idea all! Added some comments. '
8842,511160293,b'Nice! \xf0\x9f\x91\x8d '
7527,391578199,"b""Will this now cause the conversion every time this property is accessed, or does the `downloadHandler` cache it? If it'll now be converted on every access, could this class cache it on first access in case it's called multiple times?"""
7527,391584471,"b""I guess it's getting converted everytime. At least nothing else is said about this in the docs:\r\nhttps://docs.unity3d.com/ScriptReference/Networking.DownloadHandler.GetText.html"""
7527,391592518,b'Should this be cached too?'
7527,391596017,"b""jup, just did it.\r\nNow the cache is read in the case the constructor with concrete values is used and in the other case it's written to by accessing the callback first if there is one."""
7527,391599390,"b'Perfect, looks good to me!'"
8017,435505332,"b""While we usually like to avoid breaking changes, it's hard to guarantee (i.e. this is clearly a case where having UseSSL defined on the DevicePortal scope actually makes more sense both from a locality-to-other-SSL-configs, and also because frankly it's not used anywhere in this file).\r\n\r\nI was debating in my head if we should keep this around but actually leave the Obsolete attribute on it (i.e. so that it doesn't break people immediately on getting the new upgrade), but actually I think that this is a specific case where both:\r\n\r\n1. Unlikely that people are directly touching this given that it's kinda an implementation detail of the device portal feature.\r\n2. I think forcing the error to show up (and also, the solution is super easy) provides a reasonable balance and velocity to getting things fixed for the user.\r\n\r\nThe only ask here I think is that we add some breaking change notes to ReleaseNotes.md (after this PR goes in: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8018) similar to how this commit added instructions:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/commit/204f06de25c9122afd782bb7d60c573e3af340dd"""
8017,435506660,"b""Was just thinking through these same things, especially around\r\n\r\n>frankly it's not used anywhere in this file\r\n\r\nwhich just seems weird to me. Agreed fully with everything you said."""
8017,435507837,"b'For this function and all of the other ones that take CertificateHandler as an optional thing, make it so that CertificateHandler is the last parameter i.e. instead of this:\r\n\r\n```c#\r\n public static async Task<Response> PostAsync(string query, WWWForm formData, Dictionary<string, string> headers = null, int timeout = -1, CertificateHandler certificateHandler = null, bool readResponseData = false)\r\n```\r\n\r\nto this:\r\n\r\n```c#\r\n public static async Task<Response> PostAsync(string query, WWWForm formData, Dictionary<string, string> headers = null, int timeout = -1, bool readResponseData = false, CertificateHandler certificateHandler = null)\r\n```\r\n\r\nThe reason is that the first way breaks existing callers (i.e imagine someone who calls this way:\r\n\r\n```c#\r\nPostAsync(query, formData, headers, 100 /*ms*/, true /*readReponseData*/) \r\n```\r\n\r\nThis person is now broken because the bool that used to work is swapped for a different thing.'"
8017,435508985,b'I can add this to out coding guidelines to so that we can just point to a link going forward.'
8017,435510609,"b""Since this value defaults to true (i.e. disposeCertificateHandlerOnDispose = true by default), callers of the various functions here might expect that all of the function above (i.e. ones that use ProcessRequestAsync) actually dispose of the certificate handler for them - i.e. they're used to this functionality by default because of how UnityWebRequest usually works). Whether or not this assumption is true (i.e. I could very well be wrong here), it's probably still worth calling out explicitly (i.e. adding a <remarks></remarks> section to all of functions above like DeleteAsync, PutAsync, etc) that the certificate handler will not be disposed of after the web request is made (and that if you need it to be disposed, you - i.e. the caller - will need to dispose of it)"""
8017,435512705,"b""For cases where you access it using named params it doesn't affect you but if you do the 'classic' way it can bite"""
8017,436490155,"b""That was my thinking as well. Someone that uses `Rest` to implement another REST API, may stumble upon `UseSSL`. Changing it wouldn't actually have any effect on their REST calls, though as side effect changes the behavior of the `DevicePortal`. """
8017,436491076,"b""I just noticed, I haven't updated the in-code XML documentation with the new parameter."""
8773,502089858,"b""I wonder if it'd be better to leave this meta around and delete the ET-specific one instead. This one feels like it's in a more used location?"""
8773,502092944,"b""Commenting on this for ToggleGazeSource.cs: I think it should be removed from the prefab instead of moved to the SDK. It's a pretty specific example script at the moment, and also isn't in use after https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7902"""
8777,502656551,"b""Should the scripts that were moved have their namespaces updated? Having an SDK script in the `Examples.Demos` namespace feels odd (commenting here since i can't comment directly on the scripts)"""
8777,502657504,b'Woah I guess I somehow missed that this was a top-level MRTK folder. That feels SUPER weird to me. How do our .unitypackages work with that?'
8777,502658252,"b""Since all of this is hardcoded, can we just put it directly in the package.json instead of patching it at build-time? Doesn't look like it'll change (as opposed to the examples script that changes dynamically as examples are added)."""
8777,502662046,"b""Can it live in Services/SceneSystem? Or even wherever it used to live, but we just move them out before packaging for UPM so they aren't duplicated? Or am I missed a reason they needed to be standalone?"""
8780,502720848,b'Does it also delete the `Samples~` files? Does it need to?'
8780,502721143,"b'Nevermind, already handled on the previous lines :)'"
8777,503404452,b'Does this need to call into `base.SetVisibility`? @RogPodge \r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/ba230dee9f8a61dee35be89d2570317339f3d234/Assets/MRTK/SDK/Features/UX/Scripts/Cursors/BaseCursor.cs#L216-L223'
8786,503454783,b'Do we need these in all the other packages too? I think I just see Foundation and Examples'
8786,503455050,"b""We'll probably need unique metas for each package this gets copied to. Otherwise there will be GUID collisions when multiple packages are installed."""
8786,503455178,b'At least LICENSE and maybe CHANGELOG?'
8786,503575316,b'Is this change intended for this PR?'
8786,503575967,"b'Instead of having multiple copies of each of the .md files (which could get unwieldy when we need to update the contents in all places), can we just have multiple copies of the .meta files that get copied in during packaging? And copy the existing .md files from the root for all packages'"
8786,503577453,"b'In a different project, I had a UnityMetas folder in the CI/packaging scripting folder and copied them in when relevant. We could have something like NOTICE.md.meta.examples and `Copy-Item -Path ""$projectRoot/packaging/UnityMetas/NOTICE.md.meta.$entry"" -Destination ""$packagePath/NOTICE.md.meta""` or wherever\r\n'"
8786,503580935,"b""Hrm yeah, strange. It's in this commit for some reason https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8786/commits/8cc16e7e3edb13f1742e141e76779ba65142ee1c"""
8786,504087217,b'The name on this file has two `.md`s'
8786,504089693,"b""I'm not sure if this path matches where the meta files ended up or how they're named"""
8786,504090536,"b'(I think I like generally the path represented here though, over a new root-level UPM folder just for metas)'"
8786,504091393,"b'(ah, though packaging would be a new root-level folder too. nevermind!)'"
8786,504120887,b'```suggestion\r\n        # A documentation folder was created. Remove it.\r\n```'
8794,504826548,"b""Is there any way we can build this into the existing WMRProvider? I think both providers will raise events for both the existing WMR motion controller and the upcoming HP controller, so even this one isn't specific to the new hardware, just the new API."""
8794,504828558,"b'Or even make it an ""either/or"" situation where we keep the legacy provider and document that this new provider is needed for the new controller and this provider handles all WMR controllers. I feel like it\'d be great if devs didn\'t need to change anything though!'"
8804,505703267,"b""Can this follow a pattern like the one introduced in https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8286, so it doesn't try to run every time the assemblies are reinitialized? This feels like a process that only needs to happen once, and then it should be in a good state."""
8804,505703688,"b'Should this just be `EnsureShaders()`? Since that method calls `ImportShaderFiles()` itself, this is potentially calling it twice.'"
8804,505704373,"b'Potential null ref here, if `FindShaderFolderInPackage()` falls through to its `return null` case.'"
8804,505708139,"b""Can we search for this via GUID or something instead? The more we assume things are in `Library/PackageCache`, the less possible it is for users to use MRTK as an [embedded](https://docs.unity3d.com/Manual/upm-embed.html) (which is easier to solve, if we check `Packages` as well like [MRTKFiles](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/31ff4c9111b4a2c9bcda58e5db2136a44eca65f8/Assets/MRTK/Core/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs#L256) does) or [local](https://docs.unity3d.com/Manual/upm-localpath.html) package (and the harder it'll be for us to enable that if it's blocked!)"""
8804,505708325,b'Urg but I guess GUID might not be visible since this is in a `~` folder...'
8804,505708831,"b'And `EnsureShaders()` has a guard with `AssetsContainsShaders()`, in case MRTK is imported via .unitypackage and already in the Assets folder'"
8804,505713823,b'Which I think will be the case when the repo project is opened or MRTK is imported via .unitypackage'
8804,505714165,b'Tested by pulling this branch down and opening in Unity:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/96164805-9d4d3000-0ed0-11eb-9e98-825ba12fd56e.png)\r\n'
8804,505738923,b'\xf0\x9f\x91\xbb'
8804,505739287,b'```suggestion\r\n        /// Checks to see if the Assets or Packages (if embedded) folder trees contains the MRTK shaders.\r\n```'
8800,505750932,"b'```suggestion\r\n        - Open the **Input Data Providers** section, select **Add Data Provider** at the top, and new data provider will be added at the end of the list.  Open the new data provider and set the **Type** to **Microsoft.MixedReality.Toolkit.XRSDK.Oculus > OculusXRSDKDeviceManager**. Set the **Device Manager Profile** to **OculusXRSDKDeviceManagerProfile** or a custom cloned profile.\r\n```'"
8805,505929703,b'Should we add the two PRs just merged?'
8805,505929895,b'I think this has to be\r\n\r\n```suggestion\r\n> [!NOTE]\r\n```'
8794,505930884,"b""I don't think this needs this flag, since it doesn't use custom mappings from the profile. We'll want to explicitly define the mappings in this class by overriding `DefaultInteractions`, which I might be overlooking but I don't see the new mappings in here."""
8794,505931412,"b'Can this be `internal`? Maybe `protected internal`, if we expect derived classes to need to know about it?'"
8794,505931936,"b""Another `internal` / `protected internal` opportunity, since we don't necessarily want something updating this other than the data provider."""
8794,505932431,b'Duplicate `GetOrAddController`; is this intentional?'
8794,505932670,"b""There's some inconsistent indentation changes in this class, specifically around the regions"""
8794,505933001,"b""Slight nit: `e` isn't a super descriptive parameter name, especially for something of type `MotionController`!"""
8794,505933223,"b'```suggestion\r\n                            // Otherwise, only update its 6dof data\r\n```'"
8794,505934016,"b'How does this behave? Or, I guess:\r\n\r\n1. Do non-HP motion controllers come through this API?\r\n1. Does this reconcile with HP motion controllers that come through the Unity APIs. or do we end up with one `WindowsMixedRealityMotionController` from there and an additional `HPMotionController` from here?'"
8794,505934336,"b""My thought was we'd need to add `HPMotionController` to this section:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/cfa683f472c774964c48eb2d4194f36a0aee5458/Assets/MRTK/Providers/WindowsMixedReality/XR2018/WindowsMixedRealityDeviceManager.cs#L752-L789\r\n\r\ngated on the existence of the touchpad or something (since it doesn't have one). That way, we're only creating controllers in one spot, and we could react to this event just by saving off the new `MotionControllerState`."""
8794,505934680,b'Looks like the comment was removed. Intentional?'
8794,505934996,"b""The HP controller doesn't have a touchpad, and I also don't see where these `axisUsage`s are used below. Left over copy from the XRSDK controller?"""
8794,505936904,"b'Even after removal though, we probably still want some `interactionMapping.InputType == DeviceInputType.ThumbStick` check somewhere.'"
8804,505973509,"b""We chatted a bit offline about this, but I wanted to publicly document it as well.\r\n\r\nThis method assumes that embedded packages will be from the .unitypackage distribution and not an unpacked npm tgz distribution. Since the tgz will have the shader in a `Shaders~` folder, this search will succeed (the sentinel exists in the file structure) but the shader isn't actually visible to Unity. This situation is probably a bit of an edge case, but I think using [`StandardShaderUtility.MrtkStandardShader`](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/94fffc24775ee8d9f5a500192eb33a02c2663283/Assets/MRTK/Core/Utilities/StandardShader/StandardShaderUtility.cs#L21) to check if Unity can see the shader would account for this (and all other?) cases."""
8804,505974234,"b""Does this need to be public? I don't think anything inside it is."""
8804,505982184,"b""Good call, I didn't think about it being in a different package.\r\n\r\nCould just use the underlying `Shader.Find` in that case. The more Unity API calls vs searching the file structure manually the better, imo!"""
8804,506640732,"b'Now that `AssetsContainsShaders` is updated for embedded packages. I wanted to revive this conversation and my suggestion above\r\n\r\n>for users to use MRTK as an [embedded](https://docs.unity3d.com/Manual/upm-embed.html) (which is easier to solve, if we check `Packages` as well like [MRTKFiles](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/31ff4c9111b4a2c9bcda58e5db2136a44eca65f8/Assets/MRTK/Core/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs#L256) does)\r\n\r\nShould we add `Packages` as a search location here?'"
8651,506648680,"b'This class is missing a namespace, which is triggering the PR validation failure:\r\n\r\n```\r\nWARNING: F:\\AIPMRHosted5\\_work\\18\\s\\Assets\\MRTK\\Examples\\Demos\\ReadingMode\\Scripts\\ReadingModeSceneBehavior.cs is \r\nmissing a namespace declaration (i.e. missing namespace Microsoft.MixedReality.Toolkit.*)\r\n```'"
8651,506650218,"b'This feels like a fairly specific property that we might want to add a new interface for instead of adding to the existing one. Not all devices support this concept, so not all camera systems would need to either.'"
8651,506684247,b'Missing license header'
8651,506685507,"b'A quick note that this API unfortunately is no longer valid with the new XR APIs. The usage here is also specific to WMR, which feels weird to call in a platform-agnostic service like this.'"
8651,506687534,"b'Since most of the interaction is on this MonoBehaviour component, can we instead treat this as a Windows-specific camera setting, like we do for the reprojection component?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/7c9fdf9a56291700dbcfd9916805c4329045d534/Assets/MRTK/Providers/WindowsMixedReality/Shared/BaseWindowsMixedRealityCameraSettings.cs#L83-L90'"
8651,506687959,"b'`ReadingModeEnabled` can be in the profile, then all other interactions can take place directly with `ProjectionOverride`'"
8808,506729970,b'@KevinKennedy Is there a reason we have to set this on both the Unity camera and the underlying HolographicCameraPose?\r\nWould we expect / want the Unity implementation to call `OverrideProjectionTransform` when the projection matrix is changed?'
8808,506730792,"b""Also less important, but it looks like we'll be setting this on `CameraCache.Main` multiple times if `prediction.CameraPoses.Count` is greater than 1."""
8808,506738652,"b""What does this represent? Can we cache it as a `const`? Is it something we'd want configurable?"""
8804,507880485,b'```suggestion\r\n        /// Finds the shader folder within an installed or embedded package.\r\n```'
8804,507880737,"b'```suggestion\r\n        /// If not found, returns null.\r\n        /// </returns>\r\n```'"
8804,507882055,b'Do we want this to be MixedRealityToolkit.Shaders for symmetry with MixedRealityToolkit.Generated?'
8794,510305390,b'I think we still want these six (three missing here) mappings from WMRController:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/498065b67810b5601daf05ba14fd46393bc590ee/Assets/MRTK/Providers/WindowsMixedReality/XR2018/Controllers/WindowsMixedRealityController.cs#L46-L51\r\n\r\nplus we can add an actual 0.0 - 1.0 axis for the grip button (in addition to the existing axis which sends a digital button event). Could use DeviceInputType.Grip and DeviceInputType.GripPress to differentiate?'
8794,510309285,b'Removable?'
8794,510312833,"b""There are a few paths here that I'm not sure are represented in the mappings list. Maybe not super important to remove if future classes that inherit from this might use them though."""
8794,510314589,"b""This feels like it'd match to `TriggerTouch` more than `TriggerPress`"""
8794,510315622,"b'I\'ve always thought of `Touch` being ""pressed at all"" and `Press` being ""fully pressed""'"
8833,510324862,"b""We may want to cache the HandTrackingProfile somewhere, so these scripts aren't reaching into the InputSystem every update."""
8794,510352701,"b'Yeah, that\'s true. We sorta overloaded that term for controllers without capacitive sensors to mean ""pressed at all"".'"
8833,510356918,"b""nit: should this be handled inside the OculusHand class, since we're asking it for its Visualizer here?"""
8833,510357549,"b'Should this have a null check, in case a profile is left out?'"
8794,510382710,"b""It's called on line 86"""
8794,510481123,"b'Looks like this method has this line twice (here and line 99). It might be better to be moved to `UpdateController(InteractionSourceState interactionSourceState)` so it wraps both this method and the base call, regardless of which is called)'"
8833,511004994,"b""I think my only remaining comment would be to make sure the toggle panel's visual state matches the new behavior. Now that certain visualizations won't show up immediately (and might behave differently in-editor vs on-device, like the default hand joints setting in many of our profiles), we'll want to make sure the panel reflects that state."""
8848,512263889,"b""ahh good catch! I was thrown off since the property refers to the interface, but you're right that most/all consumers of that interface are MonoBehaviours"""
8848,512277464,"b'We have some custom methods for checking all null paths on types we expect can be Unity objects, so I updated this and cleaned up a few other spots'"
8794,512872049,"b'Testing this out without the new API package leads to a bunch of compilation errors in this class, I think due to these `#if` statements being commented out'"
8794,512875352,b'nit: braces\r\n```suggestion\r\n                        if (trackedMotionControllerStates.ContainsKey(controllerId))\r\n                        {\r\n                            ((HPMotionController)detectedController).MotionControllerState = trackedMotionControllerStates[controllerId];\r\n                        }\r\n```'
8794,512876658,"b""Also wonder if we can initially put the original object (line 748) in a local variable of the correct type, so we don't have to cast here, then can assign to `detectedController` at the end?"""
8794,512881409,"b'It looks like this is only called by derived classes, and the equivalent in the XRSDK controller is `protected`:\r\n\r\n```suggestion\r\n        protected void UpdateSixDofData(InteractionSourceState interactionSourceState)\r\n```'"
8794,512882976,b'```suggestion\r\n        /// <inheritdoc />\r\n        public override void UpdateController(InputDevice inputDevice)\r\n```'
8794,512883371,"b""I don't think this one needs this flag, since you explicitly define the interactions below"""
8794,512887084,"b'Maybe not super important, since this is a one-time call when the controller is detected, but a thought'"
8794,512891405,"b""Since this class has the `else` case that calls into `base.UpdateController(interactionSourceState);` when the `MotionControllerState` isn't found, could this class be wrapped in this `#if` more specifically (specifically around the lines that refer to types defined there) and use the above `else` case otherwise? Same question for the XR SDK version"""
8847,512927116,"b""Would this be able to call `OVRProjectConfig.GetProjectConfig()` instead of manually searching? It looks like that method  goes and grabs the asset based on the plug-in's internally known path."""
8847,512927387,"b""Though, it also creates one if none exists. Not sure if that's behavior we want to trigger? Though it seems like the asset is required for this feature."""
8847,512956621,"b'Do we want this to be a bit more descriptive? Maybe something like ""Enabled Oculus keyboard and hands/controllers"" or something?'"
8850,512993431,"b""Do you need to edit the underlying array? Or just need access to the data?\r\n\r\nIf you just need access, I recommend this property returns an `IReadOnlyList` instead, to align with [CA1819](https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1819) and inform the caller that the list shouldn't be changed.\r\n\r\n```suggestion\r\n        public IReadOnlyList<Vector3> Positions => positions;\r\n```\r\n\r\n(if you accept this change directly, you'll need to add `using System.Collections.Generic;` as well manually)"""
8850,513587266,"b""@SGHolospace Yep! It looks like, from your branch, you should be able to call `git reset 1776dc4140dd694a23a66276e28e8a889075b807`, which will reset your branch back to that commit https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8850/commits/1776dc4140dd694a23a66276e28e8a889075b807. Then, you'll need to call `git push -f` to force push your remote branch and remove the two extra commits."""
8787,513777310,"b""Similar to how you've updated the input module to persist between profiles, I wonder if we want the UI raycast camera to also persist? Since it's a Unity component, I'm not sure it has any dependencies itself on the active MRTK instance. The FocusProvider already has code to find an existing raycast camera on startup:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/e07020b0e84340be604956a543cb54ce88e28d4f/Assets/MRTK/Services/InputSystem/FocusProvider.cs#L693-L701\r\n\r\nWould we want to suppress its clean-up during a profile switch, like you did with the input module?"""
8862,513829645,"b""small nit: i think there's an extra leading space here?\r\n\r\n```suggestion\r\n**Packaging**\r\n```"""
8794,514403088,"b""This feels like we might want it up, even above the `#if`, so we don't run _any_ of these paths if the controller isn't enabled."""
8794,514403245,b'Missing license header'
8794,514403876,b'Can we re-use `controllerId` here?\r\n\r\n```suggestion\r\n            if (activeControllers.ContainsKey(controllerId))\r\n```'
8794,514409860,b'Do we want to `lock (trackedMotionControllerStates)` here as well?'
8794,514411869,"b'In this case, should we still remove the key from `trackedMotionControllerStates`?'"
8794,514413420,"b'Do we want to leave the ""source lost, clean-up scene"" process to only go through the existing path? Similar to how I don\'t think the ""source detected"" path was added to `AddTrackedMotionController`, these event handlers could just handle the `trackedMotionControllerStates` but leave the actual source representation alone? Though, as long as both paths are okay with the other going first, it\'s probably fine since these shouldn\'t happen too far apart.'"
8794,514416865,"b'This block looks the same as the `base.` implementation. Could we call that, keep the return value, then edit it like below? It should be fine if the base class adds it to `ActiveControllers` before we set `MotionControllerState`.'"
8794,514417277,b'Same question as the XR2018 implementation'
8794,514418151,"b'My fix for this has been merged, but this check will return `true` even with the HP controllers until the Windows XR Plugin 2.5.0 or 2.5.1 release.'"
8794,514418335,b'```suggestion\r\n        #endregion Controller Utilities\r\n```'
8794,514421157,b'```suggestion\r\n                base.UpdateController(inputDevice);\r\n```'
8794,514423456,"b'Not completely required, but it could be good to refactor this out into the pattern shown by https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8859 and #7146. Especially since this same array is used both here and in the XR SDK implementation (and a similar one when we implement OpenVR). @davidkline-ms '"
8794,514423933,"b'Since `inputHandler` is wrapped with `#if HP_CONTROLLER_ENABLED` above, I think this will fail without the package installed.'"
8794,514426183,b'Mostly an FYI. Not sure we can do much else about it :/'
8870,514482787,b'Could this be simplified to:\r\n\r\n```suggestion\r\n            bool isNear = eventData.Pointer is IMixedRealityNearPointer;\r\n```'
8870,514483019,"b""This looks like the same check that's now stored in `isNear`, so we could reuse the new bool here too"""
8873,514540301,"b""Can we make this a property, to try to reduce the number of `public` fields we have and so we won't need the `NonSerialized` tag?"""
8873,514540451,b'Should these be implemented?'
8873,514542848,"b""Also, nit, but since these aren't methods we expect to be called manually, could these be [implemented explicitly](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/interfaces/explicit-interface-implementation)? That way the methods are hidden from our docs and intellisense, but still callable by Unity."""
8873,514593810,"b'Oh, true!'"
8794,514623468,b'This class can use `HPControllerDefinition` now too!'
8794,514623538,b'Same `#if HP_CONTROLLER_ENABLED` comment as the other script'
8794,514624468,"b""super small nit: looks like this could be moved inside the `if`, since it isn't used otherwise"""
8794,514625365,"b'In the other device manager, this checks to make sure the ID is found in `trackedMotionControllerStates` before trying to access it. Could lead to a KeyNotFoundException'"
8859,514631600,"b'Changes from calling the property to the backing field. Not a big change since the properties are all just accessors for the fields, but they were inconsistent in this call (some called the property, others the field (like the above `.id`) and I chose to converge on the backing field.'"
8794,514647616,"b""We might want to flip these here and in the XR2018 implementation, since `base.UpdateController` updates the SixDofData before iterating through any interaction mappings.\r\n\r\nSome of the mappings use the positional data that's updated here, like spatial pointer and spatial grip, so we should make sure those are still getting updated properly."""
8794,514648064,"b""If this returns by default, it'll never get to the `switch` on line 209.\r\nThough, those two cases are the same as these. Should one of these `switch`es be removed?"""
8794,514648683,"b'These look the same (both reference ""Trigger Press""), so I think mapping 7 can be removed here and above.'"
8794,515217655,"b""I think collapsing these two checks together might lead to unexpected behavior. For example, if the float data is changing from 0.1 to 0.2, we'll now go into the first (now only) `interactionMapping.Changed` case, which then checks if `interactionMapping.BoolData` is true, which sends `OnInputUp` if not. So we'll probably get a whole bunch of `OnInputUp` events on our way to a full press (and the same on the way back to fully unpressed)."""
8794,515218028,b'These `DeviceInputType`s are not the same as the ones they were combined with above (Trigger and Grip vs TriggerPress and GripPress)'
8794,515219632,"b'Do these need to be their own cases, or could they be combined with the `switch` below? I guess more specifically, does the Input plug-in provide `GetPressedValue` info for `ControllerInput.Grasp` and `ControllerInput.Trigger`, instead of us needing to check that a float value is 1?'"
8794,515221932,"b'These feel like the `GripTouch` and `TriggerTouch` cases. It almost feels like these should be removed from here, placed up in the lines 102-111 if statements (instead of the check against `.Equals(1)`), then  `GripTouch` and `TriggerTouch` in the line 117 switch statement get swapped with `TriggerPress` and `GripPress` from those previously mentioned if statements. Does that seem right, or am I missing something?'"
8794,515222673,b'This ended up pretty related to https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8794#discussion_r515221932'
8873,515395913,"b""Does this work in the UWP build? For some reason I feel like I remember `default` vs `default(GltfComponentType)` isn't allowed in the versions of things Unity uses"""
8873,515397092,"b'Can you think of any way to make this a non-breaking change? I\'m not coming up with anything at the moment, since the (newly private) backing fields have to match the file\'s field name (unless there\'s a tag or something to say ""this field is serialized with this name even though it\'s named differently""?)'"
8794,515417310,"b'I think for compatilibity with existing actions and the underlying data providers, this might need to be `AxisType.SingleAxis`.\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/6c5fe3b8b2674815c0cf9390607f2bceb321b6fc/Assets/MRTK/Core/Definitions/Devices/WindowsMixedRealityControllerDefinition.cs#L30'"
8794,515417489,"b""It makes way more sense for it to be `Digital`, but unfortunately the initial implementation had it as `SingleAxis` and it'd be a compatibility issue if we change it now"""
8794,515418231,"b'>raise Press/GripPress events when float == 1.0f\r\n\r\nI think the button, menu, thumbstick press events etc should fall in this case too (but looks like right now they fall in the `Touch` cases). Maybe the special-cased `if`s before the `switch` become the `Touch` checks, and the Press events can move to the `switch` with the rest of the button-based events?'"
8794,515418659,"b""For now, we might want to scope this down to `DeviceInputType`s that are defined in `HPMotionControllerDefinition`. That way it's a little more concise and we don't have potentially unexpected behavior if this class is reused."""
8794,515420741,"b""This is maybe an interesting discussion point, but even though `DeviceInputType.GripTouch` has been defined for a while, it doesn't look like ANY controller actually implements it. Do we want to add it new here? Or just leave it out for consistency?"""
8794,515421977,"b'Yeah, interestingly that line in GenericXRSDKController appears to be the only reference to it outside the enum that defines it :/\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/search?q=DeviceInputType.GripTouch'"
8794,515422224,"b""I'm all for defining it, though it's an odd case where\r\n\r\n1. This is an interaction that isn't coming directly from the controller, but instead we're sorta simulating with `pressedValue > 0`\r\n1. No other controller has it, even though they all could!"""
8787,515434334,"b""That works. I think it'd be worth filing an issue to see if we can handle that camera better during a reload, but this code snippet and doc should be sufficient until then."""
8787,515434621,"b""Instead of waiting some number of frames explicitly, could this be something like\r\n\r\n```c#\r\nwhile (MixedRealityToolkit.Instance.ActiveProfile != ProfileToUse)\r\n{\r\n    yield return null;\r\n}\r\n```\r\n\r\nsince it looks like the backing `activeProfile` doesn't get set immediately"""
8787,515434772,"b'We might want this to be private with the SerializeField tag, so the code snippets follow the MRTK coding guidelines'"
8794,516274345,"b'I think we might want to put the shared definition into the core instead, matching the location of the current WMR one: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MRTK/Core/Definitions/Devices/WindowsMixedRealityControllerDefinition.cs'"
8794,516274557,"b""And that way we don't have this unexpected WMR/OpenVR provider dependency"""
8794,516366370,"b'Looks like the attribute matches the existing WMR one, but should instead match the attribute on the other HP controllers in this PR'"
8900,517566568,b'```suggestion\r\n1. Uncheck (Unity 2019 or higher) or shrink the size of the 3d icons using the slider (Unity 2018) under the Gizmos tab in the Scene view to reduce scene clutter\r\n```'
8900,517566758,b'```suggestion\r\n\r\n```'
8906,518259168,b'Why the move to put the `base` call at the end? Could this lead to a change in behavior if derived classes expect these to be called in a specific order?'
8906,518260139,"b'Inconsistent with the other `base.Initialize()` changes. This one is at the beginning of the method, while the others have mostly been moved to the end.'"
8906,518260916,b'Why not?'
8906,518261778,"b""The more I see all these `base` classes added, the more wary I'm feeling about this change...if these weren't required before (and the MRTK classes weren't doing it well!), we likely have custom services out there that don't call these base classes, which might now become broken if we rely on the base calls for behavior and state."""
8905,518263341,b'```suggestion\r\n\r\n```'
8905,518265483,"b""Would be good to add messages to these `Obsolete` tags, to describe what they're replaced with or (if no direct replacement) why they're marked as such."""
8905,518266895,"b""Is this third column supposed to show up in the rendered page? I'm not sure I'm seeing them: \r\n![image](https://user-images.githubusercontent.com/3580640/98280611-7f637000-1f50-11eb-9843-eba43a0af59a.png)\r\n"""
8905,518267286,b'What are these files? Included intentionally?'
8906,519019711,"b""Along the lines of https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8906/files#r518260139, wondering why this was moved to the end. Most other `base` calls at the end of the methods are called out with\r\n\r\n>// Call the base after initialization to ensure any early exits do not\r\n>// artificially declare the service as initialized.\r\n\r\nbut this one doesn't appear to have a failure case."""
8906,519020130,"b'Is this meant to use the Unity-defined `Debug.Assert`, or is this namespace correct?'"
8873,519975250,"b'For completeness, in case these scripts ever get used elsewhere for serialization, it might be good to implement `OnBeforeSerialize()`'"
8873,519976053,"b""Interesting that this one was already PascalCase. Is that how it's serialized? Or was this deserialization (even more) broken before?"""
8873,519977518,"b""Was this another previously incorrectly named field? Seems like it's been renamed to `minFilter`"""
8873,520766833,"b""Unity's deserializer doesn't handle enums the same way the glTF spec does. The spec serializes them by string, while Unity serializes them by int value, so this has been broken since it was first contributed.\r\n\r\nThese are connected via the `ISerializationCallbackReceiver` events below. Unity deserializes it as a string and it's converted into the enum."""
8873,520767496,b'Much of this is moved to the `ISerializationCallbackReceiver` handlers below. The default is still there.'
8873,520767542,"b""Why can't it be null? It's a reference type."""
8873,520768118,"b""Can you point out cases where the default is dropped? I can't find any."""
8894,521750580,"b'Should this happen in `Update` instead, since MRTK.cs checks in `LateUpdate` for the presence of a new profile? Otherwise it seems like we might end up not switching until two frames later due to script execution order.'"
8794,523296701,"b'This check looks backwards:\r\n\r\n```suggestion\r\n            string inputSourceName = isHPController ? $""HP Motion Controller {nameModifier}"" : $""Mixed Reality Controller {nameModifier}"";\r\n```'"
8794,523297444,"b'I think we might want this to be \r\n```suggestion\r\n                    interactionMapping.BoolData = Mathf.Approximately(buttonData, 1.0f);\r\n```\r\ninstead of `> 0.0f`, since lines 107 and 112 establish that `!= 0.0f` is ""touch"", and ""press"" should be ""all the way pressed""'"
8794,523300139,b'Inconsistent capitalization on these fields. Could they be turned into auto-properties and both in PascalCase?'
8794,523300764,"b""When set to Windows Standalone with the input plug-in installed, there's a warning:\r\n\r\n```\r\nAssets\\MRTK\\Providers\\WindowsMixedReality\\XR2018\\Controllers\\HPMotionController.cs(27,40): warning CS0649: Field 'HPMotionController.MotionControllerState' is never assigned to, and will always have its default value null\r\n```\r\n\r\nI think just setting this explicitly to `null` will fix it.\r\n\r\n```suggestion\r\n        internal HPMotionControllerInputHandler inputHandler = null;\r\n        internal MotionControllerState MotionControllerState = null;\r\n```"""
8794,523309054,"b""Looks like we need some changes to OpenVRDeviceManager as well, to reference this class and `SupportedControllerType.HPMotionController`. It's currently all keyed off the joystick name, so hopefully this new controller has a distinct name!"""
8794,523313899,"b'![image](https://user-images.githubusercontent.com/3580640/99134527-fb099080-25d2-11eb-8bac-3793d9b519de.png)\r\n\r\nurg, we might end up needing to do a sub-check for the pid part of the name (0x066A for HP)'"
8946,523316588,b'```suggestion\r\n/Assets/MRTK/Core/Utilities/BuildAndDeploy/ @MenelvagorMilsom @macborow\r\n```'
8946,523317358,b'```suggestion\r\n# This file contains information about the code owners for various\r\n```'
8946,523317682,b'Add a new line for the UPM templates?'
8894,524459028,"b""Is this assertion always true? For example, if I decide to put a specific UIRaycastCamera in my scene before building, so MRTK doesn't have to create one at runtime, it seems like this assertion will fail."""
8945,524537673,"b""Should this be removed if it's commented out?\r\nAlso the comment syntax seems to have an extra `v`"""
8945,524537850,b'missing MSFT license header'
8942,524804578,"b""The problem I ran into was that I couldn't think of a good way to determine _which_ value (bool, float, etc) the current interaction is using. Instead, I chose to identify when any of them were non-default values, then display."""
8942,524804956,"b""We could maybe guess based on `AxisType`, but some don't match (for example, the WMR controller using SingleAxis for grip but reporting a bool...)"""
8942,524805213,b'Oh but maybe `InputType` is more predictable...'
8945,525424690,"b'Feels a little odd to call a method which fills a global variable, but I think you had said there was some weirdness with returning the collection?'"
8945,525425058,b'```suggestion\r\n# This table defines MRTK package layout.\r\n```'
8945,525425374,b'```suggestion\r\n# The folders are relative to the RepoRoot.\r\n```'
8945,525426207,"b'```suggestion\r\n    Given a string, determine if it is a valid GUID\r\n```'"
8945,525426666,b'```suggestion\r\n#>\r\nfunction ExtractGuid {\r\n```'
8714,526442805,b'Looks like this file was reserialized in Unity 2019. We should keep it in the 2018 format for now.'
8894,526448165,"b""Do you remember which script this was? Was it removed because it's a duplicate?"""
8894,526448925,"b""Should we deprecate this method, if it's no longer the recommendation?"""
8714,527073655,"b""What's the difference between these two dictionaries?"""
8965,527261526,"b""I don't see the corresponding prefab for this meta in this PR. Should it be added or this removed?"""
8965,527262434,"b'It seems like most of the other scripts in the SDK/Features/UX folder are in the `.UI` namespace. Should this be in that one too, or moved to a different folder?'"
8965,527263026,b'Should this be OculusHand?'
8977,528906104,"b'Instead of hoping there\'s a teleport pointer present and asking it for its action, can this instead be set in a profile somewhere? This feels like a kinda circular action: ""ask the teleport pointer for its action so i can send its action back to it"". Instead, like the controller mappings, maybe we can set this in the hand tracking profile or maybe add it as a gesture mapping?'"
8977,528907227,"b""Doing this logic in BaseHand won't allow it to be used in classes which don't derive from BaseHand, like the WMRArticulatedHand. This feels like something that should be done in the ArticulatedHandDefinition, since it's API-agnostic and only depends on the finger joint data."""
8977,528910111,"b'Removing the process of ""ask the pointer for its action"" would also remove this breaking change.'"
8977,528911207,"b'Just saw your comment on\r\n\r\n>Also the WMR articulated hand needs to be rewritten to derive from Basehand\r\n\r\nThis is one of the reasons the ArticulatedHandDefinition was created! It removes the need for a specific inheritance chain in the vein of ""[composition over inheritance](https://en.wikipedia.org/wiki/Composition_over_inheritance)"".'"
8977,528924606,"b'>Is there a reason that the WMRArticulatedHand doesn\'t derive from BaseHand?\r\n\r\nThe original inheritance of WMRArticulatedHand came from the APIs its data comes from. That API is shared among all WMR inputs (controllers, etc), so it made sense to share the API calls in a base class.\r\n\r\nBaseHand started more from a similar place that ArticulatedHandDefinition did (API-agnostic and defines specific calculations and features of a hand) but was used differently (back to ""composition over inheritance""). Instead of repurposing that class, I created a new one.\r\n\r\nOverall, it was a miss on my part that these hand classes ever diverged so much in the first place, and ArticulatedHandDefinition was an attempt at reconciling that.'"
8977,529070560,b'Can this call into the definition instead?\r\n\r\n```suggestion\r\n                        handDefinition.UpdateCurrentIndexPose(Interactions[i]);\r\n```'
8977,529070728,b'Can this method (`UpdateIndexFingerData`) be removed with this call removed?'
8977,529071465,"b""I'm also not sure if `currentIndexPose` is being updated with the removed call to `UpdateIndexFingerData`"""
8905,530026223,b'Why not allow the directory to continue to be `null`? The param doc above states\r\n\r\n>If null the persistent data path of the app is used.\r\n\r\nRe-adding `= null` would also help remove a breaking change.'
8905,530026894,b'Can these all be public properties instead of fields? To align with the [MRTK coding guidelines around encapsulation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).'
8905,530027008,b'Looks like these are still missing'
8794,530642034,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateControllerPerfMarker = new ProfilerMarker(""[MRTK] HPMotionControllerInputHandler.UpdateController"");\r\n```'"
8794,530642240,b'The rest of the profile markers in this class have the same typo'
8794,530642307,b'typo: InputHander -> InputHandler'
8794,530647822,"b'It don\'t feel like there\'s any dependency on `HP_CONTROLLER_ENABLED` to set the name of the input source or set the bool. Can this just be the ""normal"" path (basically remove the `#if` and the `#else` case)?'"
8794,530648668,"b""Similar question here. I don't think the `HPMotionController` class fails to run if `HP_CONTROLLER_ENABLED` isn't true (at least, it looks like it successfully falls back to the base case? we should make sure it still works!). Can we just always spin up an `HPMotionController` is `isHPController` and a `WindowsMixedRealityController` otherwise? I assume the\r\n```c#\r\nif (trackedMotionControllerStates.ContainsKey(controllerId))\r\n{\r\n    hpController.MotionControllerState = trackedMotionControllerStates[controllerId];\r\n}\r\n```\r\nblock will need to stay in an `#if`, but it'll be scoped down a bit"""
8794,530648980,"b""Pinging this question. I don't recall if we chatted about this offline or not, but I still have the same question"""
8794,530649306,"b""nit: this summary isn't aligned with the `HPMotionControllerInputHandler` class declaration"""
8794,530681647,b'This API should report touchpad properly; I thought it was just XR SDK that had the issue'
8794,530706600,"b'Just caught something here in the OpenVR implementation: to align with the other platforms that ""press"" == bool, can you update https://github.com/microsoft/MixedRealityToolkit-Unity/blob/1d180dfcacd10332a2f8bfb8cea0f884851ec63e/Assets/MRTK/Core/Providers/UnityInput/GenericJoystickController.cs#L186 to include `|| interactionMapping.InputType == DeviceInputType.GripPress` please?'"
8794,530706834,"b'Otherwise, both UWP/Mirage and OpenVR work great! Still need to test out XR SDK with the incoming package'"
3230,239291765,"b'Other than ensuring the raycast begins at a close enough distance to the camera that it doesn\xe2\x80\x99t miss nearby UI, I don\xe2\x80\x99t believe it much matters what these values are in terms of ray casting, particularly farclip '"
3230,239291920,b'Will do some more testing tomorrow to find out whether this is the case '
3230,239579363,"b""Did some more testing, the near and far clip actually have no effect on the raycasting that I can tell. I'll just remove the code that sets them to avoid confusing future readers. """
3230,239580307,"b""Oh, I just saw that it was merged already haha, I'll make a very small PR"""
594,108695883,b'Allright! '
594,108697021,b'previously it was private - so this was implemented. Merged! Will remove the property'
594,108697071,b'sure - rookie error'
2737,216333585,b'Is there a replacement for the SemanticMeanings too?'
2737,216363017,b'Ok will add this'
2737,216387394,b'I iterate over the args.semanticMeanings. The list is just a parameter for OnPhraseRecognized.\r\n'
2737,216391419,b'@StephenHodgson good question. Would love to see the data of such response.'
2737,216550695,"b'Ah ok, thanks!'"
2951,228672766,"b'Minor naming thing. Maybe call it something like ""Assets/MixedRealityToolkit-generated/CustomProfiles""\r\nto be aware where it belongs to in a bigger folder structure and it\'s generated?'"
3041,229706261,b'\xf0\x9f\x92\xaf '
3041,229708952,b'Maybe mention where the new profiles are generated to. Or a short description of all folders.'
3285,242809783,b'Is there a case where `searchResolution` can get 0?'
3305,244861123,b'I think this code is some leftover.'
3305,244861389,"b""graphicEventData had the selected object already in it's .pointerCurrentRaycast.gameObject"""
3305,244861577,"b""Don't know if this is the correct way, but here I assign the needed object"""
426,93770474,"b'Oh. I almost never do that. Thank ReSharper for learning me that. Do you want me to change it, or are you just going to merge?'"
721,122365825,"b'Whoops, first time I wrote an editor. That was a leftover from a failed first attempt. Also, take heed: by setting IsGlobalListener to true by default I changed the default behavior of the SpeechInputHandler. I modified my PR to set that default to false, so you actually have to consciously make your SpeechInputHandler a global listener. This is to prevent people rebuilding the sample and inadvertently ending up with a lot of global listeners'"
1496,157351927,"b'Lookup is only used at Awake, so once in every time it starts'"
1496,157351949,b'Possibly. I personally am not very much in favor of name changes as they brake code'
1496,157351976,b'I do not agree. The audio source could be attached to the keyboard and spatialized so clicking actually comes *FROM* the keyboard. That is how I use it. '
1496,157367435,"b'True that. I am using some of the new public methods I introduced, so renaming will break only one application - mine ;) . But I can live with that'"
1496,157368227,b'You are right. There is a Utils.GetChildRecursive. Apparently I did not search well enough when I added this. Updated the PR to use that method and removed mine from Keyboard.cs'
1542,157556751,b'So I am adding it for you again  Hth ;)'
1555,159054511,"b""It is adding an extra cube indeed. Do you see that as a real problem? There is a cube in the scene now, it's just a bit too high to easily place the cursor on. If you want it gone, I will delete it again"""
1496,159376181,"b'The key difference here is that [212](https://github.com/Microsoft/HolographicAcademy/blob/Holograms-212-Voice/Completed/ModelExplorer/Assets/Scripts/MicrophoneManager.cs#L119) has dictation input and dictation input only. And replaces the text every time the user starts dictation. This adds/inserts text. The user might press arrow or other keys during dictation. How are you going to delete whatever hypothesis text was inserted again and replace it by definitive text? \r\n\r\nJust my curiosity - does this imply there is a new issue and merging is now blocked again, or are we discussing just some future improvements?'"
1496,159376237,"b'Well, what are you suggesting?'"
7611,403216338,"b""It's not like this a very heavy procedure and I am not quite a fan of modifying things at edit time. Messing with the internals of the keyboard changes the scene permanently, not sure if I would like that"""
7611,403221054,b'Nope. That might mess up an existing AudioSource component and fill it with _my_ sound file. This is intentional'
7611,403227009,"b'I tried that, and I still got an error in Unity. So I took the pragma. Now the null init works as well. Go figure ;)'"
7611,403231125,"b""Summary, okay, but it's already on the prefab, as suggested by @provencher in the Slack channel. You are not going to add this thing to anything - at most you are going to disable it. At least, that was my idea"""
7611,403232500,b'done'
7611,403232585,b'done'
7611,403232722,b'Done. Not quite sure why Unity kept complaining about CS0649 when I initially initialized it to null. Only the pragma made it shut up. Now tried it a second time as per your suggestion and it DOES work. Go figure ;)'
7611,407229389,"b""You might not always want this, and this way it's easy to disable it."""
8264,468027384,b'I really have no idea what you mean here. What is the question or call to action?'
8264,469314909,"b""I don't expect them to do that. It's either on or off. Having said that, the null check should go. You should be able to turn it OFF as well. """
4085,278639409,"b""This is a first draft - I basically took the existing pipelines and committed with minimum clean up. There's definitely a lot we can and should do with templates/variables but I haven't looked into it yet."""
5311,303531842,"b""The script should explicitly set the error code ($rc = ... followed by exit $rc at the end of the script).\r\nIf unset, the RC will equal to the error code from the last command which doesn't really work if there are some clean up steps involved)."""
5530,311481458,"b""It might be nice to add logDirectory and logPath as task parameters (with default values). This would ensure that the log path is always the same in unity build task and any log processing tasks that follow.\r\nThere's a way to emit a value from a task and reuse it (using ##vso tags) but I'm not sure how to use it effectively (something I need to experiment a bit more with) and parameters are easy to use."""
5736,316135633,"b""It's a pity that it is necessary to patch existing project files instead of handling that during project generation.\r\nDo we also need to modify any templates for the MSBuild process?"""
5736,316136493,b'Why not pass the actual path in here? I.e. make it default to {$Env:${Unity2019Version)} and pass in the path to the editor if different.'
5736,316137218,"b""Would it make sure to separate Unity2018 and Unity2019 tasks into separate jobs? This way we won't have to be extra careful about having agents with *both* versions present."""
5855,320351466,b'It might be best to consistently use spaces for indentation and not mix them with tabs?'
6544,345249578,"b""The order in which the targets are built is different than in the CI template... which might be fine but I thought it's worth to point that out."""
7027,365244026,b'You could probably get away with doing a shallow fetch here?'
7027,365245508,"b'Perhaps this entire ""else"" could be removed as it seems to do the same thing as the code above. The script could set $changedFiles to either the paths from the text file or from Get-ChildItem and then run the ForEach (line 380 above) in either case (just on a different set of entries in the changedFiles array).'"
7027,365248064,"b""Perhaps the file patterns make else more memory efficient but the check that matches file type to an extension is repeated in two places (times 2 scripts), so if an update is needed at any point it is easier to oversee this.\r\nAnyway, it's just a suggestion. :)"""
7390,384029125,"b'Ah, that\'s an interesting point. I blamed any variation on copy-paste mistakes as there is a lot of duplication. I would expect that the version should not differ outside of the ""internal/external agent pool"" split, so we could perhaps have twi sets of those variables (e.g. Unity2018Version and Unity2018VersionAnalog, etc.). I\'ll see if I can update the config to always pass the version down in template parameters.'"
7791,420268756,"b""Doesn't testing actually depend on the build? I mean, we're probably building twice as attempt to run the tests compiles the x86 configuration.\r\nAlso, the common.yml template has this note:\r\n Build Standalone x86.\r\n This must happen before tests run, because if the build fails and tests attempt\r\n to get run, Unity will hang showing a dialog (even when in batch mode).\r\n This is the fastest build, since it doesn't produce an AppX."""
7986,431873930,"b""Do I understand correctly that the version update is only ever going to be run on CI, so we don't need to worry about re-running it in a local repo ?"""
8108,446085888,"b""I might be looking at the wrong place but I can't see this template on the target branch (feature/android_validation)."""
8575,495381537,b'The default value depends on the settings of the slate prefab.\r\nI prefer to explicitly specify the value in the test code.'
8575,495389362,"b""I've created ScrollToLimit method and remove duplicated code."""
141,73091069,"b""sorry, 'arean' should be 'area', and it's a error\n"""
141,73091210,b'thanks\n'
141,73091229,b'thanks\n'
141,73091315,b'User can gaze at the tip text of line and air-tap to remove the line \n'
141,73091359,b'ok\n'
141,73091423,b'thanks\n'
141,73091457,b'thanks\n'
141,73091506,"b'good suggestion, thanks\n'"
141,73091558,b'thanks\n'
141,73091581,b'ok\n'
141,73091620,"b'yep, and I will fix it for en-us\n'"
141,73091630,b'thanks\n'
3664,267565135,b'We should support Ice-credentials along with the server list coming from the signaling service as a part of the negotiation/authentication. '
3664,267565891,"b""We need a connected/disconnected event here, so we can track the signaling connection state. As part of 'connected' event Ice server list and Ice credentials may come too."""
3664,268378064,"b'The format is fine. All we need is a way to accept [TURN Auth message](https://www.ietf.org/proceedings/87/slides/slides-87-behave-10.pdf)\r\n\r\n```json\r\n{\r\n  username: ""1375043478:abcd1234"",\r\n  password: <HMAC(""1375043487:abcd1234"", SS)>\r\n  ttl: 86400,\r\n  uris: [\r\n    ""turn:turn.bar.com:3478?proto=udp"",\r\n    ""turn:turn.bar.com:3478?proto=tcp"",\r\n    ""turns:turn.bar.com:443?proto=tcp""\r\n] }\r\n```\r\nI can make necessary changes. Although, it\xe2\x80\x99s important to keep existing properties too, so developer can provide values event if signaling server gives nothing.'"
2024,190918421,"b""I added this back from a previous version of the file. This wasn't my code but I used it for testing. I will remove this again."""
5594,313145366,b'Should this be in a different namespace? It seems like this could be used in many places beyond dwell. #Resolved'
5594,313146037,b'How is this different from `None`? And nit: include a trailing comma to make future diffs easier to read when an enum value is added or removed from the end of the list. #Resolved'
5594,313148556,b'Seems like this should just be a `CancelDwell` method. #Resolved'
5594,313149000,"b""Do you really want derived classes to be able to _set_ this field, or just access it? Any reason it isn't exposed (as a readonly property) publicly?"""
5594,313149465,b'```c#\r\ndwellProfile = ScriptableObject.CreateInstance<DwellProfile>();\r\n``` #Resolved'
5594,313152134,"b""I would expose these properties as a `TimeSpan`, as there is no ambiguity as to the unit. You have the unit documented as seconds in the tooltip, but to retain this understanding throughout the code, you'd have to basically replicate the comment that the unit is seconds everywhere. Plus, if you ever decided to change the unit on the fields, you'd have a lot of other code to update. I would do this instead:\r\n```c#\r\npublic TimeSpan DwellIntentDelay => TimeSpan.FromSeconds(dwellIntentDelay);\r\n```"""
5594,313153755,"b""Should samples be in a samples project/assembly so they don't end up in the core MRTK distribution? #Resolved"""
5594,313156541,b'Seems like this could be simplified by doing something like:\r\n```c#\r\nswitch (currentDwellState)\r\n{\r\n    case DwellState.DwellCanceled when dwellProfile is DwellProfileWithDecay customDwellProfile && customDwellProfile.AllowDwellDecayOnCancel:\r\n        // Do your custom decay stuff\r\n    default:\r\n       return base.CalculateDwellProgress();\r\n}\r\n```'
5594,313162365,"b'I personally find this `ButtonExecute` method a little confusing. For me it would be easier to understand if we just kept it as `DwellCompleted` and the derived classes just override that method. It threw me off because I thought `ButtonExecute` was going to click a button or something, rather than just drive visuals corresponding to dwell completing.'"
5594,313175168,"b'I would recommend making these private classes, nested inside the class they are editing. This way, your `FindProperty` calls can use `nameof` which will make this code much more resilient to field renaming bugs. This would look something like:\r\n```c#\r\npartial class DwellHandler\r\n{\r\n    [CustomEditor(typeof(DwellHandler), true)]\r\n    private class DwellHandlerInspector : UnityEditor.Editor\r\n    {\r\n        ...\r\n        this.serializedObject.FindProperty(nameof(DwellHandler.dwellProfile));\r\n        ...\r\n    }\r\n}\r\n```'"
5594,314416676,"b'If there is already an existing PointerUnityEvent, can we just use that? Or is it not a UnityEvent<IMixedRealityPointer>? #Resolved'"
5594,317212125,"b'Is MRTK trying to support <= Unity 2018.3? Everything 2018.3+ supports C# 7.\r\n\r\n---\r\nIn reply to: [316857577](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r316857577) [](ancestors = 316857577,313156541)'"
5594,317217787,"b""DwellProfile is a ScriptableObject, and CreateInstance<T> specifically returns a T. If there is a problem, I'm not understanding what it is."""
5594,317224065,"b'Oh wait, it looks like despite the above comment you did actually change this. Re-resolving. \xf0\x9f\x99\x82'"
5781,318241311,"b'Is it expected that both routingTarget and uiButton are set at the same time? If not, can we collapse this into a single field of type `Component` and just check its type at runtime to decide how to interact with it? This would help with my comments below as well...'"
5781,318248395,"b'Instead of invoking the click handler directly, maybe we could instead do something like this (assuming `routingTarget` is updated to be of type `Component` and can either be `Interactable` or various other types that we can handle):\r\n```\r\nif (routingTarget is ISubmitHandler submitHandler)\r\n{\r\n  submitHandler.OnSubmit(new BaseEventData(EventSystem.current));\r\n}\r\n```\r\n\r\nThis would have two benefits:\r\n1. You would get the normal Unity UI Button visual transitions of being clicked.\r\n2. It would work with anything that implements `ISubmitHandler` rather than just `Button`.\r\n\r\nAlternatively, instead of adding the `uiButton` field and routing to a specific Unity UI element, you could point to a specific `GameObject` and blast a submit event to the entire `GameObject` and then all components that implement `ISubmitHandler` would be invoked (via `OnSubmit`)\r\n\r\n```\r\nExecuteEvents.Execute(routingTargetGameObject, new BaseEventData(EventSystem.current), ExecuteEvents.submitHandler);\r\n```\r\n\r\nYou could default `routingTargetGameObject` to the `this.gameObject`, or you could forego it entirely. Or, you could replace `Interactable routingTarget` with `GameObject routingTarget` and just get all `Interactable`s on the `routingTarget` at runtime. I feel like this final form would be the cleanest.'"
5781,318338756,"b'Or if the desire is to ultimately eliminate `PhysicalPressEventRouter`, could we just use `ExecuteEvents` directly in `PressableButton`?'"
5781,318339290,"b""Not your change, but is this the wrong namespace? It looks like it's using the `Examples.Demos` namespace but is in the SDK assemblies not the examples assembly."""
7639,408512267,"b""Using the `Leap.Hand` `pinchStrength` was considered, but `isPinching` returns true for each finger and not just the index finger and the thumb.  Below is what is registered as a selection using Leap's `isPinching`.  \r\n\r\n![LeapMotionPinchDetector](https://user-images.githubusercontent.com/53493796/79283941-32159900-7e6e-11ea-9ada-a7eef7ca150c.gif)\r\n\r\nThe Air Tap/Pinch gesture in MRTK only takes the index finger and the thumb into consideration. \r\n\r\nAlso the `Leap.Hand` `grabStrength` is only 1 if all fingers are together, shown in the gif below:\r\n\r\n![LeapMotionGrabDetector](https://user-images.githubusercontent.com/53493796/79286125-7441d900-7e74-11ea-8de3-9763226a8699.gif)\r\n\r\nIn MRTK, the grab gesture does not require all fingers together.  A grab can be recognized with just the thumb and the index finger."""
7639,408512606,b'Removed the anon lambdas'
7639,409162836,"b'I changed the metacarpals Array to a list to remove the Array.Finds, but indexOf is still needed in this case.  The metacarpals list is in a specific order and the index is needed because it maps each MRTK metacarpal joint to the correct metacarpal joint in the leap hand.  I also cannot use the int value of a metacarpal TrackedHandJoint because the value does not map to the Leap metacarpal joints.\r\n\r\n```\r\n        private MixedRealityPose GetMetacarpalPose(TrackedHandJoint metacarpalJoint)\r\n        {\r\n            int metacarpalIndex = metacarpals.IndexOf(metacarpalJoint);\r\n\r\n            // Get the pose of the metacarpal \r\n            Vector3 position = leapMotionMetacarpalHand.Fingers[metacarpalIndex].bones[0].PrevJoint.ToVector3();\r\n            Quaternion rotation = leapMotionMetacarpalHand.Fingers[metacarpalIndex].bones[0].Rotation.ToQuaternion();\r\n\r\n            return new MixedRealityPose(position, rotation);\r\n        }\r\n```'"
7639,409805614,"b""Yeah, I agree this pattern feels odd, though I think it's the only way currently for a controller to know its device manager.\r\n\r\nIn this case, it looks like this is mainly used to grab the corresponding Leap `AttachmentHand` from the device manager and cache it. @CDiaz-MS Do you think this might be place (like with `Hand`) that the constructor can take these in as parameters or can be set manually by the data provider? Maybe with a `SetHands(AttachmentHand attachmentHand, Hand hand)` method or something, if we don't want to mess with the constructor's parameters and add plug-in specific types to it. It feels like these are things that the data provider can actively provide to the MRTK class instead of needing to be asked for it."""
7639,409806675,"b'Interesting to know to specifics of what those APIs provide! Thanks!\r\n\r\n>Also the Leap.Hand grabStrength is only 1 if all fingers are together, shown in the gif below\r\n\r\nDo you think the data is ""good enough"" to use >0 as a grab? Or some threshold?'"
7639,409807626,"b'Also, did you consider `pinchDistance`?\r\n\r\n>float PinchDistance\r\n>\r\n>The distance between the thumb and index finger of a pinch hand pose.\r\n>\r\n>The distance is computed by looking at the shortest distance between the last 2 phalanges of the thumb and those of the index finger. This pinch measurement only takes thumb and index finger into account.'"
7639,409812906,"b""Do these properties need to be `protected`? It feels like they could be `private`, since I'm not sure if we expect this class to be extended and these used. Were they added for a different reason?"""
7639,409813456,b'Is this used?'
7639,409815994,"b""It feels like the contents of `TryGetJoint` should be moved to a different method which grabs and stores the jointPoses from the Leap APIs (which would be called here instead).\r\n\r\nThe reason I say this is because `TryGetJoint` is a public method. We have some scripts that ask `IMixedRealityHand`s for their joints, which means that each time it gets called we'll be running through the steps of grabbing the data from the `AttachmentHand`, converting it, etc, even though we've cached the result here.\r\n\r\nFor example, in the WMR articulated hand class, we simply return this cached value:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/614f4a069fd108caa31dc6eaa0d6bb1b739065c8/Assets/MRTK/Providers/WindowsMixedReality/XR2018/Controllers/WindowsMixedRealityArticulatedHand.cs#L63"""
7639,409833777,"b'whoops, this is not used after the refactor. Removing '"
7639,409835463,"b'They were marked protected in case someone decided to extend this class, but they can be marked private for now.'"
7639,409875127,"b'The leap `pinchDistance` can be used, as IsPinching uses the same distance measurements. \r\n\r\nIf we use greater than 0 as a grab, we might run into grab gestures getting triggered with a hand that is in a relaxed position (i.e. fingers not completely apart).  The `grabStrength` is usually always greater than 0.  '"
7639,409887403,"b""Adding leap specific types to the constructor is possible, but I would have to ifdef them out if the core assets are not in the project because they would be invalid.\xc2\xa0  It doesn't feel right modifying the constructor in this way and might lead to other issues.\r\n\r\nThe only elements I need from the device manager are the `AttachmentHands` and `LeapServiceProvider`.  The `AttachmentHands` and the `LeapServiceProvider` are added to the scene at runtime, I could do a `GameObject.Find`.  @keveleigh What do you think?"""
7639,409889388,"b""Agreed 100% on not changing the constructor. Good points!\r\nWhat about something like an `internal void SetHands(AttachmentHand attachmentHand, Hand hand)` method that the device manager can call immediately after creating the hand? It looks like the manager keeps track of `AttachmentHand`s and `Hand`s based on handedness, so it should be able to tell what maps to what. Then the leap hand can use its locally cached references at runtime.\r\n\r\nI'd recommend against `GameObject.Find` any time we can get around using it. Always a cost to searching the whole scene for something!"""
7639,410359007,b'Moved the leap joint conversion to another method and incorporated the suggestion.'
7639,411742330,b'Was going to ask this. Thanks for already documenting it!'
7714,413556684,"b'Interesting, how did this work before?'"
7714,413908415,"b'This was a simplification,  I realized that the `handDefinition.IsInPointingPose` could be simplified to just `IsInPointingPose` since I have ` IsInPointingPose => handDefinition.IsInPointingPose;` at the top of the file.\r\n'"
7917,427626018,"b""Is this needed? I believe this assembly is only marked for the editor and Windows standalone, so I don't think it even attempts to build for UWP during compilation. The change in LeapMotionConfigurationChecker.cs might be all that's needed?"""
7917,427626313,b'https://github.com/microsoft/MixedRealityToolkit-Unity/blob/9e60cb3f7850f61bb91a0dc2b5016e42ca54930f/Assets/MRTK/Providers/LeapMotion/Microsoft.MixedReality.Toolkit.Providers.LeapMotion.asmdef#L6-L10'
7917,427833356,"b""Didn't notice the LeapMotionProvider is built to a separate assembly. Removed the guards."""
7639,406856035,"b""To fit [our naming conventions](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions), `leapServiceProvider` and `attachmentHands` should be in PascalCase since they're properties."""
7639,406857964,b'You should be able to use the pattern introduced https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6822 to utilize the pointer cache instead of destroying them.\r\n\r\n`RecyclePointers(trackedHands[handedness].InputSource);`'
7639,407616500,b'```suggestion\r\n        /// is LeapControllerOrientation.Desk and is necessary for the hand to appear in front of the main camera. If the leap controller is on the \r\n```'
7639,407616877,b'Nit: I think the sentence is missing a verb'
7639,407620246,b'The max size of this is 2 right? Otherwise we get some overwriting behavior.'
7639,407621665,b'Should these conditions be else-ifs? Or would it be valid for OnHandDetected and OnHandDetectionLost be valid to be called in the same run?'
7639,407731105,"b'RecyclePointers works, and has been incorporated.'"
7639,407755743,b'Fixed '
7639,408389984,b'Yes the max size is two and the left and right hands in attachmentHands are always at the same index.  Section has been updated.'
7639,408993681,"b'The Update method updates the states of both the left and the right hand.  While it is not valid for `OnHandDetected` and `OnHandDetectionLost` to be called in the same run on the same hand.  It is valid for `OnHandDetected` and `OnHandDetectionLost` to be called for different hands at the same time.  \r\n\r\nFor example, if you have the left hand in frame and then you move the left hand out of frame as you move the right hand in frame.  There is a possibility that the tracking state of both the left and the right hand can change in the same frame, the chances of that happening are narrow, but still possible.  '"
7639,409001065,b'Added else if for each hand'
7639,409818198,b'nit: extra space'
7639,409818483,b'```suggestion\r\n        /// <inheritdoc />\r\n        public override void Enable()\r\n```\r\n'
7639,409818622,b'```suggestion\r\n        /// <inheritdoc />\r\n        public override void Update()\r\n```'
7639,409819854,"b'Does this guarantee the provider will be at a local position of (0,0,0) under the camera to start with? Or will it be slightly offset if the camera has moved?'"
7639,409833281,"b'This guarantees that the hands will appear, in front and in view of the camera regardless of the camera starting position.  The offset is calculated relative to the camera position, so if the camera has moved then the hands will move with it.'"
7639,409833361,b'added'
7639,411542806,"b""Note that if we're gonna be creating game objects in enable, we should also handle disable and destroy the same ones.\r\n\r\nOtherwise starting/stopping services (which I think are still not fully supported but ideally would be soon) would keep creating new objects."""
7639,411543082,b'Same for any other objects created by this thing.'
7639,411545087,"b""@davidkline-ms for perf markers in subclasses, do we recommend having the base function be invoked OUTSIDE of the subclass's marker?\r\n\r\ni.e. should base.Update() be moved outside of this using clause? Otherwise this marker ends up capturing the work of the base class (which I believe has its own instrumentation)."""
7639,411560306,b'Included destroying the gameObjects created (AttachmentHands and LeapServiceProvider) in `Disable()`'
7639,411710804,"b""I'd vote for leaving it as-is. When it's in scope like this and the base class has its own marker, the Unity profiler shows these nested in the call hierarchy and it becomes more obvious which class' base is being called."""
7639,411743361,"b""It might be good to do a quick pass on which of these `public` properties need to remain public and which can be made private. I think some of these are now passed directly to the class that needs them (like this one and the hand class, I believe). I think it's definitely better to use the minimum expected / needed scope up front and expand if necessary."""
7639,411744383,b'nit: empty line here between `if` and `else if`'
7639,411754033,"b'Ok that makes sense,  I changed everything to private except the LeapServiceProvider.  I think the LeapServiceProvider should remain public as the minimum.'"
7639,411754467,b'Sounds good to me! You definitely know best'
8455,483112785,"b'Super nit: The language here is a little confusing because ""then expose"" makes it feel like there\'s an action that happens nearby here (i.e. usually there\'s an if statement following this). Oddly enough this might be somewhere where having passive tone (i.e. settings for controller offset will be exposed in the inspector) would be clearer'"
8455,483114420,"b""Can this explicity use the term 'Leap VR Device Origin' to be clear exactly what field needs to be set?"""
8455,482283908,b'| Initial Hand Depth 0.2 | New Default Hand Depth 0.35 |\r\n|---|---|\r\n|  ![LeapDeskHandsDepthOld](https://user-images.githubusercontent.com/53493796/92021327-74048600-ed0e-11ea-8467-8f35592474b9.gif) | ![LeapDeskHandsDepthNew](https://user-images.githubusercontent.com/53493796/92021345-79fa6700-ed0e-11ea-987d-cae1fe2ad59b.gif)| '
8455,483116636,"b""Question for myself - degrees vs radians. Degrees I assume are more common, which is why we don't specify units here right? I think for distance things are generally understood to be meters, maybe for angles it's the same"""
8455,483212136,"b'Yes the assumption is that the X -axis tilt is in degrees, I followed the constraints that were in the LeapXRServiceProvider. '"
8072,442474782,b'All these added AssemblyInfo.cs files is a good reminder that we should try to revive #7986 / https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8005'
8072,445856897,b'@keveleigh mentioned `versionDefines` and `noEngineReferences` are new to Unity 2019.  Some of the asmdefs have these fields while others do not.  Do we want all of the asmdefs to align with Unity 2018 or 2019?\r\n\r\nWondering because I thought we were slowly moving away from 2018.'
8151,452388554,"b"">(not supported on Unity 2020 and newer)\r\n\r\nIs this true? I didn't think Leap Motion had a specific XR pipeline dependency. @CDiaz-MS?"""
8151,452393633,b'There is no specific dependency on the XR pipeline in the Leap Data Provider.'
8151,452400666,"b'@CDiaz-MS, to be clear, the leap provider uses _no_ Unity XR APIs?'"
8151,452401834,b'removed .legacy and the erroneous 2020 note'
8151,452402801,"b'Yes, no Unity XR APIs are used.  Only refs to MRTK and the Leap Core Assets package.'"
8072,443703212,"b""Attempted a Standalone build and there are errors associated with the ObjectMeshObserver Provider:\r\n![image](https://user-images.githubusercontent.com/53493796/85315091-462dd600-b46f-11ea-91a7-5fd95b19060b.png)\r\n\r\n```\r\nAssets\\MRTK\\Providers\\ObjectMeshObserver\\RoomFileFormat\\RoomFileImporter.cs(6,32): error CS0234: The type or namespace name 'AssetImporters' does not exist in the namespace 'UnityEditor.Experimental' (are you missing an assembly reference?)\r\n\r\n```\r\n\r\n```\r\nAssets\\MRTK\\Providers\\ObjectMeshObserver\\SpatialObjectMeshObserverProfileInspector.cs(20,17): error CS0246: The type or namespace name 'SerializedProperty' could not be found (are you missing a using directive or an assembly reference?)\r\n```\r\nI'm using unity 2019.4"""
8072,445014662,"b""Thanks for catching this! Should be fixed up in the latest now. It turns out yeah, it shouldn't be marked for all platforms because of this specific reason (though I suspect this could also be changed to work by not using editor APIs)."""
8259,466672830,b'The Leap name is present in the Oculus file'
8259,466672869,b'Same comment as above'
8259,466673067,b'Same comment as above '
8259,466673325,b'Same comment as above '
8259,466674774,b'Maybe we could add this method to FileUtilities for reuse?'
8259,466677725,b'Maybe we could add this one to FileUtilities also?'
8259,466683393,b'Reviewed PR too early'
8088,449261026,b'```suggestion\r\n\xef\xbb\xbf// Copyright (c) Microsoft Corporation.\r\n```'
8088,449261109,b'```suggestion\r\n// Licensed under the MIT License.```'
8590,490634906,"b""This feels like it should still be `OCULUS_ENABLED`, right? This file doesn't depend on the Oculus integration, just the Oculus XR Plugin package, and this define is in the asmdef:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/258e3ebab93bd86a7aed6ef2517884e0a079caa2/Assets/MRTK/Providers/Oculus/XRSDK/Microsoft.MixedReality.Toolkit.Providers.XRSDK.Oculus.asmdef#L23-L29"""
8590,490636614,"b""The problem is that the integration tool has no mechanism to remove/bring back the unity.xr.oculus package when the user tries to clean up the repository after removing oculus references. They has also been some CI issues regarding leaving a reference to Unity.XR.Oculus in the asmdef references, as by default the project doesn't import that package. Given that a large part of our focus for this project is to let users play with articulated hands tools with quest, I think it's alright to overall tie our Oculus story to the Integration Package asset."""
8590,490638610,"b""Does the integration tool add / remove this (`OCULUS_ENABLED`) version define? I thought we shipped this asmdef as-is, so it'll always be present.\r\n\r\nWe should make sure we're on the same page with https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8591 as well, which is looking to make sure we distribute properly 2019-ready asmdefs for UPM."""
8590,491182367,b'Checked up with that PR and only one asmdef update should be redundant. We can merge in with whichever PR gets in first.'
8668,494650501,"b""This naming seems a bit risky since I can imagine it colliding with another .asmdef at some point, though you've said you've said you'll be prepending these with MRTK so it should be good!"""
8668,494662574,"b'@RogPodge Is this a script that can be cleaned up a bit after https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8655? It looks like you edited one Oculus config checker there, but not this one'"
8668,494670326,b'fixed by appending MRTK'
8668,494672472,"b""yeah we can remove these I'll make a PR\r\n"""
8670,495126155,"b""Is this needed? This looks like new behavior that this script didn't used to do, and this `#define` is already in the asmdef:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/233ed7d00b8850f7982ce77eabd5b4732ffdaab3/Assets/MRTK/Providers/Oculus/XRSDK/Microsoft.MixedReality.Toolkit.Providers.XRSDK.Oculus.asmdef#L25-L31"""
8670,495126965,b'I think the summary might need updating.'
8386,480516806,b'We already have a blue (and other colors) material. Can we use those instead? https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MRTK/StandardAssets/Materials/MRTK_Standard_Blue.mat'
8386,477444155,"b""```suggestion\r\nThese assets are available using the Apache license, which means they're free to use, but not to trademark.\r\n```"""
8386,480514172,"b""Can we do this without adding another third party dependency? It's great if people can optionally pull that repo and assign sounds, but I don't think we should pull it into this repo (especially since it comes with its own, non-MIT license)."""
8386,480647683,"b""I'd very much like to see the audio remain. I had a chat with @wiwei about the license, and it seemed like Apache 2 is ok to be ingested. The only difference it has from MIT is that the contents can't be copyrighted by people."""
8386,480741168,"b'Ingesting repos like this can lead to GUID clashes (easily fixable, yeah) and getting out of sync with the source. It\'d be good to include a guide or pointer to using both of these together in an app, but I feel like adopting the license and importing the files are decisions best left to devs, plus they\'d be getting the latest and greatest audio clips instead of whenever we decided to snap.\r\n\r\nWe also already have a set of audio clips: https://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk_development/Assets/MRTK/StandardAssets/Audio \r\n\r\nHover Click.wav sounds somewhat similar (at least in intent) to several of the existing clips (ButtonPress, or Manipulation_Start for a louder version, or maybe Shell_Click_In or Select_Secondary).\r\nNew Object Interaction.wav does sound a bit different than any of our clips, but we have existing ""interaction"" noises throughout that could be the default.\r\n\r\nI feel like providing a consistent set of audio clips, with guides on other sets to use (like the MRTK-Audio repo) would be better than pulling these in ourselves. Adding @cre8ivepark if we feel like certain sounds are missing from the default set.'"
8386,481201585,"b'Fair enough for the HoverClick sound, though I will say the current clips are very faint. I was considering redoing all the audio with the friend who made these new clips, but the audio workflow is currently very lacking, as all clips are serialized references on a per-prefab basis, which makes migrating audio in bulk very cumbersome.\r\n\r\nBack to the point though - I think HoverClick is tonally similar enough to the existing clips that it\'s not problematic to use alongside existing sounds. Having this sound be a fair bit louder helps it stick out as well, but that\'s a subjective point. New Object Interaction sounds a bit different than other sounds, though I firmly believe no existing sounds appropriately convey the sense of displacement that it does, as related to the Teleport Confirmation sound.\r\n\r\nThe rest of the sounds, besides ""Background Menu Music"" aren\'t used in MRTK-Quest, and you may feel free to remove them if you find that they\'re not tonally appropriate to sit alongside existing MRTK sounds. \r\n\r\nI think having some basic music loop that fits with the existing soundscape tonally could be appealing as well.'"
8386,482200833,"b""Hey Eric, we're talking to some other folks on our team for making some in house versions of the audio to reduce the organizational+license jumble of dependencies, so even if not for this PR, we'll definitely be updating our soundscape in line with the improvements you've made!"""
8403,478742273,b'nit: please add { } around the single line ifs'
8557,489073122,"b""We should keep an eye on this file's name with regards to https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8511. It's pretty long!"""
8519,486437216,"b'Do you think we might be able to make this `internal` instead, and use `InternalsVisibleTo` to test it?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/06a06778e38da622b37cc299a93f16e143b7bdeb/Assets/MRTK/Core/Definitions/InputSystem/MixedRealityInputSystemProfile.cs#L10\r\n\r\nIf you expect people might need to call this directly, it can go `public`, but this feels like code we should make only usable from the menu items.'"
8590,490634390,b'Does this handle the case where this is being consumed outside the repo and no csc file is present?'
8590,490635353,"b""I'm not sure since the initial code was derived from the leap motion process, I can double check to make sure that nothing crashes/make the appropriate adjustments"""
8590,491207897,"b""Do you think this should be a silent return? It feels like this might be an okay (and probably the most common) case, and seeing this log _could_ be confusing (do I need a csc.rsp? why don't i have one?)"""
8590,491220751,"b""Yeah you're right making this silent should reduce the confusion for people importing our package."""
8616,492338864,"b'nit, slight optimization\r\n\r\n```suggestion\r\n            return files.Length > 0;\r\n```'"
8616,493041734,"b'```suggestion\r\n        /// Integrate MRTK and the Oculus Integration Unity Modules if the Oculus Integration Unity Modules is in the project. If it is not in the project, display a pop up window.\r\n```'"
8616,493042060,b'small nit on casing `oculusIntegrationPresent`'
8616,493042134,b'casing here too'
8616,493042666,b'```suggestion\r\n            if (DetectOculusIntegrationDefine())\r\n```'
8616,493043435,b'Looks like `ReconcileOculusIntegrationDefine()` also calls `DetectOculusIntegrationDefine()`. Can the bool from the call in this method be passed down instead? Finding all files _could_ be an expensive operation depending on the number of files.'
8616,493043878,b'But this change might not be necessary based on https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8616/files#r493043435'
8616,493059345,"b'```suggestion\r\n            // If the user tries to separate the Oculus Integration assets without assets in the project display a message\r\n            if (!oculusIntegrationPresent)\r\n            {EditorUtility.DisplayDialog(\r\n                    ""MRTK Oculus Removal"",\r\n                    ""There are no Oculus Integration assets in the project to separate from MRTK"",\r\n```'"
8847,512927116,"b""Would this be able to call `OVRProjectConfig.GetProjectConfig()` instead of manually searching? It looks like that method  goes and grabs the asset based on the plug-in's internally known path."""
8847,512927387,"b""Though, it also creates one if none exists. Not sure if that's behavior we want to trigger? Though it seems like the asset is required for this feature."""
8847,512929398,"b""That sounds like the right method to use I'll change it\r\n"""
8847,512956621,"b'Do we want this to be a bit more descriptive? Maybe something like ""Enabled Oculus keyboard and hands/controllers"" or something?'"
8847,512957802,"b'Just missed this, will update message in a followup PR'"
8847,512959767,b'https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8851 here we go.'
8386,476928560,"b""I'm not really following why the custom teleport pointer needs to be managed by MRTK-Quest? Why not just have MRTK support teleport pointers with articulated hands? What does it mean for MRTK-Quest to manage something? Isn't Quest just another platform for MRTK, not something external that needs to be added?"""
8386,476932209,"b""Yeah reading over eric's comments on the custom teleporter pointer class I'll be looking to see if we can tear it off of it's mrtk quest dependency and make it more general to the ArticulatedHand controller type."""
8386,479425875,"b""@julenka the reason why the custom teleporter was managed by MRTK-Quest was because the articulated hand definition doesn't provide the ability to add extra input actions, and the parabollic pointer needs a Vector2 action to work.\r\n\r\nBeyond that, I took the time to add extra polish, with the main improvements are just the logic around the cursor  management (making it appear only when needed and directly controlling it, rather than spawning a separate prefab), adding audio, as well as modifying some of the colors for the ray gradient, in addition to utilizing the StabilizedRay utility to smooth the the ray direction.\r\n\r\nAlso, I noticed that the parabollic pointer ray has some dot product check that checks the ray's alignment to the ground, and scales the ray velocity accordingly. I modified that math to make it move more responsively when youre teleporting near yourself."""
8386,480512635,"b"">doesn't provide the ability to add extra input actions, and the parabollic pointer needs a Vector2 action to work.\r\n\r\nCould you fire an arbitrary input event based on a teleport input action mapped in a device manager profile? For example, have a\r\n\r\n```\r\n[SerializeField]\r\nprivate MixedRealityInputAction teleportAction;\r\n\r\npublic MixedRealityInputAction TeleportAction => teleportAction;\r\n```\r\n\r\nIt seems like there's already code to handle this case:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/4e60a8bcbde64dd05fd86062b314736b6d7d629f/Assets/MRTK/Providers/Oculus/XRSDK/MRTK-Quest/Scripts/Input/Controllers/OculusHand.cs#L336-L339\r\n"""
8386,482182581,"b'We may also want to check that the `teleportInput` value has actually changed. I might be missing it, but is there currently a guard for that or will it be sending a constant stream of `Vector2.zero` when not in teleport pose?'"
8386,482610065,"b""nit on the capitalization of `SettingsProfile`, since it's a private field"""
8386,482622896,b'We set the teleport action to None when we start Update Teleport\r\n\r\n283            MixedRealityInputAction teleportAction = MixedRealityInputAction.None;\r\n\r\nSo we only raise input changed events if the teleport action has changed away from that default value.'
8386,485211109,"b'Do we need to do all this manual pointer management now that we\'re only using the ""official"" teleport pointer? This feels like a case that should be handled by the pointer mediator.'"
8386,485211464,"b'Another question about manually managing the teleport pointer now that we\'re using the ""official"" one. I don\'t think any other input source manages this manually. Do you know why we need to do so here?'"
8386,485263075,b'Oh and pinging this one to see what you think'
8386,485265020,"b'This changes every time `UpdateTeleport()` is called though, right? As long as a teleport pointer is found (line 299)'"
8386,485265409,"b""Which feels like we might be sending the same value over and over again, even if `teleportInput` hasn't changed"""
8386,485267724,"b""Digging in a bit, actually yeah let's leave this as-is for now. We can migrate this logic to the DefaultPointerMediator when we do the work to make this logic work across all articulated hands (instead of just Oculus)"""
8386,485639863,"b""This was there originally for the custom pointer, but given that the mediator wasn't really built with the teleporter in mind, I think this logic remains necessary. All aboard the train to eventually move it to the DefaultMediator"""
8386,485775222,b'It looks like this should be raised by the teleport pointer. Can we rely on that instead? Maybe just send a single `Vector2.zero` input event?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/06a06778e38da622b37cc299a93f16e143b7bdeb/Assets/MRTK/SDK/Features/UX/Scripts/Pointers/TeleportPointer.cs#L437-L442'
8386,485784684,"b'```suggestion\r\n            if (teleportInputChanged)\r\n            {\r\n                RaiseTeleportInput(stickInput, teleportAction);\r\n            }\r\n```'"
8386,485786089,b'To fix code validation\r\n\r\n```suggestion\r\n        // Used to track the input that was last raised\r\n```'
8386,485786778,"b'```suggestion\r\n                RaiseTeleportInput(Vector2.zero, teleportAction);\r\n```'"
8386,485787427,"b'No - going back to Vector2.zero can trigger a teleport completion rather than cancellation, which is why this code is there in the first place.'"
8386,485792031,"b""Oh right, the case where we're hovering over a teleport-able spot and drop our hand. True.\r\n\r\n~Am I missing the part where `TeleportRequestRaised` gets reset though? Seems like it'll stay `true` if we don't tell anything to the pointer.~"""
8386,485792558,b'Found it! https://github.com/microsoft/MixedRealityToolkit-Unity/blob/06a06778e38da622b37cc299a93f16e143b7bdeb/Assets/MRTK/SDK/Features/UX/Scripts/Pointers/TeleportPointer.cs#L507-L514'
8386,485793073,b'Thanks for pointing out my missing case @provencher!'
8833,510324862,"b""We may want to cache the HandTrackingProfile somewhere, so these scripts aren't reaching into the InputSystem every update."""
8714,525448935,b'There are a couple of lines commented out in this file '
8977,529070560,b'Can this call into the definition instead?\r\n\r\n```suggestion\r\n                        handDefinition.UpdateCurrentIndexPose(Interactions[i]);\r\n```'
8977,529070728,b'Can this method (`UpdateIndexFingerData`) be removed with this call removed?'
8977,529071465,"b""I'm also not sure if `currentIndexPose` is being updated with the removed call to `UpdateIndexFingerData`"""
8557,489024461,"b""Do you know if there's a reason this assembly exists? It seems to contain one script (HandPoseUtils.cs), and the other script we use from MRTK-Quest (OculusHand.cs) is in the root `Microsoft.MixedReality.Toolkit.Providers.XRSDK.Oculus` assembly. Can we remove this asmdef?"""
8557,489060562,"b'I think we had it sequestered off initially because it used some Oculus package specific code before, removing this asmdef once ensuring its no longer needed.'"
8259,471849877,b'Do we need an MRTK.ThirdParty folder?'
8259,474989863,b'Is this included in the Oculus package?'
8259,474996819,"b'yeah Oculus.VR is in the included Oculus package, when the package is not available its just greyed out (I think leap motion does a similar thing)'"
8259,475854251,b'is the hand support limited to android (quest)? should we include only that platform?'
8259,475869476,"b""yes I'll change the definition to be android quest only"""
8259,473299797,b'Should this be in an examples namespace if this is a debug example?'
8259,473300038,"b""I don't think this line is necessary (since everything down below is already in the same namespace) right?"""
8259,473259382,"b'Do we need / use these scripts in the Debug folder? This one also seems like duplicate functionality to the Follow solver, which allows you to select a specific joint to follow:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/8a2b2f56e649244bad69f20e6f59fceca6782fbe/Assets/MRTK/SDK/Features/Utilities/Solvers/SolverHandler.cs#L64-L66'"
8259,473265462,"b""I didn't know how those debug scripts related to our current suite of scripts. I don't think we need them just didn't want to exclude anything that might have been useful by default"""
8259,473303747,"b""It might be worth putting these in a .Debug namespace (or examples as mentioned above).\r\n\r\nThis definitely does have a lot of overlap with our existing solvers - if there is a key difference it would be interesting to call out.\r\n\r\nFor some of these things where we're not sure, we may can always stuff them in an experimental namespace to give clarity to consumers that this will likely change as we stabilize the area."""
8259,473303952,b'```suggestion\r\n```'
8259,473304065,b'Here and below (this should fail CI because we have a linter for this)'
8259,473313396,"b'It might be worth commenting both the class here and some of the methods to mention how they differ from other gesture/pose stuff in the rest of the MRTK - i.e. it might be confusing now that there\'s grab gestures/events and also this grab helper function, which are completely unrelated.\r\n\r\nDocumenting the purpose of when this can be useful (i.e. systems that don\'t have similar native gesture support or whatever) can help avoid complications in the future where someone is like ""hey I\'m getting a grab event here but then I ask this HandPoseUtils and it says it\'s not grabbing!""'"
8259,475854956,b'```suggestion\r\n        /// Returns curl of middle finger ranging from 0 to 1. 1 if index finger curled/closer to wrist. 0 if the finger is not curled.\r\n```'
8259,475855311,b'nit: extra blank line'
8259,475855445,b'nit: extra blank line'
8259,475855610,b'nit: extra blank line'
8259,475855764,b'nit: extra blank line'
8259,475855870,b'nit: extra blank line'
8259,475859677,b'unchecked code generally makes me nervous. this block requires customers to explicitly enable unsafe code in the player settings\r\n\r\n![image](https://user-images.githubusercontent.com/13281406/91090191-8c3b1d80-e609-11ea-9716-9b458c495740.png)\r\n'
8259,471850157,"b'Feels like this should be a peer of XRSDK (likely renamed to XR2018, to maintain parity with other folders)'"
8259,471850331,b'That presumes we are planning on supporting MRTK-Quest for the Unity 2018 XR API'
8259,474989585,"b""Ooh, I'm not sure we should check this one in. We'd need to double check the license. Is this used for the hand support, or in an example scene?"""
8259,474996264,"b'yikes, it was used in an example scene, so its not essential and I can remove it'"
8259,471850706,"b'Should we unify the shader categories (""MixedRealityToolkit/RimOutline"")?'"
8259,471850867,"b'Since we are bringing this into MRTK, we should consider standardizing on the namespace.'"
8259,471850986,b'We should add a copyright / license header with the correct attribution'
8259,471851140,b'Similar comment re: assembly name standardization'
8259,473260877,"b""Are these the same GUIDs from the original repo? We probably want to regenerate them, so there aren't GUID clashes for anybody who already has the original extension installed when they update MRTK (or installs later)."""
8259,473265642,b'How do you regenerate guids?'
8259,473262649,"b""Do you know if there are any differences between this profile and the default in this repo other than the extension controllers being present? We might not need to include some of these profiles and can just use the main repo's default, since I see the new types being added to it in this PR."""
8259,473266044,"b""We don't need this profile I'll remove it so that we don't end up getting duplicates for people importing MRTK-Quest still"""
8259,474991058,"b""If this represents a prefab, can it just be a `GameObject` reference? That way it doesn't have to be in `OCULUSINTEGRATION_PRESENT`, which we've had issues with in the past when serialized fields are in `#if` blocks."""
8259,474991856,"b""I know most of this is coming from the other repo, but this feels like a weird thing to store in the profile (is this a profile? it feels like it's somewhat a profile but used differently)"""
8259,474999244,"b""Its a MRTK-Quest specific configuration profile. I don't think it matches any of our own profiles."""
8259,475010389,"b'the references to the prefab end up calling some OVRCameraRig functions, is it ok to do a GetComponent on the gameobject afterwards?'"
8259,475011498,"b""Yeah definitely! At that point you'll be in code that's probably already wrapped in `OCULUSINTEGRATION_PRESENT`, so it'll be good"""
8259,475862570,"b'```suggestion\r\n    [CreateAssetMenu(menuName = ""Mixed Reality Toolkit/Oculus Hand Tracking Config"")]\r\n```'"
8259,475863557,b'what are the units?'
8259,475864224,"b'in the tooltip, this is called CPU performance level, here it is called power level.... please use one term'"
8259,475864573,b'same comment as CPULevel'
8259,474990681,"b""My previous comment seems to have dropped off: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8259#discussion_r473256603\r\n\r\n>Do we want to make this more generic, like `OculusHand`? I assume in the future, Oculus will ship different headsets with different names that also have hand tracking, and it feels like this code would work there too and isn't specific to Quest."""
8259,474992901,"b""Maybe a stretch goal, but it'd be great if we eventually reconcile this class with the [ArticulatedHandDefinition](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MRTK/Core/Providers/Hands/ArticulatedHandDefinition.cs) class, which tries to standardize several common hand concepts, like these default interactions.\r\n\r\nOther hand classes use it like https://github.com/microsoft/MixedRealityToolkit-Unity/blob/0fa524aa93b255b0a6710ce913be3a5782d1093c/Assets/MRTK/Providers/LeapMotion/LeapMotionArticulatedHand.cs#L43"""
8259,474993360,"b""Should all this teleport logic just be removed, since it's commented out? I think there are some other references to it, and some custom teleport classes being checked in (like CustomTeleportCursorHandler) and a CustomTeleportPointer reference higher up in this class."""
8259,475010511,"b'I think we want to add it back in after this first round of PRs, I was going to leave it in to make it easier to test/vet when we get to that point'"
8259,475865862,b'is this going to be uncommented? why is it commented out?'
8259,475920290,"b""It will be uncommented in a followup PR to add teleporter pointer features. I'll delete the commented out sections for now since it seems to be confusing and be careful when adding it back in."""
8259,475969397,b'Updated with clear #if LATER markers'
8259,473256603,"b""Do we want to make this more generic, like `OculusHand`? I assume in the future, Oculus will ship different headsets with different names that also have hand tracking, and it feels like this code would work there too and isn't specific to Quest."""
8259,473305522,b'Nit: Thoughts on just going with OculusQuest or Quest or Oculus instead of MRTKQuest? I think when it was prefixed with prvncher it made more sense to have MRTKQuest (because then you knew what it was for)'
8259,475866536,b'just checking. are we only supporting quest with this provider? or are we also supporting rift?'
8259,475921439,"b'I think it works on quest and rift based on the online documentation for the integration package and the xrsdk pipeline, but not completely sure how some components like handtracking work on the rift.'"
8088,444430964,"b""It doesn't look like these cases are currently used (and I don't think GGVHand will be needed even when the Oculus XR SDK plug-in supports hand tracking). Should they be removed until it's implemented?"""
8088,445028864,b'Nit: Curious about consistency - why does this function use an if () but the other ones use switch () (where they are roughly doing the same thing?)'
8088,445034386,"b'Characteristics is an unity.xr-side inputdevice property which is separate from our own SupportedControllerType definition. Characteristics is a bitmask that defines several properties that a input device can take on (controll, handtracking, headmounted, etc)'"
8259,474993526,b'Comment references HL2. Might need updating / removing'
8259,474993824,b'A couple typos throughout this `skelton` -> `skeleton`'
8259,474994417,"b""This is maybe a larger question, but do you know if we're able to talk directly to whatever APIs this avatar prefab gets the hand data from instead of needing dependencies on in-scene components from another SDK / toolkit?"""
8259,475011995,b'The local avatar prefab is just used to show some kind of hand model when using the quest controllers.\r\n\r\nHow things look when using the quest controllers\r\nWithout MRTK Quest\r\njust the standard 3 axis XRSDK controllers\r\n\r\nWith MRTK Quest\r\nWhen Render Avatar Hands checked you get 3d hand meshes thanks so the LocalAvatarPrefab\r\n![image](https://user-images.githubusercontent.com/39840334/90943021-edc27880-e3cc-11ea-84b8-2dcb6ea0ec00.png)\r\n\r\nIf Render Avatar Hands is unchecked you get generic oculus quest controllers visualized\r\n'
8259,475016140,"b'I wonder in this case if we need a dependency on something in the Oculus package for rendering, or could we use [the rigged hands](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7993) that were added recently? Since I think they\'re based on the joint events, it should ""just work""\xe2\x84\xa2 and it\'ll be done in a bit of a more cross-platform way'"
8259,475866832,b'/// < inheritdoc />'
8386,480512960,"b'I know this is already-merged code, but this `MRTKOculusConfig.Instance` pattern goes against a lot of the established MRTK patterns. This feels like a lot of it should be part of a data provider profile, with accessors on the data provider instead of on some singleton ScriptableObject.'"
8386,480517608,b'Would also help with an assigned teleport action (referenced at https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8386#discussion_r480512635)'
8019,441167111,"b'Good point, fixed.'"
8019,441170486,b'Fixed'
8019,441219220,"b'A ""forcing"" value is the typical name for the ""input"" to a damped harmonic oscillator; see https://en.wikipedia.org/wiki/Forcing_function_(differential_equations)\r\n\r\nI can explain this further in the comments.'"
8019,441219615,"b'Done, fixed with local functions/closures.'"
8060,441699798,"b""This is duplicated from @thalbern 's tests above, going to keep for now to keep consistency."""
8019,444528216,"b'Fixed, thank you.'"
8019,444528448,"b'Fixed, thank you'"
8019,444528879,"b'Fixed, thank you'"
8019,444529381,"b'Fixed, thank you'"
8019,444530602,"b'OK. Personally I\'m an advocate for ""private functions"" when they serve a purpose as closures specifically. These were originally closures but I changed them into functions... but then didn\'t separate them.\r\n\r\nGiven that these aren\'t actually closures, it\'s separate them like you\'ve suggested!'"
8019,444530950,"b'Fixed, thank you'"
8019,444531299,"b'Resolved, thank you'"
8019,444531513,"b'Resolved, thank you'"
8019,444548927,b'Thanks! Moved structs into ElasticTypes.'
8160,453057580,"b""This is a bit tricky. The hand safe zone targeting system typically uses a raycast method to generate safe zone targets; however, the bounds used in the raycast method are not very precise, and are too unstable for something like precise palm positioning.\r\n\r\nTherefore, the majority of the time, you'd want to disable this raycast system when using palm mounts.\r\n\r\nAny other safe zone target can/should still use the raycast system."""
8160,453057911,"b""The hand safe zone target system uses raycasts to detect safe zones. This is the existing safe zone system; I don't fully agree with how it works but I wanted to keep the existing functionality as-is, if the user desires. """
8160,453139183,"b'@julenka This has been amended in the new commit. As the raycast system has been overhauled/improved to use local computations, the raycast is now sufficiently accurate for palm positioning.'"
8160,453139208,b'This property has now been removed.'
8160,453140856,"b'Good point, will fix.'"
8160,453992084,b'OK!'
8160,453993970,"b'Ah, good point.'"
8160,453996150,"b'Yep, good call, thank you.'"
8160,453996603,"b'Ok. I didn\'t know if changing the docstring would be ""bad"" with respect to the API surface. Good to know we can update them.'"
8160,454018407,b'Whoops. Forgot that. Thanks for catching it'
8160,454064295,"b""@keveleigh The rest of the code here would also fail if you couldn't obtain joints from the hand. So yep, this wouldn't work with controllers; but the rest of this entire hand constraint system also _assumes_ we are only using this with hands. I agree, it would be valuable to be able to use this system with non-hand controllers; but that would be better for another PR, imo."""
8160,454118713,"b'>Could you remove the hand OnSourceLost like we do for the global bounds?\r\n\r\nWow thank you for spotting that. That was a big oversight on my part. Thank you.\r\n\r\nDidn\'t know about gizmo matrices. That is a cool feature; I had sort of assumed that gizmos were just ""you get what you get"". I will add that.'"
8160,454120325,"b""I am not sure if I 100% understand the question; but I'll outline the reasoning:\r\n\r\n- If we have a proxy specified and no hand joints are found, we need to calculate bounds based on the renderer of the specified proxy (because, probably, we have no hand and we are using some kind of controller visualization)\r\n- We still need to compute the local AABB of the proxy/controller visualization in local space.\r\n- Thus, when we compute the local AABB, we use the proxy's inverse transform.\r\n\r\nWe do not use the hand/palmPose's inverse transform when evaluating the proxy's AABB because the use of a proxy implies that we _don't have a hand._ This is specified explicitly as all of the proxy calculation code is wrapped inside a `if (!handContainsJoints)`. \r\n\r\nIn `OnHandJointsUpdated`, we know we're actually using a hand joint-enabled input method, which means we are _not_ using the proxy, and instead we are now computing the local AABB with respect to the hand joint itself (no proxy involved.)\r\n\r\nIs this reasoning sound?"""
8160,454126929,b'Gizmo improvements now added.'
8127,454660859,b'Some of the files in our codebase use the more concise syntax:\r\n\r\n```\r\nget => enableVerboseLogging;\r\nset => enableVerboseLogging = value;\r\n```\r\n\r\nShould this also follow this syntax too?'
8192,457761327,"b'It is quite fast, < 1s I believe. I can reduce the # of frames that are used for the MoveHand calls.'"
8192,457806950,"b""That's a great point Kurtis.\r\n\r\nI'm not sure we ever switch interaction modes (near vs far) halfway through an interaction. @julenka do you have insight on this?"""
8194,457848700,"b'Nit: Maybe we can use the\r\n\r\n```\r\nget => safeZoneAngleOffset;\r\nset => safeZoneAngleOffset = value;\r\n```\r\n\r\nsyntax? It is already used elsewhere in MRTK and is quite concise. (Just checked, it is also used elsewhere in this file itself, too!)'"
8194,457852189,"b'Design question; is the overloading pattern ideal here? It seems as though the additional overload does significantly different work here. The angle offset _could_ be applied to the AtopPalm safezone, just as a simple rotation around the palm joint ""up"" axis. If we used the angle offset to rotate the AtopPalm safezone, we could unify these calls and simplify this ""special case"" (as there would be no more special case; AtopPalm would simply be rotated, too.)\r\n\r\nThe use case for rotating the AtopPalm constraint could be quite important, actually; when I was designing the Trackbox prototype, I really wanted to have a handedness-dependent rotation offset. The existing HandBounds lets you specify a universal rotation offset already (to the hand constraint itself) but it does not let you do it a handedness-dependent way (i.e. flip the rotation depending on left/right hand). I for one would definitely use this feature if it applied to AtopPalm, and I would guess many others might too.'"
8198,458409372,"b""Some comments explaining exactly what this check does would be nice; it's not immediately clear what the functionality is here. (Including how the above nullcheck will regenerate a non-file-bound ScriptableObject that is serialized along with the root object.)"""
8198,458409515,"b""I assume this is to make the inspector greyed out for shared objects... Probably should comment this; this is pretty core functionality and this is based on a design decision (i.e. we have made a judgement call that the user _should not_ be able to edit shared configurations from one of the consumers' inspectors). It's a pretty significant judgement call, so (in my opinion) we should probably call that out in some comments."""
8198,458411605,"b'Extremely tiny nit; we usually stack arguments when the function call is extremely ""wide"", like this:\r\n\r\n```\r\nSomeVeryLongFunctionCall(""One very long string that has a lot of words!"",\r\n                         ""This second argument is vertically aligned with the first!"",\r\n                         someVeryLongVariableThatIsAlsoVerticallyAligned);\r\n```'"
8198,458412820,b'Extra spaces'
8198,458413017,b'Extreme nit; we usually capitalize comments'
8200,459789802,"b'This script/class is purely example code for developers to see how they can leverage `ElasticSystem` in a ""raw"" way to drive UI interactions directly.'"
8200,459790101,"b""You might be seeing several of these strange Flags casts, this is due to how serialization of custom enums and custom inspectors don't play very nicely together."""
8200,459790320,b'Moving internal to public so that developers can subclass to make their own ElasticSystem variants.'
8200,459790732,"b""Removing the base implementation and making the base elastic system class completely abstract, cleaning up the base class interface and making the derived classes' behavior more explicit."""
8200,459791119,"b'Generically typed extent structs are no more! They are replaced with specific structs used by each type of elastic system. Unfortunately, generically typed structs are **not serializable** in Unity 2018 or 2019. Unity 2020.1 supports generic serialization at a certain level, but it is not widely supported.'"
8200,459791350,"b'This elastic system already existed in the prior version of the Elastic classes that were already merged in; this particular one used to be located in `ElasticSystem.cs` but is now in its own file, for consistency.'"
8200,459791465,b'Helper class containing several utility functions for clarifying quaternion operations. '
8200,459792153,"b'Will only continue simulating the spring if the user is not actively manipulating the object, if the elastic is non-null, if that particular type of elastic is enabled, and if the current elastic velocity is above the threshold.'"
8200,459792504,"b'Smoothing is not applied at all if elastic is enabled. This is because elastic essentially serves the same purpose as smoothing, and applying both may result in unwanted sluggishness when interacting. I am open to discussion and input on this decision!'"
8200,459792613,b'SnapRadius is now moved from the elastic properties into the elastic extent.'
8200,460156490,b'Fixed'
8200,460156598,"b'.....fixed? Now says ""widget""'"
8200,460156658,b'Fixed'
8200,460157276,"b'The reason I did this was because they were semantically linked (in my head, at least). Fixed according to your suggestion now!'"
8200,460166392,"b'Generally yes; however the snap radius can always be significantly _less_ than half the distance between the closest two snap points.\r\n\r\nIn addition, snap points are not always the ""regular, repeating interval"" kind of snap points; they can be arbitrarily placed/spaced out, so ""half the distance between the closest two snap points"" doesn\'t really have a definite meaning/value. '"
8200,460166903,"b'The elastic dimensions have no physical meaning/relationship until the elastic system is actually hooked up to something.\r\n\r\nA ""linear"" elastic system can be used to drive euler rotations, too, or the brightness of a light, or the color of a material.'"
8200,460167118,"b'Ah, yes, I can clarify that.'"
8200,460167519,"b'Yes, that would be useful. Would be able to constrain the elastic system within a bounds, but the snap points would still ""tile"" within the bounds.'"
8200,460167617,"b'Aha, good point.'"
8200,460172000,b'Ah good find!'
8200,460173754,b'Added comment clarity (euler arc-angle)'
8200,460174523,"b""I typically don't use any one letter variables either, but given that this is really just a mathematical evaluation of a formula it really does help clarity to have single-letter variables. I can change it though."""
8200,460175540,"b'Yes, these are very different than the included versions... I definitely should have clarified this. This is an improvement on the existing implementation because of the `shortWay` option!'"
8200,460176679,"b'Is this not a code style issue? I always thought it was preferred to do `var == false` instead of `!var` because it makes it much more explicit and readable. (This was the policy on my old team, but if we do it differently here, all good)'"
8200,460179077,"b'Definitely, working on that now'"
8200,460220756,b'Already fixed!'
8200,460220864,b'Good catch!'
8200,460223872,"b'I was told otherwise in a prior PR by @wiwei (I think it was Will). The guidance was that the first line is ordinarily indented, with each argument beyond that vertically aligned with the first argument. I can clarify'"
8200,460257406,b'Has now been removed'
8200,460257497,b'Has now been removed'
8200,460258466,"b'OK. Had a discussion with Will about this, changing now'"
8200,460258534,b'Now removed'
8200,460273980,"b'Good point. I put the `HasFlag` check first, because if the user has not selected elastic to be enabled, this check should short-circuit and the magnitude should never be evaluated.\r\n\r\nThe checks are ordered from ""least expensive"" to ""most expensive"". The magnitude will never be evaluated if the elastic is not enabled.'"
8200,460292135,b'Fixed'
8200,460295538,"b'Ok, chatted with Will, deferring to this guidance'"
8200,460302993,b'Fixing!'
8200,460307545,b'Fixed'
8200,460307569,b'Fixed'
8200,460321892,b'Done!'
8200,460322507,b'Fixed'
8200,460322528,b'Fixed'
8200,460322722,b'Fixed'
8200,460342657,"b'Oh, good point.'"
8200,460344675,"b""@RogPodge it's now an interface, thank you :)"""
8200,460344766,b'Now using `const`.'
8236,463404620,"b'Reminder; this is mostly identical to the existing `RotationHandlesConfiguration` and `ScaleHandlesConfiguration`. Suggestion for this file should also apply to the other files, too.'"
8236,463404704,b'Prepping for extensible/subclassed handles.'
8236,463404730,b'Prepping for extensible/subclassed handles.'
8236,463404808,b'Prepping for extensible/subclassed handles.'
8236,463404826,b'Prepping for extensible/subclassed handles.'
8236,463404836,b'Prepping for extensible/subclassed handles.'
8236,463404952,"b'Reminder; this is mostly identical to the existing RotationHandles and ScaleHandles. Suggestion for this file should also apply to the other files, too.'"
8236,463762147,"b'Whoops yes, thanks for the catch.'"
8236,463762544,"b""@thalbern Links cannot be created if rotation handles don't exist. Therefore I'm not sure what it would even mean to reset the links if/when they were never created to begin with?"""
8236,463762752,"b""@thalbern  They do not. The links can't be created without the rotation handles being created."""
8236,463763317,b'@wiwei  I am not familiar with how our event listener system works with this stuff. This is directly copied from the other handles. I would defer to Berni for questions about that.'
8236,463776769,"b'@thalbern Flags require the 1,2,4,8 values. If we re-defined the values of HandleTypes we could, but I thought this would be better. Separate flags enums are already used elsewhere in the codebase.'"
8236,463785977,b'Deferring to @thalbern here. The other handles use this pattern.'
8236,463786071,b'Same comment about deferring to @thalbern above'
8236,463786354,"b'@thalbern , what is the situation with this? I am not very familiar with how you do the collider mechanisms. Would appreciate some eyeballs on this. The other handles all use this same mechanism, as far as I can tell?'"
8236,463786885,"b'@thalbern if we implement this change, this should apply for all of the other handles too. The other handles use anonymous indices for keeping track of handles too. Would appreciate your thoughts on this.'"
8236,463787032,b'@thalbern Deferring to you here; using string compare for handle management'
8236,463794605,"b'Will do. We should make sure to do it in the same way, for consistency.'"
8236,463797066,b'@wiwei Downgrading back to `private` for all changed properties.'
8236,463797154,"b'Reverted, back to `private`.'"
8236,463797179,"b'Reverted, back to `private`.'"
8236,463797208,"b'Reverted, back to `private`.'"
8236,463797244,"b'Reverted, back to `private`.'"
8236,463805725,b'Done :)'
8236,463805775,"b'Done, thanks.'"
8236,463822406,b'Added'
8236,463833863,b'@thalbern ?'
8236,465319365,"b'Resolved, using builtin config visibilities instead of flags.'"
8236,465320228,b'Flags now removed. We now only use the internal config visibility options.'
8236,465320332,b'Flags removed!'
8236,465335119,"b'Fixed in the other handles, too. Thanks for the catch.'"
8236,465335210,b'Thanks for the catch.'
8236,465339638,"b'Fixed, thanks'"
8236,465339711,b'Fixed!'
8236,465346569,b'Yes. Moving these to the top on `RotationHandles` too.'
8236,465351473,"b""I'm not sure there's any specific order. It calls `VisualUtils.GetFaceCenterPosition()` which takes an arbitrary index to calculate."""
8236,465351956,b'Not sure. This is the way that `RotationHandles` is written. @thalbern could you please elucidate the logic behind this ordering?'
8236,465352097,b'HandleFlags are no more!'
8236,465353092,b'Done.'
8236,465354736,b'Going to leave this to a separate PR for now.'
3745,271296414,b'Maybe. This was a direct port from Longbow. I can revisit this to see how it would look as a service and whether or not that would make sense.'
3745,271658328,"b""After looking into the service architecture a little more deeply for MRTK, I don't think that the Game Object Pool is ideal as a service.\r\nThe GameObjectPool is meant to be instanced. While you can have as many creators in a GameObjectPool as you want, it doesn't make since to have a GameObjectPool as a single entity to persist across the experience. The logic for this is that different scenes may have their own GameObjectPools that are meant to go away when the scene goes away, as the objects that are being recycled may not make sense to hang around in other scenes.\r\nAdditionally you create your own creators in code. While there is a generic one readily available, it will not satisfy object creation in all cases."""
3745,271658821,b'Note that GameObjectPools are not necessarily scene bound either. They can go away whenever you want them to at any point.'
3744,271668272,"b""You are right! I'll fix that."""
3745,272078004,"b""Again, it doesn't necessarily need to be a service. It certainly _could_ be, but the benefit of leaving it as is provides the ability to drop pools as needed. The GameObjectPool is not a singleton or meant to be a single pool. It certainly is _like_ a service, but I'm not convinced it should be unless you can articulate why it is better as a service."""
3745,273458511,"b'Yes, or at least, something similar. The interface here is not an interface for a GameObject creator, but rather handles actions taken by the creator on GameObjects, such as when it is preparing to recycle a GameObject or is preparing to use it.'"
3745,273459771,"b'In this way a GameObject that is in the pool can have a script that implements that interface (if needed) to carry out actions when recycling or use preparations are carried out on it. Perhaps ""**IGameObjectCreatorListener**"" or similar would be better as a name?'"
3745,273463381,b'Fixed'
3745,273463525,b'Updated the name to IGameObjectCreatorListener'
3617,265265934,"b""Yep, good question, we have the RenderCustomInspector available for overriding, so that path can be used. I needed to move actionOptions to this location and wanted to prevent overriding of this behavior by a sub class. My thinking is that if there is a compelling reason to undo it that RenderCustomInspector doesn't satisfy, it can be undone then. Today no class overrides it."""
3617,265696975,"b'Good idea on the comment, will add it.'"
3630,265788811,"b'What we generally did was implement a simple extension to Type that would look like this:\r\n\r\n#if WINDOWS_UWP\r\npublic static TypeInfo AsTypeInfo(this Type type) => return type.GetTypeInfo();\r\n#else\r\npublic static Type AsTypeInfo(this Type type) => return type;\r\n#endif\r\n\r\nThis way, you could just us AsTypeInfo() through out and not worry'"
3630,265789233,"b""I may be misreading this, but isn't this just adding the Type you are searching for to the list; and since Types are unique there will be just this one added, so this check could be omitted."""
3630,265789607,"b'There is info.IsSubclassOf(type) that you can use here, as it may not be immediate base class.'"
3629,265789904,b'Had to short circuit the sub class.'
3629,265790012,"b'Yeah, was thinking of doing that, will do that'"
3630,265790369,b'Use HashSet<Type> here'
3647,266618274,b'nit: default modifier'
3647,266618822,"b""I suppose these aren't expected to be serialized as well?\r\n\r\nI would make these properties"""
3647,266634901,"b'Nope, only fields, public or marked SerializeField\r\n\r\n---\r\nIn reply to: [266633797](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3647#discussion_r266633797) [](ancestors = 266633797)'"
3658,267118917,"b'Appears to be, I did do a full text search over all files under MRTK looking for these to update.\r\n\r\n---\r\nIn reply to: [267116879](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267116879) [](ancestors = 267116879)'"
3658,267119087,"b""I don't think so, because of the namespace above. This was the VS simplify usings etc\r\n\r\n---\r\nIn reply to: [267118065](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267118065) [](ancestors = 267118065)"""
3658,267119446,"b""Confirmed VS doesn't require fully qualified class with namespace here because of the the class being within current namespace.\r\n\r\n---\r\nIn reply to: [267119087](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267119087) [](ancestors = 267119087,267118065)"""
3658,267119750,b'I could also put this type inside the namespace block:\r\nusing Physics = UnityEngine.Physics;\r\n\r\nI  am fine either way\r\n\r\n---\r\nIn reply to: [267119045](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267119045) [](ancestors = 267119045)'
3658,267120667,b'To match the top level feature namespace\r\n\r\n---\r\nIn reply to: [267120422](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267120422) [](ancestors = 267120422)'
3658,267122334,"b""Sorry, do you mean different namespace than Editor? Or did you mean Chris' Unity* Prefix to Boundary to make UnityBoundary instead of UBoundary?\r\n\r\n---\r\nIn reply to: [267121608](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267121608) [](ancestors = 267121608)"""
3658,267123037,"b""Inline doesn't work in this case because the namespace for this class contains Windows; I can do a using here again with WMemoryManager\r\n\r\n---\r\nIn reply to: [267121827](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267121827) [](ancestors = 267121827)"""
3658,267126578,"b'I can update the MRTK.Windows to MRTK.UWP and this issue I described above would no longer happen, so I can inline the namespace.\r\n\r\n---\r\nIn reply to: [267123833](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267123833) [](ancestors = 267123833,267123037,267121827)'"
3667,267883379,b'Can we just pass in InputSystem to the InternalGazePointer?'
3658,267928732,"b'I personally like the condensed version, but I can change it if you like?\r\n\r\n---\r\nIn reply to: [267587565](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267587565) [](ancestors = 267587565)'"
3664,270508684,b'Do we want to update the comment?'
3732,270518792,"b'Yep, will update.\r\n\r\n---\r\nIn reply to: [270508873](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270508873) [](ancestors = 270508873)'"
3732,270518919,"b'Yeah, will update as well.\r\n\r\n---\r\nIn reply to: [270509711](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270509711) [](ancestors = 270509711)'"
3732,270519381,"b'Yeah, I was thinking of having a IsTracked {get;set;} value for each ISpatialCoordinate as well. I feel because we are experimental, we can do this when the need arises.\r\n\r\n---\r\nIn reply to: [270511687](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270511687) [](ancestors = 270511687)'"
3732,270519647,"b""I use VS's intellisense filling these in, so should resolve correctly.\r\n\r\n---\r\nIn reply to: [270512318](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270512318) [](ancestors = 270512318)"""
3732,270519852,b'Good call\r\n\r\n---\r\nIn reply to: [270513793](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270513793) [](ancestors = 270513793)'
3732,270575465,"b'I am choosing to go this route for several reasons:\r\n- Feel the pain of going this route, so that when we do make a full choice we understand. (I will be documenting this)\r\n- It is simple to flip back to only Unity types, and we are in the Experimental branch anyways.\r\n- Experiment with having this code used in Unreal.\r\n\r\n---\r\nIn reply to: [270518326](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270518326) [](ancestors = 270518326)'"
3732,270579239,"b'They should be able to, as VS intellisense resolved them.\r\n\r\n---\r\nIn reply to: [270515114](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3732#discussion_r270515114) [](ancestors = 270515114)'"
3845,272355984,"b'Could we drop the quick steps here, and say for more details see the guide?\r\n\r\nSomething like, but a bit more perhaps:\r\n1. Download the MRTK <reference to latest release>\r\n2. Import unity package into your project\r\n3. Run MRTK > Configure'"
3904,273690237,"b'>common logical platform [](start = 167, length = 23)\r\n\r\nI am not sure what a logical platform is, or is not, could we just say common platform? #Closed'"
3904,273690616,"b'>dream [](start = 205, length = 5)\r\n\r\nI personally am a huge fan of colorful words, but we should probably project a bit more seriousness of our offering in the first introduction #Closed'"
3904,273691264,"b'>start the scene and explore the scen [](start = 38, length = 36)\r\n\r\nnit: scene appears twice within a span of 5 words, perhaps ""start and explore the scene""? #Resolved'"
3904,273691752,"b'>You can use simulated hands to interact in editor.  [](start = 77, length = 51)\r\n\r\nCould we format it as: \r\nFor simulated interaction in the editor, you can:\r\n- Press WASD to fly around\r\n- Press and hold right mouse to look around\r\n- Press and hold spare bar to simulate hand #Resolved'"
3904,273691961,"b'>stuff [](start = 81, length = 5)\r\n\r\nnit: I would replace with ""experiences"", sounds a bit better than ""stuff"" #Resolved'"
3904,273692256,"b"">LWSRP, HDSRP and VRSRP  [](start = 188, length = 23)\r\n\r\nIs it expected for the reader to know what these stand for? I personally don't. #Resolved"""
3904,273692655,"b'>Explore the [hand interaction examples scene](README_HandInteractionExamples.md) if you haven\'t already. Instructions to get started are above. [](start = 2, length = 143)\r\n\r\nI probably would omit this as a ""next step"" since it should have been already done :) #Resolved'"
3904,273693048,"b'> Here are some suggested next steps: [](start = 86, length = 36)\r\n\r\nAlso, these steps don\'t appear to have anything to do with ""building my project"", maybe we can put them in another place? So that if a user scans for and stops at ""Get building your project"" we don\'t distract him from the task of building it #Closed'"
3904,273693437,"b"">implementation if you wish. [](start = 218, length = 27)\r\n\r\nWe should try and phrase this more of a strong suggestion, rather than a soft option for them. And offer to post an issue if they encounter issues, so they don't feel completely left out in the rain with the upgrade. #Closed"""
3937,275469290,b'Why not update IMarkerDetector with this?'
3937,275471004,b'Why is this method in a different class?'
3937,275471293,"b'Also, why have a Create method that does simple constructor instantiation?\r\n\r\n---\r\nIn reply to: [275471004](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3937#discussion_r275471004) [](ancestors = 275471004)'"
3937,275472581,"b'This is a very generic event arg, may name it as such: GenericEventArgs; or if you want it QR specific, then put a constraint on TData or better yet a concrete type.'"
3937,275472844,"b'>EventHandler<bool> [](start = 21, length = 18)\r\n\r\nOr why not simply employ this approach and do EventHandler<QRCodesTrackerPlugin.QRCode>?'"
3937,275474780,"b'>new Guid(); [](start = 19, length = 11)\r\n\r\nDo you wish to return an all 0 guid in case of failure to lookup? If so, perhaps just use default(Guid)? Better pattern would be to do TryGet'"
3937,275476460,"b'>size = 0.0f; [](start = 12, length = 12)\r\n\r\nnit: I tend to not set the value upfront, and only set as close to the return statement or when I know for sure I have the value I intend to set. This way, I get a compile error if I by accident forget to set the value correctly before returning'"
3937,275476718,b'Is this a textual representation of a Guid? Can we parse it and do a dictionary lookup?'
3937,275477203,"b'Is there an expectation of acceptable failure of creation? I would imagine it should throw an exception if it fails, and otherwise not return null'"
3937,275477420,"b""You don't need to guard this call with a ContainsKey, Remove should return true/false upon succesful deletion"""
3937,275477557,"b'Same here, you should be able to do if (_cachedMarkers.Remove(e.Data.Id))\r\n'"
3937,275483338,"b'Couple of points here:\r\n- If you are locking, you should lock around both dictionaries/managers if they are meant to be in sync\r\n- I would use TryGetValue, and it it returns false do the Debug.Log, set locatedAllMarkers to false and then ""continue;""'"
3937,275484823,"b'>Convert.ToInt32(qrCodeId); [](start = 31, length = 26)\r\n\r\nYou could do Int32.TryParse'"
3991,276378180,"b""I was debating, it's private cause it only serves the purpose of being an AssetImporter; will add this comment. #Resolved"""
3991,276699206,"b""app/extension code may potentially hit this, although I don't know how many would or do rely on MixedRealityToolkt_AbsoluteFoldersPath currently.\r\n\r\n---\r\nIn reply to: [276630039](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3991#discussion_r276630039) [](ancestors = 276630039)"""
4019,276878366,b'I will revisit all solvers namespace tomorrow.\r\n\r\n---\r\nIn reply to: [276877813](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4019#discussion_r276877813) [](ancestors = 276877813)'
4051,277828532,b'I will delete the code.\r\n\r\n---\r\nIn reply to: [277821264](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277821264) [](ancestors = 277821264)'
4051,277828959,"b'Good point, will do that.\r\n\r\n---\r\nIn reply to: [277822172](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277822172) [](ancestors = 277822172)'"
4051,277829370,"b""Added comment, it's the Unity defined script file id.\r\n\r\n---\r\nIn reply to: [277822892](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277822892) [](ancestors = 277822892)"""
4051,277830143,"b""Yeah I know, but it's a minor in terms of time, and I would rather keep it here for easier code understanding/readability as to how the value is gotten.\r\n\r\n---\r\nIn reply to: [277826520](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277826520) [](ancestors = 277826520)"""
4051,277830522,"b'This can only come with Unity upgrades, at which time we will test all this; but I will do a TryParse to validate we did get a guid indeed.\r\n\r\n---\r\nIn reply to: [277827565](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277827565) [](ancestors = 277827565)'"
4051,277832799,"b""The way I have it setup is that I assume all assets are YAML but the ones in ExcludedYamlAssetExtensions; and then I double check by opening the file and looking for the header. If the header is missing, it isn't YAML and we should add that extension to ExcludedYamlAssetExtensions.\r\n\r\nYAML can have arbitrary named extensions.\r\n\r\nI will update it to log a warning.\r\n\r\n---\r\nIn reply to: [277830136](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277830136) [](ancestors = 277830136)"""
4051,277835987,b'Let me try without it :)\r\n\r\n---\r\nIn reply to: [277834891](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277834891) [](ancestors = 277834891)'
4051,277836159,"b""I'll make it lower for here.\r\n\r\n---\r\nIn reply to: [277828536](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277828536) [](ancestors = 277828536)"""
4051,277836569,"b'Yes, it has been done when we copied editor dlls, will update.\r\n\r\n---\r\nIn reply to: [277829124](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277829124) [](ancestors = 277829124)'"
4051,277836986,"b""It is the escape string for string format done through $. The actual string representation is a single '{'.\r\n\r\n---\r\nIn reply to: [277833931](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277833931) [](ancestors = 277833931)"""
4051,277837142,"b""Not yet, this will give lot's of false negatives still.\r\n\r\n---\r\nIn reply to: [277834376](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277834376) [](ancestors = 277834376)"""
4051,277837837,"b'Will remove Todo keep the refresh.\r\n\r\n---\r\nIn reply to: [277835987](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277835987) [](ancestors = 277835987,277834891)'"
4051,277844955,"b""Actually we can't, but I will update it\r\n\r\n---\r\nIn reply to: [277841425](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4051#discussion_r277841425) [](ancestors = 277841425)"""
4088,278699011,"b'I would scope these tighter, inside the function; at least to avoid two function declarations, as when the signature changes we will hit this issue again if the second is forgotten to be updated.'"
4088,278699522,b'Could do ;)\r\npublic bool IsRecognitionActive =>\r\n#if UNITY_STANDALONE_WIN || UNITY_WSA || UNITY_EDITOR_WIN\r\n        keywordRecognizer?.IsRunning ??\r\n#endif\r\n        false;'
4189,281401155,"b'>var [](start = 12, length = 3)\r\n\r\nnit: Use explicit types. #Resolved'"
4189,281401283,"b'>ToString() [](start = 41, length = 10)\r\n\r\nConsider specifying precision for displaying, ie. ""G4"" #Resolved'"
4189,281401337,"b'>rotation.ToString() [](start = 65, length = 19)\r\n\r\nConsider precision, but also whether you want to use .eulerAngles #Resolved'"
4189,281401431,b'Consider precisions here. #Resolved'
4246,282568768,"b'Could we name this more generic, as this is a pretty awesome WindowBase in general for Editor'"
4246,282568937,b'Or use TimeSpan :)\r\n\r\n---\r\nIn reply to: [282565567](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4246#discussion_r282565567) [](ancestors = 282565567)'
4246,282569823,"b'>EditorGUILayout.EndVertical(); [](start = 16, length = 30)\r\n\r\nShould this be just below the curly at 177? Or rather the code above should be above that curly. (For style consistency)'"
4390,284814467,"b""Yeah, it will wait a frame because of Unity's synchronization context.\r\n\r\n---\r\nIn reply to: [284813578](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4390#discussion_r284813578) [](ancestors = 284813578)"""
4390,284814935,"b'I will add a comment.\r\n\r\n---\r\nIn reply to: [284814467](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4390#discussion_r284814467) [](ancestors = 284814467,284813578)'"
4460,285278425,"b'Dang, got myself into some troubl with spelling there #Resolved'"
4460,285283474,b'Not for this case. #Resolved'
4460,285284778,"b""It's supposed to be use for the session, but I haven't found need for it just yet. #Resolved"""
4460,285284856,b'Not sure why I have a change here. #Resolved'
4460,285287483,"b'Yeah, leaving as that for now.\r\n\r\n---\r\nIn reply to: [285282753](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4460#discussion_r285282753) [](ancestors = 285282753)'"
4460,285287782,"b'I will experiment with this more in the future.\r\n\r\n---\r\nIn reply to: [285284098](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4460#discussion_r285284098) [](ancestors = 285284098,285283658)'"
4460,285287981,"b'This will do more than that, for example synchronize the actual observer visual position, etc.\r\n\r\n---\r\nIn reply to: [285287131](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4460#discussion_r285287131) [](ancestors = 285287131)'"
4464,285326378,"b'We shouldn\'t swallow exceptions here, that is a very bad practice. We can log, and then rethrow by doing ""throw;""'"
4464,285326419,"b""Yeah, this is interesting. Maybe we can do a silent return, or should we actually process since these were as part of previous detection.\r\n\r\nI was to strict missing a clear race condition here, strangely I didn't hit it when testing."""
4464,285326437,"b'Yeah, good catch.'"
4480,285774347,"b'>TypeName [](start = 22, length = 8)\r\n\r\nWhy make this public?'"
4480,285774501,b'Why move this here?'
4480,285775172,"b'This class was supposed to be generic, I was going to extend it for ASA'"
4462,285780267,b'Should we default this OnEnable?'
4404,285783461,"b'>com.microsoft.mixedrealitytoolkit [](start = 10, length = 33)\r\n\r\nIf we are going with this name pattern\r\n, we should name this ""com.microsoft.mixedreality.toolkit""'"
4404,285785017,"b'The change I made below was to account for potentially split folders, but I guess that may have been excessive. This seems reasonable.'"
4544,287261979,"b'Yep, will do that before I check-in, let me know which pre-processor.'"
4404,287479147,"b'Yes, it is, this was just a comment, I approve pr.'"
4544,287579485,"b'Including this by default gave me some issues with GoogleARCore, we should have this in instructions and tell user to then go set ""AR_FOUNDATION"" scripting define symbol.'"
4544,287580468,"b'Added pre-processor ""AR_FOUNDATION""'"
4810,292122467,"b""Is there a super strong preference not to have everything string? I realize this means conversion back and forth, but shouldn't be too bad?"""
4844,293001054,b'Consider renaming as TryRegisterModuleFolder (and similiarly as TryUnregisterModuleFolder)'
4665,293147167,"b'nit: There should be a better exception: PlatformNotSupported I believe, or something of the sort.'"
4665,293147369,b'Why the GameObject checks?'
4665,293147588,"b'>_recordButton.gameObject.activeSelf [](start = 85, length = 35)\r\n\r\nDoes this signify ""not currently recording"", is there a better field that could be used? '"
4665,293147900,"b'>_previewButton.gameObject.SetActive(true); [](start = 12, length = 42)\r\n\r\nSeems strange we always enable previewButton here, even if preview is not available.\r\n\r\nPerhaps we can toggle on/off the parent of both these buttons, and let the various states (Recording, preview enabled, etc) toggle whether these buttons are enabled/disabled'"
5215,301260057,"b'Dang, yeah, these files got git ignored. Will re-add, thanks! #Resolved'"
5215,305030680,"b'Yep, added them\r\n\r\n---\r\nIn reply to: [301149984](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301149984) [](ancestors = 301149984)'"
5215,305030885,"b""Yeah, project won't load in VS, it's strange. Even though this property is imported further down.\r\n\r\n---\r\nIn reply to: [301778093](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301778093) [](ancestors = 301778093)"""
5215,305031383,b'Will update.\r\n\r\n---\r\nIn reply to: [301778494](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301778494) [](ancestors = 301778494)'
5215,305031981,"b'Will remove indent on start for consistency,\r\n\r\n---\r\nIn reply to: [301780377](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301780377) [](ancestors = 301780377)'"
5215,305032457,"b""There is, and I am sure this won't work on Mac either. That, however, is P3 I would say, where P1 is get build working, P2 is local dev box.\r\n\r\nHaving said that, I may need to update it as we get build stuff.\r\n\r\n---\r\nIn reply to: [301780755](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301780755) [](ancestors = 301780755)"""
5215,305034133,"b'Will add comment.\r\n\r\n---\r\nIn reply to: [301785751](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301785751) [](ancestors = 301785751,301785122,301785013)'"
5215,305096771,b'Yes\r\n\r\n---\r\nIn reply to: [301798052](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301798052) [](ancestors = 301798052)'
5215,305097729,"b""It doesn't, fixed :)\r\n\r\n---\r\nIn reply to: [301800758](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301800758) [](ancestors = 301800758)"""
5215,305098045,"b'Yeah, but no longer used :)\r\n\r\n---\r\nIn reply to: [301802009](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301802009) [](ancestors = 301802009)'"
5215,305098561,"b'Currently yes, and I don\'t know whether to leave this comment, or remove the ""TODO"" aspect of it\r\n\r\nWill remove TODO, leave comment.\r\n\r\n\r\n---\r\nIn reply to: [301803266](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301803266) [](ancestors = 301803266)'"
5215,305099727,"b'Yep, will add comment.\r\n\r\n---\r\nIn reply to: [302781656](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r302781656) [](ancestors = 302781656,302781511)'"
5215,305100730,"b""Yeah, i don't know. I am relying on the consumer throwing when it doesn't find the template.\r\n\r\n---\r\nIn reply to: [302782608](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r302782608) [](ancestors = 302782608)"""
5215,305101238,"b'Yeah, the auto-referenced.\r\n\r\n---\r\nIn reply to: [302783219](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r302783219) [](ancestors = 302783219)'"
5215,305482899,b'Good idea.\r\n\r\n---\r\nIn reply to: [301802469](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301802469) [](ancestors = 301802469)'
5516,310791463,"b'One of the packages has an AssemblyInfo that has [assembly: AssemblyVersion(""X.Y.*"")] where X and Y are numbers, but the * fails the build if it is deterministic\r\n\r\n---\r\nIn reply to: [310749157](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5516#discussion_r310749157) [](ancestors = 310749157)'"
5516,310800476,"b'Ah, inflated as in converted to a C# project, will update wording.\r\n\r\n---\r\nIn reply to: [310753916](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5516#discussion_r310753916) [](ancestors = 310753916)'"
5516,310800734,"b'Agreed, will update.\r\n\r\n---\r\nIn reply to: [310757064](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5516#discussion_r310757064) [](ancestors = 310757064)'"
5603,313165225,"b""Could we just pattern match the sentinel files in this callback, so that if a folder is moved we don't do a deep recursive search for each file in that folder?"""
5603,313165294,"b'Same question as below, could we pattern match for sentinel files here?'"
5792,318162507,"b'Note, I pre-emptively named the branch ""release/2.0.1"" as to what it will be post rename.'"
5792,318162635,b'Updated wording.'
5792,318176199,b'Will update.'
5792,318195603,b'Fixed.'
5792,318197910,b'Fixed.'
5855,320352458,"b'Oops, good catch.'"
5917,322856004,"b'Consider doing the following:\r\n- if moduletype is not None, do this new one,\r\n- otherwise fallback to the old way'"
5917,322856278,"b'This if and the ternary operator on 385 interfer with each other, I presume you want the ternary operator'"
6040,327243262,b'Rewording.'
6040,327243292,b'Fixed.'
6040,327279955,b'Removed.'
6040,327280057,b'Added and below.'
6040,327280643,"b'Typo, fixing.'"
6040,327355729,b'Will make the change.'
6040,327776285,"b'Updated to ""Not Yet Supported""'"
6125,329278749,"b'Yeah, well I went down the path of a custom pivot, and that proved to be quite hard to get the behavior right, so limited the scope of this fix. This is the local space of the transform we are manipulating, will update.'"
6125,329278898,b'Will do.'
6125,329279072,"b""Well I saw that this test was not cleaning up after itself, so I made the change to clean up regardless of what happens in this method at the end of this IEnumerator. This will only be true if the caller disposes of the IEnumerator, which they should as it's expected behaviour."""
6125,329279204,"b'Yeah, I am open to creating a second. Maybe I should just elaborate on the descriptions of the failures. Thoughts?'"
6125,329281096,"b""But Unity unfortunately doesn't do it, so changed the approach."""
6125,329281414,"b'Kept single methods, added more comments.'"
6125,330175341,"b'Well, this will cleanup immediately after this method completes, as opposed to waiting for all tests to clean up the GameObject. Basically on failure I want clean up, on success I want cleanup as fast as possible.'"
6649,348665254,b'Will add a check and throw an error if the string is not found.'
6729,350452420,"b""Path.Combine takes a param, you don't have to do this in two step, just pass in all three parameters into it."""
6728,350871893,b'Why this change? We should be able to just move the script Init into Microsoft.MixedReality.Toolkit namespace?'
7113,369309824,"b'Please add a comment as to why this Condition is here, as in ""Check if MSBuildForUnity is being used to resolve, by checking if it\'s version is present or not""'"
1274,148050607,"b'We should be safe, this enum is private to the class, and the functions that used them are now marked obsolete and have no code in them.'"
1274,148051560,b'Trimmed the space.'
1274,148051599,b'Removed.'
1274,148051699,b'Updated the warning text.'
1274,148052522,b'Removed.'
1274,148056069,"b'Every event needs a unique ID and to support audio event banks in downloadable asset bundles I\'d like to avoid any build time dependencies (i.e. generating an ID table).  There are several ideas kicking around in my head on how to do this, but each one requires some more thought / discussion.\r\nFor a pure unity editor experience, we could provide an editor attribute that would convert (in this case) a string field into a dropdown to select an event from, but this still doesn\'t help with the potential of event renaming and the connection being ""lost"".\r\nPerhaps this is one for a future update after more thought.'"
1274,148056951,"b""There isn't really a new function, volume attenuation is now controlled by the unity volume curve on the audio source.  This is now a parameter in the audio event and replaces the Min/Max gain and UnityGainDistance parameters that used to be in the audio event."""
1274,148319170,"b""I've added a custom property drawer to alleviate having to enter string values manually."""
827,131950983,"b""Usage of `RaiseDictationError`, `RaiseDictationHypothesis`, `RaiseDictationComplete` and `RaiseDictationResult` also has to be wrapped like this.\r\nSince I didn't wrap these before I also didn't realize they have to be wrapped where they are used in the `DictationInputManager`. Result and Complete are already wrapped so it just has to be extended a little bit to include Hypothesis and Error.\r\n\r\nGetting 2 errors for those now in the Editor: \r\n```\r\nAssets/HoloToolkit/Input/Scripts/Microphone/DictationInputManager.cs(248,35): error CS1061: Type `HoloToolkit.Unity.InputModule.InputManager' does not contain a definition for `RaiseDictationError' and no extension method `RaiseDictationError' of type `HoloToolkit.Unity.InputModule.InputManager' could be found. Are you missing an assembly reference?\r\nAssets/HoloToolkit/Input/Scripts/Microphone/DictationInputManager.cs(200,35): error CS1061: Type `HoloToolkit.Unity.InputModule.InputManager' does not contain a definition for `RaiseDictationHypothesis' and no extension method `RaiseDictationHypothesis' of type `HoloToolkit.Unity.InputModule.InputManager' could be found. Are you missing an assembly reference?\r\n```\r\n\r\n\r\n"""
827,131967593,"b""I just opened the project in Unity. Are those flags added when you change the target platform? If they are then probably neither. I'll get Unity on this machine and take a look."""
827,131984588,"b'Sorry took a bit longer, had to install unity on my machine at home. I tested it earlier on my workstation. I get the errors with android as the target platform.'"
852,132824274,"b'Changed this, also added it to `GetHorizontalFieldOfViewRadians`'"
852,132824379,"b""Not really for caching but I'm just used to have a local reference when I use something more than once. Using the full call to reference it every time and sometimes even twice in the same line can make the code quite a bit longer. I could change it back in cases where it's not as bad."""
852,132824437,b'I realized the same and renamed it in a later commit to `CameraCache.Refresh(camera)`. How do you like that one? Maybe another suggestion?\r\n(I also totally forgot to change the automatically generated private to public which i fixed in the same commit)'
852,132824548,"b""I had the same in mind to keep it the same as the unity call. But that's a good point to see a larger difference. One could mistake `CameraCache.main` for `Camera.main` when skimming over the code."""
852,132824948,b'Changed it to PascalCase'
852,132825171,"b""I'll change it back in cases like this where there are fewer calls"""
852,132826515,b'Done'
854,132978579,b'Add License Header'
854,132978612,b'Use private access modifier for Start()'
874,133884677,"b'It\'s implied by the else, here without diff bloat:\r\n```csharp\r\nif (WorldAnchorManager.Instance == null)\r\n{\r\n     Debug.LogError(""This script expects that you have a WorldAnchorManager component in your scene."");\r\n} else if (!IsBeingPlaced)\r\n{\r\n```'"
874,133884834,"b'Good question. I actually had trouble keeping those log messages in from the old code, rather than just throwing them away.'"
874,133884963,"b""Modal shouldn't exclude from raycasts if I understood it correctly, I'll give it a try."""
874,133885196,b'For the inner loop? '
874,133885226,b'I did not find any references to this method.'
874,133890383,"b""I guess `parent.GetChild(index)`? I won't be able to change the while loop as its dependent on the queue that constantly gets filled."""
874,134079318,"b""They're technically integration tests since they interact with the unity engine and instantiate several game objects in the tests."""
874,134080726,b'As expected the object will just keep moving towards the player when not setting the layers.'
874,134308321,"b""Like on the physics raycast the caller checks for the return to be true. You can't set the hit info to null since it's non-nullable. """
874,134309033,"b""I'm not sure what the strategy is for making methods obsolete. This is in the public Utils class so people could potentially use it in their projects. Do we just straight up remove methods or set them obsolete and delete them in 1-2 releases?"""
874,135077896,b'Damn I keep forgetting about those\r\n'
911,136511574,b'Ok'
911,136714474,"b""I've made a mistake here and this test should not assert true."""
926,136850494,b'You should also move the compiler directive for the `using UnityEngine;` at the top so that `GameObject` and `Tooltip` are usable. e.g. ![](https://i.imgur.com/2yDH9q8.png)'
927,136858816,b'@cybergoulion Just always hit ctrl+k+d in visual studio to fix formatting'
935,137151132,"b""@StephenHodgson `Assets/HoloToolkit/Input/Scripts/Voice/SpeechInputSource.cs(43,16): error CS0246: The type or namespace name 'ConfidenceLevel' could not be found. Are you missing 'UnityEngine.Windows.Speech' using directive?\r\n`"""
935,137151421,"b""Well nevermind this doesn't really solve the issue as it will still fail when building."""
935,137151661,"b""Ok I don't really know how to solve this then. How can we expose that field, keep the serialized data between platforms and also make it build for all platforms?"""
935,137151826,b'Editor errors with anything not WSA/Standalone_Win\r\nBuild errors with this PR'
935,137152121,"b""Then we'll get the same issues as in #926"""
935,137152624,b'Any reason to use private serialization with getter&setter instead? It will have the same effect as just public.'
935,137156533,"b'High is the default,  which was also the hard coded level before it got extracted into the field. '"
935,137176997,b'Per default value of the type '
936,137201299,b'License header missing'
936,137207465,b'Mention obsolete in favor of what. Could remove the TODO then aswell if you mention the input source here.'
936,137835401,"b""Are there gonna be more of these names? Maybe have a fixed list of these so this line doesn't get any longer."""
936,137843031,b'I mean a fixed list for the contains names'
989,140124435,b'Could start at 1'
989,140125245,b'Could move the logic of this method into an extension which would it make also possible to test it. Maybe something like transform.GetColliderBounds.\r\nI have an older project with a similar method where I have some tests for it. I could include them after this gets merged. '
989,140309375,b'The first bounds are used to initialize and the others will be encapsulated\r\n`Bounds bounds = colliders[0].bounds;`'
1006,140668519,b'System under test'
1007,140889933,"b""I've had issues with this code. When enabling/disabling buttons several times the uv-rects of the icons start breaking. See an example here: https://puu.sh/xIL06/0c20ded28c.webm.\r\n\r\nThis ended up solving it for me but it's more of a workaround than an actual fix, maybe someone with more time or knowledge of the code can figure it out:\r\n```csharp\r\nprivate void OnEnable()\r\n{\r\n    if (Application.isPlaying)\r\n    {\r\n        ClearInstancedAssets();\r\n    }\r\n\r\n    StartCoroutine(RefreshIcon());\r\n}\r\n\r\nprivate IEnumerator RefreshIcon()\r\n{\r\n    SetIconName(iconName);\r\n    yield return new WaitForEndOfFrame();\r\n    SetIconName(iconName); // UVRect of the icon atlas will be broken without this, but why??\r\n}\r\n```\r\nAlso a tip for debugging it: You can trigger the fix by selecting the button object in the hierarchy because that triggers   setting the icon again from the property drawer."""
1007,140894710,"b""Do we really need this class? Shouldn't the interactibles just implement what they need? We don't need clear references to interfaces in the InputManager since it uses Unitys event system that sends events to gameObjects which will then find the interface references on its own."""
1007,140910976,b'The Unity event system does come with a overhead because it really just does a `GetComponent<Interface>` in the background.\r\nHere are some real basic profiler results run in the editor with ~30 and ~100 global listeners.\r\n![hwphjox](https://user-images.githubusercontent.com/5775094/30833077-cea35ec4-a24d-11e7-8ae4-8fd80270a408.png)\r\n![smcdkdn](https://user-images.githubusercontent.com/5775094/30833086-d8665fce-a24d-11e7-8578-9cd66b2d47fa.png)\r\n'
1007,140919757,"b""Whatever event system we will have in the end, an important thing to keep in mind is that inheriting from `InteractibleObject` has other side-effects than just implementing a single interface. \r\n\r\nI've recently run into the issue that adding a gameObject as modal will only absorb the interfaces that it implements and I needed it to lock them all. `InteractibleObject` will do this out of the box as it implements all interfaces but some may find this unexpected behavior?\r\n"""
1083,143137857,"b""Did you only copy this logic and leave it in the anchor manager? If so, this method is only ever called in the tests, which doesn't really make sense. \r\nThis definetly has to be in the main folder, not in `UnitTests`. There also is no need for this to be an extension, as the anchormanager isn't used. I would either put it in `WorldAnchorManager` directly or make a `WorldAnchorUtilities` and put it in there where both version would be `public static`. Like that you wouldn't need to initialise the `WorldAnchorManager` for the test as well.\r\n\r\nIn conclusion:\r\n1. Move this logic out of the `AttachAnchor` Method\r\n2. Make a public static Method in either WorldAnchorManager or WorldAnchorUtilities\r\n3. Test that instead, which should make the setup a lot easier too.\r\n"""
1083,143138454,"b""This won't be needed with the other changes above however, you could make this work with:\r\n```chsarp\r\nmanagers.CallAwake().CallStart();\r\n```\r\nExplanation [here](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/master/Assets/HoloToolkit-UnitTests#2-any-monobehaviour-methods-such-as-awake-start-and-update-will-not-be-called-by-unity-in-tests)"""
1007,143269272,b'@StephenHodgson PrefabUtility is editor only.\r\n\r\nWhat about using `gameObject.scene` \r\n![image](https://user-images.githubusercontent.com/5775094/31293627-0b6b8452-aad8-11e7-96f2-18a91e615816.png)\r\n'
1101,143345843,b'I need the canvas. I guess I could make a container to hold both to cache it.'
1101,143345966,b'Exactly'
1101,143346025,b'What do you mean with by allocations from linq'
1101,143346046,"b""It's a null check since the struct requires an assignment to all properties"""
1101,143346432,"b'Instead, I could also move all of this logic out of the GazeManager and add an extension as `EventSystem.current.Raycast(UnityUIPointerEvent, RaycastLayerMasks)`. This solves a general problem with Unity until they finally fix their `RaycastAll` method to sort by separate canvases first.'"
1101,143509191,b'It is being called each update for all raycast target UI elements in its path. This would be 1-3 elements in a properly set up UI.'
1101,143552386,b'Done \xf0\x9f\x91\x8d '
1101,143563284,b'Any reason we are only checking if they are in the layer mask instead of prioritizing like with 3d objects? I just kept this part.'
1133,144191142,"b""Won't we have a lot of unnecessary calls to methods that won't be there otherwise?"""
1133,144191360,"b'What if we tag the method as `[Conditional(""UNITY_EDITOR"")]`'"
1133,145659918,"b""We don't"""
1318,149819778,"b""Can we give directions on the `Obsolete` attribute on how to fix it? The obsolete message will just show up in the unity logs without any comment on how to fix it otherwise. People have to go dig into the code to find out how (which is easy in this case since it's just the method below but still). \r\n\r\nIf you'll throw an exception this should probably be a breaking change then?"""
1318,149820287,b'Some whitespace here and a few lines below. Hit that format key to fix.'
1318,149821712,b'Why?'
1318,149824922,b'Can we make that `-1` into `Physics.AllLayers`'
1318,149825552,"b'Same as above, what replaces it?'"
1318,149826339,b'Please provide instructions here too.'
1318,149826408,b'Whitespace'
1318,149827001,b'\\+ Instructions.'
1636,161638229,"b""Yep, I also fell for that mistake and caused a few errors with it. It's tempting to let ReSharper change it for you and I'm working on modifying the unity plugin to change that."""
1608,163069861,"b""I'd keep `var raycastResult = RaycastResults[i];`"""
1764,170976239,"b'Yes, rename it to a full name?'"
1764,170976898,"b'Oops yes, it was supposed to be const.'"
3600,264307724,"b""```suggestion\r\nFor external apis that don't provide an xref service hrefs to the documentation website can be added to the comments.\r\n```"""
3617,265696337,"b'I think it\'s fine here, given that the intent is to make sure that the code below:\r\n\r\n if (actionOptions == null && !Interactable.TryGetInputActions(out actionOptions))\r\n            {\r\n                EditorGUILayout.HelpBox(""Mixed Reality Toolkit is missing, configure it by invoking the \'Mixed Reality Toolkit > Configure...\' menu"", MessageType.Error);\r\n            }\r\n\r\nActually gets run. Being able to further override makes it easy to forget to add this (I assume that this check is actually critical).\r\n\r\nIt might be worth having a minor comment about that (i.e. ""please override through RenderCustomInspector to ensure that correct prerequisite state checks are performed on your behalf"")'"
3629,265788446,"b""I think the class hierarchy goes:\r\n\r\nMixedRealityToolkitConfigurationProfileInspector -> BaseMixedRealityToolkitConfigurationProfileInspector -> BaseMixedRealityProfileInspector\r\n\r\nSince BaseMixedRealityToolkitConfigurationProfileInspector doesn't override OnEnable, in theory this behavior should already exist from the code in BaseMixedRealityProfileInspector.\r\n\r\nUnless this is being done because you're afraid that future people who override BaseMixedRealityToolkitConfigurationProfileInspector  will not call base.OnEnable?"""
3629,265788661,"b""What I mean to say is, it seems like this instance of the code isn't necessary because it's handled in the base class. If it's being done again in a subclass (and only one of them!) it would be great to understanding the motivation behind it."""
3629,265789362,"b'This line basically means ""if teleportation system is online"" -> suggestion is to make some other helper bool (i.e. private bool IsTeleportationSystemPresent) because there are two instances of these three specific things you have to reference at the same time (and it looks like in the same way, since you need to call inited first, then active profile, then teleportsystemenabled)'"
3629,265791018,"b""Ah doh, yes that's obvious now"""
3630,265792360,b'Added to the .NET backend ifdef down below.'
3630,265793212,"b'Nah, I think I had merged my change with some other commit I had (i.e. I had a cherry pick which unity editor-ed this entire thing out). I opted to go with this approach instead since there actually was an alternative here.'"
3630,265796661,"b""While it's not going to be referenced by customer client code (i.e. this is an implementation detail of how the MRTK guts looks up these values), it's still located in a location where labelling it private will mean the other internal code won't be able to access it. I've gone ahead with its own file."""
3630,265799057,"b'sg, will do that instead. This was taken from the original code.'"
3630,265799081,"b""Yeah, you're reading this correctly. This was mostly a translation from the original code, which handled both the base case and the derived case in the same if statement. I just moved this out of this block."""
3630,265801141,"b'Done, thanks for the pointer!'"
3630,265801500,"b'Done, thanks'"
3640,266114067,"b'Would it be worth leaving a comment in remarks that calling RegisterService twice with the same service type will fail? \r\n\r\nGenerally when I see Register/Unregister patterns, they are usually:\r\n\r\n1) Register and you get back a handler, which you can use to unregister later.\r\n2) Register and it must be one-per-thing you register, so unregister will either find that or not find that.\r\n\r\nI think this design is option 2.'"
3640,266114422,"b'Is it safe to assume that for the function above, SupportedPlatforms will pretty much be ALL (i.e. even if I add a new enum type in the future to SupportedPlatforms, does that mean that people who call RegisterService with the function above will implicitly get pulled into supporting those new enum types?)'"
3640,266114513,"b'Woops sent too soon - by function above, I meant the first overload that just takes a type :)'"
3640,266115411,"b""Out of curiousity, what's the use case for not specifying the name? I read this comment as saying that things will be unregistered in FIFO pattern. I can see the coordination here being tricky (i.e. this allows for scenarios where the order in which different components call unregister can get tricky)."""
3640,266116722,"b'Similar question to the one above, what\'s the use case for having a null name (i.e. is this ""is any service registered?"")'"
3640,266116797,"b'Woooooops sent too soon again, followup here is trying to understand the use case for asking that question (i.e. who would use ""is any service registered?"")'"
3640,266136458,"b""Got it - I think what I was trying to wrap my head around was, I didn't see the other register calls having a name option, so I wasn't sure how this name would be populated to the registrar. """
3640,266137018,"b""for the showLogs parameter, could you provide a little more background in how this would be used as well? i.e. usually I would imagine that logging is a general system thing (i.e. Logging.enabled) rather than having logging enabled on a per function parameter basis.\r\n\r\ni.e. if we wanted to enable logs on other functions, would this mean we'd have to update them to also have a showLogs parameter?\r\n\r\nFull transparency, I don't have super deep background in the way things work already, so I'm just more wondering out loud how this works + what patterns we've adopted."""
3640,266137593,b'Looks much nicer than having to pass typeof :)'
3640,266137637,"b'Errr,  ""use typeof""'"
3640,266139349,"b""Future comment for us, for these it might be helpful to add to our Extensions or have a helper class abstract this out. I find that having interspersed #if defs can be tricky visually, when really what the code should read is like:\r\n\r\nif (IsPlatformSupported(supportedPlatforms))\r\n\r\nAnd the helper function could abstract away the platform specific issues (i.e. as a caller in RegisterService I really don't care about how to see this check is done, only that it is handled on my behalf."""
3640,266139500,"b""So yeah I don't think we need to make a change in this persay, I just want to see if others agree that the approach described above is agreeable to them."""
3640,266140616,"b""Whenever I see global statics being modified, I tend to worry about concurrency - it might be worth leaving a comment stating explicitly that we don't need to lock/guard against concurrency access because all callers will access in a single-threaded fashion."""
3640,266142021,"b'Got it - I see the existing code which had this.\r\n\r\nI think for future I would probably try to push us to augment our logging to have different criticalities (i.e. info, warn, error) and do filtering based on that so that we can avoid littering the log with more noisy stuff but still switch it on in cases where we want to debug further.\r\n\r\nBut yeah, this is a separate thing from this PR :)'"
3642,266164461,"b'I think section may have broken the rendering (at least in Chrome, it looks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/5840182/54465059-7e0b8100-4736-11e9-890d-73a21b15d6ee.png)\r\n\r\n'"
3642,266164507,"b'And by broken rendering, I mean just like, some stuff.'"
3642,266164963,"b""Nit: General question about the usage of three letter acronyms vs fully expanding the first reference (i.e. Windows Mixed Reality (WMR)) - if we think that contributors are expected to already know about all of these acronyms that's fine, I just find that it's easier to expand things out in the general README and then use those abbreviations deeper in the docs)"""
3643,267061119,"b'With this change, activeSystems.clear() is now invoked for all paths (i.e. Enable, Update) - if the intent is to keep the original flow I think that this line needs to be removed.'"
3643,267061344,"b'In the new code, I think that this activeProfile check is missing.'"
3667,267844028,"b""Can this TODO be clarified a little (i.e. what to update, how to update, what's the impact of not doing this?)"""
3667,267844124,b'And I think same for the todo down below.'
3667,267846943,"b"">5 [](start = 23, length = 1)\r\n\r\nWhat's the significance of the number 5? i.e. would it be helpful to have a file with priority constants define what the core system priorities should be, and where the starting point of other service priorities should be?\r\n\r\nfor example:\r\n\r\npublic static readonly int CoreServicePriority = 5;\r\npublic static readonly int NonCoreServicePriorityStart = 100;\r\n\r\nSo to manage priorities among non-core you would always do YourPriority + NonCoreServicePriorityStart \r\n\r\n"""
3667,267847658,"b""Oh actually looks like there's a file with DefaultPriority, so maybe that would be a good place to have this priority as well (so that you can have both clearly defined in the same place)\r\n\r\n---\r\nIn reply to: [267846943](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3667#discussion_r267846943) [](ancestors = 267846943)"""
3667,267849009,b'Should this be uncommented out now?'
3667,267852925,"b"">(registrar.GetService<IMixedRealityInputSystem>(showLogs: false) != null) [](start = 35, length = 73)\r\n\r\nJust making sure I understand this, this means that in order to create a teleport system, there's an ordering required (i.e. I have to both new up an input system, and also register it, before I can actually new this up). i.e. it's not possible to create this first, then enable an input system, and have things light up after."""
3658,267964265,"b'>UInput [](start = 6, length = 6)\r\n\r\nNit: UnityInput (to match other places which do the full Unity* prefix)'"
3673,268341281,"b'These conditions are shared between GetControllerVisualizationTypeOverride and GetControllerModelOverride and GetUseDefaultModelsOverride, and probably could be a little helper.'"
3673,268346809,"b'>flipFaces [](start = 75, length = 9)\r\n\r\nWhat is flipFaces?'"
3673,268347807,b'Might be possible to use a path API that does this:\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/system.io.path.getfilenamewithoutextension?view=netframework-4.7.2](https://docs.microsoft.com/en-us/dotnet/api/system.io.path.getfilenamewithoutextension?view=netframework-4.7.2)\r\n\r\nIt looks like it exists in the .NET versions we care about.'
3673,268349500,"b'>controllerModelInitialized [](start = 16, length = 26)\r\n\r\nOnce this value is set to true, it looks like UpdateControllerModel will never actually update anyting - is this just maybe misnamed (i.e. it\'s more like ""ensure controller model""). \r\n\r\nGiven the current naming I would expect the controller model to update in response to changes, but once this value is true, this entire statement will short circuit and nothing will happen.'"
3731,270512570,"b""Do we have any examples to point to for how to do this sentence? It seems really cool that it suggests a capability exists, and I think it would be helpful to have an example as well.\r\n\r\nIf this is going to be part of a next drop of docs that's okay (or if this actually refers to the stuff later in this file having that explicit would be nice)"""
3731,270515812,"b'I think it actually may be helpful here to have the example first (i.e. visible submit button that looks greyed out) - the first part of this paragraph was slightly confusing to me to read until I got the specific example (i.e. there is an overloading of the term ""enabled/disabled"" which comes from maybe flat UI interaction land vs. the concept of enabled/disabled in Unity land)\r\n\r\nI otherwise would have changed this myself but I wanted to see your thoughts on this.'"
3731,270517297,b'Is there an example of what IsGlobal could accomplish (i.e. this allows for voice to work globally?)'
3731,270517548,"b'Do you know if this is a runtime error, or in-editor error? i.e. will I only find out about this problem when things crash on the device, or will I get a chance to know in the editor.'"
3731,270521300,b'Neat.'
3731,270526267,"b""I think we should probably delete this file, or add a 'coming' soon instead of the filler text. (Probably delete? Coming soon isn't usually very helpful)"""
3731,270529635,b'I think it would be good to revert these changes and take the changes that Julia just made.'
3731,270529741,b'And by these I just mean the first two changed sections (feature areas / overview)'
3738,270945932,"b'>immedi ately [](start = 50, length = 12)\r\n\r\nNit: immediately '"
3738,270947583,b'Nit: Maybe delete or or fill out some basic summary.'
3738,270955564,"b"">inputSystem [](start = 16, length = 11)\r\n\r\nUnrelated to this change, but do you know why there's only a ? check on the first function (i.e. GestureRecognizer_HoldStarted but none here or below - i.e. I would assume that GestureRecognizer_ManipulationStarted would need something similar if the issue is only on starts)"""
3738,270956248,"b'> // todo: fix... [](start = 7, length = 16)\r\n\r\nDelete this TODO (or fix it before checking in)'"
3743,270963397,"b'Can you confirm that this is still the case after Dave submits his changes here:\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3738/files#diff-72713bda47fb5e09eb55e5066ef13b29\r\n\r\ni.e. I see a huge swath of configurations getting axed, one of them being Input Simulation'"
3743,270964058,b'@davidkline-ms '
3749,270980957,"b'>OnCurrentPointerTargetAboutToChange [](start = 13, length = 35)\r\n\r\nNit: I haven\'t really scene ""aboutToChange"" phrasing in APIs as a common thing (I basic search finds eclipse does this).\r\n\r\ni.e. in keeping with other naming this could be OnPreCurrentPointerTargetChange()\r\n\r\nThis also allows us to add another function later called:\r\n\r\nOnPostCurrentPointerTargetChange()\r\n\r\nInstead of:\r\n\r\nOnCurrentPointerTargetJustChanged()'"
3749,270981186,"b""```suggestion\r\n        // These are all the game objects in the subtree of the closest touchable component's owner object.\r\n```"""
3749,270983409,"b'Is this something that could possibly run with every frame? If so, do you have a sense of how painful the perf impact is of doing this descendent enumeration on each frame?'"
3749,270985314,"b"">// TODO: cache and clear [](start = 67, length = 24)\r\n\r\nNit: Please clean up the TODO prior to checking this in (i.e. shouldn't be per-update allocations)"""
3749,270985439,b'(Same with the thing down below) - i.e. hitUi\r\n\r\n---\r\nIn reply to: [270985314](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3749#discussion_r270985314) [](ancestors = 270985314)'
3749,270986529,"b""> // FIXME: This is assuming only the grab pointer is using SceneQueryType.SphereOverlap.  [](start = 31, length = 89)\r\n\r\nCan you add a little more context about this FIXME, or file an issue with tracking information on this? It's difficult to understand without additional context how I would approach fixing this, how I would verify it, etc."""
3749,270990573,"b"">t [](start = 40, length = 1)\r\n\r\ninputModule (or inputTarget) (I think anything that isn't a single-letter variable name)"""
3749,270991176,"b""Nit: It would probably be better to have these tracked as issues rather than TODOs (or having TODOs that point to filed issues). Unless we plan on resolving these in the next week, these will likely get forgotten and then not be helpful in the future. It's unfortunately the fate of all TODOs for people who have too much todo."""
3749,270992349,"b"">// Remove Unity pointer if it exists, but leave the MRTK pointer in pointersData unless/until the pointer's source device is lost/disconnected. [](start = 24, length = 143)\r\n\r\nNit: This is a great comment, my only comment is it's probably more appropriate to have on the function itself, rather than here in the caller. The reason being, we probably don't wanna copy paste this for each time we call this, and also because this is an implementation detail of the function itself."""
3749,270993118,"b'>id [](start = 67, length = 2)\r\n\r\nNit: pointerId'"
3749,270993608,"b'>// Populate data [](start = 12, length = 16)\r\n\r\nNit: This comment doesn\'t seem to jive with what\'s done (i.e. ""populate"" vs ""reset"")'"
3749,270993962,"b'>0.5f, 0.5f, 1.0f [](start = 46, length = 16)\r\n\r\nCan you add a comment about the significant of these values?'"
3755,271442083,b'Scrubbed this file.'
3755,271443811,b'Tracked in https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271443866,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271444500,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271444963,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271445130,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271445734,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271445737,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271445755,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3755,271446402,"b""Can you file an issue for this with your background/question? I don't think that I have sufficient background here to be able to fully argue your case. """
3755,271446902,"b""I don't think so, I just added another comment to the other issue."""
3755,271449029,"b'Added a TODO with a work pointer, I will find the person to do this.'"
3755,271449073,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
3768,271489555,"b""This doesn't link to the direct file (the one above does however - however the one above also actually points to mrtk_development_hl2, which it probably shouldn't).\r\n\r\nMaybe just point to mrtk_development for both?\r\n\r\nI did some digging and it looks like:\r\n\r\n1) It's not possible to reference a true github root.\r\n2) It's not possible for markdown to render differently based on the branch it's in (i.e. having some macro that is replaced with the current branch)."""
3768,271489814,"b""Unless the plan is to flesh these out in the next change, this section (and the next class documentation section) don't really add that much to this page - it leaves me wondering more than it tells me."""
3764,271491908,"b'> private bool isRecording = false; [](start = 7, length = 34)\r\n\r\nIs this intended to be used for logging/debugging purposes only? It looks like this is getting set correctly but not inspected.'"
3764,271492498,"b""Or was this kinda to make sure that StartRecording doesn't invoke dictationSystem.StartRecording in the case it gets double-called?\r\n\r\n---\r\nIn reply to: [271491908](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3764#discussion_r271491908) [](ancestors = 271491908)"""
3760,271495059,"b'When this says ""no currently supported sources,"" is the reason to have these listed here is in case the developer themselves wants to add a source that might support this? As a person who doesn\'t know that much about this, it\'s odd seeing two options listed that seem to be listed as ""these are not supported"", to which my initial reaction is then ""what can I do with this information?""'"
3760,271495525,"b""Nit: This is one giant line - can this be broken up into either 80 or 100 character segments? It's weird having to turn on word wrap just for just readme reviewing, and having it on other lines will hopefully also help isolate future changes as well.\r\n\r\nThis comment applies to the rest of the files in this change too.\r\n\r\nEdit 1:\r\n@davidkline-ms \r\n\r\nAlso: https://about.gitlab.com/2016/10/11/wrapping-text/\r\n\r\nIn a lot of the MD that I've written/read, I've seen wrapping at around 100 characters. It's the same reason why we opt to not go for super long lines in code as well.\r\n\r\nEdit 2:\r\nActually on third thought, if our tooling isn't great when it comes to autoformatting our markdown files, then actually this might make things more complicated. So.... maybe not."""
3760,271495866,b'Nit: Add a link to the Input Events readme. #Resolved'
3760,271496655,"b""The language here is a bit different (up down vs on off) - is Up/Down actually 'wrong' or are both right? More for my own knowledge than anything else."""
3760,271497155,"b'Consider using an anchor in the gesture page, so that this ""possible values for T"" can link directly to it:\r\n\r\nhttps://gist.github.com/rachelhyman/b1f109155c9dafffe618#real-cool-heading'"
3760,271497285,"b""Otherwise it is hard for a reader to know if they are looking at the actual section they're supposed to be, or if they're looking at the wrong place."""
3760,271497785,"b'Nit: Maybe: None*\r\n\r\ni.e. so it\'s clear that there\'s nothing there, but still with the asterisk to read on.\r\n\r\n* is a wildcard for some folks and I thought maybe this meant ""all"" until I read on.'"
3760,271498682,b'```suggestion\r\n[`IMixedRealityTouchHandler`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler) | Touch Started / Updated / Completed | Raised by touch-aware pointers like the [**PokePointer**](xref:Microsoft.MixedReality.Toolkit.Input.PokePointer) to report touch activity.\r\n```'
3749,271519848,"b""Ah got it - yeah it's tough without having some larger banner comment. This is fairly nit-y but in this case it might just be okay to delete that small comment - it doesn't really add that much to the code - it's clear from the code below that you're setting pointerData.eventDataLeft (i.e. you're populating data), and the rest of the code in this function already has good comments (explaining in detail what each population)\r\n\r\nIn the end, this is a super minor thing and up to you, I've just gotten feedback on comments before and have left comments similar to this in the past and reflecting on it have found that some were more helpful some were less, etc."""
3749,271520235,"b'\xf0\x9f\x91\x8d  sounds good, just wanted to get a gut check here to make sure we considered it.\r\n\r\nI suppose in our examples we probably have more simple geometry/hierarchy, so just something for us to keep in mind in the future.'"
3774,271521235,b'```suggestion\r\nAdding support for spatial awareness requires two key components of the Mixed Reality Toolkit: the spatial awareness system and a supported platform provider.\r\n```'
3774,271521655,b'```suggestion\r\n1. [Enable](#enable-spatial-awareness) the spatial awareness system\r\n```'
3774,271521700,b'```suggestion\r\n2. [Register](#register-observers) and [configure](#configure-observers) one or more spatial observers\r\n```'
3774,271521786,b'```suggestion\r\n3. [Build and deploy](#build-and-deploy) to a platform that supports spatial awareness\r\n```'
3774,271521806,b'https://gist.github.com/asabaylus/3071099'
3774,271523051,"b'Chatted about this offline, but:\r\n\r\nhttps://about.gitlab.com/2016/10/11/wrapping-text/'"
3774,271525123,"b""Edit 2 - actually this might suck because our tooling isn't great for markdown right now (i.e. this works best when you have auto-wrapping formatters but is actually a pain if you don't have that).\r\n\r\nLet's hold off on this style until I have better ideas on our stuffs."""
3781,271561781,"b'Exactly - from this site:\r\n\r\nhttps://docs.unity3d.com/ScriptReference/Windows.File.html\r\n\r\n""This is an alternative for System.IO.File class. Note: this class is only available when targeting Universal Windows Platform.\'\r\n\r\nIn reality we should probably have some file wrapper that abstracts away the platform-dependent options, but that\'s for another day.'"
3787,271829559,"b'><param name=""inputValue""></param> [](start = 12, length = 33)\r\n\r\nCan you leave some doccomments about the what this inputValue could be (i.e. is it between 0 and 1? Can it be negative? What does it represent?)\r\n\r\nOr is it that it\'s so specific to the implementor that there\'s no reason to have this documented here?'"
3787,271837288,b'Sounds good!'
3760,271927434,"b""No worries, I had a change of heart here.\r\n\r\nI think that our tooling isn't at the stage where asking people to break lines is reasonable, and we should improve our tooling so that this should be automatic for us."""
3760,271927841,"b""Okay, I'm going to resolve this one for now and we can look to improve some stuff going forward."""
3805,271933008,b'```suggestion\r\nmixed reality applications. Boundaries define the area in which users can move around \r\n```'
3805,271933057,"b'Nit duplicate ""in""'"
3805,271933173,b'```suggestion\r\nBoundaries are an important component of a mixed reality experience to help users avoid unseen \r\n```'
3805,271933273,"b'```suggestion\r\nMany Virtual Reality platforms provide an automatic display, for example a white outline \r\n```'"
3812,272001199,"b""Yoyo left the same feedback - I can add this once it's all there."""
3812,272001283,"b'```suggestion\r\nresources, but is worth repeating here because enabling this is crucial for performant mixed reality applications.\r\n```'"
3812,272001603,"b'I can just make these bold instead. I was looking to give each link a title + description, which this accomplishes.'"
3785,272235039,"b'I\'m guessing that maybe the problem could be that other folks are depending on the current behavior of the script in their own build setup, so changes to default values can cause inadvertent downstream issues because of these implicit dependencies. If this isn\'t the case it would be good to call out exactly what the problem is.\r\n\r\nIf a caller of this script expects that specifying a WSA target would actually build the appx, but then running this script doesn\'t produce anything (i.e. it succeeds but just doesn\'t produce an output), then that would be a bad thing. \r\n\r\nHowever, if there were some log saying that ""no BuildPlatform provided, not building an appx output"" then it would be clear from the logs that the script was never passed the right info to build.\r\n\r\n'"
3819,272241382,"b"">sourceHandedness [](start = 116, length = 16)\r\n\r\nIf this is intentionally ignored, it might be worth leaving a comment saying so (i.e. it's weird that we're being told a source handedness for hand tracking data and then saying it doesn't matter)"""
3845,272356831,"b""I'm just going to revert this part of the change. """
3845,272356929,b'Actually'
3845,272357299,"b""This guide is a lot more helpful than the existing docs, and I'm still in favor of keeping that around. I don't know how we can strike a balance here of actually helpful detail vs. going too far (i.e. I think the suggestion would provide too few details even if fleshed out)."""
3870,272752769,b'```suggestion\r\nIf you have any questions regarding this section please post in our [MRTK slack channel](https://holodevelopers.slack.com/)._\r\n```'
3870,272752829,b'```suggestion\r\n```'
3870,272752854,b'If only because now the TODO is in actual text'
3874,273183355,"b""><< >> [](start = 63, length = 5)\r\n\r\nIs this intentional (i.e. I don't know if this was some formatting thing or some other key character but it looks a bit funky)."""
3874,273183645,b'I would suggest not mentioning this until we release the package management tools that ensure this.'
3874,273183814,"b'Otherwise someone\'s natural question is ""what package management tools?"" and the answer is ""coming soon"".\r\n\r\n---\r\nIn reply to: [273183645](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3874#discussion_r273183645) [](ancestors = 273183645)'"
3874,273184145,"b'>thespatial [](start = 8, length = 10)\r\n\r\nnit: the spatial (missing a space)'"
3874,273185176,"b'>completed [](start = 22, length = 9)\r\n\r\nNit: unnecessary word (breaks up the flow of reading a bit)'"
3882,273316142,"b'```suggestion\r\nOnce you have a dictation service set up, you can use the [`DictationHandler`](xref:Microsoft.MixedReality.Toolkit.Input.DictationHandler) script to start and stop recording sessions and obtain the transcription results via UnityEvents.\r\n```'"
3904,273699970,"b""I think that it's actually possible to just reopen the scene. #Resolved"""
3922,274033271,b'Nit: Be consistent with the usage of {} around single line ifs (see line 60 vs this line)'
3922,274035225,"b"">GUI.enabled = (configurationProfile != null); [](start = 16, length = 45)\r\n\r\nReading the code but without great background knowledge on building unity editor UI, it seems a bit odd that we're first setting the enabled bit here conditionally, and then blowing it away after the if statement by always setting it to true on line 115. This question is more for my own understanding, but is this designed to disable the Yes button conditionally (i.e. it affects anything after it's been changed), but the No button will be left enabled in all cases because GUI.enabled is true after that point?"""
3896,274037979,"b""For our knowledge, is this primarily for linkability (i.e. I can go to an issue #is-your-feature-request-related-to-a-problem...) or for other reasons? Is there a docs/markdown guide/set of rules that you've followed in the past that this suggestion is from (i.e. are there other good suggestions we can adopt holistically?)"""
3928,274091299,"b""Do you know if it's possible to add a line break or something to the caption? it looks like this on chrome:\r\n\r\n![image](https://user-images.githubusercontent.com/5840182/55902937-52d35080-5b81-11e9-9c70-2d3a284c410a.png)\r\n"""
3965,275434682,"b""Yes, though this intentionally wasn't changed in this PR to keep the change scoped to changing the version-enumeration code."""
3962,275436573,"b""This doesn't move anything - the description for this PR shows how the old code defaulted to SettingScope.Project. I pointed out the same issue on:\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3951\r\n"""
3977,275872911,"b""Yep, it's a height thing because the new info message increases the required height of the window. I thought about commenting this (i.e. 'this determines the size of the window') but then didn't do it because the naming of the window is relatively obvious and missing changing this leads to a very obvious side effect."""
3985,275899581,"b'What are the units of the timeout (miliseconds, seconds?)'"
3976,275909844,b'Will take a look at this for a future change. The type is a bit... funky.'
3985,275910353,b'```suggestion\r\n            if (State != ConnectionState.Disconnected)\r\n```'
3986,275989470,b'I would probably leave this one as-is (or at least not downgrade the editor version).\r\n\r\nI need to chat with the others to see how this managed otherwise.'
3986,275989667,b'```suggestion\r\nm_EditorVersion: 2018.3.9f1\r\n```'
3986,275989760,b'I think it might be best to leave this as-is (or at least not turn back the editor version clock)'
3991,275995089,"b'>private class AssetPostprocessor : UnityEditor.AssetPostprocessor [](start = 8, length = 65)\r\n\r\nNit: It might be helpful to have a doccomment like:\r\n\r\n/// <summary>\r\n/// A helper class that ensures that the list of mrtkFolders is updated as assets are imported,\r\n/// deleted, or moved.\r\n/// </summary> #Resolved'"
4004,276373203,b'```suggestion\r\n- Unity Version [e.g. 2018.3.11f1]\r\n```'
4004,276373302,b'v2.0.0'
4004,276373571,b'Arbitrary bug filers going to know much about assignees? i.e. can we delete this line?'
4004,276373832,b'Or wait is this just auto-populated by editing the issue template.'
4004,276374010,b'```suggestion\r\n## Describe the Issue\r\n```'
4004,276374094,b'```suggestion\r\n## Feature Area\r\n```'
4004,276374327,"b'Maybe provide an example of a feature area (i.e. input system, how to guides, profile system)'"
4004,276374381,b'```suggestion\r\n## Existing Doc Link\r\n```'
4004,276374466,b'```suggestion\r\n## Additional context\r\n```'
3991,276429668,"b""Yep, could also not be a doccomment (i.e. just a regular comment). Whether or not it shows up in docfx generated stuff is of questionable value (because it's private as you say) #Resolved"""
4013,276750902,"b""So we're in an odd state. Because we haven't clearly defined the delineation between what is internal vs what is external, technically speaking every single change that we make is technically a breaking change, because someone could have taken a dependency on a utility class that is nested deep within our code, but is still technically public because we distribute as scripts.\r\n\r\nThis is a problem that we need to solve, but I figured it was interesting to write here because it highlights that there won't be a clear easy answer due to that.\r\n\r\nThat being said, because of the timing of where we are right now, it feels we might still have some time to do the right long term thing (i.e. IMixedRealityPointerHandler), assuming that we make it very explicit (i.e. we write a doc that highlights a limited set of changes between RC1->) maybe this is okay. We can followup with product on this to see what the agreement is."""
4013,276756360,"b""Okay circling back here, it sounds like we're comfortable with making this one change given the tradeoffs (i.e. no incurring immediate interface technical debt going forward), and we will author a changes doc (in release notes) that describes this change, how it will surface as an error, and provide clear guidance on how to fix it."""
4013,276758993,"b"">IsInteractionEnabled [](start = 35, length = 20)\r\n\r\nFor my own knowledge, what's the reason that only the GGV pointer has the IsInteractionEnabled check?"""
4013,276759781,"b""Can we open an issue (somewhere) to track the doc writing/release notes writing so we don't lose track of this?"""
3946,276843651,b'Was this also causing GC alloc? Usually I would see this when creating enumerators (i.e. using foreach) so this would be somewhat surprising.'
3946,276844943,b'Danggggggggggggggggggggggggggggggggggggggg'
4018,276852560,b'Nit: Can you move this back to where it was (i.e. alphabetical)'
4018,276852611,b'```suggestion\r\n\r\n```'
4018,276852647,b'Nit: I think VS inserted some dead extra space'
4018,276854421,"b""@johnppella @keveleigh are these units something that are well understood by most Unity developers (i.e. am I just ignorant because I'm new) or do they have some special meaning (i.e. why default is 2, what's the significance of 20)."""
4018,276854784,"b""I think we may need to use the formally serialized as attribute so we don't break existing serialized assets:\r\n\r\nhttps://blogs.unity3d.com/2015/02/03/renaming-serialized-fields/"""
4018,276854889,b'```suggestion\r\n        /// Sets the pan and zoom back to their starting settings.\r\n```'
4018,276854964,"b""Nit if only because in the doccomment for a function it's not really necessary to re-name the function name itself."""
4018,276855677,"b'Unless actually wait these are totally different concepts, in which case I guess this comment is not relevant'"
4018,276855997,b'```suggestion\r\n            if (!unlimitedPan)\r\n```'
4018,276856094,"b""Nit: Usually you don't see boolean types being compared like:\r\n\r\nif (unlimitedPan == true)\r\n\r\nUsually it's just\r\n\r\nif (unlimitedPan)"""
4018,276856457,b'I think that I just mentioned this automatically because of the line deltas + the fact that the ranges and default values are the same'
4018,276856804,"b'Not actually a real suggestion, but wanted to bring it up for fun - since this is just a magnitude test this could have also been like testXValue > Math.Abs(tiling.x * maxPanHorizontal). Either or is fine :)'"
4018,276857444,"b'For my own understanding, is the y offset negative here do make scrolling work in some inverted way vertically?'"
4018,276857633,b'Thanks!'
4018,276857761,"b'Sounds good, whenever I see numbers without units I always have to ask the same question :)'"
4018,276857809,b'Feel free to ignore this and close this :)'
4019,276877813,"b""I know that this was already discussed on the chat, but I do wanna call out that some other solvers are in this namespace:\r\n\r\nnamespace Microsoft.MixedReality.Toolkit.Utilities.Solvers\r\n\r\n[https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/ConstantViewSize.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/ConstantViewSize.cs)\r\n[https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/InBetween.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/InBetween.cs)\r\n[https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/Overlap.cs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/Overlap.cs)\r\n\r\nI don't really have a strong opinion between any of these so the power is yours.\r\n #Resolved"""
4019,276878685,"b'Also, facepalm on my part, I totally missed the inspector word =/\r\n\r\n---\r\nIn reply to: [276878366](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4019#discussion_r276878366) [](ancestors = 276878366,276877813)'"
4048,277446691,"b""Nit: Could also move into CheckMixedRealityToolkitScene to handle two internet birds with one internet stone, unless the goal here is to explicitly only handle SceneOpened/NewSceneCreated (i.e. I could imagine in Unity 2019 maybe there's some other hook we listen to and then we have to fix it again by adding this check to that hook too).\r\n\r\nCould in this context means you can go either way and this looks good to me as well"""
4051,277821264,b'Do you know what the plan is for uncommenting this code (i.e. is it better to: 1) delete this commented out code or 2) having the TODO reference a github issue with a description on how to reintroduce this code?) #Resolved'
4051,277822172,"b'>FBX [](start = 264, length = 3)\r\n\r\nNit: Do you know why FBX is the only one that is special cased where both the upper case and lower case ones are done? If we do want to generally handle upper/lower it seems like it would be okay to just store the lower version here and then to-lower the comparison strings down below where things are used. #Resolved'"
4051,277822892,"b'>private const string ScriptFileIdConstant = ""11500000""; [](start = 8, length = 55)\r\n\r\nNit: Is this an arbitrarily chosen number/constant (or is this dependent on something else?) #Resolved'"
4051,277823301,"b'>Failed. [](start = 32, length = 7)\r\n\r\nNit: ""Failed to retarget assets"" #Resolved'"
4051,277824364,"b'>private static Dictionary<string, ClassInformation> ProcessScripts(string[] allFilePaths) [](start = 8, length = 89)\r\n\r\nNit: This is a general comment for a number of these functions which return dictionaries (especially because they return general types i.e. string), it would be helpful to have a comment saying what the semantics of the returned values are (i.e. ""returns a dictionary of asset full assembly names to ClassInformtion values"" #Resolved'"
4051,277826520,"b'>int lengthOfPrefix = Application.dataPath.IndexOf(""Assets""); [](start = 12, length = 60)\r\n\r\nSuper nit: This is shared between a couple of places, consider having a helper function/constant so that we don\'t have to have multiple instances of hardcoded ""Assets"" strings. #WontFix'"
4051,277827565,"b'>string guid = File.ReadAllLines($""{asmdefFile}.meta"")[1].Substring(6); [](start = 16, length = 70)\r\n\r\nDo you know if this structure of the .meta file will be consistent/solid going forward (i.e. we can take this dependency) or if not, if there\'s any way we can error out/assert if this isn\'t actually a valid GUID anymore? i.e. they changed the data structure now and the guid is on line 3 instead of line 2\r\n\r\n\r\n #Resolved'"
4051,277828536,"b""Do you know if we can depend on the guids in the meta file to always be lowercase? If there's a uppercase F I think we'll just go to G. #Resolved"""
4051,277829124,"b"">//Standalone is guid + 2 [](start = 24, length = 24)\r\n\r\nIs it the case that the editor guide + 1 case has already been done (i.e. it's already been +1ed before entering this function? My confusion comes from seeing comments that say there can be up to 3 cycles applied, but there's only two calls to CycleGuidForward here. #Resolved"""
4051,277830136,"b""Do you know if the point of this logging was mostly for development of this code, or does this debug output help with long term debuggability as well? It seems like given there's a .cs (and some other somewhat common extensions) this would probably log a bunch of lines. #Resolved"""
4051,277830926,"b'>private static void ProcessYAMLAssets(string[] allFilePaths, string outputDirectory, Dictionary<string, Tuple<string, long>> remapDictionary, Dictionary<string, string> dllGuids) [](start = 8, length = 178)\r\n\r\nNit: It would be helpful to have a comment about the incoming dictionary types (i.e. remapDictionary is a map of what looks to be raw GUIDs i.e. non-cycled to file IDs, similar thing for the dllGuids). #Resolved'"
4051,277833931,"b"">{ [](start = 53, length = 1)\r\n\r\nQuestion for my own understanding - is this extra '{{' character designed to trigger some string replacement behavior or something? I see that in the YAML files that are checked in they're just like:\r\n\r\n m_Script: {fileID: 11500000, guid: e534d3d8fbada634785d567d8fe8562c, type: 3}\r\n\r\nInstead of \r\n\r\n m_Script: {{fileID: 11500000, guid: e534d3d8fbada634785d567d8fe8562c, type: 3}} #ByDesign"""
4051,277834376,"b'>LogWarning [](start = 38, length = 10)\r\n\r\nNit: Maybe LogError and delete the comment on the line above. #WontFix'"
4051,277834891,"b"">// TODO maybe we don't need to [](start = 16, length = 30)\r\n\r\nNIt: Should we just delete this TODO? #Resolved"""
4051,277837339,"b"">playerDataCahce [](start = 26, length = 15)\r\n\r\nNit playerDataCache (but also I think that this isn't used, so maybe this line should just be deleted #Resolved"""
4051,277841425,b'Nit: I think we can just use a single if (!foundMatch) scope #Resolved'
4063,278200833,b'Done'
4060,278210049,b'Done.'
4085,278635570,"b'Is it possible to use yaml templates to avoid some of the duplication in these files:\r\n\r\nhttps://github.com/Microsoft/azure-pipelines-agent/issues/1686\r\n\r\ni.e. I started out wondering about if we could share like ""{Env:Unity2018.3.7f1}"" but then noticed there were larger swaths of things that we could possibly template-ize.\r\n\r\nOr if this isn\'t possible, I guess it would be good for our collective knowledge to know if this isn\'t possible and if so for what reason.'"
4085,278637295,"b""It's interesting seeing a hardcoded version number here, but that also makes me wonder if this is even necessary (i.e. for this validation does the version # even matter?). I assume that whatever our publish/step would handle appending the right version at that point."""
4085,278652585,"b""Per your other comment, feel free to resolve this as work to do in the future. I didn't understand the scope of what this review was for (i.e. UI -> YAML), where the next step is YAML -> better YAML."""
3773,278658144,"b""There's a bug here where an exception is thrown if you:\r\n\r\n1) Enable facades\r\n2) Try to drag any of the facades into like MixedRealityInputSystem into MixedRealityPlayspace.\r\nHit an exception:\r\n\r\nSystem.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n  at System.ThrowHelper.ThrowInvalidOperationException (System.ExceptionResource resource) [0x0000b] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 \r\n  at System.Collections.Generic.List`1+Enumerator[T].MoveNextRare () [0x00013] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 \r\n  at System.Collections.Generic.List`1+Enumerator[T].MoveNext () [0x0004a] in <d7ac571ca2d04b2f981d0d886fa067cf>:0 \r\n  at Microsoft.MixedReality.Toolkit.Utilities.Facades.MixedRealityToolkitFacadeHandler.UpdateServiceFacades (UnityEditor.SceneView sceneView) [0x0021e] in D:\\github\\MixedRealityToolkit-Unity\\Assets\\MixedRealityToolkit\\Inspectors\\MixedRealityToolkitFacadeHandler.cs:97 \r\n  at (wrapper delegate-invoke) <Module>.invoke_void_SceneView(UnityEditor.SceneView)\r\n  at UnityEditor.SceneView.CallOnSceneGUI () [0x000da] in C:\\buildslave\\unity\\build\\Editor\\Mono\\SceneView\\SceneView.cs:2848 \r\n  at UnityEditor.SceneView.HandleSelectionAndOnSceneGUI () [0x0000d] in C:\\buildslave\\unity\\build\\Editor\\Mono\\SceneView\\SceneView.cs:2125 \r\n  at UnityEditor.SceneView.OnGUI () [0x00376] in C:\\buildslave\\unity\\build\\Editor\\Mono\\SceneView\\SceneView.cs:1986 \r\n  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <d7ac571ca2d04b2f981d0d886fa067cf>:0  occurred\r\n\r\nThe issue is that face.CheckIfStillValid will destroy the facade (i.e. it will destroy the input system one and then recreate), but this changes the ActiveFacadeObjects collection (because in the ServiceFacade's own  OnDestroy method, it removes itself from the ActiveFacadeObjects list).\r\n\r\nThe work is probably then to snap a copy of the this array and iterate over the copy of the array instead."""
3773,278659467,"b"">IInputSimulationService [](start = 66, length = 23)\r\n\r\nJust for my own understanding, what was the reason for removing the IInputSimulationService from the InputSimulationService implementation?\r\n\r\nFrom a casual reader it seems like this implementation should implement the interface, so I'm curious why it's being removed."""
3773,278674590,"b""For my own reference, are we calling DestroyImmediate because we need gameObject == null after this call? And is this not necessary when in play mode?\r\n\r\nIf this is common knowledge it's probably just a matter of me catching up."""
3773,278676207,b'Nit: Please remove commented out code prior to checking in.'
3773,278678234,"b'>  string assetPath = $""{MixedRealityEditorSettings.MixedRealityToolkit_RelativeFolderPath}/StandardAssets/Textures""; [](start = 10, length = 116)\r\n\r\nThis line is throwing a warning because it\'s using a deprecated API. Please use the MixedRealityToolkitFiles helper.\r\n\r\nI THINK you wanna do something like\r\n\r\nMixedRealityToolkitFiles.MRTKDirectories.First(), though Andrei would be more authoritative than I am.\r\n\r\nThe reason this was done was to make it so that you could import our code/binaries into not the root assets location.'"
3773,278680928,"b'>  public class BaseMixedRealityServiceInspector : IMixedRealityServiceInspector [](start = 2, length = 79)\r\n\r\nNit: Can you add some doccomments for this base class?'"
3773,278681356,"b'> private static readonly Color disabledColor = Color.Lerp(enabledColor, Color.clear, 0.5f); [](start = 7, length = 91)\r\n\r\nThoughts on having a Colors.cs where these types of constants can go?\r\n\r\nI see disabledColor copy pasted across a few different service inspector implementations.'"
3773,278684017,"b'I think it might be possible to simplify these lines to \r\n\r\nEditorGUILayout.ObjectField(""Focus Result"", pointer.Result?.CurrentPointerTarget, typeof(GameObject), true);\r\n\r\n'"
3773,278684256,"b'>numPointersFound [](start = 16, length = 16)\r\n\r\nThis is a super nit but, since we only care about the presence of pointers, we can just use a bool type (i.e. pointersExist)'"
3773,278730989,"b""I'm having a little trouble finding where to use this inspector - can you share some instructions on how to make it visible?"""
3773,278733660,"b""Nit: It's a bit weird reading the default case show up before the non-default case, if only because default always executes last regardless of the order here (so seeing out of code visually laid out out of the order in which it executes is a bit odd to see)\r\n\r\nThat being said, I can't find any coding guidelines that state this explicitly - it seems like it's implicit in guidelines:\r\n\r\n[https://google.github.io/styleguide/javaguide.html#s4.8.4-switch](https://google.github.io/styleguide/javaguide.html#s4.8.4-switch)\r\n[https://google.github.io/styleguide/cppguide.html#Loops_and_Switch_Statements](https://google.github.io/styleguide/cppguide.html#Loops_and_Switch_Statements)\r\n[https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es70-prefer-a-switch-statement-to-an-if-statement-when-there-is-a-choice](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es70-prefer-a-switch-statement-to-an-if-statement-when-there-is-a-choice)\r\n\r\nThis comment is for here and below as well\r\n"""
3773,278734049,"b""For my own understanding, what would be the ramifications of setting the value on this hand joint? we special case it a bunch but if there's no harm in setting it (or just enumerating over the relevant set of hand joint enums) it might simplify some of this code."""
3773,278734920,"b'>public virtual void DrawSceneGUI(object target, SceneView sceneView) { } [](start = 8, length = 72)\r\n\r\nWould it also be possible to have some comments regarding the type that ""target"" will be - I see that it gets cast to some other interesting things in subclasses, so maybe setting some general expectations (i.e. it will be of type [CustomEditor(typeof(ServiceFacade))] whatever is in CustomEditor) or MixedRealityServiceInspector\r\n\r\nIn general these types of comments are valuable especially with generic object types, to help scope down the set of things consumers/extenders would have to deal with with mental overhead.'"
3773,278735727,"b'Ah, nevermind, I guess <inheritdoc> would probably be good enough here because you have it already on IMixedRealityServiceInspector\r\n\r\n---\r\nIn reply to: [278680928](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3773#discussion_r278680928) [](ancestors = 278680928)'"
3773,278735796,"b""Actually this is probably just a comment for IMixedRealityServiceInspector's parameters. \r\n\r\n---\r\nIn reply to: [278734920](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3773#discussion_r278734920) [](ancestors = 278734920)"""
3773,278736682,"b""It's interesting to see this check happen here but not in OnHeaderGUI - i.e. if the facade has been destroyed, is it still interesting to do the OnHeaderGUI stuff as well?"""
3773,278736780,"b'>drawDocLink [](start = 17, length = 11)\r\n\r\nShould drawDocLink also be included in drewSomething down below?'"
3773,278737259,"b'>\xe2\x80\xa2 [](start = 39, length = 1)\r\n\r\nO_O'"
3773,278737727,"b""Super Nit: \r\nif (GetServiceInspectorInstance(serviceType, out inspectorInstance) && !inspectorInstance.DrawProfileField) \r\n{\r\n  return false;\r\n}\r\n\r\nIt's just adding an unnecessary extra scope."""
3773,278739000,"b'>// Would be nice to handle this with a lookup instead [](start = 16, length = 53)\r\n\r\nWe could create a const/final static dictionary for this class that has\r\n\r\nDictionary<Type, string> = {\r\n  {IMixedRealityInputSystem, ""inputSystemProfile""},\r\n  {IMixedRealityBoundarySystem, ""boundaryVisualizationProfile""},\r\n ....\r\n}\r\n\r\nAnd then use that to lookup the property name.\r\n\r\nSince it looks like the only delta here is the property name.\r\n\r\nAlternatively we could just move:\r\n\r\nBaseMixedRealityProfileInspector.RenderProfile(serviceProfileProp, null, false, serviceType);\n                    EditorGUILayout.Space();\n                    foundAndDrewProfile = true;\r\n\r\nOut of each if/elseif statement and into another block like this:\r\n\r\nSerializedObject activeProfileObject = new SerializedObject(MixedRealityToolkit.Instance.ActiveProfile);\n                // Would be nice to handle this using some other method\n                // Would be nice to handle this with a lookup instead\r\nSerializedProperty serviceProfileProp;\n                if (typeof(IMixedRealityInputSystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""inputSystemProfile"");\n                    foundAndDrewProfile = true;\n                }\n                else if (typeof(IMixedRealityBoundarySystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""boundaryVisualizationProfile"");\n                    foundAndDrewProfile = true;\n                }\n                else if (typeof(IMixedRealityDiagnosticsSystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""diagnosticsSystemProfile"");\n                    foundAndDrewProfile = true;\n                }\n                else if (typeof(IMixedRealitySpatialAwarenessSystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""spatialAwarenessSystemProfile"");\n                    foundAndDrewProfile = true;\n                }\r\n\r\nif (foundAndDrewProfile)\r\n{\r\n  BaseMixedRealityProfileInspector.RenderProfile(serviceProfileProp, null, false, serviceType);\n                    EditorGUILayout.Space();\n                    foundAndDrewProfile = true;\r\n}'"
3773,278740022,"b'>initializedServiceInspectorLookup = true; [](start = 12, length = 41)\r\n\r\nDo you know if this implies that if I ever add new service inspectors, I need to reboot unity in order to pick them up (or close my project and reopen my project) or close my scene and reopen my scene?\r\n\r\nIt looks like this is doing a static one-time initialization, which is fine, and if this is gonna be the behavior we should just document this (i.e. in docs)'"
3773,278740870,"b"">observerIndex -= observerColors.Length; [](start = 16, length = 39)\r\n\r\nThis doesn't work out if the observerIndex is > 2x the observerColors length.\r\n\r\nFor example, you have 13 observers, and the observerColors length is 6.\r\n\r\nThis will still try to map it to position 7, which doesn't exist.\r\n\r\nThe canonical way to do wraparound here is just modulo i.e.:\r\n\r\nobserverIndex = observerIndex % observerColors.Length;"""
3773,278742631,"b'> Debug.Assert(instance.transform.childCount == 0, ""The MixedRealityToolkit should not have GameObject children!""); [](start = 23, length = 114)\r\n\r\nIs it possible to assert that there isn\'t any non-facade child? I guess this is pretty minor because the user will see it get nuked anyway right.'"
4099,279040443,"b'Will a future change re-introduce this warning (it seems helpful), or is this something that will be too difficult to support going forward?'"
4099,279104935,"b"">// Only remove IMixedRealityService or IMixedRealityExtensionService (not IMixedRealityDataProvider) [](start = 20, length = 100)\r\n\r\nNit: Can you update this comment to explain the 'why' part (instead of the 'what') - it is clear from the code that it's not doing things to data providers (this is what the comment also says) but what's actually valuable is to leave a note about why this is being done."""
4099,279105807,"b'Do we want to depend on callers to filter out dataproviders from coming here? i.e. I see MixedRealityToolkit doing things where it filters out data providers, but if this is something we want to prevent from ever happening it would probably be good to enforce at a lower level.'"
4099,279106334,"b"">RegisterServiceInternal [](start = 21, length = 23)\r\n\r\nCan we have some comments about why only this flavor of RegisterServiceInternal is also calling MixedRealityServiceRegistry.AddService<T>(serviceInstance, this)?\r\n\r\nFor example, there are comments saying that core services are always removable but I see them get added like:\r\n\r\n\n#region Services Initialization\n\n            var orderedCoreSystems = activeSystems.OrderBy(m => m.Value.Priority).ToArray();\n            activeSystems.Clear();\n\n            foreach (var system in orderedCoreSystems)\n            {\n                RegisterServiceInternal(system.Key, system.Value);\n            }\n\n            var orderedServices = registeredMixedRealityServices.OrderBy(service => service.Item2.Priority).ToArray();\n            registeredMixedRealityServices.Clear();\n\n            foreach (var service in orderedServices)\n            {\n                RegisterServiceInternal(service.Item1, service.Item2);\n            }\n\n            InitializeAllServices();\n\r\n\r\nAnd these wouldn't get added to the registry because they don't call this overload of RegisterServiceInternal."""
4099,279107114,"b""The API surface exposed here feels a bit interesting - there's a public one to add a specific child (i.e. as a consumer I can invoke that to add a specific child) but there's no way for me to remove that child without totally messing up all other callers (i.e. I can't remove just my child, I have to remove everything).\r\n\r\nI'm guessing that maybe this could be cleared up with a comment, or perhaps is coming in the next PR, but this API assymetry should be cleared up."""
4099,279107621,"b""> // todo: is this the data type we want? [](start = 7, length = 40)\r\n\r\nNit: What's the resolution on this TODO?"""
4099,279107901,"b""I guess what I don't understand is, is my question even a problem (i.e. will Detach children ever be called by multiple people, or just a single person managing some greater lifecycle?) I'm trying to understand the calling mechanics of this function.\r\n\r\n---\r\nIn reply to: [279107558](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4099#discussion_r279107558) [](ancestors = 279107558)"""
4099,279108011,"b'>regisrar [](start = 82, length = 8)\r\n\r\nregistrar'"
4099,279108227,"b'>pair [](start = 14, length = 4)\r\n\r\nI think this is a list of pairs - TBH it feels like this datastructure is interesting enough to have its own class abstraction. Anytime you start going 3 layers deep (i.e. a hashtable of a list of pairs) it probably means it should be abstracted a little different.'"
4099,279108587,"b'As a caller, why would I need both of these flavors if it looks like the second one does things automatically for me?) Is it just for effiicency (i.e. some callers know the registrar?)'"
4099,279109153,"b""It's weird seeing outparams being first, instead of last - in other languages that support this type of mechanic most of the coding guidelines I've seen have been to put the input first, output last.\r\n\r\nOther examples of code from warnings/guidelines:\r\n[https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1021-avoid-out-parameters?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1021-avoid-out-parameters?view=vs-2019)\r\n[https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-parameter-modifier](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-parameter-modifier)\r\n\r\nSeem to list it last as well.\r\n"""
4099,279109547,"b""I think this will throw a KeyNotFound exception if this doesn't exist. AFAICT there are public->private paths that don't guard against this."""
4099,279109696,"b""I guess in this case it's interesting because name is optional.\r\n\r\n---\r\nIn reply to: [279109153](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4099#discussion_r279109153) [](ancestors = 279109153)"""
4099,279110337,"b'Can you help me understand a bit about this name concept - it looks like it lets us register multiple services of the same type (i.e. multiple boundary systems?) What are the scenarios that we\'re trying to enable with this? The reason I ask is this name concept appears to add some additional complexity to this code and I""m trying to understand the value/use cases that it enables.\r\n \r\n'"
4099,279110514,"b""If there are two services and no name is passed, shouldn't we log error /return false if there's more than one service? It feels like it's unpredictable otherwise and we don't know what the consumer actually wanted."""
4099,279110567,"b'>i tcan be discarded. [](start = 80, length = 20)\r\n\r\nspelling : ""it can be discarded""'"
4099,279111764,b'Is OnInputChanged called in the update loop (i.e. every frame?) If so we should avoid using lambdas here because they contribute to frame-by-frame memory alloc (and then eventually GC thrashing)'
4099,279112404,b'Same comment from the other section - if this is going to be done in any sort of inner loop it would be best to avoid lambdas (which may mean we have to change the function definition of PerformanceTransformation'
4099,279127740,"b"">registryIndex = 0; [](start = 16, length = 18)\r\n\r\nCan you still add a Debug.Assert or warn or log or return failure if there are more than two services? This will be an undefined thing that could really bite people in the future (i.e. things could 'just work' luckily because it happens to be that the first dude always asks but the second dude doesn't, but if the second dude ever asks it's gonna be bad)"""
4116,279436253,"b""Yep - I believe this gets referenced in the update loop and will end up leading to small allocs (which then trigger GC down the line). There's a couple possibilities here:\r\n\r\n1) Switch to ||.\r\n\r\nAdvantages being less churn, but also possibly less readable code (i.e. it's easy to look at vector2Data != newValue, still easy to read the above but a little less natural)\r\n\r\n2) Have a class-member variable for temp space to avoid alloc.\r\n\r\nSlightly readable but now we have a what like 16 byte increase in class memory usage.\r\n\r\nI don't really have a preference.\r\n\r\n---\r\nIn reply to: [279413081](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4116#discussion_r279413081) [](ancestors = 279413081)"""
3773,279444573,"b'>ediable [](start = 26, length = 7)\r\n\r\neditable'"
3773,279474299,"b""Normally yes, for larger changes like this I've been using codeflow which doesn't have that integration.\r\n\r\n---\r\nIn reply to: [279445503](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3773#discussion_r279445503) [](ancestors = 279445503)"""
3773,279474729,"b'> /// </summary> [](start = 7, length = 15)\r\n\r\nNit: Extra summary tag (this line can be removed.'"
3773,279475209,"b""This comment I think was copy pasted from the remarks but it's a bit stale (i.e. it references a types count which doesn't exist within this scope)"""
3773,279475824,"b""And also I think that this still leads to an issue where if there are 2+ types it will always only return the first type (is this just something that will never happen?). Basically the comments no longer match the code (i.e. it used to be that 0 == show everything, 1== show only that type, 2 == show everything) but now it's (0 == show everything, 1 == show only that type, 2 == show a random one based on however the underlying collection enumeration works)\r\n\r\n---\r\nIn reply to: [279475209](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3773#discussion_r279475209) [](ancestors = 279475209)"""
3773,279488457,"b""These lines generate a compiler warning in unity (i.e. e being unused):\r\n\r\nAssets\\MixedRealityToolkit\\Inspectors\\MixedRealityToolkitFacadeHandler.cs(109,29): warning CS0168: The variable 'e' is declared but never used\n\r\n"""
4116,279563648,"b'The conversation really went on here, but I wanted to mention:\r\n\r\n1) Unity\'s own guidelines recommend against allocations in Update/LateUpdate (i.e. inner loop stuff)\r\n\r\nhttps://unity3d.com/learn/tutorials/topics/performance-optimization/optimizing-garbage-collection-unity-games?playlist=44069\r\n\r\nSee ""Don\xe2\x80\x99t allocate in functions that are called frequently""\r\n\r\n2) Once things go down to IL2CPP, I have no idea if any of the .NET rules for GC still apply given that it\'s some unity IL2CPP stuff that\'s going on. Maybe it\'s smart enough to actually cache that new value once (and thus it will keep using the same thing on the heap with no issues). The problem is that we don\'t know (or if someone does know and can point to data, please do!)\r\n\r\n3) Given Unity\'s own recommendation, if we trust that Unity\'s recommendation is reasonable (which I believe is the case) and we don\'t yet have the cycles to run our own profiling to double check it, it seems reasonable to err on the side of following Unity\'s performance guidelines in how we approach our problems.'"
4074,279567577,"b'Unless someone is actually going to do this in the next few days, I recommend not adding new TODOs.\r\n\r\nThese are very frustrating to read (as a consumer) and are easy to forget about (as a producer)'"
3773,279568367,b'```suggestion\r\n![](../Documentation/Images/MixedRealityToolkitConfigurationProfileScreens/MRTK_EnableServiceInspectors.png)\r\n```'
3773,279578059,"b'```suggestion\r\n        /// <param name=""serviceType"">Optional service type to limit available profile types.</param>\r\n```'"
3773,279588217,"b'```suggestion\r\n        /// <param name=""serviceType"">Optional service type to limit available profile types.</param>\r\n```'"
4181,281260690,"b""I see that this follows the edit mode naming scheme - do you know if the TestFixture and # actually is necessary here? If not, they are arbitrary and non-value accruing noise (i.e. the numbering is arbitrary based on when things are being added, and TestFixture prefixes everything and isn't super helpful). If this works without the naming, I would rather we move our tests to be named based on what they are testing.\r\n\r\n"""
4181,281262745,"b""This playspace setup is common to a number of they playmode tests, and might be worth having a TestUtilities.InitializePlayspace().\r\n\r\nNote that it's possible to go either way here - having code written out this way has an advantage in that the entire test is clearly readable (in terms of how it is setting up the playspace, and then where the cube gets put, etc."""
4181,281263029,b'At the same time if playspace creation (i.e. the light location + playspace lookat) will basically be the same for our playspace tests then having a single thing would probably reduce the noise in the tests to just what is being tested.'
4181,281263230,"b""Do you know why testLight doesn't need to be destroyed? Or is it that this is also intending to test that component creation -> manipulation -> destruction's entire lifecycle works as expected?"""
4182,281264567,"b""```suggestion\r\nMRTK Standard shading system utilizes a single, flexible shader that can achieve visuals similar to Unity's Standard Shader, implement [Fluent Design System](https://www.microsoft.com/design/fluent/) principles, and remain performant on mixed reality devices.\r\n```"""
4182,281266193,"b'I think this might want to say ""example scene doesn\'t exist in the codebase"" or maybe just delete the stuff in parenthesis. The reference to ""this PR"" is out of context in the documentation (i.e. someone reads the docs and asks, what PR?)'"
4131,281274080,b'Any chance we could do a tabs -> spaces conversion in CreateTextAssetFromTemplate to fix that part up?'
4131,281275000,"b""Some of the Task.Delays below make sense to me (i.e. waiting for compile) but these here I don't fully understand - CreateTextAssetFromTemplate appears to just be doing string replacement and WriteTextAssetToDisk LOOKS to be the sync flavor - Also it looks like each section is doing an unrelated thing (i.e. one for inspector, one for template, etc.)\r\n\r\nWhat's the wait for (and could it be commented?). If it not necessary, can we remove it?\r\n\r\nUsually anytime you see random 10-1000ms awaits in code it's a red flag."""
4131,281275192,"b""Or I guess we just depend on peoples' text editors to convert the automagically."""
4131,281289628,b'Can you add a comment about this?'
4185,281332242,b'O_O'
4189,281366663,"b'>qr code id: [](start = 81, length = 11)\r\n\r\nI think either update this string to be ""exception: "" or also log the qr code id as well.'"
4189,281366845,"b'>id"" [](start = 75, length = 3)\r\n\r\nNit: Unrelated to this PR, but might be helpful to list the ID here (it seems like it was intended to list the ID but maybe it was missed)'"
4189,281367997,"b'>f( [](start = 13, length = 2)\r\n\r\nSuper nit: space between if (State != ConnectionState.Disconnected)'"
4189,281368732,"b'>catch { } [](start = 12, length = 9)\r\n\r\nAre the exceptions generated from this not helpful (to catch + log)?'"
4189,281369649,"b'>InitializeCalibrationNative [](start = 36, length = 27)\r\n\r\nQuestion about the mechanics of this (and I guess, maybe the answer is I just get pointed to docs on how this works). Is this a ""one global per process initialization step"" or is it possibly thread dependent as well? Since we do it in response to newing up the CalibrationAPI I asssume that the underlying APIs as well must be thread-safe (either that or whatever it\'s doing must set things up for the entire process)'"
4189,281371078,"b""Nit: This else isn't strictly necessary, and is also not consistent with how things are done in the rest of this file.\r\n\r\ni.e. CalculateGlobalArUcoExtrinsics has something similar and does without the else.\r\n\r\nWhile I think I'd prefer the model that CalculateGlobalArUcoExtrinsics has, I think it's more important to be consistent here so it's up to you which model you pick."""
4189,281371384,"b'>(extrinsics[offset] > 0.01f) [](start = 37, length = 28)\r\n\r\nThis may be answered in some docs though I\'m not familiar - what\'s the special reason why 0.01f is chosen here as ""success""?'"
4189,281371848,"b'This code has some copy-paste with lines 211-224, consider having a helper.'"
4189,281372823,"b'This section also has some copiage from the function above, consider making some of this common as well.'"
4189,281373726,"b""Nit: It seems a bit odd having a for loop over something of size 1 - if this is because we expect to change this very soon that's fine, but if numIntrisics is only set to 1 to make things more readable (as I assume it is) then probably not doing the for loop would make things clearer about the intent of that variable."""
4189,281373906,"b""Unless I'm missing something here and numIntrinsics is also an outparam for the native API?\r\n\r\n---\r\nIn reply to: [281373726](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4189#discussion_r281373726) [](ancestors = 281373726)"""
4189,281374506,"b"">nextChessboardImageId [](start = 46, length = 21)\r\n\r\nCan you add some comments about the usage/intention of this next ID mechanism - AFAICT it looks like it's based on the number of files in a directory, which doesn't seem to be unique, so if this is truly an identifier I'm a bit confused about how we would prevent ID collisions."""
4189,281375054,"b""Ah, reading more it makes sense what it's doing (i.e. monotonically increasing ID based on the written out filenames).\r\n\r\n---\r\nIn reply to: [281374506](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4189#discussion_r281374506) [](ancestors = 281374506)"""
4189,281376081,"b"">Math.Max(Directory.GetFiles(directory, fileExtensionExpected, SearchOption.TopDirectoryOnly).Length, nextImageId); [](start = 30, length = 114)\r\n\r\nThis could be simplified to nextImageId = Directory.GetFiles(directory, fileExtensionExpected, SearchOption.TopDirectoryOnly).Length.\r\n\r\nIt's not possible for nextImageId to be anything greater than 0 in this case.\r\n\r\nThe main reason why I think it this should be simplified is that this code suggests that it's possible for nextImageId to be meaningful up until this point (that it could be > 0) - this is not the case"""
4189,281377537,"b'>Imag [](start = 27, length = 4)\r\n\r\nSuper Nit: Image'"
4189,281377788,"b"">// TODO - figure out what is the correct texture to use here in the new compositor wrapper [](start = 60, length = 90)\r\n\r\nNit: If this TODO is going to be addressed very soon this is fine, if not it's gonna be a dead TODO and future folks probably won't know what to do with it. I guess either expand on it (to explain how to figure this out) or file an issue to track it."""
4189,281378245,"b"">private int expectedMarkers = 18; [](start = 8, length = 33)\r\n\r\nNit: Could probably be a static/const (i.e. it's mutable)"""
4189,281378598,"b'>for( [](start = 12, length = 4)\r\n\r\nNit: Can you do a:\r\n\r\ns/for\\(/for (/g\r\ns/if\\(/if (/g\r\n\r\nIn this file.'"
4189,281378946,b'Nit: \r\n\r\nif (feedImage != null &&\n                feedImage.texture == null)\r\n{\n    feedImage.texture = CompositorWrapper.GetDSLRFeed();\r\n}'
4189,281380970,"b""How often do you expect these things to actually fail? It looks like if it does fail, we could end up with unused IDs in the middle, where the next time we do some operations we end up re-using old IDs because we're basing the next ID on the number of files in a directory, rather than the actual filenames themselves.\r\n\r\nFor example, imagine that we have 10 things, we only load the 10th (so let's say now there is file_9.png in the directory).\r\n\r\nThe next time this runs this will say that the nextID is 1, and will try to use ID space 1-11, and if it succeeds this time it will blow away the old.\r\n\r\nMaybe this is fine, but anytime I see ID reuse that is scary.\r\n\r\nIf in doubt just use the millis timestamp since epoch or something, which is unique and easily understandable."""
4189,281382902,"b""If we're only ever going to use the most recently queued thing's data, then we probably shouldn't store a queue - just store the last thing."""
4189,281383178,b'Nit: \r\n\r\nif (lastArUcoImage)\r\n{\n                lastArUcoImage.texture = dslrTexture;\r\n}'
4189,281383708,"b'> if(texture == null || [](start = 15, length = 22)\r\n\r\nSame general comment about if( -> if (\r\n\r\nAnd also down below having:\r\n\n            if (chessboardHeatmap)\n                CalibrationDataHelper.SaveImage(chessboardHeatmap, ""ChessboardHeatmap"");\n\n            if (chessboardCorners)\n                CalibrationDataHelper.SaveImage(chessboardCorners, ""ChessboardCorners"");\r\n\r\nBecome:\r\n\r\n\nif (chessboardHeatmap)\r\n{\n                CalibrationDataHelper.SaveImage(chessboardHeatmap, ""ChessboardHeatmap"");\r\n}\n\nif (chessboardCorners)\r\n{\n                CalibrationDataHelper.SaveImage(chessboardCorners, ""ChessboardCorners"");\r\n}\r\n\r\nI think this is the last I\'ll leave of this but I will hope that this can be fixed up in the rest of the codebase'"
4189,281384516,"b""This is a really weird question but maybe mentally I'm so used to going where I iterate over x first, then y, then z (or i -> j -> k) - is this order primarily because you get some sort of perf benefits of memory localility, or is it also equally arbitrary like what I usually do?"""
4189,281387008,"b""This is a nit and now that it's been written feel free to wontfix/ignore this - in general if we're gonna be storing multiple things on the same key, we should probably just store all of the things associated with that key on a sturct thing - so that we don't have to do 2-3 different hashes to do the samething (see lines 66-67 for where we are doing multiple hashes)."""
4189,281390479,"b'>RemoveItems [](start = 12, length = 11)\r\n\r\nThe naming of this function is extremely confusing.\r\n\r\nIt says ""remove items"" so I would expect this would remove observedMarkers from dictionary.\r\n\r\nHowever, observedMarkers is actually kept.'"
4189,281391296,"b""Thoughts on moving this around OnValidate() so that it's purely an editor thing?\r\n"""
4189,281391720,"b'>private Dictionary<string, string> playerIds = new Dictionary<string, string>() [](start = 8, length = 79)\r\n\r\nNit: Can you add a comment about what this dictionary is? i.e. seeing a string to string map and I wonder what it is.'"
4189,281391943,"b""I guess this list could grow in the future - I guess maybe just get rid of this because we default to false? Otherwise it's a bit weird in the future where we aren't handling certain flags but really the intent is to only have runAsUser on WSA"""
4189,281392421,"b'> net.DisconnectAll(); [](start = 15, length = 21)\r\n\r\nSuper dumb question for me - does this also drop the OnConnected registration below (or does the eventing mechanism prevent double/triple registrations?)'"
4189,281392915,"b'>playerId = playerIds[obj.Address]; [](start = 20, length = 34)\r\n\r\nShould this also be getting removed from the dictionary at this point? Or do you want to be storing them forever for other reasons (i.e. still want to handle OnRecieve after disconnection?)'"
4189,281393158,"b'Why does this function use a validId bool (but other ones above check against string.Empty)? \r\n\r\nAlso, this uses String.Empty but things above use string.Empty.'"
4227,281833406,"b""@killerantz Is there a rewording here that would be a little more helpful as a doccomment? The text here reads somewhat as dev notes to self, and as a reader I don't really know what to make of this."""
4225,281844820,"b""This drops the LogError - was this old error not helpful/we don't want to preserve it? Also, is there a concept of a globally non-valid ID (i.e. is zero just understood to be a non-valid ID)?"""
4246,282565567,"b'>statisticsUpdateCooldownTime [](start = 28, length = 28)\r\n\r\nNit: Add a comment about the units (in this case, I think seconds)'"
4246,282565620,"b"">6 [](start = 65, length = 1)\r\n\r\nWhat's the significance of the number 6?"""
4253,282635252,b'It might be worth logging the exception (in case the JSON library has some helpful message about what part failed deserialization)'
4264,282958270,b'Do you know if we plan on calling this with renderEditorElements = false ever? I know that prior to this change it looks like it was used to check for the MRTK object without rendering the help box in certain cases - with this change it looks like all callers I can see within the context of this PR had their false-passing instances removed.'
4270,283026094,"b'Code looks good to me, only comment here is that this code looks super testable (i.e. it takes deterministic inputs, and then its state changes) - this would be a great candidate for a unit test.'"
4315,283532844,"b"">InputSystem?.FocusProvider != null &&  [](start = 16, length = 38)\r\n\r\nThis seems slightly different compared to the past (i.e. there wasn't a FocusProvider null check) - was this intentional to add this focus provider null check? Is that a side effect of all this work?"""
4315,283533422,"b'>? [](start = 59, length = 1)\r\n\r\nSame question in other places (i.e. why does this add new null checks against FocusProvider?)'"
4315,283534034,"b""This is technically a breaking change, and also a break that doesn't accrue any value to other developers."""
4315,283534372,"b"">? [](start = 27, length = 1)\r\n\r\nIs this ? necessary? It looks like it should be waiting until the InputSystem is non-null (which is why I assume the previous change didn't have the null check)"""
4315,283535594,"b"">InputSystem [](start = 40, length = 11)\r\n\r\nAny idea why this didn't have a null check before? It looks like this system in Start() waits for input to become valid, so I'm curious how we need to keep checking that it's valid later."""
4315,283536782,"b""This is a breaking change as well - thoughts on leaving this obsolete, and then just not using it? Or you guys think we should just axe it and it's okay? \r\n\r\nIt feels like there is no customer value here to removing this (it will break them - unless the value is the explicit notification that they need to access the input system separately?)"""
4315,283537788,"b""This overall change looks fine, it's is weird to me though that we go from one singleton (i.e. MixedRealityToolkit) to another (MixedRealityServiceRegistry) - in this case now we put the onus of caching and reaching out to all of the consumers (i.e. this exact code is copy pasted in a lot of the things here)\r\n\r\nIf every single caller is handling caching it almost feels like MixedRealityServiceRegistry.TryGetService<IMixedRealityInputSystem> should cache as well (i.e. why not share some of this code at a lower level)"""
4315,283538518,"b"">InputSystem [](start = 16, length = 11)\r\n\r\nWhat's the case where InputSystem is null? It looks like in BaseInputDeviceManager it will set this in the constructor, so this one doesn't appear to be one that tries to get things later."""
4270,283889856,"b'>wake word [](start = 67, length = 9)\r\n\r\nNit: specify what the wake word is here (I know it\'s mentioned deeper in the code, as a reader of docs I would read this first and since this is hardcoded to ""select"" and not configurable in any way, it\'s probably better to have it mentioned as early as possible.'"
4270,283890681,"b"">Test01_ [](start = 27, length = 7)\r\n\r\nNit: Delete the 'Test01' prefix"""
4270,283891592,"b'>MixedRealityToolkit.InputSystem [](start = 12, length = 31)\r\n\r\nYou and dave should chat and make sure that one of you is on point to update this test in response to his PR:\r\n\r\n[https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4315](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4315)'"
4270,283892263,"b'Mentioned in another PR, but tests should be named based on what they\'re testing, and arbitrary numbered prefixes don\'t add value.\r\n\r\nThat being said ""TestGazeCursorArcticulated"" would also be fine (because it\'s testing the gaze cursor articulated interaction).\r\n\r\n---\r\nIn reply to: [283890681](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4270#discussion_r283890681) [](ancestors = 283890681)'"
4270,283892506,"b'Nit: Place at top of file, before usings'"
4315,283898325,"b""Thanks - this was a case where it felt like it makes no sense for a hand joint service to start up without an input system backing it - it's a fundamental dependency of the class, and we should fail earlier (i.e. in the constructor) if we're not given required dependencies."""
4312,283899573,"b""Please also update the remarks on FindHand above (The given handeness should be either Handedness.Left or Handedness.Right.) - I would just delete the remarks. \r\n\r\nI don't have the ability to suggest the change because that line is in the unchanged section."""
4360,284332204,b'```suggestion\r\n            interaction.BoolData = true;\r\n```'
4360,284332495,"b""There's not a lot of value having a bool that is assigned to true, and used whereever the 'true' value is desired - just use true directly (same goes for other parts of this file)"""
4360,284333304,"b""Nit: It might be helpful to have a comment that this is specifically verifying that changing a value from 0->0 is the single exception that doesn't trigger another change"""
4360,284334589,"b""I'm not very familiar with floating point comparison issues in C# - I know that with C++ this sort of comparison is dangerous because you could get floating point comparison issues (i.e. something that is very near zero reports as zero, something)\r\n\r\nI'm curious if you know about this stuffs"""
4382,284454493,"b'Per https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4381, given that the same instance is being initialized multiple times, does this also imply that toolkitInstances will have a duplicate (i.e. two of the same instances?)'"
4314,284819013,"b"">displays a warning. [](start = 48, length = 19)\r\n\r\nThe implementation down below doesn't seem to display a warning - it looks like both calls down below are just property getters. Maybe this part of the comment is stale and can be deleted?"""
4314,284819401,"b'>CheckProfileLock [](start = 30, length = 16)\r\n\r\nNit: The naming ""CheckProfileLock"" for bools can be ambiguous, because it\'s not immediately obvious what a true/false value means (i.e. does this mean ""yes, we checked?"", or ""yes, we checked, and it\'s locked?). Maybe IsProfileLocked?'"
4314,284819508,b'Delete these commented out lines.'
4314,284819583,b'Delete these commented out lines as well'
4314,284820418,b'Super nit: Unindent to match indentation of current scope.'
4314,284820572,b'Nit: Unindent 4 spaces'
4314,284821443,"b'>BackProfileType [](start = 23, length = 15)\r\n\r\nNit: Add a doccomment about what this is'"
4314,284822257,"b'> result = renderButton(); [](start = 15, length = 25)\r\n\r\nSuper nit unindent'"
4314,284822563,"b'Seeing this a bunch throughout the changes - I guess I probably should ask, was this intentionally designed to make the indention here mimic the indentation in the actual UI?\r\n\r\n---\r\nIn reply to: [284822257](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4314#discussion_r284822257) [](ancestors = 284822257)'"
4314,284823390,b'Delete these lines'
4314,284824084,b'Do you know if this was supposed to be uncommented (or deleted?)'
4314,284824473,"b'> // TODO: TROY [](start = 23, length = 14)\r\n\r\nIs it the case that the RenderAsSubProfile section can just be deleted now?'"
7611,403221054,b'Nope. That might mess up an existing AudioSource component and fill it with _my_ sound file. This is intentional'
7611,403221530,b'nit: extra empty line here'
7611,403223675,b'Please add a summary and [the `AddComponentMenu` attribute](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#adding-new-monobehaviour-scripts) here.'
7611,403227009,"b'I tried that, and I still got an error in Unity. So I took the pragma. Now the null init works as well. Go figure ;)'"
7611,403227885,"b'I guess my preference is to simply permanently modify the prefab, rather than having a modifier that adds it. I understand both perspectives though'"
7611,403231125,"b""Summary, okay, but it's already on the prefab, as suggested by @provencher in the Slack channel. You are not going to add this thing to anything - at most you are going to disable it. At least, that was my idea"""
7611,403232500,b'done'
7611,403232585,b'done'
7611,403232722,b'Done. Not quite sure why Unity kept complaining about CS0649 when I initially initialized it to null. Only the pragma made it shut up. Now tried it a second time as per your suggestion and it DOES work. Go figure ;)'
7611,403238069,b'Is there a downside to just updating the prefab to contain all the relevant `NearInteractionTouchableUnityUI` and audioclip components? And leaving them there regardless of if touch is supported? Especially if this script is already being added to the prefab by default'
7611,407229389,"b""You might not always want this, and this way it's easy to disable it."""
8307,471654038,b'This script needs a `Microsoft.MixedReality.Toolkit` namespace '
8307,471656584,b'nit: missing license header\r\n```suggestion\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\xef\xbb\xbfusing System.Collections;\r\n```'
8307,471750046,b'Can this use `Application.isEditor` instead?'
8307,471750905,"b""This feels somewhat like an example script, or at least not an SDK script that's specific to the pulse shader."""
8307,471927742,b'Added namespace Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse\r\n'
8307,471928119,b'Updated to use if(!Application.isEditor)'
8307,471930582,b'Moved to Examples folder.'
8307,474801108,b'nit: doc comments for all public properties \r\n```suggestion\r\n        /// <summary>\r\n        /// Shader parameter name to drive the pulse radius\r\n        /// </summary>\r\n        public string ParamName\r\n```'
8307,481325739,b'We might want to add `FormerlySerializedAs` tags for all these field renames.'
8307,481522358,b'Do we want the `Debug.Log`s?'
8307,481525453,b'Added.'
8307,481525645,b'Removed Debug logs'
8307,471656265,b'nit: missing license header\r\n```suggestion\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\nusing Microsoft.MixedReality.Toolkit.Input;\r\nusing Microsoft.MixedReality.Toolkit.Utilities;\r\n```'
8307,471656805,b'nit:  missing doc comment for the class'
8307,471749882,b'Looks like this script is using tabs for indentation. Please convert to spaces to match the repo.'
8307,471753683,"b'It feels odd to me that this needs to be a global listener but the `OnPointerClicked` assumes the pointer will have a hit point on the mesh. Can this instead be a focused listener on the parent object of the meshes? That way any mesh that gets tapped will have the event propagate up to the parent, and it can gather them all.'"
8307,471754382,"b""Please update all the fields to be `private` with `public` property accessors if needed, to follow [the repo's guidelines on encapsulation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#encapsulation).\r\n\r\nThere are also a couple that appear to use Hungarian notation (like this bool starting with `b`), which isn't a standard we've used in this repo. They should be updated to just the names."""
8307,471927895,b'Added doc comment. Added to existing SurfacePulse.cs as well.'
8307,471928013,b'Updated format to use spaces.'
8307,471928895,b'I am not sure (I am not the original author : ) Is it possible to get the parent object of dynamically created spatial mesh and add a script?'
8307,471930280,b'Update applied to both SurfacePulseOnSelect.cs and SurfacePulse.cs script!'
8307,474170320,"b'I believe `CoreServices.SpatialAwarenessSystem.SpatialAwarenessObjectParent` should give you the parent used for any meshes, right @davidkline-ms?'"
8307,475149252,b'Correct.'
8307,475149432,"b'There may be an object in between the object parent and the meshes, though. that is used to keep track of which observer provided the data.'"
8307,476459252,"b'Thanks @keveleigh @davidkline-ms ! I tried removing the global listener and adding PointerHandler to the parent object of the dynamically generated spatial mesh. Tested on the device and works well. Could you please review the code and see if this is correct use? Pushed this update in **SurfacePulseOnSelect.cs**\r\n\r\n```\r\n            CoreServices.SpatialAwarenessSystem.SpatialAwarenessObjectParent.AddComponent<PointerHandler>();\r\n            CoreServices.SpatialAwarenessSystem.SpatialAwarenessObjectParent.GetComponent<PointerHandler>().OnPointerClicked.AddListener(this.OnPointerClicked);\r\n```\r\n\r\n\r\nFor the example mesh object (this is for in-editor demo), I manually added Pointer Handler and used OnPointerClick event. \r\n![2020-08-25 22_41_13-](https://user-images.githubusercontent.com/13754172/91181919-7a9a6880-e724-11ea-9c74-48ee53dad183.png)\r\n'"
8307,481324723,b'A diff shows almost entirely shared code between this and `SurfacePulse`. Could this inherit from that class and override where needed?'
8307,481525350,b'Merged the feature into the original SurfacePulse.cs and deleted SurfacePulseOnSelect.cs\r\n'
7993,437774181,"b'```suggestion\r\n## Using the RiggedHandVisualizer in your scene\r\nTo enable the use of rigged hand visualization, select the **MixedRealityToolkit** game object in the hierarchy and within the **Input** Configuration Profile navigate to\r\n\r\n**Controllers > Controller Visualization Settings > Global Left Hand Visualizer**  \r\n\r\n```'"
7993,437774676,"b'```suggestion\r\n# Rigged Hand Visualizer [Experimental]\r\n<img src=""../../../../../Documentation/Images/RiggedHandVisualizer/MRTK_RiggedHandVisualizer_Main.png"" width=""600px""  style=""display:inline;"">\r\n```'"
7993,438262210,b' I think our docs validation might be expecting a link to a file given that markdown syntax.\r\n```suggestion\r\n## Example scene\r\nYou can find and example in the **RiggedHandVisualizer** scene under:\r\n**MRTK/Examples/Experimental/RiggedHandVisualizer/Scenes/**\r\n```'
7993,434255941,"b'I have highlighted a couple here but doc comments are useful for public properties, [mrtk coding guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers)'"
7993,434257144,"b'Public properties should be capitalized, also applies to the properties below, [naming guidelines mrtk](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions)'"
7993,434258275,"b""It's best to avoid seemingly magic numbers, it's helpful to store the pre-calculated values in another var with a descriptive name."""
8714,525386295,b'Is this log intentional?'
8714,525403345,b'This file would need to be moved out of the experimental namespace for graduation.'
8714,525418399,b'nope will remove it'
8714,525419277,b'Was thinking of checking in first and then moving in a different PR so as to not obfuscate changes'
8714,527073655,"b""What's the difference between these two dictionaries?"""
8714,527139294,"b'The hand mesh only cares/tracks a subset of joints defined in the Start() function, whereas the skeletonJoints track the positions of all joints received from the event data so it can render one of the tracking cubes. The two remain separated code style-wise in order to make the separation clearer.'"
7606,402485290,b'Since this is cached at the beginning of the method now:\r\n\r\n```suggestion\r\n            if (!(currentPointer is IMixedRealityNearPointer) && currentPointer.Controller.IsRotationAvailable)\r\n```'
7606,402485799,b'Since this is cached at the beginning of the method now:\r\n\r\n```suggestion\r\n            if (currentPointer?.Result?.CurrentPointerTarget == null\r\n                || !ContainsNode(currentPointer.Result.CurrentPointerTarget.transform) || initialFocusedObject != null)\r\n```'
7635,406541239,"b""```suggestion\r\n                // It's above the visible area\r\n```"""
7635,406541267,"b""```suggestion\r\n                // It's below the visible area\r\n```"""
7732,416749842,b'```suggestion\r\n        /// Event that is fired on the target object when the ScrollingObjectCollection is starting motion with velocity.\r\n```'
7732,416763238,b'Curious as to why we still need to listen to global input events. Any idea why we still need to be global input listeners?'
7732,416764042,"b'Would be nice to move this magic number into a variable, we missed this on the first review of the code.'"
7732,416766086,"b""When does this OnInputDown handler occur? I'm curious why the scrollingobjectcollection needs to handle both input down AND pointer events, seems like it should only need to handle one. Perhaps this was a mistake / could be improved decision in the initial experimental PR?\r\n"""
7732,435310635,b'This is only temporary until scroll has its own interaction collider to capture pointer and source events ( even when all child button colliders are disabled for being out of sight ). '
7732,435347748,"b""Originally the component was designed to handle events from its interactable children (user is not able to engage on scroll drag when touching empty space). This PR doesn't fix that issue yet."""
8091,446996263,b'nit: because I just read this https://docs.unity3d.com/ScriptReference/Component.TryGetComponent.html - we could use:\r\nif (!TryGetComponent(scrollingBackground))'
8154,451806242,b'Is the units here meters?'
8154,451808350,b'extra code?'
8154,452131188,"b'Adding "" , in meters,"".'"
8154,452146332,b'removed'
8154,452231317,"b""i'm wondering if it would make sense to have a AddItem with a list of gameobjects as well - just so if several elemetns were added (or removed) we wouldn't call Reset all the time. """
8154,452271960,b'I think it would Bernie. This method is only covering a very unlikely situation of objects being added on runtime with interactions happening at the same time.... so yeah... adding a collection of objects make sense'
8154,452274957,"b""> Did you think about splitting releaseThresholdLeftRight and TopBottom like you did with back and front? would be more consistent but not sure if it's needed. \r\n\r\nYeah I was unsure, as at least in the shell top and bottom always match, same as left and right. But front is how the click happens so this will always be different from back. But we could separate them.\r\n\r\n> Also what we could consider for future work (can be after graduation) is to expose these thresholds as planes so users can easier visualize them in the editor when setting them up - have a look at the debug planes in PressableButton. if you think it would make sense we could ask a task for that for later\r\n\r\nSecond that. This one was on my list as well"""
8209,461026367,b'nit: would use word row instead of line'
8209,461026483,b'nit: would use word row instead of line'
8209,461028498,"b""wondering if we should put this into a method and just pass -cellWidth (and in case of maxY pass CellHeight) into it. if i see correctly apart from that it's the same logic in minX and maxY"""
8209,461035487,b'can you add a comment what the callback does in this case? '
8209,461644000,b'I think this needs a FormerlySerializedAs attribute to that previous versions will work (i.e. across upgrades)'
8209,461644688,"b""Actually since this is an experimental area I suppose it's not necessary, but it's fairly light weight and would probably help a consumer :)"""
8209,461646239,"b'```suggestion\r\n                int partiallyFilledTier = (SafeModulo(NodeList.Count, ItemsPerTier) != 0) ? 1 : 0;\r\n```'"
8209,461647491,"b""Or maybe some other better name for it - remainder is a bit misleading because we collapse non zero to zero here (i.e. non zero -> 1, zero -> 0). Really this is trying to find the number of rows at the end that aren't complete because they don't fill an entire thing.\r\n\r\nI think that you could probably do the same thing here by just doing a Ceil on SaveDivision"""
8209,461647649,b'Same comment on naming here.'
8209,461649297,b'Can you leave a comment on why (either here or in the code) the Abs() is required in the X case but not the Y case?'
8209,461721622,"b'It seems like itemsPerTier should never be equal to or less than zero, do we want to Debug.Assert instead?'"
8209,462449922,"b'>private [](start = 8, length = 7)\r\n\r\nSuper nit: I think the Safe* functions can all be static right?'"
8209,462454233,"b'>tiers [](start = 36, length = 5)\r\n\r\nWould it be possible to have something define the words Tier, Page, and Index?\r\n\r\nThese are fairly important in understanding the mechanics of how scrolling works (as seen by ScrollViewTests which do tier/page/index navigation).\r\n\r\nI could write up some ASCII art if this would help :)'"
8209,462531890,"b""Nice one. couldn't find a good name for this :)"""
8209,462556571,b'And Ceil do the job'
8209,462657384,b'Adding this to next graduation PR'
8230,463101960,b'```suggestion\r\n        /// Checks if the engaged joint has released the scrollable list\r\n```'
8380,476935045,"b'```suggestion\r\n                            // Precalculate where the velocity falloff would land our scrollContainer, then round it to the nearest cell so it feels natural\r\n```'"
8380,476935490,b'What is 0.9275f? Seems like magic number.'
8380,476935788,b'I wonder if someday we will use the elastics system for this ;-)'
8380,476935998,b'Lots of magic numbers here. Would be good to use a variable.'
8380,476936162,b'Here and below I see more magic numbers.'
8380,478262935,"b'>[ExecuteAlways] [](start = 4, length = 15)\r\n\r\ni assume this is to have the right layout already displayed in edit mode? can you add a comment :)'"
8380,478264182,"b'>private float frontTouchDistance = 0.005f; [](start = 8, length = 42)\r\n\r\nshould this be configurable from code as well?'"
8380,478276153,"b'>Debug.Assert(cellsPerTier > 0); [](start = 16, length = 31)\r\n\r\ni would move the assert into set - also is this later on going to be used for divisions? if so should we just clamp this to 1? \r\nnit: add message ""CellsPerTier should have positive non zero value""'"
8380,478276904,"b'>Debug.Assert(cellWidth > 0, ""Cell width should have a positive non zero value""); [](start = 16, length = 80)\r\n\r\nsame as before - should we move this into set? also clamp the value if we\'re using it for divison later on?'"
8380,478277233,"b'>Debug.Assert(cellHeight > 0, ""Cell height should have a positive non zero value""); [](start = 16, length = 82)\r\n\r\nsee CellWidth'"
8380,478277350,"b'>Debug.Assert(cellDepth > 0, ""Cell depth should have a positive non zero value""); [](start = 16, length = 80)\r\n\r\nsee CellWidth'"
8380,478279725,"b""doesn't this evaluate the null check in the front outside your condition and then cast the bool to float? :D \r\n\r\nfor the sake of readability can we add some parenthesis\r\n\r\nreturn (contentMaxBounds == null || contentMaxBounds.size.y <= 0) ? 0 :\n                    Mathf.Max(0, SafeDivisionFloat(contentMaxBounds.size.y, transform.lossyScale.y) - TiersPerPage * CellHeight);"""
8380,478280703,"b'same here: return (contentMaxBounds == null || contentMaxBounds.size.y) <= 0 ? 0 :\n                    Mathf.Max(0, SafeDivisionFloat(contentMaxBounds.size.y, transform.lossyScale.y) - TiersPerPage * CellHeight);'"
8380,478282233,"b'>private float scrollingBackgroundDepth = 0.001f; [](start = 8, length = 48)\r\n\r\nis this a number users might want to modify?'"
8380,478283380,"b""> return clipBox; [](start = 74, length = 16)\r\n\r\ncan be removed. you're returning after the if anyways :)"""
8380,478287977,b'this code seems identical except the clippingBounds.size set - you could just set the size for each case and then do the other calculations afterwards to avoid code duplication'
8380,478288951,"b'> &&  [](start = 112, length = 4)\r\n\r\nnit: add line break here - makes it easier to read  '"
8380,478294288,b'we could try adding elasticsmanager into scrollingobject collection - Should we add an issue so someone can have a look for after graduating? \r\n\r\n---\r\nIn reply to: [476935788](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8380#discussion_r476935788) [](ancestors = 476935788)'
8380,478445734,b'Addressed'
8380,478447718,"b'I have updated the description, as it is used kind of like a plane, so no need to configure this.'"
8380,478487837,"b""ahhh! i didn't know that exists :D """
8380,478489320,b'me neither haha'
8430,483124759,b'```suggestion\r\n        // Workaround for serializing mask enabled as the editor does not handle property setters\r\n```'
8430,483134761,"b""Could you actually add a little more on what the workaround is? Or maybe it's actually clear to everyone else and not me, in which case I can follow up offline with people who know what's up"""
8430,483136989,b'```suggestion\r\n        // Setting up the initial transform values for the scrolling interaction collider and near touchable.\r\n```'
8430,483141176,"b'Does isRestoring actually mean ""isRestoringVisibility""? Not suggesting a rename, just trying to understand word -> concept mappings'"
8430,483141251,b'```suggestion\r\n            List<Renderer> clippedRenderers = ClipBox.GetRenderersCopy().ToList();\r\n```'
8430,483142644,b'```suggestion\r\n            if (!isRestoring)\r\n```'
8430,483148398,"b""Can you add a comment for why this no-ops if currentPointer is null (i.e. it has to do with the event ordering between OnPointerDown and OnTouchStarted). It's the difference between near/far interactions right?"""
8487,485138528,b'Latest changes approved on #8430'
8428,483149043,"b'Please make sure to [add summary comments ](https://microsoft.github.io/MixedRealityToolkit-Unity/version/releases/2.3.0/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers) to all public classes, methods, and fields. \r\n\r\nFrom our guidelines: ""All public classes, structs, enums, functions, properties, fields posted to the MRTK should be described as to its purpose and use...This ensures documentation is properly generated and disseminated for all all classes, methods, and properties.""'"
8428,483149774,"b'Please also comment this public method, as mentioned above.'"
8428,483150523,"b'What does ""number provided"" refer to here?'"
8428,483151395,"b'This seems to be called on start only, meaning it will adjust the slider value to the middle of the slider track on start. What if the user wants the slider value to start at say, 0.1 on a slider ranging from 0 to 1, with 10 steps? Is there a way to do this? I would expect if I set slidervalue in editor to 0.1, that when I hit play, it would stay at 0.1.'"
8428,483643254,b'Please use [PascalCasing](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/capitalization-conventions) on this method.'
8428,483643870,b'Same as above with Method name.'
8428,485191248,b'What is the behavior when number of steps is 0? Would be good to explain in the comment.'
8428,501977362,"b'Do we want `override` here, was was there a need for this to be `new`?'"
8428,501978157,"b""Oh possibly because the underlying method isn't virtual."""
8428,501980374,"b'For clarity and future extensibility, could you make any method you needed to `new` here `protected virtual` in the underlying `PinchSlider` implementation? Then these could be `protected override` instead of `new`. Also helps with matching the [access modifier guidance](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers).'"
8428,502006416,"b""Since this has been open for a while, I didn't want to block on my late review, so I just pushed the changes."""
8119,448633265,b'```suggestion\r\n\r\n```'
8119,448633558,b'Following [naming conventions](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions) please make private fields camelCase '
8119,448633714,b'```suggestion\r\n            if (SliderValue != null)\r\n```'
8119,448634195,"b'What if the slider is aligned vertically? I think in that case, this logic will not work. Try maybe to use the axis of the underlying pinch slider?'"
8119,448653364,"b'This was my quick and dirty 2D math, and I could use some engineering help to convert this to 3D math and / or use the axis of the pinch slider.'"
8119,460224728,"b'Pushed updates to this script, including coding guidelines updates'"
8119,463991997,"b""I understand this is experimental so this may or may not be a nit. We haven't been including labels in the slider controls themselves. For example, if you look at the **HandInteractionExamples** scene you'll see 3 `PinchSlider` instances. While there are labels for each slider, they are not part of the slider prefab. They are actually stand-alone labels with `ShowSliderValue` scripts attached to monitor changes to the `PinchSlider`. This approach allows more flexible UI design. For example, the **Platonic** object in the scene has a `SliderChangeColor` script attached to it, allowing 3 sliders to change its color."""
8119,463992228,"b""Again, I realize this is marked as Experimental. I don't know what the minimum bar is for an experimental contribution, but none of the inspector fields at the top of this script are exposed as public properties. At a minimum I would like to see public properties for them. Ideally, I would like to see any changes made to these properties at runtime correctly reflected in the scene."""
8303,470835094,"b'Do you know what the calling mechanics are of EnsureNewConstraintsInitialized() - i.e. potentially on every single frame update?\r\n\r\nBecause if so, then the costs over time will probably not be that good - we\'ll end up doing component find/enumerate and then run a non-hashed array find on every single frame.\r\n\r\nI think that we had a similar situation with some tap to place or solver stuff, where instead the constraints, when they were added to an object, would look for the SolverManager or something and be like ""yo, I""m here now"". You\'d have to also make sure that the SolverManager/ConstraintManager would need to do a one-time enumeration when it started up, so that it could catch cases where individual constraints/solvers were added before the manager got added.'"
8593,492871192,"b'```suggestion\r\n        /// If this flag is enabled, only the selected constraint list will be applied.\r\n```'"
8593,492873187,"b'```suggestion\r\n        [Tooltip(""Per default, constraint manager will apply all to this gameobject attached constraint components."" +\r\n```'"
8593,492873514,"b'```suggestion\r\n        /// Per default, constraint manager will apply all to this gameobject attached constraint components automatically.\r\n```'"
8203,459798132,"b'Since this might have been overridden in custom scripts, can it be left around with the obsolete tag (and recommendation to update the parameter type), then call right into the new `MixedRealityTransform`-based method?'"
8203,459802465,"b""Can this be left around with an obsolete tag stating that it wasn't used and will be removed in a future release? That way we don't break any existing code that references this public property. Can just be an auto-property so we don't need an explicit backing field."""
8139,449142594,b'It looks like `OnTapDown` is public. Can you call `.Invoke()` on that directly instead of wrapping it in a new public method?'
8139,449143399,b'```suggestion\r\n\r\n```'
8385,477240084,"b'Hi @peader , Thanks for contributing to MRTK and also adding a test for your proposal.\r\nI am thinking how could we handle a scenario where other hit parent children also have the EyeTrackingTarget component attached to?'"
8385,478634902,"b'Hi @vaoliva , could you give me an example use case for such a feature? '"
8052,440303559,"b""Nit: The comment makes it seem like this is specifically for far manip, but it's also near as well."""
8052,442356540,"b""Happy to fix this Nit. Are there other issues on this one? I was hoping some folks like perhaps @julenka could help test this proposed change. Specifically I've noticed that the holograms don't always appear to attach to my hand where I expect them to. Especially if the holograms are far below my head (like on the ground), I will see a significant offset between the hologram and my hand. But I'm pretty sure this was actually there before and not due to my proposed change. I just want to make sure that's the case, and if so I can open a separate issue on that."""
8192,457773404,"b""Although the rest of the class seems to mostly ignore this, it looks like `IsNearManipulation()` gets cached when manipulation starts:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/c7ce0c49a7ecac2364f0b3ecc25cda34882b7470/Assets/MRTK/SDK/Features/Input/Handlers/ObjectManipulator.cs#L647-L650\r\n\r\nI'm not sure if we'd run into out of sync conditions if we switch to using that, but it feels more performant than iterating through all the pointers every time this is called. Any thoughts on the feasibility using this cached value from the start of a manipulation?"""
8192,457806950,"b""That's a great point Kurtis.\r\n\r\nI'm not sure we ever switch interaction modes (near vs far) halfway through an interaction. @julenka do you have insight on this?"""
8192,457831995,"b""It's a good thing to think about, but in this case I'm not too worried. Thanks for looking at this carefully Kurtis!"""
8204,459668836,"b'Renaming a public property is a breaking change that would need to be documented in the release notes.\r\n\r\nIt would also be useful to keep the public `SmoothingActive` included, mark it as Obsolete, and point to  `SmoothingFar`.  \r\n'"
8200,459792153,"b'Will only continue simulating the spring if the user is not actively manipulating the object, if the elastic is non-null, if that particular type of elastic is enabled, and if the current elastic velocity is above the threshold.'"
8200,459792504,"b'Smoothing is not applied at all if elastic is enabled. This is because elastic essentially serves the same purpose as smoothing, and applying both may result in unwanted sluggishness when interacting. I am open to discussion and input on this decision!'"
8200,460182420,b'Nit: I think for these cases const might be more appropriate:\r\n\r\nhttps://lassiautio.com/2018/01/21/constant-or-static-readonly/\r\n'
8200,460185463,"b""Do you have a sense of the impact/cost of evaluatijng the magnitude or each of these things on an ongoing/passive basis? i.e. if the scene starts, I'm assuming this doesn't do anything because translationElastic might be nul at this point, but after manipulation has happened, I assume this will run on every update loop."""
8200,460273980,"b'Good point. I put the `HasFlag` check first, because if the user has not selected elastic to be enabled, this check should short-circuit and the magnitude should never be evaluated.\r\n\r\nThe checks are ordered from ""least expensive"" to ""most expensive"". The magnitude will never be evaluated if the elastic is not enabled.'"
8200,460344766,b'Now using `const`.'
8200,460949511,"b""why are we initializing on awake if we're already doing initialize on manipulation start (pointer down). is this in case we add the component during runtime while already interacting with the object? If so would we want to support plugging in configurations / enabling elastics while manipulating as well? """
8204,462516308,b'Thank you for the notes @CDiaz-MS. I recently pushed a new commit that reintroduced the SmoothingActive property and marked it obsolete with a note about the new properties. I also updated ObjectManipulator documentation with lots of detail about the new properties and a note about the deprecated one.'
8204,462964299,"b""i'm wondering if we should change to have this as a enum flag instead of the separate bools - we already have the enum for enabling interaction and it could be reused to set the forces behavior and the smoothing - would be cleaner than keeping all those bools around. What do you think?"""
8204,463066834,"b""jared pointed out this will be a breaking change - so let's not do this for now :)"""
8204,463279519,"b""Super nit: Bring this into if (axis.IsValidVector()) because it's not needed unless IsValidVector ends up being true."""
8204,463298937,"b'Though these lines show changed, they\'re only ""changed"" because I rearranged the call order somewhat to clarify operations. These are original ObjectManipulator lines of code. So while I agree with the nit (and do realize it\'s just a nit), hopefully we can maybe address it after the PR is closed. :)'"
8204,463698627,"b'I just fixed this, closing this out.'"
8353,475831776,b'```suggestion\r\n                if (elasticsManager != null)\r\n```'
8353,475831845,b'```suggestion\r\n            if (elasticsManager != null)\r\n```'
8353,475831898,b'```suggestion\r\n            if (elasticsManager != null)\r\n```'
8353,475831956,"b'Also yey, this looks cleaner'"
8593,492876386,"b'```suggestion\r\n        /// Enable or disable constraint support of this component. When enabled, transform\r\n```'"
8533,487329041,b'Do we need to change the default press and release distance for the radial prefab and not just the radial set?'
8533,487329793,b'Ah it looks like the Radial prefab just has an Interactable attached and not an Interactable and Pressable button like the buttons in the Radial Set prefab. '
7732,416766996,"b'It could be useful to explain here, and elsewhere, why we reset the input tracking states when the event data is used.'"
8158,453073360,"b'```suggestion\r\n                        Debug.LogWarning($""On GameObject {gameObject.name}, value {value} for property setter CurrentDimension cannot be less than 0 and cannot be greater than or equal to Dimensions={NumOfDimensions}."");\r\n```'"
8487,485137443,b'Change approved on #8091'
8682,498572125,"b'Just want to make sure.... the intent here is to force the trigger, correct?'"
8682,500601411,"b'Yes, the intent here is to ignore the CanInteract check. Please take a look at the new comment above that line and let me know if things are clearer now.'"
8386,482189443,b'This seems to have the old license for MRTK-Quest.\r\nCan you update it to the new one?\r\nhttps://github.com/provencher/MRTK-Quest/blob/master/License.txt'
8386,482613442,b'Looks like one License.txt was updated but this one still has the old verbiage'
8386,483145747,"b'Will these new assets also be used for the teleportation pointer in VR also? I assume yes, which is great!'"
7703,413958276,"b'Small question on the toggle features panel: does it make sense for the one we use in our example scene to be the SDK prefab? It feels very specific to our scenario. It might be interesting to have a generic one, with ours being an example prefab variant or something.'"
7712,428861946,b'To match the file name:\r\n\r\n```suggestion\r\n  m_Name: ConicalGrabPointer\r\n```'
7712,428361651,"b""Would it be possible to use a different / more descriptive name than `Hololens2ShellGrabPointer`? I've seen in the past that some people were confused about `HoloLens2PressableButton` because they thought it could _only_ be used on HL2, when in reality it simply matches the HL2 shell (which itself doesn't tell me much about how this is different from the default). Could we use something like `ConicalGrabPointer` or `ConeBasedGrabPointer`? @julenka """
8965,527261526,"b""I don't see the corresponding prefab for this meta in this PR. Should it be added or this removed?"""
8965,527286035,"b'need to refactor out a bunch of stuff that popped up from the version diffs, processing now'"
7550,404224995,b'Does registering with no parameters register for bubble up? I noticed that you explicitly need to specify propagation phase in unregister but not in register.'
7550,404225360,b'If you want to mention the other option (which I think is optional) it would be good to also give an example.'
7550,404226191,b'Why are you exiting early if the event is sent directly to this object? Seems counter-intuitive so an explanation may help.'
7550,404310379,"b""default parameter for register is PropagationPhase.BubbleUp - i didn't realize there's no default for unregister - we probably would want to add the same default or remove default entirely. """
7550,404809324,b'Yeah... it makes sense. changing that.'
7693,411762862,"b'The one issue I see with removing this check is that we end up calculating the distance of a point to each of the scale handlers, whereas before we could potentially avoid this by only calculating the distance if it was near the bounding box object. However, since we don\'t actually know the scale of the object that is being manipulated, determining when the pointer is ""near"" the object becomes kind of tricky. There shouldn\'t be a large performance impact unless there are a lot of objects with their handlers visible at all the same time.'"
7693,412300770,"b""there's two things about this:\r\n1. we're trying to get away from bounding box and use bounds control instead - fixes made in boundingbox should also be made in boundscontrol (in non critical cases I would even recommend doing the changes only in bounds control to avoid having to fix them in two spots)\r\n2. I'm very certain that this will break a lot of the boundscontrol behavior on reloading visuals on config changes - i don't have all these changes published yet but this definitely will have consequences on all the rig reloading :-/ """
7693,412370744,"b""I'll look into ways to avoid changing the behavior of the corners variable then"""
7693,413160542,"b""so had a second look now and I'm not sure I understand why you had to change to the visuals here instead of sticking to the handle object itself? The handle object is a parent of the visual, so it should be fine to use it's transforms and it's also making these checks less error prone as you're comparing the object and not just some arbitrary position / rotation values """
7693,413161177,b'resolving this as we had a offline chat about this - boundscontrol behavior will be checked separately'
7693,413164915,b'if i remember correctly a performance issue was why troy put this in place - bounding box is heavily used and there can be a lot of handles accumulated in a scene - so removing this check might hit us at a later point '
7693,413165392,"b""can you verify that this doesn't have any performance implications on scenes with many bounding box / bounds control added ?"""
7693,413192825,"b'The main reason for this change was for testing purposes, as the only public way to access handlers was through the ScaleCorners and RotateMidpoints objects, which refer to the corners and balls objects. I can rework ScaleCorners and RotateMidpoints to directly refer to the handler objects themselves though'"
7693,413211755,b'With 128~ bounding boxes in the scene I go from 29 to around 24 fps\r\n\r\nWith 65~ ish bounding boxes I go from 35-37 fps to around 33\r\n\r\nWith 32~ ish bounding boxes its 102 with the check and 99 without\r\n\r\n'
7693,413907817,b'can you explain why this is now squared length and triple medium proximity  added? '
7693,413909844,"b""i might be missing some important detail here: I can't spot you're using this anywhere in your fix. why are you adding those visuals and also exposing them to public API? If this is because of the tests you shouldn't add things to the public API of a sdk component just for test reasons - you can access these gameobjects as well by their name for testing purposes :)"""
7693,413915573,b'is targetbounds center relative to the transform of the component? or is this returning world space coordinates? '
5002,296315026,"b""> if (cumulativeDelta.magnitude > manipulationStartThreshold) [](start = 31, length = 60)\r\n\r\nDo we expect that there should ever be a case where you don't get manipulated started events, just hold start -> hold end -> navigation start -> navigation update -> navigation complete?\r\n\r\nI'm curious because assuming there's only a hold going on and no navigation, it looks like it's possible that this would start navigation, and then on the next interaction update because a navigation is in progress, it will never start the manipulation. Or is it the case that, cumulativeDelta is only ever updated AFTER a hold has already been processed?"""
5002,296318642,"b""Also when we're done with this PR, it might be worth updating the input docs to specify the expected order (basically copy paste what you had in the issue into the docs)"""
5002,296319225,"b""Yeah, trying this out (pulling this down locally) I have to hold for a fairly significant amount of time to trigger the manipulation event - if I don't wait a long time, it only ever goes into navigation mode.\r\n\r\n---\r\nIn reply to: [296315026](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5002#discussion_r296315026) [](ancestors = 296315026)"""
4993,296321662,"b""Aside from the Custom rendering mode, several of these material BaseStyles end up having the same line of code/configuration in all of these options (i.e. 0.0f for this and depthOffsetUnitsName, depthTestName for LessEqual, and so on.\r\n\r\nI can see value in going either way (i.e. having it duplicated explicitly shows for each configuration what is expected, having the common stuff taken out helps to highlight the deltas between each configuration)\r\n\r\nI just wanted to ask about the intent and check that that was the goal, cause if so that's all good."""
4993,296321815,"b""I only ask because usually i see copy+paste = bad, but in some cases it's fine if the goal is being explicit about configuration."""
4993,296323173,"b'>SetFloatProperty [](start = 30, length = 16)\r\n\r\nNit: It might be worth adding a doccomment on this function, if only because it seems to be doing more than just setting a float property (i.e. also optionally enabling the keyword based on the property value itself)'"
4993,296323575,"b""I see that this was taken from the existing standard shader... I guess it's up to you here :)\r\n\r\n---\r\nIn reply to: [296323173](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4993#discussion_r296323173) [](ancestors = 296323173)"""
4993,296323880,"b'>A custom shader inspector for the ""Mixed Reality Toolkit/Wireframe"" shader. [](start = 8, length = 75)\r\n\r\nI think this was some copy pasta from the wireframe shader -maybe something like ""A base shader inspector for other MRTK shaders""?'"
4993,296323990,b'Nit: Delete commented out line'
4993,296324706,"b""It looks like this + the initialized state are also common between the two current shaders - if the goal is to make the base one a common set of stuff, maybe this would be worth moving in there as well. If your thoughts are that this might not be something interesting to all subclasses, then it's fine to also keep out. Really just trying to understand the standards/thoughts that go into what is being made common."""
4993,296325026,"b""> // TODO: Merge this out? with StandardShaderGUI [](start = 7, length = 48)\r\n\r\nNit: Avoid having dangling TODOs that don't have more background/value/stuff.\r\n\r\nIf you don't see any value in merging this and don't think it will ever matter just get rid of the TODO. If there is value it might be worth just doing now."""
4993,296325588,"b'>""Legacy Shaders/ [](start = 62, length = 16)\r\n\r\nNit: Consider moving some of the shared string definitions to the base class, so that if we ever need to change this (however unlikely) we can reduce the amount of copy paste/chance for error then.'"
4993,296327405,"b'More general question but, is is there anything weird with having unapired EndChangeCheck()s (i.e. one begin, multiple ends?) '"
5018,296404534,"b'>/Julia/TestLaunchURIAsync.unity [](start = 16, length = 31)\r\n\r\nI think that this snuck in (probably also want to revert the QualitySetting.asset changes in here as well)'"
5018,296405679,"b'>TextChanged [](start = 20, length = 11)\r\n\r\nThis aspect of this file is more than just a show/hide wrapper for the TouchScreenKeyboard - i.e. at this point, it\'s no longer just a workaround for a buggy underlying API - this actually adds new features, which means that even once Unity fixes the underlying buggy API technically speaking, this will not be deletable at that point.\r\n\r\nIf there is significant ask/value to this, then this is fine, just note that this is sort of a ""hidden"" feature that is sneaking in with this change.'"
5018,296405767,"b""I guess technically since it's in experimental we could delete it then, I just wanted to call this out because it isn't mentioned in the PR description.\r\n\r\n---\r\nIn reply to: [296405679](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5018#discussion_r296405679) [](ancestors = 296405679)"""
5018,296405902,"b'>private [](start = 4, length = 7)\r\n\r\nNit: Fix indentation (four more spaces)'"
5018,296406032,"b"">showing [](start = 12, length = 7)\r\n\r\nSuper nit: Order (hidding, hidden, showing (or showing, hiding, hidden). It's currently somewhat random"""
5018,296406281,b'Nit: Indentation needs four more spaces'
5018,296406332,"b'> UnityEngine.WSA.Application.InvokeOnUIThread(() => inputPane?.TryHide(), false); [](start = 7, length = 81)\r\n\r\nNit: Indentation needs four more spaces'"
5018,296406649,"b'>if !UNITY_EDITOR && UNITY_WSA [](start = 1, length = 29)\r\n\r\nShould we have an else clause that will handle the iPhone/Android cases (i.e. I assume Open still works on those)\r\n\r\n[https://docs.unity3d.com/ScriptReference/TouchScreenKeyboard.html](https://docs.unity3d.com/ScriptReference/TouchScreenKeyboard.html)'"
5018,296406757,"b'Or wait, nevermind, this class explicitly calls out that this is WMR only as it works around a bug that is specific to those systems.\r\n\r\n---\r\nIn reply to: [296406649](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5018#discussion_r296406649) [](ancestors = 296406649)'"
5018,296408379,"b'Or just update the PR description + comments on the code to mention this as well, either/or is fine by me.'"
5026,296777833,"b""Also noticed this, but I think that this is only used in a single location and it look like:\r\n\r\nMixedRealityToolkit.SDK/Features/Utilities/Solvers/ConstantViewSize.cs:                float scale = Mathf.Clamp(fovScalar * Mathf.Pow(distance, ScalePower), minScale, maxScale);\r\n\r\nWhich means, AFAICT, that it just takes distances, does a distance^1, which basically ends up doing nothing.\r\n\r\nSince we're already in here, it might be worth cleaning that up (deleting it)"""
5026,296779697,"b""I *think* that this isn't breaking because of how Unity encodes the enum values (as ints) in the serialized files, so I think this should be fine.\r\n\r\nNote that this is misspelled however:\r\n\r\nOrientionMode -> OrientationMode"""
5026,296780090,"b'Now that this is public (and could be chosen/set at runtime), could you copy the comments from the orientationMode member (i.e. the ones that say what each mode is) so that the enum values here have it as well? Primarily this would be helpful for the generated docs and also for folks using autocomplete.'"
5026,296782510,"b""I think in other places we'll usually still keep these private, so that:\r\n\r\n1) In the future we can change the way we store these values (i.e. the way they are serialized) without it being a breaking change to sub-classes.\r\n2) We already have an external exposure (both to subclasses and consumers) though the public getters/setters, so folks should be able to get the data they need.\r\n\r\nOr, is this being done because if it's private, if we subclass it, the subclass's inspectors won't show those private parameters?"""
5030,296787620,"b""(Need to add new component with new namespace.)\r\n\r\nIs that a TODO for us, or is that an instruction to the user? I'm not really sure what to do with that text."""
5022,296788805,b'Super nit: Add a newline after this line (to be consistent with the ones above).\r\n\r\nI think same thing for the thingies down below.'
5022,296790104,"b""As long as we're adding this new stuff, it might be worth calling out explicitly that this will return a cached value, and that if the input system is ever torn down or destroyed, this would still technically return that object (until the InvalidateReferences() thing is called).\r\n\r\nIt might be worth either having:\r\n\r\n1) Some doccomment remark to the class saying that this is the general behavior of the class.\r\n2) Having a per-function remark (this increases copy paste, but at the same time increases the chances that folks will actually read it when they're doing autocomplete stuff)"""
5002,296794479,"b'Looks great, thanks!'"
5002,296795239,"b""So here's a really dumb question from me, but looking at how cumulativeDelta is updated:\r\n\r\ncumulativeDelta += currentPosition - lastPosition;\r\n\r\nIt seems like it would be possible to actually move your hand back into a position such that the cumulative delta ends up being 0,0,0 again, which would in theory start the hold here.\r\n\r\nIs this not the case (i.e. is there some abs() going on elsewhere?)\r\n\r\n"""
4775,296814508,b'Time is always a tricky thing - it would be helpful to know what the units are - i.e. are these milliseconds since epoch? Milliseconds since player start?'
4775,296815072,"b'It would also be helpful to add some clarification here about the units - i.e. the comments say ""size of input recording buffer"" but the variable name is ""time limit"", which is a bit add odds with each other (i.e. maybe it\'s size in seconds? or really, duration, in seconds? Or minutes, or milliseconds, etc)'"
4775,296816303,"b""I haven't read on quite yet, but looking at this function and the ones above it, it almost seems like this is an implementation detail of how SaveInputAnimation(directory) works. Am I reading this correctly in that, in there were only a single overload (SaveInputAnimatino(filename, directory)), GenerateOutputFilename wouldn't be needed? """
4775,296816429,b'```suggestion\r\n        /// True if input is being recorded.\r\n```'
4775,296817087,b'Does this variable and the one below it have any effect after StartRecording has been called? Or is the contract that these only affect the NEXT invocation of StartRecording?'
4775,296819442,b'Nit: What happens here if we just null out curves (i.e. no need to allocate for what is an error case right?)'
4775,296823073,"b""Nit: Add a comment about what the threshold is (it's a squared magnitude thing)"""
4775,296824334,b'Delete commented line of code'
4775,296824937,b'If you have a pointer to the how-to aspect of this (i.e. a link or any other description) that would be helpful - otherwise for future generations this might just be an immediate dead end (i.e. no way of knowing how to take action on this TODO)'
4775,296825628,"b""I'm new to this but can you show me where the lerping is occuring here? I would have expected to see some sort of lerp call (or some non-zero keyframe params or something that might be like a lerp)"""
4775,296825832,"b'Or is it just that, the lerp occurs over time to the specified value'"
4775,296828682,b'Nit: Might be worth adding what this returns (I think the index into the animation curve)\r\n\r\nSame for the other things down below.'
4775,296830131,b'Is there a measureable difference in the perf of a shift vs simple divide by 2?'
4775,296833236,"b""Is this function still used? Doing a Ctrl+F on this page doesn't find anything"""
4775,296834232,"b'This function is basically just a Remove and then Add.\r\nIn order to reduce code duplication, consider just doing:\r\n\r\nInputAnimationMarker marker = markers[index];\r\nRemoveMarker(index);\r\nAddMarker(marker);'"
4775,296834418,"b'Plus that way if you ever get an off by one error (especially dealing with that new index + 1 business) assuming Add/Remove works, then SetMarkerTime will always work.'"
4775,296837049,"b""Nit: It might be worth having 1.0e6f as a constant (since it's being used elsewhere where binary data is involved). Otherwise, it's a somewhat magic number that would possibly be easy to miss by someone else making a change in the future."""
4775,296838201,"b""Is there any way that we can write a version or something to this as well, so that when making changes to this in the future, we know that when we read things, we shouldn't try to read an incompatible file?\r\n\r\nI'm a bit concerned about future changes where, say we actually do want to start writing non zero values for the following fields for bool values:\r\n\r\nkeys[i].inTangent = 0.0f;\r\nkeys[i].outTangent = 0.0f;\r\nkeys[i].inWeight = 0.0f;\r\n\r\nIf someone had their own recorded files, our new reader would try to read in those values but since they were never written out with the older format, things would probably get corrupted pretty quickly."""
4775,296839345,b'Similar question that @Troy-Ferrell asked @davidkline-ms earlier'
4775,296842874,"b""Do you know if it's actually possible to be pinching if not tracked?"""
4858,296942362,"b""Was this change to allow unsafe code intentional (and if so, what was the reason?) The rest of our asmdefs today don't have this, so I'm curious what motivated this change."""
4858,296942756,"b""These asset files seem to have a bunch of changes that don't seem to be that related to these asmdef renames - might be worth seeing if they're needed, and if so, putting them in separately to keep each PR scoped."""
5034,296944577,"b'>Extensions.SceneTransitions [](start = 41, length = 27)\r\n\r\nSince these are general UX controls, do you think they should remain in the SceneTransistions/Extensions? Or where the other thingies should go.'"
5034,296945489,"b""@julenka question for you on what you think about experimental features as they relate to new UI/UX controls.\r\n\r\nIn particular, I'm kinda curious what your thoughts on if new features NEED tests and documentation before they graduate out of experimental.\r\n\r\nGiven how little time we have before we snap and how busy everyone else is, I want to avoid us adding new features that don't have tests and documentation collateral, where we need to support that API surface forever going forward. If we had tests/docs going in at the same time (or if this is literally the next thing that's going to be worked on, then I guess it's not a huge deal)"""
5034,296945790,"b""If you're not doing inspector stuff, should this actually be like:\r\n\r\nhttps://docs.unity3d.com/ScriptReference/SceneManagement.EditorSceneManager.MarkSceneDirty.html\r\n\r\nLooking at the docs for SetDirty it seems to suggest not using it (and instead use RecordUndo, which is not relevant for this, or MarkSceneDirty, depending on what got dirty)"""
5034,296946949,"b""It might be worth checking that the state is currently closed before running this right? \r\n\r\nNo need to do any await/running if it's already open (or transition from opening to open)"""
5034,296947486,"b""It might be worth documenting that OpenAsync and CloseAsync are not thread-safe and one should be fully-awaited before the other one is called. Otherwise it would be too easy to get into an inconsistent state (i.e. if you call open and then close but don't await either, it's possible that you'll end up in an Open state even when the gameObject is set to not active).\r\n\r\nThis does put the burden on the caller, which maybe is fine, but if we do that it should be documented."""
5034,296947649,"b'Nit: Missing {} here, and also 83-84'"
5034,296947836,b'```suggestion\r\n        /// Loading progress value from 0 (just started) to 1 (complete)\r\n```'
5034,296948358,b'Nit: inheritdoc here and below on the public members that implement IProgressIndicator'
5034,296949079,"b""I think that this might allocate a new string on every single Update() - it might be worth caching the last value IF it's still the same, or otherwise doing some work to pre-allocate the strings that could render.\r\n\r\n@Cameron-Micka had similar things with the visual profiler."""
5034,296964974,"b'Good to know, thanks!'"
5034,296965082,"b""Nit: Is there any way to validate that these things are correct (i.e. in OpenAsync or CloseAsync, could they Debug.Warn or something if they're being misused?)"""
5034,296965270,b'Nit: Inheritdoc for all the interface functions/properties here as well.'
5034,296965416,b'Otherwise the infinite loop is gonna be a bad time (and possibly hard to debug for clients)'
5034,296965537,"b'Is elapsedTime still being used for something in this class? It looks like it gets set, and then updated, but never used for any other interesting part later in this file.'"
5034,296966047,b'Is rotation still interesting even when the indicator is closed? Just curious about the usage of this thing (esp. because the code above only does things when open)'
5034,296966394,"b""Nit: This is a bit inconsistent with the rest of the code that we have, which has private serialized fields, and the public setters and getters.\r\n\r\nWhy? I don't know, it doesn't necessarily make sense to me, but I'd still like for us to be consistent and stick to a given style without our codebase before consciously moving our entire coding style over.\r\n\r\n@davidkline-ms please correct me if I'm wrong here."""
5034,296966540,"b""For public fields, please add doccomments to explain what these are doing, even if they are reasonably named if they are here (i.e. spacing degrees - I assume these are degrees between the orbs, but maybe it's something else? - the fact that I have to make an assumption and can only validate it via looking at the implementation means having a doccomment would be helpful"""
5034,296966743,"b""Seems like a useful thing that could exist in like, a MathUtils file... if not, maybe a private const? I don't think that deg2rad should change (it's just a conversion constant)"""
5034,296967601,"b""Nit: Consider only doing this if null or if angles.length != orbs.Length. Otherwise there's no reason to blow away a chunk of memory that's identical to what is needed here."""
5034,296967686,"b""What's the significance of the number 5? It might be worth leaving a comment or using a const variable instead of using a magic number."""
5034,296967848,"b""It looks like this iterates over orbs.Length, but also indexes into dots - if orbs has length longer than 5 (imagine, 10), then it will null ref when it tries to hit dots[9] which doesn't exist."""
5034,296967932,b'Super nit: Missing braces here'
5034,296967965,b'```suggestion\r\n            if (!HasAnimationFinished)\r\n```'
5034,296968071,"b""Consider making HandleTestStop an editor-only thing (I assume it's not something that will be exercised in player mode)"""
5034,296968104,b'```suggestion\r\n            if (!timeUpdated)\r\n```'
5034,296968271,b'```suggestion\r\n            if (!stopRequested && adjustedColor.a < 1.0f)\r\n```'
5034,296968310,b'```suggestion\r\n            if (TestStop && !stopRequested)\r\n```'
5034,296968401,b'```suggestion\r\n            if (stopRequested && adjustedColor.a <= 0.01f)\r\n```'
5034,296968947,"b'FWIW, pre-allocate could be overkill, at least caching would be great.'"
5033,297268770,"b'>  public void ForceUpdateThemes() [](start = 6, length = 33)\r\n\r\nNit: Add a doccomment (really about when it should be called and guidance around it)\r\n\r\nMore generally, would it make sense to have it so that setting interactable.Profiles would trigger this automatically?'"
5033,297268892,b'Second question is less important.\r\n\r\n---\r\nIn reply to: [297268770](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5033#discussion_r297268770) [](ancestors = 297268770)'
5045,297356220,b'Misspelled: MixeddRealityToolkit -> MixedRealityToolkit\r\n\r\nHere and below.'
5045,297356420,b'Nit: Add a link to the xref here (or code)'
5045,297356818,"b'I think that by definition, all of these changes in this document are breaking changes. It\'s not just the API stuff that\'s breaking.\r\n\r\nI would just delete the ""breaking changes"" line and header down below, as it seems to suggest the others AREN\'T breaking (not true)'"
5052,297417285,"b'My goal here was to get a straight, minimal port in to unblock folks who needed it for historical reasons. '"
5067,297727874,"b'```suggestion\r\nTo ensure MRTK being a stable and reliable toolkit, every feature should come with unit tests and sample usage in one of the example scenes.\r\n```'"
5067,297729284,"b""I think that TearDown is a nunit concept right - it feels a bit weird seeing a nunit teardown but a unity setup (i.e. Setup doesn't have a corresponding SetUp attribute, I guess cause it doesn't need it)"""
5067,297729853,"b""It's also kinda interesting seeing this shutdown of the MRTK object but no corresponding startup of it - I assume that EnsureTextMeshProEssentials is more about ensuring that package's assets exist, but isn't actually setting up the MRTK object in the scene."""
5067,297730167,b'```suggestion\r\nThere are two Utility classes that help with setting up MRTK and testing interactions with components in MRTK\r\n```'
5067,297730242,b'```suggestion\r\nTestUtilities provide the following methods to set up your MRTK scene and gameobjects:\r\n```'
5064,297740296,b'```suggestion\r\n            // Show left hand far enough from the test collider to not give it focus\r\n```'
5054,297745843,"b""Ah, yeah, I guess this has some weird judgement in it. I'll just delete this paragraph, as it doesn't add much value"""
5054,297745950,b'Changed things up a bit - lemme know if this is a little clearer or not'
5054,297746365,"b'Added one for the diagnostic/perf stuff, thanks!'"
5054,297746714,"b""Yes, that's a good point"""
5054,297747778,b'I renamed this to visual performance tool to avoid mentioning both profiler and profile in the same context.'
5054,297752099,"b""Sounds good - I think that this stuff is important to have to show the tradeoffs/benefits/cons that come with things, but you're right that this should be describing how things are, and we can have a different section on reflections of how things have done and how they can be changed."""
5043,297759645,"b""Yes, this was a possibility, but it was a level of automagic that I wasn't really comfortable with. """
5065,297823244,"b""Nit: Add a doccomment (in particular, it would be good to clarify that it only reasons over LocalForward and LocalUp - there are other Local* vectors which aren't involved in this calculation and I might expect as a reader to see those somehow factored in)"""
5065,297824143,"b"">Value [](start = 38, length = 5)\r\n\r\nNit: It might be a little more readable to have this named IsToggled (instead of just 'Value')"""
5065,297824270,b'Would it be possible to also try toggling again (to show that the reverse transition also works?)'
5034,297838451,"b'Nit: It would be a little more concise to just do:\r\n\r\nif (state != ProgressIndicatorState.Closed)\r\n{\r\n    throw new System.Exception(""Can\'t open in state "" + state);\r\n}'"
5034,297839973,"b"">TestUtilities [](start = 14, length = 13)\r\n\r\nDelete this line (and probably the TearDown function as well because it'll be empty)"""
5070,297859494,b'```suggestion\r\n\r\n```'
5070,297859569,"b'```suggestion\r\n                    EditorPrefs.SetBool(statesPrefKey, showStates);\r\n```'"
5070,297860776,"b'Can you elaborate a bit more (on the PR, maybe not in comments in the code) about why an indent happens here but not down below?'"
5068,297884291,"b'It is, though this means that people will catch this at PR CI time, rather than in their inner loop.'"
5068,297884862,b'https://www.reddit.com/r/Unity3D/comments/adfxna/unity_developer/'
5102,298361529,b'UwU'
5102,298361581,b'\xc2\xaf\\_(\xe3\x83\x84)_/\xc2\xaf'
5102,298361664,b'(\xe2\x98\x9e\xef\xbe\x9f\xe3\x83\xae\xef\xbe\x9f)\xe2\x98\x9e'
5093,298384546,"b""I didn't see this called out in the PR notes - was there some other camera profile inspector that already existed (so this was a duplicate?). Otherwise it looks like if you view the profile itself (outside of the MRTK object) you'll lose this functionality"""
5125,298663700,"b'>Boo.Lang; [](start = 6, length = 9)\r\n\r\nWhat'"
5125,298665448,"b'>cachedBuildScenes = EditorBuildSettings.scenes; [](start = 20, length = 47)\r\n\r\nThe previous thing would set the cached build scenes at the very end (instead of setting it on each iteration) - curious to know about why we went from reconciling/snapping the state of the array at the end, vs incrementally building it (and thus, calling it multiple times as it gets increasingly larger)'"
5125,298666052,"b"">SetDirty [](start = 26, length = 8)\r\n\r\nJust to check - this doesn't cause us to spike Unity CPU usage when this inspector is open right? I have flashbacks to the build window """
5125,298670265,b'Boo.Lang!?'
5125,298670368,b'![image](https://user-images.githubusercontent.com/5840182/60357914-bf443b80-9989-11e9-945b-11eac25228fa.png)\r\n'
5052,298675903,"b'Old code, changed.'"
5052,298675970,b'```suggestion\r\n            for (int i = 0; i < anchors.Length; i++)\r\n```'
5125,298697073,b'I think there might be some money in a github app that finds usage of Boo.Lang and posts pictures of Boo'
5156,299183128,"b""Yep - if you're profiling on anything other than the master build (on device) you will see allocations caused by string manipulations. """
5156,299184011,"b'One minor improvement on this would be to cache this value anytime the pointer map is updated - so on pointer down/up, it will call .First() just once (which would then be reused for the duration of the move ""updated"" path).\r\n\r\nMore generally this would also lead to actual determinism in the algorithm as well, because right now it\'s only working thanks to luck - dictionary value enumeration is never advertised as being deterministic.'"
5156,299185604,"b'@julenka, do you have any data on some of the more complex scenes that people were building? 64 seems like it could be a small number potentially depending on how many near interaction things that exist.\r\n\r\n'"
5156,299185823,"b""Ah, I guess it's part of the profile anyway, so it's changeable at least there."""
5156,299185995,b'Is the plan here to make it so that maxQuerySceneResults is changeable at runtime as well? Otherwise this code will never be invoked/useful.'
5156,299186395,b'I think that List itself also just implements IReadOnlyCollection:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1?view=netframework-4.8\r\n\r\nSo you might be able to just return instances itself (and leave the IReadOnlyCollection part alone)'
5156,299186545,"b""Nit: Change the value in the FocusProvider.cs thing to 128 as well (or change this to 64) to be consistent. It doesn't make sense for us to have two different defaults."""
5156,299186674,"b""Shouldn't this just be 1? i.e. why can't I try to detect just a single object?"""
5156,299186849,"b""I know that I let the other change languish - I'm going to get that fixed today. Can you leave this file untouched so that my change can just do its part?"""
5156,299187423,"b""I'm going to change it to be a struct, so no more null checks."""
4965,299210646,"b""Ah I think that my comments don't make sense anymore - the version I looked at had every line of code in Awake #IF-ed behind UNITY_EDITOR (which made me think that we could just cover the entire function around it). With the latest, I see that there's stuff happening outside the editor as well, so this isn't relevant."""
5161,299234465,"b"">if (value != toolTipText) [](start = 16, length = 25)\r\n\r\nGiven that this was removed - was it intended that setting the text to the same thing should also trigger a local content refresh (even if it's being set to the same thing?)"""
5161,299234966,"b""I also see that only ToolTipText - is there a specific reason why only this property has this guard (but things like ContentScale, FontSize, and others don't have it?)"""
5136,299244450,"b""```suggestion\r\n[Periodic Table of the Elements](https://github.com/Microsoft/MRDL_Unity_PeriodicTable) is an open-source sample app which demonstrates how to use MRTK's input system and building blocks to create an app experience for HoloLens and Immersive headsets. Read the porting story: [Bringing the Periodic Table of the Elements app to HoloLens 2 with MRTK v2](https://medium.com/@dongyoonpark/bringing-the-periodic-table-of-the-elements-app-to-hololens-2-with-mrtk-v2-a6e3d8362158)\r\n```"""
5136,299244507,"b""if only because we've already defined it above and used the abbreviation"""
5150,299245827,b'Nit: Add a remark saying that this will only work once recording has stopped.'
5150,299246280,"b""Super nit: Some of these lines are super long (consider taming them to be like 100 characters).\r\n\r\nNormally I wouldn't have seen this issue but since this PR has over a certain number of commits, Codeflow isn't able to open it up, and github CR stuff has a limit on width."""
5150,299246843,"b'Super nit: Consider bringing this closer to the definition of the mode enum, just so that these two related and similarly-ordered entities are in the same rough area.'"
5150,299246999,b'@Railboy FYI'
5150,299247379,b'Super nit: Another fairly long line - could be helpful to bring the wasRecording ? thing down to the next line at least.'
5150,299247532,"b'bool record = GUILayout.Toggle(\r\n                           wasRecording,\r\n                           wasRecording ?\r\n                               new GUIContent(iconRecordActive, ""Stop recording input animation"") :\r\n                               new GUIContent(iconRecord, ""Record new input animation""),\r\n                           ""Button"");'"
5150,299247559,"b""damnit it doesn't preserve my spaces nooooo"""
5150,299248383,"b'Nit: Maybe if there\'s no animation, maybe worth showing a little label saying ""no animation loaded"" - otherwise I think you just have this trailing label that says ""Animation Info:""'"
5150,299249002,"b""Seeing as though there was a check added to the recording service (that a save would only occur if recording wasn't happening) - would it be worth adding something similar here or something?\r\n\r\nMore generally it does seem like an implementation detail/contract of the recording service (save should only be supported while recording has stopped), so maybe this should then just be an overload of the recording service itself"""
5165,299575655,b'yay'
5135,299724215,"b""You'll want to change:\r\n\r\nAssets\\MixedRealityToolkit.Tests\\PlayModeTests\\PlayModeTestUtilities.cs\r\n\r\nTo have this function (overwrite the existing EnsureInputModule())\r\n\r\n        public static void EnsureInputModule()\r\n        {\r\n            if (CameraCache.Main)\r\n            {\r\n                var inputModule = CameraCache.Main.gameObject.GetComponent<MixedRealityInputModule>();\r\n                if (inputModule == null)\r\n                {\r\n                    inputModule = CameraCache.Main.gameObject.AddComponent<MixedRealityInputModule>();\r\n                }\r\n                inputModule.forceModuleActive = true;\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n---\r\nIn reply to: [299560293](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5135#discussion_r299560293) [](ancestors = 299560293)"""
5135,299725126,"b""This should fix the test failures.\r\n\r\nThe cause here is that the test code utility is no longer setting forceModuleActive (since you're adding the input module here, it's no longer being done in the test code)"""
5177,300027565,b'Yasss'
5177,300032000,"b'Ah, this was supposed to be ""Teleport pointers"" (i.e. a section on teleport pointers)'"
5191,300123607,"b'I don\'t think this section goes into any degree of specificity about observers and stuff - this is purely saying ""hey look at this profile section in the inspector to configure spatial awareness""'"
5195,300160846,b'I did not!'
5230,301255392,"b""What's the significance of these 10 yields?"""
5230,301256992,"b'```suggestion\r\n        /// Flags, for the KeyboardEvent function, used in this test.\r\n```'"
5230,301257559,"b""Because this is a windows specific binary, we might want to wrap this entire code on a platform specific check so that when people are doing other platforms (i.e. running this test on mac) it doesn't fail expectedly (i.e. user32.dll doesn't exist there)"""
5230,301257832,b'Nit: Add summary information or delete the empty doccomments'
5230,301299743,b'```suggestion\r\n            // Verify that the VisualProfiler is enabled.\r\n```'
5230,301300464,"b""Nit: Bring this closer to where it's used."""
5230,301301181,"b""A lot of coding guidelines I've worked with recommend doing this because you can keep related concepts close together, instead of having a block of a ton of variables up front that aren't used to way later in the function."""
5230,301301774,"b""Does this fail every single time when there's only a single yield return null;?\r\n\r\nI suppose in general there's not really any gaurantee that everything happens in a frame, so maybe having some general awaiting assert would be more helpful (i.e. it waits for the condition to be true and waits for up to one second).\r\n\r\nThe second part of the comment is not really for this review, just me thinking aloud"""
5229,301316446,"b'```suggestion\r\n        [Tooltip(""When an axis is flattened, what value to set that axis\'s scale to."")]\r\n```'"
5229,301316470,b'Here and below.'
5224,301316897,b'Consider using ```csharp instead of `<pre><code>`'
5140,301321021,"b'Default is meters, which I think is fairly common enough that not specifying here is fine.\r\n\r\nI think the times where it does become value is time (i.e. is it seconds, milliseconds, etc)'"
5233,301753191,"b'>requring [](start = 72, length = 8)\r\n\r\nrequiring'"
5233,301753312,"b'>expereinceScale [](start = 32, length = 15)\r\n\r\nexperienceScale'"
5233,301753941,"b'I think this misspelling is copied into the rest of the system managers, so you may want to do a Ctrl+F across all files.\r\n\r\n---\r\nIn reply to: [301753191](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5233#discussion_r301753191) [](ancestors = 301753191)'"
5233,301754679,"b"">ExperienceScale [](start = 16, length = 15)\r\n\r\nAlso, do you know why this is on this, and not the profile itself? I see that on the regular MRTK object it's also on the main thing, but it's really just used for the boundary stuff."""
5233,301754981,b'Nit: Add an extra line after this.'
5233,301755368,"b'It seems like this will new memory in every Update() call, which will lead to GC alloc pretty quickly - can we avoid doing this?'"
5233,301756073,"b""> serviceSnapshot[i]?.Update(); [](start = 19, length = 30)\r\n\r\nIs there a good reason why we would continue to store null values in registeredServices?\r\n\r\nIt doesn't make that much sense to me that we do null checks on each thing - we should just not store null values as they aren't useful."""
5233,301756197,"b'>providers [](start = 20, length = 9)\r\n\r\nSame comment about null providers - we should avoid storing null providers'"
5233,301756470,b'Same general comments about gc alloc and null checking'
5233,301757810,b'Just iterate over the list directly instead of allocating another array for this purpose (same comment everywhere else)'
5233,301759065,"b""Why is this one different from the defined functionality of the base [https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Interfaces/Registrars/IMixedRealityServiceRegistrar.cs](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Interfaces/Registrars/IMixedRealityServiceRegistrar.cs)?\r\n\r\nIt seems like if we inheritdoc and implement the interface, we should honor the contract. Otherwise, we shouldn't implement the interface. Or, provide more guidance about why this one in particular doesn't adhere to the existing interface."""
5233,301759492,"b'>Failed to get the requested service. [](start = 27, length = 36)\r\n\r\nIt would probably be helpful to also log the requested service type to make this more debuggable. I think that lukas fixed this in another area already.'"
5233,301759576,"b""Same question on why this isn't supported (see above!)"""
5233,301759788,"b""Otherwise this needlessly allocates memory for real value (you're not modifying the provider list here, which I guess would be possible elsewhere)\r\n\r\n---\r\nIn reply to: [301757810](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5233#discussion_r301757810) [](ancestors = 301757810)"""
5233,301760625,"b'>-1 [](start = 124, length = 2)\r\n\r\nIs this supposed to be ""all"" or ""none""?\r\n'"
5233,301762816,"b"">bool registered = MixedRealityServiceRegistry.AddService<T>(serviceInstance, this); [](start = 12, length = 83)\r\n\r\nIt's interesting here that this delegates registration up, but queries later still are purely local - it's not really a traditional service registration chain, but rather this is just doing some extra work here to make it so that the registrar always knows about all services.\r\n\r\nCan you help elaborate a bit on how the service related APIs are used on this level, vs. the top level? i.e. in what scenarios are people going to be calling into the camera monobehaviour directly and asking it for the camera service, vs just asking the MRTK registrar? It feels like there's some extra complexity here that I fully understand and would love to understand a little bit more."""
5233,301763314,"b'>default(T) [](start = 47, length = 10)\r\n\r\nDoes this have to be default(T) because the compiler thinks we might be using structs or something else here? Otherwise it would be great to just be explicit and be like, we return null in this case.'"
5233,301763690,"b'I mean, I see that Initialize uses this, but it seems like this is more of an internal implementation detail than a useful public API.\r\n\r\n---\r\nIn reply to: [301762816](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5233#discussion_r301762816) [](ancestors = 301762816)'"
5233,301763930,"b""Should we look at the returned value of RegisterService? No need to FindService if it didn't succeed.\r\n\r\nAlso, should we log in the case that RegisterService fails?"""
5233,301764377,b'Use [https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.trygetvalue?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.trygetvalue?view=netframework-4.8) instead of doing two lookups.'
5233,301765747,"b"">dataProviderInstance.Initialize(); [](start = 16, length = 34)\r\n\r\nDo you have any guidance on why the input system has to call this as part of register data provider, but this isn't part of the base register data provider implementation?"""
5233,301766159,b'It might be worth adding a comment stating that these lines are order dependent (I assume that the focus provider/raycast provider require the input system already having been registered?)'
5215,301778093,"b"">!--<TargetFrameworks>netstandard2.0;uap10.0;net46</TargetFrameworks> --> [](start = 5, length = 72)\r\n\r\nIf this is omitted, is it pretty obvious about the failures that start happening, or it is pretty obscure? This comment isn't asking for any changes here I'm just curious to know the story behind it. #Resolved"""
5215,301778494,"b'><!-- This is special cased here for WSA player only--> [](start = 2, length = 54)\r\n\r\nIs this comment supposed to be for this line for the one below that looks specifically for WSA player? #Resolved'"
5215,301778996,"b'><!--PROJECT_REFERENCE_SET_TEMPLATE_START--> [](start = 2, length = 43)\r\n\r\nSuper nit: Consistency with spacing for these temlpate start and ends (i.e. move this two spaces left, or move the end two to the right) #Resolved'"
5215,301780377,b'Super nit: indent four spaces #Resolved'
5215,301780755,"b'>C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETCore\\v4.5 [](start = 99, length = 77)\r\n\r\nThese are things that are always installed to C: right (or the windows install drive?) Is there any risk that these might actually be on another drive letter? #Resolved'"
5215,301782140,"b""If we just threw here instead of logging an error, would that halt our build process? I'm curious because this is also something that Unity itself says is not supported, though maybe as is done here it just defaults to one of them:\r\n\r\n[https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html](https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html)\r\n\r\nIn our case if we're hitting this we should probably just fail the build and make people fix it, rather than silently (because the build will keep going). If this isn't invoked from the build then this is fine. #Resolved"""
5215,301785013,"b'>builder.flags = AssemblyBuilderFlags.EditorAssembly; [](start = 12, length = 52)\r\n\r\nCan you add a comment for why this has to be set after the creation of the builder? A naive reading of this would maybe have a person just move this to the constructor. #Resolved'"
5215,301785122,"b""But clearly that would be bad, otherwise it wouldn't have been done this way.\r\n\r\n---\r\nIn reply to: [301785013](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301785013) [](ancestors = 301785013)"""
5215,301785751,"b""Ah, I guess what's weird to me is that setting the property actually changes the hashsets of other properties, I guess that was what was throwing me off. Nevermind!\r\n\r\n---\r\nIn reply to: [301785122](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301785122) [](ancestors = 301785122,301785013)"""
5215,301787369,"b'Nit: For future cases, consider using things like Except, Intersect, Union and the corresponding HashSet operating functions:\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1.exceptwith?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1.exceptwith?view=netframework-4.8)\r\n\r\nIf only because it can be at times more readable to read the fundamental set operation words (i.e. this thing  = A intersect B) instead of going A but remove everything from one and then do the same to the other and then use the stuff that remains. #Resolved'"
5215,301788611,b'Nit: Please add some doccomments. #Resolved'
5215,301789549,"b""Nit: It's weird seeing the summaries empty here, but having remarks (i.e. clarifying comments, but no main comments to clarify) #Resolved"""
5215,301789756,"b'>patforms [](start = 46, length = 8)\r\n\r\nNit: platforms #Resolved'"
5215,301789815,b'Though also patforms I can get behind\r\n\r\n---\r\nIn reply to: [301789756](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301789756) [](ancestors = 301789756)'
5215,301791189,"b"">In the editor, we can support all patforms if it's a pre-defined assembly, or an asmdef with Editor platform checked.  [](start = 12, length = 118)\r\n\r\nI'm trying to understand this comment a little more - is this saying that if if the overall thing is being built for editor + assembly, or editor + asmdef, this gets ignored? i.e. so the usage of this is done somewhat externally of this class? #Resolved"""
5215,301792219,"b'>Assembly-Definition [](start = 40, length = 19)\r\n\r\nNit: assembly definition (capitilization here and down below) or make every usage of this term have this capitalization (just to be consistent at least within this file) #Resolved'"
5215,301794231,"b'>Debug.LogError($""Predefined assembly \'{assembly.name}\' was not recognized, this generally means it should be added to the switch statement in CSProjectInfo:GetProjectType. Treating is as a PredefinedAssembly instead of PredefinedEditorAssembly.""); [](start = 20, length = 247)\r\n\r\nAnother question about how this surfaces in the build - it would be useful if we could throw/abort the build entirely (if we aren\'t going to invest in build logging changes to grab from STDERR or parse errors). If the plan, however, is to update the build steps to look for error logs (of this specific type) then this is fine - my main concern is that usually we haven\'t done this, and these sorts of things can fail silently (because they only get exercised in batch mode and on CI usually we don\'t look at the logged errors, only the overall failure/success).\r\n\r\nThe downside to throwing, of course, is that we\'ll only see a single error (and we would have to re-run things possibly multiple times to get all errors, so really there are pros and cons to both ways) #Resolved'"
5215,301794958,"b'Actually, this might actually be a sin of documentation, but it might be helpful just to point to:\r\n\r\nprivate ReadOnlyDictionary<BuildTarget, CompilationPlatformInfo> GetCompilationPlatforms(bool inEditor)\r\n\r\nWhich is what defines the rules here.\r\n\r\n---\r\nIn reply to: [301791189](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r301791189) [](ancestors = 301791189)'"
5215,301795043,"b'>//public const string UWPTargetPlatformVersion = ""10.0.18362.0""; [](start = 8, length = 64)\r\n\r\nNit: Delete commented out code #Resolved'"
5215,301795743,"b'>line 130, inEditor && predefined editor assembly at line 130, and !inEditor && predefined editor assembly at line 139 [](start = 92, length = 117)\r\n\r\nNit: I would probably add some other named comment sections:\r\n\r\ni.e. on line 130, have a comment saying ""predefined assembly reconciliaion section"", and then here refer to the named section.\r\n\r\nLine numbers can and will change arbitrarily and this comment will go out of date pretty easily (and it\'s really easy to forget updating this as you change any of the above lines) #Resolved'"
5215,301798052,"b'This takes an intersection here because our new dependency can only support the subset that both of these references support (i.e. if we support A, B, this other thing supports B, C, then we can only really support B between the two of us) right? #Resolved'"
5215,301798858,"b'> Debug.LogError(""Failed to find ProjectReferenceSet and/or Source_Include templates in the project template file.""); [](start = 15, length = 116)\r\n\r\nNit: It might be helpful to log the missing files. #Resolved'"
5215,301799693,"b""Are any of these optional? What I'm curious about is if these templates end up getting validated in making sure that they have the required tokens. i.e. it's pretty easy for me to make a mispelling in a token, and if so, substitution here would silently fail (even though I would expect that tokens should be validated as being valid and present)"""
5215,301799809,b'I think this variable is unused #Resolved'
5215,301800758,"b'>""\'false\'"" [](start = 81, length = 9)\r\n\r\nDo you know why this condition token needs to be double-encapsulated by "" and \', but the one on line 287 doesn\'t? #Resolved'"
5215,301801042,"b"">//TODO Native plugins aren't yet supported [](start = 24, length = 42)\r\n\r\nWe don't like to have blank TODOs checked in here - if you can add more details or have an issue filed (and then link to that issue) that would be best. Otherwise this will probably live on forever with little background"""
5215,301802009,b'Should this be kept in sync with the define:\r\n\r\nsupportedBuildTargets\r\n\r\nIn MSBuildTools.cs? #Resolved'
5215,301802469,"b'>.vs\\MRTK\\v15\\Server\\sqlite3\\db.lock [](start = 42, length = 35)\r\n\r\nThoughts on just looking for db.lock specifically, - if only because seeing a version number makes me think this logic can get broken on future releases. #Pending'"
5215,301802575,"b"">//// [](start = 12, length = 4)\r\n\r\nTooooooooo many //'s here and below #Resolved"""
5215,301802727,b'Nit: Delete this commented out code #Resolved'
5215,301803266,"b'>//TODO this may be different on older unity versions [](start = 16, length = 52)\r\n\r\nIs the plan to only support 2018 and 2019? Or is this just a general comment? #Resolved'"
5215,301803425,b'Nit: Move the license to be the first thing #Resolved'
5215,301803735,b'I think this is unused #Resolved'
5215,301804015,"b"">GetReferences [](start = 42, length = 13)\r\n\r\nGetReferences isn't defined in this class, and is fairly generically named - this comment makes me ask more questions than it answers, so it might be better to just delete this, or provide additional context to make it more clear #Resolved"""
5250,301810770,b'Does this end up no-oping when hands are involved?'
5250,301810902,"b""It feels like it's fixing up a controller scenario but also is involved in a relatively fundamental hand scenario, so I'm curious if that stuff is being fixed up some other way right now\r\n\r\n---\r\nIn reply to: [301810770](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5250#discussion_r301810770) [](ancestors = 301810770)"""
5250,301813891,"b'Yep, I saw the other lines, I was just more concerned about modifications to some other path.'"
5259,302148122,b'Nit: Use the same value velocityUpdateInterval instead of hardcording the number 6'
5259,302149080,"b""This velocity calculation code looks to be decently common between a few different files - it might be worth abstracting that out into a helper class (i.e. VelocityCalculator.cs), where each frame you're responsible for calling UpdateVelocity(NewPosition, NewNormal), and then the caller can then just call GetVelocity and GetAngularVelocity.\r\n\r\nThis would also make it possible to unit test this functionality (i.e. you could give it 10 different points and normal and then show the expected numerical amount)"""
5266,302238275,"b""Take a look at the other play mode tests - we end up building only in non-UWP because of weirdness with .NET. (So you'll need to add that #ifdef chunk here as well)"""
5266,302243300,"b""It might be worth adding a comment here saying that if this has failed, the cause is probably because you have removed the HandInteractionScene from EditorBuildSettings.asset.\r\n\r\nIt's somewhat common for folks to modify this locally and sometimes even commit changes back (as we've seen due to the evolving things here)"""
5271,302622608,"b""There's some other weird stuff here like 255.0f/255.0f (could just be 1.0f). I guess maybe the goal was consistency with the rest of the line but it does feel like there's just noise here."""
5268,302623522,"b'>IMixedRealitySceneSystemEditor [](start = 17, length = 30)\r\n\r\nThis interface is in the global namespace, please move to the non-global namespace (I think this is also probably what failed the build)'"
5268,302629538,"b'>LoadNextContent [](start = 63, length = 15)\r\n\r\nWhere is LoadNextContent? i.e. maybe have a reference to it explicitly (I would think it would be on this interface, but it si not)'"
5268,302629961,"b'>/// <param name=""wrap""></param> [](start = 4, length = 31)\r\n\r\nCan you add a comment about what wrap does? i.e. I assume this means it will wrap around back to the beginning when already at the end, but it could also mean ""wrap this scene in some other scene?"" or something else non-sensical and we may as well get rid of any room for doubt'"
5268,302633614,"b'>facade.ServiceType [](start = 48, length = 18)\r\n\r\nShould this be using interfaceType, not facade.ServiceType?'"
5268,302633838,"b""Similar comment here - how we loop over each interface type but we don't use it in this loop."""
5215,302780575,"b'>Application.dataPath.Replace(""Assets"", ""MSBuild""); [](start = 39, length = 50)\r\n\r\nThis should be the same as ""path"" above right? I don\'t think path gets edited or anything #Resolved'"
5215,302780911,"b'>Completed."" [](start = 23, length = 11)\r\n\r\nNit: ""GenerateSDKProjects completed"" (otherwise it\'s super generic in the logs) #Resolved'"
5215,302781511,"b'>auto referenced. [](start = 40, length = 16)\r\n\r\nWhat does this mean? #Resolved'"
5215,302781656,"b'Ah, is this unity ""auto reference"" concept?\r\n\r\n---\r\nIn reply to: [302781511](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5215#discussion_r302781511) [](ancestors = 302781511)'"
5215,302781908,"b'>Facebook [](start = 51, length = 8)\r\n\r\nWait whattttttttttt #Resolved'"
5215,302782209,"b'I think dead variable (would probably be worth just going through and cleaning whatever build warnings exist, as they should also end up being build errors in CI) #Resolved'"
5215,302782608,"b""Should either of these end up throwing as well (i.e. if we can't get any template folders, is that actually super bad for this, or is this... an acceptable situation to be in?) #Resolved"""
5215,302782897,"b'>FAE04EC0 [](start = 51, length = 8)\r\n\r\nIs this just an arbitrarily generated thing, or is there some secret or guidance for how we might want to rev or change it going forward? #Resolved'"
5215,302783219,"b""What are the other ramifications of this TODO? It feels kinda scary to read this (i.e. this isn't really correct) - is it more like, it's not exactly optimal? #Resolved"""
5298,303046235,b'```suggestion\r\n        /// This test verifies that buttons will trigger with far interaction\r\n```'
5302,303161055,b'```suggestion\r\n    Defaults to assuming that the current working directory of the script is in the root\r\n```'
5302,303163889,b'yikes'
3961,303172036,b'I think you changed the line-ending style here right -was it that it was inconsistent with the rest of the stuff?'
3961,303172402,"b""In all of the cases in the docs that use c# code, consider doing:\r\n\r\n```csharp (or c#) \r\n\r\nInstead of just ```\r\n\r\nYou'll get some fancier colors!"""
3961,303172547,"b'Do you have any guidance on when you would recommend doing one of these other two locations, or is this something that is obvious to people who have done a lot of work in this space?'"
3961,303172741,b'Super nit: Indentation (here and above for things that are in await blocks)'
3961,303173029,"b""Nit: It might be worth moving this to AFTER the code example, because it isn't highlighted/listed in the code example (I was looking for it, didn't find it, and then realized that the code example is more talking about the earlier stuff)"""
3961,303173351,b'Nit: Missing doccomment'
3961,303173507,"b"">await Task.Yield(); [](start = 12, length = 19)\r\n\r\nWhat's the significance of this particular Task.Yield?"""
3961,303174072,"b""Is it just because of how transient this quad is going to be that it doens't matter which layer gets picked here? It seems arbitrary here (i.e. we could assign it to a layer that is reserved for app specific stuff)"""
3961,303174525,"b""This is a nit, but I've seen it a couple of times and was hoping to adopt a simpler thing - if you only have a single state you're checking for (i.e. ! = Opaque) just use an if statement, it's simpler in that case. Switches are handy if you're trying to show how logic branches off when multiple options come into play."""
3961,303174743,"b""Ah, scratch my comment on the implementation itself - I would just add the docs here and then do the ol' inheritdoc thing"""
3961,303174841,"b'>Scene System. [](start = 43, length = 13)\r\n\r\nNit: Consider using an xref/cref to get people in the right direction.'"
3961,303175201,"b""This is just a convenience version of the thing above right? It feels like you could just do DoSceneTransition({operation1, operation2} and it would be fairly straightforward as well).\r\n\r\nIt's just a larger API surface to maintain going forward and I'm curious if this means the next thing is a version that takes three functions (and where we draw the line - maybe it's just at two)"""
3961,303175403,b'I think these params were associated with a past life. Same on FadeIn down below'
3961,303175486,"b"">/// <returns></returns> [](start = 8, length = 23)\r\n\r\nSuper nit: Be consistent with the usage of <return> - other places we omit it, and it's probably better to clean up all instances where it's empty because it doesn't add anything."""
3961,303177162,"b'>DocLink [](start = 5, length = 7)\r\n\r\nThis link goes to a 404 [https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Extensions/SceneTransitionService/SceneTransitionServiceOverview.html](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Extensions/SceneTransitionService/SceneTransitionServiceOverview.html)'"
3961,303526439,b'Nit: Would be great to have tooltips on these and matching doccomments on the public versions of them above.'
3961,303529151,b'Nit: Could also add those fancy range attributes to indicate how low/hi they can be'
3961,303531554,"b'Consider also having an example set of scenes and ""uber"" scene that ties all of this together.\r\n\r\nAs a reader/someone who has zero experience using this, it\'s still hard for me to understand the whole picture here and how it\'s supposed to be used. The docs below help tremendously once you have a better understanding of the area (i.e. you know what you don\'t know).\r\n\r\nAlso, having some discussion about how this relates to additive scene loading (it doesn\'t) and the cases in which you might want to do this vs. the other would help to give a little more context.\r\n\r\nThe asks in this comment aren\'t something that I think need to be addressed in this PR, but should be in a subsequent on to improve the initial approachability of this feature.'"
3961,303532221,"b'>public class CameraFaderQuad : ICameraFader [](start = 4, length = 43)\r\n\r\nNit: Missing doccomment'"
5311,303533302,"b""doh, I missed this update. I'll do what we did in unitybuild.yml"""
3961,303551766,b'lolololol '
5309,303650099,"b'>public void SetScaleLimits(float min, float max, bool relativeToInitialState = true) [](start = 8, length = 84)\r\n\r\nNit: Missing doccomments - probably just take the comments from:\r\n\r\n/// <summary>\n        /// Sets the minimum/maximum scale for the transform helper.\n        /// </summary>\n        /// <param name=""min"">Minimum scale</param>\n        /// <param name=""max"">Maximum scale</param>\n        /// <param name=""relativeToInitialState"">If true the values will be multiplied by scale of target at startup. If false they will be in absolute local scale.</param>'"
5309,303650321,"b'>public Vector3 ClampScale(Vector3 scale) [](start = 8, length = 40)\r\n\r\nNit: Add a doccomment here as well.'"
5309,303650952,"b"">isChildOfTarget [](start = 16, length = 15)\r\n\r\nThis line isn't getting set anymore, but still exists elsewhere - should this remain?"""
5309,303651513,"b"">public float ScaleMaximum => maximumScale.x; [](start = 8, length = 44)\r\n\r\nThis change also makes it so it's no longer possible to set the scale min/maxes after the fact (is that the intention?)"""
5309,303651682,"b'>/// <returns></returns> [](start = 8, length = 23)\r\n\r\nNit: Delete this line.'"
5303,303674556,"b""Can you also add a note to:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/UpdatingToGA.html\r\n\r\nThis is technically a breaking change because we're changing the shape of our API to one that is explicit (i.e. passing a radius via config or runtime setting) to one that is implicit based on the transform of the tracked object. It seems like this one seems more useful especially for clipping sphere, but it would be good to call out the change there (i.e. before  you would have to track the transform and update the radius yourself, now it automatically tracks it, if you want to change it, just update the transform of the sphere as you normally would.)"""
5264,303675135,b'@julenka would know more in this area than I would. '
5369,305502946,"b"">; [](start = 45, length = 1)\r\n\r\nNit: . instead of ;\r\n\r\n(I'm using codeflow so suggestions aren't possible AFAIK)"""
5369,305506187,"b'Nit: Generally for comments, avoid mentioning what or who is calling you, as it\'s possible for this comment to get out of date just via that component changing (and it\'s super easy to not update this comment, as you could make it to StabilizationPlaneModifierdoesn\'t call this anymore, but unless you grep StabilizationPlaneModifier (i.e. not just the functions you changed in StabilizationPlaneModifier), you won\'t think to update this)\r\n\r\nSo long story short, probably just the ""Updates the the gaze raycast provider even in scenarios where gaze isn\'t used for focus""'"
5369,305507898,"b""> var lhd = (raycastHit.point - ray.Origin).magnitude; [](start = 15, length = 53)\r\n\r\nDo we also need to update gazeProvider.lastHitDistance?\r\n\r\nSee lines 266-268.\r\n\r\nMore generally, it might be worth having a helper function that takes an object and properly sets all three things, so that we don't forget to update them all as a unit (otherwise we risk similar bugs in the future where we only update 2/3 or 1/3 of the things)\r\n\r\n"""
5369,305508950,"b'> we have already updated hit data [](start = 32, length = 33)\r\n\r\nIs there any way to assert that we aren\'t recalc-ing things? This introduces cross-code dependency that is implicit, meaning we could ""fix"" this issue in another location and not know to update this (i.e. delete it) later.'"
5369,305509040,"b'I think that yeah, this is to avoid update-loop allocations.'"
5369,305509945,"b"">(GazeProvider) [](start = 17, length = 14)\r\n\r\nThis has an interesting side effect of preventing other people from implementing their own gaze provider directly using the IMixedRealityGazeProvider interface.\r\n\r\nI think that, truth be told, it's really hard to implement the gaze provider correctly without having everything inside GazeProvider.cs, so the value of the interface itself isn't high, but if we are going to do this we should do this consciously and make this tradeoff explicitly.\r\n\r\n"""
5369,305510330,"b""Is there also any way to validate that the the object isn't focused with the hand raised (i.e. that interaction enabled is properly being honored?)"""
5369,305932289,"b""Nit: Delete the comment (since it's just for CR, and I think this was answered)"""
5371,305941776,b'```suggestion\r\nA spherical volume with a center at the world space origin. The X value of the [Observation Extents](#observation-extents) property will be used as the radius of the sphere.\r\n```'
5412,306894547,"b""Was this switch to PanUnityEvent something that was swapped automatically during the save? This seems like it would be a change that's unrelated to this radial solver update at first glance."""
5412,306895818,"b'I think it does looook to be optional (i.e. you could in theory have a slate that doesn\'t follow you, like in the hand interaaction example scenes case)\r\n\r\nThe only thing that might be helpful is, if the ToggleFollowMeBehavior is engaged, to have some sort of warning or logging if radialView is null (meaning it\'s not been set up correctly for follow me behavior.\r\n\r\nAlternatively, we could try to loosen the dependency directly on RadialView (i.e. maybe ANY time of ""following"" solver would work here, and we could enable/disable a general solver object instead of this specific one). I\'m trying to imagine a consumer wanting to have their own follow me behavior and choosing a non-radial solver (or doing their own)'"
5412,306896138,b'```suggestion\r\n            if (UseFixedVerticalPosition)\r\n```'
5412,306896429,"b'It\'s a boolean so we don\'t need to do the direct comparison to true (generally if params are named well like they are here, it can be fairly readable to be like ""if using a fixed vertical position then..."" '"
5402,306906139,"b"">Please open your custom profile, if one exists, at least once after upgrading to GA [](start = 458, length = 83)\r\n\r\nNit: It might be worth adding why (i.e. please open your custom profile, which will trigger a one-time migration step).\r\n\r\nIf they don't do this step, do you know if they'll still hit the null exception (i.e. in which case, can we copy that error stack or text here so that if people do forget to hit that, they might have a chance of searching for that exception here?)"""
5402,306908507,"b"">controllerMapping.Interactions[5] [](start = 131, length = 33)\r\n\r\nSuper nit: I know that this is a temporary thing so maybe magic numbers are okay as a result, it's a bitttttt scary seeing this because this does put a hard dependency on the order here and the controller mapping profile interaction order.\r\n\r\nIt might be helpful to have a comment saying what this should be or some assert that it is what it should be."""
5373,306924176,"b'@davidkline-ms, any recommendations for @naostranMS here?'"
5370,306940330,"b'```suggestion\r\nOften in Unity it is difficult to gleam which assets are being used, and what is referencing them. The ""Find References in Scene"" option works great when you are only concerned with the current scene, but what about your entire Unity project? This is where the [Dependency Window]((https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Tools/DependencyWindow) can be useful.\r\n```'"
5402,306949384,"b""I think #1 is fine, considering how stop-gappy this code is going to be (i.e. we'll remove it going forward)"""
5415,307006587,b'It reports an error back through stdout from what I remember'
5429,307505707,"b""Can you also add a doccomment about what this class is for (i.e. what it does, benefits, etc).\r\n\r\nUsually we'd like to also have some docs on it as well, but in this case because it's pretty small maybe just having the doccomments would be sufficient."""
5330,307526496,"b'What are you thoughts on the pros/cons of this? I was thinking about this and I can see a world in which maybe someone only wants to implement one of these, though I was hoping to reduce interface concept overload by saying:\r\n\r\n""If you want to have custom raycast behavior, you should implement the raycast behavior interface."" For folks who want to implement just one of those, you can always take the base class itself.'"
5444,307942165,"b""This change is factually accurate (because this link has since been repurposed for HL2), but I feel like suggests that we're having focus only on HL2 - there are a number of other tutorials on there like:\r\n\r\nhttps://docs.microsoft.com/en-us/windows/mixed-reality/tutorials\r\n\r\nWe might want to call out that general part first, and then say hey, check out this one which uses the MRTK that covers HL2.\r\n\r\n@keveleigh, thoughts?"""
5452,308359999,"b""I think I'll keep this one as-is - if we did do some null checking, I wouldn't want to proliferate this into all of the private static helpers, and would rather do the checking at the various data junction points (i.e. the actual Unity API). Even in this case, however, I assume that we should be able to depend on strings from Unity APIs being not null, in which case we would only null check if there were a Unity bug)"""
5432,308422590,"b'>EyeTracking_TargetSelection.htm [](start = 60, length = 31)\r\n\r\nSince this is within the same file, I *think* you can omit the EyeTracking_TargetSelection.html part of it.'"
7679,410823401,"b'```suggestion\r\n        /// With this active, solver will activate after the palm threshold has been met and the user gazes at the activation point.  If eye gaze information is not available, the head gaze will be used.\r\n```'"
7679,410823752,"b'```suggestion\r\n        /// Checks to see if the palm is currently facing the user; and if required, is it currently flat.\r\n```'"
7679,410824735,"b'As an aside, I just noticed that this method has an undocumented side effect -- it modifies the position and rotation behavior of the hand constraint in some cases. Would be good to mention this side effect in the method comment. Might be nice to fix this in the future.'"
7679,410825253,b'Interesting use of double assignment here. Is there actually any need for the local variable gazeActivated? Seems like you could just do:\r\n\r\n```\r\ngazeActivationAlreadyTriggered = (gazePosDistToActivationPosition < gazeActivationThreshold);\r\nreturn gazeActivationAlreadyTriggered;\r\n```\r\n\r\n'
7679,410825650,"b'Since these <param> blocks are empty and it is a private method (so not needed), suggest removing these empty <param> blocks'"
7679,410826128,"b'```suggestion\r\n        /// activate the attached menu. If joints successfully obtained, returns activation point for currently selected\r\n        /// safe zone. On failure, returns Vector3.zero.\r\n```'"
7679,410826451,b'Would be nice to rename to `Try GenerateHandPlaneAndActivationPoint` to follow the pattern used elsewhere in MRTK to use Try* when calling methods that could fail.'
7679,410826715,"b""It's a little  surprising to me that GenerateHandPlaneAndActivationPoint returns true/false but this method doesn't. It seems like this method could fail the same way GenerateHandPlaneAndActivationPoint could, yet in this one the result is to set values to Vector3.zero instead of returning false in case of failure. Seems like it would be safer to use the pattern to do TryBlah and return false instead of failure. This can help debug tricky bugs in the future."""
7679,410827500,"b'@KenJakubzak I would actually expect that if I called `SolverHandler.UpdateSolvers = false` before disabling a component, then on enable, that component would not all of a sudden call `SolverHandler.UpdateSolvers = true` for me. I think this was to solve a specific case in the Hand Menu examples scene where switching menus could cause menus to be stuck in space. Perhaps this should instead be implemented in a script scoped just to the example scene? '"
7679,410833217,b'Sure; can do.'
7679,410833267,"b""That's a fair assessment. I can change this. """
7679,410833366,b'I can do this.'
7679,410853188,"b""Actually; was thinking about this some more. This will happen whenever the object is disabled while running the coroutine. When reenabled, it simply won't reconnect due to it turning off the solver when deattaching from the hand (and the activation of the UI wouldn't necessarily lead to it having the solver update being turned back on; leading to the UI then being functionally broken again).\r\n\r\nI think our sample scene exposes this, but it isn't specific to just this scene as developers could hit this with their own app.\r\n\r\nWe could use another script to do this management as you; but at the same time, that means we have a component that could still end up in this state. \r\n\r\nWould a potential option be that we add this as an option the developer can select (through a publicly-facing bool)?"""
7679,410984558,"b""Actually; thinking about it some more. Fair point. We can hook onto the events that the buttons trigger and set these values when there's a menu switch in the scene. Will implement it now."""
7679,411513264,b'Empty <param> and <return> blocks.'
7679,411513354,b'Empty <param> and <return> blocks.'
7679,411513437,b'Empty <param> and <return> blocks.'
7679,411513596,b'Empty <param> and <return> blocks.'
7679,411513691,b'Empty<return> block.'
7679,411545994,b'It looks like these methods are obsolete: https://docs.unity3d.com/2018.4/Documentation/ScriptReference/Assertions.Must.MustExtensions.html. Can we use something else instead?'
7679,411561740,b'Fixed'
7679,411561832,b'Added that in above!'
7679,411592303,"b""Turns out we didn't need it and it was added in somewhat arbitrarily. """
7556,395176714,"b'nit\r\n\r\n```suggestion\r\n                    return Quaternion.LookRotation(direction, Vector3.up);\r\n```'"
8059,440511620,b'Considered caching this property but decided not to in case the user changes the size of the object while they are placing it. '
8059,440999849,b'I agree that not caching this is a good choice.'
8059,441004026,"b""I _totally_ agree with the offset being dynamic in case the size of the object changes over time. But I wonder about the value of this calculation being done on every **SolverUpdate**. I guess the question is how likely we think the bounds of the object will change _while the object is being placed_. This seems unlikely to me, but I could easily be missing some scenarios.\r\n\r\nIf we think it's unlikely the object bounds will change while it's being placed, this calculation could be done once during **StartPlacement** rather than on every **SolverUpdate**."""
8059,441017274,"b""I would change this setter to be a 'dumb' setter (i.e. it just sets the surfaceNormalOffset value and doesn't try to compare it against defaultSurfaceNormalOffset).\r\n\r\nHaving a property that implicitly changes other properties based on alignment with magic values (in this case defaultSurfaceNormalOffset) violates the principle of least surprise. As a caller of this, I wouldn't expect that changing a float value of something would also change the bool value of something else - i.e. as the caller of any thing that modifies a property, I would expect that to only modify that property.\r\n\r\nOtherwise, consider a case where a caller is maybe cycling through changing the surface normal offset and they HAPPEN to set it to defaultSurfaceNormalOffset on a particular frame - well, now the next frame where they want to set it to offset + .001, it stops working. Why? Because UseDefaultSurfaceNormalOffset was just set to true and they didn't know it happened.\r\n\r\nI think that the intention here is in the right place (i.e. making it easier to use)."""
8059,441018425,"b'Nit: This would make for a helpful comment (i.e. not caching explicitly to support XYZ). Otherwise it would be easy to ""optimize"" this way and lose support for that scenario.'"
8059,441116930,"b'@wiwei I understand the least surprise principle concern, but I think in this case it is necessary to connect `UseDefaultSurfaceNormalOffset` and `SurfaceNormalOffset` to minimize the probability of confusion.\r\n\r\nScenario 1:\r\nSomeone to sets the `SurfaceNormalOffset` to the exact value as default, which will set `UseDefaultSurfaceNormalOffset` to true without intention from the developer.\r\n  - In the scenario you described where a user is cycling through values for `SurfaceNormalOffset`, if they happen to land of the defalutSurfaceNormalOffset, `UseDefaultSurfaceNormalOffset` will be set to true, but this does not affect setting other values.  They will see that `UseDefaultSurfaceNormalOffset` is true for that frame, but then once they change the `SurfaceNormalOffset` again, `UseDefaultSurfaceNormalOffset` will go back to false.  Yes it would be confusing to see, but not as likely as scenario 2.\r\n\r\nScenario 2:\r\nSomeone sets the `SurfaceNormalOffset` while `UseDefaultSurfaceNormalOffset` is still true.  \r\n  - This is very likely because by default `UseDefaultSurfaceNormalOffset` is true.  I can see someone wondering why their new value for `SurfaceNormalOffset` is not getting applied, but what is happening is `UseDefaultSurfaceNormalOffset` is still true which overrides their new `SurfaceNormalOffset` value.  '"
8059,441137797,"b""This is the difference between caching and not caching the defaultSurfaceNormalOffset. I think the scenario is not the most likely, but I think it's nice to have the auto adjustment if the size changes while placing.\r\n\r\n| Without Bounds Update | With Bounds Update |\r\n|----|----|\r\n| ![TapToPlaceBoundsNoUpdate](https://user-images.githubusercontent.com/53493796/84827088-cc15d100-afd8-11ea-8560-b221c384bb9c.gif)| ![TapToPlaceBoundsUpdate](https://user-images.githubusercontent.com/53493796/84827123-d637cf80-afd8-11ea-9347-455733b62b0a.gif) |\r\n\r\n\r\n"""
8059,441190564,"b'I feel pretty strongly about disconnecting these two. The current way also makes it impossible to set the SurfaceNormalOffset without turning off UseDefaultSurfaceNormalOffset (i.e. you want to have one part of the code that changes the offset amount, and have something else that applies policy for when that value should actually be used).'"
8059,441289489,"b""I'm inclined to agree with @wiwei here. I think the main confusion here stems from the fact that a public **Surface Normal Offset** property is actually getting updated in real-time whenever **Use Default Surface Normal Offset** is true. I actually wouldn't expect this. I would expect the **Surface Normal Offset** property to be whatever I set it to at all times. If I never set it, I would expect it to be 0.0f because that is the default value for float.\r\n\r\nConceptually I think the **Surface Normal Offset** property only has any meaning if **Use Default Surface Normal Offset** is false. And this mental model is supported by the inspector hiding that field when the default is in use. Therefore I don't think the default calculation should update the public property at all. I think that should just happen behind the scenes and the two should be completely unlinked from each other."""
8059,441290969,"b'In that video you\'re resizing the box with the mouse while at the same time ""placing"" it (though the ""placing"" part isn\'t shown since it\'s not being moved in any way). I personally don\'t feel that would happen very often, but calculating the bounds of a collider is not exceedingly costly so I\'m OK if you feel strongly about keeping it.'"
8059,441688275,"b'Ok, I will separate the properties.  The original intention was to give control to `UseDefaultSurfaceNormalOffset` to determine whether or not `SurfaceNormalOffset` could be set, but now I see how this could cause confusion.'"
8059,441764028,"b'What are the thoughts on adding this warning?\r\n@jbienzms and @wiwei \r\n1. UseDefaultSurfaceNormalOffset is true by default and I can see someone adding the tap to place component via script, then try to modify the SurfaceNormalOffset and then wonder why their value is not getting applied.  This is not an issue via inspector because the SurfaceNormalOffset property is hidden until UseDefaultSurfaceNormalOffset is set to false.\r\n\r\n2. Although, I also see a case where someone already knows this information and is just setting initial properties to eventually toggle between the defaultSurfaceNormalOffset and their set SurfaceNormalOffset.  Then this message in the console would be unnecessary.'"
8059,441868911,"b""Yeah I don't think that this is going to be too problematic (i.e. I think 2 is what's gonna happen) but at the same time, I don't think that this assert will hurt (and could help in case 1), so it's fine to leave in IMO."""
8179,455891160,"b""@CDiaz-MS what are your thoughts here?\r\n\r\nSometimes having an unrelated function modify other parameters under the cover (especially ones that people can set/control themselves) can be weird.\r\n\r\nConsider the following in consuming code:\r\n\r\n1. I call StartPlacement but tap to place hasn't actually started yet\r\n2. I then set AutoStart to false (thinking, hey, I already told it to start placement, so I don't need future enable/disable transitions to auto start as well).\r\n\r\nThe difference here is that the StartPlacement call itself is really a one time thing (i.e. I want it to start once) but AutoStart is actually a many time thing (any time this starts, I want it to begin placement).\r\n\r\nI think that for the purposes of this though, I *think* that what you have here is fine assuming we update the docs for both (i.e. and also guide people to use StartPlacement if they actually want to cause the one time auto start, and use AutoStart for the other case)"""
8179,455966619,"b'I think overriding a public property that a user could have intentionally set to false (AutoStart) could potentially be confusing.\r\n\r\nThe following two scenarios could happen:\r\n\r\n``tapToPlace.AutoStart = false``\r\n``tapToPlace.StartPlacement()``\r\nThis works, but AutoStart is overwritten to true in StartPlacement and the user did intentionally set it to false.\r\n\r\n``tapToPlace.StartPlacement()``\r\n``tapToPlace.AutoStart = false``\r\nHere the StartPlacement is unknowingly canceled out because AutoStart was set to false.  The user does not know that the timing of a StartPlacement call could set AutoStart to true when they specifically set it to false.\r\n\r\nInstead of potentially overriding the value of a public property without the user knowing, what if we added a new private property to cover the specific scenario that StartPlacement is called before TapToPlace.Start.  This could disconnect the timing of a StartPlacement call to the value of AutoStart.\r\n\r\n'"
8179,456029828,"b""@wiwei @CDiaz-MS I agree with you that manipulating a public property could be potentially dangerous, but I made the decision because I didn't want to add another private variable. Now that you both mentioned the current proposal could be problematic I will just go ahead and add a private variable. Thanks!"""
7176,416747371,"b""Proposal that I'm looking for feedback on (@cre8ivepark, @thalbern, @CDiaz-MS, @wiwei, @davidkline-ms):\r\nSince this PR is adding ~2mb of images just for this tool, I'd prefer we somehow make those an optional import. Not sure if we move everything to the Tools package, or if we take this path, where we host our images somewhere (on the docs site?) and load them when the Toolbox is opened via the following code:\r\n\r\n```suggestion\r\n                Icon = AssetPreview.GetAssetPreview(Prefab);\r\n\r\n                imageWebRequest = UnityWebRequestTexture.GetTexture(iconURL);\r\n                imageWebRequest.SendWebRequest();\r\n                EditorApplication.update += CheckForLoadedImage;\r\n            }\r\n\r\n            private void CheckForLoadedImage()\r\n            {\r\n                if (imageWebRequest.isDone)\r\n                {\r\n                    EditorApplication.update -= CheckForLoadedImage;\r\n                    Icon = DownloadHandlerTexture.GetContent(imageWebRequest);\r\n                }\r\n```\r\n\r\nThe icon falls back to a Unity-generated prefab preview, which isn't as nice as the hand-created icons we'd be loading, but is something. That way, those without internet can still see an image."""
7176,416759213,b'Sounds great!'
7176,416760063,b'I like only loading the images (hosted on the docs site) if the toolbox is opened.  The unity generated images show the prefab turned around.  @cre8ivepark Do you know why the prefabs might show up turned around in the prefab preview?\r\n'
7176,417623598,"b""I'd vote for going with the tools package approach - I'm a bit wary of adding random calls to the internet in our toolkit, and if the concern is around the foundation package (totally valid), this really is a tool anyway (should be in the tools location)."""
7176,417727905,b'@wiwei It makes sense!'
7176,418172602,b'I just pushed a change to move the Toolbox and its related resources (images and json data) from the SDK package to the Tools package.'
7886,426058727,b'nit: The toolkit tends to prefer more descriptive variable names. '
7886,426059098,"b""Ah, didn't know you could do this. Cool!"""
7886,426067424,"b""It works well enough in this case but I _really_ wish I could specify which migration handler type to use when opening the helper. Unfortunately this inspector and the migration helper can't take dependencies on one another."""
7951,429422999,"b'```suggestion\r\n                            if (!EditorApplication.ExecuteMenuItem(""Mixed Reality Toolkit/Utilities/Migration Window""))\r\n                            {\r\n```'"
7951,429423133,b'I think there will also need to be a matching brace after the suggestion'
7951,429428463,"b'```suggestion\r\n                                EditorUtility.DisplayDialog(""Package Required"", ""You need to install the MRTK tools (Microsoft.MixedRealityToolkit.Unity.Tools) package to use the Migration Tool"", ""OK"");\r\n```'"
7712,416973988,b'missing summary comments.'
7639,406858979,"b'Looks like the XR SDK types were removed from the mapping profile. These types are only loaded and serialized in Unity 2019.3, so it might be good to make sure to reserialize this there.'"
7639,408310504,b'Updated the DefaultControllerMappingProfile.asset'
8088,443880588,"b'You may need to reserialize this one as well, to update it with the new assembly'"
8088,444438097,b'Seems like `GenericOpenVRController` is being removed. Is this intentional?'
8088,449147962,b'```suggestion\r\n      inputType: 60\r\n```'
8088,449148004,b'```suggestion\r\n      inputType: 60\r\n```'
8088,443880897,"b""I think these can be removed, since there doesn't seem to be any overridden data here. Can just use the defaults!"""
8965,527263026,b'Should this be OculusHand?'
7814,421134918,b'```suggestion\r\n  isHandsFreeInputEnabled: 1\r\n```'
8180,456060631,"b""@julenka I think this enables eye gaze = camera by default and I know that we've had plenty of conversations in the past about why this isn't good but I never remember why @keveleigh to keep me honest if I'm making this up"""
8180,456063578,"b""didn't mean to change the default reverting this change."""
7494,388613005,"b'Oof. Can we serialize these by GUID or something instead of path? Outside the scope of this PR, but potentially makes this a breaking change.'"
7494,388619883,b'good catch. i dont know on serializing via GUID. I will document the profile changes'
7494,388621464,b'will add the updating guide note in the final PR of this series'
7902,426798051,b'@davidkline-ms Will this have any unexpected side effects in other uses of this profile?'
7902,426810391,"b""This should be applied to only MRTKExamplesHub. I'll revert this change."""
8773,502597639,b'Just want to make sure these changes are intended.'
8773,502613868,"b'thanks,. no changes to the material were intended. i will fix that'"
8773,502617063,b'@MaxWang-MS fixed! nice catch'
8714,526442805,b'Looks like this file was reserialized in Unity 2019. We should keep it in the 2018 format for now.'
8714,526443902,b'I thought I managed to remove it qq...\r\nreverting'
8777,502657504,b'Woah I guess I somehow missed that this was a top-level MRTK folder. That feels SUPER weird to me. How do our .unitypackages work with that?'
8777,502662046,"b""Can it live in Services/SceneSystem? Or even wherever it used to live, but we just move them out before packaging for UPM so they aren't duplicated? Or am I missed a reason they needed to be standalone?"""
8777,502689273,b'not easily with the packaging process.... i will confirm that our unitypackage files do the right thing'
8777,502728183,b'fixed by #8780 '
8050,465293044,b'Can you explain a bit why we swapped the order here?'
8050,465316646,b'@davidkline-ms '
8050,465370753,b'I will address in a separate pr'
8050,465372876,"b'initialization needs to happen right away, otherwise profiles do not get read correctly.'"
8050,465376323,b'going to open a separate PR for the boundary system issues'
8668,494633960,b'This used to be Microsoft.MixedReality.Toolkit.Services.CameraSystem.asmdef.meta right?\r\n\r\nIt looks like the guid changed here'
8668,494640322,"b""nice catch.... i'll fix the guid"""
8271,467341681,"b'Another 2020.1, flagging just in case it was supposed to be 2020.2'"
8651,495265286,"b'```suggestion\r\n                if (TryGetProjectionOverrideComponent(out projectionOverride, false))\r\n```'"
8651,495265340,b'```suggestion\r\n```'
8651,495265436,b'Or fill in the return value description'
8651,495265515,b'```suggestion\r\n            if (projectionOverride != null)\r\n```'
8651,495265578,b'```suggestion\r\n            if (!createIfAbsent)\r\n```'
8651,495272205,"b""The only other minor thing I can think of is, even when setting to false, the projection override MonoBehaviour will still exist on the camera itself, so OnPreCull will always get called (but no-op). This is honestly probably fine, though if we wanted to be hyper senstive we could also just delete the component when turning it off.\r\n\r\nI don't have a real opinion on this, but wanted to call it out."""
8651,500639873,b'Added a space'
8651,500639969,b'Added a description'
8651,500640015,b'Added a space'
8651,500640066,b'Added a space'
8651,500642913,"b""I went up and back on this when writing the code.  I finally chose not to remove the component when ReadingMode is disabled because my completely speculative intuition on this is that an app will be turning it on and off during the app's lifetime so leaving it reduces the places where things can go wrong after it's initially created.  But I could be convinced otherwise."""
8651,506687534,"b'Since most of the interaction is on this MonoBehaviour component, can we instead treat this as a Windows-specific camera setting, like we do for the reprojection component?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/7c9fdf9a56291700dbcfd9916805c4329045d534/Assets/MRTK/Providers/WindowsMixedReality/Shared/BaseWindowsMixedRealityCameraSettings.cs#L83-L90'"
8651,506687959,"b'`ReadingModeEnabled` can be in the profile, then all other interactions can take place directly with `ProjectionOverride`'"
8651,495266810,"b""Can we include more of this function (or all of it) within the #if WINDOWS_UWP? That way when deployed to other platforms, there won't be another per-frame function call which basically no-ops."""
8651,495267241,b'Can you add a doccomment link to: https://docs.microsoft.com/en-us/windows/mixed-reality/develop/unity/unity-xrdevice-advanced?\r\n\r\nI believe that link describes the data payload here (otherwise a reader could look at this and be like what is this magic?)'
8651,495267628,"b""Speaking of which, is the StructLayout(LayoutKind.Sequential) marker important here as well? (i.e. it's on that linked site but not here)"""
8651,495267823,"b'Great comment, thanks for adding this.'"
8651,495267964,b'```suggestion\r\n            if (!EnableOverride)\r\n            {\r\n                return;\r\n            }\r\n```'
8651,495268020,b'Super nit'
8651,495269315,"b""It feels like this check should happen before line 74 right? Otherwise we'll do a bunch of work each time and end up no-oping deep within each for loop.\r\n\r\nOr is it the case that holographicCamera is mutated through some of the Camera.main or cameraPose calls?"""
8651,495269799,b'In general we use the CameraCache (because Camera.main calls I thought were just FindObjectsByTag/Name calls) - does it have to find the new main camera each time or would the camera cache suffice?'
8651,500640350,b'Put most of the code into the #if'
8651,500640904,"b""Added a link to the doc, renamed the structure to be consistent with the doc, and put in the attribute.  I think Sequential is the default but it's good to be consistent with the doc."""
8651,500641441,"b""Put in the brackets (I much prefer them too.)  For some reason I didn't look too closely at the formatting of the code from the Issue so a lot of things got through."""
8651,500641653,"b""Changed it to use CameraCache.  It just wasn't being used in the code I took from the issue"""
8651,506685507,"b'A quick note that this API unfortunately is no longer valid with the new XR APIs. The usage here is also specific to WMR, which feels weird to call in a platform-agnostic service like this.'"
8808,506729970,b'@KevinKennedy Is there a reason we have to set this on both the Unity camera and the underlying HolographicCameraPose?\r\nWould we expect / want the Unity implementation to call `OverrideProjectionTransform` when the projection matrix is changed?'
8808,506730792,"b""Also less important, but it looks like we'll be setting this on `CameraCache.Main` multiple times if `prediction.CameraPoses.Count` is greater than 1."""
8808,506738652,"b""What does this represent? Can we cache it as a `const`? Is it something we'd want configurable?"""
7652,407754000,b'nit: Do we need markers this granular?'
7652,407754058,b'nit: Do we need markers this granular?'
7652,407755610,b'Yeah some of these feel over instrumented (i.e. especially instrumenting itoa())'
7652,407769401,"b""i'll remove"""
7652,407770061,b'done'
7652,407770090,b'done'
7705,448636035,"b""Don't forget to comment this public class."""
7631,405871729,"b'Is this something we\'d want to put in the input simulation profile? That way it\'s configurable, instead of just searching the actions for ""select""? Then could be grabbed out of the profile below like `SimulateEyePosition` is on line 225.'"
7631,405875695,b'Maybe `Handedness.None`?'
7631,405878607,"b'Why not also support clicking when in articulated hands mode and the gaze cursor is active? This for example happens whenever you start the game and have no hands up (see the gaze cursor dot), or when you have no hands visible and say the word ""Select"" (or press the one key).\r\n\r\nReason I ask is becase most people will have the hands mode to be articulated, not gestures. So, if this requires the mode to be gestures, many people will not get to use or see it. It would be nice if you could just hit play and move the camera and click on things without needing to bring up the hands with the hand rays.'"
7631,405883360,b'Sounds good! '
7631,405892373,"b""So I'm noticing some actions like dragging around objects don't seem to work out of the box using the gaze provider and the select action. Will be looking more into it tomorrow. \r\n\r\nAlso I'm noticing that our HandInteractionExamples.unity scene is really small, as in, the objects are all really tiny and bundled close together. Is there a reason it's like this, as there's a bit of whiplash when trying to pan the camera around in that scene due to how _relatively_ fast you go"""
7736,416927321,"b""There's also an `IsInteractionEnabled` on the gaze pointer that might be usable here. It's managed by the gaze pointer visibility state machine and should behave a deterministic way across platforms. Can we replace `SimulateGaze` with that?"""
7736,416940611,b'missing <summary>'
7736,416945007,b'My concern with making hard changes to the gaze pointer is that it might modify old HoloLens 1 behavior (since making changes to the gaze pointer seems to get surfaced when I use the gestures input simulation mode)'
7736,416964232,"b""I don't think we'd need to make any changes to the gaze pointer, but instead only simulate gaze here if `CoreServices.InputSystem.GazeProvider.GazePointer.IsInteractionEnabled` is `true`. I _think_ this case should be handled by that property already"""
7736,416975474,b'Might be interesting to see how using that value with `isSimulatingGaze` in `SimulatedHandDataProvider` affects things too.'
7736,417109741,b'Hold up...is this ever set to true? It looks like it is only getting set as false in the code.'
7814,421129536,b'```suggestion\r\n        /// Enable hands free input\r\n```'
7631,407578508,"b""holdAction doesn't seem like the appropriate name here. GripPoseAction maybe?"""
7631,407611045,"b""Actions here should be obtained from the controller mapping profile. We shouldn't define actions for these mappings in code like this. If you're seeing a case where mappings are being obtained without the actions expected from the profile, we should figure out the issue there (serialization maybe, if you're adding a new handedness option)."""
7631,407611317,"b""This feels odd to me. The base class should handle this case. Possibly related to my other comment, if we're looking to add a new handedness to this class."""
7631,407729309,"b""Yeah I've modified these hacks to properly use a new controller input profile definition."""
7631,407730005,b'Modified to properly use input profiles'
7631,407579413,"b""It looks like you're removing the check for gesture blending will this cause the select gesture to happen immediately, rather than after a small delay? Are there any other side effects of this?"""
7631,407583740,"b'Since this is a new (and exciting!) behavior that you can left click to select items, please document it in the [input simulation documentation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSimulation/InputSimulationService.html) as well as the 2.4 release notes. A GIF for the release notes would be nice.'"
7631,407615464,"b""Yeah the main purpose of this was to remove the dependency of the IsPinching flag to the gesture animation. There shouldn't be any other side effects based on the unit testing"""
7631,409930596,"b""I think this might want to be\r\n\r\n`private bool isSimulatingGaze => !isSimulatingLeft && !isSimulatingRight && !IsAlwaysVisibleLeft && !IsAlwaysVisibleRight;`\r\n\r\nI'm able to get into a slightly weird state when Y or T to toggle the hands `IsAlwaysVisible*`, where the hand is present and its pointers registered, but the simulated GGVPointer is also active. In this state, the gaze cursor disappears since another source is active (and so the gaze pointer is inactive), but I can still click using the simulation."""
7631,409932344,"b""Yeah this didn't break locally and in the initial set of /azp runs. I'll make a PR for this to see if it can fix it. """
7600,400538958,"b""How noisy do markers like this end up being? There are some methods in here that I'm not sure how useful profiling them would be. I feel like putting in too many markers could blow up the profiler's list and become harder to be useful."""
7600,400542697,b'not sure. good question'
7600,400552936,"b""let's back them off until we know they tell us somethin"""
7606,401973496,b'Does removing this change the default value for all other pointers too (like the hand rays)? Do they need to be explicitly set to true elsewhere now?'
7606,401978350,"b""I think removing this means we might want to double check any component that assumes things about this value. Looks like most of them cache the incoming value and re-set it after the interaction, but there's at least one that just blindly sets it back to `true`:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/18fe32fd8d627216754885c7fecf4cf2434aa07d/Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs#L2082"""
7606,401979759,"b""By default the variable value is set to true in the base pointer, so we don't need to explicitly initialize it for any of the other pointers"""
7606,401985718,b'Yeah I looked at this instance and saw it was an experimental feature. I changed its behavior to more closely mimic the HandInteractionPanZoom and the CanvasUtility and cache the previous set value.'
7625,405258398,b'I think this also ends up fixing https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4719'
7625,405288490,"b""Great suggestion! It would be good to file an issue and reference it here so we don't forget to do it in the future."""
7625,405288622,"b'It would be great to file an issue and reference the issue number here, to ensure we do not forget.'"
7625,405288742,"b'It would be great to file an issue and reference the issue number here, to ensure we do not forget.\r\n\r\n'"
7625,405331526,b'I believe this one is tracked by https://github.com/microsoft/MixedRealityToolkit-Unity/issues/3758'
7625,405710191,b'Being tracked by #7629 now'
7625,405710989,b'Tracked by #7629 now'
7625,405792236,"b'Might be good to do an assert of the assumption here, or print a warning message if somebody is using sphere overlap but the pointer is not a grab pointer. '"
7625,405813131,"b""There doesn't seem to be a good way to extract that exact pointer implementation from the interface so shelving this for now."""
7625,405823007,"b""In the past we've done checks like `is GrabPointer`"""
7625,405861174,"b""@davidkline-ms this has a side effect of adding N number of spherecasts per frame, where N is the number of prioritized layer masks passed by the caller - I know that some consumers have been seeing some performance issues associated with per-frame raycasts (I think they were fairly expensive).\r\n\r\nThere's a note on the other place that calls OverlapSphereNonAlloc that it should only get called once per frame, but from this change + the existing code, the number of times I think is actually 3*N (where N = size of array)."""
7625,405861889,"b""For totalNumColliders, can you help explain a little more about why we're tracking the total number of things returned from OverlapSphereNonAlloc? I'm assuming that OverlapSphereNonAlloc uses the entire buffer (of size maxQuerySceneResults) instead of starting off at the previous totalNumColliders (i.e. I'm assuming it isn't just looking from the last set value in the array and honoring the fact that there are existing elements).\r\n\r\nThis type of function looks to be a general buffer passing one, which tend to not (at least, they really shouldn't) have memory of how much of the buffer is already used (usually when you pass a buffer you can assume that you can use the entire buffer)."""
7625,405864809,"b""Ah yeah, in this case it's at-worst N spherecasts per frame, but fewer if we hit something at a higher priority raycast (it returns early in this case). But, the at-worst case is actually probably most of the time, when nothing is being hit."""
7625,405882494,"b""Actually, this code will only run when a sphere pointer is already near a grabbable object, so it's guaranteed to be near something. QueryScene only runs if interaction is enabled on the pointer, which is only true if the pointer is near a grabbable object.\r\n\r\nBut still, there is some redundant sphere casting going on, both in this code, and in the code that was there previously. I liked @RogPodge 's suggestion to cache the results from SpherePointer.OnPreSceneQuery. """
7625,405894811,"b""the totalNumColliders is mainly used to allow us to track and potentially issue the warning on lines 1243 through 1246. It's to ensure we have the same behavior as before when we only did 1 spherecast on  the one hardcoded layermask, but generalized to potentially multiple sphere casts on multiple different layermasks"""
7625,406549899,"b""given that the numColliders queried per raycast is what we care to check, the counter for tracking the total number of colliders is a bit misleading. I'll clean this up """
7646,406973849,"b""Was this change intended for this PR too?\r\nIf so, do you happen to have perf measurements before / after? Looking at the code, I'd expect this to be better, but was wondering to be sure."""
7646,407014102,"b'It was, but i forgot to add it to the description. :/\r\n\r\ni dont have before / after. anecdotally, the partner we tested this change for states it is an improvement.'"
7646,407566103,b'added comment to description'
7712,413416470,"b""Instead of assuming this is an `IMixedRealityNearPointer` and reaching directly into its methods, would it be possible to instead set the pointer's ray to align with this grasp axis? That's how we use the `NearGraspPoint`, and right now just use `Vector3.forward` as the direction:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/ee6cbf9883b311b8f8c3f725d885bf6a051818d1/Assets/MRTK/SDK/Features/UX/Scripts/Pointers/SpherePointer.cs#L130\r\n\r\nThen, like where we use the ray's origin for the `OverlapSphereNonAlloc` point, the direction could be used at this point:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/9fc72f2c79a36b346724ac42fbbf6d3a5fc5a702/Assets/MRTK/Services/InputSystem/FocusProvider.cs#L1274"""
7712,416974756,"b'Why is the cone overlap calculation the same as the sphere overlap calculation, in this case? I would expect the cone overlap to be different.'"
7768,419755127,"b""I think this should be able to be updated to the following, and you can remove the `var nearPointer = (IMixedRealityNearPointer)pointerData.Pointer;` line, so we aren't checking type / casting twice.\r\n\r\n\r\n```suggestion\r\n                    if (pointerData.Pointer is IMixedRealityNearPointer nearPointer)\r\n```"""
7768,419759277,b'```suggestion\r\n```'
7768,419763734,"b""What does this change do? I think most (all of the ones I looked at, at least) of our near pointers use `IsNearObject` as part of their `IsInteractionEnabled` checks. Do we care if a near pointer is near an object but not able to interact with it due to some other part of the `IsInteractionEnabled` check? My gut says we wouldn't, but maybe I'm missing something"""
7768,419775739,"b""the near pointer's we have are the sphere pointer and the poke pointer. IsNearObject is used to toggle between near and far interactions, which is slightly different from IsInteractionEnabled. As such, the NumNearPointersActive count should go up if the IsNearObject flag is true. \r\n\r\nThe bug this addresses is when an articulated hand spawns near an object, but not quite in the range to trigger IsInteractionEnabled. In these instances, the gazecursor would remain on the screen, even though the cursor won't be on the screen if you spawn the hand far away from the object and then move closer to it"""
8054,440288492,b'Is this change functionally doing anything? Looking at the code it looks like IsInteractionEnabled already has diff detection anyway so it looks like this change is just cleanup/goodness.'
8054,440291357,"b'There was an edge case we could get where when the application was paused and then resumed, the gaze cursor would stay active on the screen even when new hands were brought up (this is because we now disable and then enable all services on application pause) '"
8118,448017024,b'TIL c# has this kind of lazy evaluation\r\n\r\nso cool'
8118,448228319,"b'@RogPodge from C# 7 you can even do this:\r\n```\r\n/// <inheritdoc />\r\n        public IEnumerable<T> GetPointers<T>() where T : class, IMixedRealityPointer\r\n        {\r\n            foreach (var pointer in pointers.Values)\r\n            {\r\n                if (pointer.Pointer as T typePointer)\r\n                {\r\n                    yield return typePointer;\r\n                }\r\n            }\r\n        }\r\n```'"
8894,524459028,"b""Is this assertion always true? For example, if I decide to put a specific UIRaycastCamera in my scene before building, so MRTK doesn't have to create one at runtime, it seems like this assertion will fail."""
8894,524564556,"b'I did not know that there would be a reason for someone to do that, so will remove the assertion.'"
7594,399585684,"b""This (along with other eye tracking properties that appear removed) isn't removed but moved to the eye gaze implementation region lower down."""
7606,402486757,"b""Re: @cre8ivepark's comment\r\n\r\n```suggestion\r\n        private bool lockCursorWhenFocusLocked = true;\r\n```"""
7606,402625968,"b""Is there a way to set this property from code? Looks like it's a private serialized property with no getter / setter, but maybe I missed something? Following MRTK principle [Support configuring both in editor and a runtime](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#support-configuring-components-both-in-editor-and-at-run-time) """
7606,402634288,"b""Since this value is only used on startup when the pointer is created, I think we should encourage people to use the pointer's existing property at runtime (via `GazeProvider.GazePointer.IsTargetPositionLockedOnFocusLock`) instead of exposing the same concept twice."""
7606,402637083,"b""@RogPodge might be worth adding a note to that effect in the docs somewhere, if that's the path we go"""
7619,404312175,"b""Why's this being removed?"""
7619,404324537,b'accidentally deleted. thanks for the catch!'
8050,465293150,b'Can you leave a comment about why we both check against null and also against null?'
8015,436089029,"b""Nit: I don't think that we currently use a lot of local functions in this codebase - I think that I'd like to have this be a 'regular' private (i.e. non local) for now so that we can maybe have a discussion first on what we think about this)."""
8015,437700585,"b'I just updated this in the fork, gonna push this in.'"
8015,437723142,"b""Need to pass `pointerId` as a parameter now that this isn't an inline method"""
8015,438305970,b'Pushed an update to pass the pointerId'
8015,438340668,"b""One thought I just had was if the other `OnSourceLost` path properly handles this released state. I think there was an assumption here that this script would receive this event first, mark the pointer data as released, then forward that along to the UI.\r\n\r\nActually, looking through the code now, I think even if these go in the expected order, we'd likely still remove the pointerData from `pointerDataToUpdate` before sending the released event. Fixing that is probably outside the scope of this PR, but I wanted to call it out."""
8015,438341494,"b'Do you think we even need this assert anymore? The pointerId being removed before we get here feels like an ""allowed"" scenario, especially now that you fixed the bug around accessing a key that was already removed.'"
8015,438939016,"b""We could probably get rid of this - I'm guessing that @matthejo did this because removing an assert in code that you don't directly own is a little scarier than augmenting it to allow for a specific case that you are aware that can happen"""
5613,315869949,"b""I don't think this was addressed - there's no link to the profile\r\n\r\n---\r\nIn reply to: [314423944](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5613#discussion_r314423944) [](ancestors = 314423944)"""
5613,315871823,"b'I think that this is just a duplicate of the stuff in Getting Started, but without as much detail - can we omit this addition? i.e. just revert README.md to what it was?'"
5732,315948552,"b'```suggestion\r\n    > If additional extensions had been installed, they may need to be re-imported.\r\n```'"
5732,315948706,"b'I don\'t think we should just say to take care when deleting the folder right? i.e. we need to be more specific than ""take care"". Basically if folks have already copied over extensions into this folder, to back up this folder, and then re-import the extensions after updating to the latest version'"
5732,315948781,b'Add a link to the solver breaking changes part to explain how to migrate'
5731,315952335,"b""I feel like the old stuff had an interesting tidbit about only recieving events when in focus - it feels like that's still an important part to capture.\r\n\r\nWe may not need to add the part about why the old global thing sucks but the new thing is awesome, but the part that talked about how to expect to get them seems to be useful to keep around."""
5731,315952553,"b""Do you know.. if it's all matching components, or the first one that it finds? I think that we stop when finding the first one that handles it."""
5731,315952874,"b'""registered global input handlers"" consider adding a link to the section below on global events)'"
5731,315954121,"b""It would be interesting to note the short-circuit functionality - i.e. if someone is handling it at any of these places, it won't call the next step."""
5731,315954275,b'Should we also show the registration for global speech event? Otherwise we should add the note that this will only work if the person is looking or pointing at the object'
5731,315954401,"b""It might be worth caveating that by handling an event, it will no longer be delivered to other things (i.e. if the global thing handles it, it won't get delivered to objects in focus)"""
5731,315955032,"b""The existing line is the ultimate teaser... nothing for you to change here, I just wonder if it would have been better if we deleted this. It doesn't give enough useful stuff for people to operate on."""
5731,315955167,b'It feels like this is a slight duplicate of the stuff already in the input doc above - thoughts on linking/consolidating or otherwise reducing copy pasta?'
5736,316242466,"b'Do you know if running this twice will cause it to add two elements (which are both this thing?)\r\n\r\nI think when I did the capability thing (i.e. gaze input) I had to check to see if it existed before adding it, otherwise it would actually add it twice.'"
5731,316247803,"b""Yep - that's what I'm referring to - this text seems to suggest it will keep going, but it can (and sometimes does) stop early"""
5731,316248229,"b'By handling, I guess I meant marking the event as used'"
5731,316249902,"b'The important tag shows up later, after the reader has already gone through the interface information (and potentially already started trying to implement those interfaces). Moreover, the important comment shows up in the section called ""registering for global events""\r\n\r\nBasically, I think that still having the important tag stuff up here about requiring focus is still good to tell people before telling them about the interfaces (i.e. \r\n\r\nstep 1) tell people how to start listening for events in general\r\nstep 2) tell people exactly which interfaces for which events'"
5750,316920144,b'Thanks for calling that out - I ended up caching the last vertex array (to avoid having an additional copy each time).'
5766,317683369,"b'```suggestion\r\n        /// <param name=""t"">time in seconds at which to destroy GameObject if applicable</param>\r\n```'"
5746,317689061,"b'>(); [](start = 89, length = 3)\r\n\r\nNit: I think it should be possible to just change these four lines to:\r\n\r\nHashSet<IMixedRealityService> serviceList = new HashSet<IMixedRealityService>(MixedRealityServiceRegistry.GetAllServices());\r\n\r\n'"
5746,317689925,"b""There are a few instances here where we use underscores in naming - it's not quite consistent with the rest of of this file (or the rest of the MRTK) - it would probably be good to swap to inputSystemDataProviderAccess (same for some of the other ones down below)"""
5746,317693173,"b'Another idea to reduce future copy pasta is to have something like this:\r\n\r\nvar dataProviderSystem = new IMixedRealityService[] \r\n{ \r\n    CoreServices.InputSystem,\r\n    CoreServices.SpatialAwarenessSystem,\r\n}\r\n\r\nforeach (var dataProviderSystem in dataProviderSystems)\r\n{\r\n   var dataProviderAccess = dataProviderSystem as IMixedRealityDataProviderAccess;\r\n   foreach (var dataProvider in dataProviderAccess .GetDataProviders())\r\n                {\r\n                    serviceList.Add(dataProvider);\r\n                }\r\n}\r\n\r\n'"
5746,317694422,"b'>Remove from list [](start = 66, length = 16)\r\n\r\nNit: ""Remove from the list so that the facade is not-duply-created in the following serviceSet enumeration loop.'"
5746,317694676,"b""Just to make sure the comment captures the why and not just the what (i.e. it's obvious that it's removing from the list, but it's a little less obvious until you read the rest of the code why that's being done)\r\n\r\n---\r\nIn reply to: [317694422](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5746#discussion_r317694422) [](ancestors = 317694422)"""
5746,317694990,"b""I'm guessing that depending on which goes in first, this PR will probably be updated to use the common thing here right:\r\n\r\n[https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5766](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5766)"""
5594,317825300,"b'>public class InstantDwellSample : BaseDwellSample [](start = 4, length = 49)\r\n\r\nNit: This class could use a doccomment (i.e. ""Dwell sample that has no dwell delay"")'"
5594,317825403,"b'> public class ListItemDwell : BaseDwellSample [](start = 3, length = 45)\r\n\r\nNit: Would also be good to have a class comment for this class as well'"
5594,317825907,"b'>isDwellEnabled ? this.dwellOffColor [](start = 37, length = 35)\r\n\r\nSuper nit: It is weird seeing isDwellEnabled ? this.dwellOffColor - maybe it would be worth adding a little comment saying that buttonBackground and dwellVisualImage should have opposite colors or something?'"
5594,317826604,b'DwellIntended is fine by me - I think that just adding the comments is really valuable and helps provide information on how things work'
5594,317827047,"b'>This picks up the same unity as TimeToCompleteDwell [](start = 86, length = 51)\r\n\r\nNit: I\'m not really sure what this sentence is saying (i.e. it it supposed to be ""the same value as TimeToCompleteDwell? or that Unity sees the same as..."")'"
5792,318159816,"b""It would be better to point people to the upgrade instructions from the previous versions (i.e. remove old, delete library, etc) - otherwise people who grab this will be confused when simply replacing .unitypackage things don't work out.\r\n\r\nSo I think here just add a link to the space down below (i.e. (link)[#Upgrading-projects-to-2.0.0)"""
5792,318160559,"b'@thalbern, FYI'"
5797,318286290,"b'Yep, the default has everything enabled.\r\n\r\nI think that generally speaking the default one has all features enabled (see teleport, boundary, etc), so I think this goes well with that philosophy.'"
5797,318286514,"b""Mainly because from a usability perspective, the reason people wanted to have this was because they wanted to have one experience in editor, and another one on player - i.e. it wasn't that they wanted to have different settings for different player platforms.\r\n\r\nThis is a much simplified setting as well (I don't have to select ALL of mac/linux/windows editor settings)\r\n\r\nI think there could be a world in which we want to have per-platform settings, and I think when we get signal that this is what people want we can do that, but that comes at the cost of more complexity - until then I think it makes sense to do the more understandable thing."""
5799,318649274,b'oh myyyy'
5799,318655719,"b""oh myyyy yeah I don't think I actually ran that test :S\r\n\r\nit's a secret don't tell anyone...."""
5811,319145156,"b""This should probably be a sub-item in Architecture, not it's own top level thing - I think this needs to be spaced over a few more.\r\n\r\nIt's already in the architecture folder and is about architecture stuff."""
5811,319148174,"b"">Creating a data provider [](start = 12, length = 24)\r\n\r\nIt's weird to me that there are two different entries that have the same name (i.e. create a data provider) - I know that they are placed within the context of the spatial/input sections... but maybe it's fine? I'm curious what others' thoughts are here."""
5811,319148266,"b'>; [](start = 18, length = 1)\r\n\r\n: instead of ;'"
5811,319149199,"b'It could also be worth noting that these can also be referred to as ""device managers"" when a dataprovider is used within the context of the input system.'"
5811,319149779,"b"">data to a Mixed Reality Toolkit service [](start = 60, length = 39)\r\n\r\nIt's more than just data right? It's really about providing data and functionality within the scope of a mixed reality service. i.e. the WMR data provider/device manager actually does interesting interfacing with the underlying WMR system and just providing data doesn't feel like it provides justice to what it does."""
5811,319153561,"b'This leads to the immediate question of ""how"" but it doesn\'t really provide guidance on how (maybe like to the example down in the Input section down below?)'"
5811,319155971,"b""Per @Alexees comment, I think it would make sense to use CoreServices here instead of this (it's a lot cleaner looking and using)"""
5811,319157931,"b'Nit: The ""more information"" aspect is a bit misleading (it\'s not really more information about input data providers in general, it\'s about how to create a data provider)'"
5811,319159729,"b'It might be interesting to have the sample show what people should expect to get with the inbox data provider, which is just a single one - showing the ""generic hey what if you have 10 different ones"" isn\'t as helpful because it\'s not what 99% of people are going to hit).\r\n\r\nAlso consider just linking to the existing usage code in the docs that shows how to access these observers - I think this duplicates stuff.'"
5811,319160544,"b'While this sample is more helpful than no sample, it doesn\'t really tell people how to accomplish a task - i.e. ""what is desired work?"".\r\n\r\nIt might be helpful to instead point to other usage docs (outside of the architecture folder) that tell people ""hey, here is how you get the xbox controller data"" or something like that).\r\n\r\nI think my general point here is that there are still cliffs in this doc (i.e. I don\'t know what to do with this list of data providers)'"
5811,319160716,"b'>  [](start = 32, length = 1)\r\n\r\nNit extra space'"
5811,319161062,"b""This feels like a subjective statement, and doesn't really add a lot of value here. \r\n\r\nIt would be better to state WHY you should care about this page (i.e. if you want to add support for a new input device, or want to bring up input support on a new platform)."""
5811,319162634,"b"">device manager [](start = 17, length = 14)\r\n\r\nWe should really be consistent with our usage of terminology - the name of this file and the links to it mention it's about creating a data provider, but then all other large headings besides the first uses different terminology. Or maybe just calling out the name issue maybe in a more bold [Note] section?"""
5811,319162807,"b'>WidnowsMixedRealityDeviceManager [](start = 11, length = 32)\r\n\r\nNit spelling'"
5811,319162887,"b'>MixedRealityToolkit.Providers\\WindowsMixedReality\\WindowsMixedRealityDeviceManager.cs [](start = 66, length = 85)\r\n\r\nThis sentence is saying the same thing as line 8'"
5811,319163519,"b""I don't think that these sentences add that much value:\r\n\r\n the following code specifies\nthat the class uses the [`BaseInputDeviceManager`](xref:Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager) and implments the\n[`IMixedRealityCapabilityCheck`](xref:Microsoft.MixedReality.Toolkit.IMixedRealityCapabilityCheck) interface.\r\n\r\nI think that it's fairly obvious from the code that this class uses BaseInputDeviceManager and implements IMixedRealityCapabilityCheck\r\n\r\nI think we could just delete this paragraph."""
5811,319167862,"b""This interface is mentioned, but maybe the question here is if there's a new capability that this supports... how would we recommend folks deal with this?"""
5811,319168769,"b'And also, it would still be useful to provide a code sample here saying ""hey, let\'s say your data provider is designed to integrate with articulated hands, here\'s how you could report supporting the capability""\r\n\r\n---\r\nIn reply to: [319167862](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5811#discussion_r319167862) [](ancestors = 319167862)'"
5811,319168869,"b'>lass  [](start = 62, length = 5)\r\n\r\nExtra space before ,'"
5811,319170467,"b"">This is an optional step [](start = 24, length = 24)\r\n\r\nDo we even want to mention the optionality here? It seems like if we don't do that there aren't any defaults and it sets people up for a worse experience."""
5811,319170771,"b""The worst case is that someone reads that it's optional and they skip it, and then had a worse experience. We can mention the optionality of this in the doccomments of the attribute itself so that the information is there, but our how-to docs should really set people up for overall success.\r\n\r\n---\r\nIn reply to: [319170467](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5811#discussion_r319170467) [](ancestors = 319170467)"""
5811,319170976,b'Link to the section on profiles instead of re-defining it here.'
5811,319172741,"b"">SpatialObjectMeshObserverProfileInspector [](start = 114, length = 41)\r\n\r\nIt feels like our examples should probably use the same scenario when showing the profile and inspector - it feels weird that we're showing a profile and then an inspector for a totally different profile - for a reader who is looking at both of these it would probably flow better if they referred to the same thing."""
5811,319172948,"b'>imspector [](start = 74, length = 9)\r\n\r\ninspector.\r\n\r\nConsider doing a pass with vscode + spell checker to see if there are any other cases like this.'"
5811,319173287,"b'>For more information, [](start = 0, length = 21)\r\n\r\nSame comment on this - ""for more information"" is a bit misleading - this should be the page that has the more information, this link is speicfically about if you want to extend/add another provider.'"
5811,319174272,"b"">flexible [](start = 56, length = 8)\r\n\r\nSimilar comment to the other place, flexible is a subjective word and probably shouldn't be used in objective docs."""
5811,319174446,"b'>it [](start = 115, length = 2)\r\n\r\nNit: space after )'"
5811,319184294,"b'Is this just a general statement on like, providing settings/good software engineering? I think that if someone is adding their own extension they will also know to expose that functionality so that they can use it (so it might not be necessary to state this)'"
5811,319184416,"b""Because if they don't expose it they can't use it right\r\n\r\n---\r\nIn reply to: [319184294](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5811#discussion_r319184294) [](ancestors = 319184294)"""
5811,319184653,"b""Again, I think this sentence isn't super useful because it explains what is fairly obvious code (this class extends other classes)"""
5811,319184720,"b'>itprovides [](start = 93, length = 10)\r\n\r\nNit space'"
5811,319189231,"b'> updated [](start = 64, length = 8)\r\n\r\nWhat Update events are these referring to? The code above calls HandleEvent which seems to suggest it raises events of some type, but having some disambiguation here would be important in knowing what the difference is.'"
5811,319190144,"b'> This is an optional step  [](start = 23, length = 26)\r\n\r\nSame comment on the optionality here (would probably be better to remove this optionality comment, so that we can set people up for success). Otherwise the risk is that they read ""it\'s optional"" and they decide not to do it'"
5811,319190423,"b'>MixedRealityInputSimulationProfileInspector [](start = 117, length = 43)\r\n\r\nActually.... reading this - I did you copy paste swap the inspector/profile sections between the two different createdataprovider pages? It feels like they are both mismatched'"
5811,319190573,"b'>awarenes [](start = 11, length = 8)\r\n\r\nNit spelling (same comment about just using vscode spell checker)'"
5811,320429461,"b"">SpatialObjectMeshObserverProfileInspector [](start = 13, length = 41)\r\n\r\nI think that this should still be related to the input simulation profile, not the spatial observer\r\n\r\nOtherwise this part doesn't make sense to me:\r\n\r\n[CustomEditor(typeof(MixedRealityInputSimulationProfile))]\npublic class SpatialObjectMeshObserverProfileInspector"""
5854,320465637,"b"">GetReceiver [](start = 17, length = 11)\r\n\r\nIt's also odd to me that it returns the first found of a certain type (meaning if I add two of the same type, it will never return the other one) - this particular type of API surface (first one wins) is of an odd design (usually you want to provide deterministic way of getting a specific instance).\r\n\r\ni.e. if I call AddReciever twice and then lose the second one, there's no way for me to get the second one using these typical APIs (I guess I could iterate over the events).\r\n\r\nMaybe there should be an overload that returns all that match (keeping the singular case for convenience/typical usage)? Or should there never be multiples there?"""
5854,320466685,"b"">th [](start = 21, length = 2)\r\n\r\ntestHand\r\n\r\nIt doesn't take that many more characters and is more readable."""
5854,320467691,"b'If we already have coverage of this in another area feel free to ignore this comment - note that it might be better to have another line like:\r\n\r\nAssert.True(didHover, ""Interactable did not receive hover event"");\nAssert.False(didUnHover, ""Interactable shouldn\'t have received unhover event"");\r\n\r\nAfter looking at the interactable, to show that the right operations are occuring in the right way.'"
5854,320468834,"b""The test method is a bit long, but it's within the scope of the naming of this function, and the code is readable within this test as well, so it's fine IMO.\r\n\r\nThe other thing to consider is having each thing in its own test (i.e. TestOnGrab, TestOnFocus)... etc, that way if only one thing fails, the other tests at least get to run, and you get more granular information about what failed.\r\n\r\n---\r\nIn reply to: [320324131](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5854#discussion_r320324131) [](ancestors = 320324131)"""
5854,320468979,"b""Actually yeah, the second suggestion is probably better, but it's up to you.\r\n\r\n---\r\nIn reply to: [320468834](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5854#discussion_r320468834) [](ancestors = 320468834,320324131)"""
5853,320499231,"b""What are your thoughts on adding this to the end of the array, instead of the beginning? I'm curious if someone out there is currently using this array to index into position 0 (they expect AXIS_1) but since we're hijacking that existing position, they get broken.\r\n\r\nIt might be possible to do static analysis on others' code to see if they're using it that way but, if at all possible, at the end is safest (same reason why we add enum values at the end rather than the beginning even if they logically make sense at the beginning)"""
5853,320499964,"b"">ToggleLeftHand [](start = 20, length = 14)\r\n\r\nNit: Can you also add doccomments to these four functions (i.e. toggle/reset/*)?\r\n\r\nMainly because ToggleLeftHand toggles the visibility (which doesn't come up as a word in the function name) (otherwise, is it toggling its tracking state/not tracking state? - it's a bit ambiguous)\r\n\r\nSame comment around reset (i.e. what is it resetting? visibility state? tracked state? simulation state? all up state?)"""
5853,320500796,"b"">KeyCodeNames [](start = 21, length = 12)\r\n\r\nThis isn't used in this constructor - was this supposed to be used? (Or can we delete this?)"""
5853,320501732,"b'> public KeyType BindingType => bindingType; [](start = 7, length = 43)\r\n\r\nNit: Consider adding a space after BindingType'"
5853,320502439,"b"">internal [](start = 8, length = 8)\r\n\r\nWas this supposed to be public? I haven't seen this private/internal combination in the codebase yet."""
5853,320502954,"b'>((KeyCode)code).ToString(); [](start = 32, length = 27)\r\n\r\nAnother thing to consider in the future:\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/system.enum.getname?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.enum.getname?view=netframework-4.8)\r\n\r\nFor this, probably not worth changing to that link.'"
5853,320505346,"b'> Left = 0, [](start = 11, length = 10)\r\n\r\nNit: I think that our guidelines say to include a None value like:\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/enum](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/enum)\r\n\r\nI think we can go either way, it would be good to be consistent within the same file (i.e. KeyType.None and MouseButton.None). If only because this would also let us return MouseButton.None from the ""TryGet..."" function down below in failure case (instead of returning a ""valid"" mouse button)'"
5853,320507000,"b'>MixedReality [](start = 20, length = 12)\r\n\r\nCan you also add a link/mention on this issue:\r\n\r\n[https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5772](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5772)\r\n\r\nAnd also a new section here:\r\n\r\n[https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Updating.html](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Updating.html)\r\n\r\nTo describe the changes here (i.e. deletion hand yaw/rotate controls and how to use that functionality in the new world?)\r\n'"
5853,320507097,"b""It's cheaper for us to do this as we go along the month than trying to write this all at the end (and potentially forgetting some stuff as we go)\r\n\r\n---\r\nIn reply to: [320507000](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320507000) [](ancestors = 320507000)"""
5853,320507671,"b'Ah... this was done to keep some consistency with the existing InputSimulationMouseButton, I guess nevermind then.\r\n\r\n---\r\nIn reply to: [320505346](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320505346) [](ancestors = 320505346)'"
5853,320508169,"b'>defaultHandSimulationMode [](start = 35, length = 25)\r\n\r\nIs it possible to FormerlySerializedAs here? It looks like this still reasonably equivalent.'"
5853,320508621,"b'>Controls how mouse look control is activated [](start = 18, length = 44)\r\n\r\nI think this tooltip was copy pasted from above (but should reference hand rotaation instead). '"
5853,320509140,"b""Super nit: Move these into an else {} statement of resetHand - no need to set them if we're just gonna reset them to identity."""
5853,320509731,"b'>// if (GUI.Button(position, KeyBinding.CodeToString(code.intValue))) [](start = 12, length = 68)\r\n\r\nNit: I think dead code that was commented out right?'"
5853,320510460,"b""If there's any way to preserve the file history here that would be great -this is showing up as a pure add/delete (meaning you lose history at this change). Was trying to review this against the old (and it's hard because it shows up as a pure add)"""
5853,320511622,"b'>private KeyBinding handRotateButton = KeyBinding.FromMouseButton(KeyBinding.MouseButton.Right); [](start = 8, length = 95)\r\n\r\nWhat are your thoughts on adding a comment regarding the priority order of hand rotate vs camera rotate? Otherwise the question here is around ""hey, both the hand and camera have the same mouse binding"" - AFAICT the camera wins out if both try to be active.'"
5853,320511769,"b""Ah wait, it's the other way around.\r\n\r\n---\r\nIn reply to: [320511622](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320511622) [](ancestors = 320511622)"""
5853,320512462,"b'It feels like this comment should apply to the else statement (could we move it closer there?).\r\n\r\nOtherwise it looks like the comment says ""we shouldn\'t do this"" and then the code immediately does it (in what seems like the typical/first thing that is read)'"
5853,320512709,"b"">private const float MouseWorldDepth = 0.5f; [](start = 8, length = 43)\r\n\r\nWhat's the significance of the .5 number? (and is it designed to also match the other .5f values down below?)"""
5853,320513139,"b'>InputSimulation [](start = 53, length = 15)\r\n\r\nI think this file is still called ""InputSimulation.Editor"" but it doesn\'t match the name of the asmdef - I think this file should be renamed to InputSimulation.Implementation'"
5853,320513288,"b'>/// <param name=""wantsJumping"">Show the cursor</param> [](start = 4, length = 54)\r\n\r\nDelete this line (I think it was copy pasted from the other wantsJumping location down below)'"
5853,320513649,"b"">// any kind of click will capture focus [](start = 24, length = 39)\r\n\r\nI think the comment here and the code here don't seem to match up - it looks like it's getting keydown for the rotation key specifically, not any type of click. """
5853,320515319,"b"">MouseLookButton [](start = 39, length = 15)\r\n\r\nI don't think that MouseLookButton is defined - was this supposed to be something else?"""
5853,320515680,"b"">left, right or middle [](start = 48, length = 21)\r\n\r\nWas this a comment from an older iteration? The helper function doesn't seem to have anything specific to left/right/middle mouse button"""
5853,320515729,"b'Same comment on the thing down below:\r\n\r\n// if mousebutton is either control, shift or focused\r\n\r\n---\r\nIn reply to: [320515680](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320515680) [](ancestors = 320515680)'"
5853,320516519,"b""Why is this (and the function down below) using a == 0 check (if it's only called internally in this class and is gated on transitions - i.e. false -> true, true->false?). It seems like this should only transition from 0 -> 1 and then 1 -> 0 """
5853,320517022,"b"">#if UNITY_EDITOR [](start = 4, length = 16)\r\n\r\nThis asmdef looks to be editor-only - I'm curious why UNITY_EDITOR is specicially needed here (would be worth adding a comment here for that reason)"""
5864,321359450,"b""Defining them all would be the best.\r\n\r\nI think in order of things of desirability:\r\n1. Having documentation there.\r\n1. Having no empty documentation text.\r\n1. Having no documentation at all.\r\n\r\nThe reason being, having just empty doc text is the ultimate teaser, and also doesn't actually affect the generated docfx docs (I compared a before/after generated thing and it's the same API docs)\r\n\r\nThe hope here is that people will just update their things to either delete them (i.e. <returns></returns> where it's obvious what it returns) or update them (param names).\r\n\r\nThe main goal of this is to move from 3 to 2"""
5890,321809268,"b"">// todo: this looks like it could be cleaned up / improved [](start = 12, length = 58)\r\n\r\nPlease get rid of TODOs or have an issue tracking them.\r\n\r\nGenerally speaking I haven't seen TODOs ever actually get fixed and context associated with them gets lost."""
5890,321809660,"b"">// If a mouse is present, and we do not yet [](start = 12, length = 43)\r\n\r\nI'm waiting with bated breath\r\n\r\nWe do not yet?!!?"""
5890,321811241,"b"">mouseDeviceManager [](start = 24, length = 18)\r\n\r\nSomething I don't quite understand - if device managers are creating controllers, how is that this could be null?"""
5890,321811486,"b""I see some other null checks sprinkled around the code, and I know it's consistent with that, but I don't really understand why that's necessary in the first place.\r\n\r\n---\r\nIn reply to: [321811241](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5890#discussion_r321811241) [](ancestors = 321811241)"""
5908,322323887,b'```suggestion\r\n                   UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n```'
5908,322326552,"b'```suggestion\r\n                   UNITY_TRANSFER_VERTEX_OUTPUT_STEREO(i[idx], o);\r\n```'"
5908,322326631,b'I think some stray tabs found their way in here!'
5902,322355881,"b'Thoughts on turning 28 into a const (i.e. defined above, so that it\'s also clear that this is supposed to match the range for the ""current axis"" thing?)'"
5902,322357473,"b""Any chance we could log a warning if the range of either thing doesn't match the axis/button counts of ControllerMappingLibrary.cs? Ideally if someone is using this they should be set up for success (i.e. be told that hey this hasn't been updated with the new axis values)"""
5908,322433820,"b'Oh no, not intentional there. Just wanted to get rid of the tabs'"
5891,322481587,"b'Consider moving this (and the lines in AddGazeInputCapability) to a helper function, since they do the same thing (i.e. ensuring and then returning the capabilities element).\r\n\r\nAlternatively, it could also be good to have a function that\'s like AddCapability(string capabilityType, string capabilityName), where you could call it like:\r\n\r\n```csharp\r\nAddCapability(rootNode.GetDefaultNamespace()+""DeviceCapability"", ""gazeInput"");\r\nAddCapability(rescapNs + ""Capability"", ""perceptionSensorsExperimental"");\r\n```\r\n\r\nThis should reduce some of the copyiage that occurs here and would simplify stuff a bit'"
5891,322483594,"b'Also a nit: With the change as-is, I believe that the manifest is cracked open twice. I might do a little refactoring here after - it would be worth probably just opening the manifest once (i.e. read once, write once), and making it so that we use the function above that are actually... yeah, only defined as being public for testing purposes (I think it would probably be okay do delete that portion of the comment at that time).\r\n\r\nTo be a bit clearer, it might be better to have something in UwpPlayerBuildTools.cs that instead of:\r\n\r\n```csharp\r\n  var uwpBuildInfo = innerBuildInfo as UwpBuildInfo;\r\n                    Debug.Assert(uwpBuildInfo != null);\r\n                    if (uwpBuildInfo.GazeInputCapabilityEnabled)\r\n                    {\r\n                        UwpAppxBuildTools.AddGazeInputCapability(uwpBuildInfo);\r\n                    }\r\n\r\n                    if (EditorUserBuildSettings.wsaSubtarget == WSASubtarget.HoloLens)\r\n                    {\r\n                        if (uwpBuildInfo.ResearchModeCapabilityEnabled)\r\n                        {\r\n                            UwpAppxBuildTools.AddResearchModeCapability(uwpBuildInfo);\r\n                        }\r\n\r\n                        if (EditorUserBuildSettings.wsaGenerateReferenceProjects && uwpBuildInfo.AllowUnsafeCode)\r\n                        {\r\n                            UwpAppxBuildTools.AllowUnsafeCode(uwpBuildInfo);\r\n                        }\r\n                    }\r\n```\r\n\r\nIs more like:\r\n\r\n```csharp\r\n  var uwpBuildInfo = innerBuildInfo as UwpBuildInfo;\r\n                    Debug.Assert(uwpBuildInfo != null);\r\n\r\nvoid UpdateManifest(UwpBuildInfo uwpBuildInfo)\r\n{\r\nstring manifestFilePath = GetManifestFilePath(buildInfo);\r\n            if (manifestFilePath == null)\r\n            {\r\n                throw new FileNotFoundException(""Unable to find manifest file"");\r\n            }\r\n\r\n            var rootElement = XElement.Load(manifestFilePath);\r\n\r\nif (uwpBuildInfo.GazeInputCapabilityEnabled)\r\n{\r\n            UwpAppxBuildTools.AddGazeInputCapability(rootElement);\r\n}\r\n\r\n                    if (EditorUserBuildSettings.wsaSubtarget == WSASubtarget.HoloLens && uwpBuildInfo.ResearchModeCapabilityEnabled)\r\n                    {\r\n                            UwpAppxBuildTools.AddResearchModeCapability(uwpBuildInfo);\r\n                    }\r\n            rootElement.Save(manifestFilePath);\r\n}\r\nvoid UpdateAssemblyCSharp(UwpBuildInfo  uwpBuildInfo)\r\n{\r\nif (EditorUserBuildSettings.wsaGenerateReferenceProjects && uwpBuildInfo.AllowUnsafeCode)\r\n                        {\r\n                            UwpAppxBuildTools.AllowUnsafeCode(uwpBuildInfo);\r\n                        }\r\n}\r\n\r\n// And then in the actual function call:\r\nUpdateManifest(uwpBuildInfo);\r\nUpdateAssemblyCSharp(uwpBuildInfo);\r\n\r\n```\r\n\r\nObviously with better formatting than the mess of indentation that I have above\r\n\r\n'"
5891,322484218,"b'Should this:\r\n\r\n```csharp\r\nvar allowUnsafeBlock = propertyGroupNode.Element(""AllowUnsafeBlock"");\r\n```\r\n\r\nActually be\r\n\r\nvar allowUnsafeBlock = propertyGroupNode.Element(""AllowUnsafeBlock**s**"");\r\n\r\nNotice the ""s"" in ""Blocks"".\r\n\r\nWhen I search for this I see ""did you mean AllowUnsafeBlocks"" instead:\r\n\r\nhttps://www.google.com/search?q=AllowUnsafeBlock\r\n'"
5920,322869569,"b""I don't think we usually have spaces in our assets (i.e. there's spaces between Configuration/Profile/TunrPointersOnOff.\r\n\r\nAlso I think there's a misspelling in TunrPointersOnOff -> TurnPointersOnOff"""
5920,322869699,b'Same general comment on spaces for all of the newly added assets.'
5920,322870038,b'Please add a comment on what this tuple is for (i.e. an example of something that it would store)'
5920,322870214,b'```suggestion\r\n            foreach (var interactable in FindObjectsOfType<Interactable>())\r\n```'
5920,322877416,"b""@davidkline-ms just to check, is it the case that the input system should have deterministically started up by any arbitrary monobehavior's Start() function?\r\n\r\nI know there were some others that tried accessing things but had to wait until Update() in order to guarantee that it was actually there."""
5920,322877971,b'Nit: Add a comment on the significance of 2'
5923,322929980,b'Nit: Delete this extra line'
5923,322930269,"b""Nit: Delete the empty returns and blank comment line afterward.\r\n\r\nI think that VS auto-adds these which is mostly to get you to fill them out, but for tests they're not very useful so deleting them is the best thing to do."""
5923,322931711,b'.5 in this case means that the two vectors are at most ~50ish degrees away from each other right (i.e. at least in the same hemisphere)'
5923,322962048,"b""It feels like all of the other tests here aren't testing the name of the test (i.e. they're not actually about the first frame) - what's the intent of the rest of the test here (also something that I wasn't sure about - I would assume that the direction of the hand is independent of it's position, once its direction is set. If this isn't the case (i.e. based on what exists below), i guess maybe it's just interesting info for me to know."""
5923,322962535,b'Please insert:\r\n\r\n```csharp\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'
5923,322962647,"b""I'll add a code verifier to check this."""
5920,322968269,"b'It feels weird to me that the default pointer mediator, which is a thing that the focus provider uses, has to then reach all the way back out of the system and find the focus provider (and treat it directly as THE default focus provider).\r\n\r\nI think that doing things this way avoid some breaking changes, but also still adds code cruft (i.e. generally speaking casting to specific implementations from interfaces is not really the right thing to do).\r\n\r\n\r\n\r\n'"
5920,322969399,"b""More specifically maybe it means that both:\r\n\r\n1) The focus provider should be provided to the mediator in its constructor (or in some initialization step or in the function call itself)\r\n2) The GetPointerBehavior shouldn't depend on the specific implementation of the focus provider - it may not be on the focus provider interface (maybe it's on should be on some IPointerBehaviorProvider interface or something)"""
5920,322970133,"b""If we're going to have a class that gets pointer behavior, why not abstract away the complication of specific pointer interactions behind that? i.e. it feels like this should be in GetPointerBehavior, which should work for all pointers. Otherwise, would the utils also need to handle this specially as well?"""
5920,322970588,"b'Ah no, the utils do exactly the same thing - I would still say that we should have a single implementation of this, otherwise if focusProvider.GetPointerBehavior is not safe to call by itself it would open us to new bugs in the future where we forget to special case the gaze pointer.'"
5920,322972473,"b""What is 'p' in the context of this comment?"""
5920,322973211,"b'Nit: Move the Default to location zero, so that in the case that things get initialized to zero, the default is actually chosen as the default, not on.\r\n\r\nOtherwise I think if this gets persisted and defaults get chosen things will just be ""AlwaysOn""'"
5920,322975547,"b""```suggestion\r\nBecause the pointer mediator runs every frame, it ends up controlling the active / inactive state of all pointers. Therefore, if you set a pointer's IsInteractionEnabled property in code, it will get overwritten by the pointer mediator every frame. Instead, you can specify the [`PointerBehavior`](xref:Microsoft.MixedReality.Toolkit.Input.PointerBehavior) to control whether pointers should be on or off yourself. Note that this will only work if you are using the default [`FocusProvider`](xref:Microsoft.MixedReality.Toolkit.Input.FocusProvider) and [`DefaultPointerMediator`](xref:Microsoft.MixedReality.Toolkit.Input.DefaultPointerMediator) in MRTK. \r\n```"""
5920,322976252,"b""I think it would need to be internal - as a building block (i.e. as a capability that the pointer provides) having IsInteractionEnabled makes sense to be public so that higher level building blocks (of which other MRTK things are one such example) can set/toggle them. \r\n\r\nThe value here seems okay I can think of a number of other cases like this, and I don't think we should just do this in a one-off basis."""
5920,322976296,b'So I would vote no here.'
5920,322976516,b'```suggestion\r\n// Turn on all hand rays\r\n```'
5920,322976677,b'I think that this is missing links in PointerBehavior and PointerUtils and [How to turn pointers on and off in MRTK using PointerBehavior'
5932,323316289,"b'Consider adding one more line of comment like:\r\n\r\n```\r\n# Example: -editorTestsFilter InputSystem\r\n# This will filter to only tests that contain the word ""InputSystem""\r\n```\r\n\r\nThe reason I say this is because usually the first thing someone wonders is the format, and having an example is really helpful (they can then just copy/paste/substitute)'"
5923,323318718,"b""Either way is good! I think that in general having a comment clarify what it relates to in real world concepts is good (i.e. I'm not a dot product/cosine god, so having it regular terms around angles is helpful). \r\n\r\nAnyways, I consider this comment thread resolved. I think I should have been more clear about what I expected changed (i.e. mostly just comments), so I'll be better about that going forward!"""
5932,323319308,"b""Wait... that's two lines of comments..."""
5932,323319510,b'\xf0\x9f\x98\xb1\xf0\x9f\x98\xb1'
5920,323328721,"b""Ah, I think the internal gaze pointer thing is what complicates things...\r\n\r\nI think my expectation here is that the gaze pointer would have been like other pointers, but because it's internal I guess it doesn't work out."""
5920,323335577,b'Nit: Bring this to the previous line'
5920,323502778,"b'> Pointers Commonly available for Mixed Reality Platforms [](start = 2, length = 56)\r\n\r\n## Pointers commonly available for Mixed Reality platforms'"
5920,323502899,"b'>would [](start = 162, length = 5)\r\n\r\nShould this be... ""could""?'"
5920,323502985,"b'>Poke, Sphere [](start = 94, length = 12)\r\n\r\na PokePointer or SpherePointer to VR'"
5920,323503030,b'Table looks great!\r\n\r\n---\r\nIn reply to: [323377626](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5920#discussion_r323377626) [](ancestors = 323377626)'
5920,323503300,"b'>regardless of if [](start = 50, length = 16)\r\n\r\n""regardless of if"" => regardless if'"
5920,323503435,"b'>offvia [](start = 50, length = 6)\r\n\r\noffvia -> off via'"
5920,323503717,"b'>/// <returns></returns> [](start = 8, length = 23)\r\n\r\nDelete this line'"
5920,323504301,"b'>TestContext.Out.WriteLine(""Show both hands""); [](start = 12, length = 45)\r\n\r\nNit: I think this WriteLine should be a few lines above (when it is showing the hands).'"
5920,323504406,"b'(Actually, all empty returns statements - these will also fail CI, or should fail CI)\r\n\r\n---\r\nIn reply to: [323503717](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5920#discussion_r323503717) [](ancestors = 323503717)'"
5920,323506533,"b""Nit: Add a comment about the tribit-nature of this - this doesn't actually map to Default, AlwaysOn, AlwaysOff, but actually is more about, it's non-null validating that the current active state matches the bool value."""
5920,323507446,"b'>GetPointerBehavior [](start = 32, length = 18)\r\n\r\nIf we expect that GetPointerBehaviors can be called in the Update() loop, consider avoiding LINQ:\r\n\r\n[https://docs.microsoft.com/en-us/windows/mixed-reality/performance-recommendations-for-unity#avoid-expensive-operations](https://docs.microsoft.com/en-us/windows/mixed-reality/performance-recommendations-for-unity#avoid-expensive-operations)'"
5920,323507510,b'Same for SetPointerBehavior\r\n\r\n---\r\nIn reply to: [323507446](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5920#discussion_r323507446) [](ancestors = 323507446)'
5920,323508145,"b'>Focus Provider [](start = 40, length = 14)\r\n\r\nNit: ""Are you using a custom Focus Provider that doesn\'t implement IPointerPreferences""\r\n\r\nTo give folks who see the error a next step on what to do (i.e. implement IPointerPreferences)'"
5920,323508860,"b'>Any [](start = 56, length = 3)\r\n\r\nJust out of curiousity, does Both also work? I know that this enum has been confusing in the past with some other APIs.'"
5920,323508957,"b'>controllers [](start = 147, length = 11)\r\n\r\nNit: ... and vice versa.'"
5920,323509091,"b'>/// By default, pointer behaviors are set to Default. [](start = 4, length = 53)\r\n\r\nSuper nit: I think this line doesn\'t add that much (I think it\'s expected that something that is named ""default"" is the default)'"
5920,323509263,"b'I think maybe if the enum was called ""NotTheDefaultJustKiddingItsActuallyTheDefault"" then having this comment would be good (actually in general I think that it\'s a good callout, just not in this case because the naming is fairly obvious)\r\n\r\n---\r\nIn reply to: [323509091](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5920#discussion_r323509091) [](ancestors = 323509091)'"
5920,323509557,"b'Just to make sure it\'s clear that it\'s to allow you to customize both (or between other input sources, not just this relationship between controllers). (Or maybe adding ""for example..."")'"
5947,323957683,"b""If we're going to link to the BasePlayModeTests, it might be worth deleting the same code below (i.e. it's just the same code coming from the BasePlayModeTests file.\r\n\r\nOtheriwse we have this dependency/chance for things to get out of sync when we change things here or there (i.e. this PR already introduces such an inconsistency, in adding comments to this version of the file but not changing the the real BasePlayModeTests.cs file)"""
5947,323958218,"b'I\'m a bit confused by this comment - should the second one by the direction that the camera is looking at? The ""default position Vector3"" feels like it\'s missing some context/additional wrods.'"
5947,323959528,"b""Nit: I think this existed before, but I don't think this line actually makes sense (i.e. it's a play mode test, how is it possible that this could make sense)"""
5948,323992430,"b""Ah, yep missing that >\r\n\r\nI'll switch to sortedset, as it does make more sense"""
5948,323996009,"b""Okay, funny story, I tried switching to SortedSet, and it didn't end up working that well.\r\n\r\nIMixedRealityService doesn't implement IComparable, so the sorting aspect doesn't work unless you pass the sorted set a comparer (which I already had around). HOWEVER, this triggers another side effect of SortedSet, which is that it also uses the comparer to determine the uniqueness of the keys (i.e. if two things have the same comparer results, they end up having the same key for the sorted set). So they are basically sorted on their key (which is their priority), and key == uniqueness, so this path didn't end up working."""
5948,323996226,"b'I suppose this literally makes sense given what a set should be doing, and what a sorted set should be doing (i.e. set = key, sorted = sort by keys)'"
5948,324268184,"b'Well kinda... the comment as-is is more accurate than just ""power the registrar."" It powers that specific function, not the entire registrar.'"
5947,324277979,"b'I think what\'s missing that this change tries to address is the following:\r\n\r\nI am a person who is writing a playmode test for the first time, and I don\'t even know what is available to use. If I see a completely empty skeleton with just the ""EmptyTestFunction()"". What are the capabilities that I can use? What are the functions I can invoke?\r\n\r\nThis is a definite gap in the stuff down below, because ideally the test infrastructure that we  have would also have some docs (i.e. a section in our docs about our testing infra along with APIs you can use like ""how to simulate hands in tests"" or ""how to simulate HL1 gaze in tests"").\r\n\r\nWithout that test infra documented, I can see how wanting to have a basic example here would fill that gap.\r\n\r\nThat being said, I agree with Julia that having a skeleton + having an implementation of some unrelated tests are two different things.\r\n\r\nHere are some things I think that we could do:\r\n\r\n1. Mention in bold that the skeleton below is more than a skeleton, and that you don\'t need to actually have any of the stuff in the test.\r\n2. Possibly have the code in the fake test commented out along with additional comments about when you might want to comment out the following lines (i.e. a ""build your test"" sort of situation)\r\n3. Delete the code inside the fake test and actually add the docs for the testing infra.\r\n\r\nI think 1 and 2 might be good?\r\n\r\n'"
5941,324293173,"b'```suggestion\r\n| Various object positioning behaviors such as tag-along, body-lock, constant view size and surface magnetism | Script for laying out an array of objects in a three-dimensional shape | Annotation UI with flexible anchor/pivot system which can be used for labeling motion controllers and objects |\r\n```'"
5941,324293620,"b'Maybe this is common knowledge, but if not, it might be worth having a link to:\r\n\r\nhttps://docs.microsoft.com/en-us/hololens/hololens-install-apps#use-the-windows-device-portal-to-install-apps-on-hololens\r\n\r\nFor how to install the packages in the release.'"
5947,324358676,b'lgtm'
5951,324756285,"b""This was a question asked here: https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4988#issuecomment-503968696.\r\n\r\nI was searching through history and also on the upstream thing (i.e. the original source of the code that we forked from), and what I found was:\r\n\r\n1. There was no history/rationale/comments/reasoning associated with the UNITY_EDITOR change.\r\n2. The original code didn't have this check (i.e. it always did DontDestroyOnLoad in both editor and player.\r\n\r\nI opted to be consistent with upstream here absent any known/compelling reason to be inconsistent (also in general, it feels like having the same code run in editor/player is a good thing to ensure that testing in-editor leads to the same code being tested in player)."""
5891,324763025,b'```suggestion\r\n        /// Validates that AddResearchModeCapability will also add the\r\n```'
5891,324763959,b'I added an extra the in my original comment too'
5891,324764827,b'```suggestion\r\n                    <DefineConstants>DEBUG;</DefineConstants>\r\n```'
5891,324766757,"b""Nit: I think that the contents within this don't actually matter for the test, but they do make the line SUPPPPPPPPPPPPPPPPPPPPER long and also make future readers wonder if this is actually necessary (i.e. how do I generate this super long string of things and why is mine different and does it matter, etc)"""
5891,324769671,"b'I think that rootElement in this location is the AppX manifest, not the Assembly-CSharp manifest (which is the type of manifest that unsafe code has to be on) - I think that this may have gotten a lost in the refactor, and I can definitely take a little bit of blame here for not being a little clearer in my request!'"
5891,324770683,"b'```suggestion\r\n        private readonly GUIContent allowUnsafeCode = new GUIContent(""Allow Unsafe Code"", ""Modify \'Assembly-CSharp.csproj\' to allow use of unsafe code. Do not use this in production."");\r\n```'"
5891,324771212,"b""Yep, this is good! I think that there's one more thing that needs to be addressed here (which I opened a new comment for, so I'm resolving this one now)"""
5891,324771954,"b'i.e. to be clear, I think that AllowUnsafeCode should probably be like what it was before, and be called as a same-level sort of sibling do AddCapabilities (where AddCapabilites is called).\r\n\r\n```diff\r\n-                    if (uwpBuildInfo.GazeInputCapabilityEnabled)\r\n-                    {\r\n-                        UwpAppxBuildTools.AddGazeInputCapability(uwpBuildInfo);\r\n-                    }\r\n+                    UwpAppxBuildTools.AddCapabilities(uwpBuildInfo);\r\n+                    UwpAppxBuildTools.AllowUnsafeCode(uwpBuildInfo);\r\n\r\n```'"
5891,324784448,"b'So unfortunately our docs validation system doesn\'t see these crefs as being valid (even though these are fairly well known things).\r\n\r\nIn order to avoid that, it might be good to just remove the <see cref=""XElement"" /> part and replace it with it with just XElement.\r\n\r\n(Same for XName and XAttribute down below:\r\n\r\n[19-09-16 04:37:36.346]Warning:[MetadataCommand.ExtractMetadata]Invalid cref value ""!:XElement"" found in triple-slash-comments for AddCapability, ignored.\r\n[19-09-16 04:37:36.346]Warning:[MetadataCommand.ExtractMetadata]Invalid cref value ""!:XName"" found in triple-slash-comments for AddCapability, ignored.\r\n[19-09-16 04:37:36.346]Warning:[MetadataCommand.ExtractMetadata]Invalid cref value ""!:XAttribute"" found in triple-slash-comments for AddCapability, ignored.)'"
5891,324784934,b'Yeah your point is a good one - I think I just want to call out that people need to be careful with using this (i.e. Be careful using this in production).'
5949,324790776,"b""Note that this is probably better located in this folder and in this namespace:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk_development/Assets/MixedRealityToolkit/Extensions\r\n\r\nJust to be consistent with the rest of the extension.\r\n\r\nIf this is truly editor-only (I'm not sure about this, but just listing this as an option in case it's relevant), it can go here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk_development/Assets/MixedRealityToolkit/Extensions/EditorClassExtensions"""
5891,324856437,"b""For this we just use docfx:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DevDocGuide.html\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/docfx.json\r\n\r\nI would say it's a bug that we don't currently handle those other types, but in the interest of not blocking behind addressing that (i.e. it could be really easy or a realllllll huge can of worms) it's probably easier in this case just to use the non-cref based text."""
5959,324883275,"b'```suggestion\r\n* [`HandConstraintPalmUp`](#hand-menu-with-handconstraint-and-handconstraintpalmup): Derives from HandConstraint but includes logic to test if the palm is facing the user before activation. This solver only works with [IMixedRealityHand](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand) controllers, with other controller types this solver will behave just like its base class.\r\n```'"
5938,324886985,"b'Chatted offline on this one, and I think this comment comes down to different definitions and expectations for what ""disable/enable"" means when applied to the a larger system (in this case, the input system).\r\n\r\nThe expectation that I come from is that calling NameOfSystem.Disable() will disable everything under that system (including both dispatching and sensor data, because dispatch and sensor data are part of the input system).\r\n\r\nWhile I think that this approach is consistent with the way input is written today (i.e. everything under input disabled/enabled as a unit), @julenka raised a good point on making sure that we double check consumer scenarios to make sure that we\'re doing the right thing - even if this ends up being more ""correct"" according to current designs it doesn\'t matter if it doesn\'t help consumers. I\'m gonna ask around here on the various issues this is intended to address.'"
5938,324889489,"b'Yep - if you notice in Setup, this is already called. I found that with the changes in this PR, having this double initialization led to issues, so just opted to remove the double initialization.'"
5938,324891318,"b""Ah, this is an artifact from some earlier testing I was doing, where I found that in test cases a gaze stabilizer was also being created (which it does in production, but for some reason in today's test cases, it isn't getting created). This led to some weirdness in certain tests (i.e. HoloLens1 based gaze tests, where it took N frames from gaze to stabilize on the right point).\r\n\r\nI added this then to fix some of those tests but since then this isn't necessary, so the changes to this file can be deleted."""
5955,324902933,"b""+1 on having these just be internal as well.\r\n\r\nThis is a breaking change in that we're removing the visibility of this, but this is a case where it should be a fairly obvious implementation detail of the the manipulation handler.\r\n\r\n---\r\nIn reply to: [324756550](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324756550) [](ancestors = 324756550)"""
5955,324904351,"b"">Vector3[] handsPressedArray [](start = 26, length = 27)\r\n\r\nNot that this was defined well previously - it would be good to have a <param> doccomment about what the shape of this array is (i.e. it should be of length 2, where the new location is in the 1-th index, and the old location is in the 0-th index.\r\n\r\nI think same goes for any public function in this class that takes a Vector3 array (I think they're all the same thing)"""
5955,324905022,"b'Nit: Update the doccomments (as per previous comment from last comment I just left - so meta - we should also document what this Vector3 should be -i.e. size two vector that has the old location in 0th index, new location in the 1th index)'"
5955,324906389,"b'>GetMinDistanceBetweenHands [](start = 22, length = 26)\r\n\r\nNot that you should actually do this:\r\n\r\n[https://en.wikipedia.org/wiki/Closest_pair_of_points_problem](https://en.wikipedia.org/wiki/Closest_pair_of_points_problem)'"
5955,324906994,"b'>mh [](start = 20, length = 2)\r\n\r\nNit: May as well spell out the entire thing (i.e. manipulationHandler and primitiveManipulator).'"
5955,324907573,"b""If you think that there's any chance that we might add/change these three lines of code, consider changing the structure here to be something more like:\r\n\r\n```csharp\r\nif (mh != null || pm != null)\n{\r\n  if (mh != null)\r\n  {\r\n     mh.ForceEndManipulation()\r\n  }\r\n  else\r\n  {\r\n     pm.ForceEndManipulation()\r\n  }\r\n\r\n  // move the object slightly away from the collision point so we can manipulate it again after this\n  Vector3 direction = collisionTrigger.bounds.center - manipulatedObjCollider.bounds.center;\n  manipulatedObject.transform.Translate(direction.normalized * 0.01f);\r\n}\r\n```\r\n\r\nIf not then just resolve this conversation"""
5955,324907794,"b'The reason being is that this type of copy paste has the tendency to introduce bugs where someone who is less experienced in the area will fix the ""old"" version of it (or ""new"" version) but not update the other, so you find out later and then the next person to fix it will be like ""which one is actually correct?""\r\n\r\n---\r\nIn reply to: [324907573](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324907573) [](ancestors = 324907573)'"
5955,324909904,"b'> var mh = manipEvent.ManipulationSource.GetComponent<ManipulationHandler>(); [](start = 11, length = 76)\r\n\r\nNot really related to your current change, but do you know if this mh is always gonna be the same as the mh defined in Start()?\r\n\r\ni.e. should we just cache mh in Start and use that to then do mh.ManipulationType?\r\n\r\nI assume that what this code here is trying to do is ask questions about the manipulation handler on the same game object, not about the manipulation handler on some unrelated game object.'"
5955,324913682,"b"">eventData.used [](start = 21, length = 14)\r\n\r\nI think this is also an existing issue, but consider moving this !eventData.used check to the if statement at the beginning of this function (i.e. we don't do anything interesting if the eventData is used - I guess we MIGHT re-mark it as used, but since it's already used, that's also a no-op)."""
5955,324914882,"b'>!manipulationType.HasFlag(HandMovementType.OneHanded)) [](start = 28, length = 54)\r\n\r\nI think that this line makes some assumptions about ordering with the else if statement down below (i.e. that the one handed manipulation thing would have been engaged first - totally valid, though this is also somewhat of a state machine in itself - thoughts on just having:\r\n\r\n```csharp\r\nif (!isManipulationStarted)\n{\n  HandleManipulationStarted();\n}\r\n```\r\n\r\n'"
5955,324915287,"b"">manipulationType.HasFlag(HandMovementType.OneHanded) && handsPressedCount == 1 [](start = 16, length = 78)\r\n\r\nThere's a decent amount of copy/paste instances of this + the two hand case (i.e. twohanded + > 1) - consider having a helper function like IsOneHandedManipulationActive() or IsTwoHandedManipulationActive() to avoid the copy paste."""
5955,324915398,"b""Active actually may be a bad word because it's also used in the pervious function to also start the manipulation as well, but yeahhhh\r\n\r\n---\r\nIn reply to: [324915287](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324915287) [](ancestors = 324915287)"""
5955,324915591,"b""Or maybe not, maybe this isn't used too much down below (still reading)\r\n\r\n---\r\nIn reply to: [324915398](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324915398) [](ancestors = 324915398,324915287)"""
5955,324918256,"b'Now that the test has been already written, this is more of a consideration for next time, but in general having tests who state assertions depend on previous state (i.e. the fact that things start at 2 in this test case are because the previous ""cases"" already exist). This makes it hard to do things like delete things from earlier parts in the test (imagine we were to add a new test case in the middle after the first case and before the second case, we\'d have to change up everything after it).\r\n\r\nWhere in reality, these really are separate test cases (i.e. PrimitiveManipulatorOneHandedEvents, PrimitiveManipulatorTwoHandedEvents, PrimitiveManipulatorOneAndTwoHandedEvents)\r\n\r\nThis is something that may not actually matter but when it does, it\'s something that you would wish that you had had structured differently.'"
5955,324918514,"b'>GameObject [](start = 15, length = 10)\r\n\r\nThoughts on keeping the old thing around with the Obsolete attribute?'"
6454,341704826,b'Woops'
6454,341707300,b'Also still woops'
6488,343197866,"b""Nit: It feels weird for us to double guard this (i.e. once prior to invocation time, and again within the function itself. It feels like the function should either handle it for all callers (i.e. it abstracts out that complication) or it should define formally that it's responsibilities don't include checking, so callers should check."""
6497,343838727,b'I think that it would still be helpful to have a comment about the significant of the empty loadedDeviceName.'
6497,343839818,"b'If this class is both an AR foundation and non-AR foundation handling thing, and this supported configuration is about ARFoundation only, it would be worth naming it as such (Or having a comment that this is about AR foundation only)'"
6497,343839903,b'Otherwise it feels like this should gate the functionality of the entire class.'
6497,343841058,"b""Since we're no longer having this by default, are there any docs that explain how to set this up?"""
6503,343845010,"b""Nit: We haven't been using underscores in folder names (i.e. HandMenu_Slider_Assets -> HandeMenuSliderAssets)"""
6503,343845479,"b'This class needs to be placed into a namespace (any namespace, but ideally obviously a namespace that makes sense :))\r\n\r\nOtherwise I think that this will trip the build system (i.e. some of our packaging parts makes sure that each file has a namespace)'"
6503,343847351,"b""Is this intended to be an example script, or something that consumers will use?\r\n\r\nIf it's more of the latter, we'd probably want to expose roundedValue/trackScaleNode publicly as well so that these things are changeable at runtime by code."""
6503,343848072,b'It feels a little weird to see two different classes which are basically completely the same except for the axis on which the change is applied - it feels like there should just be one MonoBehaviour with another dropdown/flag which controls whether or not the X or Y axis (or z axis!) is what is actually moved along.'
6445,343849055,b'+1'
6503,343928320,"b""Ah, I had to look way too long for this - this is a bit interesting because the hand menu solver stuff (which is the existing code) lives in a namespace that this is on (i.e. solvers) that this code right here SHOULDN'T be in (because it's not a solver).\r\n\r\nI'm thinking maybe something like:\r\n\r\nMicrosoft.MixedReality.Toolkit.Examples.Experimental.HandMenu\r\n"""
6503,343929158,"b'Gotcha.\r\n\r\nI think that in this case we should have the fields commented (i.e\r\n\r\n```csharp\r\n// A value in the range [0, 100] indicating the slider position\r\n... roundedValue...\r\n```'"
6497,343929564,"b'Going forward it would be worth including the docs with the code change - per our PR guidelines, we should uphold that in all of our PRs:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/PullRequests.html#documentation-should-be-added-in-the-same-pull-request-as-a-fix--feature'"
6528,344281967,"b""Change lgtm, question around testing of this + preventing future regressions - it feels like in the old picture, the colliders were clearly not completely surrounding the actual handles themselves - it feels like maybe we could have some unit test/check that the collider's bounds contains the actual object bounds themselves.\r\n\r\nFWIW I think that this is relatively low value test, I'm just trying to understand how we can programatically (i.e. in code) immortalize correct behavior.\r\n\r\nI'm curious to hear @julenka's thoughts on this one"""
6550,344947252,b'Super Nit: Consider organizing imports alphabetically.'
6550,344948695,"b'>cL [](start = 44, length = 2)\r\n\r\nWhat are folk\'s thoughts on the usage of abbreviations? I\'ve seen that shorthand like this lead to confusion because it creates additional cognitive overload of having to think about ""what does cL"" stand for? This overhead isn\'t that useful  (i.e. they shouldn\'t have to mentally expand out the abbreviation, especially when something like \'currentAnchorType\' more clearly shows intent/what it is.\r\n\r\nHere\'s an example (albiet C++) guideline where abbreviations are warned against:\r\n\r\n[https://google.github.io/styleguide/cppguide.html#General_Naming_Rules](https://google.github.io/styleguide/cppguide.html#General_Naming_Rules)\r\n\r\nIf folks agree I think I\'d like to just add this to our guide as well. I believe that folks on the OS side also favored against hungarian for similar reasons.'"
6550,344949164,"b""```suggestion\r\n        /// Change the grid's layout to the previous one in order.\r\n```"""
6550,344956082,"b'Aside: Comment on the comment - avoid using ""you"" (or things like ""you forgot"") which can come across negatively in tone:\r\n\r\nhttps://testing.googleblog.com/2019/11/code-health-respectful-reviews-useful.html'"
6550,344958791,"b""Nit: It could be helpful for a reader to know the rough template/name of the file to look for (i..e look for a file with the name printgrid-YYYYMMDD.txt in XYZ folder). Otherwise they will need to look into the implementation details (which I guess in this case, also isn't that bad)."""
6550,344959030,"b'Out of curiousity, what is the purpose of this .5 second wait for each anchor type? Is it waiting for the collection to have fully updated?'"
6550,344959254,"b""Ah actually I guess it's printed out, so maybe no biggie."""
6550,344959411,b'Super nit: Delete extra line'
6550,344959715,b'I think the same comment applies to the LayoutOrder one too!'
6550,344960003,"b'```suggestion\r\n                    Debug.LogError(""Cannot assign Rows when layout type is ColumnThenRow"");\r\n```'"
6550,344960536,"b'Nit: In the particular case where we are trying to log a specific error message for a single case (i.e. ColumnThenRow), it\'s more helpful to have a non-concatenated string. (i.e. Layout in this case will always only be a single type so that imagine...\r\n\r\nthat someone is searching for ""Cannot assign Rows when layout type is ColumnThenRow"" they can find the exact string in the code.'"
6550,344961100,"b""Actually wait, reading this closer, I think it might be more helpful to give an error saying what IS expected instead of what ISN'T expected (i.e. this should only be used with RowsThenColumns, so that it tells people how to use it correctly, rather than telling them they are using it wrong without a direct guide on how to use it right).\r\n\r\ni.e. I think a general principle is if we're going to give an error message, we should tell people how to get things right, instead of how they got things wrong."""
6550,344961217,b'Same comment as above with respect to error message messaging (staying in the positive instead of the negative)'
6550,344961244,b'```suggestion\r\n            else if (Layout == LayoutOrder.ColumnThenRow)\r\n```'
6559,345439482,"b'It feels like ""Utility"" is a bit too general and isn\'t descriptive enough for what\'s actually contained there - if someone wanted to find detecting platform capabilities, I don\'t see how they would know to drill into a somewhat vaguely named ""Utilities"" dropdown.\r\n\r\nAlso in general, I know that this change will folder-ize things that were top-level before in order to create some consistency with other folder things. I feel like in general we should aim to get users to the thing in the fewest number of clicks possible (or rather, when there are two solutions, one of which involves fewer clicks, we should favor those). Given this, it feels like maybe we should keep those current top-level non folder things as non-folder things (i.e. Teleport System only has an overview, no need to have it expand and require another click to get to what\'s interesting).\r\n\r\nThe alphabetical order makes a ton of sense and I think think creates clarity on expectations (for both readers and contributors).\r\n'"
6599,347020852,"b'Nit: What are your thoughts around clarifying ""appropriate input handler""? As a reader if I\'m reading this sequentially, I kinda see this and think ""hmm I wonder what an appropriate input handler is?"" - I think this confusion is cleared up once I keep reading, but it does give me slight pause and question (i.e. as I\'m reading, I hit a location where I don\'t fully understand, should I go elsewhere and interrupt my reading flow to clarify what this is, or should I just keep going?). \r\n\r\nI don\'t know if there\'s any way to specify examples (or just something like the specific input handler is described in the Grab and Touch interaction sections below)'"
6602,347514393,"b'Curious here - in other locations in this PR, it looks like if clauses were joined to avoid multiple if->return but this one pulls it out - is this primarily to avoid a line count issue? If so we could just do something like:\r\n\r\n```c#\r\nif (eventData.Command.Keyword == VoiceCommand&&\r\n    (!VoiceRequiresFocus || HasFocus) &&\r\n    IsEnabled)\r\n```'"
6602,347519013,"b"">MOVE_HAND_NUM_STEPS [](start = 26, length = 19)\r\n\r\nNit: I think MoveHandNumSteps (all caps isn't something I've seen in our codebase)"""
6602,347522122,"b""Nit: The hand is already shown right now - I'm guessing this line is included for readability right?"""
6635,348185454,"b""I think that this README misses the major point of this folder, which is that this is a staging/temporary one that is intended to be removed in the weeks following, and is only here to avoid a risky set of changes to packaging.\r\n\r\nEspecially interesting is to ensure that folks aren't taking a dependency on the structure of this (i.e. it will find a different home shortly)"""
6635,348229997,"b""I think it would be helpful to reword this and put the second part first (i.e. this is a staging folder). \r\n\r\nThe fact that it contains useful stuff is a generally true statement (i.e. if it didn't contain useful stuff, it shouldn't exist in this repo)."""
6635,348230055,b'So actually maybe then just removing the first part of it would be all it takes here.'
6649,348620489,"b""@keveleigh is there any guarantee that the existing defineConstraints will always be [] going forward?\r\n\r\nOtherwise it could be possible for this to start silently failing to do anything - (i.e. if someone defines another arbitrary constraint this will no longer do the right thing of adding in UNITY_WSA).\r\n\r\nThe ask here isn't to future proof every single possible defineConstraints content permutation (i.e. the ask isn't to parse the constraints and ensure it gets added to the list) - it's more that we should log an error (or better, just throw an exception because no one will read the error logs on CI and see this) if this assumption is violated."""
6654,348644860,b'```suggestion\r\n| [![Periodic Table of the Elements](Documentation/Images/MRDL_PeriodicTable.jpg)](https://medium.com/@dongyoonpark/bringing-the-periodic-table-of-the-elements-app-to-hololens-2-with-mrtk-v2-a6e3d8362158)| [![Galaxy Explorer](Documentation/Images/MRTK_GalaxyExplorer.jpg)](https://docs.microsoft.com/en-us/windows/mixed-reality/galaxy-explorer-update)|\r\n```'
6654,348647071,"b""Super nit: The two images are SLIGHTLY different sizes from each other. My OCD is somewhat strong but here's what I mean:\r\n\r\n![image](https://user-images.githubusercontent.com/5840182/69262572-93b03080-0b78-11ea-8b29-491f30e64714.png)\r\n"""
6648,348654058,"b""Meta comment after looking at how this changes the flow of this document:\r\n\r\nMy understanding of the main purpose of this document is for someone truly getting started with the MRTK and providing the least-friction/least-resistance for getting running with examples in the editor.\r\n\r\nThe package contents is valuable, but it's currently a LOT of text and interrupts that main flow. i.e. first time users shouldn't have to read through all of this in order to get to the next section (which shows them how to import and then use the MRTK)\r\n\r\nIt would probably be more helpful to have this section much later in this doc (or in another page that's specific to the overall folder/package structure of the MRTK."""
6648,348655351,"b""s/telporting/teleporting/g\r\n\r\nIt'd probably also be worth doing a pass here using vscode+spellcheck addons to make sure we aren't missing anything else."""
6648,348657537,b'```suggestion\r\n| | [RuntimeTools/Tools/ControllerMappingTool](Tools/ControllerMappingTool.md) | Utility enabling developers to quickly determine Unity mappings for hardware controllers. |\r\n```'
6648,348657664,b'To be consistent with the other separators in this file'
6648,348665190,b'This is making me question my own reality. What is it?!? spacebar or space bar?!'
6648,348665985,b'I think that either of the other options (and possibly other options) would also work.\r\n\r\nThe main thing here is to avoid interrupting the crucial user flow.'
6635,348744175,b'```suggestion\r\nThe MixedRealityToolkit.Staging folder has been created to allow the delivery of these features to customers while the MRTK team works to implement packaging changes that span the current and next iteration.\r\n```'
6668,348766343,b'```suggestion\r\n[`MixedRealityKeyboard.cs`](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Experimental/Features/UX/MixedRealityKeyboard.cs)\r\n```'
6650,348793374,"b""Nit: For some of these, consider using string interpolation which can make for a little neater looking stuff:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated\r\n\r\nAlso mentioning this because it's more common in some other newer languages."""
6650,348793552,"b'(Especially with the Debug.Log of the one on line 491, the reduction in """"\'s could possibly increase the readability of the final format'"
6650,348799961,"b""Nit: If you ever think that these have a chance to be chained together (i.e. someone upgrades from 2.1.0 to 2.4.0), then it might make sense to have UpgradeAssetToVersion1() directly set assetVersion = 1 (and then have the other  checks come after, so that they will incrementally be upgraded). Realistically this shouldn't matter here (because I don't think there's going to be another change here that affects row/cols in a way that would depend on this upgrade code to have run."""
6686,349273413,"b""it's pretty much gauranteed to be 3"""
6686,349273741,"b""I'm more leaning on @Railboy to sanity check this - I'm purely looking at this code from a code perspective."""
6821,355637589,b'```suggestion\r\n        /// Specify direction in which children are laid out.\r\n```'
6824,355740462,"b'If I\'m reading this bullet point correctly, does this mean that I\'m closing Unity and reopening it twice?\r\n\r\nOr is this last bullet point saying ""make sure you actually RTFM for step 1""?'"
6824,355741187,b'Nit: Be consistent with using 1.2.3.4 or 1.1.1.1 (1.1.1.1 is used everywhere else here)'
6820,355743470,b'```suggestion\r\n                if (value <= 1.0f && value >= 0.0f)\r\n```'
6820,355773099,"b'I think that with the OR any number would work (i.e. -1 is < 1.0f, so the thing would evaluate out to true and then set it to that invalid value.'"
6820,355778357,"b""Nit: I know that the existing tickEvery doesn't have docs (sorry!) - could you add some doccomments for this (and then also add the same text as docs for tickEvery as well?\r\n\r\ni.e. something something something...\r\n\r\n```c#\r\n/// <summary>\r\n/// If playTickSounds is true, the slider will make a sound each tickEvery interval (in seconds).\r\n/// </summary>\r\n```\r\n\r\nAlso my doccomments suck so maybe someone else could suggest something better, but yeah something like that"""
6820,355779617,"b'For this region, is there something more descriptive than ""MyValue"" that could be used here? I see that this is covering the ""MyValue"" property (which, itself is also a little vague in terms of its naming and could probably have a more specific thing).\r\n\r\nI\'m still reading through this so just leaving this comment for now, but will hopefully come back with a suggestion.'"
6820,356176429,"b""It would be awesome to have a comment for this (i.e. explaining the significance of wholeNumbers) - i.e. if this is false, I assume that myValue can end up being a non-whole number between minValue and maxValue.\r\n\r\nIf this is true, is it valid for startValue to be a non-wholeNumber?\r\n\r\nThere are some interesting interactions that usually come about when there are bools like this, and it's important to get those documented"""
6820,356177538,"b""If wholeNumbers is false, should we maybe support having non-whole numbered min/max values?\r\n\r\nOh actually! Maybe thinking more in general, the wholeNumbers thing seems to add a little more complexity around the usage of the data output from this component - I'm asking this just to gauge impact, but if we didn't have the wholeNumbers bit at all here (and just had it always return a float value between min and max value), would this be a much worse developer experience? (i.e. on the caller side, is it too much Math.round/Math.floor-ing?"""
6820,356178082,"b""Also nit: It would be awesome to expand this comment more to explain what it's doing - i.e. how is it doing automatic placement?"""
6820,356183044,"b'Ah, so this is interesting - this implies that the fact that wholeNumbers also affects the underlying sliderValue as well - i.e. if ""myValue"" (again, probably could use a slightly more descriptive name but naming is also not my strength) is more of a ""higher level concept"" built on top of the underlying 0-100 slider value, it\'s interesting how it can affect the slider value\'s ""deeper level"" workings.\r\n\r\nI think I\'m gonna try to summarize my overall questions on this in a more meta question once I get through the rest of this review... stay tuned!'"
6820,356184058,"b'It is a bit interesting to me that a person could try to set sliderValue, but after doing this conversion to myValue and then back, it could actually end up being a different value (i.e. due to rounding errors when calculating temp and then going back)'"
6820,356185828,"b'Yes please! Sleeps are generalllly suuuper scary to have because they creep up on you (and generally gloss over something else underlying that is a real issue).\r\n\r\nAt times they are the only reasonable way of dealing with things, in which case they should be HEAVILY commented, otherwise what ends up happening is people end up copy-pasting the sleeps all over and lose context over what the original intention/reason for the sleep was.\r\n\r\nBut yeah in general sleeps scary!'"
6824,356194490,"b""Are we required to write this due to something above?\r\n\r\nThis doesn't really seem to help developers do anything."""
6824,356195578,"b'In order to start a new remoting session, do I need to do this ""close->reopen""?\r\n\r\nOr is this primarily for when I\'m exiting Unity?'"
6834,356205302,"b""@julenka @thalbern do you guys know if HasGestureMax is also something that we'd want to consider resetting here? The naming here is so similar that I can't help but ask."""
6834,356206412,b'Nit: Maybe something like\r\n\r\n// Focus the hand on the button using the far ray pointer.'
6834,356207827,"b'Nit: Maybe something like:\r\n\r\n// While keeping focus on the button, engage the pinch gesture.'"
6834,356252627,"b""I noticed that the press-off code has some time delta based waiting - do you know if there's any possible flakiness here due to this?\r\n\r\ni.e. is it possible that a single update isn't actually enough for the press off/gesture off handling code to run (because it's waiting for time delta?)"""
6834,356253205,"b'Nit: These asserts in this section are inconsistent with the ""style"" of the asserts above (i.e. this one has a string ""focus"" but the ones preceding this don\'t have a string).\r\n\r\nI think either is fine, we should just be consistent with how we do it.'"
6834,356253701,b'```suggestion\r\n            // Cleanup\r\n```'
6834,356256976,"b'A meta comment on comments in general, because I see some really awesome comments in here (and want to encourage those) and some comments that have a little less value (i.e. // Cleanup). The goal of me leaving this here isn\'t to discourage comments, but hopefully encourage more instances of helpful comments over other types.\r\n\r\nhttps://testing.googleblog.com/2017/07/code-health-to-comment-or-not-to-comment.html\r\n\r\nThere are some times where code is somewhat self documenting (i.e. this case where Destroy is obviously cleaning things up), and in those cases having a simple comment doesn\'t necessarily add that much. The linked blog entry has a lot of good cases where comments are extremely valuable (i.e. intent - and history and why). Of course even those have some *challenges* in that intent in comments can obviously get out of date, but overall I\'ve found it\'s added more value over time than caused issues.\r\n\r\nIf this comment were instead like ""Cleanup the test\'s Interactable to ensure that other tests are not affected by this tests\'s state changes"" then it might also cover a little more intent behind the thingy.'"
6822,356268570,"b'>// TODO: Troy - look at reset method or other properties? [](start = 24, length = 57)\r\n\r\n+1 It feels like there are other properties here we might want to reset (i.e. InputSourceParent, pointerName) - or maybe not? I think those will get reset to correct things once the controller is re-set the next time around, though it feels like a pointer going back into the cache should be as-close-as-possible to what happens after CreatePointer.'"
6822,356272052,"b"">if (p != null && p is MonoBehaviour pointerGameObject) [](start = 24, length = 54)\r\n\r\nThis is probably not the type of feedback being requested, but I did wanna leave a little comment about this one (i.e. it feels weird that we'd store stuff in the cache that we wouldn't consider later - I guess this is primarily to defend against cases where the game object is destroyed out from under us through other mechanisms right?)"""
6822,356275703,"b""Another point to consider when doing this sort of change - I assume that we're gonna have bugs (because there are always bugs, it's a fact of life!)\r\n\r\nIt would be interesting to have a boolean/flag/control mechanism (maybe on this class, maybe on the profile itself) that will either turn on or turn off this behavior. This way we can really easily test if/when there are issues, if they are caused by recycling of pointers. i.e. if someone notices a bug, they can try turning off this new feature and see if the issue still repros, and if not, we have a better idea of what to look at.\r\n\r\nObviously such a flag would be removed soonish after in a future release, but in the interim these control mechanisms are really helpful for issue/feature isolation."""
6822,356276724,"b"">RequestPointers [](start = 49, length = 15)\r\n\r\nWe haven't really done this (at all) for other parts, but since we're doing perf work in this case, consider adding something like:\r\n\r\n[https://docs.unity3d.com/ScriptReference/Profiling.Profiler.BeginSample.html](https://docs.unity3d.com/ScriptReference/Profiling.Profiler.BeginSample.html)\r\n\r\nSo that we can measure the impact (in the Unity profiler) or having pointer caching vs not caching."""
6822,356278060,"b""> private class PointerEqualityComparer : IEqualityComparer<IMixedRealityPointer> [](start = 7, length = 80)\r\n\r\nOne other thing to think about here (overall structure - I know that this is also another comment you're not interested in) - around how this could be written to be a bit more testable - I assume that some of these could be torn out into a different class which can be individually unit/component tested, which MIGHT help.\r\n\r\nI say might because I haven't actually done the deep thinking to know if it's actually valuable/not valuable, as it's possible that this level of testing isn't valuable, but it could be!"""
6834,357268380,"b""Yessss but also maybe. The only reason I bring this up is because this rolloff mechanism is based on time delta - it looks like the 10 frames that get waited in WaitForInputSystemUpdate() is sufficient, I'd just be curious to see going forward if we see flakiness in the test.\r\n\r\nSo based on this, no action to take now, we can just watch out for test flakiness in CI going forward (and there might be none)"""
6875,357277144,"b'Out of curiousity, if OneHandRotationModeNear == OneHandRotationModeFar, would it still have the same effect to have just these two lines of code?\r\n\r\n```c#\r\nMigrateOneHandRotationModes(ref objManip, manipHandler.OneHandRotationModeNear, ManipulationProximityFlags.Near);\r\nMigrateOneHandRotationModes(ref objManip, manipHandler.OneHandRotationModeFar, ManipulationProximityFlags.Far);\r\n```\r\n\r\nJust looking to see places in the code where we can reduce complexity.'"
6875,357277595,b'Thumbs up for moving to words over numbers!'
6875,357277956,"b'```suggestion\r\n        private void MigrateOneHandRotationModes(ref ObjectManipulator objManip, ManipulationHandler.RotateInOneHandType mode, ManipulationProximityFlags proximity)\r\n```\r\n```suggestion\r\n        private void MigrateOneHandRotationModes(ref ObjectManipulator objManip, ManipulationHandler.RotateInOneHandType currentMode, ManipulationProximityFlags proximity)\r\n```'"
6875,357278371,b'Or maybe oldMode?\r\n\r\nJust to have some symmetry with newMode'
6875,357284361,"b""What are your thoughts on taking a ManipulationHandFlags directly? i.e. from a code readability perspective, it's easier to read a function like this:\r\n\r\nApplyScaleConstraints(ManipulationHandFlags.OneHanded) \r\n\r\nOver\r\n\r\nApplyScaleConstraints(true)\r\n\r\nI think that there is a caveat here that it IS a flag (so passing both actually doesn't make sense)  \r\n\r\nisNear is a bit weirder because the the places where it's getting called actually are already readable because they use a helper (i.e. isNearInteraction)\r\n\r\nAnyways, not a huge thing, just curious to hear your thoughts."""
6875,357285387,"b'QQ - should the isOneHanded and isNear values be consistent across all invocations for ApplyScaleConstraints and ApplyRotationConstraints and ApplyTranslationConstraints? i.e. are there cases where translation constraints are going to be two handed, but rotation constraints are one handed?'"
6875,357286617,"b""The old code that handled faceAway actually had directionToTarget (not the negative version of it) - i.e. if you see on the old line 650). I'm not an expert here so maybe there are some new changes between those two sections, just wanted to check if there was an error before (or now) or something else in between changed up."""
6875,357288162,"b""I feeeeeeeeeeeeel like we've seen some issues with GetAssemblies before in a couple of locations:\r\n\r\n1) There are some assemblies that we've seen exceptions thrown when GetTypes() get called\r\n2) I think there were some issues with .NET backend (i.e. as long as this is getting compiled away during that, we should be good).\r\n\r\nWe have some cases like this:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/2c711ab4d9f059fa0b12761a10188a051c7785b4/Assets/MixedRealityToolkit/Extensions/AssemblyExtensions.cs\r\n\r\nI should probably write some sort of script that checks for usage of this going forward."""
6875,357289086,"b""Would it be possible to leave a comment stating what sort of things should be added here in the future, vs being made separate constraints? i.e. if we're going to cull this and leave stuff in here, we should write down our philosophy for what this should be compared to constraints."""
6870,357327429,b'Nit: Delete empty return comment clause'
6870,357329299,b'```c#\r\nif (grabbable != null && !isInFOV(collider))\r\n{\r\n    grabbable = null;\r\n}\r\n```'
6870,357330728,b'```suggestion\r\n                Bounds bounds = myCollider.bounds;\r\n```'
6870,357330812,b'```suggestion\r\n                foreach (var corner in corners)\r\n```'
6870,357332034,b'Similar comment about abbreviations as in:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/6550#discussion_r344948695'
6870,357333697,"b'If TryUpdateQueryBufferForLayerMask is intended to be called once per frame per the documentation, this would alloc memory each frame right? '"
6870,357336277,"b""Looking at the test case - is there one also for this edge case?\r\n\r\ni.e. I see a comment around this one:\r\n\r\n// Move forward so that cube is no longer visible\r\n\r\nBut it looks like it's actually a 'false' case.\r\n\r\nIt's possible I'm not reading deeply into this enough."""
6870,357338091,b'```suggestion\r\n            private bool isPointInFrustrum(Vector3 point)\r\n```'
6870,357338223,"b""What's the significance of the number 10?"""
6870,357339528,"b'Similar question around camera buffer here - why do we choose .05 meters (instead of say, the camera near clip plane or something else based on what the user has configured)'"
6887,357345698,"b'Is it odd that this is MRTK Examples Hub (instead of just, Examples Hub?) i.e. this is within the MRTK itself, so it would by default be the MRTK examples hub'"
6891,358365673,"b"">string [](start = 12, length = 6)\r\n\r\nIt feels like this should be a const thing, though I don't know in this case if whatever version of .NET stuff that Unity is using will automatically optimize that."""
6891,358366227,"b'>AppendScriptingDefinitions [](start = 27, length = 26)\r\n\r\nDo we have an opinion on whether or not these types of functions constitute ""public API"" as well? i.e. otherwise this is also another type of breaking change.'"
6891,358367192,"b""> foreach (string s in oldDefines) [](start = 11, length = 33)\r\n\r\nNormally I wouldn't mention this because it involves LINQ, but because this is editor/scripting code (which also appears to be roughly run-once  or at least once-per-import of stuff):\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.except?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.except?view=netframework-4.8)"""
6891,358368046,"b'>Doing so will break compilation. [](start = 79, length = 32)\r\n\r\nDoes this break compilation in a way that triggers a build/CI error, or is it more of a silent error?'"
6891,358368555,"b'>System [](start = 6, length = 6)\r\n\r\nSuper nit: Alphabetical imports'"
6891,358371033,"b'>EnsureArFoundationDefine [](start = 28, length = 24)\r\n\r\nThe naming of this is a bit off - it\'s not really ensuring the define, it\'s ensuring it if needed, and removing it if needed - the return value is also a bit confusing as a result (i.e. ""true if the define was added, false otherwise"" - ""otherwise"" in this case actually is interesting to talk about in detail, because it\'s actually removing it in the otherwise case, not just doing no action (i.e. I could read this as ""true if the define was added"", and if it\'s false nothing happened)\r\n\r\nPerhaps a better name here is ReconcileArFoundationDefine'"
6891,358372784,"b'>[0] [](start = 75, length = 3)\r\n\r\nIt seems odd for us to arbitrarily choose the first one - should we LogWarning if more than one are encountered?'"
6891,358373386,"b""> if (arFoundationPresent) [](start = 11, length = 25)\r\n\r\nThere's a lot of really interesting logic here that's happening due to some relatively complex/history-filled logic around the differences between 2018 and 2019. Can you leave some comments here about the differences/significance of some of these things, so that others can also share in the background as well?"""
6891,358375945,"b'>2019.2 [](start = 72, length = 6)\r\n\r\nNit: Should this also say 2019.3 as well (i.e. the purpose of the XR SDK work)'"
6891,358376840,"b""I think that the purpose of this file is telling people prescriptively what to do, not just what happened - i.e. it's pretty obvious that it no longer takes a fileName argument, which folks would see when they get a compile break.\r\n\r\nWhat would be useful here is a code snippet saying how to accomplish what they did before - i.e. if you passed a filename, you should do something like:\r\n\r\n```c#\r\nif (FileUtilities.CheckThatThingExistsYeah())\r\n{\r\n    AppendScriptingDefinitions(oh, yeah, wooooo);\r\n}\r\n```\r\n\r\nAnd if you didn't pass a filename, it would just be:\r\n```c#\r\nAppendScriptingDefinitions(oh, yeah, wooooo);\r\n```"""
6915,358551278,"b""> Cool addition. NumHandSteps strongly controls the execution time of most tests I think.\r\n> \r\n> Few minor questions to consider before going in\r\n\r\nYep - the intent here was to push things to a smaller count of frames, to speed up the test execution by default. Ideally we want people to get used to smaller amounts of wasted frames, and not get used to having large amount of buffer.\r\n\r\nI'll clean up the stuff here in bit, thanks for the review!"""
6931,359445476,b'```suggestion\r\n            TestHand rightHand = new TestHand(Handedness.Right);\r\n```'
6931,359449726,"b""I think this was copied from some of the other code above/below, but in general we should avoid abbreviations unless they have some crazy high value.\r\n\r\nhttps://google.github.io/styleguide/cppguide.html#General_Naming_Rules\r\n\r\nOtherwise, you can end up in situations where you're reading something and see:\r\n\r\nh.Show() - what is h? Is it handle? Is it hamburger? Is it hand? \r\nh2.Show() - what is h2? What is it's relationship to h? Are they ordinal? (no, because one is left, one is right, and there numbering actually doesn't matter)\r\n\r\n\r\n"""
6931,359450753,"b'Compare that to:\r\n\r\nleftHand.Show()\r\nrightHand.Show()\r\n\r\nAnd it\'s much clearer in the code what is happening.\r\n\r\nIn the context of this small function the value isn\'t as high, but as things get added to tests (which they will) and things change in the future (which they will), there\'s the chance that the distance increases to the point where the declaration of h isn\'t close enough for someone to be like ""oh yeah it\'s the right hand""'"
6931,359450809,b'```suggestion\r\n            TestHand leftHand = new TestHand(Handedness.Left);\r\n```'
6931,359451191,b'I think missing a call to both rightHand.Hide() and leftHand.Hide() - I think this only hides the right hand right now.\r\n\r\n'
6931,359452772,"b'Also out of curiousity, should this be an else if? i.e. is the hand ray stuff even valid to check if this is a GGVPointer?\r\n\r\nI guess maybe this is what @MenelvagorMilsom is maybe asking about'"
6931,359453857,"b""Also out of curiousity, what was the delta with this change? i.e. because we changed the touch/scroll point mechanics I think that this tweak would be expected, I'm just curious how much of a delta it was compared to before."""
6915,362930405,"b'SlowMoveHand doesn\'t exist (well, I think it exists in the change that this was based on, but FWIW I wasn\'t sure I wanted to bring that over. Having another function named SlowMoveHand would create some confusion around which one to use - ""do I use fast or slow? maybe I want to use slow so that I can see it happening!"" - when really I want to encourage folks to use the fast version always and create an intentional barrier to doing the slow version.'"
6977,362994437,b'Classic Boo.Lang.'
6977,362994943,"b'>coneAngleBufferDegrees [](start = 18, length = 22)\r\n\r\nJust to make sure I understand correctly, this is a buffer that is shared between both sides of the FOV right? i.e. adding 10 will add 5 effective degrees to either side.'"
6977,362995008,b'```suggestion\r\n        /// <remarks>\r\n```'
6977,362996136,"b'Nit: Add a comment saying that these points are run with the same expected results for both IsInFOVCone and IsInFOV. Because we had set up some generic-type test data I thought that we might be testing that the two functions have different functionality of the two different functions, but we expect the same results for these two given these settings.'"
6989,363574403,"b""Nit: Might also be worth adding some doccomments to this to (if only to help future generations understand what should go on this interface, and what shouldn't)\r\n\r\nIt's pretty clear from the contents what the things inside of it are now, though these are the types of interfaces that can balloon to much larger things going forward without guidance about initial intent (i.e. maybe ballooning is also fine, etc)"""
6989,363574673,b'Adding a note here with a link to https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6922 so that we capture this namespace change on this thing.'
6989,363575567,"b""Is the XR SDK version of this going to be named something else (i.e. XrSdkMixedRealityUtilitiesProvider)? If so, I wonder if the interface itself IWindowsMixedRealityUtilitiesProvider should be named something a bit more generic (i.e. IMixedRealityReferenceFrameProvider). As it's named it feels like there's mostly just this 1-1 mapping of IWindowsMixedRealityUtilitiesProvider ->WindowsMixedRealityUtilitiesProvider, but maybe seeing the other implementation of this would make it much clearer."""
6989,363575820,"b""Mostly that we should have a write up and notes about this change, because it is technically breaking (I know that other consumers that we've done work for this stuff may end up using this directly, so it's something we should call out).\r\n\r\n@davidkline-ms  thoughts?"""
7006,364350145,"b"">MigrationWindow [](start = 17, length = 15)\r\n\r\nDo folks have any thoughts on if this window would also handle non-game object/component upgrade scenarios? i.e. I'm thinking about situations where we make asmdef changes (again, god help us), or make changes to fields of components which might not be... migratable, I'm not sure if such a situation exists.\r\n\r\nNot a blocking thought for this review, just wanted to hear thoughts on this question."""
7006,364351868,"b'>Component-specific implementation of the MigrationHandler Interface is required [](start = 130, length = 79)\r\n\r\nIf the window is intended by people who are using it to migrate their stuff, and not so much for folks to write their own migration handlers, then this part of the text is a bit, maybe misleading is the term. \r\n\r\ni.e. as a user of this, does this sentence mean I have to implement component specific IMigrationHandler code? Or do we actually want to communicate that only  a subset of things that have migration handler implementations will actually be migrated? Or we maybe we just want to say ""hey check out the docs for the set of things that are migrated by default?""'"
7006,364355469,"b'>migrationTypesMap [](start = 41, length = 17)\r\n\r\nBecause the key value here is string (not strongly typed) can you leave a comment with an example of what would get stored here?'"
7006,364355710,b'Super nit: Alphabetical ordering of using'
7006,364368481,"b'@keveleigh this will create a instance of migrationTypeInstance each time this getter is called right? My C# isn\'t as strong as yours, but unless there\'s some magic here (where the runtime knows about/watches selectedMigrationHandlerIndex to know that things should only change based on that), I assume this would create a new instance of the handler on each.\r\n\r\nIf this is required, then we should actually document this (i.e. comment), because someone could easily look at this (i.e. what I\'m doing) and be like ""oh we don\'t need to do this, let\'s just cache it"" '"
7006,364369645,"b'Is the significance of ""4"" because we want it to come after the DependencyWindow?\r\n'"
7006,364371279,"b""Note that we've historically seen cases where GetTypes would throw a ton of exceptions (i.e. if there are assemblies that aren't loadable).\r\n\r\nSee https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5949/files for reference.\r\n\r\nI would actually probably lean on using GetLoadableTypes as is done in that PR to avoid hitting that type of issue going forward.\r\n\r\nDo I know exactly what scenario? No. Where we observed it, it was in some other development envs where there were some other interesting non-Unity standard setups AFAIK but I could imagine that someone who is pulling in binaries (i.e. dragging in a DLL to their project) could probably trigger that as well."""
7006,364372319,"b""If it isn't too hard to do, it might also be good to gate this on recompiles as well (or asset changes) - i.e. arbitrary focus changes maybe this isn't super interesting.\r\n\r\nHOWEVER if you're using this and this is fairly fast, then you don't need to do this - it's just if this adds micro hangs that we'd want to do this. I don't want to ask for premature optimization."""
7006,364373867,"b""Can you leave a comment why this is +1ed here (and below?)\r\n\r\nI assume this is because Unity gives us 1-indexed selected values, but this isn't necessarily immediately obvious to mere mortals (i.e. myself)"""
7006,364374623,"b""So QQ here - if there's already some specific ordering in ElementAt(i), can you elaborate a bit more on why we need to have another copy of the these keys? Is it to avoid having to use ElementAt()? Is it to account for the Unity 1-index selection? If it's the latter we can always offset in a different way (i.e. convert to zero indexed when coming back from Unity land)"""
7006,364375629,"b""Calling this out not because I think you should change this, but because there's a general gotcha associated with this type of code.\r\n\r\nDrawMigrationTypeSelector is called before DrawMigrationToolbars and the order here is important because GUI.enabled = false is called here. There's an implicit dependency between these two functions that is order (i.e. toolbars depends on type selector to have been called first, and this isn't called out anywhere in comments).\r\n\r\nThe danger here is people reorganizing stuff in the future and leaving part of the GUI in an enabled state, but the rest of it disabled, and there's no context for future folks to understand that dependency.\r\n\r\nI think that because of the relative small scope of things here I don't think it really matters, but it's a thing to keep in mind for future changes."""
7006,364376393,b'This line confuses me a little bit because I would assume the right side would be ToolbarOption.Scenes (maybe worth leaving a comment why this is objects and not scenes?)\r\n\r\n'
7006,364377130,"b'```suggestion\r\n                    var removeIcon = EditorGUIUtility.IconContent(""winbtn_win_min_h"");\r\n```'"
7006,364377628,"b""Super nit: Thoughts on having the HorizontalScope enclosed by the if statement here, rather than the other way around (i.e. how it is now)?\r\n\r\nOr do we need the HorizontalScope here even if it's empty?"""
7006,364378155,b'I think this variable is unused here right? I think it may have been copy pasta from MigrateScene'
7006,364379395,"b""If we're going to migrate all scenes, does it make sense to always open the previous scene with each scene migration, or should we only do that at the end?\r\n\r\nTo be clear, here's what happens today:\r\n1) Have Scene 1 open. I click migrate all.\r\n2) Scene 2 is opened, migrated, then Scene 1 is opened.\r\n3) Scene 3 is opened, migrated, then Scene 1 is opened.\r\n4) Scene 4 is opened, migrated, then Scene 1 is opened.\r\n\r\nIt feels like instead we should really just open Scene 1 at the end."""
7006,364394685,b'Super nit delete empty line.'
7006,364394861,b'Same comment for after the for loop below'
7006,364395102,"b""Nit: filePaths (they're not necessarily scenePaths because extension can be arbitrary)"""
7006,364395865,"b""A little bit confused about this IsAsset check - should we actually be using the AssetDatabase to do some sanity checking? Because otherwise what we're doing in the loop above is getting a list of files that actually exist on disk, and then asking if they exist (we already know that they exist because we used Directory.GetFiles)"""
7006,364397247,"b'```suggestion\r\nWhen SDK components get obsolete and need upgrading, some projects might require an upgrade tool to allow user controlled migration.\r\n```'"
7006,364397844,"b'I may also think about rewording this more along the line of:\r\n\r\nAs the MRTK undergoes changes, some components may be deprecated and replacements will get introduced. Consumers may will need to migrate to those new replacements, and the Migration Window is a tool that helps to automatically migrate a subset of those changes.'"
7006,364397915,"b""Or something else I dunno English isn't my first language."""
7006,364399151,"b'Similar comment for the code part - if this is intended for the a user of the migration window, consider what the user will actually do with this - do we want them to build an IMigrationHandler interface?\r\n\r\nOr do we want to just tell them that this is how it works, and then only the things that have migration handlers will be migrated.'"
7010,364400572,"b'```suggestion\r\n        [Tooltip(""List of positions and orientations that define control points to generate the spline"")]\r\n```'"
7010,364400625,b'```suggestion\r\n        /// List of positions and orientations that define control points to generate the spline\r\n```'
7010,364400803,b'Awesome comment'
7027,365305933,"b'Yeps, good catch'"
7032,365326330,b'Nit: Add a comment about why TestUtilities is being excluded (being that we have another package that is including those)'
7032,365329614,"b'I\'m trying to leave a comment on line 29/30, but I can\'t seem to figure out how to do so (no changes there).\r\n\r\nI think that this:\r\n```\r\n <file src=""..\\..\\Plugins\\**\\Microsoft.MixedReality.Toolkit.Tests.*"" target=""Plugins\\"" />\r\n```\r\n\r\nNeeds to be updated to exclude the Test.Utilities binary right? Otherwise it\'ll end up getting included in both packages.\r\n'"
7032,365330001,"b'Can you clarify this comment a little more? Reading this, I think ""oh, there\'s nothing to include, then why are we including mostly everything minus the meta/nuspec/props stuff?"". If there\'s nothing, should this line even exist?'"
7032,365330126,b'Same comment for the test utilities CS code.'
7032,365330615,"b'Oh, I guess actually this would probably end up pulling in version.txt (and maybe some other things which are actually important)'"
7027,365346261,"b""I thought about this when I was writing this and opted to only save the relative path because of the reasoning here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/778d323aaf43c2ed253be76bf58b29c019bd30d2/scripts/ci/githubchanges.ps1#L79\r\n\r\nHowever, this is probably a case of overengineering - I think I only did some of this because there was some recent chatter about trying to parallelize some of our pipelines, in which case producing artifacts that could be somehow shared/information shared between places would be useful.\r\n\r\nJust to reduce the chance I break something because I know things are working now, I think that I'll leave this as-is, but I will eat my proverbial shoe if we hit issues with this going forward and I can change it up if it ends up being unwieldy."""
7027,365347802,"b""Ack - I'm going to add this to my list of things that I'll tackle coming up, but I'll opt to keep it out of this change. I feel like I've gotten this change what is a working state and there's a decent amount of testing that has to be reset if I change this stuff up.\r\n\r\nYour suggestion is a good one - next time I do another pass on this I can include the change."""
7027,365349345,"b'Trying that now out, thanks for the suggestion!'"
7027,365351775,"b'Alright that lgtm, thanks'"
7056,366073315,"b'I don\'t think there\'s actually a section called literally ""Experimental"" in the toc.yml. If we search for \'experimental\' (ctrl+F) on that file there are two locations, one of which doesn\'t adhere to the rules (i.e. UnityAR) and another called ""Experimental Features""\r\n\r\nIf we actually mean \'Experimental Features\' we should be completely literal here (otherwise it can be hard to resolve ambiguities)'"
7057,366508966,b'Thanks for doing this!'
7061,366512935,b'The lines 45-60ish are some of the stuff you were planning on refactoring on a follow up right? I noticed there are some similarities/reuse with the other config checker.'
7061,366513757,"b""Super nit because it doesn't actually really matter in small cases like this - I think that references and versionDefines *could* potentially be HashSets (or hashing things) because we do .Contains lookups.\r\n\r\nIn reality given array of sizes < 10 this should have no noticable effect so take it or leave it (I think in general I prefer using the right data structure for the situation but in these cases they tend to not matter)"""
7061,366515960,"b""Can you elaborate (I think just in this PR review, not in the code) why the sphere/useraligned cube are restricted to WMR_ENABLED but the other line isn't? Obviously I have not that much background here, it's just usually interesting to see when specific functionality in otherwise similar-looking namespaces/names is gated."""
7061,366516272,"b""Is this general convention? i.e. I'm curious if someone using this and sets other extends (i.e. x/y/z) and they don't understand why changing y/z don't do anything."""
7061,366519058,b'```suggestion\r\n        /// A queue of MeshId that need their meshes created (or updated).\r\n```'
7061,366519124,"b""Or maybe there's some subtyping here that isn't immediately obvious"""
7061,366525065,b'Nit: Consider wrapping a private thing like \r\n\r\nActiveLoader GetActiveLoader() \r\n{\r\n    if (XRGeneralSettings.Instance != null &&\r\n        XRGeneralSettings.Instance.Manager != null &&\r\n        XRGeneralSettings.Instance.Manager.activeLoader != null)\r\n        {\r\n                    return XRGeneralSettings.Instance.Manager.activeLoader\r\n        }\r\n}\r\n\r\nOr maybe'
7061,366525389,b'Or maybe not'
7006,367625814,b'```suggestion\r\n                return false;\r\n```'
7006,367626139,"b""Nit: Delete this line (this should fail validation because it's an equivalent to an empty line - i.e. the generated docs are the same if you have an empty <returns></returns> or no returns."""
7006,367627204,"b""Prefer using Path APIs over manually joining paths yourself, so that you can avoid creating odd/malformed ones (or ones that don't work on various platforms):\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.io.path.join?view=netcore-3.1&viewFallbackFrom=netframework-4.8"""
7006,367627920,b'```suggestion\r\n            if (types==null)\r\n```'
7006,367630218,"b""More general meta comment that I'm leaving here without having fully traced all of the call/paths that invoke MigrateGameObjectHierarchy or the other functions here. A lot of these seem to do null checks or validity checks at the function level.\r\n\r\nThis is generally okay when you're getting data from 'untrusted' sources (i.e. if these are meant to be invoked by external code or through an API that we expose). However if this is an internal function it's usually better to trust that your other stuff doesn't call you incorrectly (i.e. it's non-null). Otherwise what tends to happen is that  you get a lot of extra code at the beginning of every function that's checking for null/validity, which builds up as call depth increases/other things repeatedly do the same check.\r\n\r\nMore of a comment for going forward (and also a question for if this is really intended to be used by non-internal code)."""
7006,367631030,"b""In some future change we might want to define these in some common location - it's hard to manage the coordination of arbitrary integers between multiple locations in the code.\r\n\r\nNo action now, just something for us to avoid going forward."""
7006,367631234,"b""Forgot to mention, especially because these numbers don't have comments/explanations about how they are related, so it's supppppper hard"""
7006,367633931,"b""Do you know if the test ever fails (i.e. the assert above is triggered), does DeleteAsset actually get called, or will this leave a dangling asset?\r\n\r\nIf so, it might be helpful to have a cleanup function (i.e. TearDown) guarantee that. (i.e. I don't think it affects this case, but some Save type functions will fail if you're saving on an existing path, which means failure to clean up would actually prevent future runs from working).\r\n\r\nIn this case I don't *think* we run the danger of the re-save issue based on my reading of the Unity docs for SaveAsPrefabAsset, but in general we should be mindful of how we cleanup dynamically/filesystem state after tests."""
7087,368064753,b'Oh my'
7087,368065116,"b""This is the default! It doesn't have the word default in it, but if there's some persisted session key (i.e. the place where I added that weird false &&) it uses what the consumer chose/overwrote."""
7088,368137069,b'What are your thoughts on if we should filter out certain profiles from the list based on the current Unity version? i.e. so we can prevent people from doing the wrong thing'
7088,368137106,b'Different PR obviously'
7006,369281314,"b""@keveleigh @davidkline-ms  I think that this places a dependency of the Foundation package onto the Tools package, which would create a circular dependency.\r\n\r\nIt's a bit unfortunate that this is something that we had to discover though through manual code review - ideally we'd have some tooling that would detect this (this last sentence is not directed at this PR, just a general comment that it's really hard to find these things in general without infra investments)."""
7006,369283793,"b""Ah, I should clarify, the circular dependency isn't in the asmdefs (these are fine) - the circular-ness is at a higher level (i.e. the .unitypackage files), where now Tools.unitypackage depends on Foundation.unitypackage and Foundation.unitypackage depends on Tools.unitypackage."""
7006,369294193,b'What is the specific interdependency that got added here? There might be room to move things around.'
7006,369710835,"b""Yep, Tool depending on SDK is totally fine. I *think* that doing what you said should be fine (usually circular reference removing involves doing something like this, or making some other root common thing that both can depend on. In this case because there's this root thing 'foundation' we're a little more limited). """
7124,369827531,b'Is d used anywhere after this computation?'
7124,369844909,"b""Is it possible to share some of this pointing pose logic between this and the legacy path? Or do you think that because we'll get rid of the legacy path in a future iteration (i.e. post 2019), and given the lack of churn to this area, that it's fine to have a dupl-define?"""
7135,370407523,"b'```suggestion\r\n        /// <typeparam name=""T"">Type of data provider to return. Must implement and/or extend from <see cref=""IMixedRealityDataProvider"" />.</typeparam>\r\n```'"
7124,370412421,b'Super nit: Bring this up with the other Microsoft.* stuff (alphabetical order stuff)'
7124,370413590,"b""Out of curiousity is there some case in the future where you think there's gonna be stuff outside of WMR_ENABLED? \r\n\r\nOr should this entire function just be wrapped in WMR_ENABLED so that we don't call an overload when not necessary."""
7124,370414708,"b""I remember that this specific area was kinda tricky because of how bones/fingers are different from the joint representations that we've adopted for MRTK - can you add a comment on the 'magic' that we're doing here (i.e. the offsetting) and how the mapping is done?"""
7124,370415306,"b"">states = new List<object>(); [](start = 25, length = 28)\r\n\r\nIs it possible to cache this list object so that we don't do an alloc of this on each frame?"""
7124,370418090,"b'Reading this is a little funky, because of this:\r\n\r\n1) Above there\'s a check to see if the input device isn\'t valid\r\n2) Then it removes it if it\'s not valid.\r\n3) Now I re-get the left input device\r\n4) It seems weird that it would suddenly be valid\r\n\r\nBut I think this makes sense if the left hand in this case corresponds to some other ""left hand"" input, which existed, showed up, was destroyed, and then a new left hand was created. (i.e. this is effectively a new InputDevice, and the old one will forever be !isValid because it was ded).\r\n\r\nIs this the case? If so it might be helpful just to have a comment on this (i.e. because the old one makes permanent state transitions to invalid, we have to within the same scope then look for a new one).'"
7124,370418560,"b"">GetDeviceAtXRNode [](start = 47, length = 17)\r\n\r\nThis transition from invalid->valid->invalid happens when the hand loses tracking right? It's kinda interesting wrapping my head around seeing an InputDevice for a left hand being permanently sunset (because generally people tend to have the same left hand in the same session i.e. their left hand)"""
7124,370419136,"b'>IsPositionApproximate [](start = 12, length = 21)\r\n\r\nI think this is unused'"
7144,370777922,b'Is it possible to use the NormalizeSeparators string extension here instead of redefining?'
7145,370884738,"b'> #region Obsolete [](start = 7, length = 17)\r\n\r\nJust to check, all that was done here was a reorder (i.e moving the Obsolete constructor second, adding it to an Obsolete region) right?\r\n\r\nThe diffs are actually fairly hard to read despite being what seems like just a reorder'"
7145,370887425,"b"">public [](start = 4, length = 6)\r\n\r\nSame question around reorder - if it's just a reorder then this lgtm."""
7145,370896607,"b""gah, that's my bad for missing that then.\r\n\r\n---\r\nIn reply to: [370892079](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7145#discussion_r370892079) [](ancestors = 370892079)"""
7162,371366670,"b""I think that we'll want to use GetLoadableTypes() here instead of GetTypes() to avoid cases where some binaries have types that aren't loadable:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/f38399007d30bcee7d3e7ceb27c058074650a311/Assets/MixedRealityToolkit/Extensions/AssemblyExtensions.cs#L16\r\n"""
7164,371438880,"b""I ended up exposing this in order to be able to use via tests (internal visibility wasn't sufficient) - thoughts? I could try to hide this if there's an allergic reaction to this."""
7162,371465689,"b""Oh nah, it's a fine practice in general. The tricky part that the previous code could throw an exception because there was some random assembly that totally borked all of the type loading code - i.e. if ANY assembly/binary that was being enumerated over threw an exception, the entire type loading code would fail. So there could very well be a valid type to migrate (or a number of valid things to migrate), but the mere presence of a broken/weird assembly would mess up everything.\r\n\r\nThat's the main danger of the code before, which is why using GetLoadableTypes() is important."""
7162,371466140,b'FWIW ideally if we had some other static analysis tools we could just error out whenever we saw this happening (otherwise it is pretty hard to catch except via manual CR).'
7127,371508566,"b'Nit: Be consistent with != null or (linkRenderer) with the lines above (i.e. above we check for != null, here we do the implicit null check)'"
7127,371512829,"b'I can\'t leave a comment on the existing code here, but consider having SetStatus take an option boolean (i.e. bool hasNext) which control whether or not ""Press \'1\' or say \'select\' to continue"" is actually shown.\r\n\r\nI don\'t think that pressing 1 or saying select once you are on that state actually does anything, so I was a little confused until I looked at the code (i.e. otherwise, is it a bug? or is it expected?)\r\n\r\nThat way the last SetStatus:\r\n\r\nCan just be:\r\n\r\n```csharp\r\nSetStatus(""Done!"", false /*showNextGuidance*/);\r\n```'"
7164,371952389,"b'Alrighty I took a look into a few options here:\r\n\r\n1. Make protected and subclass for tests.\r\n2. Use InternalsVisibleTo to have it at internal visibility.\r\n\r\nI opted to go with option 2, even though from a cleanliness perspective, both feel roughly odd (i.e. subclassing and using a larger thing to escape a single function and adding that complexity to the test code + either doing a custom profile to instantiate it or new-ing it manually which is also different from how things are typically created). We also have some prior art for InternalsVisibleTo.'"
7185,373100691,"b'A bunch of random thoughts here:\r\n\r\nI think I\'m having a slight mental disconnect on this because these solver things are explicitly trying to track to a specific joint, and currently the code is doing exactly that - this fix is kinda changing the mechanics of what joint tracking is (i.e. instead of honoring the values from the platform, instead being like ""actually, we want palm outward, let\'s try to massage the data to conform to that requirement). If we actually want ""palm outward tracking"" it feels like this should be a specific concept that we surface (i.e. maybe we have ""meta joints"" which share the the same location, but are maybe called ""PalmMetaJointOutward"" where we can then do some cross products and figure out the orientation ourselves).\r\n\r\nOtherwise, we end up having to do per-platform fixes (and potentially re-fixes as the platform changes things or data gets ""better"").\r\n\r\nThat being said, I think this change is still better than no change (up going through the fingers doesn\'t make sense to anyone) so I will step off of my soapbox(?) now.'"
7188,373101266,b'Super nit: Sort using statements alphabetically'
7188,373103782,"b""An implication of this Update() function is that just the presence of this MonoBehaviour on an object will inccur a per frame call to heirarchy traversal (per @Troy-Ferrell's comment), and also a call to probably do nothing (i.e. it will call SetActive spuriously).\r\n\r\nIt would maybe be... more interesting to have tapToPlace actually control the active/inactive state of the label, or if a looser coupling is required, have TapToPlace expose an event that this component can listen to and then disable/enable itself.\r\n\r\nThat way, there's no need to have another Update() loop.\r\n\r\nThe main reason I mention this is because this Update loop isn't actually doing anything interesting 99.99999999999999999999999999999% of the time - if it were doing something interesting I think having it might be appropriate."""
7188,373103848,b'Nit: Get rid of the default Unity comments.'
7188,373103992,b'Nit: Remove extra blank lines'
7188,373105904,"b'Just to check, [Experimental] is being used on the very first thing to show the experimental warning right?\r\n\r\nActually a fairly neat usage of this - I would expect that if this entire thing is experimental this would be on the class itself but this is a decent way of getting the same thing. If this is how we wanna do this going forward it might be worth leaving a comment (both here and ExperimentalAttribute.cs)'"
7188,373106792,"b'Is it not a valid transition to clear the gameObjectToPlace? i.e. if i wanted to make a game object not the one to place, the only way for me to do that with this code is to point it at something else, and then I guess delete that other dummy object.'"
7188,373107620,"b""Also in case you're tempted to simplify to:\r\n\r\n```c#\r\nprotected bool IsColliderPresent => GameObjectToPlace?.GetComponent<Collider>() != null;\r\n```\r\n\r\nDon't do that - Unity's null checking overloading makes that a dangerous thing to do."""
7188,373107708,"b""So yeah @Troy-Ferrell's line is good."""
7188,373108336,"b'After making this protected or private (probably private honestly? - we can expose things as people need them but this is just a helper function that seems to be specific to some one off checks we have), having a comment here about this not being called in an Update loop would be good (i.e. because it GetComponent-s which should really be done only once (maybe start/awake or in editor/inspector only)'"
7188,373109228,"b""Nit: Be consistent with specifying units (i.e. on line 61 meters is specified but not here). I think that all distances are assumed to be meters unless specified when in Unity. Consistency is important because if someone sees that one is specified in meters but the other isn't... they're like.... what units?"""
7188,373109821,"b'Super nit: Avoid ""you"" in comments:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#writing-style'"
7188,373110066,"b'```suggestion\r\n        [Tooltip(""If true, the gameObjectToPlace will start in the placing state.  The object will immediately start"" +\r\n```'"
7188,373110225,"b'```suggestion\r\n        "" following the TrackedTargetType (Head or Controller Ray) and then a tap is required to place the object.  AutoStart"" +\r\n```'"
7188,373110559,"b""Also if we're gonna do multiline strings that get concatenated (totally good to reduce line width) a space must exist either at the end of the string or the beginning of the next to ensure the last and first words don't run together. (I think)"""
7188,373110755,"b""Same comments on these comments as well (I think we'll fix up the on above and bring those changes down here."""
7188,373111426,"b""DidHit is named a bit interesting - What's the mechanics of the past tense? Does the act of checking it cause it to reset (i.e. because you know that it did hit, the next time time has passed so it's no longer hitting?) Is this within the current frame? \r\n\r\nAlso, is there a reason why this is public (i.e. it seems like this is an implementation detail of this file... so far)"""
7188,373111571,"b""```suggestion\r\n        /// The offset between the game object's center and The default value for SurfaceNormalOffset is half the depth of a game object. \r\n```"""
7188,373111678,b'Or just update to be consistent with the comment above.'
7188,373112273,"b""Same comment as not needing to check the value diff (in general, not a bad thing to be cognizant of but for simple things like this it's not super necessary)"""
7188,373117400,"b'Ah... this one is interesting.\r\n\r\nThere are a few things to mention here:\r\n\r\n1. If the spatial awareness system is disabled or isn\'t configured to run, we should make sure that this code is resilient to this and doesn\'t crash (i.e. access to spatialAwarenessSystem doesn\'t get rekt)\r\n2. We should be clear via documentation that this does have a dependency on the spatial system, and that it also controls the visibility of the mesh by default.\r\n\r\nAlso, what can be interesting is that there\'s no ""override"" for spatial system visibility. That is, imagine that you\'re an app that\'s consuming TapToPlace and spatialawareness at the same time - imagine that your app wants to actually have spatial awareness on at all times.\r\n\r\nNow you pull in tap to place, and after tap to place has finished its work, it will disable/hide the spatial map! That\'s not great, because you wanted it to always show, but this other component (this thing) just disabled it for you.\r\n\r\nThis is a general problem in other areas of eventing/true/false enable control where you need to multiplex access (i.e. you want to have multiple people say they ""want it enable or disabled"" and if anyone wants it enabled, it will be enabled, and if no one wants it enabled, it will be disabled).\r\n\r\nThat\'s more complicated, but I think that in this case it might just be good to, when tap to place is done, ""restore"" the previous state of the mesh visibility (i.e. if it was disabled, make sure it gets disabled, it it was enabled, make sure it doens\'t get disabled).\r\n\r\nThis wouldn\'t solve the problem of:\r\n\r\n1. Tap to place starts\r\n2. Other app code enables mesh visibilty\r\n3. Tap to place ends.\r\n\r\nBut it would at least fix the main issue.\r\n\r\nIt might be intersting to call out this issue in the comments (and suggest that consumers can set this to false and control the spatial mesh visibility as part of using tap to place?)'"
7188,373117890,"b""Oh wait you're actually doing this with InitialSpatialMeshDisplayOption.\r\n\r\nIn that case, I think still calling out the unsolvable problem (i.e. the list mentioned above) would still be helpful."""
7188,373122765,"b""Same comment on needing spaces after/before the ends/beginnings of lines so that words don't get smushed"""
7188,373124320,b'Should we be using https://docs.unity3d.com/ScriptReference/Physics.IgnoreRaycastLayer.html instead of hardcoding an arbitrary value?'
7188,373126050,b'```suggestion\r\n            if (!ColliderPresent)\r\n```'
7188,373126767,"b""If there are other solvers on this object, wouldn't this also disable the other ones? i.e. is it not valid to have this be on a thing (but not auto-start) and only have it start working on demand?"""
7188,373127256,"b""Similar comment before - wouldn't this stop all solvers on this object?"""
7188,373128924,"b""So in general, it's best to register for events after you've already updated your internal state to be able to service those events.\r\n\r\nThis is less impactful in cases like Unity where you have single-threaded execution on the game thread, and becomes more of an issue once you go to multithreaded situations, but it's still good practice to have (i.e. otherwise it's possible that you may register for an event which will immediately do a callback, and if you haven't already set IsBeingPlaced = true, you'll kinda... get rekt)"""
7188,373129747,"b'Given this comment, would it be worth scoping this conditional to just that tracked target type, or does it not really matter if we do this check for other other target types? Just trying to understand the comment more.'"
7188,373132060,"b""Also out of curiosity, what's the experience for both KeepOrientationVertical and RotateAccordingToSurface being enabled at the same time?"""
7188,373132877,b'Why are we catching double click and eating it?'
7188,373133145,b'Nit: Also comments for this class as well.'
7185,373137396,"b'Ah oh no, I misread the SolverExampleManager as just SolverManager or otherwise thought of it as more foundational than it is.'"
7214,374383262,"b'Yep, I called this out in my description, someone read it yay.\r\n\r\nI will change it back to keep OnValidate as you say :)'"
7215,374390083,"b""Is the trailing / required here? It's odd to see trailing folder slashes in general but if it's required that's good to know"""
7217,374392434,"b""I don't think there's a lot of value to adding an arbitrary length list of releases without details (i.e. just having 2.4 is fine) along with maybe a mention that releases are roughly bi-monthly"""
7217,374392921,"b'I feel like this is rather small part of it, where a bigger item was actually other platforms (in a maintainable way) - i.e. leap/quest, some of which we go through XR SDK to leverage our new XR SDK work.'"
7217,374393270,"b'Again, I would say anything past 2.5 and I would probably not list them as explicit call outs. We should avoid ipsum lorem type text and strive for content that creates clarity.'"
7217,374393464,"b""What's your bar for things that should be called out here, vs not called out here? It feels like there are things in the UX world (@julenka) that I feel like should be called out at a higher level before this would be there."""
7217,374395470,"b""Are these upgrade instructions any different from the 2.2.0 upgrade instructions? I'm curious if we should maybe have just a single instance of how to upgrade (if the upgrade instructions are actually consistent from package to package) or if we think there will be per-package specific instructions (in which case having a copy may be okay)"""
7217,374395612,"b'Ah, I guess with the NuGet ones they are different'"
7217,374395771,b'```suggestion\r\nPlease see [Known issues](#known-issues-in-230) for details on known limitations.\r\n```'
7217,374395936,"b'Add a link to XR SDK or some blog post (i.e. a link to the words ""XR platform"")'"
7217,374396208,"b""It's kinda hard for me to read this text and understand what this is doing (i.e. I don't understand how this affects me, nor is there a link for me to find out more about this). I would say either expand on this by adding a link to explain more (i.e. the issue or the PR), or just delete the section."""
7217,374397078,"b""This also feels kinda like an implementation detail of MRTK (in terms of how it pulls in certain DLLs) - I dunno if this is super interesting as a consumer other than the console doesn't blow up with errors on long path issues. It might be simpler to call out that we've fixed a few critical bugs, some of which replicate on situations where the project folder path is not short (though obviously, we haven't fixed all of these yet)"""
7217,374398305,"b""This one also feels like an implementation detail (i.e. it's fixing a bug) - @thalbern"""
7217,374398554,"b""I think that grab also doesn't work right? So basically only touch works"""
7217,374398871,b'I think that this also can manifest with some other errors in MRTK non-NuGet code right? It might be helpful to have an example of that as well.'
7217,374399027,"b""I think runtime profile swapping has been an issue for a while - is it worth calling out explicitly given that it's been around for a while?"""
7215,374404032,b'I think under Assets as well.\r\n\r\nGoing where the Core is also has some trouble on other UPM stories (i.e. it would go into a non-mutable location)'
7216,374408435,"b""I think that we've already opened the file and read all of its contents at this point right? (i.e. manifestFileContents?)\r\n\r\nIf we're trying to be optimizing for stuff it might just be simple enough to read the stat of the file (i.e. size) and not do anything if it's empty. Otherwise there's no reason to read the same file multiple times. (i.e. in trying to be more efficient/smarter here, we're actually less efficient because we're reading the same file twice)"""
7216,374408861,"b""I was asking for tests, but FWIW I don't think that necessarily the file parsing parts are necessarily the most interesting - even having something that would take some expected strings (i.e. the manifest content) and run it through this code would probably be sufficient."""
7216,374408990,"b""What's the significance of splitLine[1]? i.e. leave a comment that this is the value in the KVP in the json file."""
7216,374409705,b'Nit: I feel like the old naming here was actually more appropriate especially given the comments (i.e. if no package was found add it the dependencies collection).\r\n\r\nThough I think in that case just changing the comment would also make things feel a little better.'
7215,374421132,b'Horray'
7225,374856855,"b'So I\'m not sure what happens with a manifest that has multiple instances of the same capability - i.e. if someone accidentally adds the gaze capability twice, or adds the wifiControl one twice.\r\n\r\nIt might instead be worth having something like\r\n\r\nSet<string> capabilities = new Set<string>();\r\nforeach (var capability in uwpBuildInfo.DeviceCapabilities)\r\n{\r\n   capabilities.add(capability)\r\n}\r\n\r\nAnd then instead of AddGazeInputCapability \r\n\r\njust do\r\n\r\ncapabilities.add(""gazeInput"");\r\n\r\nSame for the research mode.\r\n\r\nAnd then once we\'ve gathered the set, then call AddCapabilities() - obviously changing it to take a set/collection instead of a list.\r\n\r\nI think avoiding foot shooting would probably be good here!'"
7225,374935881,b'```suggestion\r\n            foreach (string capability in capabilities)\r\n```'
7230,374943053,b'if ()\r\n{\r\n    return true;\r\n}\r\n\r\nHere and below '
7230,374943637,"b""I always get a little weirded out when I see 0 equality checks using floats because of floating point comparison error, but in C# is it safe if you're comparing it against exactly the zero literal?"""
7230,374953451,"b'Nit: I don\'t know if we should fill the console when running tests - we do that for some things already but in the succeeding case, all you see in the log are things like ""newer version"" which don\'t necessarily add that much value.'"
7230,374954086,"b""The re-setting of isAppropriate here and below isn't necessary (because they are then immediately set to the output of IsAppropriateMBuildVersion) """
7230,374955618,b'Avoid using single letter variable names'
7230,374958722,"b""If this is to test that v and f are set to null/NaN Values, it might be helpful to leave a comment saying that these are being set to arbitrary values and the specific values don't actually matter."""
7230,374960105,"b""FWIW, I don't think the suffix is always going to be a float - I think it's an arbitrary alphanumeric thing right?\r\n\r\nA pre-release version number MAY be denoted by appending an arbitrary string immediately following the patch version and a dash. The string MUST be comprised of only alphanumerics plus dash [0-9A-Za-z-]. Pre-release versions satisfy but have a lower precedence than the associated normal version. Precedence SHOULD be determined by lexicographic ASCII sort order. For instance: 1.0.0-alpha1 < 1.0.0-beta1 < 1.0.0-beta2 < 1.0.0-rc1 < 1.0.0.\r\n\r\ni.e. it would just be alphabetical sorting after that.\r\n\r\nI don't think it's necessarily worth making the change right now but going forward we should just reference the spec where they are spec defined."""
7230,374973134,"b'Yep, we should hold ourselves to the same standard everywhere. Tests are not an excuse to make less readable code.'"
7230,374973316,"b""It's definitely changing the value right? It's not getting it as an input"""
7217,375407762,"b""I think that my previous comment about these additional things not adding value was just resolved, but they're still here - can we just delete the things past 2.4?"""
7217,375408341,"b""Unresolving the conversation because this wasn't done (i.e. the text still exists and should be deleted)"""
7234,375411507,"b'Do we actually want to put the ""file an issue"" first, because it\'s probably the area where we have the largest set of eyes? Or is my last statement not true in your opinion.'"
7234,375413084,"b""As a person hitting who is potentially these issues, a few comments:\r\n\r\n1. It might be helpful to have each of the common pitfalls next to their descriptions:\r\n\r\n\r\n#### MSBuildForUnity package import via writing into the package.manifest\r\n\r\nFor the first, the best way to check is to open Window -> Package Manager and make sure MSBuild for Unity shows up in the packages list. If it's there, you can assume this step succeeded. If it's not there, try running Mixed Reality Toolkit -> Utilities -> Configure Unity repeat the stops above for running the MRTK Configurator.\r\n\r\n#### DotNetWinRT NuGet package resolution\r\n\r\n\r\n- `DOTNETWINRT_PRESENT` #define written into player settings\r\n\r\n\r\n \r\n\r\n #### MSBuildForUnity package import via writing into the package.manifest\r\nFor the second, the best way to check is to search your Assets for DotNetWinRT.dll. If this doesn't exist, you'll want to navigate to MixedRealityToolkit.Providers / WindowsMixedReality / Shared / DotNetAdapter in your Project view and select DotNetAdapter.csproj. Assuming part 1 did succeed, you should see a custom inspector with Build, Rebuild, and Clean buttons. Try clicking Build or Rebuild, and then re-search for DotNetWinRT.dll. If that DLL now exists, this step succeeded.\r\n\r\n\r\n#### `DOTNETWINRT_PRESENT` #define written into player settings\r\nFor the third, you'll want to navigate to your Unity Player Settings. From there, under the UWP tab, check under Other Settings for the Scripting Define Symbols. You'll want to make sure DOTNETWINRT_PRESENT is properly written in that list. If that's there, this step succeeded.\r\n"""
7234,375422084,"b""Ah, second thing! It might be helpful to have text (i.e. error messages, error logs) that can help a person understand what errors they're seeing - i.e. how do I know that I'm hitting a DotNetWinRt NuGet package resolution issue?"""
7234,375422230,"b""```suggestion\r\nFor the first point, the best way to check is to open Window -> Package Manager and make sure MSBuild for Unity shows up in the packages list. If it's there, you can assume this step succeeded. If it's not there, try running Mixed Reality Toolkit -> Utilities -> Configure Unity repeat the steps above for running the MRTK Configurator.\r\n```"""
7234,375422631,"b'Cool yeah - I have my own biases and knowledge which may differ from others, and in things like this I would prefer to defer to you.'"
7234,375422777,"b'For steps above, consider adding a link to the steps (because ""above"" can change as this document gets updated in the future)'"
7234,375423041,"b""It's like when you number highway exits A, B, C, and then you want to add another exit between A B and you're out of letters."""
7234,375428276,"b'Nit: for question on stackoverflow and isue on github, I think that providing links would definitely help (i.e. otherwise the question is ""where do I ask/how?""\r\n\r\nI know that we have other links as well (you added them elsewhere in this PR), so it\'s also reasonable to just link to those if you don\'t want to repeat yourself.'"
7234,375428933,b'Wait actually you do this below.'
7217,375431172,b'Nit: Link to the issue'
7242,375986409,b'```suggestion\r\n([#6493](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/1493))\r\n```'
7242,375988511,"b'```suggestion\r\nObjectManipulator and BoundsControl are refactored versions of ManipulationHandler and BoundingBox, respectively. They are designed to be simpler to configure, use and maintain. We are hoping to eventually deprecate ManipulationHandler and BoundingBox in favor of these more robust components. ([#6294](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6924))\r\n```'"
7244,375991210,b'```suggestion\r\n            List<System.Type> requiringTypes = new List<System.Type>();\r\n```'
7244,375991516,b'I think that doing so will also require a using namespace earlier - I very rarely see fully qualified names for basic collections'
7244,375991898,"b""Nit:\r\n\r\n```c#\r\nif (i < requiringTypes.Count - 1)\r\n{\r\n    requiringComponentNames += '\\n';\r\n}\r\n```"""
7244,375993662,"b""Nit: It might be interesting to pass the requiringTypes as an out explicitly to be clear that it's a mechanism for returning state.\r\n\r\nUsually these other things tend to be in parameters. Or at least, the name of the function doesn't suggest that it's mutating the requiringTypes. (i.e. if it were named GetDependentComponents it might be more obvious)"""
7244,375993911,"b'Out of curiosity, what are scenarios where the monoBehaviour ends up being null when getting returned? Object/monobehavior destruction?'"
7244,375994644,b'Nit:\r\n\r\n```c#\r\nif (requiringTypes != null)\r\n{\r\n    requiringTypes.Add(monoBehaviourType);\r\n}\r\n```'
7244,376029462,"b'Makes sense, thanks!'"
7244,376132802,b'```suggestion\r\n```'
7244,376132942,"b""This line is triggering a validation failure (we have some code that checks we don't have empty doccomments)"""
7251,376483924,"b""Do we know what scenarios filter will be null?\r\n\r\nI don't think that we use this functionality right now (i.e. no code invokes with a null filter) but if this happens we'll have the same problem where the IsActiveBuildTargetValid() won't be checked.\r\n\r\nIt might also be worth changing the line\r\n\r\n```c#\r\nsetter.Value.Invoke();\r\n```\r\n\r\nto \r\n\r\n```c#\r\nConfigure(setter.Key);\r\n```"""
7251,376484683,"b'The newly added code here and the code above (lines 104-107) are basically the same thing with the only difference being ""Modify Configurations"" and ""Configurations""\r\n\r\nCan we just move that stuff out of the if/else, so that it\'s common between the two, and just use the same text (i.e. modify configurations or configurations?)'"
7246,376492970,"b'So it\'s been quite a while since I did that but from what I remember if eye gaze was enabled, if you had any hands in the scene that had active far/near pointers, it would disable eye gaze, and you had to say ""select"" to bring back eye gaze. It was essentially unusable from a user perspective.\r\n\r\nIt feels like this change seems to rip that out and bring it back to the old problem, but I also don\'t know if maybe the change to TryGetEyeGazeRay above is actually want makes it all work out. So maybe that actually is the better/right fix since it would enable gaze raycasting even if the eye gaze state isn\'t in the ""active"" state.\r\n\r\nIf https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4431 isn\'t an issue with this code, then this change should be fine, though FWIW yeah there were some tests added to validate behavior, which should be changed to account for how cursors aren\'t visible now (but the ray itself should still be valid, etc)\r\n'"
7269,377296353,"b'Yes, thanks for calling this out! I intended to put it in the list but misplaced it.'"
7275,377319786,"b'The try/catch here seems like it\'ll prevent exceptions for leaking out, but I\'m not sure what this means for the rest of the data providers that are beyond the exception - i.e. if we\'re in the middle of resetting and we don\'t get to call it for the rest, don\'t we put ourselves into a potentially bad state (i.e. some data providers are never invoked?)\r\n\r\nI think this is probably more critical for things like ""Destroy"" where we should be calling destroy on each of the dataproviders, so maybe I should have left this comment down below.\r\n\r\nCould you elaborate a little more on why this is safe, and how in cases like Destroy we\'re ensuring that all of the data providers actually have the chance to get destroyed?'"
7275,377322340,"b""Do you have some more details on why Pointer can be null now but before it wouldn't be?\r\n\r\ni.e. in general adding more null checks for pointers is a bit scary because IMixedRealityPointer is implemented by classes that extend MonoBehaviour, and are thus a bit dangerous to do null checks against:\r\n\r\nOne such path:\r\nIMixedRealityPointer -> TouchPointer -> BaseControllerPointer -> ControllerPoseSynchronizer -> InputSystemGlobalHandlerListener -> MonoBehaviour\r\n\r\nI know we do this already in other places, I think we have to be careful in how we choose to add them going forward.\r\n"""
7275,377322983,"b""Can you also add a comment on why we're setting gazeHitResult here and the overwriting it down below (where it's already set today?)"""
7275,377325169,"b""A lot of our other code doesn't use the registry directly now and just goes like:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/version/releases/2.2.0/Documentation/Boundary/BoundarySystemGettingStarted.html#accessing-boundary-system-via-code\r\n\r\ni.e. CoreServices.BoundaryService\r\n\r\nTo reduce the verbosity and take advantage of caching stuff.\r\n\r\nIt's also interesting to note that, the values returned by CoreServices should ideally also change after profile switches"""
7275,377325337,"b""@Troy-Ferrell FYI, I assume that we should probably access things that's consistent with how our stuff is documented"""
7275,377332012,"b""Something that I think we should be a bit more explicit about is how mutable profile state is and if changing a profile's individual properties at runtime should actually affect the running state of the system.\r\n\r\nI *think* that I've seen a few places which have done either, but most of the new ones I've seen seem to err more on the side of this style.\r\n\r\nEither way, I think it's fine to take a stance, but we should probably have some documentation somewhere (i.e. in our profiles documentation) about the intent that it's read at enable, and changing profile properties also requires that you either restart the system, or that you re-assign the profile to the same profile (to force it to reevaluate new state)"""
7188,377350732,"b""So the SA dependency is pretty neat as an option - I think an interesting immediate scenario/selling point is being able to turn it on and being able to place things on walls, rather than having to precreate geometry in the scene.\r\n\r\nHowever, I think it might be more common for folks to load up the example in editor (and thus, having the geometry there and not have it be SA bound would probably be more immediately useful).\r\n\r\nI think it would actually be a nice option to have (i.e. engage SA system during placement) but it's probably fine without. It also sidesteps the question of how to coordinate SA disable/enable (i.e. the multiplexing issue that I mentioned before)"""
7188,377352753,b'Nit: Delete extra line here'
7283,377373991,b'```suggestion\r\n            {\r\n```'
7283,377374396,"b'Nit: There are still some members named with ""cone"" - it might be worth clearing that name as well now that it\'s a non-cone bounds check (i.e. IsInFOVCached instead of Cone cached)'"
7188,377376696,"b'Nit: ""IsBeingPlaced is true when GameObjectToPlace is selected""\r\n\r\n(i.e. just to be aware that some terms can be overloaded i.e. activated, also what does ""state"" refer to? - if the intent is to say that this property will have a true value when  GameObjectToPlace is ""selected"", it\'s simplest just to say that)'"
7188,377377077,"b'Also, maybe ""is selected"" -> ""is in the placing state""\r\n\r\nI think that down below we use the term ""placing state"" - it\'s best to avoid introducing a bunch of terms which refer to the same concept and to be consistent on the usage of terms. Otherwise, does activated == selected == placing state?'"
7188,377377462,"b'Nit: The last sentence here is super interesting, I think that what the comment here should say is about what as a consumer you should be aware of:\r\n\r\n""AutoStart is only called once in Start"" -> ""This value must be modified before Start() is invoked in order to have any effect""'"
7188,377377628,"b""i.e. when writing comments for someone using this, it's best to put it in terms or information that's useful/expedient for the consumer."""
7188,377377888,"b'Otherwise, the consumer has the make the mental leap here (AutoStart is only called once in start? Oh that means... I probably need to modify it before Start() is invoked in order for this to be useful)'"
7188,377378290,b'```suggestion\r\n        /// if there is a hit.\r\n```'
7188,377378649,"b'Should this be private (i.e it seems to only be used here). If this is being exposed publicly just for tests, we can also use the internal keyword.'"
7188,377379906,"b'Ah, does https://docs.unity3d.com/ScriptReference/LayerMask.NameToLayer.html this one work instead?'"
7188,377380409,b'Nit: If you have a set of data that is being mutated once per frame (or is otherwise used to avoid passing extra state between functions like we have with DidHitSurface) it can help to add some comments around them (i.e. the below properties are used in the same frame to compute hits and such'
7188,377380950,"b""I think this was discussed on a previous thread which got resolved, but I still think that you don't want to kill off all solvers - you just don't want to do anything in this particular one.\r\n"""
7188,377382377,"b""Yep, they're pretty much designed to be able to be chained (i.e. why there's a solver handler/manager that orders them in a deterministic way)\r\n\r\nIdeally this class should just no-op when it's not in placement mode, though FWIW I would imagine that the behavior here is kinda weird when using multiple solvers (i.e. tap to place really does expect to be alone.)"""
7188,377382675,b'```suggestion\r\n#if UNITY_EDITOR\r\n```'
7188,377382738,b'```suggestion\r\n#endif // UNITY_EDITOR\r\n```'
7188,377383385,"b'```suggestion\r\n            EditorGUILayout.PropertyField(magneticSurfaces, true);  \r\n```'"
7275,377398372,"b'Is this just an artifact of what looks like a stabilzation -> mrtk_dev merge, or is this new to this change?'"
7275,377398906,"b""I think what I'm trying to understand here is, if Destroy() is happening and an exception is thrown, I don't see how the other data providers' Destroy() function is ever called - I'm guessing that this change was done because we hit an exception in testing some of these things, and in the case of Update() it's probably not problematic, but I'm trying to understand how the Destroy() case specifically recovers - i.e. will Destroy() get queued up and called on the next frame when it's safe?\r\n\r\nMy assertion here is that I think that if an exception is thrown on Destroy, there is nothing in the system that will ensure that the other data providers' destroy() function will be called - if my assertion isn't correct, I just want to understand why I'm wrong."""
7288,377786966,"b'Nit: Consider maybe searchAllApplicationData instead of searchFullFileSystem (because full file system.. is that like, root of the C: drive? Is it the ""/"" folder?'"
7288,377787952,"b""Yeah as long as we haven't already put this method in an existing release, we're fine to change as we want. \r\n\r\nI would even be open to not having the alternate behavior and introducing when needed (because we don't currently have a test for the alternate behavior, it could grow stale and not work)"""
7333,380851765,"b""I just added the license header (it looks like @provencher has the setting that allows for contributor commits for open PR branches on his fork).\r\n\r\nI'm dismissing the stale review and getting this change in now."""
7345,380858459,"b'""future manipulation features and bug fixes will be made for this component, whereas the manipulation handler will be deprecated."" -> ""this component is a replacement for ManipulationHandler""\r\n\r\nMainly a nit around the language here, since ""future manipulation features and bug fixes will be made for this component"" -> can lead to question of ""what features and bug fixes"" but I think the intent is just that this is the new hotness and don\'t use the old not hotness'"
7345,380860847,b'Nit: Is it also worth covering the event fire order (i.e.HoOverStarted->ManipulationStarted->ManipulationEnded->HoverEnded?)'
7345,380862997,"b'Given that the manipulation type earlier is a filter on what will happen, I assume that if you specify manipulation type == one handed, but then add a constraint that is two handed, it is basically going to be a no-op right?'"
7345,380864706,"b""It might be helpful to also specify the default axis space (i.e. is it global space, or local space) - obviously configurable using the property that's below"""
7345,380865036,"b""paging  @thalbern - How much do we want to enforce the removal of 'you' from our docs?"""
7345,380865229,b'```suggestion\r\n#### Constraint on rotation\r\n```'
7275,380873628,"b""So oddly enough and I wish we caught this earlier, but GetAllServices() actually returns a HashSet which is not actually sorted in a deterministic order:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/f7494ca8b3b8331d3fa184caf970be8d18acc6d5/Assets/MixedRealityToolkit/Inspectors/MixedRealityToolkitFacadeHandler.cs#L91\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1?view=netframework-4.8#remarks\r\n\r\nI guess this works as-is just because we're lucky but I guess we could still get bit by this going forward...\r\n\r\n@Troy-Ferrell  FYI"""
7347,380994172,"b'Yep, also botched a few words'"
7363,382167145,"b'Ah, I should move this up'"
7188,382178771,"b""Nit: Indent this so that it's like the other ones below (i.e. I think 16 spaces? Or something else greater than zero!)"""
7188,382179620,b'```suggestion\r\n        [SerializeField]\r\n```'
7188,382179996,"b""Because this is the first time we're checking this in, there's no need to have FormerlySerializedAs. If the issue here is solving a problem in the example Unity scene (i.e. it still has OnPlacingStarted) we should just be able to reserialize the .unity scene and make it update to this new hotness."""
7188,382180093,b'Same comment on FormerlySerializedAs'
7188,382180293,"b""Nit: Add a doccomment on what this is (since it's protected and could be extended by others)"""
7188,382180817,"b'FWIW I think that string interpolation like this is generally nicer - makes for less "" + ... + "" things.'"
7188,382181046,"b""Nit: This comment doesn't add too much, I think it would be okay to remove it."""
7188,382181125,b'Nit: Add a comment about units (seconds)'
7188,382181193,b'Nit: Add a comment about units'
7188,382181636,"b""Time is notoriously annoying to deal with in different locations, where sometimes you'll have seconds (since some arbitrary time) sometimes it'll be milliseconds since epoch, sometimes it'll be nanoseconds. And then you add time zones and other stuff on top of it and it gets weird. But yeah, units super important for time."""
7188,382182965,b'Nit: It could be worth adding a <remark> to this function to say that it takes control of the game object layer temporarily during placement. '
7370,382750443,"b""This training semicolon feels like it could be dangerous... I think it's the way of saving the most vertical space but it sticks out so much I wonder if it would be better just to have a UWP version and non UWP version, or just put the WINDOWS_UWP part first i.e. \r\n\r\n```csharp\r\n private bool ShouldShowProfiler =>\r\n#if WINDOWS_UWP\r\n            (appCapture == null || !appCapture.IsCapturingVideo) && \r\n#endif // WINDOWS_UWP\r\n             isVisible ;\r\n```"""
7370,382751219,"b""There are other locations in our code that marshal onto the UI thread (i.e. dispatch to UI thread) in order to access GetForCurrentView APIs - are those just... wrong (i.e. they're also called I think from similar Unity functions)?"""
7625,405840619,"b""Sorry for getting to this late - I think that the chance for issues here is pretty minimal as called out, but it's still a case where someone's public surface modification (i.e. someone telling us to set a property) can get wiped out by something that shouldn't be wiping them out.\r\n\r\nIf we're concerned about doing this reconciliation on each pass, the right thing to do would be to modify the property setter or have some other one-time process of reconciliation - this is kinda an awkward in between words where we're actually doing reconciliation each time (and doing it on a property that affects data set by callers)."""
7625,405861174,"b""@davidkline-ms this has a side effect of adding N number of spherecasts per frame, where N is the number of prioritized layer masks passed by the caller - I know that some consumers have been seeing some performance issues associated with per-frame raycasts (I think they were fairly expensive).\r\n\r\nThere's a note on the other place that calls OverlapSphereNonAlloc that it should only get called once per frame, but from this change + the existing code, the number of times I think is actually 3*N (where N = size of array)."""
7625,405861889,"b""For totalNumColliders, can you help explain a little more about why we're tracking the total number of things returned from OverlapSphereNonAlloc? I'm assuming that OverlapSphereNonAlloc uses the entire buffer (of size maxQuerySceneResults) instead of starting off at the previous totalNumColliders (i.e. I'm assuming it isn't just looking from the last set value in the array and honoring the fact that there are existing elements).\r\n\r\nThis type of function looks to be a general buffer passing one, which tend to not (at least, they really shouldn't) have memory of how much of the buffer is already used (usually when you pass a buffer you can assume that you can use the entire buffer)."""
7639,406849984,b'Consider linking directly to where the snippet is like:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Input/HandTracking.html#polling-joint-pose-from-handjointutils'
7639,406850100,b'Nit: Be consistent with usage of 1. 1. 1. or 1. 2. 3.'
7639,406850522,"b'Nit: On formatting, it\'s a bit weird seeing the double indent (i.e. I get that this ""this step only applies"" is kinda a note... maybe we should use the NOTE format that is used below?'"
7639,406850775,"b""Also I *think* that this section wasn't fully fleshed out (it seems like this was an outline for content yet to come)"""
7639,406851099,"b""Do we want to mention the specific version that these docs were written against? Otherwise we're somewhat vulnerable to an unexpected update (i.e. they get a new version and these instructions get broken). """
7639,406851709,"b""For these I like to usually also point to some more details for what's going on - we dont' have to write out fully here why this is necessary, but even a link to a comment on an issue explaining what this step is for is kinda nice to have."""
7639,406852003,"b""Similar to my previous comment, it would be nice to have the background for why this is needed, where just a link to a comment on an issue would suffice (i.e. more reading for what's going on).\r\n\r\nOtherwise it is kinda opaque and automagic, which can be kinda weird to parse through"""
7639,406852531,"b'For the menu paths, it feels a bit weird to me seeing leap configuration happen in two different places:\r\n\r\nMixed Reality Toolkit > Utilities > Update > Configure CSC File for Leap Motion\r\nMixed Reality Toolkit** > **Utilities** > **Leap Motion** > **Reconcile Leap Motion Define\r\n\r\nIt feels like maybe they should be in the same leaf folder\r\n\r\n'"
7639,406852623,"b'If not, it would be cool to hear the rationale for why not'"
7639,406854414,"b""I think that we might want to remove the links to 'create a data provider' and 'input simulation' because they aren't super pertinent to this - i.e. i read this as a consumer of leap, not as someone who wants to add a leap provider (this has already been done)"""
7639,406855081,"b""Great comments, though there's a bit of duplication here (i.e. it would be better to have the details of what the values are on the values themselves (as they kinda are already).)."""
7639,406855384,"b'If you wanted to mention the ramifications of the choice though (i.e. these have the effect of determining the offset of the hand information relative to the camera), that could be interesting to note here.'"
7639,406855647,b'Nit: Add a doccomment for this'
7639,406855990,"b""Were you observing a case where the file was marked as read only? I'm curious if we actually just should bail out or log a warning if that happens - generally speaking if things are marked as read only I think we should honor the filesystem state, and not try to mutate things from under the developer"""
7639,406857979,"b'One thing to be careful about here is that, this code assumes that the file only contains:\r\n\r\n-warnaserror+\\n-nowarn:1701,1702\r\n\r\nWhat this means is if we ever change csc.rsp, this line of code will overwrite things to a now subset of the new stuff (plus 618 and 649).\r\n\r\nThis is a general problem around mutation where you\'re trying to do an additive (single time, repeatable but safe to repeat because it doesn\'t mess things up), and for that assuming exactly what\'s already there is dangerous.\r\n\r\nThere are a few options:\r\n\r\n1. Update the code to parse out the nowarn part, and just write out that section as an additive (i.e. figure out the numbers, then add 618 and 649 to the array, and then write it back out).\r\n2. Verify ahead of time that the nowarn line ONLY contains ""-nowarn:1701,1702""'"
7639,406865086,"b'Can we have a couple of changes here:\r\n1. A slightly more descriptive name than ""FileName""\r\n1. A comment explaining what this is for (i.e. used to detect if Leap exists)\r\n\r\nThe tricky part is that this is still a somewhat generically named thing as well - I don\'t know if we want to do a secondary check to filter things down a bit more.'"
7639,406866073,"b""Do you know if this stuff is getting run on each recompile (i.e. trying to make sure we don't add a ton of duplicated work on each script recompile)"""
7639,406866858,"b'Is this supposed to return true ONLY if the define was added by the function? i.e. if the defines were already there, then this technically no-op, but it would still return true. In general the language and specifics of return behavior should be super crisp'"
7639,406867108,"b'@keveleigh is it ""Definitions"" or ""defintions""? since it\'s effectively a const.'"
7639,406868555,"b'It\'s interesting that we depend on LeapMotion being copied directly to the application root - we should call this out explicitly (or do the work to support having it in some other arbitrary root -- maybe based on where README_BEFORE_UPDATING is located?)\r\n\r\nNote that we\'ve already gotten feedback in the past of people putting MRTK in different locations in the project structure (completely makes sense) - I would expect those people do the same to leap, and I assume we would also support that.\r\n\r\nIt\'s also perfectly reasonable here to say ""nah, I don\'t wanna do that"" in which case we should just warn or log or do something to tell people that something is wrong.'"
7639,406868963,"b""Out of curiousity, if we're doing a directory test, is the .cs part of the check still required?"""
7639,406869794,"b""Note that each of the functions does its own AssetDatabase.Refresh() -are they required to run before the next runs, or can this be done a single time after all of these functions are done?\r\n\r\nit's possible that it's actually required (i.e. deleting these files should be reflected in the asset database before AddAndUpdateAsmDefs is called) but wanted to make sure that this is the case."""
7639,406870113,"b""Ah, I see we actually do handle it, it's just this particular line that doesn't handle it"""
7639,406875081,"b""Another comment around safety of overwriting what's there - if we ever change the content in Microsoft.MixedReality.Toolkit.Providers.LeapMotion.asmdef, this code here will probably blow it away - as a result it will need to be updated in two locations.\r\n\r\nWe'll either need some code here that handles it, or something that will error out/break in the CI pipeline to catch this."""
7639,406939568,"b""Nit: I don't think this null check is needed (unless you OOM in which case god help us all)"""
7639,406940013,"b""For the logic around telling if there actually is Leap, consider abstracting that away to some other class (i.e. LeapUtilities.HasLeapCodeFunctionButBetterNamed()).\r\n\r\nIt's better (I think) than having a bunch of different places look for the same named .cs file, and is more robust to changes we might have to take in the future (i.e. imagine we determine that this file is the wrong one, it would be easier to change the utility function than every single instance)"""
7646,407547656,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.Update"");\r\n```'"
7646,407547809,"b'```suggestion\r\n        private static readonly ProfilerMarker AddTouchControllerPerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.AddTouchController"");\r\n```'"
7646,407547874,"b'```suggestion\r\n        private static readonly ProfilerMarker UpdateTouchDataPerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.UpdateTouchData"");\r\n```'"
7646,407547972,"b'```suggestion\r\n        private static readonly ProfilerMarker RemoveTouchControllerPerfMarker = new ProfilerMarker(""[MRTK] UnityTouchDeviceManager.RemoveTouchController"");\r\n```'"
7646,407549291,"b""It feels like just knowing that the base class is taking time isn't actually super helpful - if there were some way to also propagate the actual system that might make these markers more helpful here."""
7646,407551641,b'Should this happen after the enabled check?'
7646,407551824,"b'Otherwise it\'s possible for us to get a lot of ""quick"" events which would make things seem fast'"
7646,407552728,b'Same comment on the enabled thing.'
7646,407553915,"b""Similar Q in this file around IsInteractionEnabled checks (i.e. is it worth doing it if it's a no-op)"""
7646,407589042,"b""FWIW I think it would be better to take the changes now. We're already in the code and I highlighted the cases that I saw (I don't THINK there are a ton more)"""
7639,407591834,"b""Do you know if the serializedObject.Update() and serializedObject.ApplyModifiedProperties() are needed if leapmotion assets couldn't be found."""
7639,407592127,b'Nit delete extra line'
7639,407592408,b'I think the formatting/alignment on these lines is kinda off'
7639,407593516,"b""@keveleigh @davidkline-ms as a more general design question, it's interesting to me that a provider's internal code has to reach outside of the provider to get it - i.e. this is a hand created by a provider, and in order to get the provider itself, it has to reach outside of its typical bounds."""
7639,407594153,"b'I\'m a little confused by this comment - ""attachment hand needed for this hand, left or right hand"" - maybe expand on it a little bit?'"
7639,407596449,b'Nit: needs an extra line after the endif and before this function'
7639,407597093,"b""Be careful with anonymous lambdas like this, which can lead to GC overhead. I know that there have been several articles around this and Unity in the past, so I've tended to avoid this.\r\n\r\nIf we want to do this, it would be good to do some profiling to make sure that the data suggests this is safe to do.\r\n\r\nConsider that TryGetJoint will probably get called in an inner loop update, so it has to be performant.\r\n\r\nThis could probably be avoided if metacarpals wasn't an array but was a set instead."""
7639,407597583,b'Super nit can be static (no local state)'
7639,407604714,"b""Is there any way we can reduce the number of array finds (i.e. indexOf, Find) - if we're gonna be using an enum like TrackedHandJoint we can always:\r\n\r\n1) Use a set\r\n2) Just use the int value of the hand joint as the array index."""
7639,407616500,b'```suggestion\r\n        /// is LeapControllerOrientation.Desk and is necessary for the hand to appear in front of the main camera. If the leap controller is on the \r\n```'
7639,407616877,b'Nit: I think the sentence is missing a verb'
7639,407620246,b'The max size of this is 2 right? Otherwise we get some overwriting behavior.'
7639,407621665,b'Should these conditions be else-ifs? Or would it be valid for OnHandDetected and OnHandDetectionLost be valid to be called in the same run?'
7652,407755610,b'Yeah some of these feel over instrumented (i.e. especially instrumenting itoa())'
7664,409120243,"b'If you really want to mess with people you can add ""float"" here'"
7664,409121686,"b""Nit on naming, if only because it has come up in other styles and conventions I've seen in the past.\r\n\r\nIn general, prefer expanding out words if the delta between the fully expanded out thing isn't that much different between the non-expanded case.\r\n\r\nIn this example, columnAlignment reads easier than colAlignment (marginally so), and the cost of four additional characters relative to the shortening is not significant.\r\n\r\nTaken to the extreme this leads to some really long crappy names (in a lot of Java code people complain about TypedIteratorFactoryImplemantationFactory.java) but there's a reasonable middle ground that we can strike in examples like this."""
7664,409122464,b'```suggestion\r\n                        if (y == yMax - 1)\r\n```'
7664,409124871,"b""Also, considering that this has already been done with a bunch of other collateral it's fine to pass on this, just thing to think about going forward."""
7664,409125542,"b""Actually linking to githubusercontent is kinda neat - do you know what the retention story is for images and content that's there?\r\n\r\nIt could be better than saving stuff in our repo (i.e. storing binary blobs kinda blows in git)"""
7664,409133273,"b""Don't use numbered variable names (i.e. child2 -> childTransform).\r\n\r\nIt's odd in this case to see two things named child, but one is a transform and another is a primitive (one of the weird parts about having numerically named things)"""
7664,409135084,b'Da best'
7664,409144062,"b""I don't think that 'j' is used anywhere here or in the similar scope below right? I'm guessing that this might be some copypasta"""
7664,409183164,"b""I think that this code means that the first row or column will never get affected by this (i.e. it will always lay out with a left or top most alignment) - this could be fine, but it might be worth doc-ing that as well (i.e. this only intentionally affect the second row or column on and on)\r\n\r\nOr maybe it should affect the first as well - I think the main feedback here is the intent should be called out intentionally so that there's no confusion in the future if it's a bug or a feature."""
7639,411524400,"b'I think for distances using sqrdMagnitude is generally faster, though the speed increase depends on the platform:\r\nhttps://docs.unity3d.com/ScriptReference/Vector3-sqrMagnitude.html\r\nhttps://answers.unity.com/questions/125882/vectordistance-performance.html\r\n\r\n'"
7639,411525182,"b""However at the same time, some of that guidance was written some time ago so I'm not actually super sure how much of that is relevant. Supposedly on mobile platforms it's still pretty noticable"""
7639,411526414,"b""Since you've added the description to the enum values themselves, there's no reason to have the comments duplicated here (so I think this doccomment can be reduced to just:\r\n\r\nThe location of the leap motion controller"""
7639,411527955,"b'Nit: If directories should end in /, should also add a comment saying that (i.e. otherwise a new person might just add:\r\n\r\nLeapMotion/Core/Player/Tests'"
7639,411530827,"b""Moving this version to the class level (i.e. a const string) would I think be better because it puts it at a place where the reader would be more likely to see it (i.e. I read class, I see oh what's this string, oh we support version 4.4 only)\r\n\r\nOtherwise this value is somewhat buried in the functionality here.\r\n\r\nIn general if there are values that you think would be interesting for a consumer to know (or possibly configure) consider having them at a higher level."""
7639,411533389,b'```suggestion\r\n            // If one of the leap test directories exists then we assume the rest have not been deleted\r\n```'
7639,411533854,"b'Nit: It would probably be good to reword this comment - i.e. I could read this as ""oh maybe we don\'t handle leap being not in the root of assets""'"
7639,411534302,"b""Alternatively, you can specify that you don't need the '/' - I *think* the code supports this as well."""
7639,411534830,"b'```suggestion\r\n                if (!references.Contains(""LeapMotion""))\r\n```'"
7639,411536749,"b""```suggestion\r\n                        string[] currentWarningNumbers = cscFileLine.Split(',', ':');\r\n```"""
7639,411538089,b'Nit: LeapMotionFilesDetected (i.e. ideally functions should be named with some verb/action stuff instead of a noun)\r\n\r\nEven though this is a private function we should still keep to those standards.'
7639,411542806,"b""Note that if we're gonna be creating game objects in enable, we should also handle disable and destroy the same ones.\r\n\r\nOtherwise starting/stopping services (which I think are still not fully supported but ideally would be soon) would keep creating new objects."""
7639,411543082,b'Same for any other objects created by this thing.'
7639,411545087,"b""@davidkline-ms for perf markers in subclasses, do we recommend having the base function be invoked OUTSIDE of the subclass's marker?\r\n\r\ni.e. should base.Update() be moved outside of this using clause? Otherwise this marker ends up capturing the work of the base class (which I believe has its own instrumentation)."""
7707,413168331,b'```suggestion\r\n            if (type == null)\r\n```'
7707,413168440,b'```suggestion\r\n            if (type != migrationHandlerInstanceType)\r\n```'
7707,413168618,b'Nit: Update params list or delete params list (either is good!)'
7707,413169125,"b'```suggestion\r\n                Debug.Log(""New migration type selected for migration. Clearing previous selection."");\r\n```'"
7707,413169307,"b""Nit: I don't think this is really a warning type thing right. It's more just informational"""
7707,413170813,"b""Out of curiousity, what is the expected exception you'd get here? Just in general it's weird for a function to both return true/false and possibly throw."""
7707,413173339,"b""Nit: The nesting of these if/else statements is somewhat deep, where conditions can be maybe a little hard to decipher later. i.e. to be a bit clearer by what I mean by this, consider that this condition is nested in a case that validates that objectPath is null (and thus, this case is not null) - it gets a bit weirder in the else -> else if case down below (where it's even a bit harder to tell what the prexisting condtions are).\r\n\r\nFor readability going forward, consider having something like\r\n\r\nif (IsSceneGameObject(...)) {\r\n}\r\nelse if (IsPrefabAsset(...))\r\n{\r\n}\r\nelse if (IsSceneAsset(...))\r\n"""
7707,413175712,"b""Nit: Could also consider having it like:\r\n\r\n\r\n```c#\r\nvar canMigrate = CheckIfCanMigrate(type, parent);\r\nPrefabUtility.UnloadPrefabContents(parent);\r\nreturn canMigrate;\r\n```\r\n\r\nSo that you don't have to maintain cleanup in two different branches - in this case it wont' be an issue going forward but in general having duplicate cleanup paths can be super dangerous (you might update one and forget the other)"""
7707,413175848,"b'```suggestion\r\n                        if (CheckIfCanMigrate(type, parent))\r\n```'"
7707,413176001,b'```suggestion\r\n            if (migrationObjects.Count == 0)\r\n```'
7707,413176147,b'```suggestion\r\n            if (migrationHandlerInstanceType == null)\r\n```'
7707,413176307,b'I think the space made its way to the wrong side of the if in this line!'
7730,416746469,"b""Change this from else -> if to else if (there's no need to have an else and then an if unless you have other clauses, and even if that were the case it would probably still be better to restructure things in that case)"""
7730,416747622,b'Delete extra line'
7730,416749175,"b'```suggestion\r\n                        // The user selected ""None"", return null. Unity uses this string where null\r\n```'"
7730,416749901,"b'Avoid using hardcoded strings in multiple locations - if we\'re going to be using ""None"" as a special value, have this be a const earlier in the class (because on line 286 we compare against ""None"" directly).'"
7730,416750883,b'Is this comment copy pasta-ed from somewhere else?'
7730,416752101,"b'Can we expand this setter so that the assignment is on its own line, and the preferences set is on its own line? This seems too familiar with bugs around == vs = in various statements (i.e. is this intended to set a int value or a bool? Is = a typo?)'"
7730,416753865,"b""It feels a bit weird that this cache is located in this file, instead of the one that actually reasons over it - i.e. why not go in  SpatializerUtilities given that the logic for cache 'invalidation' is there?"""
7730,416754819,b'Why not use the public property InstalledSpatializers?'
7730,416757350,"b'So I guess this utility wont catch changes to the list where the number stays the same, but the plugins change right?'"
7735,416766262,"b'Nit: Might be worth deleting this log, as it will show up in the unity log and be kinda cryptic (what is this list of processed objects?)'"
7735,416800358,"b""Nit: From a class design perspective, if a consumer is going to be adding messages to a log, it might be better to wrap that within this (i.e. addToLog(String text) and then outputToLog()) or something.\r\n\r\nIn this case it's pretty minor because usage of this as a simple place to put stuff that survives a loop is maybe fine for what you're doing here"""
7735,416801313,"b""If we encounter 5 errors, I think this will lead to an output of 15 different lines, where the first error is logged 5 times total, the second one is logged 4 times total, and so on.\r\n\r\nAppending the status to the log is good, but maybe we should only output the stuff at the end so that we don't multi-log"""
7735,416801589,b'I think that for public properties we still want IsProcessed (same for Failures and Log below)'
7735,416809128,"b'```suggestion\r\n                                    tooltip = ""Object migration was successful.\\nClick for more details."";\r\n```'"
7735,416809336,b'Nit: Remove this extra line'
7176,417623598,"b""I'd vote for going with the tools package approach - I'm a bit wary of adding random calls to the internet in our toolkit, and if the concern is around the foundation package (totally valid), this really is a tool anyway (should be in the tools location)."""
7762,418686201,b'```suggestion\r\n1. Uncheck or shrink the size of the 3d icons under the Gizmos tab in the Scene view to reduce scene clutter\r\n```'
7765,418761319,"b'Nit: Instead of specifying 4.4 or 4.5, just say ""if it\'s a supported Leap Motion version"". (Same for the returns section)\r\n\r\nOtherwise future updates to the supported version will also require a comment change, which doesn\'t really scale super well.'"
7765,418761377,b'Same comment on the specific version'
7756,418762004,"b'Should I enable docs checking under the Asset path as well? I added tools that would detect invalid image paths, and it seems like this would have really come in handy here.\r\n\r\n@keveleigh @CDiaz-MS thoughts?'"
7756,418762412,"b""Nit: I think that these paths can just be Images/Button/... right?\r\n\r\nIt's odd otherwise that it goes up a directory, then back into itself"""
7756,418762508,b'```suggestion\r\n## Hand menu examples\r\n```\r\n\r\nMay as well be consistent with caps'
7756,418763010,"b""```suggestion\r\nUSB cable connection gives better rendering quality and stability. To use USB cable connection, disconnect from the HoloLens from Wi-Fi in HoloLens's Settings and launch Holographic Remoting Player app. It will display an IP address that starts with 169. Use this IP address in Unity's Holographic Emulation setting to connect. Once the IP address for USB cable has been identified, it is safe to connect the HoloLens to Wi-Fi again. \r\n```"""
7756,418763168,"b""Reasons being, as long as we're talking about disconnecting and connecting things from wifi, we should be clear about what device is getting connected/disconnected (in case someone reads quickly and thinks it refers to their laptop, etc)"""
7766,418764614,"b""I guess the neat thing is that even if they do this, it's a no-op from their perspective right?"""
7766,418764683,"b""i.e. it adds something to CSC but it doesn't really end up affecting them."""
7766,418764970,"b""Is this comment something that we back, or is that something that LeapMotion recommends? If it does work in both it might be safer to just not say anything specific here (or link to the leap page about recommended configurations). Basically I don't want to duplicate recommendations (and have them potentially get out of sync in the future)"""
7766,418765299,"b'This thing has a bit of text:\r\n\r\n""- If using Unity 2019.3.x, go to step 3.""\r\n\r\nBe careful with the list we have here and explicitly called out steps - add a specific hyperlink in here if you need to reference a specific location, as explicit steps (especially in VERY long steps like this) can easily get out of date.'"
7766,418766184,"b'Do we want to specifically call out the string ""Leap Left Controller"" or should we look for handedness of the controller/event data instead?\r\n\r\nIn general it\'s very odd to see string based comparison for identity (i.e. ""Leap Left Controller""), and if we have to do that, this shoudl be a constant exposed somewhere else in MRTK. People shouldn\'t be doing explicit string based compares to a locally defined string.'"
7756,418771582,b'Done!'
7775,419686738,"b""Nit: Any thoughts on adding a blurb about why you might want to do this? (i.e. if you're experiencing some bad look at feel with the defaults, this lets you use some of the other reprojection techniques to see if they will improve your stuff)"""
7839,423153036,b'```suggestion\r\nNote that BoundsControl is still in experimental phase and therefore api or properties might still change in the next version.\r\n```'
7839,423154118,"b'Nit: Just because there\'s a few loosely related sentences beginning with ""Also"" it might be easier for reader to parse a set of bullet points (i.e:\r\n\r\n- Bounds control no longer recreating visuals configuration channel (i.e. CreateRig)\r\n- All properties are configurable at runtime.\r\n- DrawTether....'"
7855,424042740,"b""I think the only odd side effect here is that if the spatializers do change (i.e. added/removed) then we won't pop up - i.e. it's odd that if you have one configured it will show up on spatializer count change, but not when it's not selected.\r\n\r\nIt's almost like that should be moved first then to work around that?"""
7859,424136509,"b""If rotation or position isn't available, this will still update the position/rotation right? (i.e. I'm guessing it should just zero it out for that frame?)"""
7859,424145058,"b""Yeah I think either way it's kinda wonky - this is fine to go with (could still be worth having a comment because it looks suspect using a value when it failed. Calling out the intent here as being the least evil thing is useful)."""
7903,426908448,"b'It feels like it would be better to have a single hand tracking cell, where we put down both HL2 + Leap stuff both covered/linked (i.e. one for hand tracking specifically which then goes to how to get started with HL2 or Leap).\r\n\r\nI think this would require some refactoring of content, however, so this is probably fine for the time being.'"
7886,426912867,"b""@vaoliva @Railboy I don't fully understand why there's a non-Unity Editor case - I assumed that these migration handlers were editor-only in the first place (i.e. should we actually just have this asmdef marked as editor only instead of doing these types of ifdefs?"""
7886,426914151,"b""Why is this line doing a subset of the checks that are done in EditorCheckForCustomIcon? i.e. why aren't the other ones here as well (or rather, why not just call EditorCheckForCustomIcon if we're gonna do a duplication of some of the condition checks?)\r\n\r\nOtherwise you run the risk of introducing bugs where you update one of the if clauses but not the other."""
7886,426914919,b'Combine this into a single if clause (no need to have nested ifs)'
7886,426916792,"b""If this hits, does this mean we'll have some iconset created that is now basically divorced from other things (i.e. it's not actually fully hooked up?). \r\n\r\nUsually for automated processes that hit issues, you want to add some form of rollback to ensure that we don't persist extra disconnected state (i.e. in this case assets we've created which are now not fully connected).\r\n\r\nWhat's the particular exceptions that you're expecting to see here? i.e. what's the next step a user would take beyond seeing this message? Would it just be to file a github issue?"""
7920,428141958,"b""Nit: For readability across it might be helpful to instead have something like this:\r\n\r\n```c#\r\nfloat distance = (distanceSpaceMode == SpaceMode.Local) ? localDistance * LocalToWorldScale : localDistance);\r\nfloat clampedDistance = Mathf.Clamp(distance, 0f, maxPushDistance);\r\n```\r\n\r\nI think that the order of parameters is already kinda hard to remember (i.e. given @keveleigh's comment) so having a less operation-intensive thing on a single line could help to alleviate that)"""
7920,428142941,"b'Super nit: Is this specific frame await necessary (i.e. destruction of the parent is only safe if testButton is also dead), or would this end up being correct if they get queued up to happen in the same frame?'"
7920,428144162,"b""Also something I don't know too much about (maybe @thalbern @CDiaz-MS @cre8ivepark know) - should the min distance here be the starting push distance instead (i.e. is that actually the lower clamp value?) The two happen to match by default (i.e. both zero), the only reason I ask is because usually when there's a min and max value defined elsewhere and we clamp somewhere in the code using only one of them, there's probably a good reason for us not using that (which can be worth a comment)"""
7937,428766864,b'I can take a look to see if there are some other rules we can add for these things (i.e. removing extra lines when collapsing closed braces'
7951,429422999,"b'```suggestion\r\n                            if (!EditorApplication.ExecuteMenuItem(""Mixed Reality Toolkit/Utilities/Migration Window""))\r\n                            {\r\n```'"
7951,429423133,b'I think there will also need to be a matching brace after the suggestion'
2775,217574735,"b""This is advanced audio. Most apps will be fine with Unity's built in audio support and not need to add these features on top of it."""
2775,217575009,"b""Indeed, but in that case, shouldn't we be registering it as a `IMixedRealityComponent` so we know we're adding it to the correct platforms?\r\n\r\nI don't see us checking SDK's or plugins in this PR, but we do set it, but what if we're not targeting WMR platform?"""
2775,217575771,b'Which scripts in this PR depend on a specific platform or plugin?'
2775,217575873,"b""Good question, bc if they aren't why are we setting the HTRF spatializer?\r\n\r\nAnd - How are we handling platform switching if we are setting the spatializer?"""
2775,217576484,"b'The spatializer is being set in the Unity project for the example scene. This PR does not handle that, but is instead a port of audio influencers and effects.\r\n\r\nFor setting the spatializer, see #2592.'"
2775,217576800,"b""Okay, well what about devs who import the MRTK into their project? Will they have to manually set it as well? Do we have a way to warn them if it's unset? or if their platform is unsupported?"""
2775,217576876,b'How do we handle other spatializers for other platforms? would this demo still apply?'
2775,217577360,"b""Again, for most of that, see #2592.\r\n\r\nThis PR uses stock Unity components. If the resulting audio ends up spatialized or not, it doesn't really matter. These simply add effects on top of the audio."""
2775,217578892,"b""Still seems like something we should bring into core so people can create their own concrete types for. I don't see the advantage of having an interface if we're using it for a single implementation."""
2775,217579061,"b""Why can't people create their own concrete types out of an interface in the SDK layer?"""
2775,217579566,"b'Because they might not have the SDK. Remember, the SDK is only an interpretation of the interfaces, which are all part of the framework.'"
2775,217580801,"b""If they don't have the SDK, there's nothing to talk to the interfaces. Why do I need the interfaces if the script that consumes them doesn't exist?\r\n\r\nI'm aware of what the SDK is."""
2775,217581595,"b""I don't think you guys understand the point I'm trying to make. \r\n\r\nEither we use an interface and we move it to core, or we keep a concrete type and remove the interface."""
2775,217581828,"b""I understand that that's what you're saying.\r\n\r\nI'm saying that that's not a requirement. It's fine as-is."""
2775,217582119,"b""It's a requirement per the architectural agreement we laid out before we started."""
2775,217582884,"b'Can you point me to that requirement? The interface layer mentions devices, interactions, and input, none of which this seems to fall under.'"
2775,217583057,"b'It is not a catch-all layer, nor should it be, as the size of the core should be kept as minimal as possible.'"
2775,217583274,"b'https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/MRTK-vNext.md#objective\r\n\r\n>A Building block style front end interface that is easy for new users to construct new Mixed Reality solutions easily, whilst still providing an open framework for intensive developers to consume.'"
2775,217583421,"b""> It is not a catch-all layer, nor should it be, as the size of the core should be kept as minimal as possible.\r\n\r\nAgreed, which is why it's only and interface defining the structure, not the concrete implementation."""
2775,217583576,"b'Essentially this file belongs in the ""interface layer""'"
2775,217590195,"b""fine. i'll move the interface. i still do not agree that EVERY interface belongs in the core, but i dont want to argue anymore about an SDK component port."""
2775,217590354,b'there are likely to be more PRs where there are sdk layer specific interfaces...'
2775,217592852,"b""I just want to make it clear that we're not just dragging and dropping code from the htk.\r\n\r\nWe need to be thoughtful of the way we've structured things, and make sure we're sticking to what we agreed on with the initial proposed architecture."""
2542,207562575,b'Why do we need to keep a reference to this?  It should only ever be read from the Active Profile.'
2542,207562860,"b""Shouldn't this component be added to the GameObject we want to visualize? (or do we do that below?)"""
2542,207590215,"b""I'd even argue that components should never really be reading from the profile, as it should generally be consumed by managers that are implementing them.\r\n\r\nThe Managers should be passing this information to any components that need the required information. That way we don't have to query the MR Manager at all but to get the active manager for our system."""
2542,207597912,b'it gets added to the game object that has the script attached.'
2542,207598272,"b'The boundary manager does provide this data., i cached here since it is the only portion of the boundary system we have been using. BTW, i should probably get the floor Y value from the boundary manager, so this will be changing today'"
2542,207563136,b'`is or will be`?'
2542,207563220,b'`is (should be)`?'
2542,207563421,"b""Let's lose the profile reference and make sure we're always reading the current profile from the Config"""
2542,207580574,b'z-fighting with what?'
2542,207580624,b'Should we make this configurable?'
2542,207580863,"b""Shouldn't the Boundary System be keeping track of this?"""
2542,207598405,"b""it's should be, since the user can specify to hide the plane"""
2542,207598640,"b'z-fighting with the floor. I suppose we can make it configurable, but this is exactly how the original code was implemented.'"
2542,207598734,"b""no. it's up to the app. they may want to show/hide based on specific scenarios"""
2542,207600018,"b'yeah, we should let the boundary manager handle this. '"
2542,207358763,b'`PlayAreaVisualizer`?'
2542,207361909,b'seems reasonable'
2542,207712901,"b'These operators do not use the custom equality operators declared on `UnityEngine.Object`, and so bypass a check to see if the underlying native Unity engine object has been destroyed. An explicit null comparison is preferred in order to clarify intent.'"
2542,207712912,"b'These operators do not use the custom equality operators declared on `UnityEngine.Object`, and so bypass a check to see if the underlying native Unity engine object has been destroyed. An explicit null comparison is preferred in order to clarify intent.'"
2542,207712935,"b""since we've declaired the using at the top do we need ` UnityEngine.Experimental.XR` here?"""
2542,207712971,"b'could we add this ""fudge"" factor to the profile settings?'"
2542,207712985,b'not sure this comment is necessary '
2542,207713206,"b""It's a tiny value to raise the PlayArea plane above the floor at (0,0,0). Why would you need to configure it?"""
2542,207713276,"b'Just trying to get the ""majick"" numbers out \xf0\x9f\x98\x89 '"
2542,207723149,b'simple enough..'
2542,207723151,b'nope. missed removing that one. nice catch'
2542,207723160,"b""there's another way we can fix this... by adjusting the render order between this quad and the floor... let's file an issue for beta so we can determine the best way to address."""
2542,207723161,b'ok'
2542,207958855,b'Tracking the offset via #2552 '
2542,208035005,"b""What's the goal here? It seems like the only thing that can come from this is unexpected behavior? Would it be better to throw an exception or log an error? Otherwise, why not just offer object reference equality as the definition?"""
2542,208037793,b'Seems like this is at least worth a log. Is there a reason to no do that now?'
2542,208062186,b'plx file an issue to properly implement .Equals. thx!'
2542,208062214,b'plz file an issue (task) to handle fallback.'
2583,210370157,b'`Boundary System Visualization`?'
2583,210370342,"b'I think leaving off the last part is a bit misleading, and might have devs looking for a boundary system component on it, when most likely none will exist.'"
2583,210371973,"b""if we know the layer index, why not just assign it here since it's private? \r\n\r\n```\r\n/// <summary>\r\n/// Layer used to tell the (non-floor) boundary objects to not accept raycasts\r\n/// </summary>\r\n/// <remarks>\r\n/// Default is Ignore Raycast layer.\r\n/// </remarks>\r\n private readonly int ignoreRaycastLayer = 2; \r\n```"""
2583,210373217,b'wondering if this should be a `LayerMask` instead of an `int`'
2583,210373469,"b'`Boundary System Visualization`?\r\n\r\nI think leaving off the last part is a bit misleading, and might have devs looking for a boundary system component on it, when most likely none will exist.'"
2583,210392814,"b""makes sense... i'll update it"""
2583,210392897,"b'setting the layer on a GameObject needs the value, not the mask.'"
2583,210396657,"b'... right, but unity processes it via LayerMasks'"
2583,210399846,"b""understood. I needed to set the mask of the boundary system visualizations so that they would not interfere with the cursor / teleporting. at least it's a one time lookup."""
2583,210421247,"b'Do we want this to be configurable, like with focus?\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/44175288-9cbf7180-a09a-11e8-95ac-7d2200a35ad4.png)\r\n'"
2583,210422519,"b'I don\'t believe so. The boundary visualizations should behave ""transparently"", meaning that they should not interfere with cursors or other objects in the scene (like the auto-boundary in the shell)\r\n'"
2583,210438657,"b""If that's the case, why can't we just hard code the int value and explain what the value represents in the comments?"""
2583,210441222,"b'Future proofing, in case the layer ever changes.'"
2583,210442579,"b'I seriously doubt that, but then we could just update it, if it ever does change.'"
2583,210443203,b'This is a one time cost that ensures that we do not have to update.'
2583,210443278,b'Defensive coding :)'
2583,210443816,"b'But at the cost of runtime perf.  Idk, I think in this case perf > once in a lifetime event'"
2583,210444587,"b'how does this hurt perf when it is a ""done once"" task?'"
2583,210444733,b'we may be over-indexing a little on perf when we are discussing startup / one time lookups'
2583,210445219,"b'It has a cumulative impact, death by a thousand cuts.'"
2583,210446969,"b'In this case, death by...one cut?'"
2583,210447320,b'I worry about how hard it would be to find these types of bugs if Unity opts to change but sure...'
2583,210447833,"b""Still not sure why we just don't use a layer mask haha.  That way we could support more than a single layer, if we so choose to in the future."""
2583,210448315,b'you cannot set a layer mask on a gameobject\xe2\x80\xa6 '
2809,219607147,"b'Do we want to make this internal, or just sealed?'"
2809,219640185,"b""I'm fine with either one, but tend to error on internal until otherwise needed. They're designed with one use in mind, and aren't very flexible. """
2809,219914208,b'sealed indicates that code (including the toolkit) cannot extend the class... I tend to fall on the side of internal.'
2740,216495382,"b""Let's remove empty methods"""
2740,216497054,"b""shouldn't this have a `IMixedRealityDiagnosticsHandler`?"""
2740,216497392,"b""Should it? I assumed since it's an internal behavior that the manager driving it was sufficient. Maybe it makes sense to hook up with the interface though. """
2740,216497949,"b""Well I noticed you're just setting it outright. bc you have a reference to it. \r\n\r\nBut that would also remove the need to keep a cached reference to this component after you add it to your Quad"""
2740,216498738,"b'this is a scaffolding PR, I am ok with leaving them until we know if they are needed.'"
2740,216499170,"b""They're just the default Unity ones. Let's take'em out."""
2740,216504040,"b'Got it, that seems much cleaner. '"
2740,216509259,b'Do these need to be public still? or set able?'
2740,216509654,"b'Nope, good catch'"
2740,216509868,"b""Actually*: Needed to set initial values, since I don't see a way to pass as constructor arguments. Looking through documentation now. """
2740,216510336,"b""Mono's don't have constructors. you can set it inline:\r\n\r\n`public bool ShowCpu { get; set; } = false;`"""
2740,216510706,"b""I'm talking about from the manager on creation.\r\n\r\n```\r\nvar component = diagnosticVisualization.GetComponent<DiagnosticBehavior>();\r\ncomponent.ShowCpu = ShowCpu;\r\ncomponent.ShowFps = ShowFps;\r\ncomponent.ShowMemory = ShowMemory;\r\n\r\n```\r\n\r\n\r\nMaybe it would be better to rely on the eventing to pass those values? I believe everywhere the property could be created is followed by a `RaiseDiagnosticsChanged()`"""
2740,216511126,"b'Yeah as long as you call `RaiseDiagnosticsChanged` after every place you could potentially create it, you should be okay.'"
2740,216518486,b'I forgotten one thing. We need to register this game object to get events'
2809,219010135,b'Class name must match file name of you wont be able to attach the script... plz rename to DiagnosticBehavior.cs'
2809,219073613,b'Nice catch @davidkline-ms :D '
2809,219247705,b'Woops. Behavor sounds like a dinosaur \xf0\x9f\x98\x82'
8035,441037745,b'Do you know if issue numbers persist across forks (i.e. if this gets forked/moved does this still remain relevant - I assume not) - if not it might be better to have a full link to the issue (to preserve the project/org/issuenumber context)'
8035,441038072,b'Nit: Move this back up to keep using statements alphabetical'
8059,441190564,"b'I feel pretty strongly about disconnecting these two. The current way also makes it impossible to set the SurfaceNormalOffset without turning off UseDefaultSurfaceNormalOffset (i.e. you want to have one part of the code that changes the offset amount, and have something else that applies policy for when that value should actually be used).'"
8050,441191146,"b""The foreach itself isn't the problem -  it is the .Reverse() call (which AFAIK allocs more memory to maintain enumeration state). I could be wrong on this, but this is true for the LINQ usage (which this isn't) and I assume that this would still be returning a new collection because the underlying one (GetAllServices()) returns a read only data structure."""
8059,441868911,"b""Yeah I don't think that this is going to be too problematic (i.e. I think 2 is what's gonna happen) but at the same time, I don't think that this assert will hurt (and could help in case 1), so it's fine to leave in IMO."""
8059,441869211,"b""Even though this would be double mentioning, it's probably still worth adding the note that this is only honored if UseDefaultSurfaceNormalOffset is false."""
8019,442342789,b'```suggestion\r\n        private bool isSetup = false;\r\n```'
8019,442344978,b'Move else to its own line\r\n}\r\nelse\r\n{\r\n}'
8019,442346624,b'Nit: Delete extra line'
8019,442350262,"b""Can you add this difference to the comments for SnapToEnd?\r\n\r\nThis is an interesting behavior difference which isn't obvious from the existing comments about this:\r\n\r\n/// Whether the system, when approaching the upper bound,\r\n/// will treat the end limits like snap points and magnetize to them.\r\n\r\n(i.e. it seems like the behavior is the same as snap points)"""
8019,442350440,b'SnapToEnds? It applies to both begin/end right (or both ends of the elastic)'
8019,442352677,b'Nit: Add a line between Mass and /// <value>\r\n\r\n(Same for other ones as well)'
8019,442354424,"b""We don't have a lot of other usage of nested functions elsewhere - let's make these local private ones for now (I want to ensure we get some agreement first about where we like it etc)"""
8019,442354499,b'```suggestion\r\n                if (current > 0)\r\n```'
8019,442356486,b'```suggestion\r\n            for (int i = 0; i < 50; i++)\r\n            {\r\n```'
8072,442536151,"b""Oh nooooo I didn't mean to include this one"""
8075,442552144,b'```suggestion\r\n[writing tests](Contributing/UnitTests.md#writing-tests)\r\n```'
8072,442573186,b':S\r\n\r\nOops face'
8058,443733889,b'Can we add some more doccomments about when you should use this/what the purpose is etc?'
8058,443734655,"b""Why the comment change from retry -> register? The parameter name is retryWithRegistrar + the name of this function is register so I would assume that it's trying to register."""
8058,443739005,b'Was the path normalization required to get things to work here?'
8058,443740015,"b'Ah, to deal with the separator index in PackageCache'"
8058,443741732,"b'Please add tests for this function.\r\n\r\nI think that dealing with Path.GetFullPath is going to be tricky (aside from creating temp files in tests) but the other stuff would be important to have test coverage.\r\n\r\nThe string manipulation below is ""simple"" but easy to regress, and I can\'t imagine how scary it would be to make a change in the future and hope that we don\'t break one of the three clauses.'"
8058,443743595,b'Should we break if we ended up finding it (i.e. rather than keep searching)'
8058,443744304,b'Is this change related to the UPM stuff?'
8072,445014662,"b""Thanks for catching this! Should be fixed up in the latest now. It turns out yeah, it shouldn't be marked for all platforms because of this specific reason (though I suspect this could also be changed to work by not using editor APIs)."""
8099,445020095,"b""OnKeyboardFunctionKeyPressed?\r\n\r\nI think the delta in characters isn't that much (i.e. four letters)\r\n\r\nAlso reversing the order of Key/Func to mirror ValueKey pressed"""
8099,445020977,"b""The order here means that when the event is fired, the internal state isn't updated yet right? i.e. if I ask for IsShifted, this will not yet be updated.\r\n\r\nWe can go either way, but we should document in the comments/remarks for what the expectations are."""
8088,445027353,"b""Is it safe to add new values in the middle of the enum? i.e. is this serialized as value (i.e. integer) in any location in any of our .assets or any customer .assets?\r\n\r\nA quick search doesn't show anything.\r\n\r\nIf we wanted to be careful with how we update enums we should be adding to the end to avoid this class of issues (this a generally reasonable practice anywhere you go)"""
8088,445028864,b'Nit: Curious about consistency - why does this function use an if () but the other ones use switch () (where they are roughly doing the same thing?)'
8088,445030248,"b""The start press button only exists on the left (and there's nothing equivalent on the right correct?)"""
8088,445030640,b'The numerical ordering of these seems to be off (i.e. it goes 10->11->13->14->13->15->16) - is this by design or a copy pasta? (If by design curious about the reasoning there)'
8088,445034392,b'It would be helpful to link to an issue or something that explains more about what the stopgap is/plans for how to unstopgap. Otherwise this will become a scary comment that loses context pretty quickly going forward.'
8088,445034632,"b""I should say, I'm super happy that you left a comment here because it highlights the why really well, I think it just needs a little more info."""
8088,445035394,"b'Nit:\r\n\r\n```c#\r\nprotected static List<InputDeviceCharacteristics> DesiredCharacteristics = new List<InputDeviceCharacteristics>()\r\n{\r\n    InputDeviceCharacteristics.Controller,\r\n    InputDeviceCharacteristics.HandTracking,\r\n    InputDeviceCharacteristics.Controller | InputDeviceCharacteristics.HandTracking\r\n};\r\n```'"
8088,445035767,b'```suggestion\r\n                foreach (InputDeviceCharacteristics inputDeviceCharacteristics in DesiredCharacteristics)\r\n```'
8088,445037285,b'Ah wait I see all of the serialized asset changes'
8058,445040720,b'This still has a preserve marked on it'
8058,445041493,b'It might be worth doing another pass (i.e. grep -ri preserve *) to make sure we fully clean this.'
8058,445042367,b'Is the / intentional here vs \\ from the previous one?'
8058,445042511,"b""I'm guessing yes to test the other slash to verify behavior"""
8058,445658062,b'@CDiaz-MS FYI'
8107,447092428,"b""Can you explain a little more about how the fix is addressing the linked issue #8097?\r\n\r\nIt looks like the only real delta in this change is that we're inserting the meshObject into the meshes dictionary first and then reclaiming the object, vs before where we deleted it first and then re-added it to the meshes dictionary. However, the meshes dictionary is just a local data structure so it's not like adding anything there will trigger anything interesting, so I don't fully understand how this order actually changes anything"""
8105,447102234,"b'```suggestion\r\n            ""    below (in the previous example, we would remove the TeleportSystem below). \\n"" +\r\n```'"
8105,447105107,"b""According to Unity's own docs: https://docs.unity3d.com/Manual/ManagedCodeStripping.html\r\n\r\nIt looks like it only supports one link.xml for the entire project (or really, it just says it's per-project) - if the consumer has their own link.xml does this still end up working out, or does one of them end up taking over the other?"""
8105,447106185,"b""What are your thoughts for going forward - if we have to add a new assembly to that list, but they already have an autogenerated one, we're gonna tell them to just delete the link.xml to regenerate a new one right?"""
8107,447247438,"b""I think @matthejo's comment he mentioned a specific codepath where the removes are done immediately but the adds are async - it seems like that could likely be the case. Was that particular path ruled out?"""
8127,448018750,"b'Ah, glad you left a comment on this.\r\n\r\nI should have commented this up, but by default Debug.Log will log callstacks, which grows the unity player logs quite significantly. This makes it super hard to read the generated logs (because those call stacks are really really verbose). This is quite intentional to make parsing the logs easier, because otherwise they grow reallllly big\r\n\r\n'"
8127,448019269,"b""I named these .Log to match the style of UnityEngine.Debug log naming (i.e. familiarity being the goal). (Which also has this inconsistency)\r\n\r\nWould be curious to hear other's preferences on this"""
8160,453950102,b'Can you leave a comment for why this is using the same activation point modifier for finger tips?\r\n\r\nAll of the other ones use a unique constraint (even if they are still referencing arbitrary decimal values)'
8160,453951050,"b""There's some copy pasta now here between this and the above function:\r\n\r\nIsPalmFacingCamera\r\n\r\nThis is a nit but they're fairly close, would be good stewardship to consolidate (i.e. IsPalmFacingCamera calls -> GetPalmPose)"""
8160,453951801,"b""Nit: Move this into the next scope (i.e. within the if statement below) since it isn't used outside of that scope.\r\n\r\nIn general it's best to have data scoped to the scopes that actually use them rather than having them dangling (unless there are OTHER reasons you explicitly want to have them available at higher scopes)"""
8160,453953789,b'Nit: Update the comments for this to mention that these are global bounds (I understand that changing the name would be tricky because of API surface changes) but doccomment updates are fine.'
8165,454464718,"b""There are a bunch of things in here that use Get-Location, which I think is equivalent to using PWD:\r\n\r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-location?view=powershell-7\r\n\r\ni.e. it requires the script to be run from a specific folder.\r\n\r\nIt might be better to take in a specific directory as a parameter to the script, rather than try to auto infer based on the folder you're currently in."""
8165,454465050,b'Same general comment around Get-Location in this script as well (see:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/8165/files#r454464718)'
8165,454465327,b'Is there significance to the ~ (i.e. wildcard?) '
8165,454466879,b'Nit: Can you expand on the comment to explain why it needs a custom step?'
8165,454466986,b'```suggestion\r\n        # are packaged in the examples package.\r\n\r\n```'
8165,454473559,b'I think this clause is already in the if statement above (so this line can be deleted)'
8165,454474366,"b""I haven't seen the Out-Null thing that often before - what happens if it is removed?"""
8179,455891160,"b""@CDiaz-MS what are your thoughts here?\r\n\r\nSometimes having an unrelated function modify other parameters under the cover (especially ones that people can set/control themselves) can be weird.\r\n\r\nConsider the following in consuming code:\r\n\r\n1. I call StartPlacement but tap to place hasn't actually started yet\r\n2. I then set AutoStart to false (thinking, hey, I already told it to start placement, so I don't need future enable/disable transitions to auto start as well).\r\n\r\nThe difference here is that the StartPlacement call itself is really a one time thing (i.e. I want it to start once) but AutoStart is actually a many time thing (any time this starts, I want it to begin placement).\r\n\r\nI think that for the purposes of this though, I *think* that what you have here is fine assuming we update the docs for both (i.e. and also guide people to use StartPlacement if they actually want to cause the one time auto start, and use AutoStart for the other case)"""
8180,455948034,"b""I can't find eyeGazeSimulationMode as a thing that existed in the past (i.e. is this doing anything?)"""
8180,455953374,"b'Ah, probably should just be simulateEyePosition'"
8180,456027219,"b'I actually had a concern about getting rid of this old one (i.e. simulateEyePosition property) but I guess because bool == true == 1 and bool == false == 0 actually map pretty well, I think this ends up being just fine.\r\n\r\nYou\'ll probably wanna validate this, but if you instead do FormerlySerializedAs(""simulateEyePosition"") it MIGHT be okay.\r\n\r\nThe only other thing to mention is that you\'d probably want to keep the old public bool (mark it as Obsolete) and then make it just map to defaultEyeGazeSimulationMode == CameraForwardAxis i..e SimulateEyePosition => defaultEyeGazeSimulationMode  == CameraForwardAxis or SimulateEyePosition => defaultEyeGazeSimulationMode  != Disabled)'"
8180,456027743,b'Nit: Delete these commented out lines.'
8180,456028194,"b'Also nit: Similar to the previous probably want to preserve this with an Obsolete tag, and then map to the new one in whatever way you choose with the other comment'"
8180,456029557,b'```suggestion\r\n        /// Enable eye simulation\r\n```'
8180,456060631,"b""@julenka I think this enables eye gaze = camera by default and I know that we've had plenty of conversations in the past about why this isn't good but I never remember why @keveleigh to keep me honest if I'm making this up"""
8127,457561991,b'Added some comments to the inside of that function to capture this intent.'
8127,457563823,b'Added some more comments here!'
8127,457566120,"b""Ah this is a part where I wanted to keep consistent with existing file (i.e. consistency with existing file, with folder, with project in that order).\r\n\r\nI'd hold off on a single line prop change and want to update all of them at once."""
8127,457656202,b'```suggestion\r\n[Diagnostic System settings](../Diagnostics/ConfiguringDiagnostics.md#enable-verbose-logging))\r\n```'
8191,457705487,b'/thumbsup'
8191,457721900,"b'Super nit: For some reason ""for how"" reads really awkwardly for me, but the other things I can think of feel really stuffy ""i.e. Defines that control how input simulation handles movement""\r\n\r\n/shruggie'"
8196,458327063,"b""I think looooong term yes, I was hoping to keep these changes scoped to making things work.\r\n\r\nThere is still some weirdness though by making all playmode tests just do this, since in those cases you'll still need a yield return null like:\r\n\r\n```c#\r\nbase.Setup();\r\n// now do my interesting setup\r\nyield return null;\r\n```\r\n\r\nSo it still... yeah the base setup doesn't add much value there.\r\n\r\nThere are a few cases where it saves you from having to do stuff, but because there's this weirdness I opted to postpone that decision for this work (i.e. make 2019 tests work)\r\n"""
8196,458412049,"b""Yep, this is exactly it - I hit this with the test and I from what I can see, it doesn't seem like a valid test to me - i.e. what this is verifying/validating is that for ANY platform that we have, we will never have a default spatial awareness system set up by default. I don't think that this statement is true."""
8196,458412315,"b""I'm happy that you asked!"""
8200,460142979,b'Nit: BackplateTransform\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions'
8200,460143638,b'dooooodad'
8200,460144631,"b""Nit: Consider naming ToggleInflate or something like that because this function will also deflate in the case that it's already inflated"""
8200,460145602,"b""The intent of the waiting in this case (in both deflate and inflate) is to create a staggered inflate/deflate experience right?  If so that could be a useful comment to leave (i.e. usually having comments on awaits/yields that do so for arbitrary time periods is helpful in understanding why they're needed)"""
8200,460155206,"b""Nit: have each bool have its own bool type prefix i.e. \r\n\r\n```c#\r\nbool translationElasticFoldout = false;\r\nbool rotationElasticFoldout = false;\r\n```\r\n\r\nThe reasons being:\r\n1. Having the default value explicitly on the line it's defined/closer to it makes it easier to see what the default value is.\r\n2. Reduces the chances of merge issues/easier merges (this is more likelly to happen in much larger codebases and isn't as applicable in this case, but it's still a good practice to have to avoid problems in general.\r\n3. Not a huge difference in verbosity (i.e. same line count, some more characters).\r\n4. Consistent with existing stuff.\r\n\r\n"""
8200,460161968,"b""Since this is now specific to a single dimension, I'm curious if there's any way to specify if there's any guidance/limits to the ranges (i.e. do they generally represent a percent of the thing being modified, or meter units, etc). Or if it's really specific to each application, that would also be helpful to understand."""
8200,460163696,b'Is it safe to assume that SnapRadius should generally be equal to half the distance between the closest two snap points?\r\n\r\ni.e. if the snap radius is actually equal to or larger I assume it ends up being really wonky.'
8200,460164976,"b'Can you add some more details to the comments to explain how the snap points will be repeated to infinity? i.e. if you have points (0,0,0), (1, 1, 1) (0, 1, 0) are they all repeated somehow by taking the convex hull of all of those points and trying to stack them next to each other? Or are only a certain set of points stacked? Does snap radius come into play (i.e. the way they are repeated to infinity?)'"
8200,460165401,b'Is it valid to have UseBounds = true and repeatSnapPoints = true at the same time?\r\n\r\nOr is it not expected and would be weird.'
8200,460167356,"b'What does repeating to infinity mean within the context of a set of euler angles? (Or just, repeated until it fits the entire sphere?)'"
8200,460167553,b'Is this in radians or degrees? Or something else?'
8200,460171137,"b'Nit: In general, avoid one letter variable names unless you\'re doing something like for (int i = 0....)\r\n\r\nThe difference between being able to read later down the function (1 / mass) vs (1 / m) is worth the additional 3-5 characters (i.e. not having to read up the function to be like - what does m stand for again?)\r\n\r\nI think this mostly applies for drag/mass, less so for HandK (where K can be thought of as a ""constant""/thing)'"
8200,460171363,b'```suggestion\r\n            foreach (var interval in extent.SnapPoints)\r\n```'
8200,460175046,"b""Can you add a comment about the deltas between this and the inbox Unity lerps (i.e. https://docs.unity3d.com/ScriptReference/Quaternion.Slerp.html and https://docs.unity3d.com/ScriptReference/Quaternion.Lerp.html)?\r\n\r\nUsually if we add helpers that seem to exist already, there's probably some critical key difference that is worth calling out (i.e. why use this vs that)\r\n\r\nSame comment for Slerp down below!"""
8200,460175150,b'Nit: Also add a comment about shortWay'
8200,460175243,b'Nit: \r\n```\r\nif ()\r\n{\r\n}\r\n```'
8200,460175323,b'Same with the thing down below'
8200,460175381,b'Also I guess this is a super nit'
8200,460175882,b'```suggestion\r\n            if (!extent.StretchBounds.Contains(currentValue) && extent.UseBounds)\r\n```'
8200,460178914,b'Can you add some comments for the internals of this function for roughly the intent of each of large sections within here?'
8200,460182420,b'Nit: I think for these cases const might be more appropriate:\r\n\r\nhttps://lassiautio.com/2018/01/21/constant-or-static-readonly/\r\n'
8200,460185463,"b""Do you have a sense of the impact/cost of evaluatijng the magnitude or each of these things on an ongoing/passive basis? i.e. if the scene starts, I'm assuming this doesn't do anything because translationElastic might be nul at this point, but after manipulation has happened, I assume this will run on every update loop."""
8209,461644000,b'I think this needs a FormerlySerializedAs attribute to that previous versions will work (i.e. across upgrades)'
8209,461644688,"b""Actually since this is an experimental area I suppose it's not necessary, but it's fairly light weight and would probably help a consumer :)"""
8209,461646239,"b'```suggestion\r\n                int partiallyFilledTier = (SafeModulo(NodeList.Count, ItemsPerTier) != 0) ? 1 : 0;\r\n```'"
8209,461647491,"b""Or maybe some other better name for it - remainder is a bit misleading because we collapse non zero to zero here (i.e. non zero -> 1, zero -> 0). Really this is trying to find the number of rows at the end that aren't complete because they don't fill an entire thing.\r\n\r\nI think that you could probably do the same thing here by just doing a Ceil on SaveDivision"""
8209,461647649,b'Same comment on naming here.'
8209,461649297,b'Can you leave a comment on why (either here or in the code) the Abs() is required in the X case but not the Y case?'
8209,462449922,"b'>private [](start = 8, length = 7)\r\n\r\nSuper nit: I think the Safe* functions can all be static right?'"
8209,462454233,"b'>tiers [](start = 36, length = 5)\r\n\r\nWould it be possible to have something define the words Tier, Page, and Index?\r\n\r\nThese are fairly important in understanding the mechanics of how scrolling works (as seen by ScrollViewTests which do tier/page/index navigation).\r\n\r\nI could write up some ASCII art if this would help :)'"
8227,462602491,b'```suggestion\r\n        /// Get the audio clip associated with the current session.\r\n```'
8230,463101960,b'```suggestion\r\n        /// Checks if the engaged joint has released the scrollable list\r\n```'
8230,463169942,"b""I think that this hide/open/articulated thing is to put things back into a state that other tests are expecting.\r\n\r\nIf this is the case, you might want to move stuff like this to the TearDown() function (it doesn't exist here but it could be added).\r\n\r\nOtherwise, what could happen is if this test ever fails, it wont' run the teardown stuff down below - so other tests that run after it will likely spuriously fail for non obvious reasons.\r\n\r\nWhat's the difference between seeing 1 failure vs 3-4 failures? It depends on which you happen to choose to look at first. Let's say that the issue is actually because this test failed (and then didn't clean up) - if this causes ContentClickHappensOnTouchUp to fail, it may do so in a non-obvious way, and if you happen to choose to look at ContentClickHappensOnTouchUp first, you will likely end up wasting time digging into what went wrong there (nothing went wrong!) - the error was in a different test."""
8204,463279519,"b""Super nit: Bring this into if (axis.IsValidVector()) because it's not needed unless IsValidVector ends up being true."""
8232,463313565,"b""If it's super fast (<30 seconds) then that's fine (as part of the standard PR validation).\r\n\r\nIf not we could always spin up some other command (i.e. /azp run mrtk_upm) to generate those on demand\r\n\r\nWe've done a bunch of work to trim down pr validation time so looking to keep that as low as possible."""
8204,463698627,"b'I just fixed this, closing this out.'"
8236,463720055,b'Super nit: To reduce some of the noise here we could have a local helper variable i.e.\r\n\r\nHandleFlags enabledHandleFlags = (HandleFlags)enabledHandles.intValue;\r\n\r\nJust to cut out the visual noise associated with getting HandleFlags '
8236,463721166,"b""I *think* we might also want None here to avoid problems like we've seen:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/8190"""
8236,463722965,b'Nit: Update the summary doccomments to mention the translation type as well.'
8236,463729774,"b""Going forward, I'd recommend against doing prep work for future PRs that increase/change the public API surface.\r\n\r\nThere are any number of things that could happen that would invalidate a future change, which would leave code in this state (i.e. virtual but nothing extending). \r\n\r\nIf the very next PR is going to be using this then that's fine - if we're a couple of PRs out then I would recommend removing these changes from this because they go directly to mainline."""
8236,463729926,b'Thanks for leaving this comments on the intent of these changes - super helpful in reviewing!'
8236,463733073,"b""Out of curiousity, does handlesChanged add a ref to this object?\r\n\r\ni.e. it would be odd to me that this object be destroyed while it has an ongoing registration as a listener.\r\n\r\ni.e. how does ~TranslationHandles get called when it's registered?"""
8236,463737120,"b'```suggestion\r\n            Debug.Assert(index >= 0 && index < NumFaces, ""Face center index out of bounds"");\r\n```'"
8236,463737177,b'Classic off by one'
8236,463737918,"b'```suggestion\r\n            Debug.Assert(index >= 0 && index = NumFaces, ""Face axes index out of bounds"");\r\n```'"
8236,463738022,"b'Oops, resolving and opening something else'"
8236,463738111,"b'```suggestion\r\n            Debug.Assert(index >= 0 && index < NumFaces, ""Face axes index out of bounds"");\r\n```'"
8236,463739668,b'Nit: Should this go into the if statement above:\r\n\r\nif (boundsCorners != null && faceCenters != null)\r\n\r\nOr is there some case where these are both null that UpdateHandles will succeed?'
8236,463740828,b'```suggestion\r\n            faceCenters = new Vector3[NumFaces];\r\n```'
8236,463741481,b'```suggestion\r\n\r\n```'
8236,463741739,b'Or use the Debug logging utils https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8127'
8236,463742303,"b'Turn ""visuals"" into a const string at the head of this class, and replace the references to it with that const string variable.\r\n\r\nThere are a few places that use this explicit string and this makes it somewhat fragile (i.e. super easy to break by changing the string in one location but not the other)'"
8236,463742410,b'Same comment here on using a const string instead of hardcoded string'
8236,463742612,b'Nit: Log the handle index (so you can maybe more easily know what face it is)'
8236,463742968,b'Same comment on debug logs (or remove prior to checkin).\r\n\r\n'
8236,463744810,"b""What if TranslationHandlePrefabColliderType is of type Sphere, should we still destroy the SphereCollider in that case? Or if it's box, will the collider get created for this?\r\n\r\ni.e. the part that handles collider recreates will only do if one isn't destroyed (lines 41 to 50ish)"""
8236,463745677,b'```suggestion\r\n            }\r\n            else if (faceAxes[handleIndex] == CardinalAxisType.Y)\r\n```'
8236,463745786,b'Is it possible for none of these if/else statements to be true?'
8236,463749011,"b'Same comment for ""visuals"" here and using const string.'"
8236,463750583,"b'From a readability side, it might be helpful to have some other define that\'s like:\r\n\r\n```c#\r\nenum Face {\r\n    ForwardX = 0,\r\n    BackwardX = 1,\r\n    ForwardY = 2,\r\n    BackwardY = 3,\r\n    ForwardZ = 4,\r\n    BackwardZ = 5,\r\n}\r\n```\r\n\r\nI see that we have a few places that reference these different faces via hardcoded settings, and it\'s hard to mentally map and read (i.e. if you look at this again in 3 weeks, the question becomes ""what was zero again?""'"
8236,463752365,b'Is there a specific order that boundsCorners must be set? If so we should define what that order is (I see we use this assuming certain indices are certain things)'
8238,463800484,b'```suggestion\r\n            if (controllerList == null)\r\n            {\r\n                return;\r\n            }\r\n```'
8232,464664551,"b'since it\'s already working now probably don\'t change it in this iteration, but going forward we shouldn\'t be putting business logic in the lower level functions like this (i.e. the fact that it\'s a preview should be somethihng higher up telling it it\'s a preview, not the code here that\'s figuring this out).\r\n\r\nThe fact that it gets interpolated this way is kinda weird - it would be fine, however, to take these in separately and have something (i.e. another field) that is ""isPreview\' which would trigger this logic.'"
8232,464665221,"b""I don't think it's good to take a dependency on the current working directory. Check out the other build scripts that get references to get specific directories on the build machine."""
8232,464665510,b'CWD is hard to depend on...'
8232,464665857,"b""Is this used for the build machine or for local runs?\r\n\r\nIn general I'm still averse to using CWD based things because they are not reliable."""
8232,464666735,b'Actually... we should delete these lines that acquire nodejs in this location.\r\n\r\nWe should not be reaching out to external web dependencies in a build pipeline outside of the specific packages provided by the containers on that CI system.\r\n\r\nPlease delete lines 91 to 101'
8232,464667658,"b""Local runs would still assume that it's being run in a certain folder - still a weird dependency to have.\r\n\r\nIf you wanted to base this instead off the the location of the script itself (so that it works regardless of what folder you're in), that could be okay.\r\n\r\nThis would prevent you from using a script in a DIFFERENT repo from affecting the CWD version, but  Idon't know how often you want to do that anyway"""
8050,465279438,"b""It feels like this order is a bit off - ReadProfile needs BoundaryProfile (i.e. if it's null, it will crash right?)\r\n\r\nOr is the check of BoundaryProfile == null on line 59 not needed?"""
8050,465283220,"b""If I happened to pass the same profile in that matches the current one, we'd still want to reset in that case right?"""
8050,465283246,b'```suggestion\r\n                if (Application.isPlaying && activeProfile != null && value != null && activeProfile != value)\r\n```'
8050,465285197,"b'Do you know why in the else case were and synchronously resetting things within this call, but for the new thing we do that async on the next update?\r\n\r\nIt does feel a bit weird that we have a divergence of behavior between these two (it feels like we should be consistent with when we chose to tear things down and restart things).'"
8050,465287493,"b""It's also a bit weird here that this function sets activeProfile = profile (i.e. the act of setting it calls that again) - is that call still necessary here?"""
8050,465289631,"b""Can you add some comments for why we're doing RemoveCurrentProfile here and then InitializeNewProfile in Update?\r\n\r\nIt's obvious to folks working on this right now but the order actually is worth documenting."""
8050,465290959,"b""There's going to be time between LateUpdate and Update where MRTK is destroyed across calls to update the ActiveProfile - it woudl be good to capture that in the remarks.\r\n\r\nAlso would be good to mention that any scripts that have higher priority than the MRTK object will run before this has a chance to set things, so to be careful with accessing MRTK state if you happen to have such a thing."""
8050,465291788,b'Can you add a comment on this (i.e. designed to avoid running in cases where the MRTK instance is reinitializing)'
8050,465293044,b'Can you explain a bit why we swapped the order here?'
8050,465293150,b'Can you leave a comment about why we both check against null and also against null?'
8050,465309926,b'@davidkline-ms '
8050,465316068,"b'Nevermind, I thought I saw a capital A there.'"
8050,465316180,b'```suggestion\r\n\r\n```'
8050,465316646,b'@davidkline-ms '
8232,465360963,"b""If this is going to be a templated package.json, we shouldn't call it package.json (lest we have folks who try to consume it directly using git submoduling who then ask why it's not working).\r\n\r\nThis should either be:\r\n\r\n1. We can rename this to package.json.template and then rename it to package.json as part of the CI packing\r\n2. Get rid of %samples% and have the CI packing just add the samples in (i'm sure we could parse the JSON there, add it it, then reserialize it on output)\r\n\r\nGoing with #2 would allow for git submoduling, though 1 is probably easier"""
8232,465361342,"b""This might feel pedantic... which I guess it partially is. However, package.json as a concept has meaning outside of our changes, and this file doesn't match the meaning of the existing package.json. It's actually a template. So we should call it package.json.template"""
8232,465361661,"b'```suggestion\r\n    ""description"": ""Extensions to the Microsoft Mixed Reality Toolkit. This package includes: Hand Physics Service, Lost Tracking Service and Scene Transition Service."",\r\n```'"
8232,465363435,"b'```suggestion\r\n     },\r\n```'"
8232,465363497,"b'```suggestion\r\n     },\r\n```'"
8232,465364575,"b'Do you know if Set-Location affects the current location even outside of script crashes/exits?\r\n\r\ni.e. if something above dies before we have a chance to call Set-Location to restore things, would we possibly hose all future scripts?'"
8232,465366704,"b'""-Version is a required flag and is missing""'"
8232,465367136,"b'(I think the ""Unknown"" is still somewhat ambiguous because it could have been provided but maybe it\'s not a known version number).\r\n\r\nIn general for things like this where the flag isn\'t provided, just saying ""X is required and hasn\'t been set, please set it dude"" is more explicit'"
8232,465367380,b'Are the quotes here necessary to force a more higher level data structure to its string representation?'
8232,465367663,"b'```suggestion\r\n    Are we creating official packages? If not, the version of the artifacts will be formatted as ""<$Version>-preview.<BuildNumber>"".\r\n\r\n```'"
8232,465368472,"b'I\'m a bit confused by this todo and the fact that we already have a packageName that is literally called extensions - it seems like this would be a stale todo.\r\n\r\nIf the intent is to say ""hey, here\'s is where you could add other scripts/handlers, then you could say add another elseif statement modelled after above.\r\n\r\nBut actually in that case I assume that we\'d get rid of some copy pasta because the only difference here are the script names and the package name (which we could do using a hashtable)'"
8232,465368686,"b""This comment line doesn't seem to be accurate - it seems to be relative to something else."""
8232,465369475,"b""Out of curiousity, why did this code opt to operate on json files by manually doing file edits, rather than just using powershell's JSON functionality?\r\n\r\ni.e. we could read it in, add the samples node, write it out, and it would I assume also then auto-format and do other stuff."""
8232,465369748,"b""It's just odd to see manual file manipulation of types like JSON/XML that have decently robust libraries in modern scripting languages.\r\n\r\nI haven't tried this myself in powershell so maybe powershell's things actually are pretty crappy for this (I'd believe that)"""
8232,465370085,b'We should be consistent with the usage of separators (i.e. / or \\) within this file.'
8232,465846202,"b""In that case, they should be called package.json.template\r\n\r\nOtherwise I guarantee you  some N > 2 people out there will try to submodule this and use it as a UPM package via a git address and then probably waste 30 minutes to an hour figuring out why things aren't working."""
8232,465859566,"b'What\'s the section that you\'re going to add here?\r\n\r\nThere is already a else if statement that literally says ""extensions"" and this comment says ""extensions"".\r\n\r\nReminders to self easily get lost (last example being the TODO that went in the release notes that went out). '"
8232,465864306,"b""I'll let this one be for now - you're right that this shouldn't end up having a real effect given how pipelines are currently setup.\r\n\r\nNevertheless, we should get rid of dependencies on current working going forward. Especially since we actually get ProjectRoot here... it seems like we could manipulate that."""
8263,466656542,"b""Nit: If you think it would be helpful, having a direct link to the section (#how-to-keep-gaze-pointer-always-on) would bring folks directly back to the previous behavior that they had.\r\n\r\nIf the idea is to get folks to read the entire thing though then it's fine as-is."""
8263,466667939,"b'```suggestion\r\nThe eye gaze default pointer behavior have been modified to match the head gaze default pointer behavior. An eye gaze pointer will automatically be suppressed once a hand is detected. The eye gaze pointer will become visible again after saying ""Select"".\r\n```'"
8260,466671772,b'Thanks! Love it'
8264,466692436,"b""@davidkline-ms  I think that this code only gets invoked at mesh creation, so we don't have to worry about the reverse transition (i.e. someone setting PhysicsMaterial to null to clear it at runtime) right?"""
8275,468660560,"b""The docs on these functions are kinda light:\r\n\r\nhttps://docs.unity3d.com/ScriptReference/SubsystemManager.GetInstances.html\r\n\r\nI'm guessing all of these will first .Clear() the list before adding things right?\r\n\r\nOtherwise this will slowly add more and more things to this list over time."""
8275,468661892,b'Just to make sure I understand - currently loaded == the only running one right? Would it ever be possible for multiple subsystems to be running? (i.e. if there could be some world where multiple mesh providers would be running and providing meshes?)'
8274,468664649,"b'```suggestion\r\nStarting with version 2.5.0, the Microsoft Mixed Reality Toolkit is available using the Unity Package Manager (UPM), on Unity 2019.4 and newer.\r\n```'"
8274,468665889,"b""Since this is going to be a longer-running doc, this part doesn't really add a ton of value for folks after the fact."""
8274,468666480,b'```suggestion\r\nThe Unity Package Mananger uses a [manifest file](https://docs.unity3d.com/Manual/upm-manifestPkg.html) (manifest.json) to determine which packages to install and the registries (servers) from which they can be installed.\r\n```'
8274,468666827,"b'```suggestion\r\n> As of version 2.5.0 of the MRTK, initial registration of the server and packages is a per-project, manual procedure. Please read the following sections for detailed instructions.\r\n```'"
8274,468667615,"b'Realuty?!?!?\r\n\r\nCan you run these changes using this:\r\n\r\nhttps://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker\r\n\r\nI think there were a bunch of other misspellings in the other file, would be great if you could run this to avoid having reviewers do a manual spell checking pass.'"
8274,468668405,b'Do you think people will copy paste this entire section and inadvertently copy the dependencies line as well?'
8274,468668538,"b'```suggestion\r\nTo add an MRTK package, modify the dependencies section of the `Packages/manifest.json` file. The following example illustrates adding the foundation, tools and examples packages, the standard assets package will be added automatically as a dependency of the foundation.\r\n```'"
8274,468675400,"b""It might be worth having a section here about why there's this this... differing thing between adding it and removing it? i.e. the issues around UPM's built-in package management system w/ enumeration (using the deprecated ALL endpoint etc)"""
8274,468682287,b'Is the plan here to delete MRTKNuGetPackages.md as well? (i.e. I see we removed it from the TOC which would make it hard to access otherwise) - or are we keeping it around for a while?'
8274,468684968,"b'Both of these Packages.md files seem to have a lot of overlap (indeed, both of them begin with the same title ""Mixed Reality Toolkit packages"".\r\n\r\nDuplication is the bane of a lot of things - curious if you think it would be worth converging the two?'"
8274,468686960,b'Nit: Consider adding a link to:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/UnitTests.html#play-mode-tests\r\n\r\nFor examples on the types of test you could write with these utilities.'
8274,468690015,"b""Nit: It feels a bit misleading on this one - you definitely can omit things but it's notoriously hard for anyone who isn't us to do this. \r\n\r\nIt can be hard to say it's a benefit in this case."""
8270,468696295,"b""Do you know if there's any way of doing this without generating GC each call (i.e. GetInstances I assume has to populate the list with stuff)?\r\n\r\nOr is this actually not an issue?"""
8267,468699952,"b'```suggestion\r\n    **Unity 2020.1.x (Not currently formally supported, included for informational purposes only)**\r\n```'"
8267,468700239,"b'```suggestion\r\n> [!NOTE]\r\n> This installation check (when the application start) if there is the AR Foundation components on the scene, if not, they are automaticaly add to make it work with ARCore and ARKit.\r\n> If you need to set a specific behaviour, you should add the components you need by yourself. \r\n> For more information about AR Foundation components ands installation, check this [documentation](https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@2.2/manual/index.html#samples).\r\n\r\n```'"
8256,468749971,"b""@keveleigh pointed this out to me in some other places, but there's https://docs.microsoft.com/en-us/dotnet/api/system.double.epsilon?view=netcore-3.1 which can be neat."""
8256,468751063,"b'Nit: For tests that use the non-origin/looking forward pose, it might be helpful to have some comments somewhere in the test stating that (i.e. ""hey these tests use an arbitrary playspace pose, you will have to use playspace transformations like in the tests below"" in order to translate vectors and poses into actual locations that the tests exist in - or something else that maybe is better english and actually makes more sense).\r\n\r\nI think the main thing here is that even having some comments here would help - I think that some folks may add tests in the future and if they could potentially lose time if they are wondering why the positions are way off, but having some comments/breadcrumbs could help alleviate those maybe).'"
8280,468882593,b'```suggestion\r\n                CardinalAxisType axisType = GetAxisType(handle);\r\n```'
8303,470835094,"b'Do you know what the calling mechanics are of EnsureNewConstraintsInitialized() - i.e. potentially on every single frame update?\r\n\r\nBecause if so, then the costs over time will probably not be that good - we\'ll end up doing component find/enumerate and then run a non-hashed array find on every single frame.\r\n\r\nI think that we had a similar situation with some tap to place or solver stuff, where instead the constraints, when they were added to an object, would look for the SolverManager or something and be like ""yo, I""m here now"". You\'d have to also make sure that the SolverManager/ConstraintManager would need to do a one-time enumeration when it started up, so that it could catch cases where individual constraints/solvers were added before the manager got added.'"
8306,470838713,"b'```suggestion\r\n    If omitted, this parameter defaults to true.\r\n\r\n```'"
8306,470839802,"b""$UseBuildNumber  instead of $useBuildNumber (here and below)\r\n\r\nPS is case insensitive in variable naming but that's super weird."""
8306,470840298,b'This might also work with [switch] to simplify having to pass a 0 or 1:\r\n\r\nhttps://stackoverflow.com/questions/5079413/how-to-pass-boolean-values-to-a-powershell-script-from-a-command-prompt/5079574#5079574'
8306,470840541,"b'```suggestion\r\n    throw ""Missing required parameter: -BuildNumber. This parameter is required when -UseBuildNumber is used.""\r\n\r\n```'"
8306,470844009,b'```suggestion\r\n    To which registry should the packages be uploaded?\r\n\r\n```'
8306,470886469,"b'I get that they do work - my statement here is that it\'s really unexpected given regular command line args.\r\n\r\ni.e. boolean args are usually --IsOfficial which means it\'s true, the absence == false.\r\n\r\nThat\'s why switch could be interesting to use.\r\n\r\nThis goes along with another change later which uses a string ""true"" instead of 0 or 1 and is inconsistent.\r\n\r\nLet\'s use switch unless that doesn\'t work.'"
8306,471629314,b'Nice'
8306,471631864,"b""Apologies for not leaving this comment earlier - I think that this parameter should be removed because it's a required boolean param.\r\n\r\nIt basically adds no value - if it isn't called with Publish = true, then this immediately dies. It doesn't really make sense to have a general command line tool that is like:\r\n\r\nRunCommandLineTool -param1=path\\to\\thing\r\n\r\nAnd it just fails unless you call it with a parameter that does absolutely nothing except actually let it run:\r\n\r\nRunCommandLineTool -param1=path\\to\\thing -necessaryButNonValueBasedParameter\r\n\r\n"""
8294,471650441,"b""On 2020 and newer, I'm assuming DisplaySubsystem should be null if legacy XR is active right?\r\n\r\nJust curious otherwise it would be interesting seeing two different calls to set the focus point/point."""
8259,471654738,"b""@keveleigh @davidkline-ms \r\n\r\nAs part of bringing this into MRTK mainline, I was wondering if we could just rename this to Microsoft.MixedReality.Toolkit, because, from a consumer perspective, it would be awesome if they didn't have to think about the original origin (or just origin) of where a particular bit of code came from as they were writing code (writing code be like oh yeah I have to user prvncher in this case, hololabs or something else in another case, etc).\r\n\r\nEspecially if they're not explicitly doing the work here to grab another extension, but are just getting things built into mainline. """
8259,471656154,"b'Per the issue here: https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8188\r\n\r\nWe should try to move this to a manual step because this adds overhead to compile/play mode entering.\r\n\r\nBasically we should do what was done here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/8287\r\n\r\nNote that you might read this and be like ""but dude you reverted that change"" - yes, that happened because we\'re using an older version of Unity 2018 on some CI things where ARFoundation stuff causes things to throw up, but shouldn\'t affect the stuff here with Oculus Quest support.'"
8259,471656299,b'```suggestion\r\n```'
8259,471656829,"b""Nit: Move this before FindFilesInAssets because it's not used if OCULUSINTEGRATION_PRESENT isn't set"""
8259,471657208,"b'Also wondering - if OCULUSINTEGRATION_PRESENT isn\'t set, I assume that having this menu item greyed out would be optimal, but also this would take effort to figure out if it\'s needed - maybe just log something to console if this isn\'t set (i.e. ""we did nothing because Oculus Integration hasn\'t been configured""?)'"
8259,471663009,b'Nit: Remove linezo'
8259,471663246,b'Also question for you too @RogPodge '
8259,471666406,"b""Can we use FileUtilites.FindFilesInAssets in this case, or is there a key functionality difference that's important to preserve?"""
8259,471668054,b'Similar comment to the ScriptingUtilities.AppendScriptingDefinitions/RemoveScriptingDefinitions'
8259,471669447,"b'Nit: Would be awesome to have some comments on these - i.e. what is custom, what is official?'"
8259,471670455,"b'Similar question around menu prefixes - should the person who is grabbing this have to understand the difference in the origin of where this code originally came from, or should they just do the usual MRTK/Quest menu layout?\r\n\r\nNote that this is a bit different from code layout (i.e. where using that to simplify licenses + disclosure is really nice)'"
8259,471674341,"b""The platform-conditional serialization thing has historically caused issues:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/8072\r\n\r\nFixing it is a bit involved, and FWIW I guess I wouldn't want to block on that. However this does add some technical debt. I would just ask that you read that PR and understand the issue at hand here, even though I think fixing it in this PR would isn't necessary."""
8259,471674810,"b""Nit: Is there a better naming for this param/doccomment? i.e. I don't understand what this means (yourself vs automatic?)"""
8259,471675079,"b""Nit: Bring this up so that it's right under localAvatarPrefab  (i.e. pair the public/private closer together like is done in other locations)"""
8259,471675595,"b'Nit: Is there a reason why the private/public names of these things are different? i.e. what\'s the significance of ""active"" (is it just based on whether or not the platform is supported, and is this distinction interesting in the naming of the parameter?)'"
8259,471675770,"b'```suggestion\r\n                 ""Note to use the official pointer, you must add a parabolic pointer to your pointer input profile that supports articulated hands."")]\r\n```'"
8259,471675861,b'Here and below (I think there are 1+ instances of this in this file)'
8259,471676084,"b'Nit: We can probably reconcile some of these comments (i.e. this is all just MRTK at this point, not MRTK + an extension)'"
8259,471676412,"b'If UseCustomHandMaterial is false, will this be ignored?'"
8259,471677101,"b""_lowConfidenceTimeThreshold  -> lowConfidenceTimeThreshold (here and below).\r\n\r\nSame with other variables that prefix with _ (which I'm guessing either pulled from some other old C++ style or other style guideline)"""
8259,471677477,"b""Nit: Add a link to:\r\n\r\nhttps://developer.oculus.com/documentation/native/android/mobile-power-overview\r\n\r\nWhich is what I'm guessing this is referring to."""
8259,471679591,"b'Would be helpful to leave a comment - it can seem obvious to us, but at the same time someone could very well do this at runtime and think that setting it to non-null would make it be used immediately.'"
8313,472278364,b'```suggestion\r\n                else if (controllerData is SimulatedMotionControllerData motionControllerData && motionControllerData.IsTracked)\r\n```'
8313,472280620,"b""jFYI if moving the controller/depth/jitter was intentionally done before all of the hand/motionController sections, that's alright, just going forward changing UI/menu locations can be annoying for people who are consuming  it (i.e. moving locations arbitrarily can be frustrating to use)"""
8313,472282672,b'```suggestion\r\n        private void EnableMotionControllerSimulation()\r\n```'
8313,472282747,"b'```suggestion\r\n                DebugUtilities.LogVerbose(""Creating a new motion controller simulation data provider"");\r\n```'"
8313,472284525,"b'Nit: I know this section is mimicing previous ones - there\'s not a lot of space between each property. It could be worth adding some whitespace between each couple of things (i.e. \r\n\r\n```\r\n[SerializeField]\r\n        [Tooltip(""Key to simulate a menu press on the motion controller"")]\r\n        private KeyBinding motionControllerMenuKey = KeyBinding.FromKey(KeyCode.M);\r\n        /// <summary>\r\n        /// Key to simulate a menu press on the motion controller\r\n        /// </summary>\r\n        public KeyBinding MotionControllerMenuKey => motionControllerMenuKey;\r\n```\r\n\r\nto\r\n\r\n```\r\n[SerializeField]\r\n        [Tooltip(""Key to simulate a menu press on the motion controller"")]\r\n        private KeyBinding motionControllerMenuKey = KeyBinding.FromKey(KeyCode.M);\r\n\r\n        /// <summary>\r\n        /// Key to simulate a menu press on the motion controller\r\n        /// </summary>\r\n        public KeyBinding MotionControllerMenuKey => motionControllerMenuKey;\r\n```'"
8313,472286438,b'I see now the refactoring that you were mentioning around shared stuff between the hand and motion controller data provider!'
8313,472287139,"b'It looks like most of this is pretty much stuff from the existing here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/ee161fdd81aa6ab591659bae75f64e02c6a2cdce/Assets/MRTK/Core/Providers/InputSimulation/SimulatedHandDataProvider.cs\r\n\r\nIf there are any interesting deltas, can you call them out?'"
8313,472297653,"b""What are you thoughts on putting this on SimulatedMotionControllerData instead of the controller state? It's just interesting seeing a callback split between a state and data object (in which case, maybe it would just be helpful to explain a bit more about what the difference is between the state/data/provider objects)"""
8313,472299587,b'Checking my reading - SpatialPointer and SpatialGrip are handled the same way (i..e these 5 lines of code are the same right?)'
8313,472302678,"b'For functions/properties/classes that were renamed rather than obsoleted, it would be helpful to have a table here that lists both the old and the new.\r\n\r\ni.e. it\'s minimally helpful to see:\r\n\r\n```\r\nTo enable this change, extensive naming changes have been made to input simulation related files, with `InputSimulationService.cs` and `MixedRealityInputSimulationProfile.cs` getting the most significant changes. The logic and behavior of relevant code largely remain the same, and the majority of naming changes are related to replacing reference to ""hand"" to the more generic term ""controller""\r\n```\r\n\r\nIt\'s more helpful to see something like:\r\n\r\n| Old  | New  |\r\n|---|---|\r\n| DefaultHandSimulationMode  | DefaultControllerSimulationMode |\r\n| BaseInputSimulationService::UpdateHandDevice  |  BaseInputSimulationService::UpdateControllerDevice  |\r\n\r\n... etc'"
8313,472303082,"b'Basically, similar to (but obviously smaller scope than):\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/HTKToMRTKPortingGuide.html'"
8313,472429377,b'+1 on this -having consistency with the initial rotation matching the hands seems good.'
8327,473284245,b'I think it would be possible to add a button that goes to the issue - I think that I might actually go with the existing flow of having this documented here: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/MRTK_Configuration_Dialog.html'
8324,473288469,"b""I've had similar issues with other parts of the pipeline as well - generally it's OK as long as it ends up being a single thing that is different, but obviously once you have two or more it becomes 2^n configurations which is nasty.\r\n\r\nIt feels like there should be some solution here but I'm also okay deferring that part."""
8324,473289657,"b""For future reference, it would be good to file an issue to move this to a multi-stage pipeline, rather than two separate jobs that run.\r\n\r\nGenerally speaking when releasing we should kick off a single pipeline which generates a preview/canary -> verify that -> deploy to prod. It would be good just to record this for historical purposes but actually doesn't have much of an impact on the overall given the rest of the infra we have right now."""
8313,473293333,b'Chatted offline on this - this was a bit hard to see because of review deltas but we actually kept the old fields. i.e. my reading here was wrong (the new names and the old names were fairly far apart in the file).'
8313,473293761,b'```suggestion\r\n                if (isSimulatingGaze)\r\n                {\r\n                    lastSimulationGaze = time;\r\n                }\r\n```'
8313,473294164,b'```suggestion\r\n        public bool IsTracked => isTracked;\r\n        \r\n        [SerializeField]\r\n        private bool isSelecting = false;\r\n```'
8313,473294376,b'Same for isGrabbing/isPressingMenu - the mismatched set of things are grouped together down below.'
8259,473299797,b'Should this be in an examples namespace if this is a debug example?'
8259,473300038,"b""I don't think this line is necessary (since everything down below is already in the same namespace) right?"""
8259,473303747,"b""It might be worth putting these in a .Debug namespace (or examples as mentioned above).\r\n\r\nThis definitely does have a lot of overlap with our existing solvers - if there is a key difference it would be interesting to call out.\r\n\r\nFor some of these things where we're not sure, we may can always stuff them in an experimental namespace to give clarity to consumers that this will likely change as we stabilize the area."""
8259,473303952,b'```suggestion\r\n```'
8259,473304065,b'Here and below (this should fail CI because we have a linter for this)'
8259,473305522,b'Nit: Thoughts on just going with OculusQuest or Quest or Oculus instead of MRTKQuest? I think when it was prefixed with prvncher it made more sense to have MRTKQuest (because then you knew what it was for)'
8259,473307023,b'Is this something that we should have in our release payload?'
8259,473309019,"b'Wait should this read does not use the  **XRSDK pipeline** or  **legacy XR pipeline** - since it seems to be saying avoid legacy, it seems like this should mention the legacy one?'"
8259,473313396,"b'It might be worth commenting both the class here and some of the methods to mention how they differ from other gesture/pose stuff in the rest of the MRTK - i.e. it might be confusing now that there\'s grab gestures/events and also this grab helper function, which are completely unrelated.\r\n\r\nDocumenting the purpose of when this can be useful (i.e. systems that don\'t have similar native gesture support or whatever) can help avoid complications in the future where someone is like ""hey I\'m getting a grab event here but then I ask this HandPoseUtils and it says it\'s not grabbing!""'"
8327,473315249,b'This was a mistake.'
8327,473315474,b'Now it has been erased forever'
8339,474154220,b'Nice!\r\n\r\nWe can also remove the exemption now too!\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/scripts/ci/validatecode.ps1#L370'
8339,474156149,"b'Nit: You can add also go like:\r\n\r\n[Obsolete(""Updating the CSC file was only required for the 4.4.0 Leap Assets and only version 4.5.0 and up is supported moving forward"")]\r\n\r\nThat way when you have warnings that show up it will actually say what\'s obsolete'"
8339,474156372,"b'Nit: put the , on the previous line'"
8339,474156817,"b'```suggestion\r\n                EditorUtility.DisplayDialog(\r\n                    ""MRTK Leap Motion Removal"",\r\n                    ""There are no Leap Motion Unity Modules in the project to disconnect, please add the Leap Motion Unity "" +\r\n                        "" Modules to use the MRTK\'s Leap Motion Data Provider"",\r\n                    ""OK"");\r\n```'"
8339,474157064,b'Having clear deliniation between params is good'
8339,474157898,"b'Is the word ""connection"" overloaded in any way (i.e. as in being connected to the actual device, vs being hooked up w/ the SDK itself?)\r\n\r\nI don\'t know if there\'s a better word though - but do you know what I mean here?'"
8339,474166845,b'Looks good!'
8339,474167335,"b'```suggestion\r\n                        ""Make sure the assets have been imported into the project and select the Connect Leap Motion Unity Modules to MRTK menu item."", \r\n```'"
8348,474261022,"b""In general, functions that take a bunch of random bools are extremely hard to use.\r\n\r\nFor example, consider a caller:\r\n\r\nSetState(true, false, false);\r\n\r\nNow imagine that you went away for a week and came back - you pretty much MUST read the function definition to understand the code - i.e. it's not understandable by itself.\r\n\r\nUsually for these cases, you'll want to have flags/enums or other named things to do stuff here like:\r\n\r\nSetState(MotionControllerState.IsSelecting | MotionControllerState.IsPressingMenu);\r\nSetState(MotionControllerState.IsGrabbing);\r\n\r\nThis is extremely clear from reading what the state is being set"""
8348,474261330,b'```suggestion\r\n    /// Utility class to use a simulated motion controller\r\n```'
8348,474262065,"b'Instead of using the fixed 30, should we use PlayModeTestUtilities.ControllerMoveStepsSentinelValue?'"
8236,474326571,b'Yey'
8236,474326757,"b'Nit: The comments and the tooltips are the same but it is a bit weird to see ""Check to show handles"" on a boolean property right'"
8236,474327382,"b""Nit: I think you'll want this to be const, unless we intend to have this be changed by some subclass"""
8236,474327746,"b'For any of these that are abstract/not implemented here, it would be good to have doccomments on them.\r\n\r\ni.e. in general anytime you have something that needs to be implemented by a subclass, having the intention of the function and expectations documented are key for making sure that implementors know to do the right thing.'"
8236,474327926,"b'If configuration is null, wouldn\'t this NullReferenceException? Or does ToString() just convert  null == """"'"
8236,474328188,b'Especially critical in the doccomments is how various fields relate (i.e should NumHandles  == HandlePositions size?)'
8236,474329328,"b""I'm having some trouble finding the initial lines for this, but from what I remember was, my confusion was I thought that there might be a circular reference here:\r\n\r\ni.e. when this object registers for an event, this I would assume causes a ref on this object to increment (otherwise, things would crash when the event invoked on a destroyed object).\r\n\r\nHowever when I looked, I only saws that unregistration only occured in the dtor - meaning it would only happen once the object was destroyed. However, this seems impossible because the registration itself should increase the reference count (meaning, the act of registration == destructor won't be called).\r\n\r\nThis was my confusion, but I could have misread any of the parts within there."""
8348,474833042,b'With flags that get ORed you should be able set the buttons independently of each other. It can be a bit wonky (because you have to keep passing in flags that you want to have behavior persist).\r\n\r\nThe other way is to have a struct/class:\r\n\r\nstruct MotionControllerState {\r\n     bool IsSelecting;\r\n     bool IsPressingMenu;\r\n     bool IsGrabbing;\r\n}\r\n\r\nOr I guess you could use named parameters (which would also probably just solve this but would also have the same problems as flags where you have to keep passing true in order to persist things)'
8348,474840337,b'```suggestion\r\n            return (IsSelecting ? 1 : 0) * 100 + (IsGrabbing ? 1 : 0) * 10 + (IsPressingMenu ? 1 : 0);\r\n```'
8348,474840732,"b'Oh neat, I guess that also simplified this as well'"
8353,475826733,"b'```suggestion\r\n        /// <param name=""elasticsManager"">ElasticsManager property of component this ui field gets drawn in.</param>\r\n```'"
8353,475827117,"b'Is this extra scope mostly there as a visual aid (i.e. ""everything within here shows up in some elastics context?"")'"
8353,475828281,"b""Nit: It would probably be better to remove the wrong HelpURL - some TODOs have a way of remaining forever.\r\n\r\nIf you're going to do this in the next PR then it's fine, but if you think you could be 2+ away then it has a decent chance of getting forgotten."""
8353,475831245,b'Do you know if sqrMagnitude works here over magnitude (i.e. https://docs.unity3d.com/ScriptReference/Vector3-sqrMagnitude.html is faster because it avoids the sqrt() call). I guess with small thresholds maybe you get some weird floating point stuff\r\n\r\n'
8353,475831454,"b""Also this isn't new to this PR, I know this was already stuff that got checked in."""
8353,475831776,b'```suggestion\r\n                if (elasticsManager != null)\r\n```'
8353,475831845,b'```suggestion\r\n            if (elasticsManager != null)\r\n```'
8353,475831898,b'```suggestion\r\n            if (elasticsManager != null)\r\n```'
8353,475831956,"b'Also yey, this looks cleaner'"
8353,475833351,"b""One other thought was around the per-frame computations here - once something has gotten the point where it's below the threshold, I'm curious if there's any way for us to set a bit to know to ignore it until the next call to ApplyTargetTransform. \r\n\r\nI don't know if this will really do that much (i.e. maybe the 3x magnitude calls vs 3 bool checks isn't too different in the long run)."""
8379,476600872,"b""Good question! Nope - in this case since the other functions already handle this lazy-init, the menu based thing isn't necessary."""
8384,476646151,"b'```suggestion\r\n            ""Windows.UI.Input.Spatial""\r\n```'"
8386,477444155,"b""```suggestion\r\nThese assets are available using the Apache license, which means they're free to use, but not to trademark.\r\n```"""
8387,477608565,b'Nit: Add a link to the #HoloLens-2 section for HolographicRemoting.md'
8387,477613225,"b""I think that we'll also want to actually add steps to the HoloLens 2 section (i.e. this is now a required step right?)"""
8391,478580824,"b""Do you have a little more context on why we removed this part of the test? i.e. I'm guessing this is due to the change to maxViewVerticalDegrees.\r\n\r\nOr is the though here that since we already have deadzone detection in the test on the previous lines it's okay?\r\n\r\nIf that's the case, then that's fine - if not, we may want to change this by lowering the angle (i.e. 45->35 or something and then up the other rotation from 45->55 so that the same total rotation is occuring, but done in a way that is affected by the deadzone)"""
8401,478585759,"b""Nit: Reminder on the HelpURL thing here (i.e. the todo!)\r\n\r\nIt might be helpful to have a link to the issue so when we close it we can do a double check that it doesn't exist:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/issues/7358"""
8376,478698648,b'Nit: Add a comments/header type thing here explaining what the purpose of this script is\r\n\r\nSee other scripts like:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/scripts/ci/validatecode.ps1'
8376,478699542,"b'Instead of using environmental values, we usually push these in as explicit arguments to the script - otherwise there are basically ""hidden"" inputs.'"
8376,478700489,"b""Actually as I look at this a little more, I think there's a bunch of things here that reference YAML things (i.e. ${{ parameters...}, which don't evaluate/have meaning within the context of powershell scripts.\r\n\r\nPut another way, you should be able to run this powershell by itself from your local dev box and it should work  (after you pass in explicit parameters to the script) - those explicit parameters should be set on the YAML side."""
8376,478702091,"b""One thing to be aware of is this expansion of short name -> long name has long term maintenance cost (i.e. if things get moved, there's nothing that will alert us to update this mapping). It can be easier to take in a full path as a result - it makes usage of it harder but also makes maintenance easier."""
8376,478702607,"b""It's interesting to see that these are all elseifs, but sceneList += is done. This doesn't seem to be doing the thing of adding multiple right?"""
8411,479522866,"b'Is there any way to avoid this WaitForSeconds, or to turn off animations, or something else?\r\n\r\nWaitForSeconds calls in tests are really bad because they will slow down the overall test runs (i.e. these two changes together add a second that will always exist, even if they could run faster in the future). Worse, having them makes it super easy to copy paste going forward, which allows them to proliferate further.'"
8413,479554585,"b""If you wanna get really fancy, you could actually wrap this up in a #if Unity2018 version thingy.\r\n\r\nI'm fine either way since we have this great comment here."""
8413,479556179,"b""I mean I assume this would work but obviously I haven't tested myself!"""
8441,482216002,"b'Good question! I copied this over from the existing part, but unscaledTime is right (i.e. focusExitTime is in regular time, which is bad).'"
8441,482216089,b'```suggestion\r\n            return Time.unscaledTime - focusExitTime > vanishDelay;\r\n```'
8455,482498582,b'Any luck using https://docs.unity3d.com/ScriptReference/EditorGUILayout.ObjectField.html?\r\n\r\nI did a little searching to see similar things and this came up:\r\n\r\nhttps://answers.unity.com/questions/337362/transform-input-field-in-editor-window.html'
8455,483100221,b'We did it!'
8455,483100288,b'```suggestion\r\n                        }\r\n```'
8455,483112785,"b'Super nit: The language here is a little confusing because ""then expose"" makes it feel like there\'s an action that happens nearby here (i.e. usually there\'s an if statement following this). Oddly enough this might be somewhere where having passive tone (i.e. settings for controller offset will be exposed in the inspector) would be clearer'"
8455,483114420,"b""Can this explicity use the term 'Leap VR Device Origin' to be clear exactly what field needs to be set?"""
8455,483116636,"b""Question for myself - degrees vs radians. Degrees I assume are more common, which is why we don't specify units here right? I think for distance things are generally understood to be meters, maybe for angles it's the same"""
8430,483122253,b'```suggestion\r\n        /// <summary>\r\n        /// The ScrollingObjectCollection to navigate\r\n        /// </summary>\r\n        public ScrollingObjectCollection Scrollview\r\n        {\r\n```'
8430,483122867,b'```suggestion\r\n        public ScrollingObjectCollection ScrollView\r\n```'
8430,483123076,b'Nit: Be consistent with the usage of ScrollView and scrollView'
8430,483124759,b'```suggestion\r\n        // Workaround for serializing mask enabled as the editor does not handle property setters\r\n```'
8430,483134761,"b""Could you actually add a little more on what the workaround is? Or maybe it's actually clear to everyone else and not me, in which case I can follow up offline with people who know what's up"""
8430,483136989,b'```suggestion\r\n        // Setting up the initial transform values for the scrolling interaction collider and near touchable.\r\n```'
8430,483141176,"b'Does isRestoring actually mean ""isRestoringVisibility""? Not suggesting a rename, just trying to understand word -> concept mappings'"
8430,483141251,b'```suggestion\r\n            List<Renderer> clippedRenderers = ClipBox.GetRenderersCopy().ToList();\r\n```'
8430,483142644,b'```suggestion\r\n            if (!isRestoring)\r\n```'
8430,483148398,"b""Can you add a comment for why this no-ops if currentPointer is null (i.e. it has to do with the event ordering between OnPointerDown and OnTouchStarted). It's the difference between near/far interactions right?"""
8522,486452652,"b'Extra credit here and also fine for a future thing, but if you have a video or gif to share that would be really neat'"
8519,486455663,"b""One thing to be aware of - if the test fails in any of the lines above, I believe this line of code that cleans up state doesn't get run - so you'll end up having a stray file that sticks around which can possibly mutate other state.\r\n\r\nThe actual net effect here probably isn't a huge deal because the test would have failed anyway, but in weird cases this can cause problems that you wouldn't expect.\r\n\r\nThis is more problematic if you have subsequent tests that run which don't want this file to exist."""
8519,486455823,b'Nit: I think this comment is copypasta'
8530,487264442,"b'This makes me wonder if going forward, we should just put images near where their content - i.e. the journey to the root here is a bit weird.\r\n\r\nAnyways, this is a comment out loud just curious about what folks think for future things, not actually suggesting a change for this particular one.'"
8536,488077723,"b""It might be worth adding this to the Known Issues section (and also, if there's a snippet of the stack that you think will be common (i.e. A Native Collection has not been disposed, resulting in a memory leak) it might be worth having that snippet there as well so that it's more searchable (or someone might see that line and remember it for later when they hit the issue, etc)"""
8546,488224854,b'```suggestion\r\n## Upgrading to a new version of MRTK\r\n```'
8588,490595963,b'```suggestion\r\n// This build post processor should only run after the UWP player build.\r\n```'
8666,494607804,b'Seems like the issue is mostly specific to leap right? Might be worth calling out the context in which it happens'
8666,494608097,"b""Seems like the issue is mostly specific to leap right? Might be worth calling out the context in which it happens.\r\n\r\nAlso as @MaxWang-MS  calls out, it's probably better in the known issues.\r\n\r\nThis isn't actually a breaking change - it's not a regression or related AFAIK to the 2.5 payload."""
8668,494633960,b'This used to be Microsoft.MixedReality.Toolkit.Services.CameraSystem.asmdef.meta right?\r\n\r\nIt looks like the guid changed here'
8675,495219048,b'We did it!'
8675,495219272,"b""I think that having this listed as experimental is good. We have other ones that don't have that but should, and this has led to some confusion about the expected quality level of certain subcomponents."""
8675,495220093,b'```suggestion\r\nThe elastics manager processes passed transforms and feeds them into the elastics system. \r\n```'
8675,495220579,b'I think the auto update text here is clearer (does behavior in the suggestion apply to the update loop? manipulation end? continuing simulating?) Though this is pretty minor as far as clarity goes'
8675,495220777,"b""```suggestion\r\nThe elastics manager component when added to a game object won't have elastics enabled for any transform type per default.\r\n```"""
8675,495221268,"b'```suggestion\r\nElastics manager offers configuration objects options for the following transform types, each of them represented by a [elastic configuration object](#elastic-configuration-object):\r\n```'"
8675,495221423,"b'In general I avoid using ""currently"" because it\'s implied in the docs (i.e. the docs reflect current state).'"
8675,495221696,b'```suggestion\r\nElastics extents settings vary depending on the type of manipulation. Translation and scale are represented by [volume elastic extents](#volume-elastic-extent) and rotation is represented by a [quaternion elastic extent](#quaternion-elastic-extent).\r\n```'
8675,495221879,"b'```suggestion\r\n- **UseBounds**: whether the stretch bounds should be respected by the system. If true, when the current iteration of the target position is outside the stretch bounds, the end force will be applied.\r\n```'"
8675,495224330,"b'I think the ""infinity"" part here is a bit misleading right (i.e. I guess there are an infinite amount of angles, but generally if they\'re gonna be like factors of N degrees, 360/N is still finite.'"
8675,495224539,b'Why does this line use <img> but other ones uses the markdown format:\r\n\r\n```\r\n![Elastic Rotation Example](../Images/Elastics/Elastics_Rotation.gif)\r\n```'
8675,495224863,"b""Was this changed to be linkable? It's interesting seeing this delta but still see the parenthesis approach below (and also for the actual elastics page)"""
8651,495261609,"b""Because we're adding a new property to an existing interface, this PR should also contain a change to the ReleaseNotes.md about the breaking change.... but this is probably gonna be tricky right now because we're still actively merging 2.5 stabilization notes into mrtk_development (i.e. this will just cause merge conflicts that keep happening).\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/issues/8684\r\n"""
8651,495263289,"b""Is the term Reading Mode well known enough that maybe we want to name it that (instead of specifically how this is implemented under the covers i.e. overriding projection matrices?) \r\n\r\nhttps://docs.microsoft.com/en-us/hololens/hololens2-display (ctrl + F reading mode).\r\n\r\nI could swing either way, but I figured it would be worth agreeing on here (I think that ProjectOverrideEnabled may not really be descriptive of what it's actually giving you, even though it is descriptive of what it's doing)."""
8651,495263505,b'Nit: Would be probably good to have some <remarks> that only some platforms support this (i.e. I think just HL2 right?)'
8651,495263741,b'```suggestion\r\n        if (this.RenderViewportScaleSlider != null)\r\n```'
8651,495264761,"b""Similar comment to the one above, would it be worth linking to the docs on reading mode:\r\n\r\nhttps://docs.microsoft.com/en-us/hololens/hololens2-display\r\n\r\n(I think that we'd probably need up update that doc to have a link-able part, but even without that it might be mentioning the doc)"""
8651,495265286,"b'```suggestion\r\n                if (TryGetProjectionOverrideComponent(out projectionOverride, false))\r\n```'"
8651,495265340,b'```suggestion\r\n```'
8651,495265436,b'Or fill in the return value description'
8651,495265515,b'```suggestion\r\n            if (projectionOverride != null)\r\n```'
8651,495265578,b'```suggestion\r\n            if (!createIfAbsent)\r\n```'
8651,495266810,"b""Can we include more of this function (or all of it) within the #if WINDOWS_UWP? That way when deployed to other platforms, there won't be another per-frame function call which basically no-ops."""
8651,495267241,b'Can you add a doccomment link to: https://docs.microsoft.com/en-us/windows/mixed-reality/develop/unity/unity-xrdevice-advanced?\r\n\r\nI believe that link describes the data payload here (otherwise a reader could look at this and be like what is this magic?)'
8651,495267628,"b""Speaking of which, is the StructLayout(LayoutKind.Sequential) marker important here as well? (i.e. it's on that linked site but not here)"""
8651,495267823,"b'Great comment, thanks for adding this.'"
8651,495267964,b'```suggestion\r\n            if (!EnableOverride)\r\n            {\r\n                return;\r\n            }\r\n```'
8651,495268020,b'Super nit'
8651,495269315,"b""It feels like this check should happen before line 74 right? Otherwise we'll do a bunch of work each time and end up no-oping deep within each for loop.\r\n\r\nOr is it the case that holographicCamera is mutated through some of the Camera.main or cameraPose calls?"""
8651,495269799,b'In general we use the CameraCache (because Camera.main calls I thought were just FindObjectsByTag/Name calls) - does it have to find the new main camera each time or would the camera cache suffice?'
8651,495272205,"b""The only other minor thing I can think of is, even when setting to false, the projection override MonoBehaviour will still exist on the camera itself, so OnPreCull will always get called (but no-op). This is honestly probably fine, though if we wanted to be hyper senstive we could also just delete the component when turning it off.\r\n\r\nI don't have a real opinion on this, but wanted to call it out."""
8703,496176950,"b'```suggestion\r\n                Debug.LogError($""Can\'t find an asmdef for project: {projectKey}, this project may need to be to added to the PackageReferencesUnity2019 or ExcludedPackageReferences exclusion list"");\r\n```'"
8758,500416433,"b""@davidkline-ms a couple of questions:\r\n\r\n1. Should we use version 1.4.1 here like how we have that version here: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Packages/manifest.json#L4\r\n2. Should this be another templated version as well, so that the version that's used here is consistent with the version here: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Packages/manifest.json#L4. Otherwise going forward these two version dependencies could get inconsistent"""
8758,500416886,"b'I should note that we can separate 1 and 2 - I think unblocking things/making things work is top priority, fixing the long term integration can be done in a separate PR by us.'"
8753,500597195,b'Nit: Worth linking to documentation about where to find help?'
8753,500597431,"b""+1 to @keveleigh's comment"""
8764,500600826,"b""Similar comment for dependencies of TMP vs what we have here:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Packages/manifest.json#L4\r\n\r\nIt feels like these numbers should be same, or we should know why they aren't the same."""
8753,500602956,"b'```suggestion\r\nBy default, the Scene System utilizes a pair of scene objects (DefaultManagerScene and DefaultLightingScene). If either of these scenes cannot be located,\r\n```'"
8753,500605592,"b""This file is kinda a copy paste of the extensionsfolderpreupm one, where's there's a ton of overlap - the delta is the displayname/description/path/folderstocopy, but these all seem like things would be config where the rest of the file should be execution.\r\n\r\nI think the next time we'd want to add another such thing, we should do the work to refactor this so that we don't copy pasta more."""
8786,503463505,"b""Nit: If we want to avoid numbering things, it would probably be easier to replace the numbers with bullet points so that we don't have to do highway exit ordering in the future"""
8787,504182893,"b""Nit: We don't really use <br> in doccomments elsewhere, if only because they tend to make more noise when reading in code (even if they make the generated docs a little more useful)"""
8787,504183227,b'Should this log an error/warning if this is being called after Awake()?'
8787,504183296,"b'```suggestion\r\n        /// <br>This function requires the caller script to be executed earlier than <see cref=""MixedRealityToolkit""/> script, which can be achieved by setting \r\n```'"
8787,504184485,"b""Nit: It might be helpful to helper-ify these two lines since they are both critical in running during any remove operation (see lines 118-119 as well).\r\n\r\nThe risk is without in, someone could forget to have one of the lines (or if there's another change later that adds another operation here that's required, peopel might not update all of the occurneces)"""
8787,504185796,"b""What's the change here from before (i.e. why this used to be a no-op, but now is doing something?)"""
8787,505000511,"b'Fine either way, just curious what the thought process was'"
8848,512259539,b':O'
1761,171099842,b'I believe events are being used so that one or many callback methods can be specified from within the editor.'
1761,171100838,b'I did not notice that the namespace had changed in dev.  Should I change the namespace? Or should a minor change like this target the stabilisation branch? (This is my first PR).  Advice welcome.'
1761,171101679,"b'I do not agree.  If a user wants to use the slider prefab and drags it onto the scene, then the current implementation allows for them to wire up some functionality without writing any code.\r\n\r\nThis is also true for the current implementation of the buttons, checkbox and other UX prefabs provided by the holotoolkit-examples package.\r\n\r\nIn my opinion using events makes the controls very accessible to less experienced users.  For example, currently it would be simple to set an object to show and hide when a checkbox is toggled using the select and deselect events.'"
1761,171102043,"b'OK, thanks.  @DDReaper If you also think that re-targeting to the Stabilization branch is suitable for this change, then am happy with this.'"
1761,171199264,"b'I think this discussion is addressing a larger issue, namely ""should the toolkit controls use unity events or some other system"".\r\n\r\nThis PR is addressing a minor issue in that the update event of the slider does not allow the updated value to be sent.  \r\n\r\n@StephenHodgson, @DDReaper Would it be pragmatic to add this update to the current system?  And discuss a refactor to the controls event system in another issue?  I believe that there will be arguments for both sides of this discussion.'"
1759,170778657,"b""This all works in the editor so I didn't see any reason to restrict it in UNITY_WSA.\r\n\r\nHowever, I did just find out we aren't abandoning older versions of Unity yet.  So I will just leave this PR blocked until we can just move to >= 2017.2 variants."""
1759,171324436,"b""Ha, it was news to me that the MRTK supports non-MR targets.  I'll add that back in."""
1759,173023841,"b""I'm not clear on your comment.  The material is set in an inspector and is shared amongst all the instances.  If we destroyed it when the GameObject got destroyed then it would impact other users of the material.  I used Resources.FindObjectsOfTypeAll(typeof(Material)).Length to see the number of materials stayed constant while everything in this class is built.  Am I understanding your comment correctly?\r\n\r\nI did change this to be set through sharedMaterial but that shouldn't change anything - just make the intent more clear.\r\n\r\n\r\n"""
1759,173530354,"b""So things checked into the Dev_working_branch need to support pre-2017.2 builds of Unity?\r\n\r\nI started making the change but the amount of change and configuration testing needed was so high I wanted to be sure.  It still may be easier to delay this PR until UNITY_2017_2_OR_NEWER checks aren't needed."""
8651,497019653,"b""I'd been flip-flopping on this, mainly since it has uses beyond reading text.  But since it's in the docs I'm happy to go with ReadingMode for consistency."""
8651,500639431,b'Renamed everything to ReadingMode or some variation'
8651,500639562,b'Updated comment'
8651,500639820,b'Added a space'
8651,500639873,b'Added a space'
8651,500639969,b'Added a description'
8651,500640015,b'Added a space'
8651,500640066,b'Added a space'
8651,500640350,b'Put most of the code into the #if'
8651,500640904,"b""Added a link to the doc, renamed the structure to be consistent with the doc, and put in the attribute.  I think Sequential is the default but it's good to be consistent with the doc."""
8651,500641441,"b""Put in the brackets (I much prefer them too.)  For some reason I didn't look too closely at the formatting of the code from the Issue so a lot of things got through."""
8651,500641653,"b""Changed it to use CameraCache.  It just wasn't being used in the code I took from the issue"""
8651,500642913,"b""I went up and back on this when writing the code.  I finally chose not to remove the component when ReadingMode is disabled because my completely speculative intuition on this is that an app will be turning it on and off during the app's lifetime so leaving it reduces the places where things can go wrong after it's initially created.  But I could be convinced otherwise."""
604,109942654,b'I just keep consist with what OnInputDisabled does'
604,109944211,b'fine:)'
289,83740940,b'Not anymore! Removing. Thank you.\n'
289,84542083,"b""Shouldn't the RequireComponent attribute be enough?\n"""
289,84543400,"b'Yes, I figured this could be customized externally; hence the ExportDirectory property. Where would be a good location to put this field? Is there already a congregation of configurable HoloToolkit fields located somewhere?\n'"
289,97122463,"b'Correct, that would make sense if this was a MonoBehaviour.'"
289,97127375,"b'Makes the sense, fixed!'"
492,98764896,"b'Great question! I wasn\'t able to find anything exposed in the APIs to ""yield return WaitUntil"". I\'m reaching out to get some eyes at Unity to check in on this as well.\r\n\r\nI was originally waiting 2 seconds, but a single frame was producing successful discoverability too. It\'s extremely reproducible in connection issues without this. Before it seemed about 1 out of 10 times clients weren\'t finding a server with tool chain enabled.'"
4838,293481294,b'Is this supposed to be re-enabled or removed?'
405,93058918,"b'I could see that being useful. For instance if you want to automatically place an object in a location when the object ""hovers"" over that location. I agree with making it public.'"
405,93059938,b'Was wondering about that when reading this through. Sorry if I missed it but is there a md file somewhere outlining coding style preferences?'
405,93061712,"b""@HodgsonSDAS I'm thinking about how it will be used as a base class. For instance:\r\n\r\n`public override Update() {`\r\n` if (IsBeingPlaced) { ... }`\r\n`base.Update();`\r\n`}`\r\n\r\nOr if it's in an outside class accessing this component:\r\n\r\n`if (gameObject.GetComponent<TapToPlace>().IsBeingDragged) { }`\r\nvs\r\n`if (gameObject.GetComponent<TapToPlace>().placing) { }`"""
405,93062435,"b""My bad  ... didn't see you said `IsBeingPlaced` instead of `IsBeingDragged`\r\n\r\nMaking this true would place the object immediately without the user doing any gestures. I'll add that to the comments."""
405,93063302,b'@HodgsonSDAS Looking back I realized I actually said `IsBeingPlaced` instead of `IsBeingDragged` ... I think `IsBeingPlaced` is actually the best choice. \xf0\x9f\x98\x84 '
405,93063614,"b""When it's set to true it's placed on the world immediately. I feel wording it like that will cause the misconception that it will _allow_ the user to place objects when it is true instead of forcing the object to be placed on set to true."""
405,93067797,"b""@HodgsonSDAS You're right. My bad again. My brain just isn't working well with words this morning."""
405,93162924,b'@S-Hodgson-MMOARgames On line 154 we check to see if ParentGameObjectToPlace was specified in the inspector. Only if it has not been specified do we try to figure out the parent on our own.'
405,93162970,b'@keveleigh This is a leftover from a previous implementation. My next commit will remove it.'
386,91839988,b'Not sure how this new line was added?'
3887,273259032,"b""I looked into making it a service - however it doesn't need to have a lifecycle, which is mandated by that system.\r\n\r\nMixedRealityGlobalInputEventSystemProfile is meant to be an extensible template. \r\nIn my application, I can expose events to the editor if I choose to do so. \r\n\r\nIn practice, it is easier to use and extend as a profile."""
3887,273259755,"b'No this is indeed a new interface.\r\n\r\nIMixedRealityInputEventSystem is different from IMixedRealityInputSystem, in that IMixedRealityInputSystem implements IMixedRealityInputEventSystem and  IMixedRealityEventSystem.\r\n\r\nThis is just a logical split of the events, in such a way that IMixedRealityInputEventSystem contains all the event responses listed in IMixedRealityEventSystem. This allows another class, like the MixedRealityGlobalInputEventSystemProfile, to implement only the input event methods.'"
3887,273259987,"b'As I explained above, the profile here is simply a template. \r\n\r\nThis profile is meant to be extensible, and as such, a child implementation can expose configurable data to their app.'"
3934,274481115,"b'If you remove properties, you should set default values to these, as they will show up in the unity editor, and uninitialized variables trigger warnings'"
3936,274484887,"b'Are these the only types supported by the Socket plugin? This seems like the list of platforms currently supported by the Spectator view feature, though this is somewhat independent of that. \r\n\r\nAlso, with this number of platforms, I feel a custom define is necessary.'"
3936,274486186,"b""Since this is a public method, it can be called even if Socketer is disabled, which means that it's prone to throwing null pointer exceptions"""
3936,274487014,"b'It would be nice to support other protocols than TCP, since the system does support it.\r\n\r\nThough I understand Socketer may not have a connection handling system for non-TCP communication.'"
3936,274487459,b'C# now supports inline declarations for out variables.'
3936,274488873,"b""I think that message queueing shouldn't happen on the Unity thread.\r\nA socket listener should happen on another thread, that listener should store incoming data in a threadsafe queue, which the unity thread polls on update. Otherwise incoming data can stall Unity's operations."""
3922,274542738,b'That must be what was breaking it for me'
3922,274543977,"b'I think this setting should be a settings scriptable object somewhere.\r\n\r\nThat way the variable is persisted in a config object, rather than in an ephemeral session which is cleared on each editor boot.\r\n\r\nMoroever, using EditorPrefs could make it difficult to re-enable if need be. '"
3936,275457053,"b""One thing to be careful with if you're adding UDP, is that if you're not fragmenting messages, most will get lost. You'll also need to consider flow control to avoid overloading the hardware network card. This varies according to the router you're using as well. """
3936,275766677,"b""I'd say the public interface shouldn't have to care for stamping the message sent time. That's an internal responsibility."""
3936,275767025,"b'The socket can only receive bytes, and wrapping the data in a message event could be expensive due to frivolous copying'"
3985,275908211,b'Why not keep these auto initialized and readonly?'
3983,278247812,"b""So on the topic of determining the best pointer, I've been doing some tests, and I found a good criteria.\r\n\r\nBasically, just grabbing the UIRayCastCamera's forward vector, and then checking the dot product against forward direction of all the pointers in the FocusProvider. The dot product with the highest value (closest to 1), seems to best represent the pointer I'm looking for.\r\n\r\nHowever, with this in mind there are a few caveats. You need to check if the pointer you're seeking is null every frame - this requires casting to monobehavior in order to get the unity overridden null check.\r\n\r\nMoreover, the camera gaze pointer seems to be set to null every single frame when no hand is present in view. This seems to be a bug with handling of the gaze pointer."""
4071,278348069,"b""Can we just expose all these enums then?\r\n\r\nI've exposed what I want, but I'd like anything serializable to be exposed.\r\n\r\nThe issue with making this it's own file as well is that it's only used in BoundingBox. Is there really a need to split that from the source file?"""
4071,278350811,"b""Well a few thoughts on that.\r\n`Class.EnumType` helps with consistency regarding where the enum type is used. That's actually a pro to me, if it's only used in one spot.\r\n\r\nRegarding the re-usability of the enum however, I think we could move it out once it's needed elsewhere. As in, if someone PR's a change that makes use of it elsewhere, then it should be moved to another time. Until then, I think the way it currently is setup is sufficient."""
4071,278771766,"b""Yeah that makes sense. I didn't consider it breaking code down the line. It's a tradeoff"""
3983,280598623,b'I put some code forward for my method\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3957#issuecomment-488834026'
4189,281734248,"b'Not a fan of hardcoding inputs like this.\r\n\r\nThe MRTK uses a platform input data provider abstraction. It might be best to run this stuff on an event response.\r\n\r\nFurther, this code will run continuously if you hold the space bar. That might not be ideal.'"
4189,281734468,b'Might be good to funnel logs through a method and add a property that allows you to toggle them'
4035,283469765,"b'I think we should remove this check. \r\nIf there is no instance in the scene, this check will run each time we do a null check against the instance, and no instance will ever be added.'"
4035,283469944,"b""I don't see the need to register the instance in the getter. When the instance is created, it should register itself then, not when someone calls it."""
4035,283470265,"b""This is not an error in my opinion. If we try and use a null instance, we'll get a null reference exception, but if it's null and we null check it, we have enough information there that we don't need to throw an additional error log."""
4035,283470987,"b""A null check on a monobehavior is actually non-trivial due to the overridden checks.\r\nThis gets called enough that we shouldn't null check it.\r\nhttps://docs.unity3d.com/Manual/BestPracticeUnderstandingPerformanceInUnity7.html\r\n\r\nSince we no longer create any instances in the getter, I think we should slim this down and simply return whatever the active registered instance is, rather than adding any logical overhead."""
4270,283476592,"b""It's not enough to do a null check on a pointer.\r\nThis is because the pointer is stored as an interface, but many of them are actually monobehaviors.\r\n\r\nWhen a pointer is destroyed, it will pass a regular null check, but throw a MissingReferenceException. You must also cast it to monobehavior to null check it properly. This unfortunately is much more expensive, but safer.\r\n\r\nThis is why I'm so adamant pointers should never be destroyed, so that we don't ever hold a list of null pointers.\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/issues/4223"""
4270,283477686,b'You could reduce nesting by doing and && here with the condition above.'
4270,283477952,"b""If you're counting the active near pointers, you could expose this at a higher level. This seems like information that might be important."""
4270,283478147,b'Same as above. I can see a few cases where knowing the number of far pointers can be very useful.'
4270,283478338,b'Same as above. Be careful doing null checks with monobehaviors that are stored as interfaces.'
4270,283478726,"b""This whole loop has a ton of complexity just to gauge the state of a cursor. I understand why it's happening, but I think it should be heavily profiled before being merged in."""
4270,283479612,"b""It's not safe to use `?` on monobehaviors. They do not override the null check properly."""
3941,283480849,"b""With the old behavior this would also never return false, as the Instance getter would create the instance. I'm against making this change as well."""
4270,283524547,"b""I understand wanting to keep the same behavior.\r\n\r\nMy experience with pointers however has shown that if the pointer is destroyed, it won't be considered null until unity's native side cleans it up.\r\n\r\nThis is why you want to know if the reference is still valid, which can only be done with the overridden monobebehavior null check, which isn't called unless you cast the pointer reference to monobebehavior."""
4270,283526182,"b""This is the same reason the `?` fails on monobebehaviors. This check is actually somewhat new since it wasn't possible before dot net 4.x. It works the same way as the ternary operator or the ?? Null check however.\r\n\r\nYou can read about how unity handles null checks here\r\n\r\nhttps://blogs.unity3d.com/2014/05/16/custom-operator-should-we-keep-it/"""
4035,283962647,"b'Well the instance is a monobehavior, and those fail when being called from other threads, so the lock is entirely superfluous'"
4348,284047694,"b""I had issues with some Interop service APIs not working on IL2CPP with unity wsa too. I'm a bit weary"""
4318,284208641,"b""I don't like the design of this.\r\n\r\nThere should be a protocol that handles sorting of commands in a more standardized way.\r\n\r\nPersonally, I'm a fan of Google's protobuf protocol, as the protocol templates it produces are compiled natively in all languages it supports, including c++ and c#, but also java.\r\n\r\nThis means you can parse it in a native app on any platform supported by Azure spatial anchors."""
4318,284209029,"b'Especially when subscribing to a singleton.\r\n\r\nAnother nit: initialization should happen on awake, as start is much later in the lifecycle.'"
4318,284209128,b'It does require unity wsa'
4386,284495161,b'Yeah this is not ideal at all. #Resolved'
4390,285144365,"b'Seems like finding an accuracy metric might be tough, but it could be very useful'"
4390,285144712,"b'Does the Id need to be a string? Why not a unique int / uid?\r\nIt could have a name as well, but I think the core unique id should be an int for fast comparisons.'"
4390,285157362,"b""Do you think it would make more sense to set an enum to define orders of magnitude of precision?\r\n\r\n1CM, 10CM, 1M, 10M, etc? I think this would be easier to work with than a Vector3 I'll have to process math on"""
4433,285260798,"b'It would be nice to move the state collection for the default states into a separate function that is virtual, in order to allow someone to override which enums are added to the list in their interactible.'"
4390,285948937,"b""They're flexible but they spit out garbage every time you use them. I understand the precedent, but I still think an int is a better choice.\r\n\r\nYou can hash other keys and store them as an int.\r\n\r\nRegardless, I understand this isn't changing."""
4390,285950081,"b'You can use enum flags to register the different axies, and store a composite enum that way.\r\n\r\nI feel strongly about it not just for ease of use, but for performance and storage reasons.\r\n\r\nA vector3 is 32bit * 3, while an enum is a byte or at worse 32bit.\r\nYou get everything you need in 99% of usecase, for far less data. All this needs to be networked as well, so keeping data down is important.\r\n\r\nBeyond that just parsing the tolerance becomes a lot cheaper than doing vector size checks, which require square root operations and consume a lot of operations.\r\n\r\n'"
4538,287005838,"b'A null check is insufficient to detect if the pointer is null. You need to cast it to a monobehavior first, or else it might not be null, but throw a missing reference exception when you try using it'"
4538,287005994,"b""? checks don't work on monobehaviors"""
4538,287010765,"b'It would be fantastic to be able to filter out pointers that are not near interaction pointers.\r\nIn most cases, the primary pointer is for interacting with UI, and so it must be a far interaction pointer, especially when driving legacy UIs'"
4538,287381969,b'This is a fine solution.'
4538,287382632,"b""Interesting. I guess since you're not caching pointers for more than a frame anyway its not a big issue. I don't love the overhead of adding an update loop that needs to process all the pointers every single update. This is where preventing pointers from being destroyed could be very helpful in keeping complexity per update down."""
4882,293629513,"b'It would be nice to add speech capabilities, as well as spatial awareness.'"
4882,293766485,"b""Having the jobs namespace adds a dependency on the experimental package as well. If it's necessary, that's fine, but if it isn't, it's not ideal go force users into using it."""
4882,293766902,"b'Yeah this should be a general capabilities Api, mot just related to input.'"
4882,293767155,"b""There may well be some unestablished features that have yet to be released that may not work on hl1. It's good to be prepared"""
6960,362870599,"b""I agree that it could work for more than just hands!\r\n\r\nReally it's a matter of checking the SolverHandler.TargetTransform - that said, facing the camera for a palm means it's up direction aligns with the gaze vector. \r\nFor a general purpose Solver, it's forward might be more useful. It's difficult to generalize that."""
6960,362878772,b'I just updated the docs!'
6960,362940459,"b""Thanks for chiming in @SimonDarksideJ! HandConstraints in general are a bit tacked on right now, as there is no reason for them to be Hand exclusive. I think a general system review would be merited.\r\n\r\nBeyond that, there are other conditions I can think of that would affect the rotation mode, or even the overall Solver behavior.\r\n\r\nFor example, I've written some code that involves keeping a hand menu facing the user, while it's FaceCamera vector is lined up with the GazeVector. \r\nIn other words, even if the palm is no longer facing the camera, the menu will keep facing the camera as long as the user is gazing it. This has the benefit of keeping menus stable, even when the menus are fairly large.\r\n\r\nImplementing a feature like that would require some rethinking about how hands are handled here.\r\n\r\n"""
6960,363404150,"b""Certainly!\r\n\r\nSo the the reason I changed this is because the follow tracked object rotation behavior sets the position at a constant offset relative to the camera to object vector. \r\n\r\nIn my opinion, LookAtTrackedObject should be positioned relative the object's rotation, regardless of the camera's position. This is the meat of this PR to be honest.\r\n\r\nHowever, I realize this may in fact change the behavior MRTK user have come to expect, and so perhaps we should make this change as part of a new rotation behavior enum."""
6960,363405303,"b""My mistake! I changed the private value and add the formerly serialized attribute to persist user's previous values in existing prefabs.\r\n\r\nTo be honest, I don't many folks would be changing this value at runtime via a script. Nothing in the MRTK does so, so it would be entirely in user app level code. If you want me to revert it, I'll do so, but I doubt many folks will notice.\r\n\r\n"""
6960,363406061,b'That makes sense! I can expose them as public properties.'
6960,363406429,"b""Hmm... I don't really know how to write a test that might make sense in this case.\r\nDo you think writing a test is a blocking part of this pr?"""
6960,367506211,b'@Troy-Ferrell I added another enum here called SolverOffsetBehavior for clarity. There is no none option here so this is no longer an issue. I believe the additional enum adds both clarity and options for users.'
6960,367506383,b'I can but none of the other props in the class use this.'
6960,367506438,b'Done.'
6960,367528520,"b""If someone writes a test for the hand constraint class, I'll happily add a function to test my changes. I just don't have the time to write up an entire test class for it right now."""
7124,371293180,"b""I know this was merged in, but I don't think this logic should be repeated in many places.\r\n\r\nIt exists in the hand ray class, and I think it makes the most sense to lean on an implementation for the HandRay, in order to determine if Pointing pose is active. \r\n\r\nThis logic exists in each articulated hand implementation, as well is in the hand ray class, and the math is the same everywhere."""
7333,379931854,"b""It wasn't used and is a shorthand with odd results. \r\nIt computes a magnitude check, and abs, and returns a look rotation, which can easily be done outside. If I were to re-add it, I'd cache the rotation at least, instead of computing it on each access."""
7333,379932602,b'Fixed'
7333,379932609,b'Fixed'
7333,379932615,b'Fixed'
7333,379932629,b'Fixed'
7333,380943089,"b'Before we merge this, what are opinions of @wiwei and @keveleigh on making this field virtual?'"
7333,381265526,b'Alright just updated the code with this change.'
7595,399705025,b'I agree with the decision.'
7611,403212905,b'Might be good to make this script run at edit time. No need to add these components at runtime.'
7611,403213328,b'You should maybe use EnsureComponent instead of Add. Add makes it so that these things might be duplicated.'
7611,403220529,b'Ensure component here too'
7611,403227885,"b'I guess my preference is to simply permanently modify the prefab, rather than having a modifier that adds it. I understand both perspectives though'"
8000,433447707,b'Yeah the camera definitely needs to stay under the playpsace. \r\n\r\nHere is how it currently looks in MRTK-Quest.\r\nCenterEyeAnchor is the main camera\r\n![image](https://user-images.githubusercontent.com/7420990/83447223-1a926f80-a41e-11ea-8985-7e84424b2ad3.png)\r\n'
8000,433448543,"b""One thing to consider with this, is that I'd like to instantiate the Oculus rig at runtime so that all these oculus specific scripts aren't included in the scene if you're not working with Oculus. \r\nIdeally Id be able to destroy the camera currently in place, and replace it with it with this rig at runtime, but it seems the gaze pointer leaves behind dangling references when destroyed at runtime."""
8000,433449201,"b""Regarding your point on destroying whats under the playspace, I don't think that's really a problem in my case, but I do agree that considering how to properly detach things makes sense. I just didn't wanna do some aribtrary detaching that could in fact hinder the destruction process."""
8259,474368353,b'Sure thing!'
8386,479425875,"b""@julenka the reason why the custom teleporter was managed by MRTK-Quest was because the articulated hand definition doesn't provide the ability to add extra input actions, and the parabollic pointer needs a Vector2 action to work.\r\n\r\nBeyond that, I took the time to add extra polish, with the main improvements are just the logic around the cursor  management (making it appear only when needed and directly controlling it, rather than spawning a separate prefab), adding audio, as well as modifying some of the colors for the ray gradient, in addition to utilizing the StabilizedRay utility to smooth the the ray direction.\r\n\r\nAlso, I noticed that the parabollic pointer ray has some dot product check that checks the ray's alignment to the ground, and scales the ray velocity accordingly. I modified that math to make it move more responsively when youre teleporting near yourself."""
8386,480647683,"b""I'd very much like to see the audio remain. I had a chat with @wiwei about the license, and it seemed like Apache 2 is ok to be ingested. The only difference it has from MIT is that the contents can't be copyrighted by people."""
8386,481201585,"b'Fair enough for the HoverClick sound, though I will say the current clips are very faint. I was considering redoing all the audio with the friend who made these new clips, but the audio workflow is currently very lacking, as all clips are serialized references on a per-prefab basis, which makes migrating audio in bulk very cumbersome.\r\n\r\nBack to the point though - I think HoverClick is tonally similar enough to the existing clips that it\'s not problematic to use alongside existing sounds. Having this sound be a fair bit louder helps it stick out as well, but that\'s a subjective point. New Object Interaction sounds a bit different than other sounds, though I firmly believe no existing sounds appropriately convey the sense of displacement that it does, as related to the Teleport Confirmation sound.\r\n\r\nThe rest of the sounds, besides ""Background Menu Music"" aren\'t used in MRTK-Quest, and you may feel free to remove them if you find that they\'re not tonally appropriate to sit alongside existing MRTK sounds. \r\n\r\nI think having some basic music loop that fits with the existing soundscape tonally could be appealing as well.'"
8386,482188716,b'Seems like a newline is missing here'
8386,482189443,b'This seems to have the old license for MRTK-Quest.\r\nCan you update it to the new one?\r\nhttps://github.com/provencher/MRTK-Quest/blob/master/License.txt'
8386,482190236,"b'Wrong null check here: ""TeleportCompletedClip"" -> ""TeleportRequestedClip""'"
8386,482190832,"b'I see this was commented out because of the potential removal - it might be good to look into how to make use of this code, or at least the parts that will raise a teleport cancelled when its disabled.'"
8386,485639863,"b""This was there originally for the custom pointer, but given that the mediator wasn't really built with the teleporter in mind, I think this logic remains necessary. All aboard the train to eventually move it to the DefaultMediator"""
8386,485787427,"b'No - going back to Vector2.zero can trigger a teleport completion rather than cancellation, which is why this code is there in the first place.'"
8766,501260609,"b""Would love to know if that's the case - having custom profiles is a core part of MRTK's workflow"""
145,73078819,"b'I did it using unity messages to follow the unity model for this sort of thing, which I\'ve noticed the rest of the HoloToolkit does.  Examples of the top of my head are ""OnGazeEntered"", ""OnSelect"", but know there are a bunch more.  Are there any examples in the HoloToolkit where someone follows the .net event pattern instead of the unity message pattern?\n'"
145,73450650,"b'I\'m fairly new to Unity, and I believe I\'m following the conversation here, but I\'m go to restate it just to make sure. So please feel free to aim me in the right direction if I\'ve got something wrong.  I used the SendMessage Event system which is baked into Unity to do this, and I understand it is quite slow because it is using reflection internally.  \n\nFrom reading above I believe that @stbertou and @NeerajW are suggesting the same thing, which is to follow the pattern recently added for OnGazeEnterEvent.  The advantage of this is that I get visibility in the Unity editor and can configure the receiver of the event there instead of passing it on the play method as I currently have it implemented.  This does not result in an improvement in performance since it still uses SendMessage to decide when to trigger the event.\n\nHere is why I don\'t think this is appropriate for this situation.  Imagine that I have UAudioManager configure to play 3 sounds: Sound1, Sound2, Sound3.  Now imagine that I want  to do something after Sound1 is complete but not after Sound2 and Sound3.  How I currently have this implemented I would do this with:\n\n```\naudio.PlayEvent(""Sound1"", gameObject, ""OnSound1Complete"");\naudio.PlayEvent(""Sound2"", gameObject);\naudio.PlayEvent(""Sound3"", gameObject);\n```\n\nFollowing the unity event pattern I don\'t see how you accomplish the same thing, you would attach an event  and it would get executed after every sound is completed. \n\nDoes that make sense?\n'"
145,73631133,b'That is correct AudioSource is present in the editor but ActiveEvent is not.  There is no change in this behavior.\n'
7571,395822656,"b'This file is from #7555. Please leave any comments on that PR, thank you!'"
7571,395822756,"b'This file is from #7555. Please leave any comments on that PR, thank you!'"
7555,396622155,b'Thanks for pointing that out @keveleigh! Just updated all the properties to be private and have public accessors'
8643,493874520,"b'Nothing in particular, I can change it if you like.'"
8640,496153941,"b""@keveleigh I'm not sure what you mean by remove typo-ed file? GettingStartedWithTheMRTK.md file needs to remain active for anyone who had it bookmarked, so as not to send them to a 404 error page."""
159,73905342,"b'This is different than ""HoloToolkit.Sharing.ClientRole"" which is used in the client to specify Primary Client or Secondary Client from the user perspective. That remained unchanged with Primary Client being default.\nThis enum is used by the sharing framework to respond to a Network Discovery broadcast and I assume there is an internal mapping for the Client roles.\n'"
179,79207583,"b'ok, I got to ask.... what does NIT: stand for? :)\n'"
179,79208060,"b""I am not opposed to TextMesh. I will have to look again but from what I remember, I've had issues with it in the past specifically around setting a color to the text (known bug, can't find the link right now) - by default it's black so it's not visible on HoloLens. \nDo you happen to have a reference where it's used to I can take a look ?\n"""
179,79208824,"b""I like the idea of making these configurable.\nIf we also make the change to TextMesh, and get rid of the UI Canvas, we need to redesign the way the status color is displayed as now it's just another UI element on the canvas.\nI am thinking this could become a 3D primitive (cube or sphere).\nThe discussion / question is how do we achieve that?\nDo we define one material and allow the user to specify a color that just changes the albedo on the material? This would limit the user to just simple color changes.\nOr do we allow the user to pick different material for each state. This is more flexible for the user, but we need to add 3 default materials to the project. too much clutter?\n"""
5876,322177175,"b""Not the original submitter, but I've been testing this and it seems like it works fine when left in SetupDefaultInteractions()."""
5876,322205351,"b""I've been experimenting with this part of the code and it seems like dragging objects in the sample scene only works if the InputSystem's RaisePointerDown event is called during TouchPhase.Stationary case in this code block.\r\n\r\nI'm not familiar enough with MRTK to understand why but I think this is why @TakahiroMiyaura added that function call there."""
5876,325421915,"b""Sorry...\r\nYou're completely right.\r\nThis should call first time only."""
3310,245446840,"b""At the very least, I'll link to the source in the code! Would definitely like to know what our stance is though. As a note, I did put these in the Example folder, so it wasn't as important to clutter things up with the DLL source if it wasn't necessary.\r\n\r\nhttps://github.com/maluoi/UnityEditorGyro"""
3310,245448666,"b'I have a Material in a Resources folder using this shader, which forces the shader to be included in the build! One might argue that it\'s better to force shaders like this in Edit->Project Settings->Graphics->Always Included Shaders, but this solution is more portable.\r\n\r\nI\'ll rename the material, I renamed the shader, but forgot to rename the matching material as well :) See ""ForceLightEstimationStamp"" material in the upcoming commit.'"
3310,245451261,"b'I updated the docs with, among other things, a Project Configuration section that should cover this :)'"
3310,245452692,"b""Yes, definitely a good idea! I do want to improve this part of the tool a bit more at some point, but it's handy enough in its current format!"""
3310,245454508,"b""I had thought about using an AnimationCurve here! I ultimately decided that the ability to customize this to such a degree is probably overkill, it's way too easy to make a bad curve, and pretty hard to make a curve better than this one!"""
3310,245455478,"b""One of my goals for this project is **zero** hard MRTK dependencies! MRTK is nice, but everyone benefits if a component can be removed and used on it's own :)"""
3310,245456524,"b""I wasn't sure about this either! I figured if we did that, then whenever it gets removed from Preview it would break any user code that references it. That seems a little unneccessary, but maybe that would be the point?\r\n\r\n@davidkline-ms Your thoughts?"""
3310,245457200,"b""I find this often will dramatically improve the readability of code, so I do it almost everywhere! This kind of formatting is super important to me, so I'm gonna keep it unless someone has stong feeling otherwise :)"""
3310,245457592,"b'Why do we do the script icon thing, do you know? That seems like a really odd dependency on MRTK assets.'"
3310,245461834,"b""I'll have a comment in the function to elaborate! Here's the details:\r\n\r\nThis function creates a sphere mesh with texture overlap at the back. It contracts as its vertices are generated, making it look kinda like the shell of a nautilus! The first vertical slice will be scaled by 1, and the last by 0.9 in this case. Since there's overlap on the last few slices, this ensures none of the geometry will zfight.\r\nMore careful geometry and shaders might not need this scaling, but it doesn't hurt even then, since the view from the center is the same regardless!"""
3310,245461887,"b'Another note, the EditorGyro DLL is editor only, and does not get compiled into any distributables.'"
3310,245757140,"b'Alright, fairly certain I got pretty much all of these with the latest commit :)'"
3310,245762372,"b""It's an unused material, I removed it! :)"""
3310,245776968,"b""I'm not a huge fan of #ifdef, so yeah, this sounds like a good idea :)"""
3310,245812623,"b'Excellent, added that :)'"
3310,245813125,"b""I added a Scenes folder for this, and scraped out a few of the remaining using statements. I'm gonna pass on the script icons though, unless that's a hard requirement."""
3310,245814637,"b""This is something I would like to do, but don't know of a good way to do it yet! I'm not a fan of brute checking it, but I'm certain there's a more elegant way, so I'll definitely be keeping this in mind for future updates."""
3310,245834361,"b""I added 'Preview' to the namespaces!"""
3310,246182510,"b""After talking with people, signing DLLs seems like a complicated task right now. Since it's not an essential feature, I've removed the DLLs, and added instructions for people to put them back if desired!\r\n\r\nI'll still be chasing down how to get this signed, but I don't really want this to be a blocker at the moment!"""
3310,246221843,"b""This is correct! Makin' it private so I can change it later if necessary :)\r\n\r\nEdit: Shaders in the 'Hidden' category don't appear in the shader selector! In case that was part of the question."""
3310,246222089,"b""I don't know how this skipped my mind! Looks like it has no standardized license, just some html about attribution and non-commercial use. Probably easiest to find something else, will work on this."""
3310,246222445,"b""Maybe I'll just make a folder specifically for MRTK demos, so people can safely assume those scenes will be broken when pulled out? Then I can add the MRTK Standard shaders in there too."""
3310,250348436,"b'Shifted a few files around here, but I did review the namespaces, and they should be fine now :)'"
3310,251115676,"b""captureTex can be either null or !null in this case. If it's null, it needs created, if it's not null and the dimensions don't match, it needs destroyed and recreated. I use this pattern a fair bit to avoid having two identical or near identical texture creation lines so close together.\r\n\r\nIf you have a better patterns for this type of case, I'm open to it!"""
3310,253987540,"b'Seems like there was a safe method hidden deep in the docs too, I switched over to that!'"
3310,253988115,"b""I updated the included shader to cover the reflection examples, so I don't need either of the MRTK or Unity Standard shaders anymore!"""
3310,254102655,"b'I added platform specific scenes for MRTK and ARFoundation, so the MRTK one now uses the SceneDescriptionPanel prefab!'"
3310,254103017,"b""It does feel strange, but the real fix for this is signing the DLL! It won't stay this way for long, so I'll leave it as is until I can get it signed properly."""
3310,254105260,b'Yep! Switched to the ShaderBall. It looks pretty great! :)'
319,86585290,b'Fixed\n'
319,86585307,b'Fixed\n'
319,86585608,b'Fixed\n'
319,86585680,b'Fixed\n'
319,86591497,"b""It does not, but I don't think it should in this case, as this button is . The dehydration animation itself sets the button's renderer to inactive. I modified the animation so that it also sets the button collider to inactive, which I think addresses the issue.\n\nThat being said, I'm not convinced this button script is ready for main HoloToolkit yet. As such, I renamed it to TestButton and moved it to the Tests/Scripts location, so that it serves as an example script for the test scene, rather than something that people should start building on. Some design work would be required to make this into a great reusable button script that works across the board.\n"""
319,86921633,"b""Yeah, it might make sense. I agree that there's a bunch of cases where you only care about click, and other cases where you only care about up/down (and not click).\n\nWe could split the interface in two: IInputHandler (for up/down) and IInputClickHandler (for click). Would it make sense to do this as a separate pull request, or would you prefer I add it to this one?\n"""
319,86923437,"b'I can add it if you want, but it was never in there in the first place. Your call.\nIn any case, it would be HoloToolkit.Unity.Examples, or something like that?\n'"
319,86923567,"b""You don't need a SourceMoved event, because at any point in time, you can query the IInputSource (that you receive as part of the event data for any of the events) for its position and/or orientation, if available. HandDraggable gives a good example of that. This allows the event system to stay relatively lightweight in terms of number of events sent.\n"""
319,86923687,"b'It\'s much more powerful as far as customization goes, and it leverages the same scripts already used for simulating hand movement in the editor. This change remove the ""Main Camera.prefab"", as this ones fully replaces it.\n'"
319,86923787,"b""Because it isn't needed anymore. @paseb made a new ICursor interface + cursor scripts that are better designed, and include the functionalities tha the old cursor provided\n"""
319,86923847,"b""Yes, that's what the comment says. More specifically, it needs to be added to a game object with a collider\n"""
319,86923964,"b""I'm not setting it. I thought you already had a script that sets the focus point based on the gaze manager's output. Wouldn't it just be a matter of adding that script to a game object in the scene?\n"""
319,86924253,"b""Because the HoloToolkit should be encouraging good coding practices and good patterns, as opposed to providing classes that can't be properly extended and are essentially forcing you to eventually to create your own copy of existing classes when you want to make app-specific changes.\n\nThis change provides good prefabs that people can use for a variety of purposes. It also provides a way for users that want to build scalable apps to build on top of the building blocks we are providing, without having to copy/paste code or greatly modify it.\n"""
319,86924863,"b""You mean the enum values for AnimInputTypeEnum? They just match the [Unity types for Unity animations](https://docs.unity3d.com/Manual/AnimationParameters.html).\n\nI guess it might not be obvious for people that haven't used Unity's animations. I can add a comment on the enum if you want.\n"""
319,86925167,"b'Yeah, it is. I think the way @paseb names the states, ""Interact"" means that the user\'s hand is visible with the finger in the ready state, so the user is in a ""ready to interact."" state. InteractHover is the equivalent for when the user\'s gaze is hovering over an object.\n\nI don\'t object to renaming those if you have a better name for the states, but I don\'t have a better suggestion in mind.\n'"
319,86925314,"b'I\'ll clarify the comment.\n\nThis is a cursor that simply switches between activating different game obejcts based on its state. This allows someone to do exactly what HoloToolkit had before with the ""CursorWithFeedback"" test scene.\n'"
319,86925571,"b'No, it raises FocusedObjectChanged. You can get the OnFocusEnter and OnFocusExit message through the input module, by implementing the IFocusable interface in your MonoBehaviour\n'"
319,86925637,"b""I agree with splitting the code in functions. From what I remember, it wasn't trivial to do because of dependencies between some variables, but can take a quick stab at it tomorrow.\n\nI'll look at the focus point stuff as well. Might just be a matter of adding it to the InputManager prefab.\n"""
319,86931370,"b""Yeah that's weird. I'll take a look at the scene\n"""
319,87041917,"b""I don't know why this happened, but it was somehow corrupted. Looks like a hash gone wrong.\nIn any case, I fixed it, will be part of my next change..\n"""
319,87042236,"b""Looking at it, none of the scripts in the SpatialUnderstanding-FeatureOverview project are in a namespace. Given that, I'll leave SpatialUnderstandingBasicCursor in no namespace.\n\nI agree that they should be changed so that each example is in its own namespace, but don't think it makes sense to do this work as part of the current pull request.\n"""
319,87042423,"b'Good catch, fixed\n'"
319,87042902,"b'Fixed, thanks!\n'"
319,87048190,"b'Added some better comments + tooltip, that will be in my next push\n'"
319,87050366,"b""Agreed, the state management here isn't needed anymore. I removed it, and merged registration / unregistration in two protected virtual methods called RegisterManagers and UnregisterManagers\n"""
319,87079650,b'I modified the comment a little to clarify it\n'
319,87079686,"b'Agreed, done\n'"
319,87080351,"b'Something I forgot to remove, thanks for spotting it! Removed.\n'"
319,87097940,"b'Fixed the focus point by simplifying that StabilizationPlaneModifier script a little, and adding it to the InputManager prefab so that everyone uses it by default.\n\nAlso split the Update method of GazeManager to make it cleaner\n'"
319,87122498,"b""It could, but ISourceStateHandler is already used for visibility. I think it'd make sense to do this:\n\nISourceStateHandler: source up/down\nISourceVisibilityHandler: source detected / lost\n\nI can look at making that change tomorrow, it shouldn't be too bad.\n"""
319,87245473,"b""Agreed that this might save a few allocations. I'd suggest making that optimization at a later time, should it become necessary. It wouldn't be a breaking change, since it's an internal implementation detail of InputManager, and I'd like to get this first version in.\n\nLet me know if you disagree.\n"""
341,89368342,"b""Why change this interface? I understand the value of adding FocusEventData so that you can pass in the focus source triggering the event, but there's still a lot of value in having OnFocusEnter and OnFocusExit. Otherwise, all of your code needs to do a comparison to figure out if it's a focus enter or an exit."""
341,89371109,"b""I don't think we should make a second singleton class. I'm a little concerned about duplicating code here, and making GazeManager more complicated than it needs to be. I am not a fan of making GazeManager into an input source."""
341,89373467,"b""Part of the problem problem is that BaseInputSource wasn't written to become a focus source. The original design was around having input sources and focus sources (which was originally only the GazeManager), with the InputManager doing the bridge between the two.\r\n\r\nIf instead of implementing IInputSource, GazeManager implements IFocusSource (new interface you'd create). you can get rid of these methods that IInputSource forces you to implement. Then, if we ever have 6DOF device support or anything else that is both a focus source and an input source, it could potentially implement both IFocusSource and IInputSource."""
354,90495747,b'The PhraseRecognizedEventArgs class should be in its own file.'
354,90496179,"b'Can we create a new class (SpeechInputSource) instead of modifying the existing Keyword manager? Then, if it works well, we could simply eventually delete the old KeywordManager.'"
2606,211434499,"b'Sure. whatever is easiest, is there an existing example somewhere in MRTK?'"
2606,211438264,"b'What I\'m asserting is that the base.OnInspectorGUI() or DrawDefaultInspector() method is ""doing it right"". It removes code duplication and creates a clearer and easier to maintain inspector for future developers.\r\n\r\nThink of it in a more generalized way: say we had a class that provided a virtual DrawMe() function, and then we got a PR to bring in a child class that overrode DrawMe() by copy pasting the body of the parent class\'s DrawMe() and then added a text label at the bottom. We\'d ask for it to be refactored to a call to the parent function followed by adding the text label.\r\n\r\nThis is the same, we\'re inheriting behavior from the default inspector. It\'s bad practice to duplicate that behavior.'"
2496,205650702,"b""Why are these removed now? These are offsets from the controller, not offsets for the controller. Where's that now handled by the visualizer?"""
2496,205651716,b'do we want to initialize to Handedness.None?'
2496,205653916,"b""Take a look at Simon's PR."""
2496,205654073,"b""Pretty sure the default (even in master) is left. What's the point of attaching to a controller of it doesn't have a hand to attach to?"""
2496,205654077,"b""Pretty sure the default (even in master) is left. What's the point of attaching to a controller of it doesn't have a hand to attach to?"""
2496,205654495,"b""Default in master is left; default in June is unknown.\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/blob/june18_dev/Assets/HoloToolkit/Input/Scripts/Utilities/ControllerFinder.cs#L42\r\n\r\nThis was changed to facilitate spawning AttachToController/ControllerFinders at runtime, so it doesn't try to attach to a controller in OnEnable (which happens on Instantiate) and then get its handedness changed in Start (which happens after settings can be changed on the script)."""
2496,205654516,"b""Where? It's a massive PR. The only thing I see are controller offsets for the model."""
2492,205655203,"b""What's the replacement?\r\n\r\n(Also...why was this turned into a MotionControllerVisualizer?)"""
2492,205773199,"b""This feature is superfluous in Alpha and was removed.  We will review going forward if it's actually required."""
2496,205778525,"b""If we are agreed with this rename.  This should be done in the visualization PR, as that has already made changes to this (and the inspector) classes.\r\nSo please revert these and I'll rename in the visualizer PR"""
2496,205793728,"b'I still need these changes for the pointer viz, which is why I decided to do it separately.'"
2496,205798805,"b""Can we then move this file to another folder then, say handlers? (including it's inspector)"""
2496,205801314,b'Yes'
2533,207090082,b'Does this mean we cannot have a pointer for each controller / hand in the scene?'
2533,207090156,"b""pointer's"""
2533,207090241,b'summary tag'
2533,207091089,"b""No, it means we can only have a single controller pointer component on a single `GameObject`.\r\n\r\nWe can have as many pointers for as many hands, controllers, fingers, and toes as we'd like."""
2545,208006969,b'nit: extra line'
2545,208036152,b'could this not be used with thumbstick rotation?'
2545,208041670,b'It is also used with thumbstick rotation. \r\n\r\nI copied as is. I can update.'
2545,208328435,"b""Pointers don't need to be destroyed when their source is lost?"""
2545,208328475,"b'A lot of these additions doesn\'t seem like things that would be in a ""`BaseControllerPointer`"" and are teleport-specific. Why are they here and not in specific pointer implementations?'"
2545,208330542,"b""They are here because pointers still need to know about teleportation. That's how we're hiding/showing the pointers and their cursors when a teleport request is raised."""
2545,208330591,b'I moved that into a base class.'
2545,208333989,"b""Right, but hiding/showing pointers depending on the state of other pointers seems like a common scenario and could get out of hand if every pointer needs to be written into the `BaseControllerPointer`. Teleportation isn't necessarily a special case, though I suppose we can take another look in beta."""
2545,208334362,"b'Indeed, and maybe that can be abstracted out a bit more.'"
2833,221112621,"b'Not sure about removing this null check, seems quite valid'"
2833,221112906,"b""We don't need it bc we wait until the input system is valid in the line below on \r\n\r\n`await WaitUntilInputSystemValid;`"""
2833,221113190,b'Unless the InputSystem is off and I add the BaseControllerPointer to an object manually (or other component consuming it).  Which means it will sit forever in this loop.'
2833,221113451,"b""> Which means it will sit forever in this loop.\r\n\r\nIt's not a loop, as it's just a continuation. No overhead there.\r\n\r\nBesides why would you disable the input system then put something that depends on the input system directly in the scene yourself unless you're asking for trouble?"""
2902,224506500,"b""Shouldn't these pointer updates be in a separate PR?"""
2902,224508020,"b""I'm intending to do so."""
2944,227068542,b'This will still null ref if the gameObject is destroyed.'
2944,227070908,"b'Yes, but we only set the name once we create the pointer, so I doubt that can ever really happen.'"
2944,227124443,"b""If it's a public setter, it might be changed anywhere."""
2944,227124778,"b""isn't this hiding an issue? if the underlying gameobject has been destroyed, the pointer is no longer valid... how do you envision an app getting into this situation?"""
2944,227126225,"b'```suggestion\r\n                if(gameObject == null)\r\n                {\r\n                    Debug.LogError($""{pointerName}\'s GameObject reference is missing!"");\r\n                    return;\r\n                }\r\n                \r\n                gameObject.name = value;\r\n```'"
2533,207090470,b'\xe2\x80\xa6 LineRenderers => lineRenderers'
2533,207090696,b'summary tags for the public properties'
2545,208012194,b'Why are we making the dev create the empty child? Seems we should dynamically create / remove automatically'
2545,208020592,b'We are dynamically creating the child. I just added the warning here just in case something goes wrong.'
2545,208039927,b'Doesnt Unity have a way to access these by name?'
2545,208040068,b'nit: can you move this up to the same line as the (?'
2545,208042093,"b""yes, but they're expensive, and a simple bit flag is enough. I simply copied from master for this one and left as is."""
2545,208042333,"b""yes, I'm not sure how that got passed me. lol"""
2545,208043934,b'>I simply copied from master for this one and left as is.\r\n\r\nWhere did you copy from master for this?'
2545,208047473,"b""Nvm, couldn't find it in master. I think it was from HUX actually. I can't remember exactly where I got it. It was in my multi pointer refactor, that's all I know \xf0\x9f\x98\x85 """
2545,208052886,"b""let's file a beta issue to read the layer values (by name) at startup and cache their mask values.... just in case they change in a future version of Unity"""
2545,208053189,"b'> just in case they change in a future version of Unity\r\n\r\nI highly doubt that, but sure.'"
2545,208053252,b'> layer values (by name) at startup\r\n\r\nSounds expensive.'
2545,208091646,b'>Sounds expensive\r\n\r\nOne time at startup? '
2545,208306089,b'#2564 '
2545,208309238,b'I think you guys are being a bit overboard here.\r\n\r\nThe inspector for this is user friendly and shows all the layers in the project in the dropdown.\r\n![image](https://user-images.githubusercontent.com/13334553/43790893-d0426fe4-9a28-11e8-9355-acebef0e241f.png)\r\n'
2545,208309596,"b""The only thing I've done here is set it to the default and ignore raycast layers which will most likely never change (nor have they in 10 years that unity has used them)"""
2545,208310468,"b""They're even blocked out from being editable:\r\n![image](https://user-images.githubusercontent.com/13334553/43791077-5bccf890-9a29-11e8-84b1-1b573fa039c6.png)\r\n"""
2545,208313206,"b""I found a nice const value for a substitute that's not some expensive lookup on startup \xf0\x9f\x91\x8d \r\n\r\n`Physics.DefaultRaycastLayers` and `Physics.IgnoreRaycastLayer`"""
2619,211754851,b'can devs override this threshold? for example if they want to make an experience where the user climbs steep inclines?'
2619,211755272,b'I see distance being calculated but it is not being considered here... is that intentional? is distance a factor in whether or not a teleport should be allowed?'
2619,211764278,b'Yes by setting the `upDirectionThreshold` value in the inspector.'
2619,211764784,"b""At this point we've already calculated a valid point. So I'm not sure what you mean here."""
2619,211767061,b'was just wondering if distance was involved in determining a valid point.'
2619,211768065,b'@davidkline-ms this distance calculation is only for properly clamping the line renderer to properly render to the end point of the parabola. It is not used in calculating the validity of the teleport result and is outside the scope of this PR.'
2619,211781437,b'It is not'
2687,216146662,b'Extra ;'
2804,218482055,b'`OnDrawGizmosSelected` only gets called in the editor anyway. Do we have editor specific code in this ifdef?'
2804,218482395,"b""This doesn't look good. Event data should only be created by the input system."""
2804,218485110,"b""You're right, its redundant."""
2804,218485767,"b""I suppose we can pass the existing FocusEventData into the virtual methods. The original created a new pointer event to pass along. To be honest, I'm not entirely sure why since the new FocusEvent is effectively a clone of the original."""
2804,218498182,"b'this could be multiple pointers, correct?'"
2804,218499019,"b'The base input handler already does this kind of stuff. We could make `IsFocusRequired` virtual in the base input handler and override it in this class, then just call the base.'"
2804,218499146,b'bioList? haha'
2804,218499716,"b'Not sure how I feel about making ""clone"" methods of the handlers. What\'s the advantage here?'"
2804,218500280,b'This is what you mentioned yesterday. That sounds much more elegant. I can add it to this PR.'
2804,218500394,b'\xf0\x9f\x98\x89 naming artifact from HTK.'
2804,218500970,b'Please do!'
2804,218502529,"b'It definitely should, is there an established pattern I can look at for handling multiple? `IMixedRealityPointer[]`?'"
2804,218505282,"b'This is how it worked previously, do you see a better approach? The important thing is the interactable list check. If the extending class overrides the original handler method, it will git every event call from `InputSystem` - where we really only want extending classes to get the event if interactable list check passes.'"
2804,218507904,"b""Since `IsFocusedRequired` is a public accessor, can't we just set it to false before we call `base.onEnable()`? Do we need to override the accessor here?"""
2804,218508040,"b""I don't see why we can't just handle everything in the handler implementations. No need to duplicate methods.\r\n\r\nWe can make all the handler methods virtual and override them just like the ones you've got here."""
2804,218508446,b'Take a look at the [`BaseFocusHandler`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit-SDK/Features/Input/Handlers/BaseFocusHandler.cs)'
2804,218509271,"b""We could make the `IsFocusedRequired`'s set accessor protected"""
2804,218510262,"b'If the extending class overrides the original handler method, it will get *every* event call from `InputSystem`. Which is not the desired intent, the extending class should *only* get an event if it came from an object in the interactables list.'"
2804,218512046,"b""So we're removing the check if the event is valid, then passing that on to the derived classes via the protected methods, correct?"""
2804,218513876,"b'Currently (and desired): The handler contains the interactable check, then if valid, passes that on to the derived classes via the protected methods.'"
2804,218515331,"b""Alright, I think that's okay, but the methods seem redundant (as you could still do the same things with a base call to check the validity). I'm interested in what others think as well."""
2804,218565465,"b""Let's be sure to add the summary statement as well ( I know it's kinda redundant, but it's part of our coding guidelines )"""
2804,218579273,b'Do we need this override that just calls the base method?'
2804,218579643,b'Capitalization for clarity: `Registerinteractable` -> `RegisterInteractable`'
2804,218589936,b'We do not.'
2804,218607069,b'So can we rename it to something more like what is actually is?'
2804,218607513,b'interactablesList?'
2804,218608932,"b'Yeah, I\'m also not sure about ""translating"" the events here. I can understand having a ""isInteracted"" check before doing something but not sure this is the correct path.\r\nMaybe if there was an ""IMixedRealityInteractable"" interface maybe...  But still not sure.'"
2804,218618095,"b""Not really sure we need another interface here. It'd just be a copy of all the handers anyway"""
2804,218666849,"b'FYI, added a diagram from HoloToolkit readme. A script which inherits InteractionReceiver can selectively implement event handlers and handle those types of events coming from multiple objects.'"
2804,218667535,"b""I'm not sure we want to allow people to set a new list. We can make this a getter only as it doesn't prevent people from modifying the list."""
2804,218667573,b'same idea here'
2804,218670679,"b""@StephenHodgson Setting this list of Interactables from the inspector by dragging & dropping objects from the scene is the crucial elements of the Receiver. Same for the 'Targets' \r\nYou can find the example in the 'InteractableObjectExample' scene in HTK.\r\n\r\n![2018-09-18 22_13_27-settings](https://user-images.githubusercontent.com/13754172/45732204-19f56f00-bb90-11e8-8d95-4fa2fcac106a.png)\r\n\r\n\r\n![2018-09-18 22_12_27-settings](https://user-images.githubusercontent.com/13754172/45732184-06e29f00-bb90-11e8-9be2-0adff4509fcf.png)\r\n"""
2804,218671309,b'You should still be able to accomplish this with the read only property (as the inspector is reading the private field anyway)'
2804,218671889,"b'Oh, you mean modifying the list in runtime in the code. I think there are situations when the interactable objects are dynamically generated and added to Receiver in runtime. (e.g. dynamically generated button panels) '"
2804,218672154,"b""You should still be able to add/remove items from the list as well. Having a get only accessor just means someone can't make a new list and set it (effectively overwriting whatever was there)."""
2804,218674245,"b""Right, using List.Add() / Remove(). Yes, I can't think about an example of replacing the list with a new one. """
2804,218677600,b'This is really good to know. I always thought any modification of a list required the setter as well. I\xe2\x80\x99d be happy to change.'
2804,218883426,b'do we need a region with only one field?'
2804,218883597,"b""I'd much rather sort the regions by monobehaviors and interface implementations"""
2804,218925006,b'Fair enough - just trying to be consistent. Do we have region recommendations in the code guidance?'
2804,218925481,"b""Hmm, no but maybe it's something we should add."""
2804,218976456,b'fixed.'
2804,219004072,"b""let's be sure to add the region's name to the end as well."""
2804,219004142,"b""Please take a look at any of the pointers to see how we've broken out the regions by interface"""
2804,219004216,b'extra line'
2804,219004230,b'extra line'
2804,219004244,b'extra line'
2804,219004256,b'extra line'
2804,219004394,"b""I know this is a bit nit picky but let's be sure to keep the spacing consistent as well in our project. \r\n\r\nPlease, also add the `/// <Ineritdoc/>` xml tag for any interface implementations."""
2804,219280210,b'This should be `/// <inheritdoc />` (this happens in several places)\r\n'
2804,219540983,b'Good catch'
2804,219551170,b'unused?'
2978,229426134,b'Why do we have commented out code?'
2978,229426734,b'all fields should be private. Protected/public property accessors are okay.'
2978,229520481,b'Fixed all of the holdover protected class variables to be private.'
2978,230509480,b'why is the input handler interface commented out? is it going to be needed in the future?'
2978,230509603,b'is the developer going to be able to change the trim color?'
2978,230509691,b'what fix is needed? is it already there?'
2978,230510000,"b'These comments feel a lot like ""gets or sets the foo property"" is there more than can be said?'"
2978,230510106,"b'Since these fields are not hidden in the inspector, we should have tooltip attributes.'"
2978,230510283,b'any chance an app may need/want to access this?'
2978,230510501,"b""It's a little confusing to have LocalContentOffset backed by backgroundOffset. can we unify the names?"""
2978,230510622,b'This might be something an app may want to change at runtime?'
2978,230510765,b'Allow apps to change this value at runtime? Or would that cause downstream issues?'
2978,230510962,"b""is this going to be needed? if not, let's remove commented out code"""
2978,230511125,"b'this looks to be outdated code, probably should be removed.'"
2978,230776132,b'Resolved in my PR I opened on his branch.'
2978,230776316,b'Fixed in my PR opened on his branch.'
2978,230776435,b'Added with my PR on his branch.'
2978,230776640,b'Easy enough to add property accessor as needed.'
2978,230776884,b'Addressed in my PR on his branch.'
2978,230776991,b'Also addressed in my PR on his branch.'
2978,231001783,"b""It wasn't an available option on the HoloToolkit one.\r\n\r\nI believe that individual devs will just use different materials on the tooltip gameobjects/prefabs so there's a chance it doesn't need to be a code defined thing.\r\n\r\nI think this could be added as an expansion of functionality later if explicitly requested or if we find a solid use case for it to be done programatically?"""
2978,231002270,"b""I believe the tooltip/stem connector is fixed and functional now and the comment escaped my attention. I'll try to remember to do a quick change to it tomorrow morning."""
2978,230511247,b'please remove... it is not a valid namespace in MRTK :)'
2978,230777045,b'Cleaned up in my PR on his branch.'
2978,230511707,"b""let's try to avoid throwing in MRTK. the exceptions will likely be handled automatically by Unity and may case a performance issue.  recommend using Debug.LogError messages instead to alert developers of an issue,"""
2978,230777130,b'Agreed. I already changed it to a debug error on the PR against his branch.'
2978,230512055,b'Please add some comments describing the purpose of the enum and the meaning of the values. Will help those reading the code to better understand the usage.\r\n\r\nthanks!'
2978,230512152,b'Is this something that should be allowed to be set in code?'
2978,230512243,b'Please provide tooltip attributes to fields that appear in the inspector.'
2978,230512355,b'Lots of commented code here... what needs to remain and what is obsolete?'
2978,230777290,b'Added tooltips in PR against his branch.'
2978,230512677,"b'Per MSDN conventions, please use full words for these values (ex: BottomMiddle instead of BotMiddle).'"
2978,230512763,b'Please add summary tags for api documentation generation.'
2829,219997526,b'comments should be summary tags.'
2978,230513335,b'Please consider replacing hex values with shift notation as per the style guide.'
2978,231229762,b'Could I have a link to the style guide?'
2978,231261096,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/CodingGuidelines.md'
2829,219997431,"b'Which way is ""North""? \xf0\x9f\x98\x85 \r\n\r\nI wonder if we can come up with a better direction indicator based on X,Y,Z directions. '"
2829,220001583,"b'North: Vector3.up\r\nNorthEast: Lerp(V3.up, V3.right, .5f).normalized\r\nEast: Vector3.right\r\netc\r\n\r\nShould I replace the NESW naming approach to Up/Right/Down/Left with UpRight, DownRight, DownLeft, UpLeft?'"
2829,220002282,b'I think we might already have an enum that has something similar? Not really sure.\r\n\r\nI think this might be a good one to make generic.'
2829,220004844,"b""Should I generalize and migrate to MRTK.Core, probably into the Utilities?\r\n\r\nI'll look around to see if anything already exists."""
2829,220019784,"b'Most of our enums are in ""Core/Definitions""'"
2829,220021276,"b'Maybe we should take the lead from Vector3.Up, Vector3.Forward, Vector3.Left, Vector3.Back etc?\r\nhttps://docs.unity3d.com/ScriptReference/Vector3.html\r\n\r\nUp\r\nUpRight\r\nUpLeft\r\nUpForwad\r\nUpBack\r\n\r\nDown\r\netc\r\n\r\n?'"
2829,220268496,"b""Next is the question of should I only include the options that this enum is used for, or should I add the options that weren't previously used 'ForwardRight' for instance.\r\nSome part of me questions if it is really better to have this as an enum compared to a Vector3 if it's being used exactly like a Vector3 but with greater long term maintenance requirements."""
2978,230513414,b'Please add summary comments for api documentation generation'
2978,230513473,b'Northeast instead :)'
2978,230777542,b'Done in my PR on his branch.'
2519,206715073,"b""this looks really weird... shouldn't it be\r\nHighlight = 1 << 0,\r\nOverlay = 1 << 1,"""
2519,206719244,"b""Isn't that what it is?"""
2511,205954969,b'missing summary'
2511,205954968,b'fields should be private'
2511,205956947,b'nit: Ease\r\n'
2511,205956954,b'nit: Animates'
2511,205956979,b'Rename:\r\nLerpTypes->EaseTypes\r\nEaseIn -> In\r\nEaseOut -> Out\r\nEaseInOut -> InOut'
2511,205956991,"b""By guidelines, should this be it's own file? Or at least outside of this class since it is public."""
2511,205957000,b' needs { }'
2511,205957004,b'summary tags thoughout'
2511,205979589,"b""Is there a way to also raise an event through the MRTK's event system, or event as an Action?"""
2511,205980073,"b""Let's review that in Beta.  I expect the examples scenes to grow moving forward."""
2852,221276870,b'More font shaders?\r\n\r\nDo we want to put these in standard assets?'
2784,217550865,"b""Isn't this the same as the ControllerPoseSynchonizer?"""
2784,217551052,b'Not sure this is a good idea.'
2784,217551151,"b'That was it, I recall rejecting bring it in and conceded slightly when we changed the implementation in line with the MRTK approach.'"
2784,217551455,"b'Yikes, missed that.  I cannot think of any good reason why any component outside of the device layer would need to enumerate the managers, especially the devices.\r\nThe abstraction is there for a reason to ensure maximum compatibility.'"
2784,217552921,"b'Okay, let me know how I can get at the tracked controllers without doing this.'"
2784,217553481,"b""It's not, no. The ControllerPoseSynchonizer moves an object to a specific pose based on the events. This exposes a transform that can be used to follow or do math on or whatever.\r\n\r\nThis additionally diverges from ControllerPoseSynchonizer when specific controller attachment points come online."""
2784,217708234,"b'Easy, use the pose synchronizer'"
2784,217734350,"b'>The abstraction is there for a reason to ensure maximum compatibility.\r\n\r\nExactly, that\'s why I\'m only asking for and calling methods contained in the base device interface abstraction. Complete compatibility regardless of the platform I\'m on. Other SDK components talk to systems using `GetManager` as well. This isn\'t a new method.\r\n\r\nWhat\'s a scenario where this breaks or does something ""wrong""?'"
2784,217752146,"b""Exactly the scenario you're proposing."""
2784,217753401,"b""Nothing breaks and nothing wrong happens. Please be more specific instead of restating what you've already said."""
2784,217754596,"b""I'm not sure how I can get more specific as we've clearing pointed out everything wrong in other sections of the comments and issues related to this. I'm going to politely ask you not to work on this anymore, as I'm not entirely confident you understand the implications of the changes you're requesting to make."""
2784,217755185,"b""I'm making one change to the device layer, and the rest are SDK changes to solvers only. Feel free to enumerate the implications in this thread."""
2784,217795814,"b'> I\'m not sure how I can get more specific as we\'ve clearing pointed out everything wrong in other sections of the comments and issues related to this. I\'m going to politely ask you not to work on this anymore, as I\'m not entirely confident you understand the implications of the changes you\'re requesting to make.\r\n\r\nThere have been quite a few ""this is wrong and vague comments on this PR relating to lack of confidence in various contributor\'s understandings of the architecture and the intent of these changes, as well as requests for elaboration on architecture.\r\n\r\nI do agree that we need clarity (tasks?) for feature additions and I would like to understand why this ""is not compatible with the way the MRTK is architected,"". Documentation beyond the layer diagrams would go a long way towards helping here.'"
2784,217796382,"b""Let's try to come to a common understanding on what the goal is and why things need to be done in certain ways (or not).\r\n\r\nMy goal is to avoid heated discussions over async text as they can rapidly devolve."""
2784,223147420,"b'Just to clarify this class is meant to be used on GameObjects that are looking for controllers, not the controller itself, correct?'"
2784,223148508,b'Correct'
2770,217149174,b'Why have this attribute when we have a custom inspector? We can probably safely remove it.'
2770,217150115,"b""You didn't like the way we were hiding this field in the original custom inspector when this was added to master in #2245, so this tag was added. I'm happy to revert."""
2789,217846252,"b""I'm not very familiar with expression-bodied members, but doesn't this remove the setter? SolverHandlers need a public setter so they can be set to follow non-tracker objects (e.g, any random game object) at runtime. """
2789,217920495,"b""You can still set any transform to track, this is just a read only value of the currently tracked transform's type."""
2789,218249808,"b'Ah, right. ""secondTransformOverride"" didn\'t show up in the diff, so I got the two mixed up. \r\n\r\nBut I guess that prompts a similar question. If this becomes read only, how does gameplay logic tell the solver to start tracking a motion controller again? It has to find the proper motion controller in the scene and override the TransformTarget? That seems like an undesirable complication.'"
2789,218256156,b'I can see how that would be useful.'
2903,223897553,b'Be sure to set an Icon :)'
2903,223898345,b'Why do we override the default script icon?'
2770,217368327,"b'With a custom inspector, so we still need this?'"
2770,217415187,"b""Solver.cs doesn't have a custom inspector"""
2770,217147926,"b""we should check if we're in the editor here and destroy immediate."""
2770,217148075,b'should `RequiresOffset()` be a property?'
2770,217148246,b'Yeah we can make this a property.'
2770,217152120,"b""What's the benefit? Unity recommends `Destroy` for game code, which this is.\r\n\r\nhttps://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html\r\n\r\n>You are strongly recommended to use Destroy instead.\r\n\r\n>In game code you should use Object.Destroy instead."""
2770,217170735,"b""In editor if you call Destroy, it'll throw warnings and suggest calling destroy immediate.\r\n\r\n>**This function should only be used when writing editor code since the delayed destruction will never be invoked in edit mode.** """
2770,217171140,b'Which is why checking if `Application.isEditor` before calling the appropriate method.'
2770,217172130,b'Updated'
2770,217172687,"b""This isn't editor code though. When will this be invoked in edit mode?"""
2770,217174811,"b""Well as long as the warning doesn't show up, it'll be fine."""
2770,217175206,"b'Who knows, maybe someone will extend this class and have it run in edit mode. \xc2\xaf\\_(\xe3\x83\x84)_/\xc2\xaf'"
2770,217367581,b'Missing summary (tooltip text should go here)'
2770,217466014,b'also missing tooltip summary'
2770,217466049,b'summary'
2770,217466204,b'summary'
2784,217551319,b'If anything we should be inheriting form the pose synchronizer.'
2784,217557701,"b'As I mentioned in the PR where you created that pose synchronizer, it does not fulfill the requirements of the original ControllerFinder. It serves a similar purpose, but is incompatible with this case.'"
2784,217708360,"b""Those requirements being?\r\n\r\nHow _exactly_ is it incompatible? I don't understand."""
2784,217749144,"b""The exposure of a Transform for the solvers to use to solve towards or about.\r\n\r\nYes, the pose synchronizer moves a transform. That's exactly the transform I'm exposing in this PR.\r\n\r\nWe don't need a second transform for the same controller. We also don't need solvers to be synchronized exactly to the controller's pose."""
2784,217769977,"b""Why add this if we're not using it?"""
2795,217922686,b'for?'
2795,217922714,"b""Oh I see, instead of using the `TrackedObjectType` we just get the controller's handedness. """
2795,217922731,"b""I thought about it.  However, this call is used so infrequently I didn't think we needed to optimise it.\r\nOpen to review of course :D (as per standards)"""
2795,217922735,b'Why not inherit from `BaseInputHandler`?'
2795,217923432,"b'We should probably be checking if the controller is null as well, just in case. Changing to a for loop might make that a bit simpler.'"
2795,217924439,"b'This doubles down on the current requirement that model overrides must have a pose synchronizer on them.\r\n\r\nThis has already been given as feedback that it adds an unnecessary requirement (as in, there are ways to do this without adding a script; see: HTK) to adding arbitrary prefabs as overrides, as well as likely being incompatible once we load platform controller models and create GameObjects for them at runtime, since the core has no knowledge of the concrete pose synchronizers.'"
2795,217926636,"b'How does this ""double down"" on the Solvers needing a Pose Synchoniser on them?  This solution does nothing of the sort.\r\n\r\nThe Current Visualizer uses the pose synchronizer to move and manipulate the Controller model.\r\n\r\nThis PR allows you to access the GameObject the visualizer is using.\r\n\r\nThe Only thing added, is the ability to capture the Visualizer model in the MR  Manager for ANY component to use.  For which the visualiser (only on initialization and new controller detection) interrogates.\r\n\r\nSo, where is your concern?\r\n\r\n'"
2795,218282735,"b'As context: I\'ve only been getting involved with vNext over the last week or two, so I\'m very unfamiliar with how stuff below the UX layer has changed. The discussion around Solvers has been a crash course for me. :)\r\n\r\nI\'m only now starting to better understand the full scope of what controller visualizers are responsible for, and in many ways I think the name ""Visualizer"" has lead me astray on more than one occasion. As someone who hasn\'t been part of building the lower layers of MRTK, I assume a ""Visualizer"" is something that handles the visuals of the thing; meshes, textures, _maybe_ positions. But what I gather from how @SimonDarksideJ , @StephenHodgson , and this code uses the term, it is meant something more like ""Scene Visualizer""; an scene object which is the manifestation of a device in the scene. Something like an avatar. It\'s far more than just the visuals.\r\n\r\nBased on that understanding, I am going to put forward a hypothesis that @SimonDarksideJ and @StephenHodgson expect ControllerVisualizers to eventually have a whole suite of abstracted concepts. Handles, buttons, speaker and joystick locations might all be game object pieces of a ControllerVisualizers. There might be a world where an MRTK user could get a ControllerVisualizer, find a Speaker controller on it, and pass in an audio clip to be played on the controller\'s speaker. All in a cross-platform way that requires no knowledge of what actual hardware is attached. (Maybe not that in particular, but it\'s an example to give a sense of the scope.) \r\n\r\nAgain, extrapolating from what I think ya\'ll are saying: For every Device class, there will be a Scene Visualizer class. Nothing in the User Abstraction Layer should ever talk to a Device. Scene Visualizers are an MRTK Construct (or is it the MRTK Interface Layer? Side Note: What\'s really the difference?), so they\'re cool to talk with the fun Unity toys in User Abstraction Layer. \r\n\r\nOh... I just realized this is MVVM. Scene Visualizers are the View Model. The User Abstraction Layer is like the View. The Model is the Device.\r\n\r\nThis is in contrast to the architecture which I first assumed, which is that the Device layer offers interfaces to abstract things like ""Controllers"", which are free to be used by the User Abstraction Layer. Definitely a simpler architecture, but it has the downside of mingling the work of keeping track of a complex piece of hardware with the work of translating the output of that data into friendly formats. \r\n\r\nA ""Controller"" might be an abstract interface in the MVVM paradigm, but unlike in the simpler architecture, it\'s an abstract interface to be used only by the Scene Visualizer (AKA the View Model). There might be another abstract interface called ""ControllerVisualizer"" for use by things in the User Abstraction Layer (or maybe we would use more descriptive names for both like IControllerDevice and IControllerVisualizer).\r\n\r\nSo anyway, if I have captured the intent, I want to argue that ""Visualizer"" is a very confusing name for us to extend to people using MRTK. It seems too specific to rendering, and not the host of things that a View Model is responsible for doing.'"
2795,218283560,"b""Eric, I think you nailed it right on the head. I'm down to update the terminology to better reflect mvvm."""
2795,218320961,"b'Agree, an interesting way to re""visualize"" the concept to another pattern.\r\n* A Device is the ""Model"" - data\r\n* The DeviceManager/MRManager are the View - connecting a model to a vm\r\n* The scene ""things"" are the view models - providing functionality'"
2795,218545394,"b""Hmmm, maybe I don't understand the role of the DeviceManager/MRManager, @SimonDarksideJ ?\r\n\r\n>  the View - connecting a model to a vm\r\n\r\nIn MVVM, a View doesn't connect a model to a VM, in fact, it may not necessarily even correspond to a specific model of the data (though it does correspond to the *kind* of data that's stored in that model [a birthdate View can't connect to a Model of a audio clip]). The ViewModel is the class responsible for translating things like Unix Time (how it's stored in the model) to a string (what the View wants to display), and the View handles how strings look on the screen. A robust View Model might support several views (VM.TimeAsAudio(), VM.TimeASSentence(), etc). A View just wants a string or a number, some data to bind to. You could rewrite the model from a binary tree into an SQL database into a decryption tool and the View wouldn't need to change at all, it only talks to the ViewModel.\r\n\r\nMy understanding was that the Managers are sort of utility classes that help the Scene Representations stay coordinated/initialized with the device models, and helps the Views (User Abstraction Layer) get references to the right Scene Representations. I could see that described as part of the View Model, or alternatively simply a utility outside the MVVM paradigm (like a DNS service isn't specifically a part of the client-server paradigm, but is a necessary utility for implementing a client-server paradigm)."""
2795,218554775,"b'""GetVisualizerForHand()"" returning a controller is confusing on AR devices that support both hand tracking and motion controllers. This should probably be GetVisualizerForMotionController(), since a device might have both a right hand and a right motion controller at the same time.'"
2795,218556829,"b""I am a little concerned about the assumption that there is only one right handed motion controller at a particular time. There's nothing that prevents a person from connecting multiple bluetooth controllers. I might be a fine choice to just give them the first right handed controller the same way GetComponent<>() just gives the first component it finds, but I wish it was a little more explicit (or we should also offer a GetVisualizersForHand() that returns an array of all of them the same way there is a GetComponents<>()?)"""
2795,218557686,"b""None doesn't seem like a good default here, since it essentially means when it gets added it is in a non-functional state. Head is a better safe default."""
2795,218560177,"b""Doesn't making Awake asychronous violate Unity's order of operations contract?\r\nhttps://docs.unity3d.com/Manual/ExecutionOrder.html\r\n\r\nThough the Awake() docs don't specifically say Awake cannot be async, it does say it can't be a coroutine:\r\nhttps://docs.unity3d.com/ScriptReference/MonoBehaviour.Awake.html\r\n\r\nIt seems safer to stick with the spirit of Awake() and finish up before any Start()s get called. """
2795,218564848,"b""It does't change the timing of the order of operations."""
2795,218564926,"b""But if it is awaited, then yes, it'll delay any method calls after the await."""
2795,218568565,"b""This isn't specific to SolverHandlers, and should be a utility function offered by another class/library. Otherwise we'll write it over and over again. Is there already a good place to move it?"""
2795,218588587,"b'Agreed, I tried to make this is as generic as possible, but I take your point that ""hand"" probably isn\'t the correct verb here.'"
2770,217148607,b'Why remove this and add error for developer to manually add one?'
2770,217152641,"b'A few reasons:\r\n\r\n1. `AddComponent` (called by `EnsureComponent`) cannot be called in `OnValidate`.\r\n2. Why would we potentially add a second, unwanted collider instead of informing the developer to add it correctly?\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/45447268-dc6e7e80-b683-11e8-8f29-9c75831e53fd.png)\r\n'"
2770,217171289,b'good points. '
2770,217466264,b'missing summary'
2770,217466495,b'why this change? Is it now an integer?'
2770,217466604,b'seems like a rather unnecessary formatting change'
2770,217466696,b'seems like a rather unnecessary formatting change'
2770,217466748,b'seems like a rather unnecessary formatting change'
2770,217467656,b'Ported from master. `closestPoint` has always been an integer.\r\n\r\nhttps://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2770/files#diff-6e3711fcf74edcef2478d013e75b49e8R414'
2770,217468153,b'All of these are from porting from master.'
2770,217469126,"b""Okay, well these changes aren't needed. Let's go ahead and revert it to the source truth of mrtk_developement."""
2770,217469424,"b""I don't consider mrtk_development to be the source truth for solvers, as they don't work in their current state."""
2770,217470068,"b""Right, and changing these lines isn't required to get it to work."""
2770,217483685,"b""This makes the code more readable, and since we're in the middle of a port, it seems like the perfect time to polish up. I'm usually pretty against unnecessary code churn, but I don't think this should be reverted."""
2770,217502316,b'Good points from both of you. I unreverted these in my last commit.'
2496,205818390,"b""Since this is being renamed as (as far as I could tell from our conversation yesterday) redone slightly differently than AttachToController, can we change the meta's GUID to not prevent porting the original AttachToContoller over at some point?"""
2496,205819666,"b""I purposefully kept the GUID the same, but I can regenerate it if you'd like."""
2496,205822715,b'Done'
2496,205823300,"b""If we think it'll eventually do everything the original script did, we can keep them. It feels like it's going for a slightly different use case though."""
2496,205830632,b'agreed.'
2496,205830966,"b'Regenerating the guids will help in your ""re-port"". (Although, I think you should address that in the controller viz in #2492)'"
2202,191608205,b'Inspectors are for the SDK level. \r\n\r\nWe will need another custom assembly that targets the sdk layer or rename the SDK.Inspectors to only reference SDK.Input.'
2202,191609019,b'Wouldnt inspectors reference all SDK assemblies?'
2492,205519294,"b""Why protected if you're not making it virtual?\r\n\r\nIf no virtual then we can just make it private."""
2853,221384442,"b'Kinda unclear what ""arr"" is here. Is there a better name that we could use?\r\nAlso would help if all these functions had summary comments.'"
2853,221385961,b'Is this supposed to be commented out?'
2853,221386133,"b""We should probably display differently if we can't edit events. At the very least, there should be a label that they're readonly."""
2853,221692777,"b""Very good call. I'll get that cleaned up."""
2853,221694086,"b""Events are a weird situation, there was talk on an earlier PR about removing UnityEvents and replace them with a pattern being used in other features of MRTK. I haven't got around to looking at that yet. I can definitely clean this up for now."""
2855,221965764,"b""I'd like to get rid of the unity events entirely if possible, but keep the simple editor assignments"""
2855,222152531,"b""We need a way for designers to wire things up in the editor without code. UnityEvents are the only way I know to do this, but I'm open to learning something new :) I looked around the input system and couldn't find anything. Is there something specific I can look at? I could build a better system for handling events for developers that don't need the editor, but only expose UnityEvents in the inspector. If they are not used, will they still cause issues? If they are used, then a designer has used them to wire things up and are opting in."""
2853,222344986,"b""I'd really like to do that if we can. Hopefully I'll get some time to do a deep dive and open a PR with any suggestions there."""
2855,222348499,"b"">We need a way for designers to wire things up in the editor without code. \r\n\r\n100% yes. We will definitely have a system that allows you to do very similar things.\r\n\r\nThere's a few concerns with Unity events:\r\n\r\n- They're really hard to set and use in code in a dynamic way (like the lines below this thread)\r\n- You can only set a single parameter in the editor\r\n- When debugging them, it's hard to trace the full stack through the entire input system\r\n- They have considerable overhead and performance costs\r\n- If their static serialized references get broken they silently fail."""
2855,222354126,b'>We will definitely have a system that allows you to do very similar things.\r\n\r\nIs there an existing task or documentation stating this and its requirements?'
2855,222357125,"b""That's a good point.\r\n\r\n@killerantz have you set up tasks for your interactable features yet for us to discuss requirements and acceptance criteria?"""
2853,222380833,b'I removed the comments in this section of code. Should I resolve this because there are UnityEvent discussions going on elsewhere?'
2853,222382865,"b""The only pattern I've seen is more of a callback system so developers could extend a class and handle events in their specific code. That's definitely doable and a preferred method for doing this in code. There is another thread about using UnityEvents in the inspector only so designers could wire things up if they need to, which is super important because a lot of this is for designers so they can create nice buttons, but they have to be able to test them as well without code. I'll start looking into that. This code is only about what shows up in the inspector, so I will dig into the developer side soon."""
2855,222383877,b'That is a good point. With all the discussions and PRs it would help with prioritizing.'
2855,222384598,"b'@StephenHodgson , I believe @keveleigh was asking for documentation re: ""We will definitely have a system that allows you to do very similar things.""\r\n\r\nAs for this PR, I do not believe we need to wholesale change @killerantz \'s implementation for something that does not yet exist.  We are on a tight schedule and should not be expecting everything to be completely rewritten (not everything needs to be).'"
2855,222399703,"b""I'm not saying we should rewrite things, I'm just saying we should discuss implementations before adding it. \r\n\r\nBesides, from the comment on the line, it seems that it doesn't really work anyway?\r\nSo finding an alternative is preferable. Especially one that takes into account the issues I brought up above."""
2855,222797915,b'Added requirements and acceptance criteria #2607 '
3279,242719441,"b'```suggestion\r\n                SerializedProperty noEasing = settingsItem.FindPropertyRelative(""NoEasing"");\r\n```'"
3279,242719571,b'```suggestion\r\n                noEasing.boolValue = themeBase.NoEasing;\r\n```'
3279,242719949,b'```suggestion\r\n\r\n```'
3279,242720617,b'Can this (and line 952) be removed or uncommented?'
3279,242749240,b'Thanks for catching that.'
3279,242749920,"b""Not sure if there's a suggestion here. I deleted a tab from this area."""
3279,242750019,b'Removed unused commented code.'
3279,242752776,b'Looks like some spaces were added'
2533,207090534,b'summary tag'
2533,207091368,"b""If I add summary tags to the editor classes, it'll be redundant.\r\nI'd essentially be writing out the name of the class.\r\n\r\n```\r\n<summary>\r\nBaseControllerPointer Inspector\r\n<summary>\r\n```"""
2533,207298638,b'fair enough'
2533,207090552,b'summary tag'
2770,217149987,"b""Why do we need this if we're already getting the serialized properties?  I don't see us calling the `base.OnInspectorGUI`"""
2770,217162527,"b'Line 43:\r\nDrawPropertiesExcluding(serializedObject, fieldsToExclude);'"
3148,236822336,"b""Why do we need to specify the observer assembly in the SDK? We shouldn't need to be making direct calls into it (they should all go through the Spatial Awareness component in the Core)."""
4099,279085735,b'I like this new class a lot.'
4099,279105768,b'Thanks @Alexees '
3773,279445503,"b""For little fixes like this will you do a code suggestion? Kurtis has been using them and they're amazing. You can merge fixes directly from the comment."""
4116,279463786,"b""These perf concerns come up often enough that I think a burden-of-proof approach is warranted. Otherwise they just turn into a (usually unresolved) back-and-forth about hypotheticals.\r\n\r\nIf we think this approach will cause a measurable performance problem, great - measure it. Profile and/or stopwatch both approaches and post the results. If the difference is negligible, discussion over. If it isn't, discussion over."""
4116,279475505,"b""Don't misunderstand me - I concede there could be an issue here. My suggestion is more about reducing the mental load of discussing it. Plus for hot code like this we should really be in the habit of profiling PRs anyway."""
4116,279882631,"b'Vector2.one just returns a new Vector2. This is from source decompiled with Resharper:\r\n\r\n```\r\n    /// <summary>\r\n    ///   <para>Shorthand for writing Vector2(1, 1).</para>\r\n    /// </summary>\r\n    public static Vector2 one\r\n    {\r\n      get\r\n      {\r\n        return new Vector2(1f, 1f);\r\n      }\r\n    }\r\n```'"
4116,279902968,"b'The decompiled code is from 2016 so it must be out of date. Directional vectors got changed, too. Pretty strange that a cached field value is consistently slower in the tests.'"
4035,279967238,"b""This ensures that its OnEnable / OnDisable will be called when you're not in playmode, and I'm using those to detect and register instances."""
4148,280485826,"b""It's already guaranteed to get called at least once by later methods so it was overkill."""
4116,280500795,b'Very interesting results. Glad we kept testing.'
4131,280510007,b'I was getting some funky results with spaces. Not sure why.'
4131,281283151,b'Those waits serve no purpose other than to provide visual flow as assets are being created.'
4035,281832399,b'Removed.'
4035,282330059,"b""I'm not loving all the changes being made to player settings here. I'm thinking we should revert all of this + quality settings before merge."""
4035,282649034,b'Restored.'
4264,282973036,"b""It often gets called by inspectors in OnEnable when gui stuff isn't getting rendered."""
4317,283889844,b'Does this affect undo support somehow?'
4270,283894744,b'Nit: The name threw me on this one because it sounds like a generic pointer utility. Maybe GazePointerSpeechStateMachine?'
4270,283895852,"b""Nit: I understand the motivation here but I'll just say it hurts a bit to see the non-universal concepts of near and far pointers hard-coded into the focus provider. I had hoped the pointer mediator could handle the business of near and far pointers somehow. Ah well."""
4311,283897856,"b""Odds are people will be clicking this just to see what happens.\r\n\r\nIf they do this in a project that isn't using the lightweight render pipeline, their shaders will stop working and render as pink, correct?\r\n\r\nWe should confirm their choice with a yes/cancel dialog, and we should add a menu operation that reverses the procedure."""
4035,283950803,"b""It seems to me we could remove it, but I didn't want to take that step until someone else had looked at it."""
4343,284394975,"b""Getting an error here in 2019.1.1, `The name 'set16BitDepthBuffer' does not exist in the current context`"""
4343,284395204,b'Super dee duper nit: Not loving the underscores in the enum values. They look ugly.'
4343,284395599,b'Tangent: we really need to move this sort of thing into an MRTK editor GUI utility.'
4343,284398277,"b""Getting a warning in 2019.1.1,  `The field 'MixedRealityOptimizeWindow.showShaderOptimizations' is assigned but its value is never used`"""
4343,284399732,b'Super nit: This button is over-sized compared to other similar buttons (eg View Lighting Settings)'
4382,284455678,"b""We're using a hashset to avoid duplicates."""
4343,284479630,"b"">It was eye opening to see how many materials in the MRTK are still using Unity's Standard shader\r\n\r\nRight? I couldn't believe it either."""
4353,284863627,"b'Correct, at least not by this method. You can still use:\r\n```\r\nTask UnloadContent(string sceneToUnload);\r\nTask UnloadContent(IEnumerable<string> scenesToUnload);\r\n```'"
4353,284864498,"b'You can\'t check whether a tag is loaded, only a scene. You may load 5 scenes by tag ""foo"", then unload 1 scene by name. At that point I\'m not sure whether to say whether scenes with tag ""foo"" are still loaded. So I left it as an individual check.'"
4424,284900224,"b'Do you think we should make that change in this PR, or in a future PR?'"
4424,284901541,b'Habit. No real reason.'
4424,284903092,"b'>If there are several scenes with MRTK, does this mean that the version of MRTK that will be loaded / initialized is the MRTK from the very first scene?\r\n\r\nYes, the first MRTK instance initialized will remain the active instance until you manually switch it with `MixedRealityToolkit.SetActiveInstance.` All other instances will be inactive.'"
4424,284903723,"b""Methods marked with [TearDown] get called after each test is run so it's destroying scene assets every time."""
4424,284905296,"b""I've created 3 scenes, and for each loaded scene, I'm setting that scene to active and creating an MRTK instance in it. It's to make sure the instances behave as expected across multiple scenes."""
4353,284937970,"b""Yes, you can load as many content scenes as you want. They're unrestricted."""
4353,284938266,"b""Not sure. I'm (roughly) following the OnWillRenderObject pattern but it may not be appropriate here."""
4424,285262024,b'The latest loaded is always the active scene unless you set it manually.'
4353,285673959,"b""Sure. First, unity's basic scene manager is full of [little gotchas](https://issuetracker.unity3d.com/issues/scenemanager-dot-getscenebybuildindex-dot-name-returns-an-empty-string-if-scene-is-not-loaded) that nibble away at productivity and cause hard-to-diagnose bugs. This service protects you from those.\r\n\r\nSecond, keeping a manager scene loaded while you additively load / unload other scenes (which is what both we and Unity recommend you do) can't be done without some sort of scene management system written on top of Unity's basic system. Using our service means you won't have to reinvent that wheel for every project."""
4353,285674218,"b'The Lighting scene is a largely empty scene which controls lighting settings.\r\nAmbient lighting, skybox, sun direction, etc. A default lighting scene is loaded on initialization.\r\nAfter that the active lighting scene may be changed at any time via SetLightingScene.\r\nOnly one lighting scene can ever be loaded at a time.'"
4317,285692330,"b""@keveleigh @StephenHodgson is right this include will definitely break the build. Something must be funky with the automated builds.\r\n\r\nEdit: Just built from Unity. It didn't break. This is a first - looks like we need to comb Unity's change logs because this is not expected behavior."""
4317,285702066,"b'>Do you (or anybody else) have a build break or actionable call stack?\r\n\r\n@keveleigh Nope, looks like a non-issue after all.'"
4435,285743326,b'Turns out this is superfluous because the process will be immediately hijacked by selecting the default config profile.'
4467,285744238,"b""This throws null reference exceptions if there's no MRTK instance in the scene."""
4467,285746088,"b""We may want to go into greater detail in this comment since the problem it's trying to solve isn't obvious. Maybe give a concrete example like the EyeTracking implementation?"""
4467,285747605,"b""I assume we don't include a button to add the instance here because we're waiting on #4435 to be merged."""
4526,287012744,b'Intentional. Folks have complained about the default pointer being too wobbly since it was first introduced. I tweaked some values while I was adjusting the tether. Not worth a separate issue IMO.'
4532,287419161,b'After this PR is merged we should talk about incorporating this into IMixedRealityHands.'
4552,288209677,"b""Super-duper nit: I've never seen this pattern - typically you'd return success value and use an out for Color."""
4618,288720958,"b'I recommend:\r\n\r\n```\r\n#if UNITY_EDITOR\r\n        public static MixedRealityToolkit Instance\r\n        {\r\n            get\r\n            {\r\n                if (activeInstance != null)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                var objects = FindObjectsOfType<MixedRealityToolkit>();\r\n\r\n                switch (objects.Length)\r\n                {\r\n                    case 0:\r\n                        break;\r\n\r\n                    case 1:\r\n                        RegisterInstance(objects[0]);\r\n                        break;\r\n\r\n                    default:\r\n                        foreach (MixedRealityToolkit toolkit in objects)\r\n                        {\r\n                            RegisterInstance(toolkit);\r\n                        }\r\n                        break;\r\n                }\r\n\r\n                return activeInstance;\r\n            }\r\n        }\r\n#else\r\n        public static MixedRealityToolkit Instance => activeInstance;\r\n#endif // UNITY_EDITOR\r\n```\r\n\r\nThis is only a problem in the editor. If we only execute the search in editor, we sidestep complaints about performance.'"
4630,289122082,"b""I assume it's the case that two different projects (with different asset caches) can't connect / sync? May want to call that out explicitly."""
4678,289578943,"b""I'm confused as to why we need a RaycastHit-analogue since it doesn't add anything new. Why not stick with RaycastHits?\r\n\r\nThis struct omits a bunch of useful fields like the collider, the rigidbody. triangle index, texture coords - I use this stuff all the time."""
4107,289579370,"b'The SceneInfo struct stores path and scene name data, so when the object goes missing it can still find it.\r\n\r\nIf you click Search for missing scene does it find one in your project? Or is it totally blown away? I included DefaultManagerScene in the SDK folder but maybe its GUID got omitted.'"
4107,289579561,b'Gods help me I need a spellchecker.'
4107,289580346,b'Same situation. Just restored both. The GUIDs were wrong.'
4678,289583208,"b'>This struct allows for those types to be specified.\r\n\r\nAh that makes sense.\r\n\r\nIn that case, maybe we should go with an extendable struct with a 1:1 parity, including assignment overrides so you can assign all the values from a RaycastHit to a RaycasterHit with one = operation and/or return a RaycastHit as a RaycasterHit.'"
4455,292993662,"b""I've been taking the (possibly reckless) approach of ignoring this possibility until they actually follow through. Because the consequences would be so far-reaching that I see no point in trying to get ahead of cleaning up the rubble."""
4838,293509965,"b""This addresses #4832. I'll remove the comment."""
4455,293890000,"b""Calling MixedRealityPlayspace.Transform automatically generates the transform so it's guaranteed to exist."""
4455,293891378,"b""I think it would remove a lot of red tape to make this a requirement of the service interface. The Main property is simply expected to deliver a camera if the service is enabled. Not enabling the service is equivalent to saying 'I don't want MRTK to create / manage a camera for me.'\r\n\r\nThere are still questions about whether it should be the same camera every time, or how to deal with multiple cameras, or whether the main camera is the one rendering, etc."""
4455,293892336,"b""Let's start an issue where we track these experience requirements and how our current setup breaks them. We can use it to discuss whether custom camera system implementations can accommodate them / whether changes need to be made to the camera cache / playspace."""
4455,293893786,"b""Not sure. This has been the default behavior up to this point so I don't want to change it without a lot of testing. Probably belongs in another PR."""
4455,293893895,b'See below.'
4455,293896348,"b'>Since this class is static, it reads like it should work independent of mrtk playspaces/components.\r\n\r\nI agree - IMO the camera cache class should not exist. The camera system should be the only thing responsible for creating or parenting cameras. Creating the Main property on CameraSystem is a baby step in that direction.\r\n\r\nRemoving CameraCache altogether is beyond the scope of this PR. The goal here is just to ensure that you can additively load multiple cameras / playspace transforms without breaking the system.\r\n\r\nWe should open a proposal for removing CameraCache so we can discuss impact.'"
4455,293897014,"b""Shelving this discussion for now but let's bring it back up in the camera setup issue we open. Finding the 'right' main camera is a big topic."""
4455,293901081,b'Created: #4896'
4455,293905995,"b""Let's discuss in #4896"""
4899,294011212,"b""I don't. I'd prefer if they were private."""
4899,294011296,b'When a class uses the ExecuteAlways attribute Update can get called.'
4899,294444013,"b'My mistake, thanks.'"
4942,294908399,"b""You can do this without allocations: https://docs.unity3d.com/ScriptReference/Physics.OverlapSphereNonAlloc.html\r\n\r\nHave we profiled this stuff for speed etc? I assume it's faster than the alternative but we should check to be sure."""
4942,294917507,"b"">Some commenters said that it gets resized if the buffer is too small, but most say that you will miss potential colliders if the buffer is too small. \r\n\r\nI can test this to confirm but my understanding was that you'll miss colliders. The amount of garbage we'll generate with the non-alloc version is brutal so the overhead of a huge buffer is worth it. Making it a profile setting sounds ideal."""
4455,294921328,"b"">This feels like non-deterministic behavior\r\n\r\nThe first playspace you load is treated as the active playspace. Once that's set, any others that are loaded get disabled. So you should be able to load scenes in any order and reliably predict which playspace will be active.\r\n\r\nIt starts getting weird if you unload the scene with the active playspace. Our workflow recommendations advise against this (keep your manager scene loaded etc) but if you go against that grain, the next active playspace selection will be non-deterministic. We could potentially tie playspace selection to scene build index or something like that, but it's not something I've tried."""
4455,294922955,"b""The camera system doesn't know or care about input, so it felt odd for the camera system to handle the business of managing input-related components. Imagine a dev writing a custom implementation of the camera service - it wouldn't naturally occur to them to include this step when creating their main camera.\r\n\r\n>It also does not feel like the responsibility of the input system to enforce this (read: what if the input system is not being used?).\r\n\r\nThis is true, if the input system isn't being used then the event system is not added. That seemed like a good thing to me, since if I've shut off the input system I assume I'd be doing it to have total control over what input-related components are being added to the scene. Are there are side effects I'm not considering here? Ie does anything wonky happen if the input system is disabled and there's no event system added to the scene?"""
4455,294946941,b'The MRTK instance adds it under `EnsureMixedRealityRequirements`.'
4899,295479655,"b""Yeah it's pretty subjective, I could go either way on this one. I think what tipped the scales here was:\r\n- you can't use RequireComponent because you need a _generic_ collider\r\n- a custom inspector seems like total overkill for such a simple check\r\n- this feels like an issue we should raise in-editor? This is the vaguest criteria."""
4991,295870285,"b""I don't want to over-complicate this, but have you considered using [DisabledScope](https://docs.unity3d.com/ScriptReference/EditorGUI.BeginDisabledGroup.html) instead of `GUI.enabled`? `GUI.enabled` can sometimes have ugly side effects."""
4919,295873750,"b'The scene system will give you a warning, much like the script used to.'"
4919,295916735,"b""Looks like this is a [Unity bug.](https://issuetracker.unity3d.com/issues/sceneasset-references-go-missing-when-upgrading-a-project-from-2018-dot-3-and-earlier-to-2019-dot-1-or-2019-dot-2) I've updated the scene info drawer to search automatically by path if the asset is missing. Hopefully this won't be necessary after we all move to 2019."""
4991,295989320,"b""Yeah, it may not be worth holding up this PR. My impulse is to merge this as-is and clean up GUI.enabled all in one go in a separate PR. But I'll defer to @wiwei and @davidkline-ms."""
4695,296299384,"b'Super-nit:\r\n\r\n```suggestion\r\n            keys.Insert(0, ""(No Selection)"");\r\n```'"
4695,296300188,"b""I was a little confused by this message showing up when I set the speech command to 'No Selection' - it should probably only show up when there are no options."""
4695,296300303,b'>These values only work if they are set before runtime or OnEnable is called. The Interactable does not currently support runtime registering and unregistering.\r\n\r\nWe should put the dropdown in a disabled block during play mode.'
5026,296819433,"b'@wiwei Correct, as long as the field name is the same it will be OK.'"
5022,296821395,b'Naming nit: Consider calling this utility `Services`?\r\n\r\n`Toolkit.MRTKServiceUtils.InputSystem` reads like some kind of hack or workaround.\r\n\r\n`Toolkit.Services.InputSystem` reads more like an officially sanctioned approach.'
4975,296827804,"b""We're already using the bool / out pattern that Unity uses for raycast hits. Shouldn't we just return false if we hit nothing, instead of making hitInfo null?"""
4975,296828062,"b""We were using a struct so that people could use MixedRealityRaycastHit in the same way as RaycastHit, and to make avoiding garbage easier.\r\n\r\nIf it's necessary to tell when a MixedRealityRaycastHit is 'valid' we could add a HitSomething field or a read-only Empty property that returns true if certain values haven't been set. Or we could just rely on the bool / out pattern that's already in place."""
4455,296861631,"b'Good catch, will change.'"
5022,296866107,"b""We're missing references to the scene system and camera system core services."""
5033,296957245,"b'Mainly to make the test easier to eyeball in the editor, but also to give the interactable theme time to translate its target. I can cut it down if we want to keep the tests brief.'"
5033,296957610,"b'The interactable procedurally animates a transform. In every test but this one, the animation works.'"
5034,296958691,"b'This just ensures that the default inspector refreshes every frame. Without it, the visual state of the inspector can sometimes drift out of sync with the object.'"
5034,296958916,"b""Yikes good point. These were designed for use by a system that wouldn't have made this mistake. Good catch."""
5033,296959937,"b""Interactables register themselves in OnEnable if IsGlobal is set to true. By the time I've set IsGlobal to true, OnEnable has already fired. We should probably change this but these lines are necessary until we do."""
5034,297011160,"b""This is due to this being ported from a legacy control. I'll make these fields consistent."""
5033,297253851,"b""Edit: We'll merge as-is for now, then update later once your changes are in."""
5034,297290968,"b""I'll change it to an SDK-appropriate namespace."""
5033,297292765,"b'I think we should open a feature request issue for interactable runtime support in general. Changing themes and changing IsGlobal would both fit there, along with a static utility class for assembling themes.'"
5034,297407095,b'It can be interesting during opening / closing transitions.'
5033,297480647,b'This is a bug I noticed in the editor tests.'
5033,297736881,"b'I wanted to differentiate clearly between play mode setup and TestUtilities.CreateScenes, which is strictly for editor tests.'"
5033,297748931,"b""Unloading is async-only now, and we can't guarantee that it'll be fully unloaded before the next test. It's simpler to just destroy everything in the scene."""
5054,297759949,"b"">A profile is a serialized asset (an instance of a ScriptableObject) which contains properties that configure the initialization and runtime behavior of an MRTK service.\r\n\r\nHow about:\r\n\r\n_Profiles store configuration settings for services. You use them to control which services are run and how those services behave while running. They're stored as [ScriptableObject ](https://docs.unity3d.com/Manual/class-ScriptableObject.html) assets in your project. You can view and edit a profile by selecting it in your project window._\r\n\r\n_[Screenshot of a profile selected in project window / inspector]_"""
5054,297771563,"b"">For example, the MRTK has a camera service, which will apply different properties to the main camera, depending on whether or not the display is transparent (like in the case of a HoloLens) or opaque (like in the case of a VR headset). The camera service is given a [camera profile](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit/Definitions/MixedRealityCameraProfile.cs),\r\nwhich contains those different transparent vs. opaque settings.\r\n\r\nHow about:\r\n\r\n_For example, a [Camera System Profile](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit/Definitions/MixedRealityCameraProfile.cs) stores your main camera's settings for both VR and for HoloLens apps. When the MixedRealityCameraSystem is initialized, it's given a reference to your profile. While running it detects your platform and copies the appropriate settings from your profile to your main camera._\r\n\r\n_[Screenshot of camera profile settings] [Screenshot of main camera's settings]_"""
5054,297771912,b'I would remove this section. It makes profiles sound way more bespoke than they really are.'
5054,297777105,"b"">The MRTK contains a multitude of different services that spin up at runtime and talk with each other (or don't talk with each other), and otherwise have some degree of coordination requirement in their startup, registration, update,\r\nand teardown loops.\r\n\r\nHow about:\r\n\r\n_The MRTK has several core services. Some coordinate with one another; others are independent. All share the same life cycle - startup, registration, update and teardown - and this life cycle stands apart from Unity's MonoBehavior life cycle. [This medium post](https://medium.com/@stephen_hodgson/the-mixed-reality-framework-6fdb5c11feb2) explains some of the background and motivation behind this approach._"""
5054,297780382,"b"">In order to use any of the MRTK functionality, you need to have a MixedRealityToolkit object in the scene graph, whose script handles the initialization, runtime updates, and teardown of all of the\r\nMRTK functionality. This is the object that gets added to the scene when you use the menu option:\r\nMixed Reality Toolkit -> Add to Scene and Configure.\r\n\r\n_To use the toolkit an instance of the MixedRealityToolkit script must be in your scene. To add one use the menu option: Mixed Reality Toolkit -> Add to Scene and Configure. This instance is responsible for registering, updating and tearing down services. It's also where your configuration profile is chosen._\r\n\r\n(Scene graph is not a term people will recognize, just say scene.)"""
4455,297799819,"b""I'm probably being over-cautious. I'll remove that part of the warning message. I've tested parented playspace transforms and they do work."""
5033,298263747,"b""SetupMrtkWithoutGlobalInputHandlers was using editor-only scene creation so it still needs to be modified. Since it starts by initializing an MRTK with a default profile, the 'standard' setup will still work fine. I'll just have it modify the instance created by the standard setup."""
5033,298264803,"b'YES, and fixing that dramatically reduces setup complexity, thanks for calling this out.'"
4455,298318253,"b""That's the point of this PR. Searching by name or parent is no longer reliable when you're dealing with multiple scenes and multiple main cameras."""
4455,298321237,"b""It only parents the main camera if no camera system is found. The camera cache doesn't assume that a main camera delivered by the service belongs under the playspace transform.\r\n\r\nIn our default implementation we do parent the camera under the playspace, but custom implementations may do something different."""
4455,298322580,"b""Since there could be other playspaces loaded when you destroy the active playspace, you don't want to un-parent the camera and leave it hanging. Because another playspace with another main camera may get activated, and then you've got two main cameras to deal with.\r\n\r\nIt's sort of moot because this destroy method never gets used by any of our services or other scripts. I can revert it if it moves this PR along."""
4455,298324135,"b""It works fine when you're only dealing with one scene and one playspace transform. But once you've got multiple scenes with multiple playspace transforms, a MonoBehaviour makes searching for / switching between active playspace transforms a lot simpler. Plus you can display in-editor documentation with a custom inspector so people understand what's going on."""
4455,298356230,"b""You're right, it shouldn't do that unless the camera system is disabled. I'm pushing a change with cleaner logic."""
5125,298672383,"b'This was working fine if only one scene was being added at a time, but it would get confused if multiple scenes were being added. Later parts of the loop would be working off old data.'"
5125,298672605,b'Not in this case but yes that can absolutely be a problem so this technique should be used sparingly.'
5125,298694204,"b""In this case it only marks the profile as dirty and not the scene. It must be because it's a ScriptableObject asset and not an actual prefab."""
4899,299099781,b'No idea. My priority was just to move code out of OnValidate.'
4899,299103958,b'To ensure OnEnable / CheckInitialization is called in edit mode. This is a substitute for OnValidate.'
4899,299104012,"b""This class now uses ExecuteAlways so OnEnable is called in edit mode. Update also gets called, but because it executes more than initialization logic we exit early if we aren't in play mode."""
4899,299105228,"b""In play mode the values being validated here are automatically checked by the methods you use to set them (eg SetLocalForward). So OnValidate is only necessary if you're tweaking the values by hand in the editor."""
4899,299108490,"b""Teleportation and tooltips work - if you know of other components using parabolas let me know and I'll test them as well.\r\n\r\nAlso tested adding Parabolic Teleport Pointer to a fresh game object and everything gets set up correctly."""
5156,299185089,"b""The impact in the editor is really bad, though. We can't count on devs profiling on device to iron out performance, so they'll see the core input system generating tons of garbage and not necessarily understand that it won't follow them onto the device.\r\n\r\nAn alternative is to pass an unformatted message to the assert."""
5156,299185713,b'Is there a way to deliver a read-only collection without garbage / that you can iterate over without an enumerator? I feel like there must be.'
5156,299186025,b'I should probably set this to 0 to make it clear that this value gets blown away by the profile value. I have it set to 128 in the profile by default.\r\n\r\nEdit: Changed to 128.'
5156,299186691,"b""My guess is it will never change but that's not totally settled: #5012 \r\nSo I figured better safe than sorry."""
5156,299186906,b'Good point.'
5156,299187023,b'Does your change avoid a Unity.Object reference null check?'
5156,299193415,b'Tried changing Instances to return an IReadOnlyList and it works great.'
5156,299220153,"b""I think that would be ideal. I'm going to leave that for @julenka to work out since she's most familiar with the state machine."""
5161,299251234,"b""In editor mode yes, because you can't count on Update to be called consistently."""
5161,299251667,"b""Now that you point it out I guess I don't see the harm in changing them too."""
5140,299565153,"b'Nit: For clarity, converting the int value to the actual enum type would be preferred. Same goes for layout type.'"
5162,300025528,"b""@luis-valverde-ms Yes that was a bit hyperbolic, I was just stunned to see those events allocating more than 1k per invocation.\r\n\r\n>I'd like to see what's the allocation footprint of a invoking a UnityEvent in a Master build, that's what I'd use as a reference.\r\n\r\nGood idea, I'll give that a shot and we'll see what happens."""
5268,302634499,"b'Thank you, good catch.'"
5175,303103363,b'Would be nice to capture orthographic cameras as well.'
5175,303103391,b'It would be really nice to pull this from `MixedRealityPreferences` so we could set the output path and screenshot format in the project settings.'
3961,303536331,"b""Correct. As long as it's seen by the camera it'll work."""
3961,303537921,"b""Yes it's just convenience. I found I was writing a lot of boilerplate for simple transitions. With more complex transitions it didn't seem as problematic. I think we can draw the line at 2."""
3961,303541257,b'I think it was a remnant from an earlier version. Removed.'
3961,303541940,"b""That's just because the PR isn't merged. Once it's merged it will work."""
3961,303547539,"b'I\'m not sure what you\'d prefer. This looks weird to me:\r\n\r\n```\r\n await transition.DoSceneTransition\r\n        (\r\n            () => LoadScene(""TestScene1"")\r\n        );\r\n```\r\nAnd I don\'t feel it makes the process clear enough:\r\n```\r\nawait transition.DoSceneTransition (() => LoadScene(""TestScene1""))\r\n```'"
3961,303548542,"b'Edit: Discussed offline, makes sense thanks.'"
3961,303550467,"b""I'm not sure - it was part of a mostly-automated merge to resolve a merge conflict."""
3961,303550995,"b""It should be pretty obvious, they'll either be using Unity's scene manager or their own custom wrapper."""
5562,317732214,"b""@julenka @Cameron-Micka So _technically_ that isn't what OnValidate should be used for. It should only be used to ensure an object's settings are valid, not as an actual update mechanism. If we were going 100% by the (admittedly made-up) book then we'd use either ExecuteAlways or a custom inspector. This doesn't seem like an egregious case though."""
5661,326816363,"b""@cre8ivepark That was originally this case, but this script now works exclusively with the transition service extension.\r\n\r\n@chrisfromwork This script can be used by non-example code.\r\n\r\nThis touches on a larger discussion about how extension services are consumed / how to resolve assembly references between the SDK and extensions. Right now there isn't a clean way for SDK scripts to reference extensions."""
5661,326816610,"b'@cre8ivepark Yes this change was related to the one-eye issue.\r\n\r\n@Cameron-Micka At one point we were looking into using the MRTK standard shader, did that not pan out?'"
5868,326819369,"b""I'm not sure this check is necessary."""
5868,326819921,"b""Since the intention is for this instance to be dynamically instantiated (and then self-destruct) this probably shouldn't be serialized. It might be confusing."""
5868,326820211,"b""Nit: Maybe have a string array of commands to ignore that is populated with 'select' by default?"""
6035,327696024,"b""Instead of removing it why don't we replace it with something more descriptive. The point was to call out that the check really shouldn't be necessary."""
6122,329258258,b'The profile picker is no longer necessary now that we have dropdown menus.'
6122,329258488,"b""Probably a good idea, but my goal was to mess with existing functionality as little as possible. I'd want to handle this in a separate PR that was less performance-focused."""
6122,329262512,"b""This isn't a generic method."""
6137,329753698,"b""@Cameron Good question. It's been tested in Surfaces, but that project has other particle materials. Explicit references unfortunately aren't possible because of the way camera fader classes are used."""
6137,329763094,"b""After discussing with @Cameron-Micka we've updated the transition service profile to include an optional camera fader material. The camera fader interface also takes a reference to the transition service profile when initialized."""
6122,329784557,b'Yes.'
6122,329785134,"b""People are expecting a lengthy load time on asset import / recompile so we're using that as an opportunity to do some painful work."""
6122,329788185,"b""It was a check in the original base class. I've never actually seen this assert fail in the wild. I'm going to remove it."""
6165,330638460,b'It might make sense to limit owners to UnityEngine.Objects instead of generic objects. It would leave the door open for auto-detection of dead owners / auto-release on destroy / stuff like that.'
6183,332145168,b'Good idea.'
6183,332145563,"b""I'll break it up once we know what we're doing with subject tags."""
6183,334149151,"b'Array values, members in a struct, etc.'"
5965,334557514,"b""Nit: Not a fan of `internal` methods - classes even less so. Would like to hear justification if you'll indulge me."""
6310,336100923,b'Making it false by default should be fine since it will be enabled in the prefabs.'
6355,338146999,b'We should move this to ScriptableObjectExtensions.'
6355,338157013,"b"">From what I saw is that If I don't manually instantiate the instance of that scriptable will be shared across all the boundcontrols that link to it, which will result in all of them sharing the same gameobjects created for handles / boxdisplay etc.\r\n\r\nThis looks like it should work. It's an uncommon way to use ScriptableObjects. But I don't think it's improper.\r\n\r\n> it seems people are using them purely as data storage?\r\n\r\nYes, they're typically just a raw data container and _maybe_ some utility functions. Assets like that don't need to be instantiated because there's no danger of cross-instance influence.\r\n\r\nIf we want to do things the 'standard' way then we would expect the BoundsControl instance to store any instance-specific objects and for the scriptable objects to manipulate those objects via static methods. Eg this:\r\n\r\n```\r\n// Game object used to display the box. Parented to the rig root\r\nprivate GameObject boxDisplay;\r\n\r\ninternal void AddBoxDisplay(Transform parent, Vector3 currentBoundsExtents, FlattenModeType flattenAxis)\r\n```\r\n\r\nBecomes this:\r\n\r\n```\r\ninternal static GameObject AddBoxDisplay(BoundsControlBoxDisplay display, Transform parent, Vector3 currentBoundsExtents, FlattenModeType flattenAxis)\r\n```\r\n\r\nWhere the BoundsControl object is expected to keep a reference to boxDisplay and pass it to other methods, eg:\r\n\r\n```       \r\ninternal static void SetHighlighted(GameObject boxDisplay)\r\n```\r\n\r\n@Troy-Ferrell thoughts on this approach?"""
6355,338199003,"b"">I don't see any clear advantage of one over the other. The static version is more verbose I guess\r\n\r\nThe only real advantage is consistency. We'd be matching our config profile pattern, which people are already (sort of) comfortable with."""
6315,341751067,"b"">The impetus of using a data bag was to be more flexible and extensible.\r\n\r\nI like a data bag for this reason. As the toolkit grows there'll be breaking config changes, it's inevitable. Tools like FormallySerializedAs can only do so much. With a data bag we can filter stuff on the way in / out and detect outdated keys, migrate settings, etc. etc."""
6451,341798905,b'```suggestion\r\n```'
6686,349280128,"b""I'm out of my depth with the shader itself but from a code perspective this makes sense to me."""
6767,353298959,"b'@davidkline-ms Sorry, should have made it clear that this _only_ fixes the issue for people who pull from the github repo. My understanding was that we have alternate solutions in the works for other scenarios.'"
6482,357377760,b'Super nit: weird capitalization.\r\n\r\nIf you want to mach property names why not componentName and componentType as well?'
6410,382166556,"b""It shouldn't cause problems but just to be safe I've reverted serialization to 2018."""
6410,382248476,"b""~~These components all inherit from MonoBehaviour (which extends Object) so they should be fine.~~ Never mind, after reading #5981 I'm convinced, will change."""
7561,395827202,b'Arbitrary choice.'
7561,395829295,"b""I left out the number of indicators we include / any details about specific indicators purposefully so when we add more we won't have to update the docs. The demo scene does a better job of documenting them IMO."""
7561,395832157,b'I go back and forth on this. I want to encourage people to implement the interface without relying on a base class because progress indicators can be pretty unique. @keveleigh @julenka Thoughts?'
7561,395883359,"b""I'm going to resolve this for now but I'm open to a future change."""
7613,405604663,"b""No I'm breaking that out into a separate PR which will probably get merged first."""
7613,405605645,"b""We don't create an editor-only assembly for extensions so all our inspectors are wrapped in #if UNITY_EDITOR."""
7613,405610563,"b""I agree it feels weird. This would be less of an issue if we could trust people to view service inspectors because I show the same warning there. But most people only look at the profile so that's our main opportunity to raise a flag.\r\n\r\nMaybe we could create a service attribute calling out required Unity packages?"""
7886,425882330,"b""Not that I can find. Refreshing the asset database is supposed to be enough, but if we don't wait for a few ms the subsequent Ping call behaves really strangely."""
7886,425903548,"b'That did it, thanks Cameron.'"
7886,426034011,b'Done.'
7886,426067424,"b""It works well enough in this case but I _really_ wish I could specify which migration handler type to use when opening the helper. Unfortunately this inspector and the migration helper can't take dependencies on one another."""
7886,426926024,"b""I'm just going to remove the exception handling. It was based on a gut feeling, nothing concrete. And to date I haven't seen any exceptions halt the upgrade process while testing, in this section or others."""
7886,426927573,"b""The EditorCheckForCustomIcon method is only defined in editor, and the CanMigrate method has to return a value, so in the non-editor version I just return false. Seemed like the least contrived way to handle it.\r\n\r\nUsing #if UNITY_EDITOR seems pretty common in these migration handlers but I'm not sure what thinking led that to be the case."""
7906,427008926,"b""I'll add some optional parameters you can use for testing."""
7915,427560341,b'It might be worth testing if the custom icon set was actually generated by the migration tool.'
7951,429428463,"b'```suggestion\r\n                                EditorUtility.DisplayDialog(""Package Required"", ""You need to install the MRTK tools (Microsoft.MixedRealityToolkit.Unity.Tools) package to use the Migration Tool"", ""OK"");\r\n```'"
6925,359340516,"b""It's just to-be-filled.\r\nWe decided to keep the logic of the previous version of Mixed Reality Toolkit so to simplify the porting of existing applications"""
492,98752546,"b""Do you know what the underlying issue is that\xc2\xa0requires waiting a frame?  What makes one frame\xc2\xa0enough time to wait?  It would be\xc2\xa0ideal if there's some other state that could be checked to see if the system is ready\xc2\xa0to successfully perform\xc2\xa0the next step."""
484,98754012,"b""If you remove a user here and continue to increment 'i', you'll skip the next user in the list, right?  Say\xc2\xa0the user at 2 is removed. \xc2\xa0'i' increments to 3, but now the user at\xc2\xa03 is the one that was previously at 4.\r\n\r\nCould fix this by reversing the order the loop is iterated over, and by\xc2\xa0using RemoveAt instead of Remove to avoid a new linear search through the list."""
484,98755163,"b'Is this TODO something that can be addressed as part of this change?  If not, can you elaborate on the intent (""query the underlying session layer"") for\xc2\xa0future readers?'"
484,98755789,"b'As a field and not a property, would prefer this keep its original camel case name.  It appears this field could also be readonly.'"
484,98756017,"b""Let's delete this code permanently (and the commented-out 'bool isLocal = false')"""
484,98756462,b'Nit: could return\xc2\xa0Value'
484,98757841,b'Thanks for helping fill out this documentation!'
484,98759225,"b'Nit: not your change at all, but\xc2\xa0this is probably meant to say ""Other times we must wait for the tracking system to locate the world"" or something along those lines.'"
617,111001603,"b""It doesn't, but the source files in the HoloToolkit repo still have these usings (and I used a script to copy everything over from there to the Unity project).  I can remove those there and then revert this part of the change in HoloToolkit-Unity."""
4229,281854494,"b""Agreed, I'll change the name"""
4229,281858999,"b""I didn't hook up calibration ingestion yet (since that requires a camera providing poses to actually test) but I didn't want to remove ICalibrationData or some of that functionality in CompositionManager since it'll be coming in a PR very soon."""
4229,281859487,"b'OK, removed those!'"
4229,281867351,"b""Calibration used to be a Singleton, but I've refactored this so that the class shouldn't be needed anymore, instead an ICalibrationData will be a required parameter to EnableHolographicCamera"""
4246,282585691,"b'Added ""Seconds"" to the names of both time-related variables to make the code easier to understand'"
4246,282586907,"b""At 60fps video, 6 represents only 100ms of remaining buffer (out of the 300ms worth of frames the compositor buffers, which should remain full as long as the Unity scene is running at 60fps or higher). The value is arbitrary, but we wanted anything out of the ordinary to be immediately flagged as red when working on stage demos so that it's easy to glance at the compositor window and see if something is wrong."""
4246,282589691,b'Good catch!'
4246,282589800,"b'Renamed this to EditorWindowBase, open to other name suggestions'"
4253,282597093,"b'To avoid surprises if content ends up containing Unicode characters, it might be safer to use Encoding.UTF8 for all of these string transfers. UTF8 is the default encoding that BinaryWriter and BinaryReader use for string encoding.'"
4253,282598528,"b'Maybe expand the comment to say ""Poses are sent in the coordinate frame space because the Unity camera position uses prediction""'"
4275,283554637,b'Will definitely get to this but not with this change. Need to get an example calibration from Chris to test ingesting it with CalibrationData'
4275,283554858,"b""For the calibration data to be JSON, it either needs to always be a string, or be stored in the JSON blob as a byte[].  Right now I've opted for a string but we can revisit this later."""
4318,284385345,"b""This is just a first pass for future functionality, the next PR I have pending has this block filled in.\r\n\r\nRE: protobof. This is definitely worth looking into. This PR is just the tip of porting a large amount of currently-working code from an internal repository, but I'll investigate what work would be required to change the networking solution to something like protobuf. We also have some tasks to improve performance of the state synchronization, and this could tie into that work as well."""
4348,284438364,"b""This particular method seems to be working on IL2CPP (x86). I've moved the using into the UNITY_WSA-specific block."""
4386,284495055,"b""I've noticed almost all of the scripts have been re-GUIDed in their meta files. Was that intentional? It may break prefab and scene connections #Resolved"""
4386,284495745,"b'>Broadcaster [](start = 17, length = 11)\r\n\r\nNit: Maybe SynchronizedStateBroadcaster? This name feels really generic as just Broadcaster. #Resolved'"
4386,284496074,"b'>AutomaticallySynchronizeAllGameObjects [](start = 20, length = 38)\r\n\r\nNit: name this AutomaticallyBroadcastAllGameObjects #Resolved'"
4386,284496202,"b"">synchronized [](start = 58, length = 12)\r\n\r\nIn general it might be worth searching for the word 'synchronized' and evaluating whether or not it should be replaced with 'broadcast'. #Resolved"""
4386,284496601,"b'Or maybe BroadcasterNetworkManager, since this class deals with the networking necessary to send ComponentBroadcaster content across the network\r\n\r\n---\r\nIn reply to: [284495745](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4386#discussion_r284495745) [](ancestors = 284495745)'"
4386,284496926,"b'>EnsureSynchronized [](start = 29, length = 18)\r\n\r\nNit: maybe name this EnsureComponentBroadcastersCreated #Resolved'"
4386,284497284,"b'>public enum ComponentBroadcasterChangeType : byte [](start = 4, length = 49)\r\n\r\nThere are several different classes in this file, not all of them related (I think this was just a convenient dumping ground in the past). It would be nice to try to stick to one class per file going forward.'"
4386,284497475,"b'>RemoteType [](start = 67, length = 10)\r\n\r\nPerhaps rename this to ObserverType #Resolved'"
4386,284497929,"b'>return; [](start = 12, length = 7)\r\n\r\nSuper nit: this return is unnecessary #Resolved'"
4386,284499047,"b'>NetworkShaderProperties [](start = 19, length = 23)\r\n\r\nI think a good name for this would be GlobalShaderPropertiesBroadcaster #Resolved'"
4386,284499175,"b'>Observer [](start = 17, length = 8)\r\n\r\nSimilar comment here to Broadcaster: maybe make this ObserverNetworkManager or SynchronizedStateObserver #Resolved'"
4386,284499357,"b'>NetMgr_OnConnected [](start = 49, length = 18)\r\n\r\nNit: NetMgr is a vestige of an old name, this could probably just be OnConnected #Resolved'"
4386,284499454,"b'>connectionManager.DisconnectAll(); [](start = 16, length = 34)\r\n\r\nWe should unsubscribe from the OnConnected, OnReceive, and OnDisconnected events here #Resolved'"
4386,284499891,"b'>CustomNetworkServicesPrefabName [](start = 28, length = 31)\r\n\r\nIn the new naming scheme, maybe this could be called ""CustomBroadcasterServices"" #Resolved'"
4386,284499997,"b'>ComponentBroadcasterServices [](start = 66, length = 28)\r\n\r\nNit: this field should start with a lowercase letter #Resolved'"
4386,284500126,"b'>frameUpdatedComponents [](start = 44, length = 22)\r\n\r\nNit: would name this broadcastComponents, and the property below BroadcastComponents #Resolved'"
4386,284500421,"b'>public List<ComponentBroadcasterDefinition> ComponentBroadcasterDefinitions = new List<ComponentBroadcasterDefinition>(); [](start = 8, length = 121)\r\n\r\nI think this should be a property exposed as an IReadOnlyList<ComponentBroadcasterDefinition>, with a backing field that has the List<ComponentBroadcasterDefinition> that can be mutated by RegisterService #Resolved'"
4386,284502646,"b'>internal class TimeSynchronizer : Singleton<TimeSynchronizer> [](start = 4, length = 61)\r\n\r\nThe usage of this class from HologramSynchronizer should in some way be replaced with CompositionManager.GetHologramTime, which will do the correct time adjustment when compositing from a DSLR camera rig. #Resolved'"
4390,284813578,"b""This won't wait for a frame, it will wait for 1ms, correct? Or will it wait for a full frame because of the synchronization context of being on Unity's main thread? If that's the case, probably worth clarification about why in a comment here."""
4438,284933806,"b'>GetDSLRFeed [](start = 29, length = 11)\r\n\r\nI think I\'d been trying to call this the ""VideoCamera"" elsewhere'"
4438,284934296,"b"">WINDOWS_UWP [](start = 4, length = 11)\r\n\r\nWhen is this defined compared to UNITY_WSA?  The structure of this file actually confuses me a little bit. In the past when I've had an editor and a WSA version of a plugin, the plugin DLLs have had the same name with .meta files that correctly load them in editor versus UWP.  Maybe SpectatorViewPlugin.Editor should just be a different build of SpectatorViewPlugin with appropriate .meta information?"""
4460,285277740,"b'>troublshooting [](start = 35, length = 14)\r\n\r\nTypo: troubleshooting #Resolved'"
4460,285278374,"b'>Localization [](start = 16, length = 12)\r\n\r\nIs this a term commonly used for this? When I hear ""localization"" I immediately think of the process of translating an application\'s text for multiple languages. Maybe calling it SpatialLocalization would help make that more clear? #Resolved'"
4460,285278655,"b'>troublshooting [](start = 35, length = 14)\r\n\r\nTypo: troubleshooting #Resolved'"
4460,285281178,"b'>Deinitialize [](start = 31, length = 12)\r\n\r\nNit: I would call this Uninitialize #Resolved'"
4460,285281403,"b"">private readonly List<Guid> guids = new List<Guid>(); [](start = 8, length = 53)\r\n\r\nI don't see this list actually used anywhere, is it necessary to store the list of Guids? #Resolved"""
4460,285281669,"b'>coordianteDiscovered [](start = 21, length = 20)\r\n\r\ntypo: coordinate #Resolved'"
4460,285281939,"b"">token [](start = 85, length = 5)\r\n\r\nI don't understand the function of this token. Other than debug logging it's not used. What does the token actually represent? #Resolved"""
4460,285282753,"b'>LocalizationMessageHeader [](start = 43, length = 25)\r\n\r\nI love the idea of these message headers being const values somewhere, right now the other ones are all duplicated #Resolved'"
4460,285283129,"b'>coordiante [](start = 40, length = 10)\r\n\r\nTypo: coordinate #Resolved'"
4460,285283498,"b'>field [](start = 75, length = 5)\r\n\r\nNit: filled #Resolved'"
4480,285752549,"b'>string command, SocketEndpoint endpoint [](start = 27, length = 39)\r\n\r\nNit: I would reorder these parameters so the SocketEndpoint is always the first parameter for these 3 functions'"
4480,285752726,"b"">Register [](start = 13, length = 8)\r\n\r\nNit: I'd name these RegisterCommandHandler / UnregisterCommandHandler so that they're a little more clear in context"""
4480,285753137,"b"">StateSynchronizationBroadcaster [](start = 17, length = 31)\r\n\r\nShouldn't this implement ICommandService?"""
4480,285754436,"b'>Singleton<StateSynchronizationBroadcaster> [](start = 51, length = 42)\r\n\r\nWould be nice to have a base class CommandService<T> : Singleton<T> to contain the shared implementation of adding and removing handlers and broadcasting a command to the right ones'"
4480,285755667,"b'>foreach (var handler in allHandlers) [](start = 12, length = 36)\r\n\r\nRight now these command-raising loops are not reentrancy safe. If anyone tries to call Register or Unregister while in an OnConnected/OnDisconnected/HandleCommand, it will modify the collection during enumeration.\r\n\r\nYou could make this safe by either iterating over a copy of the list each time, or by putting a guard against reentrancy so that calls to Register/Unregister perhaps put the new connections into a ""pending changes"" list if iteration is happening.\r\n\r\nThis might be design overkill, but I\'ve been bitten by this particular issue a lot in the past.'"
4480,285755856,b'The StateSynchronizationSceneManager could add itself as a command handler'
4480,285770704,b'Is this implementation coming in a future PR?'
4480,285773980,"b'>SpatialCoordinateSystemMember [](start = 19, length = 29)\r\n\r\nNit: Maybe name this ""SpatialCoordinateSystemParticipant"" or something? It took me a second to parse ""member"" '"
4480,285774429,"b'>h( [](start = 18, length = 2)\r\n\r\nNit: a few of these are missing a space after foreach'"
4480,285775355,"b"">StateSynchronizationBroadcaster.Instance [](start = 16, length = 40)\r\n\r\nThese probably need null checks for cases where there's only one of the two in the scene? Or will they always both be there because of the unified prefab?"""
4462,285804487,"b'Added a warning log when this happens, and put a File.Exists check to avoid those expected exceptions when typing in a file name'"
4462,285805065,b'Tied this to the constant defined for the size of the ArUco marker'
4480,286255732,"b"">private List<ICommandHandler> allHandlers = new List<ICommandHandler>(); [](start = 8, length = 72)\r\n\r\nOne thought I had to make this much more efficient for allocations: use an ImmutableList<ICommandHandler>. The way immutable lists work, they create a new reference to a snapshot of the list when you add or remove items without necessarily needing to perform array allocations or copies. Then the CommandHandlers property could safely return 'allHandlers' without having to worry about collection modification during enumeration."""
4480,286255849,"b""Although I haven't used this in a HoloLens application, not sure which .NET Framework versions support ImmutableList.\r\n\r\n---\r\nIn reply to: [286255732](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4480#discussion_r286255732) [](ancestors = 286255732)"""
4480,286256164,"b'For this class to be thread-safe, any access to those fields should be inside the lock(lockObject) block, including reads from those collections'"
4480,286256863,b'Maybe this method could just be a method on CommandService so that the logic for how to broadcast the command is contained there?'
4595,288718043,"b'I\'ve refactored the ""LocatableDevice"" logic into a separate class for the next review, so the StateSynchronizationBroadcaster could in theory also have a LocatableDevice associated with it.'"
4595,288718420,"b'I created a new base type NetworkManager that StateSynchronizationObserver, StateSynchronizatoinBroadcaster, and HolographicCameraNetworkManager can all inherit from. LocatableDevice is now a separate class that just deals with that aspect.'"
4665,289930332,"b'>gameObject?. [](start = 31, length = 12)\r\n\r\nBecause Unity has an override for Equals and operator== to treat a non-null CLR object that represents a destroyed GameObject/Component as \'null\', the ""?."" and ""??"" operators don\'t work like you\'d expect with Component or GameObject classes (because they explicitly call ReferenceEquals(o, null) and don\'t call through overrides of Equals or operator==).  You instead have to have a traditional null check for GameObjects or Component.'"
4635,292166975,"b""I don't think NetworkManager can't be a singleton, as the HolographicCameraObserver and StateSynchronizationObserver are two NetworkManagers in the same Compositor scene."""
4635,292167763,"b'I think that makes sense. I\'ll have to refactor one place where I\'m intentionally handling the ""Camera"" command in two locations, one to actually read the values and the other to just tick an lastUpdatedTime for connectivity-monitoring purposes'"
4810,292213632,"b""Yes, some active GameObject is necessary for this script to be present on to register the localizer. I'm open to other ideas for how this could work, but this matches the pattern used for ComponentBroadcasterService registration"""
4810,292213927,"b""Yes, this should be going through the SpatialCoordinateService, I had slashed and burned to get things working. I'll be putting this back the way it was, with refactors necessary to actually configure the marker-specific version before localizing"""
4810,292214157,"b""That can't happen today as long as localization is controlled through the SpatialCoordinateSystemManager, which allows only one session to happen at a time"""
4810,292214357,"b""And I think some central service/authority has to be the gatekeeper for how sessions are managed, since a specific SpatialLocalizer won't know about other localizers."""
4810,292215769,"b""I think anchor-persistence is very specific to HoloLens, and probably won't work as-is with mobile. I think that the decision to create/use a WorldAnchor or not should be controlled by the system that initiates localization in the first place. The DSLR compositor can request the connection to use the anchor, but the same app could also have a mobile participant join and that connection should not use an anchor. That's why I added a separate type of command to request using this anchor so that it can be made very specific to the DSLR scenario."""
4810,292216781,"b""The way I thought about this:\r\n1. From within the implementation of a SpatialCoordianteSystem, the identifier has some concrete meaning and concrete type. That type is probably not a string in most cases, and can be strongly-typed.\r\n2. From outside the implementation of a SpatialCoordinateSystem, the identifier is pretty meaningless and probably shouldn't be used for a purpose, unless I'm missing some purpose. It may or may not uniquely identify that coordinate within the same SpatialCoordinateSystem, and it certainly doesn't globally-uniquely identify a coordinate.\r\n\r\nGiven those two things are true, it made more sense to me to make the identifier a concrete value, and make it an optional thing that doesn't necessarily need to be implemented to have an ISpatialCoordinate.\r\n"""
4810,292641792,"b""The state message is checked every frame, but a message is only sent if the status ends up being different from the previous frame. This should only happen when:\r\n1. Tracking is lost or gained\r\n2. The WorldAnchor adjusts the position of a WorldAnchor-based coordinate\r\n3. A new marker detection session starts or ends\r\n\r\nIf there's noise from this message type, we should figure out what's changing on a per-frame basis and try to alleviate it."""
4810,292642653,"b""The reason I made this a MonoBehaviour was to get an update loop so that the state message can be checked every frame. For a WorldAnchor-based coordinate, there's unfortunately no event to indicate that the WorldAnchor needed to modify the transform's position and rotation, so the only way to detect those changes is to poll each frame.\r\n\r\nAs I mentioned in the other comment, the change message is only sent if it's different from the previous frame's message, so that should minimize network traffic from these status updates."""
4810,292643235,"b'I think this would require some registry of available marker detectors, similar to the registry of available SpatialLocalizers. My thought here was that there can be multiple SpatialLocalizers, one per type of marker detector, but the SpatialCoordinateService they use can all be the MarkerDetectorCoordinateService with a different IMarkerDetector in its prefab.'"
4840,293892065,"b""This is used to determine if the device is tracking for the PeerDeviceHasTracking property. I've changed it so that this value can be platform-specific in SendCoordinateStateMessage. Might need help with getting this right for Android"""
4840,293905074,"b""This was for tracking status, that's been changed to have a platform-specific switch."""
4840,293906485,"b'I think I disagree with changing this behavior. I believe passing an invalid value as an argument warrants an exception, whereas returning true/false is an indication of whether or not that particular coordinate exists.'"
4840,293907521,"b'Same as the other comment, I think invalid arguments warrants an exception (as a programmer error) compared to an expected failure to find something.'"
4840,293908262,b'Removed this for now'
8015,438305970,b'Pushed an update to pass the pointerId'
166,74456957,"b""Yes you're right, I messed up the commit - ill fix that shortly thanks!\n"""
3242,240374094,"b""Is there a repo perspective on how we deprecate existing functionality? What's the incentive of keeping this function with no functionality compared to removing it entirely? Is there any value in keeping the functionality while deprecating so that things still work for others?"""
3242,240375113,"b'nit: if these functions still exist, can we keep them at the same line number so that merges are easier for others working in the same code base?'"
3242,240772487,b'sounds good'
3242,240773110,"b""The refactoring makes sense, I am more curious on our public facing story for refactoring/moving code. We can either align on the idea that all existing functions should still exist in some form of the code base to provide information on how to migrate code. We can make previously existing functionality work for multiple releases in order to ease this process. Or we can remove things entirely that do not work anymore. Being new to the project, I'm curious what the consensus was. :)"""
3272,242264479,b'Do we expect that most users will just want to obtain state values on each frame update? Would it be more convenient to use subscriptions/callbacks on value updates here compared to only having a getter?'
3272,242265937,"b'Do we have a perspective on how multiple asynchronous sets should behave? It feels like there is the possibility for a set to fail, which leads me to think this should return a Task < bool > compared to just a Task?'"
3272,242266289,"b'It seems like this GetState may also fail/we may want to think about defining this as some sort of Task<bool, T> compared to only a Task<T>'"
3210,242272515,b'is a short large enough? it may also end up more legible using an unsigned short'
3210,242308106,b'Can we get comments that call out what this position and rotation are relative to?'
3210,242312527,b'nit: It feels like these two lists duplicate logic in the lookup dictionary. I would suggest handing the dictionary around/iterating over the dictionary compared to trying to keep values in these two structures in sync'
3210,242312707,b'Do we want an explicit interface or base class for this AnchorSynchronizer? I feel like there may be interest in building multiple mechanisms for anchor synchronization.'
3210,242314047,b'These shorts feel like they should be private'
3210,242314214,b'Comments on what these positions and angles are relative to would likely prove helpful.'
3210,242317505,"b'Do we need to dynamically monitor changes for AppState UserSlots? This function looks like it is only intended to be called during initialization, but i feel like we may want to create/destroy user anchors as users leave and enter the stage/session?'"
3210,242319872,"b""Is there an observable field in this anchor synchronizer that is intended to be a transform to the shared experience's origin?"""
3210,242327632,"b""What's the expected behavior for these OnStageEnter and OnStageExit calls? Above, they aren't implemented. Is the intent of these methods fulfilled with TransitionIn & TransitionOut?"""
3210,242716858,"b'Is netwonsoft a dependency already existing for the mrtk? If not, are there instructions for how to pick up this dependency/should we start taking this on as a dependency?'"
3210,245781001,b'Are there any known scenarios where we would have a non-static scene? Is there any thought on how content anchored to other users could be updated with this system?'
3210,245781377,b'sounds good'
3272,245784877,"b'Is json capable of serializing any type? if not, we may need to move away from a generic T towards a type that has guaranteed serialization'"
3272,245787005,"b""Would there be interest in also adding a simple persistence story with this simple state example? If we are already serializing states, it seems like a small step to then save them locally. I can understand if that's beyond the scope of this review, but it may make for a good follow up task."""
3272,245788249,"b""Asynchronous/multi-threaded exception handling seems a bit more difficult than assessing a return value. I'd suggest the default value or a valueOnFailure argument compared to throwing."""
3210,245792183,b'Requiring T to be a struct seems limiting. Is there more context around the use of a struct?'
3210,245816442,b'Is there a good example in this review of a preexisting class that populates a state array?'
3210,245816907,b'can we get an overview/timeline for all of these events added to the description?'
3333,246958972,b'do we want issues tracking todos?'
3333,246959224,b'nit: missing tab/spaces'
3334,247243647,"b""Does no code/classes reference this class? Were they already declaring both the previous and new namespace? I'd have expected to see more files updated with this change."""
3383,252090943,"b'I am somewhat new to building Android applications with unity. I will say that file explorers default path when launched from build settings directs to the repo root, which can cause apks to accidentally get placed out of what may be the best practice directory. Are there any expected scenarios for checking in apks?'"
3383,252366523,"b""I've gone ahead and removed this change. We will have to be diligent about not having accidental apk's get checked in by contributors. But I don't have a strong preference and can see how this change was more for my own convenience."""
3383,252366990,"b""It looks like my comments below did not get added to this conversation correctly. I've gone ahead and updated this .gitignore to only check that the various plugin files don't accidentally get checked in."""
3388,254506582,"b""It looks like it still supports multiple hololenses. I've changed things to titles but will update the wording."""
3388,254510944,b'i have made some changes to better address that you can use multiple iphones'
3424,255616323,"b""Is the expectation that T implements IMixedRealitySpatialAwarenessObserver? Or will there be asks for object types that don't directly implement this interface but then resolve correctly in the type check?"""
3272,255648752,"b""good question, this seems like something we could bring up with the working group. That going said, given the time this review has taken, i wouldn't hold off on getting the code into the branch before having a persistence story"""
3477,258209146,"b""Does anyone know what these different | stubs are for? They don't hyperlink to anything so I would probably suggest removing them?"""
3464,258657574,"b""did we get any comments in ship room whether we would support .net? From what i understand newer versions of unity don't provide .net tooling?"""
3490,259060924,b'nit: may be worth adding null check'
3490,259060996,b'nit: may be worth adding null check'
3490,259061073,b'nit: may be worth adding return if null'
3452,259105843,b'i can delete this. its auto generated for android builds if i remember correctly'
3548,261435147,"b'Is there any call out for where these values come from? It seems like there are a variety of enum definitions for these schemas. If gltf documentation exists where we are obtaining these values, it may be worth adding in a summary for the enum.'"
3548,261435355,"b'for a lot of these enums, if they are default values for gtlf, maybe we should link to documentation?'"
3548,261436006,b'There are a lot of public properties with internal setters like this Buffer throughout the schema namespace. Do we want to provide comment summaries for them since they are public?'
3548,261436531,"b""nit: it may make more sense to add this class later so folks don't accidentally see this class name and assume the functionality exists"""
3548,261436764,"b'Similar to schema enums, this seems like another location where a summary call out for the value could help troubleshoot in any future regressions'"
3548,261438527,b'nit: it may be worth adding summaries to these get/sets calling out that a get converts from gltf to unity coordinate space wheras a set converts from unity to gltf'
3548,261439197,b'big fan of these'
3548,261439390,b'probably should check for null here'
3548,261439586,"b""It looks like meshes aren't always explicitly created for the class. Do you know if its possible for this public field to end up null when deserializing? if so, we should probably have a null check for meshes"""
3548,261440135,b'may also need a check for materials being null based on the above comment'
3548,261440348,"b'ImportGltfObjectFromPathAsync can return null, in which case we should probably return prior to any of this logic'"
3548,261440653,"b""may want to make sure that this .gltf extension and the below .glb extension are at the end of the file. I'm not sure if youd ever get handed a .gltf.meta file, but you could have a more robust check here"""
3548,261441203,b'nit: it feels a bit misleading to await a function call if you are attempting to setup true synchronous behavior. I guess in most use cases a developer would want the created gltf object so they will have to await this function call regardless. But it may be worth brainstorming whether theres a friendly synchronous vs asynchronous function definition that we could construct'
3548,261441985,"b""is this a product of the gltf codebase this was based off of? I would prefer not to check in commented out code/we should probably Log warnings here if they aren't supported."""
3548,261442466,"b""nit: I'd prefer if meshPrimitiveAttributes was cleared after looping compared to making these continual remove calls. It's not super intuitive whats going on by just always referencing the 0 index item"""
3548,261442755,"b""we should have some sort of check that we never try and access an item in the meshPrimitiveAttributes that doesn't exist. Even though these items are based on the same logic, some sort of regression could occur where the meshPrimitiveAttributes size isn't equal to the sum of the mesh primitive lengths."""
3548,261442850,"b""if this code isn't used/needed we should remove it"""
3548,261443074,b'its probably worth calling out what chunk0 and chunk1 contain here as well as what influences their sizes in a comment.'
3548,261443387,b'what frequency have you seen this as an issue?'
3548,261444977,b'nit: add constant calling out what 65535 is. If its a max there should be a type max definition that should be used instead.'
3548,261445291,b'it feels like we could iterate over meshPrimitives.Attributes values and stub out whatever custom items are needed (like vertex count case by case). right now whats going on below is legible but makes this function super long'
3548,261445474,b'may need some sort of dictionary accessor for the later assignment'
3548,262654234,"b""I don't have a strong preference on this one, but would want to aid developers if the worth outweighs the maintenance costs. @StephenHodgson what are your thoughts?"""
3548,262685566,b'Should we add a summary since these items have public getters?'
3548,262686735,"b""I would suggest opening an issue/feature request after we get in the bulk gltf importer code. For now, I'd prefer if this class wasn't added so we don't generate any confusion around what we are intending to support. I would appreciate getting a gltf exporter created in the MRTK, but it may be a lower priority than other features/issues."""
3548,262687317,b'yeah that sounds great'
3548,262687831,"b""Yeah, i don't think a failed cast throws here. It may be equivalent to dynamic cast in c++"""
3548,262727315,"b""It's probably a question of how defensive of code we want in the MRTK. It's likely safe to assume that we would never hit a null texture importer here. Considering its used in the editor, a failed import probably doesn't break app scenarios requiring extremely high reliability. Is the main preference to not add a check here around code cleanliness compared to reliability?\r\n\r\nIf we error on the side of code cleanliness, i definitely agree that not having null checks looks better. But if we error on the side of reliability, having a null check here seems like a good plan."""
3548,262729506,b'We may actually benefit from validating the glbData payload/size given this length value.'
3548,262731053,"b""After looking at this longer, it seems like a developer can infer what's contained in the glbData by looking further down in the parsing steps. If this header, chunk, chunk scheme was more complicated it may be worth calling out what all the different components contain, but it seems reasonable that this amount of detail isn't needed."""
3548,262732138,"b""Do we generate a valid game object if extensions are declared before the name? It's probably worthwhile calling something out here that the name isn't always before the extension/developers could encounter issues, but we may as well provide more information/avoid making things look like a bug in the MRTK if they're a bug in the exporter:\r\n\r\n// Assumption: This code assumes that a name is declared before extensions in the glTF schema. This may not work for all exporters. Some may fail to adhere to the glTF schema."""
3548,262741721,b'picking up this fix'
3548,262742097,b'picking up this fix'
3548,262743232,b'picking up this fix'
3548,262745213,"b'Considering that Attributes seems to be a direct deserialized class from the json payload, i can see why this code looks this way/why its a bit harder to change. We may as well keep this this way for now/disregard my suggestions.'"
3548,262746048,b'Are there any specific todo items that you think need to be completed before we check in this review? Do unchecked todos get translated into issues?'
3548,262746238,b'picking up this fix'
3548,262746786,b'picking up this fix\r\n'
3548,262746911,b'picking up this fix'
3548,262747004,b'picking up this fix'
3548,262748424,b'picking up this fix'
3548,262748474,"b""picking up this fix, looks like meshPrimitiveAttributes is declared on the function stack so there's no reason to clear"""
3548,262749347,b'We should probably call out which specific todo items we want before checking in. Items required before checking in we should fix/uncomment. Items not required before checking in I would prefer to have stubbed out with warnings (if at all) calling out specific issues filed for the repo. That way we can get appropriate triaging of work/we have some sort of backlog item documenting that additional work is needed.'
3570,263473184,b'Would we prefer our home page to be the github landing page readme.md compared to getting started with the MRTK?'
3640,266072872,b'Can instance be null?'
3640,266078881,"b""This change makes it possible to have a different class implement IMixedRealityServiceRegistrar. However, it doesn't seem to fix the fundamental problem that a MixedRealityToolkit item needs to exist. Is the point of this review to better abstract service registration? Or are we actually wanting to enable an ability to setup a custom registrar. I would say this review addresses the former. But imo, without doing the deep scrub to remove MixedRealityToolkit static calls for instance, we're still setting up a weird platform architecture."""
3640,266079802,"b""Until Instance is of type IMixedReailtyServiceRegistrar compared to MixedRealityToolkit, I don't think we've actually achieved a componentization story."""
3640,266080959,"b""If thats a second review, I can sign off on this first wave of changes. But if this isn't planned work, Im not sure what we are intending to enable through this interface definition."""
3640,266084503,b'Long term i think we should remove this instance call.'
3610,266089324,b'nit: may be worth defining some specific visual values like this as readonly/consts or at least fields in the class to that they can be consistenlty reused/updated in one location'
3610,266089604,b'nit: remove this additional line'
3610,266090907,"b'Compared to closing this, is there a way to make the existing window receive foreground? If someone has unsaved changes with the window, I imagine theyll currently be lost by this ux choice to close the window?'"
3610,266091278,"b'granted i guess if this call is made populating profiles, this may not be possible. Feel free to share any personal preference on which is more annoying: losing an already open window vs resetting focus to an open window with the wrong profiles :)'"
3610,266091455,b'Nit: capitalize from to stay consistent with other text having first word capitalized.'
3610,266091824,"b'nit: change to ""Can\'t clone profile - no profile is currently set."" ? It could be more clear how to fix things.'"
3640,266115450,"b""Probably should call out what our return behavior is in this summary. I don't have a strong preference on whether or not a duplicate registration returns true or false. But we should be clear to users what the expected behavior is."""
3640,266116355,"b'its probably safer to require explicit platform declarations compared to having a global all. But its kind of tedious making these sorts of updates.\r\n\r\nI would imagine that either choice could cause issues:\r\n1) Without global all - Someone starts using a new platform, a change is required to all services to start supporting said platform \r\n2) With global all - Someone starts using a new platform, first use of specific services results in needing to remove platform support for said service. This removes global all/all additional platforms again start requiring an update to this specific service\r\n\r\nIt kind of seems like 1 is safer even if its more leg work. 2 seems like it would generate more frustration for developers/may generate stranger behaviors when out in the wild.'"
3548,266605229,"b""This is a direct copy from khronos gltf schema. I'd rather stay consistent with their documentation"""
3548,266605256,"b""This is a direct copy from khronos gltf schema. I'd rather stay consistent with their documentation"""
3647,266633797,b'Naive question: Are properties not serialized in unity scenes?'
3548,266659944,b'What motivations are there for not using this?'
3548,266660013,b'What motivations are there for not using this?'
3548,266660402,b'Summary already contains enum definition location. It will be more up to date than comments here.'
3548,266660860,"b""We already call out where these enums are declared. individual enum items don't look to have descriptions from khronos"""
3548,266663933,b'Synced offline: onboard with this naming based on khronos schema declarations'
3548,266663983,b'Synced offline: onboard with this naming based on khronos schema declarations'
3548,266664071,"b""Synced offline: url should be enough, most enums don't have summary stubs from khronos gltf standard schema declaration."""
3548,266664101,"b""Synced offline: url should be enough, most enums don't have summary stubs from khronos gltf standard schema declaration."""
3548,266664185,b'Synced offline: onboard with this naming based on khronos schema declaration'
3548,266664307,"b""Wasn't able to find this on khronos declaration."""
3548,266664374,"b""Individual enum summaries didn't exist"""
3548,266664465,"b""Individual enum declarations didn't exist"""
3548,266664512,"b""Individual enum summaries didn't exist"""
3548,266664581,"b""individual enum declarations didn't exist"""
3548,266664632,"b'synced offline, everyones onboard with this naming.'"
3548,266664775,b'Thanks @keveleigh let us know.'
3548,266664815,b'Will follow up with other comment thread'
3548,266665257,b'keeping consistent with khronos schema declarations'
3658,267116879,b'Was this the only scene that changed? #Closed'
3658,267118065,"b'>SystemType [](start = 36, length = 10)\r\n\r\ndo crefs not need namespaces if said namespaces are included? #Closed'"
3658,267118851,b'well this feels good #Closed'
3658,267119045,"b"">UPhysics [](start = 6, length = 8)\r\n\r\nnit: Might be more clear to call UnityPhysics, but I guess that isn't much better than UnityEngine.Physics #Resolved"""
3658,267119748,"b"">UBoundary [](start = 6, length = 9)\r\n\r\nnit: I think my preference would be to use Unity*, but i'll defer to the group/community's stance on this sort of naming. #Resolved"""
3658,267120422,b'nit: this still feels pretty long. What was the incentive for adding input to wmr specific items? #WontFix'
3658,267121109,"b'I think there are some other examples for Boundary where we have duplicate namespace ending words. It may make more sense to keep UPhysics or move to UnityPhysics over Physics for these sorts of cases.\r\n\r\n---\r\nIn reply to: [267119750](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267119750) [](ancestors = 267119750,267119045)'"
3658,267121827,"b"">MemoryManager [](start = 23, length = 13)\r\n\r\nnit: inline namespace usage for WINDOWS_UWP feels less error prone. If anyone creates a MemoryManager class collisions will only be observed when compiling compared to in the editor. From what i've experienced, most folks don't necessarily compile WINDOWS_UWP when attempting to submit changes, so it may be better to keep the namespace declaration in line as a safeguard for type collisions. #Closed"""
3658,267123833,"b'I understand that this would still need to be behind the WINDOWS_UWP macro. I just think that having the full namespace declared here behind the macro might avoid some collision breaks if someone makes a memorymanager class. that going said, if people consistently compile for visual studio like they should to test changes, its not necessarily an issue. And my preference here is not strong enough to block on checking in. :P\r\n\r\n---\r\nIn reply to: [267123037](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267123037) [](ancestors = 267123037,267121827)'"
3658,267126610,"b'synced offline and now understand that the main concern is that Windows exists in MRTK world. This is fine as is.\r\n\r\n---\r\nIn reply to: [267123833](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3658#discussion_r267123833) [](ancestors = 267123833,267123037,267121827)'"
3557,267506660,b'picking up this fix'
3557,267506871,"b""That going said, do we want nuspec files to match the name of the packages they create? Or do we want nuspec files to be named after the directory they're in?"""
3557,267507700,"b""It looks like we may also want to avoid having a projectUrl. If this repo ever gets deprecated/changes we'll be violating some Microsoft standards."""
3557,267508501,"b""it also looks like owners should be managed via nuget.org and that we shouldn't populate them in the nuspec"""
3557,267510908,b'picking up this change.'
3557,267517122,"b""I've removed the owners tags and am going to reach out to some other folks at Microsoft that can speak to what we do for the projectUrl"""
3557,267517340,"b""Chatted with david, I've removed providers and will now make sure renaming works."""
3557,267530962,"b""i changed project url to aka.ms so that if the repo ever changes it can still be resolved. I'm going to now figure out whether this license suffices."""
3664,267558698,"b""we should probably avoid having *.dll.meta files as well. Nuget for unity won't drop dlls into this path/you'll want to include meta files in the nuget packages that you distribute with your binaries if you ever distribute nuget packages."""
3664,267559044,b'do you think that you will want to track anything in the plugin directory? I know that long term there could be some android components. But it may be worth removing all meta files and the plugins directory itself for this check in.'
3664,267560207,"b'>IPeerImpl [](start = 21, length = 9)\r\n\r\nnit: i think we should have different files for different interfaces.  Also is there a reason for the Impl ending compared to another term that may be more telling to why there are two interfaces?'"
3664,267560624,"b'>Webrtc [](start = 52, length = 6)\r\n\r\nnit: given RTC is an acronym it may be worth capitalizing. After this initial review is checked in it will be difficult to change.'"
3664,267560781,"b'>/* [](start = 12, length = 2)\r\n\r\nnit: fix spacing.'"
3664,267561479,"b""nit: don't check in todos. Open a separate issue for this todo or remove the code/call out what is not implemented with no intention of fixing."""
3664,267561656,"b'>\t\t[T [](start = 0, length = 4)\r\n\r\nnit: convert to spaces'"
3664,267561703,"b'>\t\t[To [](start = 0, length = 5)\r\n\r\nnit: convert to spaces'"
3664,267561802,b'nit: maybe do a code search for your directory to make sure all todos are removed'
3664,267563036,"b"">unsafe [](start = 12, length = 6)\r\n\r\nunsafe code can't always be adopted by community members. Do you know if adding this script to the mrtk and opening one of the mrtk demos requires allowing unsafe code?"""
3664,267563586,"b'>CopyYuvToBuffer [](start = 21, length = 15)\r\n\r\ncan we gets some comments calling out the specific yuv codec that you are iterating over? or at least the ratio of Y:U:V and how pixel values are laced?'"
3664,267564185,b'what does this mean?'
3664,267565345,"b'>genetic [](start = 10, length = 7)\r\n\r\nnit: generic'"
3664,267565852,"b'>libjingle_peerconnection_so [](start = 44, length = 27)\r\n\r\nis this the standard webrtc binary for android? Or is this built out of some other repo?'"
3667,267846462,b'why no get?'
3667,267847025,b'nit: remove unused line'
3667,267847407,"b'we need to stop adding arbitrary todos to the repo. If this has another associated issue it needs to be logged here. Otherwise, if this is never done we really generate confusing content in the code.'"
3667,267849443,"b'>  [](start = 52, length = 1)\r\n\r\nnit: a lot of these new constructors have extra spaces at the end of their lines. Please remove.'"
3667,267850468,"b'>// todo: add profile [](start = 42, length = 20)\r\n\r\nanother todo - add the issue or remove it.'"
3667,267850788,b'remove or add issue'
3667,267850845,b'remove or add issue'
3667,267852063,"b'>Playspace [](start = 23, length = 9)\r\n\r\nmoving to a world where less is needed, i feel like we need to start building logic under the assumption that someone may want to make this ""Playspace"" transform null. We should have appropriate null checks throughout or a default Playspace value other than null if one isn\'t provided.'"
3667,267853992,b'this check is already conducted above.'
3667,267856353,"b""I think we need to support this being null. I think that in many instances there aren't null checks using this Registrar."""
3667,267856555,"b""Similar to the system cache of this, there is no guarantee this won't be null, but it is accessed in many locations under the assumption its never null."""
3667,267864738,"b""if this goes into mrtk_development it shouldn't be considered an incomplete series. Every time someone forks mrtk_development they'll have to pick through these."""
3667,267865290,"b""granted i agree that helpers will eventually be removed. I'd just prefer if you called out this service registration issue in the todos (some formal todo tag thats searchable) so we know what they're for/so a deep search can be done on the last pull request to make sure we've addressed everything."""
3664,267938125,"b""i'd probably opt for not adding the plugins directory here. its definitely worth adding to the description/build instructions/readme that binary files need to go into a plugins directory, but its not super clear where the plugins directory would end up being for most applications. If folks copy your content into their own projects they might already have their own plugins directory that they'd prefer to use. But there's a lot of potential to just end up with an empty folder and extra meta data file."""
3673,268350578,"b""flip faces changes the triangle definitions/indices order. This changes the outward/normal direction which then results in changing which side of the mesh surface is drawn.\r\n\r\nI think that the MRTK standard shader has some different flags that can override/disregard this behavior and draw both sides. But i would also guess this is a direct port from khronos's logic and should be kept"""
3673,268351036,b'agreed that this is confusing. will update to EnsureControllerModel'
3673,268358710,b'changed to SettingContainsParameters'
3673,268361782,b'seems to work. Removes some flags/seems good'
3698,270087329,"b""I'm going to take another pass on PhotoCapture summaries in a seaprate review. To unblock some additional sharing work, I'm going to go ahead and check this in. """
3732,270508873,"b'>MarkerVisualizeCoordinateService [](start = 17, length = 32)\r\n\r\nnit: may be worth naming MarkerVisualizer* compared to MarkerVisualize* #Resolved'"
3732,270509711,"b'>markerBeingVisualized [](start = 34, length = 21)\r\n\r\nnit: maybe just markerCoordinate? #Resolved'"
3732,270511687,"b"">ISpatialCoordinate [](start = 21, length = 18)\r\n\r\nGeneral question based on this marker scenario: Do we want a ISpatialCoordinate to remain static in location? Is that a fundamental truth we want to build against? This marker location seems like a first instance where technically the spatial coordinate moves dynamically with device tracking. If we decide that all spatial coordinates should be considered static, we may need to dynamically create spatial coordinates for markers as devices move around a scene. If we decide that a spatial coordinate isn't static, we may want to add some functionality that allows coordinates to be static/non static. We may also want some functionality to be able to update the coordinate location by its creator? #WontFix"""
3732,270512318,"b"">ISpatialCoordinateService [](start = 41, length = 25)\r\n\r\nnit: you may already be doing this, but with these new crefs we should run docfx generation locally and fix any warnings. I think this resolves correctly, but its worth confirming.\r\n\r\nWhen we move to pr's against mrtk_development, docfx generation should be a build step. But right now there is no build infrastructure for our feature/spectatorView. #WontFix"""
3732,270513167,"b""nit: Let's go ahead and add tooltips to serialized fields on their creation to avoid large painful documentation pushes in the future. :) #Resolved"""
3732,270513214,b'nit: add summary #Resolved'
3732,270513279,b'nit: add summary #Resolved'
3732,270513320,b'nit: tooltip #Resolved'
3732,270513793,"b'>SpatialLocalizer [](start = 17, length = 16)\r\n\r\nnit: may be more appropriate to call this out as a coordinate localizer. There may one day be more elaborate helper classes that uses multiple coordinates for positioning items. #Resolved'"
3732,270514298,b'nit: add summary or inheritdoc #Resolved'
3732,270515114,"b"">OperationCanceledException [](start = 71, length = 26)\r\n\r\nnit: I'm personally curious whether these exceptions resolve correctly with docfx. #WontFix"""
3732,270518326,"b""How hard do we feel a migration to System.Numerics types will be in the future if we only used Unity types for the time being?\r\n\r\nNon-Unity middleware may be unable to play well with .Net types, which I think is the main intended worth in this change. It looks like this namespace exists in .NET 4.0+ frameworks. I don't know if anyone uses .NET frameworks older than 4.0, but I don't think this would resolve correctly in this current form for those that do. I think I have seen some issues related to this based on folks using the HoloToolkit with older Unity/.NET versions. Does the consumer confusion that could be generated with this change outweigh the worth in standardizing on a non-Unity type?\r\n\r\nFrom what I understand the intention here is to build a more universal experience by using .Net types. Although these extension methods are helpful, I think that most Unity developers will still prefer Unity types. I think for the time being I would argue that we should continue to use Unity types. Once we have a stronger perspective on how to build components compatible with Unreal and Unity, it may be a better time to try and introduce these sorts of type conversions.\r\n\r\n #WontFix"""
3732,270580757,"b""I know that Bernadette stated that there may be issues with resolving namespaces with docfx. I know i have hit issues where editor items couldn't resolve classes across asmdefs correctly. It's not a big deal for now but may break the build when opening a pr against mrtk_development"""
3755,271421452,b'Nit: why did we start using underscores? That seems to violate camel casing?'
3755,271422296,b'nit: it feels like a lot of these classes have no consistency in naming conventions. Why are some of these properties capitalized while others are lower case?'
3755,271422767,b'nit: these properties should have summaries'
3755,271422929,b'nit: these serialized fields should have tooltips'
3755,271423185,b'nit: these fields should have summaries'
3755,271423512,b'it seems like this file should be removed/this class serves no purpose'
3755,271423988,b'nit: should have summary'
3755,271424446,"b'nit: ""numTargetsToSelect""'"
3755,271424920,"b'nit: ""numSelectionAttempts""'"
3755,271425000,b'nit: serialized fields should have tooltips'
3755,271425636,b'This needs to be removed.'
3755,271426067,b'Are protected variables shown in inspectors? Why does this have a tooltip?'
3755,271426223,b'remove'
3755,271426406,b'these comments should be changed to summaries'
3755,271426623,"b""This todo doesn't build confidence."""
3755,271426777,b'This file needs a commented code scrub. A lot of things below should be removed'
3755,271427092,"b""nit: this name isn't super intuitive. This type also needs summaries."""
3755,271427146,b'remove'
3755,271427277,b'remove if unneeded'
3755,271427407,b'remove the instantiate.'
3755,271427618,b'remove this code'
3755,271427721,b'remove this code'
3755,271427781,b'remove this code'
3755,271428127,"b""a lot of this eye gaze demo code doesn't seem ready to make it into release"""
3755,271428252,b'nit: tooltip required'
3755,271428329,b'remove'
3755,271428376,b'remove'
3755,271428421,b'remove'
3755,271428516,b'nit: needs summary'
3755,271428605,b'nit: needs tooltip'
3755,271428714,"b'nit: needs summary, unclear why public field has underscore'"
3755,271428896,b'remove since noop'
3755,271429451,b'nit: remove'
3755,271432505,"b""I don't know if I fundamentally agree with this inheritance choice. If windows mixed reality controller is truly for controllers compared to just being a confusing input term, we may long term want to have articulated hands not directly inherit from WindowsMixedRealityController\r\n\r\nCan we get an issue logging this if this review needs to go in without this change?"""
3755,271432879,b'is there an issue tracking this work?'
3755,271433194,b'This should also be encapsulated in the assessment of whether or not hands should directly inherit from controller logic.'
3755,271433776,b'nit: should have summary'
3755,271433856,b'nit: should have summary'
3755,271434112,b'nit: please add summary'
3755,271434431,b'nit: serialized fields should have tooltips'
3755,271435408,"b""This should be fixed. It's unclear what these comments are for. It looks like this is cruft from working in two code bases."""
3755,271435572,"b'This should be removed. It looks like it may be worth doing a scrub for the word ""Internal""'"
3755,271436365,"b""nit: if these items have tooltips they should also have summaries containing the tooltip. I woud guess that tooltips won't get picked up by docfx."""
3755,271454376,b'nit: feels like this should be an invalid argument exception not an argument out of range exception'
3755,271454462,b'nit: missing tooltips'
3755,271454531,b'remove unused code'
3755,271462022,b'Is this still the correct serialized property name? This changed with gltf changes in the public repo.'
3755,271464282,b'This looks like it needs to be changed to an issue number. I think mafinc is an alias.'
3743,271834227,"b'nit: may not need to say ""version"" and could just use HoloLens and HoloLens 2'"
3674,271860123,b'its unclear what this comment is for'
3674,271860186,b'nit: public enums should have summaries.'
3674,271860630,"b""docfx won't pick up single // comments but will pick up /// summaries. Its probably worth having any comment you've added use the three slashes vs two in order to reach teh widest audience."""
3674,271860738,b'nit: serialized fields should have tooltips'
3890,273739412,"b""Conceptually does the MixedRealityToolkit service container require having a MixedRealityPlayspace? Should we actual update components to handle cases where a MixedRealityPlayspace doesn't exist compared to auto generating it?"""
3936,275443540,"b""socketer supports UDP as well as tcp. We could make this class more generic to support both networking protocols. I'll take another look at this."""
3936,275463975,b'for now i think we will keep this as the tcp connection manager. Enabling fragmented udp messages is probably beyond the scope of this review.'
3936,275469045,"b""This needs to be removed or this won't compile for android. I'll update this now."""
3936,275471276,"b""Enqueues should be occurring off the main/UI thread. The Connected/Disconnected callbacks of the socket client aren't driven by an update call. Right now only dequeues should be conducted on the UI thread."""
3937,275477478,"b""Hm, so I think there are two types of marker detectors that will have different usage:\r\n\r\n1) Marker detectors that need to know the exact physical size of the marker\r\n2) Marker detectors that can determine the exact physical size of the marker\r\n\r\nI think we should have clear abstractions for the two types of detectors. I don't think that overloading the same interface with this functionality makes usage very clear. However, it may also be worth moving the setsize function in IMarkerDetector into an IStaticSizeMarkerDetector.cs interface"""
3937,275504724,"b""it currently returns null. This fails fairly frequently and doesn't throw in its current form. \r\n\r\n---\r\nIn reply to: [275477203](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3937#discussion_r275477203) [](ancestors = 275477203)"""
3937,275506070,b'moved to a single interface for usability'
3937,275506251,b'I will address qrcodesmanager changes in a separate review. This code is currently being worked on in a different repo.'
3937,275506340,b'I will address qrcodesmanager changes in a separate review. This code is currently being worked on in a different repo.'
3937,275506366,b'I will address qrcodesmanager changes in a separate review. This code is currently being worked on in a different repo.'
3937,275506390,b'I will address qrcodesmanager changes in a separate review. This code is currently being worked on in a different repo.'
3937,275506801,b'We should address this in the future. Changes will still be needed in this detector class when migrating to the final packaging story of the qrcodesmanager logic.'
3937,275510245,"b""I'm not sure if this comment is at the correct location. Currently this just enables a marker detector consumer to provide a marker id and get back a size. The marker id is currently an integer. It doesn't have a determinable mapping to a guid."""
3937,275522588,b'moved to a single content lock. updated code cleanliness to reflect less locking'
3936,275865776,"b""it looks like this struct isn't used anywhere. I'm going to remove it."""
3936,275869518,b'will add disconnect logic and update the example'
3936,275870196,"b""The worth in changing this doesn't necessarily seem worth the time required for testing. I won't address this for now."""
3936,275870267,"b""The worth in changing this doesn't necessarily seem worth the time required for testing. I won't address this for now."""
3985,275944711,"b""These constructors weren't seeming to work correctly for the concurrent data structures when moving to a monobehaviour. Having now removed the constructor call from the test script, I'll give this another shot."""
3985,281358463,"b""I'm going to remove this inspector behavior for now. We can make it public as needed/when having an inspector element that isn't a TimeSpan is tested."""
4189,281385690,"b'I think that these values are stored in rows compared to columns, so my assumption would be that accessing subsequent x values would have better performance than different y values. That going said, this was just an arbitrary choice. '"
4189,281388775,b' no this should just be zero'
4189,281390871,b'this is old behavior from when i was testing multiple intrinsic calculation processes. For now this should be reduced to one. I likely should remove the num instances for multiple plugin related items.'
4189,281391062,"b""given this is an internal class I likely won't spend a great deal of time on updating this documentation. I don't think I will address this for now."""
4189,281391448,"b'I""ll change it to note. This has to be changed before its used by anyone externally. The shader manager may not exist in the future.'"
4189,281396257,b'I will address this in a future review. We need to start enabling UNITY_WSA as a spectator in some instances in the immediate future.'
4189,281397030,"b'In some instances the same address will reconnect and send payloads before the connection event occurs. To avoid having these messages dropped, I intentionally kept id definitions for the same address.'"
4189,281792967,b'no we should unregister here as well.'
4189,281793371,"b""I'm going to keep this for OnReceive after disconnection. If we unsubscribe we hopefully won't hit this issue, but i have seen some stranger behavior here where messages get received before a reconnect if the client/server disconnects."""
4189,281796177,"b""If i'm interpreting Unity's documentation correctly, GetKeyDown will only get called for the first frame the button is pressed: https://docs.unity3d.com/ScriptReference/Input.GetKeyDown.html\r\n\r\nRight now this code is intended to run in the editor and isn't meant for an end user application. We also don't want this code to take any dependencies on the foundational/core MRTK components, which may be required for the MRTK input abstraction.\r\n\r\nI think for now this change may be beyond the scope of this review. This initial checkin will still need some reworking once qr code detection dlls are available to the public. """
4189,281810807,"b'Hm, subsequent initializations clear the data. We should probably change this to be a static access that has a clear data plugin function compared to muddling the two functionalities. '"
4189,281814873,b'This seems like a good suggestion for the future but it is probably beyond the scope of what i would like to get in with this review.'
4189,281826530,"b'i have it at seconds right now. we can change it to something more robust if needed, but we should now avoid using random indices. '"
4229,281848276,b'nit: we should convert the tabs in these .shader files to spaces.'
4229,281848430,b'nit: add license to top.'
4229,281848483,b'nit: add license to top'
4229,281848506,b'nit: add license'
4229,281848526,b'nit: add license'
4229,281848747,"b'>ShaderManager [](start = 17, length = 13)\r\n\r\nIt feels like it may be more appropriate to call this texture manager'"
4229,281848927,"b""nit: these comments should be changed to three bar summaries. Otherwise this won't resolve with intelisense/documentation generation."""
4229,281849062,b'nit: add license'
4229,281849095,b'nit: add license'
4229,281850005,"b""After thinking about this, we probably don't want these meta files here. I think we do want them checked in near the native binaries in the mixedrealitycompanionkit. But the meta files should be dropped into the project from the nuget package that those binaries could be placed in."""
4229,281850218,"b'>NativeInterface [](start = 24, length = 15)\r\n\r\nit may be worth renaming this UnityCompositorInterface or CompositorInterface'"
4229,281850363,"b"">public [](start = 4, length = 6)\r\n\r\nfor now I would suggest making this an internal class so that we don't need to provide documentation for the public functions below."""
4229,281850498,"b"">NativeInterface [](start = 24, length = 15)\r\n\r\nDoes it feel worth having this class only contain functionality for UNITY_EDITOR compared to always having these dllimports even when the dll's wont exist?"""
4229,281850774,b'nit: all public fields/properties will need summary comments. Fields will also need tool tips when appropriate.'
4229,281851023,b'remove commented out code.'
4229,281851511,"b'>MonoBehaviour [](start = 31, length = 13)\r\n\r\nit seems like we may not need this to be a monobehaviour. I may have missed something, but it seems like this class is only used by the compositionmanager.'"
4229,281852811,"b'>ICalibrationData [](start = 21, length = 16)\r\n\r\nDoes something currently implement this interface that may be missing from this review?'"
4246,282551903,"b""We may want to try and use GUIContent for some of these items so that we can add tooltips:\r\n[https://docs.unity3d.com/ScriptReference/GUIContent.html](https://docs.unity3d.com/ScriptReference/GUIContent.html)\r\n\r\nI'll admit that I haven't tested this myself. :)"""
4253,282636248,"b""i'll add this to both extrinsics/intrinsics"""
4275,283526761,"b'>public [](start = 4, length = 6)\r\n\r\nnit: consider making this internal, otherwise add function summaries.'"
4275,283527340,"b'>HoloLens [](start = 50, length = 8)\r\n\r\nnit: may want to call this hmd compared to hololens?'"
4275,283532311,"b"">string [](start = 22, length = 6)\r\n\r\nI'm not sure that we should assume that calibration data will be handed around in a string. Would it be possible to make this a byte array instead?"""
4275,283533217,"b'>FromJson [](start = 80, length = 8)\r\n\r\nnit: please add this serialization logic as helper functions in the class.'"
4275,283536736,"b'>ICalibrationParser [](start = 21, length = 18)\r\n\r\ndoes this end up as a monobehaviour? it seems like maybe we should add an example using the CalibrationData class that is now in this repo.'"
4275,283541531,"b"">HolographicCameraNetworkListener [](start = 17, length = 32)\r\n\r\nThis isn't really camera specific, we may just want to call this network listener"""
4318,284038880,b'Should this do anything? or is this just a first pass for future functionality?'
4318,284039919,"b'nit: based on other subscriptions, it seems this should have an unsubscription on destroy.'"
4318,284040200,b'nit: make these messages constants at the top of the file.'
4318,284040602,"b'does this need to be in UNITY_WSA? If you switch platforms to UNITY_ANDROID or UNITY_IOS, does this still resolve?'"
4348,284041421,b'Does WindowsRuntime resolve for non UNITY_WSA?'
4386,284496504,"b""It seems like something strange happened here when merging the feature/spectator view payload into my local branch. I'll revert and reattempt this merge when I get back to my desk #Resolved"""
4386,284803315,"b""It seems like we may be working in different unity versions. I've kept the same guids now, but some parameters in the meta file have been removed. For example, theres no longer anything indicating the unity license used."""
4390,284806787,"b'>SpatialAlignment [](start = 33, length = 16)\r\n\r\nwe should add experimental to this namespace for the time being. #Resolved'"
4390,284807019,"b""if nothing is in these directories, they probably aren't worth adding yet.\r\n\r\nIf its felt that these directories need to exist, i would prefer if this were called QRCode compared to QR #Resolved"""
4386,284827639,"b""I'm going to address this in a follow up review to unblock other work by Andrei\r\n\r\n---\r\nIn reply to: [284497284](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4386#discussion_r284497284) [](ancestors = 284497284)"""
4438,285207737,"b""Yeah, i'm not sure the best practice for maintaining this. We could definitely have these plugins built with the same name. But they are built/configured through different visual studio projects because one is uwp friendly while the other is not.\r\n\r\nWith this specific fix, UNITY_WSA seems to be enabled when runniing things in the editor when set to build for UWP. WINDOWS_UWP is only picked up when generating the actual uwp visual studio solution. So, this fix will make it easier to not get dll missing exceptions in the editor based on build configurations. If its felt that we should name these dlls the same, we can do that, but i'd prefer to check this in now and fix that later. It may be more practical to fix the dll naming when all of this code is in a shared repo."""
4457,285274748,b'these need tooltips/summaries\r\n'
4460,285276932,b'nit: remove SerializeField or add tooltip/summary #Resolved'
4460,285282559,"b""I don't know that we should have any plugins directly checked in for this project. We should probably delete this directory and use nuget packages/nuget for unity folders #Resolved"""
4460,285283415,"b'>QR code [](start = 57, length = 7)\r\n\r\nnit: avoid using QR code and instead use marker id #Resolved'"
4460,285283658,"b'>HostCoordinateLocalizationMechanism [](start = 28, length = 35)\r\n\r\nI think that we should stick to broadcaster/observer nomenclature. Host is a new term that just increases the cognitive load/may lead to confusion. #Resolved'"
4460,285284098,"b'Granted, it seems this is mainly a helper class for both types. Would it better if this was split into two classes?\r\n\r\n---\r\nIn reply to: [285283658](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4460#discussion_r285283658) [](ancestors = 285283658)'"
4460,285286249,"b""It's not clear what this is used for. Is the anchor related to an origin? Or a spatial coordinate? #Resolved"""
4460,285287131,"b'>ConnectedObserver [](start = 19, length = 17)\r\n\r\nIt seems like this may be the observer implementation/logic serving the same purpose as LocalizationMechanismBase? Is this something that could inherit from LocalizationMechanismBase for consistentcy in how these localization classes are defined? #WontFix'"
4460,285287926,"b""Regardless of this class's inheritance story. I think that it should probably be located in the StateSynchronization/SpatialLocalization directory. Right now StateSynchronizationObserver takes a direct dependency on this class. I'd prefer if this class wasn't in the demo directory. :)\r\n\r\n---\r\nIn reply to: [285287131](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4460#discussion_r285287131) [](ancestors = 285287131)"""
4464,285665648,"b""FWIW, I'll probably clear out a lot of this logging at some point. But for now this was kind of confusing."""
4464,285666398,b'sounds good.'
4464,285667944,"b""I think for now ill log this warning and return. It may be that we need to process this in the future, but right now it seems like processing old logic isn't necessary."""
4480,285765597,"b'I\'m going to avoid this for now. The ""SYNC"" header is used in different places by different classes. This command registration makes more sense when all headers are managed by the same class.'"
4462,285800973,"b""Is there anything here that would be expected to throw?\r\n\r\nnit: it may be worth logging the exception message if we're expecting to catch anything."""
4462,285801192,b'Should this be configurable in the window based on marker size?'
4462,285801996,"b'>anchorStatusMessage [](start = 27, length = 19)\r\n\r\nit may be worth renaming some of these ""*Anchor*"" items to be spatial coordinates.'"
4480,285805677,b'I will push changes to split back this functionality for ASA and will keep ArUcoMarkerVisualizerSpatialLocalizer still inheriting from SpatialLocalizer.'
4507,286263632,b'It seems like it may be worth exposing these values as serialized fields. Users may always need to manipulate these values and it will become more difficult when binaries are distributed via nuget.'
4438,286575825,"b""Sounds good to me. I'll change this now."""
4544,287121816,b'we could probably require a specific mobile spectator preprocessor directive compared to commenting this out.'
4480,288013487,b'yes this will be updated in the future.'
4480,288025453,"b""System.Collections.Immutable doesn't resolve for me in Unity. For now this probably suffices, but I'll sync with you to better understand whether i can change the .net version to pick up the immutable namespace/classes."""
4595,288657225,"b'>LocatableDeviceNetworkManager [](start = 48, length = 29)\r\n\r\nIs there any instance where a StateSynchronizationBroadcast also needs to report its location?'"
4595,288659053,"b'>LocatableDeviceNetworkManager [](start = 48, length = 29)\r\n\r\nThis adds a concept of spatial alignment to these state synchronization classes. It may make more sense for this localization logic to be handled through its own command registry compared to existing by default.'"
4595,288914870,b'nit: add summary and tooltip for serialized field.'
4595,288914934,b'nit: add summary and tooltip for serialized field.'
4595,288917103,"b'>ArUcoMarkerAnchor [](start = 17, length = 17)\r\n\r\nNothing about this is ArUco specific, we should change this to MarkerAnchor so that it can be used with qr codes/HoloLens 2 as well.'"
4595,288917610,b'nit: needs tooltip'
4595,288917663,b'nit: needs tooltip.'
4595,288917749,"b'>SerializeField [](start = 9, length = 14)\r\n\r\nnit: needs tooltip'"
4635,289374497,"b""I think that we should throw if the specific command already has a handler. Handing the same BinaryReader to different handlers doesn't seem safe."""
4635,289375939,"b"">NetworkManager [](start = 48, length = 14)\r\n\r\nIt's starting to seem like NetworkManager should be its own true singleton. If somehow a StateSynchronizationObserver and StateSynchronizationBroadcaster get enabled, we'll start seeing multiple connections/disconnection events through the CommandRegistry\r\n\r\nIt also seems like the onconnected/ondisconnected calls in both the state synchronization broadcaster and state synchronization observer could be achieved by registering with a network manager singleton."""
4810,292197874,b'Does this require an active game object/enabled script for registration? Is our thought that each type of SpatialLocalizer will have a component enabled in the scene in order for registration to work?\r\n'
4810,292199660,b'it feels like this should be calling the SpatialCoordinateService compared to directly using the marker detector.'
4810,292200238,b'But this organization does raise the question of whether a SpatialLocalizer can support multiple sessions at the same time. Having multiple sessions seems beyond the scope of what we should test for getting things to initially work.\r\n\r\n---\r\nIn reply to: [292199660](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4810#discussion_r292199660) [](ancestors = 292199660)'
4810,292201248,"b'I think we need to check whether a session already exists/is localizing compared to blindly creating them. With how this exists today, you may end up having multiple sessions using the same marker detector, which is going to fail to find all markers with how marker detectors are started/stopped currently.'"
4810,292202333,"b""do we feel coordinate persistence should be at the SpatialCoordinateSystemManager level compared to the participant/localizer/coordinate service? I can see some scenarios where things like ASA may have their own persistence story.\r\n\r\nAlso, with the way this is set up today, I don't know that it will work with android/ios. There is no WorldAnchorStore on iOS/Android if I understand correctly."""
4810,292226505,b'This seems like good reasoning for keeping this persistence logic in the SpatialCoordinateSystemManager.\r\n\r\n---\r\nIn reply to: [292215769](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4810#discussion_r292215769) [](ancestors = 292215769)'
4824,292541835,"b'if these types are now public, we need to add summaries to the public fields/functions.'"
4810,292547197,b'Could this take a reference to the desired marker detector/marker detector type? Then we may be able to use these settings to declare the marker detector compared to just the size and marker id'
4810,292625529,"b""do we need to send this every frame? For keynote monitoring, i get that you may want to know the state of things. but for mobile experiences, this may be added noise on the main user's end when having multiple viewers."""
4810,292628575,"b"">MonoBehaviour [](start = 56, length = 13)\r\n\r\nDoes this really need to be a monobehaviour? Settings transforms for this component every update doesn't really seem needed. Or at least, that wasn't the mechanism for using this transform before and it feels a bit unclear why its needed here now."""
4840,292648730,b'Why is this needed/does it build for ios/android?'
4840,292656410,"b'Although this was written to throw before, if we are already returning a bool, we should probably just return false here.'"
4840,292656581,"b'again, its probably worth returning false if this function is expected to potentially fail.'"
4840,292658182,b'We should hold off on checkthing this in until asa is also insured to work.'
4840,292658705,"b'Can these settings also contain the marker detector type? If these settings could specify what marker detector to use or a game object prefab to create that contains an IMarkerDetector, we may be able to enable more customization?'"
4840,292659231,b'we should also comment this out with nonimplementedexceptions before checking in'
4840,292660526,"b'>RestorePersistentSharedCoordinate [](start = 20, length = 33)\r\n\r\nnit: add this when its used compared to now.'"
4840,292661331,"b'>TryTransformToHostWorldSpace [](start = 20, length = 28)\r\n\r\nWhat facilitates this camera transform now?'"
4840,292662542,b'nit remove'
4840,292662651,"b'nit: remove, readd in separate review compared to having commented out code.'"
4840,292663422,"b'This initially creates a valid debug visual, but we likely also want this debug visual placed correctly after any transform is applied to the camera which may take more work than just using the world position. It may actually need to be world position + accounting for camera offset'"
4840,292667602,b'i think this logic should be kept in the SpatialCoordinateSystemParticipant for consistency.'
4665,293490238,"b""I guess we don't have to. This is my naiveness to Unity showing. I wasn't sure if button components could have null game objects"""
4665,293492470,"b'No, technically this checks ""Has any recording been made"". I think that parenting these buttons to toggle their visibility will improve this experience. But I should probably move away from continually calling this api. Once it\'s true, itll always be true.'"
4665,293495496,"b""scratch that, once its true for android it will always be true. For ios it may vary. I'll update the android recording service to reflect this, but will continual check this value each update"""
4840,293599625,"b"">CreateLocalizationSession [](start = 36, length = 25)\r\n\r\nThis should probably be a TryCreateLocalizationSession. If a session already exists it may not create one. If the settings aren't the expected type it may fail to create one as well."""
4455,293876592,"b'This seems like it may break if someone actively changes the main camera without disabling cameras. Compared to checking isActiveAndEnabled, should we check whether the camera is rendering to the main screen? It seems like we may also want to pick the last camera in the render pass because I think you can have multiple cameras so that the first cameras pass is composited into the second.'"
4455,293877385,"b""we may also need to check things like [https://docs.unity3d.com/ScriptReference/Camera-targetDisplay.html](https://docs.unity3d.com/ScriptReference/Camera-targetDisplay.html)\r\n\r\nIt may be worth avoiding obtaining a camera main for android and ios until we have an understanding of what it should return. I'm not sure how ARCore/ARKit transition from the default unity main camera the tracking camera.\r\n\r\n---\r\nIn reply to: [293876592](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4455#discussion_r293876592) [](ancestors = 293876592)"""
4455,293878221,b'Forcing a camera creation seems like it could really disrupt a scene if somehow this function is called while still configuring a scene. I think it may be better practice to document that the camera may be null.'
4455,293878273,b'nit: remove extra space.'
4455,293879308,"b'In some scenarios, such as spectator view, cameras may already have parent transforms influencing their positions. If a MixedRealityCameraSystem is dynamically added/initialized, I think this will break those experiences.\r\n\r\nIt seems like we actually need to set the mixed reality playspace transform as the parent of any main camera parent transforms. This should probably be a search up the parenting hierarchy compared to a replacement.'"
4455,293879773,"b'If this is WMR SDK specific, this forced position should likely be contained in UNITY_WSA || UNITY_STANDALONE_WINDOWS stub.'"
4455,293880234,"b""Does WMR sdk require the global camera position to be 0,0,0 or the local camera position to be 0,0,0? If we account for any preexisting parent game object transforms, we may need to make sure that the global position is zero here (i'm not sure if setting position sets a true position relative to all parent transforms)."""
4455,293882687,"b""I think we should have a more robust check for this compared to always assuming it will be true. I'm not sure if the long term plans are for MixedRealityCameraSystems to be used only in wmr experiences. We may as well add an additional flag in MixedRealityToolkit to check for this compared to building out the assumption that IsCameraSystemEnabled == Camera exists"""
4455,293889650,"b'>MixedRealityPlayspace [](start = 45, length = 21)\r\n\r\nWe should check whether the playspace exists here, someone may try and use this class without an mrtk configured scene.'"
4455,293890938,"b""Since this class is static, it reads like it should work independent of mrtk playspaces/components. If there is no camera system, whats the fallout of not creating a playspace/not adding the camera to the playspace? It feels like parenting to a playspace should happen in MixedRealityToolkit.CameraSystem.Main's getter compared to in this class.\r\n\r\n---\r\nIn reply to: [293890000](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4455#discussion_r293890000) [](ancestors = 293890000)"""
4455,293895676,b'nit: add summary'
4455,293895745,b'nit: add summary'
4840,294892831,b'this seems beyond whats needed for now.'
5661,326793284,b'nit: use core services'
5661,326793494,"b'this may impact other consumers, is this necessary?'"
5661,326793627,b'nit: this spacing looks wrong'
5661,326793884,b'Is it expected that this will be used by non-example code?'
5661,326794257,b'nit: public functions should have summaries'
5661,326794521,b'nit: scope to private or protected'
5661,326795220,b'nit: add license header. This has recently changed to the following:\r\n\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.'
5661,326795310,"b'nit, this has been reduced:\r\n\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.'"
5661,326795402,b'nit: this has been reduced in length:\r\n\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.'
6040,327235908,"b""I'd suggest adding screen shots for these steps as its a new tool."""
6040,327236022,b'this could also benefit from screen shot'
6040,327236196,"b""when adding screen shot, it is probably worth also calling out the nuget for unity version used in a comment so that there isn't confusion if ui doesn't match exactly"""
6040,327236587,"b""I've had issues whether these header hyperlinks don't resolve correctly for docfx, be sure to run MRTK docfx generation and view the output before committing."""
6040,327236789,b'nit: add screen shot.'
6040,327237014,b'nit: .unitypcakge should be .unitypackage'
6040,327238089,"b'It\'s a bit unclear what the impact of this is on users. Is it something like ""If you are referencing mrtk scripts monobehaviours from a .unitypackage in your project, you may need to resetup these references when moving to nuget.""? I think that this is what the documentation means, but its not super clear.\r\n\r\nAlso, if there is an associated cost like this, we should call out the benefit of doing so. I think you should call out that there will be strong version control with an easier update model. This might be inferred reading through the different items, but it could also be specifically called out.'"
6040,327238282,b'ah the compiled binaries vs source files below is awesome too.'
6040,327238427,"b""I'd call this .unitypackage vs NuGet for more clarity"""
6040,327238583,b'may also be worth calling out which uses source and which uses compiled binaries again in the content below.'
6040,327285461,"b'nit: ""MRTK will have to do re-target it\'s"" may read more easily as ""MRTK will have to re-target it\'s""'"
6785,353478825,b'nit: remove extra space'
6785,353479177,"b'Should this sentence should say ""these folders"" compared to ""this folder""? It seems like you may want copies of all the following items.'"
6785,353479636,"b'talked offline, feel free to ignore'"
6785,353479855,b'Is there any documentation that calls out how to go from .unitypackage to nuget?'
6785,353480036,"b""I wouldn't block on a release for this, but it seems like it may be worth trying to have all documentation possible to move folks towards using nuget."""
6785,353480436,b'nit: provides an experimental setting'
6785,353480511,b'nit: extra s after period'
6785,353481263,b'nit: is it worth referencing an issue here?'
6785,353481543,"b'nit: ""needs to be updated to include a reference to to **UnityEngine.SpatialTracking** needs to be added."" reads somewhat odd. Dropping one of the ""needs"" stubs would probably help with legibility.'"
7508,389886513,b'Did we do a deep scrub for AssetDatabase calls like this?'
252,81692638,"b""I've now added a new section with regards to deploying the HoloLens app using Visual Studio. Is this fine? \n"""
8385,478634902,"b'Hi @vaoliva , could you give me an example use case for such a feature? '"
7141,370794060,b'of course way better! thx for pointing this out and done in new commit'
8267,468804093,"b""Hi Kurtis and Catherine ! Thank you for this point, I didn't try IOS yet, I'm sorry. This is a matter of time, I'm gonna handle this tomorrow (French timing ahah) as soon as possible.\r\nI keep you all in touch!"""
8267,469101566,"b""Hi again, so, I just tried. Unfortunatly ArFoundation can't be use in 1.5 preview 7 versions. I tried preview 6 instead on both and this works fine.\r\nI changed the text."""
547,109471777,"b'I happen to agree with @vbandi here, @NeerajW.  I think the scene as a whole should be included as a tool, not as a test.'"
547,110411369,b'@NeerajW - Any way you can respond here?  I would love to see this move forward into the Toolkit...'
547,110959418,b'@StephenHodgson - Is there any way to ping @NeerajW outside of here to approve this?  Or a way to push this forward?'
547,110964994,b'What is that method for doing so?'
852,132822582,"b'The class name already tells us its the CameraCache, so maybe name this method something like SetMain'"
852,132859618,b'Should the CameraCache be in the HoloToolkit.Unity.Input namespace?  That is where our other camera related stuff lives right now.'
930,136885229,"b'Is there a reason we are leaving this in commented out, vs just deleting the section?'"
930,136889526,"b""But the current implementation is wrong?  Sorry, i don't know much about this stuff."""
930,136889754,"b""Got it.  Seems like maybe we should just put a TODO in on the Transmitter like in the Receiver.  Or put a comment in on why that code is commented out.\r\n\r\nPersonally I'm not a big fan of leaving commented code in.\r\n"""
936,139293791,"b'Should we have a message letting people know what they should be using instead of this Obsolete class, or is this just used internally?'"
1012,141133858,b'Why are we unwrapping this for now?'
1100,144369592,b'Should we be including the IPointerSpecificFocusable in here?  Or do we want that as a separate issue?'
1193,145490788,"b""I don't know, we have not tested everything in the Toolkit against IL2CPP, and I've heard rumor that some things don't pass WACK with IL2CPP, although I don't know for sure because I stay away from it."""
1193,145491023,"b""I don't bump to x64 for Immersive, I build for that in x86 as well"""
1436,154245484,b'Add a note here that mentions that you cannot use voice and dictation at the same time.'
2839,221328042,"b'This should not be in the base, but rather provided by the concrete class'"
2839,221328438,b'Float'
2839,221330186,"b'Need a data field to specify data type (video, audio, etc)'"
5891,322900924,"b""Yes, absolutely! Was a typo. A few lines down (L543) it is correct. That's what you get for once not copy&pasting \xf0\x9f\x98\x85"""
5891,322901646,b'Good idea. I will move this to a helper function.'
5891,322907113,"b'@wiwei  Yeah, currently it is opened twice. I will think about it. Hm...there is already a method for updating the manifest `UpdateAppxManifest` which does a little bit more than just adding capabilities. Is it ok using that method instead of writing another `UpdateManifest` which just updates the capabilities? Or should i extract that capabilites part from `UpdateAppxManifest` and use the following method which i have already added while addressing your previous comment.\r\n```csharp\r\npublic static void AddCapabilities(IBuildInfo buildInfo)\r\n{\r\n    string manifestFilePath = GetManifestFilePath(buildInfo);\r\n    if (manifestFilePath == null)\r\n    {\r\n        throw new FileNotFoundException(""Unable to find manifest file"");\r\n    }\r\n\r\n    var rootElement = XElement.Load(manifestFilePath);\r\n    var uwpBuildInfo = buildInfo as UwpBuildInfo;\r\n\r\n    Debug.Assert(uwpBuildInfo != null);\r\n    if (uwpBuildInfo.GazeInputCapabilityEnabled)\r\n    {\r\n        AddGazeInputCapability(rootElement);\r\n    }\r\n\r\n    if (EditorUserBuildSettings.wsaSubtarget == WSASubtarget.HoloLens)\r\n    {\r\n        if (uwpBuildInfo.ResearchModeCapabilityEnabled)\r\n        {\r\n            AddResearchModeCapability(rootElement);\r\n        }\r\n\r\n        if (EditorUserBuildSettings.wsaGenerateReferenceProjects && uwpBuildInfo.AllowUnsafeCode)\r\n        {\r\n            AllowUnsafeCode(rootElement);\r\n        }\r\n    }\r\n\r\n    rootElement.Save(manifestFilePath);\r\n}\r\n```'"
5891,324774489,"b'Hm...aren\'t there some cases were unsafe code is needed in production? So would it better to say ""..unsafe code. Use this only in production if you know exactly what you are doing.""  \r\nAnd should i delete the 1 in line 107 from ""...mode of HoloLens 1. This...""?'"
5891,324777117,"b""Yeah, this does make absolute sense. I'll condense it down to only DEBUG;"""
5891,324778413,b'yeah...that is some `refactor copy&paste past midnight`-error \xf0\x9f\x98\x85 sorry about that.'
5891,324834217,"b'Ok, will do that. Is there a GitHub repo of your docs validation system? So that i can open an issue...i think official Microsoft classes should be recognized by it.'"
5891,325159551,"b'I added a method like `UpdateAppxManifest` that can be used as a ""central"" point for changes that need to be made in the project file.'"
5891,325169076,"b""I got rid of them and will file an issue at dotnet/docfx that points to this pull request. Let's see what happens ^^"""
5891,325174371,"b'Went with your last suggestion and put ""Be careful using this in production."" at the end of the tooltip.'"
6488,343210730,"b'IMHO i would also just wrap the method `UpdateAssemblyCSharpProject` in `UwpAppxBuildTools.cs` and the call here in a `#if !UNITY_2019_1_OR_NEWER` preprocessor guard. With that and the preprocessor guard in the layout, the in Untiy 2019 useless code path would just be gone.'"
1083,143139717,"b""I read the documentation, but I didn't understand when to use these methods. Thanks for the example."""
1083,143145820,"b'The logic is duplicated code. It is both in the test method and in the `WorldAnchorManager`, which is kind of bad. Do you think I should create a `WorldAnchorUtilities` in the main folder? This class would have only one method as of now... Probably it is better, if I take the method into the `WorldAnchorManager` directly and make it `public static`. I think, I was just afraid of changing too much \xf0\x9f\x91\x8e .'"
1407,152108120,"b'Can you further explain what snapping means? (I think you mean as in Snapshot) After snapped, it will be a stabilization branch? Will there be an other branch for non-stable development?'"
1436,153083290,"b'Can you explain here, what is the ""Hold"" gesture? Or put a link to a description? And maybe a reference to where I can find related informations, like what to do next, when I have detected the Hold gesture. Is this related to the `IManipulationHandler`?'"
1326,151289413,"b""Mixed Reality won't work in remote desktop or VM contexts, so you can probably edit down this comment a little to avoid confusion (still possible to disable all of the audio endpoints though)"""
187,76678838,"b""There is an open request to change 'DrawVisualMeshes' to 'DrawSurfaces', so I would not try matching the SpatialMappingManager. Also, since this flag controls rendering of the 'processed' meshes as opposed to the 'raw' meshes, the name is more accurate. I would probably leave it singular here, since it matches the class name.\n"""
26,62266572,"b""To me it seems like the Singleton nicety is it's wrapping of the SpeechSynthesizer. Is there any reason not to simply drop the AudioSource from the class and require one to be passed in to the Speak method?\n"""
26,62389195,"b""Spatial sound is extremely valuable to the user experience with the device. So as soon as I want two speakers in different locations the singleton falls down ( or is at the very least confusing). An example - imagine this Holoportation idea ( https://www.youtube.com/watch?v=7d59O6cfaM0) where you could have more than two people using text to speech ( for accessibility reasons maybe).Or even text driven AI bots in multiple locations. I agree that maybe it's not the biggest use case, but I think it's extremely likely you'd want spatial text-to-speech.\n"""
26,62602895,"b'Option 1: \xf0\x9f\x91\x8d \n\nI think we should reserve using Singleton to the cases where more than one instance is problematic, and avoid using it as a means to simplify a single use case.\n'"
38,63634281,b'Are you trying to throw this out of the method or just use this as a means to log the error in your catch below?\n'
38,63634513,b'Should this and bytesToInt be Pascal case instead of Camel?\n'
38,63634574,b'Are we using regions in the Toolkit?\n'
38,63634957,"b""Out of curiosity, what does supporting stereo look like? Merging the two channel data buffers you're building above somehow?\n"""
38,63772751,"b""Ah, that makes more sense. Maybe in this case it'd be better then to simplify this code, dropping the unnecessary conversion and storage of two channels, and put it directly in the TextToSpeechManager? Something called Wav.cs seems like it should be flushed out and generally usable.\n\nThere's another comment in the code where it justifies it's assumption of only 1 or 2 channels with a statement about the likelihood it'd have more (line 51). I have issues with that too as the code looks like it'll create the wrong sample list in those cases - better to detect and throw an exception or something.\n"""
46,63821919,"b""Looks like you've introduced a block copy here. I like the List better than the Queue, but think you should use a wrapping write index value to avoid this. You'd have to fix up the loop and random access of the last element below, but it'd mean a change with only gains.\n"""
46,63822028,"b'On a side note, with this implementation StoredStabilitySamples can never be reduced below stabilitySamples.Count effectively. Using a while with +1 test instead of an if would resolve this.\n'"
47,63930512,"b""I wonder about moving this functionality out to it's own utility class. I think it'd make this class a little cleaner and more concise, and the the remote desktop check seems generally useful!\n"""
51,64947616,"b'In the project settings file it is stored as ""HoloLens"". That will display in the UI as ""Windows Holographic"".\n'"
52,64970725,"b'Note, I scoured the internet looking for standard output folders for builds and found that ""Build"" and ""Builds"" were by far the most common. I think we should adhere to that and so avoided the already supported Bin folder.\n'"
52,65439177,b'As in Builds/App? I was trying to support a more general usage that would distinguish the HoloLens from other Builds that people might be doing for their unity project.\n'
52,65439217,b'I like that!\n'
52,65439443,"b""The BuildPipeline.BuildPlayer unity command is doing the platform switch, and leaving it in the BuildTarget after complete so I'm just setting it back. If you think it'd be more clear to be explicit I can do that, though it might be confusing when someone removes the explicit line and things still change.\n"""
52,65440159,"b""This query includes the set of paths for the set of enabled scenes in the build settings. It doesn't limit it to a single scene.\n"""
52,65440735,"b""If executed from the menu this logs to the Unity console. If executed from the command line users can direct the logs to any file they desire via Unity's -logFile command. See here: https://docs.unity3d.com/Manual/CommandLineArguments.html\n"""
48,66349351,"b""I think I'm a little confused - Doesn't BitConverter.ToInt32 take an offset as well?\n\nLooking here: https://msdn.microsoft.com/en-us/library/teew1ee0(v=vs.80).aspx\n"""
69,68143606,b'An alternate solution would be a seperate small class which you register with the KeywordManager that uses the HitInfo available on the GazeManager to find the current gaze intersected object.\n'
69,68146106,"b""A thought - maybe not as bad of a leak, but doesn't SendMessageToFocusedObject leak the abstraction similarly? It requires that GazeManager know the focused object and that the object it tracks is capable of receiving Unity style messages. This feels like the same contract as exposing the data through a readonly property. Though less powerful ultimately.\n"""
69,68146521,"b""But to implement the functionality on the focused object you'd have to know that SendMessage was used correct?\n"""
69,68149467,b'I meant your specific use case here - it relies on knowing that SendMessage is used.\n'
69,68150279,"b""@NeerajW I think FocusedObjectMessageSender is great for the application level, but agree that it's overkill for the toolkit given it's simplicity.\n"""
69,68150951,b'My vote: Only the change to expose FocusedObject added to the HoloToolkit-Unity.\nMy suggestion: Use the class you wrote for your application.\n\n=)\n'
69,68430145,"b""Agreed, a lot of these seem like they should just be elements of the scene and don't require prefabs.\n"""
70,68430477,"b'@angelaHillier addressed this idea in the issue here: #58 \n\n> I considered making a prefab that has these materials pre-wired, but it did not offer as much flexibility as keeping the components separate...\n'"
72,68458059,b'Ultimately I like that any number of things can trigger this. Or are you asking how this will be configured in the test scene?\n'
72,68458220,"b""How do we feel about keeping the project up to date with the Unity drops available? I'm all for anything that pushes this number higher, but it should probably be in a separate pull right?\n"""
72,68458406,b'Not sure how this fits in here.\n'
72,68459663,"b""I think the real value in FocusedObjectMessageSender is in it's place alongside the SelectedObjectMessageSender. And the value of both is that they provide a clear paradigm for dealing with the issue of dynamic objects, gaze, and the immutable nature of the KeywordManager. I really suspect that like @dbouianov others will have the same issue and I do like that the toolkit takes a stance on how to solve this.\n\nUltimately though this goes back to how we're treating this project. Seems like there's a mix of focus on creating functionality for developers to leverage and focus on instructing or educating developers on how they might do something. This falls into the latter.\n"""
72,68473931,"b""I think even if the objects are placed directly in the scene we're still dynamically choosing which one to send the message to based on gaze. I believe this is a clear enough demonstration without needing to actually dynamically add the objects to the scene and removing this would make the pull request a lot simpler.\n"""
72,68477530,"b""Ah, I think the real underlying issue isn't whether the objects were created dynamically, but instead the current inability to dynamically decide what object to invoke from a voice command. I believe solving the latter solves the former and demonstrating it with placed objects would be fine.\n\nI believe as you do that we're likely to add more kinds of these helper strategies for command forwarding and think that by keeping the tests to the minimum required for a solution we'll have less to manage going forward. If others find value in the dynamic allocation I'm OK with keeping it, I just don't think it's necessary.\n"""
83,69040175,"b""These should be PascalCase if they're to be public, e.g. ControlSlowSpeed, ControlMode.\n"""
83,69040657,b'Nice! =)\n'
83,69041004,"b""Maybe something like 'OnTap' would be a more clear name here? My real qualm is that this doesn't just send any message to the focused object it sends 'OnSelect' to the focused object. I think 'OnTap' makes it clear that the method should be called whenever the GestureManager recognizes a tap.\n"""
83,69075274,b'PascalCase here as well.\n'
83,69236864,"b""It does look like there's quite the mix of being included in a namespace and not. My vote is that we should unless there's a compelling reason not to. Maybe hold off on it for  now and make an issue pointing out this inconsistency. That way if there's some reason for it there's a place for that to come up.\n"""
83,69237665,"b'I think you need the same control mode checks for the ""Vertical"" axis. Testing movement in the ManualCameraControl scene, the arrow keys work correctly, but WASD controls behave as they used to. I believe they should both respect the control mode.\n'"
83,69486836,"b""I'm thinking that ControlMode makes more sense inside the class, but also that yes, we should move the class inside the standard namespace.\n"""
87,69491975,"b""Curious about the 'k' prefix on these. @NeerajW Do we have a coding standard? Or just shooting for consistency within a file?\n"""
93,69492658,"b""These should be PascalCase if they're public. Also, maybe we should differentiate them analogous to 'lookHorizontal', e.g. 'moveHorizontal' here.\n"""
87,69666952,"b""Acts funky if no solution exists. Maybe disable in that case? Current Build menu asks if you'd like to build one in this case.\n"""
87,69753961,"b'Win32Exception: The system cannot find the file specified.\n\nSystem.Diagnostics.Process.Start_shell (System.Diagnostics.ProcessStartInfo startInfo, System.Diagnostics.Process process)\nSystem.Diagnostics.Process.Start_common (System.Diagnostics.ProcessStartInfo startInfo, System.Diagnostics.Process process)\nSystem.Diagnostics.Process.Start (System.Diagnostics.ProcessStartInfo startInfo)\nSystem.Diagnostics.Process.Start (System.String fileName)\nHoloToolkit.Unity.BuildDeployWindow.OnGUI () (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:128)\nSystem.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at /Users/builduser/buildslave/mono/build/mcs/class/corlib/System.Reflection/MonoMethod.cs:222)\n'"
87,69796118,"b'Maybe something like the below from the old BuildMenu? Might be more clear than an error in the logs.\n\n`bool buildNow = EditorUtility.DisplayDialog(""Solution Not Found"", ""We couldn\'t find the solution. Would you like to Build?"", ""Yes, Build"", ""No"");`\n\nAlternatively you could check for the filepath before adding the button and disable the button if it doesn\'t exist.\n'"
96,70126816,"b""Looking at the scene it seems it's purpose is to test the StablizationPlaneModifier, which is under Utilities. In which case I think the Utilities\\Tests folder makes sense.\n"""
96,70136711,"b""Assets/HoloToolkit/Utilities/Scripts/StabilizationPlaneModifier.cs(92,19): warning CS0219: The variable `lastHitDistance' is assigned but its value is never used\n"""
96,70139305,"b""I'll believe it when I see it. ;)\n"""
109,70300532,"b""I'd be in favor of deleting this and the one below.\n"""
96,70302696,"b""This extra state seems redundant and slightly dangerous. Isn't the `StabilizationPlaneModifier.Instance == null` test enough?\n"""
96,70303063,"b'Nit: Non of the projects other const values use CAPS, maybe we should avoid it here?\n'"
96,70303637,b'Nit: Use planePosition here to mirror behavior of other implementations.\n'
96,70304097,b'Why not use Time.deltaTime here to calculate the true velocity?\n'
96,70304650,"b""Because velocity is only sometimes updated, and tracking can be controlled externally, there are cases where the previousPosition wouldn't represent last frames position, but instead the last frame that tracking was enabled. Maybe make TrackVelocity a property and reset previousPosition when going false->true.\n"""
96,70304883,"b'If this only tracks TargetOverride\'s last position, we should make it\'s name more clear - ""targetOverridePreviousPosition"" or analagous.\n'"
96,70305662,"b""If you `PickNewTarget` faster than `TextDisplayTime` you'll get overlapping set/clears of the text because you'll spawn multiple coroutines of `DisplayForSeconds` and updated text won't last the full `TextDisplayTime`.\n"""
96,70306106,b'@NeerajW do you have a sense of our standard here? Does it differ from the private/public camelCase/PascalCase standard?\n'
96,70353394,"b""I could understand calculating velocities across different time intervals (e.g. to capture a smoothed velocity), but I don't get why you'd want to pass in an inaccurate velocity as would be the case if the app here wasn't running at FOCUS_POINT_FRAMERATE. Any docs/forums point you in this direction? Or just general experience?\n"""
96,70356016,"b""This is looking better, but now I realize you've got the same issue with late sets of the `TargetOverride`. If that variable changes we should clear the previous position as well.\n"""
96,70356163,b'Maybe a more specific name? `displayForSecondsCoroutine`?\n'
96,70360404,"b'If someone sets `TargetOverride = null` after having set it to a valid Transform, this will throw an exception.\n'"
96,70360478,"b""Probably because I didn't put it on an affected line. =(\n"""
109,70661642,"b'Whoops, totally missed that part of the comment! I think this is the only way.\n'"
117,70727842,b'PascalCase for public members please.\n'
117,71203028,b'PascalCase for public members please.\n'
130,71758392,b'Whoops! Nice catch.\n'
130,71764580,"b""I feel really strange about us adding Microsoft copyright to files in public repos. Can Microsoft really claim copyright over files that were produced by the public? In this case I wrote this on my free time, does Microsoft own that copyright? If I wasn't a Microsoft employee would Microsoft claim copyright on the file?\n"""
130,71768390,"b""I'm no lawyer either, but Microsoft has a pretty good moonlighting program and I didn't write this particular code while at work, but at home while developing my own stuff. Not sure about the copyright either way. Mostly I'm concerned with spamming the copyright around as this community grows and outside contributions increase.\n\nThis concern shouldn't hold up this PR.\n"""
134,71993518,"b""I also don't think that this option should be a part of this process since the generation of reference projects isn't a required or recommended setup step for the HoloLens. Developers should change this option via the Build Settings window to suit their needs. Please remove this part.\n"""
134,72565735,"b'What if the tooling replaced the main camera with the prefab when this ran? Could keep the same transform as the previous camera, but first setup would have things that just worked with like two clicks.\n'"
134,72722515,"b""I agree that many developers will want to enable this change to make development easier, but it's not a HoloLens configuration property and so we should leave it untouched in this code.\n"""
134,72722672,"b""I think you're right regarding the swap with the prefab. I think applying the camera changes via the configure menu makes more sense.\n"""
140,73040584,b'Will do!\n'
145,73240962,"b""I was thinking the same thing, but wasn't sure how ActiveEvent presented itself in the editor. If it's configurable in the editor I also think that the UnityEvent is the way to go!\n"""
140,73248988,b'Added!\n'
141,73370246,"b""Assets/HoloToolkit-Examples/GazeRuler/Scripts/Test/LineTest.cs(15,18): warning CS0414: The private field `LineTest.created' is assigned but its value is never used\n"""
145,73584612,"b""Right, I think that's in line with my question about ActiveEvent being present in the editor. It seems like right now only the AudioSource would be present in the editor right?\n"""
196,77738201,"b""I think @jbienzms above comment was meant for here, but he's right that pressedHands is a HashSet and safely handles Add/Remove with existing/non-existant elements.\n"""
196,77738335,"b""I agree, as I'm not sure why we're not using the other one.\n"""
196,77941529,"b""Quite possible that I'm missing something, but it looks like the `GestureManipulator` is only using the hand position to compute the delta from the initial hand position. But isn't that delta just the value of the `ManipulationOffset` converted to the camera space? If so we can drop tracking of the hand position entirely and still get the functionality of the `GestureManipulator` and then you wouldn't need to listen to the `InteractionManager` at all.\n\nDoes that make sense?\n"""
196,78081403,"b""@NeerajW We're sure that the one GestureRecognizer will actually start two manipulation gestures at once? Seems like a serious API flaw to not then provide the source of the gesture.\n"""
205,78415169,b'NIT: || pattern is broken here.\n'
205,78415420,b'NIT: Spaces missing around *.\n'
205,78415667,b'Nit: Indentation off here?\n'
179,79058642,"b""Whoa! That's a great improvement!\n"""
234,80559712,b'What if my object already contains this component? Should we check for existence before adding another?\n'
245,81603549,b'This feels pretty application specific - can we make it public?\n'
250,81604279,b'I wonder about using UnityEvent instead of delegate/event - they make binding in both code and editor very simple.\n'
252,81604674,"b""These steps describe how to deploy from the HoloToolkit/Build Window - which doesn't expose platform and doesn't require specifying it. Maybe update the note to refer to the particular case of deploying from within Visual Studio?\n"""
338,89213846,b'Nit: should this be `if(IsSpeaking())`'
714,121518349,b'Nit: Not sure this comment is accurate.'
714,121518406,b'Yay!'
1743,170786613,b'Please open the issue and link it here. =)'
2316,196940657,"b""Dependencies do chain. If you'd like I can add it here for explicitness."""
2316,196941312,"b""Ah, I see. We ran into an issue in the past where RakNet was not passing customer rules around OSS for leveraging the MRTK so we've been building without it locally for a while now. Is RakNet coming back in? What's the plan for the Sharing stuff?"""
2896,223878016,"b""This would be a deal breaker for us as we require many different installs of Unity and its unlikely we'd have the version of the MRTK in this location. The projects we have that build DLLs currently discover the Unity version associated with the project and forward the DLL path to MSBuild."""
2896,223880506,"b""This looks like an **awesome** solution for leaving the code inside Unity for development, but still delivering it as DLLs. We've currently been keeping the code outside in a more standard Visual Studio project and then having the DLLs copy to Unity, but that's been a troublesome workflow for debugging the code while testing in Unity.\r\n\r\nYay!"""
2896,223881123,"b""Seems like you'd want this folder mapped to remove the `\\Assets\\MixedRealityToolkit` portion as it'll already be under a folder with the MRTK package name."""
2896,223884236,b'They use UnitySetup for this of course. =)'
2896,224136781,b'As you brought up in the teams this has an unfortunate issue with asset linking to code by script reference.\r\n\r\nWe may be able to use the workflow where the code lives outside of Unity and built to DLLs and placed in the Unity project if we can get debugging to work more easily.'
2896,225395859,b'I was thinking from being an MRTK developer perspective. If we can fix up the `build.ps1` script to find and forward the Unity install path to `dotnet pack` that would make this transparent for everyone regardless of where Unity is.'
2896,225396181,"b'True, definitely a nit. =)'"
2896,225396446,"b""Seems like this scheme is fundamentally broken without fixing the script issue. Is that ok for this PR since you're just moving changes into the feature branch?"""
3557,262189455,"b""Nit: The [MSFT standard](https://aka.ms/nuget) is Microsoft.{group}.{product}.{feature}. So I think here it'd be great to simplify the package name (it's fine if the namespaces aren't 1:1) to just be Microsoft.MixedReality.Toolkit.Unity.OpenVR. All that would be required for OpenVR in Unity should come in this package. \r\n\r\nI think dropping 'Providers' and 'Services' from the package names would tell a more 'feature focused' story."""
3557,262189974,b'I believe [the ](https://aka.ms/nuget)standard is to leave this empty as it should be injected by the nuget system. Not quite sure how that works though...'
3557,262296219,b'We should rename this file to MixedReality.Toolkit.Unity.Core.'
3557,262296787,"b'Modifying this breaks the MixedReality.Toolkit.SDK dependency, which is set for Microsoft.MixedReality.Toolkit.'"
3557,262684657,"b""Looks like some dependencies might be missing for the providers. Unity errors from installing this package, with similar ones for the other packages:\r\n\r\n```\r\nAssembly has reference to non-existent assembly 'Microsoft.MixedReality.Toolkit' (Assets/Packages/Microsoft.MixedReality.Toolkit.Unity.Providers.OpenVR.0.0.0/MixedRealityToolkit.Providers.OpenVR.asmdef)\r\n```"""
3668,268841636,"b""I can't get `StartCommandLineBuild` to run because it's in a namespace. I get this error:\r\n\r\n```\r\nexecuteMethod class 'UnityPlayerBuildTools' could not be found.\r\nArgument was -executeMethod Microsoft.MixedReality.Toolkit.Core.Utilities.Build.UnityPlayerBuildTools.StartCommandLineBuild\r\n```\r\n\r\nUnity Log file: \r\n[build-boundary.txt](https://github.com/Microsoft/MixedRealityToolkit-Unity/files/3005483/build-boundary.txt)\r\n"""
3668,268842261,"b""If I add an accessible entry point I get this exception when trying to run a build:\r\n```\r\nBuild Failed!\r\nException has been thrown by the target of an invocation.\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00048] in <d7ac571ca2d04b2f981d0d886fa067cf>:0\r\n  at System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) [0x00000] in <d7ac571ca2d04b2f981d0d886fa067cf>:0\r\n  at Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools.SyncSolution () [0x0001a] in C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Assets\\MixedRealityToolkit\\Utilities\\BuildAndDeploy\\UnityPlayerBuildTools.cs:145\r\n  at Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools+<StartCommandLineBuild>d__5.MoveNext () [0x00041] in C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Assets\\MixedRealityToolkit\\Utilities\\BuildAndDeploy\\UnityPlayerBuildTools.cs:161\r\n```\r\nUnity log file: [build-boundary.txt](https://github.com/Microsoft/MixedRealityToolkit-Unity/files/3005415/build-boundary.txt)\r\n\r\nAfter this my VS solution for the Unity project is corrupted. In Unity I see this:\r\n\r\n```\r\nXmlException: The 'ExceptIterator' start tag on line 25 position 2024 does not match the end tag of 'DefineConstants'. Line 25, position 2101.\r\nSystem.Xml.XmlTextReaderImpl.Throw (System.Exception e) (at <7fd195060d8c41448694ab221d3b56ca>:0)\r\nSystem.Xml.XmlTextReaderImpl.Throw (System.String res, System.String[] args) (at <7fd195060d8c41448694ab221d3b56ca>:0)\r\nSystem.Xml.XmlTextReaderImpl.ThrowTagMismatch (System.Xml.XmlTextReaderImpl+NodeData startTag) (at <7fd195060d8c41448694ab221d3b56ca>:0)\r\nSystem.Xml.XmlTextReaderImpl.ParseEndElement () (at <7fd195060d8c41448694ab221d3b56ca>:0)\r\nSystem.Xml.XmlTextReaderImpl.ParseElementContent () (at <7fd195060d8c41448694ab221d3b56ca>:0)\r\nSystem.Xml.XmlTextReaderImpl.Read () (at <7fd195060d8c41448694ab221d3b56ca>:0)\r\nSystem.Xml.Linq.XContainer.ReadContentFrom (System.Xml.XmlReader r) (at <428ab70c13974bd0bcd1eeafc00ea3e2>:0)\r\nSystem.Xml.Linq.XContainer.ReadContentFrom (System.Xml.XmlReader r, System.Xml.Linq.LoadOptions o) (at <428ab70c13974bd0bcd1eeafc00ea3e2>:0)\r\nSystem.Xml.Linq.XDocument.Load (System.Xml.XmlReader reader, System.Xml.Linq.LoadOptions options) (at <428ab70c13974bd0bcd1eeafc00ea3e2>:0)\r\nSystem.Xml.Linq.XDocument.Parse (System.String text, System.Xml.Linq.LoadOptions options) (at <428ab70c13974bd0bcd1eeafc00ea3e2>:0)\r\nSystem.Xml.Linq.XDocument.Parse (System.String text) (at <428ab70c13974bd0bcd1eeafc00ea3e2>:0)\r\nSyntaxTree.VisualStudio.Unity.Bridge.ProjectFilePostprocessor.OnGeneratedCSProject (System.String path, System.String content) (at <843b7c5ab4d34b2491669c24f4d94522>:0)\r\nSystem.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at <d7ac571ca2d04b2f981d0d886fa067cf>:0)\r\nRethrow as TargetInvocationException: Exception has been thrown by the target of an invocation.\r\nSystem.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at <d7ac571ca2d04b2f981d0d886fa067cf>:0)\r\nSystem.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) (at <d7ac571ca2d04b2f981d0d886fa067cf>:0)\r\nUnityEditor.AssetPostprocessingInternal.CallOnGeneratedCSProject (System.String path, System.String content) (at C:/buildslave/unity/build/Editor/Mono/AssetPostprocessor.cs:189)\r\nUnityEditor.VisualStudioIntegration.SolutionSynchronizer.SyncProjectFileIfNotChanged (System.String path, System.String newContents) (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:344)\r\nUnityEditor.VisualStudioIntegration.SolutionSynchronizer.SyncProject (UnityEditor.Scripting.MonoIsland island, System.Collections.Generic.Dictionary`2[TKey,TValue] allAssetsProjectParts, System.Collections.Generic.IEnumerable`1[T] responseFilesData, System.Collections.Generic.List`1[T] allProjectIslands) (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:337)\r\nUnityEditor.VisualStudioIntegration.SolutionSynchronizer.GenerateAndWriteSolutionAndProjects (UnityEditorInternal.ScriptEditorUtility+ScriptEditor scriptEditor) (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:238)\r\nUnityEditor.VisualStudioIntegration.SolutionSynchronizer.Sync () (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:215)\r\nUnityEditor.SyncVS.SyncVisualStudioProjectIfItAlreadyExists () (at C:/buildslave/unity/build/Editor/Mono/SyncProject.cs:161)\r\n\r\n```\r\n\r\nAnd in VS I get these errors:\r\n\r\n```\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.SpatialAwarenessSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.SpatialAwarenessSystem.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Unity.TextMeshPro.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Unity.TextMeshPro.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.SDK.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.SDK.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Unity.Analytics.DataPrivacy.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Unity.Analytics.DataPrivacy.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.InputSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.InputSystem.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Unity.XR.WindowsMR.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Unity.XR.WindowsMR.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.DiagnosticsSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.DiagnosticsSystem.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\MixedRealityToolkit.Examples.Demos.Utilities.InspectorFields.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\MixedRealityToolkit.Examples.Demos.Utilities.InspectorFields.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Core.Utilities.Async.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Core.Utilities.Async.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Examples.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Examples.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Providers.WindowsVoiceInput.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Providers.WindowsVoiceInput.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.TeleportSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.TeleportSystem.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.BoundarySystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\Microsoft.MixedReality.Toolkit.Services.BoundarySystem.Player.csproj\r\nC:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\MixedRealityToolkit.Examples.Demos.UX.Interactables.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\\Users\\jowitt\\Source\\MixedRealityToolkit-Unity\\MixedRealityToolkit.Examples.Demos.UX.Interactables.Player.csproj\r\n\r\n```\r\n\r\n"""
3668,268853988,"b""I see this note on the [official cmd line docs](https://docs.unity3d.com/Manual/CommandLineArguments.html), which don't adhere to here. That said, it still seems to execute if it's not in a namespace.\r\n\r\n> To use -executeMethod, you need to place the enclosing script in an Editor folder."""
3668,269250625,"b'Ok, I got this work, I was using the wrong, recently updated, namespace. '"
3668,269281317,b'nit: call `scene.Trim()` instead.'
3668,269288494,"b""Ok, I'm seeing really weird issues with the solution being corrupted, but its happening even if I disable the SyncSolution in this code. As such I'll try to repro on another PC - could be a VS problem, and resolve this issue here."""
3668,269605219,b'Yay! Thanks for the change. =)'
3668,269769636,b'In my testing of this I had to define my paths relative to the project root or Unity would complain at me.'
3668,270216978,"b""Should probably error if the file doesn't exist? Or at least warn."""
3668,270217452,b'`sceneListJson` makes me think I can provide json as text. Maybe `sceneListFile` or `sceneListJsonFile`?'
3668,270413514,b'Nit: scene.Trim()'
3668,270413953,"b""Nit: Also would be nice to pull out the text parsing to a function so these two long lines aren't mostly duplicated code."""
7515,390638200,b'I knew there would be good steps I missed. =) Thanks for the guidance David!'
7515,390641644,"b""My current understanding is that even on devices that do support eye tracking, if the device loses the eyes, then the EyesPose off the SpatialPointerPose goes null. So even on HL2 the EyesPose can go back to null.\r\n\r\nI'm trying to catch on the HL2 when it loses eyes.\r\n"""
7515,390642656,b'The same reason that `bool? IsEyeCalibrationValid { get; }` in the same interface is nullable.'
8842,511177381,"b""Hmmm, I was able to get ~400 draw calls down to ~20 on HL2 in other scenes and saw a steady 60 on the Visual Profiler. I'll double check performance on device in the examples."""
8842,512268132,b'New changes show the frame rate at a steady 60 for me. Please confirm and resolve if you see the same. =)'
1206,146688519,"b""Hmm, yeah it doesn't look like Unity is removing the old stuff. Cleaning up now."""
87,69348955,b'http only works when connected over USB (localhost:10080) or if the user explicitly disables HTTPS in the Windows Device Portal via the browser.\n\nRequiring the user to disable HTTPS is generally not a good idea. Using HTTPS will require your code to get / validate the server certificate from the device.\n'
321,86627539,b'good question. either 0 or 1 seems reasonable\n'
321,86629956,"b'yeah, AudioEmitter.cs is responsible for restoring the volume. \n\nfrom Update()\n                audioSource.volume = initialAudioSourceVolume;\n'"
321,86630922,b'new min value is 0\n'
324,86828037,b'Was this supposed to be removed?\n'
321,87029044,b'There is no requirement for an influencer to use a single filter. Returning a GameObject would be insufficient.\n'
327,87499923,b'UNITY_STANDALONE\n'
729,126816362,b'Do you want to update the projectversion to 2017.2b2?'
729,126816767,b'Handedness is in the 16232 SDK which was flighted a few days back. Unity may need to update for us to see it.'
813,130174916,"b'""Windows Mixed Reality Motion Controller support""'"
813,130174997,b'Separate feature packages as well as the complete toolkit?'
813,130175140,"b'""might not""\r\n\r\n""may not"" implies that you cannot be on a different release from master.'"
813,130175316,"b'""Windows Mixed Reality Motion Controller"" (throughout)'"
1274,148044194,"b""It shouldn't, as these values map to the parameter indices in the spatializer plugin (in fact, they wind up cast as an int when calling into the plugin).\r\n"""
1407,152146121,"b'I\'m not fond of sticking THAT close to the Unity version number. I do like the idea of dropping the ""v1"" (what would spark a v2?).\r\n\r\nI prefer version numbers that are comprised of only numbers (2017.2.4.3, for example)\r\n'"
1407,152147047,"b'When reducing the cross dependencies, can we make sure that no package REQUIRES the BuildAndDeploy folder/package? While handy, it is not a title side component.'"
1407,152147215,"b'""at least 1 week"" might be better. some releases could take more time to stabilize.'"
1821,173884361,"b""you're -> your."""
1821,173885613,"b'What makes builds ""likely"" vs ""will"" fail? I don\'t want developers to think of this as the kid who cried wolf.'"
1838,175477867,"b""Putting the old name back is no problem. The reason for the change is that the old name wasn't very accurate in describing what the script does."""
1838,175478636,"b""The audio source parameter shouldnt have been there originally. It's not a huge deal to put it back and ignore it."""
1838,175479146,b'This is a component level manager. It manages the influencers that are effecting the AudioSource attached to the game object. I can rename it (in vNext) to be a Controller if that seems better.'
1838,175479424,b'Are we using summary tags for privates as well as publics? Will the auto documentation tool do the correct filtering?'
1838,175479713,b'I am able to set the quality in the editor. this also allows it to be changed via code.'
1838,175480043,b'sure. it is a holdover from the previous version of the code'
1838,175511443,"b'It got moved to get it out of the way. I tried eliminating it and was no longer able to enable/disable the component.\r\n\r\n@SimonDarksideJ, yes, I have tested (and verified via Unity docs) that Update is one of the functions that allows for enabling/disabling components.\r\n'"
1838,175512004,"b""I'm going to restore a set of overloaded methods and mark them as deprecated.  They will call the AudioSource-less versions."""
1838,175512937,b'This is why I generally use static readonly instead of const: https://blogs.msdn.microsoft.com/davidklinems/2006/10/27/const-vs-static-readonly/\r\n\r\nDevs are not expected to modify either of the neutral frequencies.'
1838,175513327,b'the values can currently be set in the inspector as a public field. marking them private and serialized will prevent scripts from modifying these values at runtime.\r\n\r\nthe intent is to allow both editor and runtime changes.'
1838,175514429,"b'the AudioSource value is read from the one attached to the component. if we encapsulate the audio source, we prevent the devs from setting values such as 3d audio settings, etc. if we expose this to the inspector, we could be enabling the audio influences being applied to the wrong sound source.'"
1838,175542571,"b""I'll extract the enum and the struct from the class. They are specific to working with this class, so I'll leave them in the source file, but make their names clearly imply that they are for use with the AudioLoFiEffect."""
1838,175544046,"b""I'll extract the enum and the struct from the class. They are specific to working with this class, so I'll leave them in the source file, but make their names clearly imply that they are for use with the AudioLoFiEffect."""
1838,175544277,b'This was changed for clarity.'
1838,175564150,"b'this comes from querying the game object. this class, by design, does not expose the AudioSource to the inspector. this was true of the earlier version as well.'"
1838,175568951,"b'Yes. Per the documentation for MonoBehaviour, one or more of the following must be present to be able to enable/disable on the fly.\r\n\r\nNote: There is a checkbox for disabling MonoBehaviour on the Unity Editor. It disables functions when unticked. If none of these functions are present in the script, the Editor does not display the checkbox. The functions are:\r\nStart()\r\nUpdate()\r\nFixedUpdate()\r\nLateUpdate()\r\nOnGUI()\r\nOnDisable()\r\nOnEnable()\r\n\r\nUpdate is convenient, but then again, so is Start().  I am willing to have an empty method for either of those two.'"
1838,175569602,"b""The rename was 100% about being more accurate about what the class does. The core functionality doesn't change. some logic definitely does (ex: provide a means to fix #1825, and to actually handled disabled influencers).\r\n\r\nI am fine using the old name and logging an issue to rename in vNext."""
1838,175570745,"b""I'll take a look"""
1838,175570914,b'what part seems off? either my editor is set different from yours or I am just not seeing it :)'
1838,175570978,"b'@SimonDarksideJ, are you advocating having BOTH a private and a public field? or are you advocating for a private field and a public set of Get/Set methods? or are you recommending a differently named public property?\r\n\r\nFor something that was originally intended as being public, it seems that a single public field makes sense.'"
1838,175865626,b'The compiler complains about casting to GameObject via the as keyword (used to avoid InvalidCastException). I will see if there is a better solution than casting to a MonoBehaviour.'
1846,175875078,"b'I would remove ""whenever possible"" :)'"
1846,175875403,"b""@SimonDarksideJ, I don't see an example of an exception."""
1846,175876144,"b'When would it not be possible to use a for? all enumerable collections support a Size/Count property, to the best of my recollection.\r\n If there are situations where a foreach is preferred (or acceptable) we should document an exception.\r\n'"
1846,175877381,"b""I do see times where it is best to keep a struct/enum in the same source file as the class for which it is associated. For example, a class has a custom settings structure that is specific to that class. It feels appropriate to have the struct co-located in the class' source file for easy visual reference."""
1846,175878022,"b'Let\'s add a rule that places spaces between flow control statements, ex: if, for, while.\r\n\r\nI was convinced awhile ago that ""if (..)"" is easier to read than ""if(\xe2\x80\xa6)"" and VS automatically formats that way :)'"
1838,175895488,b'in progress'
1838,175955805,b'Example scene updated and renamed. Removed the occlude as that is not what is being demonstrated.\r\n\r\nScene showcases three of the five sound quality settings.'
1849,176155075,"b'This material requires the new MRTK/Standard shader PR to be approved and merged first. Otherwise, the shader will not be there.'"
1849,176155437,b'Can you add summary tags throughout? This will help as we bring auto-generated documentation online.\r\n\r\nThx!'
1849,176155940,b'Coding standards (currently in PR) advise not embedding public enums or structs.'
1849,176156571,b'Co-locating the property with the private field makes it easier to see that the private serialized field can be modified in code.'
1849,176157095,b'guidance is to use for instead of foreach for perf reasons.'
1849,176157601,"b""i'm not a fan of var. can you use the actual type here or does that make the code harder to read?"""
1849,176158031,b'Why is this implemented as a property instead of a method? Feels odd.'
1849,176158251,b'Do this in Start or Awake to avoid a slow first call.'
1849,176158521,b'Recommend adding a comment that this method does not need to do anything.'
1849,176159143,"b""is it just GitHub's diff viewer or are the else and the if on separate lines?"""
1849,176159426,"b'Is there an issue for this? if not, I recommend implementing the TODO.'"
1849,176160179,"b'Do we expect to add new manipulation modes? Rather than having an exception potentially stop an app, I would prefer to see a Debug.LogError and noop-ing the functionality instead.'"
1849,176160623,b'var again :)'
1846,176162201,b'What -> With'
1846,176163082,"b'Can you add a comment to co-locate the private field and the public property. This makes it easier to see, at a glance, what backs the property and that the field is modifiable by script.\r\n\r\nThx!'"
1846,176163688,b'Add a mention to using .sharedMaterial as an option for setting materials on objects?'
1849,176177732,b'Comment that the method is not used.'
1849,176177867,b'can .Count ever be 0?'
1849,176180193,b'Please add summary tags throughout.'
1849,176180451,b'var...'
1849,176181271,b'nit: extra line'
1849,176182197,b'Move outside of the class'
1849,176182348,b'summary tags throughout'
1849,176198697,b'summary comments throughout'
1849,176199159,b'var'
1849,176199252,b'nit: extra line\r\n'
1849,176199519,"b'can m_startHandDistancemeters ever be 0?\r\n\r\nalso, coding convention for MRTK does not use ""m_"" (plz also double check other files. thx)'"
1838,176201337,b'Summary tags were added throughout.'
1849,176239882,b'summary tags'
1849,176240290,"b'Rather than finding the scale transform, consider using localScale or lossyScale, whichever is most appropriate'"
1849,176240459,b'can maxAxisThickness ever be 0?'
1846,176242992,"b'@StephenHodgson, I think the What -> With fix is close to the last thing we need changed.'"
1856,176267855,"b""Let's follow the new guidelines wrt fields."""
1856,176267919,b'Can we get a summary tag here?'
1854,176269404,"b'Per code style guidelines (see #1846), please move public enums outside of the class. I also recommend naming it TapToPlaceColliderPlacement to make it clear which class it is for (unless you believe it has a more generic usage.'"
1849,176867734,"b'agreed. this is a good exception to the ""rule"" :)'"
1873,177162060,"b'then prev will be null and the following would handle it appropriately.\r\n                        ((mbPrev != null) && !mbPrev.isActiveAndEnabled))\r\nIf the IAudioInfluencer does not inherit from MonoBehaviour, it is likely not able to be disabled anyhow.\r\n\r\n'"
1873,177162147,b'fair enough :)'
1878,177183783,b'Are we going to alert users to this change via a startup dialog? Or is that generally not done?'
1873,177502341,"b'If they make their own IAudioInfluencer that does not inherit from MonoBehavior, they will not be able to attach it to their game objects, which would make the system not function at all for them. It is not designed for use without the influencer being a MonoBehavior.'"
1884,177598167,b'classes should be in a HoloToolkit namespace. I recommend using HoloToolkit.ARCA or HoloToolkit.AugmentedRealityCapture'
1884,177598240,b'Please add a summary comment block explaining the purpose of the class'
1884,177598480,"b'fields, properties and methods should all have explicit access specifiers (private here). Also, please add summary comments describing the purpose / function of each field, method, etc.'"
1884,177599641,b'consider using the new MixedRealityToolkit/Standard shader (from Patch4_Dev) with all of your materials.'
1884,177600393,b'What was the source of the .png file associated with this .meta file (I cannot comment on the png in this diff)?'
1884,177600695,"b'Where does this DLL come from? Is it from source you wrote? If so, that source needs to be submitted to https://github.com/Microsoft/MixedRealityToolkit where Microsoft can then build and sign the binary for inclusion here.'"
1884,177600854,"b'Where does the iobj file come from? Is it from source you wrote? If so, that source needs to be submitted to https://github.com/Microsoft/MixedRealityToolkit. Also, how does this get created?'"
1884,177601177,"b'Is this a part of OpenCV? If so, we do not check external dependencies in to MRTK. You will need to document and call out this requirement and have users of ARCA provide them.\r\n\r\nIf this needs removal, your scripts will need to essentially noop if it cannot be found.\r\n'"
1884,177820993,"b'@timGerken, Yes. I was asking if this was a 3rd party file (eg Apple) and whether it was allowed to be redistributed.'"
1884,177905610,"b'For consistency with other areas of the toolkit, I recommend renaming the AudioFX folder to Audio'"
1884,177906681,b'Please increment this to 2017.2.1p2 as that is what the next MRTK release will target. Thanks!'
1884,177906983,"b'Please add a comment as to why you are disabling this warning. \r\nAlso, I generally recommend limiting the scope of disabled warnings to the specific line(s) that require them.'"
1884,177906991,b'Please fill out the summary tag here.'
1884,177907178,b'style guide is to use a private backing field that is marked as [SerializeField] and a public property to access the field.'
1884,177907346,"b'If this is not intended to be visible in the Unity editor, then marking the field (or property) as internal is appropriate.'"
1884,177907421,b'see private field feedback comment'
1884,177907533,b'Please add summary comment that matches the tooltip (for documentation generation).'
1884,177907578,b'see private field feedback comment'
1884,177907697,"b'I don\'t see a ""wait a couple of seconds"" here.'"
1884,177907880,b'coding style: Please wrap the return statement in { }.'
1884,177907960,b'nit: string is more readable than var here.'
1884,177908064,b'nit: indentation'
1884,177908161,"b'If not documenting the IEnumerable return value, there is no need to have an empty returns block.'"
1884,177908228,b'what if the broadcast takes longer than one frame to stop?'
1884,177908292,b'what if the broadcast takes longer than one frame to initialize?'
1884,177908333,b'nit: indentation'
1884,177908375,b'please document the purpose of the parameters.'
1884,177908419,b'please wrap the return in { }'
1884,177909323,b'please wrap the return in { }'
1884,177909479,b'nit: can you replace var with the actual type? or is it a complex type that reduces code readability. (I personally find var to be less readable)'
1884,177909550,b'nit: indentation'
1884,177909580,b'please document paramters'
1884,177909628,"b'If not documenting the IEnumerable return value, there is no need to have an empty returns block.'"
1884,177909690,b'what if it takes longer than one frame?'
1884,177909796,b'please add summary comments matching the tooltips for all serialized fields'
1884,177909930,b'code style: please use private fields marked with the [SerializeField] attribute and expose public properties for access.'
1884,177910012,b'nit: indentation'
1884,177910087,b'no need to have an empty returns block for the IEnumerator return'
1884,177910191,b'Please document method params throughout'
1884,177910332,b'nit: no need for the spaces before and after the ( )'
1884,177910995,b'no need to have an empty returns block for the IEnumerator return'
1884,177913597,"b'Please add a comment as to why you are disabling this warning.\r\nAlso, I generally recommend limiting the scope of disabled warnings to the specific line(s) that require them.'"
1884,177913638,b'nit: whitespace'
1884,177913716,b'please see earlier comments re: fields and summary blocks for them'
1884,177913788,b'not seeing the wait here... I could just be missing it.'
1884,177913816,b'nit: whitespace'
1884,177914007,b'looked up the invoke method. it would be helpful to describe that invoke does the wait.'
1884,177914102,b'please document the parameters'
1884,177914106,b'nit: whitespace'
1884,177914509,b'please add summary blocks to describe the class and the members (not needed for Unity methods like Start / Update)'
1884,177914585,b'please see comments re: private fields and comment blocks'
1884,177914680,b'nit: odd indentation here'
1884,177914722,b'nit: odd indentation'
1884,177914807,b'namespace does not match the other classes (they are using HoloToolkit.ARCapture)'
1884,177914889,b'need comment blocks throughout this class'
1884,177914943,b'please see comments re: using private fields'
1884,177915012,b'please add summary blocks throughout'
1884,177915051,b'please see comments re: using private fields'
1884,177915122,b'please add summary blocks throughout'
1884,177915237,b'please add summary comments throughout'
1884,177915295,b'please see comments re: using private fields'
1884,177915389,b'nit: odd brace indentation in this class'
1884,178110973,"b""Is there a simple check (without a lock) that you can ask if a specific broadcaster has stopped? If so, ask and yield each frame until it has stopped. If there isn't, why wait at all?\r\n\r\nI worry about overall robustness of assuming that one frame (16.6ms @ 60fps) is enough of a wait to ensure something is shut down. I have seen too many framerate based timings fail when moved to different systems (ex: what happens if this is run on a WMR Ultra configuration where the frame time is 11.1ms?)"""
1849,178138859,"b'Please add comment block, including the purpose/meaning of the params.\r\nThx!'"
1849,178139099,"b'Please also add the summary block for these methods, including param meaning and purpose'"
1849,178139615,b'This could/should be a get only property.'
1849,178139696,b'or a get; private set; property'
1849,178139814,b'Please add summary/param comments throughout'
1849,178140081,"b'Reminder to move this enum outside of the class.\r\nAlso, is there any utility to supporting multiple axis rotation?'"
1849,178179721,b'Please document parameter meaning. This should be done for each method.'
1849,178180147,"b'Does this need to be visible in the unity editor? if so, please add Tooltip and SerializeField attributes. If not, you can use the simplified property syntax ex:\r\npublic AxisContstraint CurrentRotationConstraint\r\n{ get; set; }'"
1849,178180360,b'Please also document private methods. It helps with understanding the code and our doc tools will do the right thing wrt only publishing public and protected docs.'
1849,178180634,"b'Please be sure to document what is returned, semantically. Ex: ""Quaternion representing ...""'"
1849,178180919,b'Can you add summary tags that contain the Tooltip text? we will be using those tags to generate API docs.'
1849,178181083,b'Please co-locate these properties with the serialized field for readability / discoverability.'
1849,178181397,"b'Which ""Scale"" does this map to? localScale or lossyScale? Can the code directly access the appropriate one? It will help with understanding the side effect of the scale transform.'"
1849,178899280,b'Interations -> Interactions'
1849,178900497,b'Interations -> Interactions'
1849,178900554,b'Interations -> Interactions'
1849,178901393,b'Interations -> Interactions'
1849,178901755,b'Interations -> Interactions'
1884,178907014,"b'It is not appropriate to include the dependencies. For one, they are licensed differently from MRTK.  Users of ARCA are going to need to install the dependencies on their development PC.\r\n\r\n\r\nPlease *remove* the OpenCV binaries from this PR.\r\n\r\nThanks!'"
1909,178955190,b'The rebasing comment predates my changes :)'
1909,178955311,"b'Thanks! You caught one of my ""write something here"" annotations'"
1909,178955444,b'</remarks> should be </returns>\r\n\r\nGood catch!'
1909,178955498,b'Yeah. Me too.'
1909,178955941,"b""I'm good with removing that part, however. I do not believe we have ever really enforced a rebase."""
1916,179524743,b'Volder -> Folder'
1916,179524857,b'should to cannot?'
1916,179525179,"b""Weren't we going to have < Feature > folders in SDK as well?"""
1916,179525574,b'   MixedRealityToolkit <- Pure C# (Mostly)\r\n       /Required\r\n       /< Features > <- Optional\r\n   MixedRealityToolkit-SDK < Optiona l> <- Monobehaviours\r\n       /< Features >'
1916,179525885,b'maybe even stronger... MUST NOT?'
1916,179526046,b'should -> cannot or must?'
1909,179526706,b'Thanks. That was a casualty of a change I made at the last minute.... '
1916,179530732,b'Not important now. I expect we will use yymm.release.patch or yyyy.mm.patch when we hit alpha.'
1914,179548313,"b'Please add documentation (summary blocks, etc) to this file.\r\nThx!'"
1914,179548457,"b'If these enums are intended to be public, please move them outside of the class.'"
1914,179548682,"b'Please add documentation (summary blocks, etc) to this file.\r\nThx!'"
1914,179626752,b'Please add summary and other comments to facilitate documentation generation.\r\n\r\nThanks!'
1914,179626826,"b'Please add doc comments (summary blocks, etc)'"
1914,179626878,b'Please add doc comments'
1914,179854342,b'Master branch is still using HoloToolkit[-Examples]'
1914,179854444,b'Master branch is still using HoloToolkit[-Examples]'
1918,179879501,"b'These enums should be moved outside of the class. Also, please rename them to imply usage (ex: StateEnum ->DialogState and ButtonTypeEnum -> DialogButtonTypes)'"
1918,179879741,b'I recommend co-locating the public ParentDialog property with the private _parentDialog backing field. I find it to be easier to read and follow.'
1918,179879909,b'This should get easier to read (less awkward) after ButtonTypeEnum is moved out of the class and renamed.'
1918,179880127,b'Please move the { from the end of this line to the next (like other loops and conditionals in this file)'
1918,179880234,b'Please place starting { on the following line throughout this method'
1918,179880323,b'I recommend co-locating properties and their backing fields'
1918,179880446,b'Please add { } to this if statement'
1918,179880578,"b'event though this is a simple one line if, please wrap the return statement in { }'"
1918,179880741,"b'If these enums are intended to be referenced outside of this class, please move them outside. if they are not, then they can be made private/protected.'"
1918,179880814,b'{ alignment.'
1918,179880850,b'please wrap the return statement in { }'
1918,179881074,b'please wrap return statement in { }'
1918,179881256,b'please use { } with if statements (even one line ones)'
1918,179881354,b'please use { } with all ifs'
1918,180222132,"b'Consider enforcing the valid values for NumButtons. From later in the class, it appears the only valid values for NumButtons are 1 and 2.'"
1918,180222286,b'What should happen if the value of numButtons is not 1 or 2?'
1918,180222633,"b'Also, this does not appear to be backed by the numButtons field (which is used later in the class).'"
1918,180224240,"b'are these flags? if not, is there a reason they are not consecutive values?\r\n\r\nif they are flags, I recommend tagging the enum with [Flags] and using hex values instead of decimal, for clarity'"
1918,180224587,"b'would be more readable to use State here, instead of state. would also let you validate the value, if needed'"
1918,180224850,"b'is it valid to set the dialog state from outside of this class? if not, I recommend a private (or protected) set'"
1918,180226812,"b'This looks strange to me. If this method is intended to be a short term co-routine, you may want to add a comment to that effect.'"
1918,180227283,"b'""will be"" is ""must be"" in CloseDialog(). should they be the same guidance?'"
1918,180227653,"b'should these (template, I assume) implementations set the expected states? that could simplify the RunDialogOverTime logic and allow derived classes to call the base method to set the correct state.'"
1918,180227810,b'Can the parenting be done in a default implementation that can be called by derived classes?'
1918,180231108,"b'rather than protected abstract, what about basic implementations? that would potentially simplify derived classes.'"
1918,180231288,b'nit: no _ on the variable name'
1918,180231674,b'what happens if there are more than one button objects attached? would it be better to serialize the buttonComponent field?'
1918,180232187,b'can we get the number of children and use a for() here?'
1918,180232569,"b""can the code be layed out differently and reduce the indentation levels? this is a TON of }'s"""
1918,180232681,b'where do these name values come from? why are they hardcoded?'
1918,180232787,b'where do these names come from? why are they hardcoded?'
1918,180233093,b'Please add a summary block for this class.'
1918,180233171,b'is this something that should be serialized in the inspector?'
1918,180233297,"b'mFadeCounter -> fadeCounter, and similar below'"
1918,180233631,b'should this call ResetFade?'
1918,180233753,"b'For re-use (see comment in FadeIn), should there be a way to ""instantly"" reset?'"
1918,180233812,b'See comment in FadeIn()'
1918,180233956,b'please add summary block'
1918,180234051,b'mStartingLoader -> startingLoader (and similar)'
1918,180234186,b'please add summary block'
1918,180234347,b'Please add summary block'
1918,180234534,"b""Recommend renaming as IndicatorStyle, it's more readable that way :)"""
1918,180234677,"b'Recommend renaming to ProgressMessageStyle, for readability'"
1918,180234750,b'Recommend renaming to ProgressStyle'
1904,180239190,b'Does us moving to requiring .net 4.6 allow us to use the existing Windows Device Portal Wrapper instead of having to clone the functionality?\r\n\r\nhttps://github.com/Microsoft/windowsdeviceportalwrapper'
1904,180239768,b'Blocking this unitl I hear back from my PM regarding whether or not we are allowed to include this.'
1904,180503092,"b'@riverar, I wouldn\'t classify the WDPW project as being ""full of problems"" (you linked to a list of seven, at least one of which does not impact HoloLens (as a 32-bit platform) ).\r\n\r\nI would very much like to see the least amount of code re-writes / forks possible and feed any fixes we need here back into WDPW to benefit not just MRTK, but PC, Xbox, IoT, etc users as well.\r\n\r\nBTW, I work on both projects and can help coordinate.'"
1918,180511466,b'I can see that.'
1936,180595806,b'please explicitly state visibility for class variables'
1936,180596255,b'what is the multiply by 5 accomplishing? is this something that should be configurable?'
1936,180596363,b'Is this the same ButtonStateEnum used by the AppBar?'
1936,180596634,b'should a default implementation be provided?'
1936,180596836,b'remove this TODO in favor of a workitem issue?'
1936,180596919,b'space not needed before the ()'
1936,180596944,b'space not needed before the ()'
1936,180597033,b'is this an editor only thing? or can they be drawn at app runtime?'
1936,180597060,b'please populate the summary block'
1936,180597164,b'is this an editor only thing? or is it also for app run time?'
1936,180597305,"b'does this ever get set internally by code? if so, consider adding a range check setter'"
1936,180597341,b'please line up {'
1936,180597448,b'No need for space before ()\r\n\r\nAre gizmos for more than just editor mode?\r\n'
1936,180597480,b'nit: remove extra blank line'
1936,180597658,"b""it's easier to read flags if they are defined in hex, rather than shifts"""
1936,180597783,"b'For consistency, please explicitly define Manual = 0'"
1936,180597960,b'nit: extra blank line'
1936,180598029,b'nit: extra blank line'
1936,180598098,"b'recommend adding a comment to the effect of ""this method intentionally left blank""'"
1936,180598188,b'Please add summary block'
1936,180598262,b'this TODO sounds like a good idea :)'
1936,180598425,"b'If ClosestCorner becomes 0, it will be important to also update the dev branch. otherwise apps will get an unexpected setting change when migrating'"
1936,180827658,"b'You may wish to rebase against the may18_dev branch to eliminate files that you are not modifying. the branch was updated to ""final"" 2017.2.1.4 changes yesterday.\r\n\r\nThanks for being willing to change this, though after the rebase you may not need to :)'"
1936,180827823,"b'You may wish to rebase against the may18_dev branch to eliminate files that you are not modifying. the branch was updated to ""final"" 2017.2.1.4 changes yesterday.'"
1936,180827949,"b'You may wish to rebase against the may18_dev branch to eliminate files that you are not modifying. the branch was updated to ""final"" 2017.2.1.4 changes yesterday.'"
1946,181201493,b'What is the behavior if there is whitespace at the beginning of a keyword? Should we trim both ends?'
1963,182143009,b'Fair enough. I can remove those.'
1972,182275908,"b'Add the ""Licensed under.."" comment'"
1972,182275919,"b'Add the ""Licensed under.."" comment'"
1972,182275939,"b'Add the ""Licensed under.."" comment'"
1972,182275962,"b'Add the ""Licensed under.."" comment'"
1972,182276002,"b'Add the ""Licensed under.."" comment'"
1972,182276027,"b'Add the ""Licensed under.."" comment'"
1971,182276182,"b'Add the ""Licensed under.."" comment'"
1971,182276193,"b'Add the ""Licensed under.."" comment'"
1971,182276202,"b'Add the ""Licensed under.."" comment'"
1971,182276214,"b'Add the ""Licensed under.."" comment'"
1971,182276228,"b'Add the ""Licensed under.."" comment'"
1971,182276247,"b'Add the ""Licensed under.."" comment'"
1976,182486295,"b""I honestly prefer to see the hex value here, but it's not a huge issue :)"""
1975,182487966,b'I would love to see us use the System.Diagnostics assert (also?). I have not gotten UnityEngine asserts to fire when debugging in VS.'
1975,182488216,"b""is this assert right? shouldn't eventData.used == true just cause an early exit?"""
1975,182488417,b'should this assert? or just early return here?'
1975,182488818,"b'Since this is an assert, i assume that UpdateCanvasEventSystems is not always called for an app?'"
1975,182489392,b'Are there examples where it is valid for IsAvailable to be true and IsSupported to be false?  Spatial Mapping?'
1975,182489580,b'What about HoloLens hands? They are not handed.'
1975,182490268,b'This is where it would be cool to use (add?) System.Diagnostics.Debug.Assert()'
1936,182585897,b'nit: not really needed. the following line describes the class'
1936,182586169,b'what should happen if GetComponent fails? is there a cleaner solution than a nullref exception?'
1936,182586277,b'can the child be at an index other than 1?'
1936,182586321,b'what should happen if GetComponent fails?'
1936,182586385,b'what if GetComponent returns null?'
1936,182586540,b'please wrap with { }'
1936,182586661,b'recommend range checking in the setter (for when set by code)'
1936,182586719,b'recommend range checking value in the setter'
1936,182587066,b'consider renaming IsOn to IsDisplayed'
1936,182587157,"b""this isn't wrong, but looks a bit odd...."""
1936,182587385,b'please wrap in { }'
1936,182587433,b'is this no longer needed?'
1936,182587498,b'please align the {'
1936,182587574,b'please align {'
1936,182587612,b'please format as \r\n}\r\nelse\r\n{'
1936,182587656,b'please align {'
1936,182587696,b'please align {'
1936,182587773,"b""please align the {'s in these ifs"""
1936,182587882,"b""please align the {'s in these ifs"""
1936,182587908,"b""please align the {'s in these ifs"""
1936,182587956,"b""please align the {'s here"""
1936,182588414,b'should this ever happen?'
1936,182588434,b'is there a way to ensure it cannot?'
1911,182589354,b'why not just return the value from Spawn?\r\n\r\nex: return spawnManager.Spawn( \xe2\x80\xa6 );'
1911,182589488,"b""I'll defer to @StephenHodgson here."""
1993,183478735,"b""it's 5 seconds at 60fps. no reason other than that.  this field feels like it needs a range value. do you have a suggested max number of frames?"""
1918,183866622,"b'A descriptive comment of the logic here may be helpful for some readers. I believe I get it, but it took a couple times of staring at it, to be honest.'"
1918,183866924,"b'as much as I like the ? : operator, this line is hard to parse. I think here, more code is better / more readable'"
1918,183880350,b'That was my read as well...'
2020,184468223,"b'New, fancy C# syntax :)'"
2020,184468501,"b'Why reorder the Header and SerializeField attributes? The header applies to more than just this one field, correct?'"
2020,184470501,"b'should this be && instead of || ? The original code got executed when it was in the editor, this looks like it will occur when the app is running on device as well.'"
2020,184470613,"b'should this be && instead of || ? The original code got executed when it was in the editor, this looks like it will occur when the app is running on device as well.'"
2020,184471029,"b'Thank you for getting rid of this file.... it always makes me think that it should break us into the debugger (yes, i know i am old.... )'"
1884,184491828,b'recommended namespace: HoloToolkit.Examples.SpectatorView'
1884,184524347,b'2017.2.1p2 or later?'
1884,184524411,"b'I would remove the word ""currently""'"
1884,184524696,b'A comment here that the customer is going to need to build the plugin and the required OpenCV file. You may also want to consider listing the specific binaries required.\r\n'
1884,184524901,b'nit: extra line compared to other sections.'
1884,184525004,b'nit: extra line'
1884,184525468,b'Not sure this sentence parses well... Are you saying that an optional step is to set up the specific marker settings?'
1884,184525589,"b'Remove ""This may will be fixed in a later release.""'"
1884,184525800,b'Can you characterize what the issue is? Can you link to a Unity bug report?'
1884,184525943,b'nit: extra line'
1884,184526159,b'nit: extra line'
1884,184526292,b'nit: extra line'
1884,184526341,b'nit: extra line'
1884,184526498,"b'Remove ""However""'"
1884,184526906,"b""This path doesn't look correct. Example scenes should be placed in HoloToolkit-Examples\\SpectatorView with scenes in the Scenes folder, scripts in Scripts, etc."""
1884,184527334,b'Link to the issue so that users can track resolution.  Is there a known Unity version that does not have this behavior?'
1884,184527419,b'Issue link?'
1884,184527458,b'nit: extra line'
1884,184527582,b'Is this the correct way to document these?'
1884,184528145,b'HoloToolkit.Unity.SpectatorView'
1884,184528327,b'nit: odd indentation'
1884,184528486,b'Is throwing the right thing to do here?'
6344,338322545,b'Do you have an issue for AR Foundation documentation?'
6344,338693425,b'should be #6346 '
6344,339216613,"b""should we add a class description for API docs? It's public so we probably should even though it's just an inspector?"""
6344,339265424,b'we havent traditionally. we definitely can. i have an issue open for documentation and am happy to add that then'
6344,340376856,b'Should this be filled in?'
6344,340379895,b'it is optional. not all profiles have a description'
7321,379921663,b'Why remove the README?'
7321,383185340,b'was a mistake'
6344,338318689,b'inheritdoc? same with enable etc'
6344,338318813,b'Maybe elaborate what components are being added and why'
6344,338318981,b'GameObjectExtensions.DestroyGameObject? or Object.Destroy to handle the branching?'
6344,338690799,b'good catch. thanks!'
6344,338691218,"b""trackedPoseDriver is not a GameObject (it's a script). we will need a new extension to handle"""
6344,338699479,b'yea sorry that is what I meant by Object.DestroyObject() as an extension in ObjectExtensions.cs'
6344,338829498,b'added a brief remarks section'
6344,338829686,"b""ahh. ok. i'll double check :)\r\n"""
6344,340377109,"b'```suggestion\r\n        /// communicate with the underlying AR platform (ex: AR Core), track the device and perform other necessary tasks.\r\n```'"
6344,339219877,"b""i'm wondering if we should put that order number into a file somewhere. i'm just creating a couple of scriptable objects for bounds control and while looking at other scriptable objects we have already in mrtk I saw these order magic numbers. putting those numbers directly into the scriptable object file makes it really hard to keep track. What do you think?"""
6344,339265476,"b'good idea, can you open an issue?'"
6344,339269982,b'https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6387 :) '
6344,338171890,b'Do we want this provider folder name to be more along the lines of `ARFoundation`? Or are we specifically only doing the camera settings here?'
6344,338173793,"b'Only the camera settings... so far. We could make the folder and assembly be ""UnityAR""\r\n'"
6344,338212787,b'done'
6344,337735055,b'use GameObjectExtensions?'
6344,337735215,"b""nit: shouldn't public properties be at top of file?"""
6344,337747305,b'moved.'
6344,337747529,"b""these are components, not gameobjects. for now, let's leave as-is"""
6344,337735572,b'inheritdoc or summary? same with others'
6344,337750450,b'added'
4707,290547866,b'This comment is still referring to a motion controller. is that correct?'
4707,290871273,b'Updated'
5250,301810770,b'Does this end up no-oping when hands are involved?'
5250,301810902,"b""It feels like it's fixing up a controller scenario but also is involved in a relatively fundamental hand scenario, so I'm curious if that stuff is being fixed up some other way right now\r\n\r\n---\r\nIn reply to: [301810770](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5250#discussion_r301810770) [](ancestors = 301810770)"""
5250,301812284,"b'`MixedRealityPlayspace` will be at the origin, unless teleportation is used. So, yeah, in most cases on HoloLens this will no-op, unless a dev decides to use teleportation on a HoloLens.'"
5250,301812785,"b'These lines are currently being used on our grip data as well (or, I guess the rotation one is slightly different but matches the pointer pose transformation):\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/415582cd3256b633e862c8db8c829844bd13d603/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/BaseWindowsMixedRealitySource.cs#L217\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/415582cd3256b633e862c8db8c829844bd13d603/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/BaseWindowsMixedRealitySource.cs#L218\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/415582cd3256b633e862c8db8c829844bd13d603/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/BaseWindowsMixedRealitySource.cs#L189'"
5250,301813891,"b'Yep, I saw the other lines, I was just more concerned about modifications to some other path.'"
6989,363867954,"b'is this the root pointer for all native access? not sure what ""root"" means here'"
6989,363868114,"b'```suggestion\r\n        /// The current native frame <see href=""https://docs.microsoft.com/uwp/api/Windows.Graphics.Holographic.HolographicFrame"">IHolographicFrame</see>.\r\n```'"
6989,363868875,"b""It's the `ISpatialCoordinateSystem` at the root of the scene. Happy to use a different word if something else makes it more clear!\r\n\r\n>The current native root ISpatialCoordinateSystem"""
6989,363870081,"b'This change will resolve to `The current native frame IHolographicFrame` as opposed to just `The current native IHolographicFrame`, which I think is more clear.'"
6989,363939821,b'ignore me.... i missed the <see ... /> part of the comment. it is fine as is'
6989,388069751,"b""Error:BaseWindowsMixedRealityCameraSettings.cs(54,17): error CS0246: The type or namespace name 'WindowsMixedRealityCameraSettingsProfile' could not be found (are you missing a using directive or an assembly reference?)"""
6989,388527801,"b""@LongForever1993 Where and when are you seeing that error? Please file an issue if it's consistent."""
6692,349311178,b'Documentation update?'
6692,349334801,b'Added some info to the WMR camera settings docs'
6891,357880638,"b'```suggestion\r\n            string[] definitions = { ""DOTNETWINRT_PRESENT"" };\r\n```'"
6891,357880660,"b'```suggestion\r\n                ScriptingUtilities.AppendScriptingDefinitions(BuildTargetGroup.WSA, definitions);\r\n```'"
6891,357880675,"b'```suggestion\r\n                ScriptingUtilities.RemoveScriptingDefinitions(BuildTargetGroup.WSA, definitions);\r\n```'"
6891,360190419,"b'@davidkline-ms, did you leave `.Toolkit.` out of these assemblies intentionally?'"
6891,360193967,b'I updated the asmdefs to include `.Toolkit.Providers.` like our other assemblies'
6891,362629117,b'That was accidental. I was trying to limit the length of the asmdef file names and forgot to update the internal names.'
6891,362985820,b'Should we explicitly add `private` here?'
6891,362997078,b'see earlier comment re: language support'
6742,351051798,"b""The latest fixes went into 2018.4.13f1.\r\n\r\nThere may be additional fixes in the future, but it's in much better shape at that point. Not sure exactly how we want to word that."""
6364,338325585,b'Does i < null == false?'
6364,338326933,"b""That's an interesting point! I'll double check that this functions expectedly"""
6364,338329190,"b'Under https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/using-nullable-types#operators\r\n\r\n>For the relational operators (<, >, <=, >=), if one or both operands are null, the result is false. \r\n'"
7429,385225018,b'```suggestion\r\n        #endregion IMixedRealityCameraSettings\r\n```'
6989,363574403,"b""Nit: Might also be worth adding some doccomments to this to (if only to help future generations understand what should go on this interface, and what shouldn't)\r\n\r\nIt's pretty clear from the contents what the things inside of it are now, though these are the types of interfaces that can balloon to much larger things going forward without guidance about initial intent (i.e. maybe ballooning is also fine, etc)"""
6989,363584048,"b""This one shouldn't increase very much, if at all, and really only needs to exist while we support both legacy Unity XR and XR SDK.\r\n\r\nI'll add some comments though!"""
6989,363837307,b'Added a summary with some remarks'
6989,363868783,"b'> really only needs to exist while we support both legacy Unity XR and XR SDK\r\n\r\nThat said, this is a good pattern to maintain going forward as the engine may change in ways that the provider needs to accomodate.'"
6989,363868935,b'please see above comments related to this and the next summary block'
7491,387987521,"b""Looks like this file didn't get re-committed (will need to `git add -f` it, since `.csproj` is in the gitignore)"""
7491,387988307,b'good catch. thanks!'
7491,387989489,b'done'
6989,363574673,b'Adding a note here with a link to https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6922 so that we capture this namespace change on this thing.'
6989,363575820,"b""Mostly that we should have a write up and notes about this change, because it is technically breaking (I know that other consumers that we've done work for this stuff may end up using this directly, so it's something we should call out).\r\n\r\n@davidkline-ms  thoughts?"""
6989,363584233,"b'Yeah, I waffled on actually changing this namespace or not. It makes it more ""correct"", but is a breaking change, like you pointed out. I can revert'"
6989,363869533,"b'i have been trying, in recent PRs to document changes as they happen. even so, adding a comment to #6922 will help ensure that the change notes are as complete as possible'"
6989,363870073,"b'Would there be any other utilities provider other than Windows Mixed Reality? If not, maybe name this as UtilitiesProvider for ease of reading?'"
6989,363870752,"b""For this static class as it's currently named and written, no. This class is specific to Windows Mixed Reality. I can still rename it though, since it's a little redundant."""
6989,363871016,b'Consider turning this into a function?'
6989,363871526,"b'no ENABLE_DOTNET here? that was special cased above, but i am not seeing it anywhere (?) else?'"
6989,363911357,"b'It may be needed here, but the existing .NET workaround was specific to marshaling the `ISpatialCoordinateSystemPtr`. It would need updating to support `IHolographicFramePtr`, and the DotNetWinRT adapter may provide a better workaround for .NET Native. Testing needed.'"
6989,363912019,b'Renamed to `UtilitiesProvider`'
6989,363912120,b'Added a note to #6922'
6989,363912832,"b""I'm going to leave this as-is, since it's only called in one place and, although a bit confusing with all the `#ifdef`s, I'm not sure moving it into a function will help overall reading of the method."""
3755,271432505,"b""I don't know if I fundamentally agree with this inheritance choice. If windows mixed reality controller is truly for controllers compared to just being a confusing input term, we may long term want to have articulated hands not directly inherit from WindowsMixedRealityController\r\n\r\nCan we get an issue logging this if this review needs to go in without this change?"""
3755,271446402,"b""Can you file an issue for this with your background/question? I don't think that I have sufficient background here to be able to fully argue your case. """
3755,271456040,"b'As long as the change (if truly needed) does not constitute a breaking change, we can definitly defer unitl after RC1.\r\n\r\nWe **could** take this merge and fix issues in the developent branch prior to declaring RC1 for better visibility on the scope of the change.'"
4707,290549410,"b""Can you also make sure that one and two handed manipulation on HoloLens 1 is working with this change? I remember needing to modify WMRHand to support the GGVPointer after we discovered that two handed manipulations were no longer working on HL1. It took a while to get right and involved modifying WMRArticulatedHand. Want to make sure we don't regress that. Also, you could be able to grab and rotate the cup on HandInteractionExample scene, as well as use two hand manip to scale and rotate it."""
4707,290884476,"b'Confirmed that one and two handed manipulation still works on HL1. It seemed a little inconsistent (the second hand often dropped out seemingly randomly), but I see that without this change as well.'"
5259,302148122,b'Nit: Use the same value velocityUpdateInterval instead of hardcording the number 6'
5259,302446093,"b""Have you considered using an exponential moving average instead of the uniform weight for each frame? It might give better results for sharply changing velocities. Not sure how noticeable that would be in practice but i think it's worth trying out and shouldn't be too hard to implement:\r\n[https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average](https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average)"""
5259,302470136,"b""I did consider it. It will become more accurate if we will be taking more frames into account (15+ probably). For small sequences like 6 I'm using (it's taken semi-arbitrarily, will get an average velocity over 100ms time when running at 60 fps, which seemed reasonable), perceived difference will be small. \r\nAlso on a small measurement size, uniform weights should be less susceptible to jitters in hand positions, which we still have."""
5259,302485019,"b""Doesn't matter now as I'll change it to platform-supplied values :)"""
6702,349458749,b'please add comment after each #endif to help clarify which condition it is closing. thanks!'
6702,349459072,"b'later in the file, the DOTNETWINRT_PRESENT define is paired with UNITY_WSA... is there intended to be different conditions where this define is checked?'"
6702,349459356,"b'nit: previous conditionals have DOTNETWINRT_PRESENT second. not a required change, though it may help with readability'"
6702,349459469,b'same as earlier nit comment...'
6702,349669532,"b""I'm never sure which condition to put when there's an `#elif` in the middle! The original `#if` or the `#elif`?"""
6702,349670836,"b'Sometimes the checks are already within a larger `#if UNITY_WSA` check (like this case, a few lines higher), so I chose not to duplicate it.'"
6702,349706470,b'Updated to `WINDOWS_UWP || DOTNETWINRT_PRESENT`'
6702,349706485,b'Updated to `WINDOWS_UWP || DOTNETWINRT_PRESENT`'
6702,349718393,b'I would put the #elif condition'
6702,349718474,b'i see. sounds good.'
6692,349304218,"b'Do customers know what PV means? should we phrase as ""color camera"" or something?'"
6692,349305556,"b""Hmm, good point. It's referred to as PVCamera in most of our platform docs, but I can expand it to PhotoVideoCamera"""
6692,349305975,b'I also added a documentation button next to the setting for more information:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/69374853-d991f500-0c5b-11ea-8b1f-a742d1d3090f.png)\r\n'
2030,185648017,b'Link to HoloToolkit/UX/Prefabs?'
2030,185648094,b'Who created this video?'
2030,185648262,b'Link to HoloToolkit/UX/Prefabs/Progress?'
2030,185648345,b'Who created this video?'
1884,185675477,"b""Let's refactor for vNext."""
1884,185675567,b'this can be cleaned up in the move to vNext'
1884,185675574,b'this can be cleaned up in the move to vNext'
1884,185675596,b'this can be cleaned up in the move to vNext'
1884,185675907,b'this only occurs if the user did not populate the field in the inspector'
1884,185675921,b'this only occurs if the user did not populate the field in the inspector'
1884,185675978,b'we can clean this up in the move to vNext'
1884,185676028,b'this is arguably easier to read / less code'
1884,185676083,"b'if it is not being used, it should be removed.'"
1884,185676109,b'this only occurs if the user did not populate the field in the inspector'
1884,185676162,b'this only occurs if the user did not populate the field in the inspector'
1884,185676334,"b'@StephenHodgson, do you have a suggested condition? I agree the comment isnt completely accurate'"
1884,185676350,"b'@StephenHodgson, do you have a suggested condition? I agree the comment isnt completely accurate\r\n'"
1884,185676381,b'where do these values come from?'
1884,185863527,"b""@TobyGilbert-ms \r\nPlease add a comment to that effect (hard-coded numbers aren't fun)"""
1884,185863631,"b""We'll refactor for vNext"""
1884,185864034,b'We can refactor in vNext'
2029,185895227,b'Dev branch uses MixedRealityToolkit as the folder.'
2029,185895317,b'Dev branch uses MixedRealityToolkit'
2048,185951055,b'not sure. I can look'
2048,185951153,b'sure'
2048,185951741,b'Some of this feedback is funny... This is a copy of the coding guidelines from vNext with very few changes (small fixes and a namespace change) :)'
2048,185951951,"b""doesn't look like we can set that :\\"""
2048,185953642,b'yes. THAT i can do'
2027,186479739,"b""Shouldn't this be a property?\r\n\r\nAlso, there is no GetManipuationMode\xe2\x80\xa6 client code should be able to see what the current value is as well as set a new one."""
2059,186826159,b'Should have API docs added to this file. Someone (us) may want to extend this in the future.\r\n'
2059,186826629,b'Do we not want to be able to set (override) this?'
2059,186827156,b'We should add Arm since we are targeting cross-SDK/platform.'
2061,186887680,b'I missed adding this file as part of #2052 '
2061,186887752,b'nope. i fixed it in https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2061/commits/fb3fc5086606be1a5e3c9aacc3d01e6cc843187e'
1918,187123838,b'Should probably be GetComponents() and check for null before setting OnButtonClicked'
1918,187124035,"b'is there ever a chance that Dialog.Open can return null? if so, should check before setting OnClosed.'"
1918,187129626,b'is there any chance this will go out of scope before OnClosed fires?'
2059,187131997,"b'My recollection is that we would not add comments to source files if the original did not contain them. As Kurtis mentions, we should continue adding license files (.txt/.md/etc) when they are included in projects we include in ours.'"
2075,187480993,"b""remove the controller finder? I don't believe that is needed (I don't see exceptions anywhere else but OnEnable)"""
2072,187481080,"b""that IS weird.... i'll make sure I have the right tabs/spaces setting"""
2072,187481823,b'git it not telling me anything changed after i forced new tabbing... MIGHT just be a diff view issue'
2072,187482442,b'found it.... the issue was in a pre-existing comment it seems'
2072,187482737,"b""it wasn't. i will look and open a PR if i see any more missing code"""
2076,187484800,b'Can you verify what happens if a controller loses power (ex: batteries removed / die)?\r\n\r\nThanks!'
2076,188014083,b'Good catch... missed that one.'
2092,188024760,b'Digital feels a little generic here. Chances are we will have to always reference as InputTypes.Digital'
2092,188025003,b'need doc comments'
2092,188025296,b'Rename to DualAxisInputType?'
2092,188025581,b'DigitalInputType?'
2092,188025802,"b'I\'m nut sure I get this one. Also, a ""better"" name is needed.'"
2092,188025879,b'need doc comments'
2092,188025965,b'need doc comments'
2092,188026239,b'RawInputType?'
2092,188026449,b'need doc comments'
2092,188026624,b'SingleAxisInputType?'
2092,188026695,b'need doc comments'
2092,188027024,"b""SixDegreesOfFreedomInputType?  Abbreviations in type name aren't much cared for in .net"""
2092,188027093,b'need doc comments'
2092,188027166,b'ThreeDegreesOfFreedomInputType?'
2092,188027201,b'need doc comments'
2092,188027313,b'need doc comments'
2092,188028208,b're: above todo comment... maybe use names other than left && right'
2092,188028430,b'where did the 397 come from?'
2092,188035146,b'ControllerPosition'
2092,188035180,b'PointerPosition'
2092,188035231,b'GripPosition'
2092,188035360,b'needs doc comments'
2092,188035650,b'need doc comments'
2092,188035819,b'Registration'
2092,188035938,b'add description of the region (like above)'
2086,188036599,"b'this class is **setting** inputDownEventData during an up event. is this the wrong behavior? it has been this way since the start, I believe'"
2092,188442782,b'please forgive if this is a dumb question... are we moving away from getting the model from the controller firmware?'
2092,188443286,b'Werent we going to have Assert wrappers? Then we could have Unity and runtime asserts.... Please.'
2092,188443700,"b'The tooltip should be a subset of the summary tag, up to and including a subset of 100% :)\r\n\r\nThat said, I am fine with Simon doing a doc comment pass as a separate issue, if that works best.'"
2092,188444019,b'Am i reading correctly that this compiles in VS but not in the Unity Editor?'
2092,188446201,b'Future note: We may need to confirm the API contract / OS version to ensure that functionality is present. I can work with you on that if needed.'
2092,188447504,"b'Note: Touchpad (also, Grip, Thumbstick, Menu) are features that may need an API contract / os version check'"
1918,188793431,"b'this is in an example script... I am happy to file an issue to add tooltips / doc comments in the june release, if that seems reasonable. otherwise, we can ask @cre8ivepark to add them.'"
2113,189016310,b'Agreed. Why was the color changed?'
2113,189036779,b'Please do duplicate the material. Changing the color can cause confusion with customers.\r\n\r\nThanks!'
2115,189108100,b'Is this something we are doing for future proofing? UnityARKit came from Unity'
2116,189108848,"b'This is the default within the prefab. I would reword step 2 to say ""make sure the Physics Layer is set to 31""'"
2116,189109002,"b'""select the SpatialMapping layer.""  they would not have created it'"
2117,189109220,"b'This is the default within the prefab. I would reword step 2 to say ""make sure the Physics Layer is set to 31""'"
2117,189109263,"b'""select the SpatialMapping layer."" they would not have created it'"
2127,189320727,"b""This line looks like a duplicate... Is it just Gits's diff?"""
2127,189321548,"b'The new name feels wrong... We cannot actually set a version number, only increment or not...'"
2127,189321838,b'Maybe call it UpdatePackageVersion?'
2127,189322572,"b'When did this recommendation change? Also, is it specific to newer versions of Unity (better IL2CPP support)?'"
2127,189322956,"b'Do we really want ""Herding all the cats""? One of our release criteria is globalization and I worry that this may be misunderstood / found offensive.'"
2127,189328401,b'No stress. Just me being paranoid :)'
2127,189329994,b'Makes sense to me now :)'
2127,189330564,"b'For now, can we wrap that in a 2018_1_OR_NEWER? Just to be safe'"
2127,189335706,"b'Maybe just reword it to be ""has been deprecated in Unity 2018, please consider using IL2CPP""?'"
2127,189336445,b'Fair enough...'
2127,189386525,b'We may want to hold off on pushing toward IL2CPP until vNext then. Do we really want to change the recommendation in master?'
2127,189387338,"b'Then we should say ""please consider using"" :)'"
2127,189387492,"b'And let\'s not forget Kurtis noting the spelling error for ""deprecated"" :)\r\n'"
2136,189650900,"b'We probably should, over time.'"
2136,189651426,"b""System.IO wasn't needed before?"""
2136,189652676,"b'no ""|| UNITY_EDITOR""?'"
2136,189652698,"b'no ""|| UNITY_EDITOR""?'"
2136,189652729,"b'no ""|| UNITY_EDITOR""?'"
2136,189652749,"b'no ""|| UNITY_EDITOR""?'"
2136,189652805,"b' no ""|| UNITY_EDITOR""?'"
2136,189652852,"b'no ""|| UNITY_EDITOR""?'"
2136,189652888,"b'no ""|| UNITY_EDITOR""?'"
2136,189652922,"b'no ""|| UNITY_EDITOR""?'"
2127,190326505,"b'@StephenHodgson, did you decide to roll back this change?'"
2127,190338036,b'next == may?'
2156,190697866,b'Gotcha!'
2168,191016258,"b'I got reports that that was blocking the runtime from finding the entry points. ExactSpelling quiets the compiler warnings, but apparently ignores the EntryPoint param in the attribute.'"
2169,191035354,b'Recommend a comment re: why here.'
2173,191055259,b'why include in some source files and not others that use Dictionary?'
2173,191055271,b'nit: not in alphabetical order'
2173,191055292,b'would be a bit easier to read if each element were on a separate line'
2202,191608693,b'I like this. We should consider putting common scripts in Microsoft.MixedReality.Toolkit.SDK (when we have them in the tree)'
2202,191609019,b'Wouldnt inspectors reference all SDK assemblies?'
2202,191609203,b'I can start adding in some Common scripts before we merge this and create the base assembly.'
2202,191611745,b'Having it there displayed an error in Unity which is why I removed it.'
2202,191656139,"b""This is actually intended for beta. Don't have a branch for that work... yet :)"""
2184,192829988,"b""I'd like to keep this. I expect it may evolve to contain information such as: IsOpaque, IsTethered, etc,"""
2184,192830592,"b""Let's make this a super-simple / basic list as a default collection. Not sure many of these are actually defaults for many apps."""
2184,192831829,"b""I'm not fond of a method that is described as loading defaults loading custom actions. What if I want to get back to ONLY the defaults?"""
2184,192832031,"b""I'd rather have a pattern where the app calls LoadDefaults() and then registers custom actions separately"""
2184,192846657,"b'Yes, please.'"
2184,192846766,b'I prefer GetControllerMapping < T > ()'
2184,192847467,b'No behavior change if CheckIfValid fails?'
2184,192847501,b'No behavior change if CheckIfValid fails?'
2184,192848086,"b'It feels really odd to have a button described as an axis. I can understand the trigger as it could tell you how far it was depressed, but a basic button?'"
2184,192848487,"b'Could we possibly rename this from AxisType to ControlType? That would allow us to have basic buttons, axes, analog triggers, etc.'"
2243,192848754,b'Most of this file was a duplicate of ReflectionExtensions.cs.  I moved the methods needed there.'
2243,192849128,b'The reason was to eliminate a platform specific block.\r\n'
2243,192849446,b'How did the serialization break? This should be returning the same string as the other version.'
2184,192860585,"b'We should consider at least ""Select"" as a default as that allows users to click and should be available for all controllers (including hands and simple clickers)'"
2184,192892990,"b'Nice find, Kurtis (aka @keveleigh)!'"
2184,192897956,"b'I can live with it, then :)'"
2245,192928620,"b""Plus, that's an odd name. If we need a second SolverHandler, I would prefer that it have a name that implies its purpose."""
2245,193145423,b'I like SecondaryTrackedObjectSolverHandler.'
2184,193195899,"b""I'd like to avoid boxing if at all possible... It can generate enough garbage to force a GC very quickly."""
2245,193458683,"b'actually, as is the ""safer"" cast in that it ensures that the cast does not throw in the cases where it is invalid. I would much rather check for a null return than have an exception handler.\r\n\r\n'"
2245,193539963,"b'I agree we should be consistent. ever since the as keyword was added to C#, I have preferred to use it over a standard cast syntax\xe2\x80\xa6 except with non-nullable value types (where it cannot be used). exceptions caused by bad casts are some of my least favorite ones to encounter.\r\n\r\nI am currently in the process of updating the vNext coding guidelines and am happy to add a section on how to cast types.\r\n\r\nI am also happy to take on updating the code base (both master and vNext) to conform to the agreed style ( variable as Type, right? :) )'"
2283,194820100,b'These were added when I noticed that VS was telling me that the namespace was not being used when building for IL2CPP and removing it blocked building with .NET backend.'
2283,194820215,b'I can add that. I was also planning on moving Other above Tracked so that the value does not change.'
2245,194895027,b'The namespace here should probably be HoloToolkit.Unity.Examples.Utilities'
2245,194896252,b'Should this live in the Solvers folder?'
2245,194896415,b'SwapVolume -> SolverSwapper?'
2245,194896773,b'what should happen if the object does not have the SolverHandler component attached? should at least log a warning'
2245,194897239,"b""are hands not supported? shouldn't this be supported on HoloLens?"""
2245,194897555,b'nit: can we get a more descriptive variable name?'
2245,194897714,b'Wrap in #if UNITY_WSA'
2245,194898247,"b'Handeness looks like the only part that requires UWP, is that correct?'"
2245,194898653,b'nit: extra line'
2245,194899119,"b'should we add [Range(0f, 1f)]?'"
2245,194904148,b'fair enough'
2245,194904870,b'works for me'
2293,195187376,b'.. -> .'
2293,195245974,b'We all make mistakes :)'
2299,195247751,b'I REALLY like the idea of typing the interaction mapping. much easier to read and consume'
2299,195248077,"b'would be great to add a check that TReadingType is compatible with the specified AxisType. if we are certain that this is internal MRTK _Core code only, then an Assert will do.'"
2299,195248246,b'Love how much easier to read this is'
2299,195249554,b'This just struck me... it is very possible that a given controller may have multiple controls (ex: Game Controllers generally have two thumbsticks) for a given DeviceInputType\xe2\x80\xa6 is this going to bite us?'
2299,195801248,b'We could probably make it just currentReading != newValue.\r\nEspecially since value types can not be null.'
2299,195803425,b'not sure this should be populated yet. Gesture controllers need some more thinking.'
2299,195803704,b'Does OpenVR support touchpad touch?'
2299,195803882,b'Need TouchpadPress also'
2299,195804014,b'Also need TouchpadPress'
2299,195804258,b'Do we need this? Xbox controller does not have a touchpad.'
2299,195804339,b'Do we need this? Xbox controller does not have a touchpad.'
2299,195804429,b'here is where we need two thumbsticks.'
2299,195804478,b'we will also need two triggers'
2299,195804676,b'Xbox controller has 8 buttons that can be used. it also has a d-pad that we should be sure exists in our DeviceInputType.'
2299,195804730,b'ThumbstickPress needed (x2)'
2299,195804877,"b""let's not implement the OpenXR controller until the spec has been completed / published"""
2299,195804943,b'Need ThumbstickPress'
2299,195865832,b'sorry about the duplication :)'
2299,195878289,"b'I did some testing (please forgive the comment spam and subsequent deletions)\xe2\x80\xa6 The following feels easier to read and should accomplish the same thing:\r\n\r\n**Changed = (currentReading != null) ? !currentReading.Equals(newValue) : (newValue != null);**\r\n\r\nMy results showed the following:\r\nb1 (false) != b2 (true) True\r\nb1 (false) != b3 (false) False\r\n\r\nt1 (43, 7.15) != t2 (17, 4.3) True\r\nt1 (43, 7.15) != t3 (43, 7.15) False\r\ntn1 (null) != tn2 (null) False\r\ntn1 (null) != t2 (17, 4.3) True\r\nt1 (43, 7.15) != tn2 (null) True\r\n\r\nWhich matched the output from the version in the PR'"
2315,196131206,b'why the casing changes?'
2316,196275133,b'also depends on Microsoft.MixedReality.Toolkit (or do dependencies chain?)'
2316,196275360,b'we can probably remove this as there is nothing of consequence here to filter out'
2316,196275519,"b""Let's remove this file. The core toolkit will be distributed as a single package."""
2318,196861851,"b'this seems reasonable, mostly to avoid too much churn if we determine that the input system assembly needs to access these classes.'"
2245,196869429,"b'In vNext, solvers should work regardless of controller (ex: hands, clicker, etc)'"
2316,196955361,b'No need. Thanks!'
2316,196955437,b'No need!'
2345,197885867,"b""I still think it's easier to add visibility than to take it away once we release (even an Alpha)."""
2345,197888712,b'These calls are all the same. why not just check that the AxisType is supported and throw if not... maybe something like:\r\n\r\nif ( ((uint)mappings[i]AxisType < (uint)AxisType.None) || ((uint)mappings[i].AxisType > (uint)AxisType.SixDof)) \r\n{ throw new ArgumentOutOfRangeException(); }'
2345,197889128,"b'We could also add a ""Count"" enum value to AxisType for easier erxpansion then the second check would become:\r\n\r\n((uint)mappings[i].AxisType >= (uint)AxisType.Count)\r\n'"
2345,197889329,b'I like this!'
2345,197889697,b'It still feels odd to have AxisType.None essentially map to AxisType.Raw.... None feels either invalid or a synonym for Raw (and therefore unnecessary)'
2345,197893181,"b'Not 100% true. If the controller is turned on when it cannot be seen by the HMD, it will be detected, but not tracked (yet). This is likely true for any SixDof controller'"
2345,197917685,"b'We can default to false and then, in Update() when TryGetPosition succeeds, change the ControllerState.  We should confirm this behavior, of course. :)'"
2345,197918254,b'These calls are all the same. why not just check that the AxisType is supported and throw if not... maybe something like:\r\nif ( ((uint)mappings[i]AxisType < (uint)AxisType.None) || ((uint)mappings[i].AxisType > (uint)AxisType.SixDof))\r\n{ throw new ArgumentOutOfRangeException(); }'
2345,197918528,b'Do we no longer need a clicker controller class?'
2345,197918944,b'Replaced by OpenVRDeviceManager?'
2345,197919381,b'OpenXRDeviceManager'
2351,198244019,b'When would null be valid for controller? (in both Detected and Lost events)'
2351,198244327,b'RaiseSourceRotationChanged()'
2351,198244529,"b'HandleEvent(sourceRotationEventData, OnSourceRotationChangedEventHandler);'"
2351,198245011,b'RaiseSourcePoseChanged()\r\nposition -> Pose'
2351,198245180,"b'HandleEvent(sourceTransformEventData, OnSourceTransformChangedEventHandler)'"
2351,198245385,b'Recommend removing this in favor of the bool in #2347 to simplify checking if a device is tracked.'
2351,198245827,b'Recommend  removing this until we land the decision on #2347 '
2351,198246957,"b""I'd rather see Rotation be it's own event / data to avoid confusion (orientation != position)"""
2351,198247106,"b""I'd rather see SixDof/Pose be it's own event / data as it is more than just position."""
2351,198247280,"b'I recomment using Transform as that is what SixDof is, the position AND rotation.'"
2351,198247432,"b'Though it is lacking scale that is commonly in a transform, so maybe pose is the best name :)'"
2351,198247845,b'Dont see how you can detect / lose a null controller'
2351,198295010,b'Do we get detected | lost events in those cases?'
2351,198551014,b'I see where you are renaming PositionEventData to PoseEventData. I like that!'
2351,198551920,b'What if we made the data in the event args nullables? We can then respond to the pose changed event and check by saying:\r\nif (twoDofData.HasValue) { \xe2\x80\xa6 }\r\nif (threeDofPositionData.HasValue) { \xe2\x80\xa6 }\r\netc.'
2351,198882755,b'shouldnt this line be inside the UNITY_WSA condition?'
2351,198883310,b'Other should follow None for easier expansion if needed'
2351,198883359,b'Not needed with #2347 (we may need to support approximate orientation on some platform)'
2351,198883808,b'I like this!'
2351,198885247,"b'Recommend \r\npublic MixedRealityPose(Vector3 position) : this(position, Quaternion.identity) { }'"
2351,198885404,"b'Recommend \r\npublic MixedRealityPose(Quaternion rotation) : this(Vector3.zero, rotation) { }'"
2351,198885634,"b'Not fond of the name ""ZeroIdentity"" can we call it ""Neutral"" or something similar?'"
2351,198886120,b'Do we also need/want AddControllerMapping() and RemoveControllerMapping()?'
2351,198887787,b'Recommend removing as #2347 handles this and we anticipate there may be a platform that has approximate orientation as well (which would break the hierarchy implied here).'
2351,198889412,b'3DoF is position or orientation. This feels more like a 6DoF handler. Can we rename this method as On3DoFDataChanged and remove OnRotationChanged? I think  we may want to add a hint to the eventData object.'
2351,198906587,"b'Please ignore the above... in taking offline with @keveleigh, I get the value of the two methods.'"
2212,199207238,b'This was merged a month ago.... Please open a new issue so we can track the needed change(s)'
2351,199209097,"b'I can live with that, it was just a touch confusing at first'"
2369,199546811,"b""I can see removing TrackingState in favor of reporting PositionAccuracy and RotationAccuracy.\r\n\r\nThis would allow for Stephen's desire to have a hierarchical enum as well as keep positional and rotational tracking separate.\r\n\r\nI can spin up a commit today. """
2371,199565015,b'Which is easy for developers to do. I like having this check.'
2369,199565138,"b""Folding TrackingState and TrackingAccuracy is causing more churn than I had hoped... I'm working my way through it. It's not bad, just a little deeper than anticipated."""
2369,199579943,b'Simplified this A LOT. By removing accuracy levels in favor of a bool (controller position only) for isApproximate.'
2376,199622304,b'Is this really an assertable condition? Arent we building in the flexibility for NOT using the input system?'
2376,199623066,b'Then is it even possible to get into this state? Sorry if I am being dense today :)'
2376,199623777,b'Thanks for clarifying... looks good to me.'
2398,200405467,b'why does this value differ from VelocityThreshold? Same question wrt MovementThreshold. Should these be ranges? Should the private consts be default values?'
2398,200411435,b'why did this shift from a generic representation to be specific to Windows Mixed Reality controllers?'
2398,200415352,b'It appears that VelocityThreshold is used as a min check:\r\n```\r\nif (HeadVelocity.sqrMagnitude < VelocityThreshold * VelocityThreshold)\r\n{\r\n    HeadVelocity = Vector3.zero;\r\n}\r\n```\r\nPerhaps rename as such and also rename idleHeadVelocityThresh to headVelocityThreshold and serialize with a range?'
2398,200431062,b'maxHeadVelocityThresh needs a range as well. Also need to verify that max >= min.'
2402,200503525,"b""Agreed. Just not sure what the correct path is for platforms that lack specific features... Is it Unity's job our ours to handle these types of things."""
2402,200802421,"b'To be sure I understand this feedback, adding this will let users select from alternative implementations (perhaps their own). Am I thinking right?'"
2402,201100723,"b'It looks like @Jarodshow is on to something:\r\n\r\nTestObject to = null;\r\nConsole.WriteLine(""TestObject != null              : {0}"", to != null);\r\nConsole.WriteLine(""TestObject?.InnerObject != null : {0}"", to?.InnerObject != null);\r\n\r\nResults in:\r\n\r\nTestObject != null              : False\r\nTestObject?.InnerObject != null : False'"
2437,202107660,b'No mappings for Windows Mixed Reality Motion Controllers?\r\n'
2437,202107864,b'What is a negative vs positive button?'
2437,202107997,b'JoystickAxis -> ControllerAxis?'
2437,202108425,b'targetController.Type -> targetController?.Type'
2437,202108490,b'targetController.Type -> targetController?.Type'
2428,202109152,"b""if we are using it externally, let's make it a static readonly string so that the reference is fetched and not the literal constant."""
2428,202109545,"b'This is based on the changes that went into Dev_Working_Branch and back into june18_dev. Part of the gap analysis / keeping things in sync. If this change is incorrect, we should definitely fix it here and in june18_dev.'"
2437,202109715,b'nice catch!'
2437,202110063,"b'Gotcha. We may want a comment to that effect (minus ""terrible"" :) )'"
2449,203422898,b'I originally got confused as to why nothing is done when focus IS required (until I read the doc comments for InputSystemGlobalListener). Perhaps a quick comment here would help clarify for others.'
2449,203422999,b'doc comments'
2449,203423049,b'doc comments'
2449,203424688,"b'This is described as action eventS, yet there is only one pair defined... do we *really* want to support registering multiple events on a single action or should this be a collection\r\n\r\n(same with the other two IAEP fields)'"
2449,203424724,"b'@SimonDarksideJ, these look to be ONLY accessible via the inspector.\r\n@StephenHodgson, should these be accessible via script?'"
2449,203425041,b'this implies that there IS only one event per action... onPointerUpActionEvents should be singular'
2449,203425739,"b'I know this is not new to this PR, but do we really NOT want folks to be able to add keywords via script? Also, why an array instead of a List<>?'"
2449,203425897,b'Should be changable via script.'
2449,203426134,b'Shouldnt there be handlers for focus enter/exit?'
2449,203427609,"b'Let\'s do a custom GetHashCode implementation...\r\n\r\nEx:\r\nreturn string.Format(""{0}.{1}"", Id, AxisConstraint).GetHashCode();'"
2449,203447922,b'duh... sorry'
2449,203448192,b'was reading quickly.... sorry'
2457,203555428,"b""I'm not sure ?. is available with the legacy C# compiler (supporting .net 3.5). please change this to a traditional null check (in your Update() change as well).\r\n\r\nthx! """
2457,203555528,b'haha! you beat me to it!'
2455,203813073,"b"">  (meaning out of the box, the core does nothing but start an empty scene)\r\n\r\nI'm with @SimonDarksideJ on this one... I believe we will want to move our implementations back into the core."""
2455,203813456,b'There are very likely going to be devs that want our base implementations and *nothing else* from the SDK packages.'
2466,203840287,b'I can do that'
2466,203840313,b'sounds good'
2455,203884558,b'except that the sdk packages will likely contain much more than they want'
2455,203884681,"b""let's keep the default managers (input, boundary, etc) in the core and everything else in an sdk package"""
2467,203885805,"b'destroying the parent seems risky.\r\n\r\nshould we just leave what we find alone if it\r\n\r\nalso, we should warn users if we find more than one pre-existing spatial mapping manager\r\n\r\n'"
2455,203889565,b'that sounds like a great idea. keep all of the defaults in one place\r\n'
2467,203914991,"b""I'd rather have a warning of too many spatial mapping managers and leave the existing one(s) untouched"""
2469,203925671,"b'Matches some of our other utils classes (ex: MathUtils), but I am happy to change'"
2469,203931794,"b""It's just a high number (the floor should never be 1000m above the origin), don't think it really needs to be configurable. I *could* make the number bigger :)"""
2469,203931899,b'I got this from the june18_dev branch version. i can reformat the comment'
2469,203931918,"b""sounds good. i'll change this one."""
2469,203932384,b'missed deleting this after I moved files around..'
2469,203932396,b'missed deleting this after I moved files around..'
2469,203932441,"b""thx for the suggestion. i'll take a look"""
2455,204097332,"b'@SimonDarksideJ, that makes complete sense.'"
2469,204104130,"b'extra line has been removed, not sure why GitHub is showing it as unchanged'"
2455,204110781,"b'@StephenHodgson, as does your comment...\r\n\r\nI am leaning more and more to moving the default configuration files to _Core to live beside the default managers.'"
2455,204156088,b'How about we table this PR until after Alpha and then spend the appropriate amount of design / discussion time to ensure we get it right for Beta.'
2455,204176168,"b""That makes sense. Let's get this in and shuffle next week (or right after Alpha). We are a monolithic package for this release anyhow :)"""
2469,204222129,"b'if memory serves correctly, Boundary.configured was returning false for UWP.'"
2469,204222132,"b'if memory serves correctly, Boundary.configured was returning false for UWP.'"
2469,204222140,"b""I'll double check when i am back at that machine."""
2469,204222151,b'The caching was to save some typing :)'
2469,204222166,"b""@SimonDarksideJ, I'll take a look at that approach."""
2475,204224463,"b'What is ""Near Touch"" for a thumbstick?'"
2475,204224478,"b""Shouldn't we have Hand as a supported controller?"""
2475,204224499,b'if (controller?.Enabled)'
2475,204224506,b'missing { }'
2475,204224539,b'missing { }'
2469,204227246,"b""Here's how I see the input system being accessed...\r\n\r\n>+        private IMixedRealityInputSystem inputSystem = null; \r\n>+        protected IMixedRealityInputSystem InputSystem => inputSystem ?? (inputSystem = MixedRealityManager.Instance.GetManager<IMixedRealityInputSystem>()); \r\n\r\nThis looks pretty close to what I originally had (minus the ?? check).\r\n\r\n>Instead of using MixedRealityManager.Instance? let's confirm the MR Manager is active else we bail early.\r\n\r\nOther than checking the instance, how do you suggest checking that the manager is active? do you mean if the monobehavior is enabled?\r\n"""
2469,204458617,"b'Question: Should SDK/Example scripts be checking the scene for the MixedRealityManager component? Isnt it more efficient to check the instance parameter (is static, would be null if not in the scene).'"
2469,204469787,b'nevermind. I think I have what you were asking for in my latest commit.'
2469,204513875,"b""missed that I believe.... i'll have to fix that"""
2469,204516782,"b""i thought i ported most of it, though... hopefully i'm not missing too much"""
2469,204517152,b'nope. compiler is not happy with that. :)'
2469,204574649,"b""There's not THAT much overhead and -1, in theory is a valid floor offset. I'd rather keep the nullable so that we can know that no floor was found"""
2469,204835501,b'Should be handled now.'
5594,313533269,b'Maybe we can do that when this feature is upgraded to be part of regular namespace.'
5594,313540257,"b'> > Time.deltaTime [](start = 33, length = 14)\r\n> \r\n> Does this imply that CalculateDwellProgress must be called exactly once per frame? If so, then maybe do the math in Update() instead?\r\n\r\nNot necessarily. It is up to the caller to determine how often to make this call.'"
5594,313543778,b'> ```cs\r\n> dwellProfile = ScriptableObject.CreateInstance<DwellProfile>();\r\n> ```\r\n\r\nThat will create compile issue since the  ScriptableObject.CreateInstance returns a scriptable object. '
5594,314102378,"b""Note that there already is a PointerUnityEvent, so when that day happens we'd still have to reconcile that.\r\n\r\nIf you want to avoid that conversation you can also go DwellUnityEvent (which names it after the situations in which it's used, rather than what it represents). It's still not GREAT exactly but could be a reasonable tradeoff"""
5594,314125680,"b'>DwellIntended, [](start = 12, length = 14)\r\n\r\nIt might be worth adding docomments to this enum to better explain the transitions and how they work:\r\n\r\ni.e. the state machine is:\r\n\r\nCurrent State       |     Valid Transitions\r\nNone                    |  FocusGained\r\nFocusGained       |  None\r\nFocusGained       |  DwellIntended\r\nDwellIntended    |  DwellCanceled\r\nDwellIntended    |  DwellStarted\r\nDwellCanceled   |  None\r\n\r\nAlso in particular, it would be helpful to explain the term ""DwellIntended"" - the others feel like they\'re relatively clear\r\n'"
5594,314125987,"b"">Mathf.Clamp((float)(dwellProfile.TimeToCompleteDwell - FillTimer) / dwellProfile.TimeToCompleteDwell, 0f, 1f); [](start = 31, length = 110)\r\n\r\nNit: Make this a private helper (because it's used twice in the context of this getter)"""
5594,314409177,"b"">break; [](start = 24, length = 6)\r\n\r\nIt's weird seeing no return here, given that there are returns in other locations. - Maybe add a return to be consistent, or remove the other ones """
5594,314410444,b'+1\r\n\r\n---\r\nIn reply to: [313148556](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313148556) [](ancestors = 313148556)'
5594,314414563,"b'>long [](start = 41, length = 4)\r\n\r\nNit: What are the units on this, or is it unitless? (If unitless, documenting that it is unitless is helpful)'"
5594,314416676,"b'If there is already an existing PointerUnityEvent, can we just use that? Or is it not a UnityEvent<IMixedRealityPointer>? #Resolved'"
5594,314430471,"b'Ah, this was a nit\r\n\r\n---\r\nIn reply to: [314409177](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r314409177) [](ancestors = 314409177)'"
5594,314430701,"b'>Cached pointer reference to track focus events maps to teh same pointer that initiated dwell [](start = 12, length = 92)\r\n\r\nCached pointer reference to track focus events maps to the same pointer that initiated the dwell.'"
5594,314430834,"b'>dwell profile settings [](start = 77, length = 22)\r\n\r\nIs this the same as the pointer variable above?'"
5594,314431451,"b""Does the order matter here? If the caller asks for the current state, they will still see that it's in the FocusGained state.\r\n\r\nOr is that the intent (in which case having a comment saying that this is the general pattern would also help to provide a better understanding of the mechanics of how these things are used)"""
5594,314431868,"b""What I mean by this is, I'm assuming DwellIntended gets invoked sync here, which means if the caller tries to ask this dwell handler what state its in (because maybe it's calling some common code that is not aware it's being called from DwellIntended) this could be weird maybe\r\n\r\n---\r\nIn reply to: [314431451](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r314431451) [](ancestors = 314431451)"""
5594,314433661,"b"">(focusDuration - dwellProfile.DwellIntentDelay) [](start = 78, length = 47)\r\n\r\nNit: This section is interesting because it tracks the current time in the current phase - you don't need to do this, but from a readability perspective it would would easier to read to have something like:\r\n\r\nGetTimeInCurrentState() - which would then have a cleaner/more readable thing in these if statements, and then also have a single helper where it's clear that each of these operations (i.e. focusDuration - whatever - whatever) is clear that it's how you calculate the time in each state."""
5594,314434585,"b'>CurrentDwellState = DwellStateType.None; [](start = 24, length = 40)\r\n\r\nIt feels weird that a function called UpdateFillTimer will also update the current dwell state - also interesting because subclasses could forget to update this dwell state change.\r\n\r\nIf this is intended to address a specific issue, it might be worth having a comment about what this is for'"
5594,314436333,"b"">focusEnterTime = focusEnterTime.AddSeconds(dwellProfile.TimeToAllowDwellResume); [](start = 20, length = 80)\r\n\r\nCan you add a comment about why focusEnterTime isn't just when OnFocusEnter called?"""
5594,314437922,"b'>MinValue [](start = 45, length = 8)\r\n\r\nOut of curiousity, why does this use MinValue (even though the default ""no value"" is MaxValue when it gets initialized way above?)'"
5594,314460813,"b'The existing UnityPointerEvent is public class PointerUnityEvent : UnityEvent<**MixedRealityPointerEventData**> { } \r\nso it is a different type. i will rename this one, and put it in a separate to follow MRTK coding guidelines.'"
5594,314462512,b'That is a good idea. by documents do you mean in md files or in code comments ?'
5594,314470806,b'The CurrentDwellState  is a protected variable and so the caller does not have access to its value. But i think it is good to invoke the events after state transitions for consistent pattern. '
5594,314472590,b'my oversight. :('
5594,314474828,b'updated the comment with better description'
5594,314496065,"b'Yes. Depending on the ""Dwell experience"" that people want, they might want to update this based on desired experiences.'"
5594,314877387,"b""Just code comments - I think that they're generally helpful here and then when we get around to doing MD files we can just XREF to these code comments"""
5594,314877655,"b'Yeah sorry, doccomments == the <summary> type code comments that generate stuff through docfx.\r\n\r\ncomments = regular code comments\r\ndocumentation markup stuff = MD file stuff'"
5594,316874784,"b'Yeah it is ok for the deriving class to ""forget"". In most dwell variations I have seen the DwellCanceled state can transition to None or Started based on conditions. Those conditions can vary based on the profile supplied to the implementation. It can be left up to the developer to decide what state transition they want.'"
5594,316878214,"b'Should i rename ""DwellIntended"" to ""DelayedHover"" ? (i have received similar feedback from other folks in MRW, that DwellIntended is not clear enough terminology)\r\n\r\n---\r\nIn reply to: [314125680](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r314125680) [](ancestors = 314125680)'"
5594,316878876,"b""I feel this is clear enough... marking as Won't Fix unless you have strong feelings about this."""
5594,317217787,"b""DwellProfile is a ScriptableObject, and CreateInstance<T> specifically returns a T. If there is a problem, I'm not understanding what it is."""
5594,317224065,"b'Oh wait, it looks like despite the above comment you did actually change this. Re-resolving. \xf0\x9f\x99\x82'"
5594,317826604,b'DwellIntended is fine by me - I think that just adding the comments is really valuable and helps provide information on how things work'
5594,317827047,"b'>This picks up the same unity as TimeToCompleteDwell [](start = 86, length = 51)\r\n\r\nNit: I\'m not really sure what this sentence is saying (i.e. it it supposed to be ""the same value as TimeToCompleteDwell? or that Unity sees the same as..."")'"
5594,313152134,"b""I would expose these properties as a `TimeSpan`, as there is no ambiguity as to the unit. You have the unit documented as seconds in the tooltip, but to retain this understanding throughout the code, you'd have to basically replicate the comment that the unit is seconds everywhere. Plus, if you ever decided to change the unit on the fields, you'd have a lot of other code to update. I would do this instead:\r\n```c#\r\npublic TimeSpan DwellIntentDelay => TimeSpan.FromSeconds(dwellIntentDelay);\r\n```"""
5594,313498270,"b'>dwellTriggerPointerType [](start = 32, length = 23)\r\n\r\nDo you think users of this feature may ever want to allow dwells with more than one input source type?  If so, then consider making this an array. #Resolved'"
5594,313500718,b'This parameter is not needed.  You can just set timeToAllowDwellResume to 0. #Resolved'
5594,313526407,"b'No. This is meant to support only 1 type of input source,\r\n\r\n---\r\nIn reply to: [313498270](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313498270) [](ancestors = 313498270)'"
5594,313529862,"b""I think there should be a period of time after dwell completion where new dwells are not allowed on the same item.  Is this accounted for anywhere?  Or maybe it's just that as currently coded, you have to focus off then back on again to start a new dwell after completing one?  Maybe that's fine. #Resolved"""
5594,313530364,b'Yes you have to focus of and then focus back on the target to trigger a fresh dwell.'
5594,314412139,"b'>feedback is started to be shown [](start = 47, length = 31)\r\n\r\nSome of these comments are interesting because they suggest feedback/UI, when this portion of the code is designed to be agnostic of that and more about the state transitions - as such, it might be best to keep language here scoped to the data model underlying, instead of the higher level experiences that get built on top of that.\r\n\r\nOtherwise, the natural question is ""what feedback""? The answer is, there\'s no feedback in this code, and you have to build it yourself on top of this.'"
5594,314412723,"b"">timeToTriggerDwellInSec [](start = 53, length = 23)\r\n\r\nI think that this word needs to be updated (it seems like it doesn't exist anymore here)"""
5594,313153755,"b""Should samples be in a samples project/assembly so they don't end up in the core MRTK distribution? #Resolved"""
5594,313162365,"b'I personally find this `ButtonExecute` method a little confusing. For me it would be easier to understand if we just kept it as `DwellCompleted` and the derived classes just override that method. It threw me off because I thought `ButtonExecute` was going to click a button or something, rather than just drive visuals corresponding to dwell completing.'"
5594,313534236,"b""> Should samples be in a samples project/assembly so they don't end up in the core MRTK distribution?\r\n\r\nNot sure. @keveleigh  thoughts?"""
5594,313542998,"b'> I personally find this `ButtonExecute` method a little confusing. For me it would be easier to understand if we just kept it as `DwellCompleted` and the derived classes just override that method. It threw me off because I thought `ButtonExecute` was going to click a button or something, rather than just drive visuals corresponding to dwell completing.\r\n\r\nyeah ButtonExecute is implementing the ""what actions do i perform when this button is clicked"", not doing anything related to dwell visuals :)\r\nButtonExecute is what will be bound to the unity button\'s onclick event handler.'"
5594,314413486,"b'Yep, these should be in MixedRealityToolkit.Examples folder.\r\n\r\nIn general I would just move all of these things to the MixedRealityToolkit.Examples folder\r\n\r\n---\r\nIn reply to: [313534236](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313534236) [](ancestors = 313534236)'"
5594,313156541,b'Seems like this could be simplified by doing something like:\r\n```c#\r\nswitch (currentDwellState)\r\n{\r\n    case DwellState.DwellCanceled when dwellProfile is DwellProfileWithDecay customDwellProfile && customDwellProfile.AllowDwellDecayOnCancel:\r\n        // Do your custom decay stuff\r\n    default:\r\n       return base.CalculateDwellProgress();\r\n}\r\n```'
5594,314438644,"b""Corresponding question on DwellHandler (around there being a state transition in the base class, that's missing in this one)"""
5594,316857577,"b""Can't use this syntax since some MRTK projects do not use c#7 yet :(\r\n\r\n---\r\nIn reply to: [313156541](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313156541) [](ancestors = 313156541)"""
5594,317212125,"b'Is MRTK trying to support <= Unity 2018.3? Everything 2018.3+ supports C# 7.\r\n\r\n---\r\nIn reply to: [316857577](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r316857577) [](ancestors = 316857577,313156541)'"
5594,314439415,"b'>isDwelling = false; [](start = 12, length = 19)\r\n\r\nNit: I think this can just call base.DwellCancelled right? I think it does the same thing'"
5594,314439580,b'Same-ish comment here (I think that this function could just be:\r\n\r\ndwellVisualImage.transform.localScale = Vector3.zero;\r\nbase.DwellCompleted(pointer);'
5594,313530551,"b'>dwellVisualCancelDurationInFPS [](start = 22, length = 30)\r\n\r\nDo you mean in frames? #Resolved'"
6321,337496746,b'do we need a scale constraint in the one hand move update?'
6321,337497211,"b'> !smoothingActive || lerpTime == 0f [](start = 45, length = 35)\r\n\r\nnit: put parenthesis around condition to make it easier to read'"
6321,337497300,"b'>!smoothingActive || lerpTime == 0f [](start = 50, length = 34)\r\n\r\nnit: put parenthesis around condition to make it easier to read'"
6321,337501575,"b""Yeah, some scale constraints may affect an object's scale without the user explicitly scaling the object themselves. For example, MaintainApparentSizeConstraint (which I added to demonstrate and test this) scales an object based on distance from the camera."""
6424,340749905,"b'Do we want to make this new behavior optional? Or is the presence of the rigidbody now the ""opt-in"" for this feature?'"
6424,340753076,"b""The way I see it, this beahviour was already opt-in upon attaching a rigidbody. It just wasn't working as intended.\r\n\r\nWe can make it opt-in if that's preferable."""
6424,340755094,"b"">was already opt-in upon attaching a rigidbody. It just wasn't working as intended.\r\n\r\nThat works for me!"""
6875,357289086,"b""Would it be possible to leave a comment stating what sort of things should be added here in the future, vs being made separate constraints? i.e. if we're going to cull this and leave stuff in here, we should write down our philosophy for what this should be compared to constraints."""
6924,358932526,b'Can these public enums be moved [into their own files](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files)?'
6924,358932751,"b'nit: this region has some public properties as well, for those fields'"
5955,324821546,"b'Looks like you removed RotateAboutObjectCenter, but actually I found that very useful for rotating things with one hand at a distance. I noticed that the behavior is broken in the 2.0 release, and filed #5957. Maybe you can fix #5957 in the new manipulationhandler, and we can discuss whether #5957 needs to be fixed for the old one (I posted a workaround that people can do in the mean time).'"
5955,324822118,"b""Note that doing #5957 core idea is for far manipulation you need to use the grip pose instead of the pointer pose -- the grip pose rotates with the palm, but the pointer pose uses the hand ray. For motion controllers it's similar -- grip pose is the rotation of the 6dof where pointer rotates based on where the 6dof is 'pointing' (not the same as grip pose)."""
5955,324822438,b'Coding guidelines say to have private fields and public properties.'
5955,324911007,"b'How about ObjectManipulator instead of PrimitiveManipulator? PrimitiveManipulator sounds like it only works with primitives like sphere, cube.'"
5955,324912040,"b'Since we are refactoring, could we also make smoothing params consistent with Solver? On Solvers like Overlap and RadialView, there\'sa  ""smoothing"" checkbox, and then a ""move lerp time"" and ""rotate lerp time"" field. See Solver.cs:\r\n\r\n```\r\npublic static Vector3 SmoothTo(Vector3 source, Vector3 goal, float deltaTime, float lerpTime)\r\n        {\r\n            return Vector3.Lerp(source, goal, lerpTime.Equals(0.0f) ? 1f : deltaTime / lerpTime);\r\n        }\r\n```'"
5955,324913347,"b""This method actually doesn't seem so different from ManipulationHandler. Are you sure you can't just change the inspector? Seems like the only difference is that the HandMovementType and TwoHandManipulation type are flags. What else is different that requires us to have a new class?"""
5955,324913682,"b"">eventData.used [](start = 21, length = 14)\r\n\r\nI think this is also an existing issue, but consider moving this !eventData.used check to the if statement at the beginning of this function (i.e. we don't do anything interesting if the eventData is used - I guess we MIGHT re-mark it as used, but since it's already used, that's also a no-op)."""
5955,324914882,"b'>!manipulationType.HasFlag(HandMovementType.OneHanded)) [](start = 28, length = 54)\r\n\r\nI think that this line makes some assumptions about ordering with the else if statement down below (i.e. that the one handed manipulation thing would have been engaged first - totally valid, though this is also somewhat of a state machine in itself - thoughts on just having:\r\n\r\n```csharp\r\nif (!isManipulationStarted)\n{\n  HandleManipulationStarted();\n}\r\n```\r\n\r\n'"
5955,324915287,"b"">manipulationType.HasFlag(HandMovementType.OneHanded) && handsPressedCount == 1 [](start = 16, length = 78)\r\n\r\nThere's a decent amount of copy/paste instances of this + the two hand case (i.e. twohanded + > 1) - consider having a helper function like IsOneHandedManipulationActive() or IsTwoHandedManipulationActive() to avoid the copy paste."""
5955,324915398,"b""Active actually may be a bad word because it's also used in the pervious function to also start the manipulation as well, but yeahhhh\r\n\r\n---\r\nIn reply to: [324915287](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324915287) [](ancestors = 324915287)"""
5955,324915591,"b""Or maybe not, maybe this isn't used too much down below (still reading)\r\n\r\n---\r\nIn reply to: [324915398](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324915398) [](ancestors = 324915398,324915287)"""
5955,325034272,"b""Ah ok, I removed because I had only observed the broken behaviour. I'll fix and add this option back. """
5955,325037331,"b""Yeah, there isn't a huge amount of difference yet. I separated out a lot of WIP changes so that I'm not pushing everything into one monolithic PR. I figured that it's better to separate these classes now so that we can make the changes we wanted to make in the next couple of iterations without having to worry about breaking changes.\r\n\r\nI was going to look at constraints next, and making them consistent with BoundingBox. I already have most of the changes locally."""
5955,325186743,b'there should be /// comments for all the public fields as well so they show up in github.io'
5955,325187239,b'(if this is still subject to change you can add them in another PR)'
5233,301537940,b'add more doc'
5233,301733191,b'done :)'
5233,301765747,"b"">dataProviderInstance.Initialize(); [](start = 16, length = 34)\r\n\r\nDo you have any guidance on why the input system has to call this as part of register data provider, but this isn't part of the base register data provider implementation?"""
5233,301766159,b'It might be worth adding a comment stating that these lines are order dependent (I assume that the focus provider/raycast provider require the input system already having been registered?)'
5233,301781227,"b'you know, that should likely be pushed into the base class... good catch!'"
5233,301791072,b'fixed'
5233,301538883,b'more doc? '
5233,301733306,b'done :)'
5233,301682765,"b'what does a base service manager do, what is it for? more doc?'"
5233,301684003,b'would be good to have documentation for all the public methods and properties'
5233,301714819,b'These methods are documented as part of the IMixedRealityServiceRegistrar interface :)'
5233,301715553,"b""i'll write something a little more descriptive :)"""
5233,301733246,b'done :)'
5233,301754981,b'Nit: Add an extra line after this.'
5233,301755368,"b'It seems like this will new memory in every Update() call, which will lead to GC alloc pretty quickly - can we avoid doing this?'"
5233,301756073,"b""> serviceSnapshot[i]?.Update(); [](start = 19, length = 30)\r\n\r\nIs there a good reason why we would continue to store null values in registeredServices?\r\n\r\nIt doesn't make that much sense to me that we do null checks on each thing - we should just not store null values as they aren't useful."""
2513,206300237,"b""> I put them in the default download location that the package manager prompts you to place them.\r\n\r\nSorry, not sure if I am reading this right... does this mean the files are checked in? Or do they get automatically added somehow.\r\n\r\n> It's owned by Unity. Not sure if a license is required if you're using the editor to begin with.\r\n\r\nI am concerned with the license to redist the package."""
2513,206636566,b'nope. 43. hahaha!\r\n'
2519,206640418,b'why is this commented out?'
2519,206641276,b'dont care for this. what is an Other hand state? doesnt feel needed.... except to differentiate any from both.\r\n\r\nboth may actually be something very specific in the future (might not be decomposable into left and right parts).'
2502,206642917,b'foreach -> for'
2519,206666060,b'true. maybe define Both as a discrete value and Any as Left | Right | Both'
2519,206679316,"b""Still don't think we need an Other. Both also seems superfluous until we encounter a platform that has a controller that requires both hands.\r\n\r\nLet's just go with None, Left, Right and Any"""
2519,206679567,"b'BTW, Or-ing in a value of 0 still makes Both == Any'"
2519,206715073,"b""this looks really weird... shouldn't it be\r\nHighlight = 1 << 0,\r\nOverlay = 1 << 1,"""
2533,207089692,"b""shouldn't this return (TrackingState == TrackingState.Tracked)?"""
2533,207089764,"b'also, do we even need this with TrackingState being public?'"
2533,207089772,b'summary tag'
2533,207089806,b'summary tag'
2533,207090082,b'Does this mean we cannot have a pointer for each controller / hand in the scene?'
2533,207090156,"b""pointer's"""
2533,207090241,b'summary tag'
2533,207090470,b'\xe2\x80\xa6 LineRenderers => lineRenderers'
2533,207090534,b'summary tag'
2533,207090552,b'summary tag'
2533,207090626,b'summary tag'
2533,207090696,b'summary tags for the public properties'
2533,207090854,b'summary tag'
2533,207298638,b'fair enough'
2533,207298822,b'good question. I have limited experience with their controllers'
2538,207314043,b'I can split it out. '
2542,207361909,b'seems reasonable'
2542,207597912,b'it gets added to the game object that has the script attached.'
2542,207598272,"b'The boundary manager does provide this data., i cached here since it is the only portion of the boundary system we have been using. BTW, i should probably get the floor Y value from the boundary manager, so this will be changing today'"
2542,207598405,"b""it's should be, since the user can specify to hide the plane"""
2542,207598640,"b'z-fighting with the floor. I suppose we can make it configurable, but this is exactly how the original code was implemented.'"
2542,207598734,"b""no. it's up to the app. they may want to show/hide based on specific scenarios"""
2542,207723144,"b""It's a developer estimate, there is no measurement. I'll re-phrase the comment."""
2542,207723149,b'simple enough..'
2542,207723151,b'nope. missed removing that one. nice catch'
2542,207723160,"b""there's another way we can fix this... by adjusting the render order between this quad and the floor... let's file an issue for beta so we can determine the best way to address."""
2542,207723161,b'ok'
2542,207723164,b'sure'
2542,207723171,b'was following the pattern set by other inspector fields.. I can remove'
2542,207723172,b'ok'
2542,207958855,b'Tracking the offset via #2552 '
2542,207958927,"b""made this change... not sure why GitHub didn't notice."""
2542,207958987,"b""made this change... not sure why GitHub didn't notice."""
2550,207967226,b'Does this still allow OpenVR apps to work with the Windows Mixed Reality controllers when using the WMR driver for Steam?'
2545,208006969,b'nit: extra line'
2545,208012194,b'Why are we making the dev create the empty child? Seems we should dynamically create / remove automatically'
2545,208030841,b'nit: extra line'
2545,208031994,b'summary tag. should define duration units'
2545,208032151,b'nit: define above the property (better matches the rest of the code base)'
2545,208032959,b'Error message does not appear to actually describe the situation.\r\n\r\nwhat sets/clears isProcessingTeleportRequest?\r\n'
2545,208033258,"b""also, there isn't a similar check in RaiseTeleportRequest or the other related events"""
2545,208034106,b'This may be what you are looking for: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/caller-information\r\n'
2545,208036152,b'could this not be used with thumbstick rotation?'
2545,208039927,b'Doesnt Unity have a way to access these by name?'
2545,208040068,b'nit: can you move this up to the same line as the (?'
2545,208040445,b'should we add transparent versions of all of the std materials?'
2545,208042404,b'it still feels like we are not doing what the comment advertises... I am ok with cleaning this up in beta'
2545,208043599,b'#2557\r\n'
2545,208043983,b'other files in our project define backing fields before the property. ex:\r\n\r\nprivate bool exampleField = false;\r\npublic bool ExampleProperty\r\n{ \xe2\x80\xa6 }'
2545,208044215,b'> Should we? I just did this one for the teleporter cursor\r\n\r\nPerhaps a rename is more reasonable: MRTK_Default_Teleport_Cursor.mat'
2545,208045110,"b""I'm going to need to understand the intent / system better. Either way, the work item to change this is scheduled for beta :)"""
2545,208046584,b'beta issue filed'
2545,208052886,"b""let's file a beta issue to read the layer values (by name) at startup and cache their mask values.... just in case they change in a future version of Unity"""
2542,208062186,b'plx file an issue to properly implement .Equals. thx!'
2542,208062214,b'plz file an issue (task) to handle fallback.'
2542,208062381,"b""Not sure it's needed... Devs wanting to do something like this are welcome to take the demo script code and make changes."""
2545,208306089,b'#2564 '
2559,208731851,"b""Nothing is 100% decided.... let's at least get a beta task to do a cleanup pass"""
2580,209437154,b'foreach -> for'
2583,210366611,b'yep.  thanks!'
2583,210371314,b'parenting this way for teleportation support.'
2583,210371422,b'unity says SetParent is obsolete.'
2583,210392814,"b""makes sense... i'll update it"""
2583,210392897,"b'setting the layer on a GameObject needs the value, not the mask.'"
2583,210399846,"b""understood. I needed to set the mask of the boundary system visualizations so that they would not interfere with the cursor / teleporting. at least it's a one time lookup."""
2583,210422519,"b'I don\'t believe so. The boundary visualizations should behave ""transparently"", meaning that they should not interfere with cursors or other objects in the scene (like the auto-boundary in the shell)\r\n'"
2583,210441222,"b'Future proofing, in case the layer ever changes.'"
2583,210443203,b'This is a one time cost that ensures that we do not have to update.'
2583,210443278,b'Defensive coding :)'
2596,210443651,b'it will be... forgot to block comment that out'
2596,210443711,b'valid point'
2596,210443739,b'placeholder. reminding me what to implement :)'
2596,210444297,"b'In plane finding, these were used as flags to allow us to specify which types of planes to identify / keep... the new system may want that, but i am willing to return the location and dimensions of all surfaces and let the application construct whichever ones they wish.'"
2583,210444587,"b'how does this hurt perf when it is a ""done once"" task?'"
2583,210444733,b'we may be over-indexing a little on perf when we are discussing startup / one time lookups'
2583,210447320,b'I worry about how hard it would be to find these types of bugs if Unity opts to change but sure...'
2583,210448315,b'you cannot set a layer mask on a gameobject\xe2\x80\xa6 '
2597,210473222,b'IsNullOrWhitespace? Checks for empty string as well as any string containing just whitespace'
2597,210671896,"b""there is no reason why it would be... it's just my default check :)"""
2596,210974174,b'This is the layer *value* to set on objects (like we did in HTK). We cannot use a mask here.\r\n'
2596,210974373,"b'31 is just the default (same as HTK) the dev can specify whatever layer they wish in the profile. I believe *you* suggested this pattern, @StephenHodgson :)'"
2596,210974724,"b""Because you may actually want to defer observation startup to a specific point in the experience. If we disable the system in the config profile, we lose the dev's desired spatial profile."""
2596,210974820,b'I disagree (see the reply to the comment re: autoStart)'
2606,210987490,"b'for consistency with the coding style guide, this should be a property with a private backing field.'"
2606,210987911,b'nit: extra line'
2606,210988092,"b'code style: I don\'t believe we have been using ""this."" in the toolkit.'"
2606,210995135,"b""Don't need to mention the function is internal. It is marked private"""
2606,210995264,b'Similar to the earlier comment. No need to specify the visibility in the comments'
2606,210995408,b'Rename to ObjectCollectionLayoutType (or similar)?'
2606,210995768,"b'ObjectCollectionOrientationType? Or, if more generic than that, OrientationType and move to a common location'"
2606,210995951,b'Rename to ObjectCollectionSortType?'
2606,210996221,b'ObjectOrientationSurfaceType?'
2606,210996326,b'ObjectCollectionNode?'
2606,210996408,b'BaseObjectCollectionInspector?'
2606,210996454,b'nit: extra line'
2606,210996801,b'code style: public property with private backing field'
2596,211031160,"b'I intended to name this autoStartObserver (like in the HTK component) and treat it like the boundary system\'s showPlayArea, etc.\r\n\r\nEssentially, the system is up and running, but we defer the actual underlying platform behavior until the application desires it. I recommend taking a look at Holograms 230 in the Academy content for an example of autoStartObserver.\r\n\r\nFYI: we need to have a way for users to control spatial awareness as there is a performance cost associated.\r\n\r\nLook out for a detailed architecture proposal doc ""soon"".'"
2606,211064305,"b'I was just looking for ""Internal function for getting the ..."" to be changed to ""Get the ...""\r\n\r\nThere is no real need to specify the visibility in the comment (it\'s easy to see in the method signature :)'"
2568,211064520,"b'Would be nice to translate things like ""AXIS_1"" to something more easily understood. Granted, we can look up in the docs, but I don\'t generally think of ""AXIS_1"" when I think of the mouse\'s horizontal axis.\r\n\r\nWould you consider defining aliases? For example:\r\npublic const string MouseHorizontalAxis = AXIS_1;\r\npublic const string XboxLeftThumbstickHorizontalAxis = AXIS_1;\r\netc\r\n'"
2568,211064639,b'Willing to have multiple arrays (one per known controller type + a generic one)?\r\nWe can make a very readable UI by allowing users to select their controller type and then see the controls available for mapping. Ping me if you have questions on this feedback.'
2594,211064785,"b'A question was raised by a customer this week wrt the automatic implementation of inputs like touch screen. They would like the ability to completely shut off input sources that they never intend to use.\r\n\r\nSeems like we could leverage our configuration profiles to add check boxes (defaulted to checked) specifying each input type (mouse, touch screen, controller, etc.) and allow the dev to disable specific source types.\r\n'"
2594,211064803,b'Why is rails navigation checked here?'
2594,211064848,b'what if the dev wants a subset of the axes? i recommend we surface gesture axis selection to the profile'
2594,211064864,b'seems as if we are forcing apps to register for all of the gestures... they should be allowed to limit their selection (saves the recognizer unneeded work)'
2594,211064877,"b'also, when switching to the navigation recognizer, the dev wil lose hold and tap recognition in this implementation'"
2594,211064891,b'allow the developer to defer the start of the recognizer'
2594,211064904,b'this can cause BOTH recognizers to be running at the same time as it is possible tyo have the recognizers created and not started at the same time.'
2568,211065027,"b'I am not at a system that i can try this out. Are you saying that I would see ""WMR Left Controller Thumbstick Horizontal Axis"" instead of AXIS_1 in the UI?'"
2594,211065064,"b'it is possible for gestureRecognizer to be != null and not recognizing at the same time as the navRecognizer is in the same exact state.\r\n\r\nby the code here, each would be started and be running at the same time... which would result in both manipulation and navigation gestures being recognized from the same single gesture'"
2594,211065073,"b'in other words, we should never allow gesture recognizers with mutually exclusive settings (manipulation and navigation) to be recognizing at the same time'"
2594,211065088,"b'i disagree here. there are times where the developer needs multiple recognizers to exist, but to be selective about which is running when (see Holograms 211 for a great example)'"
2594,211065095,b'it would.'
2594,211065099,"b'in this case, i would say the HTK has a bug'"
2594,211065107,b'i see now'
2594,211065158,b'I believe we are having some (likely because of only talking via typing) confusion about what it means for a system vs a feature of that system to be enabled / activated. we should chat via phone or in shiproom (sometimes easier that way)'
2594,211088051,"b"">  Then why does the HTK do it?\r\n\r\nI honestly don't know,"""
2568,211088080,"b""> Without trying to get to crass, heck no.\r\n\r\nThat's not crass :)"""
2568,211088093,b'I see your point @SimonDarksideJ .\r\n'
2568,211327120,"b""feels weird to have default come first, but don't change it because of me :)"""
2619,211754851,b'can devs override this threshold? for example if they want to make an experience where the user climbs steep inclines?'
2619,211755272,b'I see distance being calculated but it is not being considered here... is that intentional? is distance a factor in whether or not a teleport should be allowed?'
2619,211767061,b'was just wondering if distance was involved in determining a valid point.'
2623,211769465,b'nice catch. thx\r\n'
2623,211778206,"b""i'd like to leave the layer name as core and do a namespace update to replace internal with core (per #2539)"""
2623,211794729,"b'For this PR, I am sticking with the current namespace truth.'"
2623,213032454,b'thanks for catching that!'
2639,213039919,b'I would comment / remove this code (entire oculus block) while awaiting guidance on images'
2639,213040112,b'I would comment / remove this code (entire touch controller block) while awaiting guidance on images'
2639,213040307,b'I would comment / remove this code (entire vive block) while awaiting guidance on images'
2639,213042559,b'this likely needs to change while we await guidance on controller images'
2639,213047797,"b'are these JUST for the mini display? if not, where do the control pointers go to on this image?'"
2660,213751729,"b'test -> text.\r\n\r\nalso, should likely be two sentences.'"
2691,215339447,"b""why isn't this an enum?"""
2691,215340085,b'Most likely wont need this if confidence is changed to an enum instead of an int'
2691,215341236,"b""Yes, let's please define our own clone enum. That way, we can keep the easy cross plat promise."""
2705,215424092,b'Rename to WindowsMixedRealityGestureSettings? Or do we expect to add additional platform gestures here in the future?'
2691,216054700,b'nit: do not need this line anymore :)'
2691,216055463,"b""shouldn't this be inside Enable()?"""
2725,216087723,"b""odd.... not sure how that happened... i'll fix"""
2725,216088748,"b""cool. i'll do that. thx!"""
2725,216089412,b'strange... no idea why that would be'
2725,216089941,b'we likely will have to have something to trigger the correct observer. this is purely placeholder for now'
2725,216090172,b'i am of split mind on this. i figured i would test both methods when writing the underlying implementation (this is placceholder code right now)'
2725,216090207,b'sounds reasonable'
2725,216090285,b'thx! i knew i was missing something'
2725,216090357,b'suggested name?'
2725,216090899,b'The built-in one does not allow modifying the color (HTK had both white and blue wireframe materials). I like having this flexibility'
2725,216091220,b'this is actually the pattern used for all of the systems in the core config profile.'
2725,216091801,b'i took this code from the boundary profile as is... i see the button and have tested that it works.'
2725,216091970,b'every system in the core profile behave this way'
2606,216143756,b'nit: extra spaces'
2687,216161599,"b""in the future, we should try to avoid reordering collections in profiles so that we don't create unwanted side effects"""
2705,216161865,b'per style guide. these should be defined as 1 << n. we should follow the guide so that others will support similar feedback.'
2736,216176196,"b'actually, only -1 is all platforms supported. once bit 31 has meaning, there will be negative values that do not mean ""all platforms"".'"
2736,216177965,"b'if you cast the flags value from the enum to an int, any time you have bit 31 set (0x80000000), the result will be < 0.\r\n\r\n\r\n'"
2736,216177990,b'that is essentially what the if (platform < 0) is doing\r\n'
2736,216178496,"b'Code:\r\n            FlagsEnum flags = FlagsEnum.Bit0 | FlagsEnum.Bit31;\r\n            Console.WriteLine(""flags == 0x{0:X}, (int)flags == {1}, flags < 0 == {2}"",\r\n                flags, (int)flags, (flags < 0));\r\n\r\nOutput:\r\n          flags == 0x80000001, (int)flags == -2147483647, flags < 0 == True\r\n'"
2736,216181426,"b'not sure we want to default to true here... if we do not support a specific platform, we should not say we do.'"
2740,216498738,"b'this is a scaffolding PR, I am ok with leaving them until we know if they are needed.'"
2740,216499054,"b'given the value to devs, core makes sense.\r\n\r\nconsidering that it will likely be disabled for retail builds, i can see it being optional'"
2750,216765939,b'curious... is this needed to fix this? or is it a piece of the gesture pr that is related?'
2775,217438746,b'It needs to be a MonoBehaviour since it is attached to a game object.'
2775,217439760,"b'since callers iterate over what is returned, we should not change the contents. can cause exceptions if the caller uses foreach and potentially walking off the end of the collection / missing items in the case of for loops.'"
2775,217440044,b'do we seriously need a special PR to rev to the latest 2018.1? I can see a wider discussion for moving to .3'
2775,217440536,b'This was the pattern in HTK. i used to pass the audiosource and this ended up being simpler (more encapsulated / less prone to error)'
2775,217440927,b'they are specific frequency ranges for the audio source. there is no real reason to make consts out of them for this useage.'
2775,217450255,b'it is how the game object indicates the occlusion parameters. each object can occlude differently'
2775,217450583,b'the influencer manager asks each object between the user and the sound emitter what occlusion settings should be applied and to apply them'
2775,217450925,b'i added comments. i assumed (incorrectly?) that the quality type specified above clarified the question.\r\n\r\ni dont think consts are that useful here since it is specific to the lo fi effect.'
2775,217452547,"b'Per Unity docs, OnValidate is editor only. We need these values cached for the player as well\r\n\r\n""This function is called when the script is loaded or a value is changed in the inspector (Called in the editor only).\r\nUse this function to validate the data of your MonoBehaviours. This can be used to ensure that when you modify data in an editor that the data stays within a certain range.""'"
2775,217463631,"b'namespace added, GitHub did not auto-resolve'"
2775,217463719,b'turned into a property... do not know why github did not autoresolve'
2775,217491618,b'this is especially problematic if a project is using a Coroutine and the collection gets changed during a yield'
2775,217500263,"b'it is not for us to decide how client applications are written, :)'"
2775,217564802,"b'This happens on human scales of time, this is NOT every frame. The occluder cannot cache the emitter as it may change when the user moves around the scene,\r\n'"
2775,217565148,b'no'
2775,217565208,b'no. this is SDK only. it is 100% addon'
2775,217565409,b'we have discussed this before. we agreed on this for HTK. why change it now?'
2775,217565492,b'they are SDK constructs folks already CAN implement their own influencers. and the controller has to be a monobehavior'
2775,217565584,b'what do you suggest i call it other than renderer'
2775,217566402,b'somehow missed deleting htese'
2775,217568170,"b'yes, get only property.'"
2775,217568781,"b'technically, but it feels more like a method based on the work it is doing'"
2775,217569683,b'this is not intended to be a core system it never has been.'
2775,217569762,b'the event system does not fit this scenario.'
2775,217570320,"b'the low pass filter is not on the occluder, it is on the object containing the AudioInfluencerController. If it does not have this object, we add it\r\n\r\n            AudioLowPassFilter lowPass = soundEmittingObject.GetComponent<AudioLowPassFilter>();\r\n            if (lowPass == null)\r\n            { \r\n                lowPass = soundEmittingObject.AddComponent<AudioLowPassFilter>();\r\n            }'"
2775,217570851,"b'should unity have implemented GetComponents as a property?  there are plenty of APIs that both have properties and Get* methods.\r\n\r\nmy bar is that properties should not do very much work (set a value, get a value, validate parameters). this is due to properties looking and feeling like a field... there should be minimal if any side effects\r\n'"
2775,217571040,b'this is how the .net framework was written and is a reasonably common engineering pattern'
2775,217572767,"b'they CAN add their own concrete implementatioons\xe2\x80\xa6. in the SDK like AudioOccluder is a concrete implementation\r\n\r\nthis is one of our ""use it if you like"" components'"
2775,217573586,b'because it has never been a core feature. it is not necessary to 99% of apps\r\n'
6001,326380872,b'nit: animateScroller'
6001,326381244,"b""don't you set this up above?"""
6001,326382027,b'why do we need this to be a field / property?'
6001,326382562,b'New way: `CoreServices.InputSystem.RegisterHandler<>()`'
6001,326383142,"b""I feel like youv'e done this twice already. Are we registering more than once? """
6001,326383332,"b'woah, again.'"
6001,326384493,"b""It's a little strange that you aren't using the touch input dispatch system (e.g. by adding NearInteractionTouchable and handing touch events). This code seems to be doing its own hit testing. Seems like it's okay for now since it's experimental. But I'm curious, what didn't work when you tried using NearInteractionTouchable?"""
6001,326384975,"b'Not sure this is necessary, unless you are forcing IsFocusLocked true on down'"
6001,326385127,"b""Also, this is only running if isTouched? So really doesn't seem necessary."""
6001,326385417,b'Why not just use currentPointer.Position?'
6001,326385851,"b""You don't need to do this -- mrtk handles this."""
6001,326386166,"b""Really don't recomment relying on the pointer visualization -- this could be arbitrary. Why not just use pointer.Position?"""
6001,326386617,"b""In fact, it seems this is just used to compute the projected point onto a plane -- I think you can find the poitner endpoint or project on a plan just by using the pointer's data and not bringing the visualizer into this code."""
6001,326386854,"b""There's no need to store this, since you are already storing currentPointer. Will help with readability of the code (there are a lot of fields...) to reduce unneeded fields."""
6001,326386970,b'focusedObject field also not needed -- you can get that just by storing currentPointer'
6001,326388647,"b'Hold up, I thought you were doing touch detection in your Update() loop. What is that code doing then?'"
6001,326389557,b'Um...hold up what is this doing? It looks like this is using the event if the object is NOT in the scrollable collection?'
6001,326389680,b'Is this basically preventing events from being forwarded to things like buttons?'
6001,326389966,b'No need to do isfocuslocked = false here.'
6001,326390086,"b'I see this repeated a few times. Might be able to factor out into a method ""releasepointer"" or ""resetstate""'"
6001,326403332,b'nit:space'
6001,326408467,"b""This can also be simplified by using unity's Plane class and Plane.GetSide()"""
6001,326706198,b'This exaggerates the calculated velocity in the scrolled list. The usage would be make a finger flick scroll the list in a disproportionally large amount. But I think you inadvertently found a bug as if this was zero it might kill all velocity - I need to check.'
6001,326708896,b'Yep.'
6001,326709375,"b""I do, I get implicit type compiler errors if I don't."""
6001,326711189,b'The inspector uses it to display the touch plane.'
6001,326713185,"b'Agree, a bunch of these can be local variables. Fixing now :)'"
6001,326724820,"b""I tweaked this a bit, but there are a bunch of scenarios where you can have UseOnPreRender enabled but these components wouldn't get set up properly.\r\n\r\n1. I have a scrollingObjectCollection set up at editor time, (uses OnEnable/OnDisable).\r\n2. I have a dynamic scrollingObjectCollection instantiated from code with UseOnPreRender configured, it exists in the scene, but UpdateCollection() is called at a later time. (uses UpdateCollection/OnDisable).\r\n3. At run time, at a later time, I decide I need UseOnPreRender (uses the Setter/OnDisable).\r\n\r\nI'm sure theres a better way to do this, maybe put this in the Getter as well as the Setter and then always reference the property?"""
6001,326726081,"b'It actually does, what I\'m doing is once the ScrollingObjectCollection has deemed an interaction a ""scroll"", it cuts off the `eventData` to the child item with `Use()`, and then determines when the scroll is released here.\r\n\r\nThis actually the magic of the list, I don\'t care _where_ your hand is when scrolling, only that you\'re on the correct side of the touch plane.'"
6001,326728174,"b'Agree. Now that this sits on top of the MRTK Input system, I dont think we need this any more.'"
6001,326731816,"b'Exactly, this is the first half of the ScrollRelease bit in the Update loop.'"
6001,326742556,b'Whoops. Not intentional :)'
6001,331170427,b'This should go in the ScrollingObjectCollection folder'
6001,331252789,b'It is \xf0\x9f\x98\x84  _.../Experimental/Features/UX/ScrollingObjectCollection/README.md_'
6036,327218477,b'nit: tab over to match file'
6036,327219094,b'Not sure what the naming convention is in MRTK for underscore class names but may be an issue'
6036,327276947,"b'Ok now I have to ask, what does ""nit"" mean? Is there a shortcut section somewhere where I can read about all these?'"
6036,327295368,"b'it\'s short I guess for nit-picking. Generally nit-picking has a negative connotation as someone who is consequently pointing out small flaws that aren\'t that meaningful.\r\n\r\nIn CRs, it\'s used as a, ""Hey I know this is annoying and minor, but we should fix this...yet also don\'t block the PR on this one small thing."" '"
6036,331172584,b'Please also move to `Experimental/MixedRealityKeyboard` so all these files are in one location / easier to find.'
6036,366196573,"b'As mentioned above, went for Assets/MixedRealityToolkit.SDK/Experimental/Features/UX'"
6036,366196869,"b'The original TMP_InputField also has an underscore, why would this be a problem?'"
5018,296405679,"b'>TextChanged [](start = 20, length = 11)\r\n\r\nThis aspect of this file is more than just a show/hide wrapper for the TouchScreenKeyboard - i.e. at this point, it\'s no longer just a workaround for a buggy underlying API - this actually adds new features, which means that even once Unity fixes the underlying buggy API technically speaking, this will not be deletable at that point.\r\n\r\nIf there is significant ask/value to this, then this is fine, just note that this is sort of a ""hidden"" feature that is sneaking in with this change.'"
5018,296405767,"b""I guess technically since it's in experimental we could delete it then, I just wanted to call this out because it isn't mentioned in the PR description.\r\n\r\n---\r\nIn reply to: [296405679](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5018#discussion_r296405679) [](ancestors = 296405679)"""
5018,296405902,"b'>private [](start = 4, length = 7)\r\n\r\nNit: Fix indentation (four more spaces)'"
5018,296406032,"b"">showing [](start = 12, length = 7)\r\n\r\nSuper nit: Order (hidding, hidden, showing (or showing, hiding, hidden). It's currently somewhat random"""
5018,296406281,b'Nit: Indentation needs four more spaces'
5018,296406332,"b'> UnityEngine.WSA.Application.InvokeOnUIThread(() => inputPane?.TryHide(), false); [](start = 7, length = 81)\r\n\r\nNit: Indentation needs four more spaces'"
5018,296406649,"b'>if !UNITY_EDITOR && UNITY_WSA [](start = 1, length = 29)\r\n\r\nShould we have an else clause that will handle the iPhone/Android cases (i.e. I assume Open still works on those)\r\n\r\n[https://docs.unity3d.com/ScriptReference/TouchScreenKeyboard.html](https://docs.unity3d.com/ScriptReference/TouchScreenKeyboard.html)'"
5018,296406757,"b'Or wait, nevermind, this class explicitly calls out that this is WMR only as it works around a bug that is specific to those systems.\r\n\r\n---\r\nIn reply to: [296406649](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5018#discussion_r296406649) [](ancestors = 296406649)'"
5018,296408379,"b'Or just update the PR description + comments on the code to mention this as well, either/or is fine by me.'"
5018,296465205,"b""I removed all the handy events so it's a simple class. Makes sense since we wouldn't want to break people once we removed it."""
6981,363405097,"b'> positions an element relative in front of the forward axis of the reference.\r\n\r\nPlease consider rewording, it is a bit confusing. Thanks'"
6981,363405872,"b'```suggestion\r\n        [Tooltip(""Default distance from eye to position element around, i.e. the sphere radius"")]\r\n```'"
6981,363406396,"b'If the element says at least this close, shouldn\'t the variable be min as opposed to max?\r\n\r\nOr should the tooltip (and comment below) read ""no further than""? '"
6981,363406538,b'Same question as maxViewHorizontalDegrees'
6981,363406726,"b'```suggestion\r\n        [Tooltip(""The element will stay world locked until the angle between the forward vector and vector to the controller is greater then the deadzone"")]\r\n```'"
6981,363407133,"b'where is the deadzone defined? this is the first use of the term, though it is entirely possible that i missed it in my read.'"
6981,363407795,b'Consider the following style throughout?\r\n\r\nget => useAngleStepping;\r\nset => useAngleStepping = false;'
6981,363408044,b'```suggestion\r\n            // Angular clamp to determine goal direction to place the element\r\n```'
6981,363408156,b'```suggestion\r\n        /// <returns>Angle between project from and to in degrees</returns>\r\n```'
6981,363408274,b'```suggestion\r\n        /// <returns>Signed angle between vec and the plane described by normal</returns>\r\n```'
6981,363457680,"b'To make the feature more discoverable and avoid confusion like in #5953 I wonder if it would be better to put the follow solver under `SDK/Experimental/FollowSolver/Follow.cs`. What do you think? A disadvantage is we have other files already under `SDK/Experimental/Features/Utilities` such as Dwell and DirectionalIndicator. However, I think it would actually be good to move those eventually int folders like `SDK/Experimental/Dwell` and `SDK/Experimental/DirectionalIndicator`. When they graduate they could go under SDK/Features/Utilities '"
6981,363458289,"b'Did you mean ""snapping"" here?'"
6981,363508543,b'make sure to specify private. See [Access Modifiers](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers)'
6981,363508773,b'It is unclear to me from a quick read what this does. Could you please comment the method?'
6981,363692620,"b'I spent way to long just now trying to work out this double negative, haha. I would say, the least close thing, is the furthest thing away. So ""at least this close"" means the same as ""no further than this"" (at least I think it does \xc2\xaf\\\\\\_(\xe3\x83\x84)_/\xc2\xaf).\r\n\r\nI think this is worth changing anyway, haha, it took me long enough to justify the wording so it could definitely be clearer.'"
6981,363697837,"b'Sure, this sounds better to me. '"
6981,363715642,"b""```suggestion\r\n    /// The element can be loosely constrained (a.k.a. tag-along) so that it doesn't follow until it is too far.\r\n```"""
6981,363725100,"b'```suggestion\r\n        /// The division of steps this object can tether to. Higher the number, the more snapping steps.\r\n```\r\nsnapple steps <3 '"
6981,363727981,b'private'
6981,363728014,b'private'
6981,363728045,b'private'
6981,363728888,b'private'
6981,363733061,"b'you could add it to the components menu as well   [AddComponentMenu(""Scripts/MRTK/Experimental/Solver/Follow"")]'"
6981,363998825,"b'> So ""at least this close"" means the same as ""no further than this""\r\n\r\nGotcha.... sorry if i was confusing, it\'s not only early in the year, but early in the _decade_! \xf0\x9f\x98\x84 '"
7099,379204536,"b'Interesting, why do we need to have a directory for holding configuration files for the bounds control? Surprised that bounds control needs separate files'"
7099,379352060,"b""that comes from the scriptable object change - there was a request a while ago to make bounds control configurations into scriptable objects to make them shareable, similar than the interactable themes. So the configurations we're creating when migrating are the shareable scriptable objects you can plug into bounds control. When doing the automatic migration i have to create individual configs because i don't know which properties the users might have changed. """
6875,357277144,"b'Out of curiousity, if OneHandRotationModeNear == OneHandRotationModeFar, would it still have the same effect to have just these two lines of code?\r\n\r\n```c#\r\nMigrateOneHandRotationModes(ref objManip, manipHandler.OneHandRotationModeNear, ManipulationProximityFlags.Near);\r\nMigrateOneHandRotationModes(ref objManip, manipHandler.OneHandRotationModeFar, ManipulationProximityFlags.Far);\r\n```\r\n\r\nJust looking to see places in the code where we can reduce complexity.'"
6875,357277595,b'Thumbs up for moving to words over numbers!'
6875,357277956,"b'```suggestion\r\n        private void MigrateOneHandRotationModes(ref ObjectManipulator objManip, ManipulationHandler.RotateInOneHandType mode, ManipulationProximityFlags proximity)\r\n```\r\n```suggestion\r\n        private void MigrateOneHandRotationModes(ref ObjectManipulator objManip, ManipulationHandler.RotateInOneHandType currentMode, ManipulationProximityFlags proximity)\r\n```'"
6875,357278371,b'Or maybe oldMode?\r\n\r\nJust to have some symmetry with newMode'
6875,357281350,"b""Not quite. It would produce the same behaviour, but it could potentially add two constraint components of the same type where one constraints near and the other constrains far. I think it's preferable to only add one constraint component in this case."""
6924,358937397,b'Where / how is this used?'
6924,358941995,"b""this is not used right now - we removed the migration buttons for now because we don't want ppl to upgrade yet - this will be used again once we are ready for graduating the feature. """
6924,358944525,"b""I was using this for testing (I had a button in manipulation handler inspector that migrated to object manipulator). We didn't want to keep this button around in development, but we can use this Migration stuff in future (see #6911)."""
6924,358944767,b'Thanks for the context!'
7006,364350145,"b"">MigrationWindow [](start = 17, length = 15)\r\n\r\nDo folks have any thoughts on if this window would also handle non-game object/component upgrade scenarios? i.e. I'm thinking about situations where we make asmdef changes (again, god help us), or make changes to fields of components which might not be... migratable, I'm not sure if such a situation exists.\r\n\r\nNot a blocking thought for this review, just wanted to hear thoughts on this question."""
7006,364351868,"b'>Component-specific implementation of the MigrationHandler Interface is required [](start = 130, length = 79)\r\n\r\nIf the window is intended by people who are using it to migrate their stuff, and not so much for folks to write their own migration handlers, then this part of the text is a bit, maybe misleading is the term. \r\n\r\ni.e. as a user of this, does this sentence mean I have to implement component specific IMigrationHandler code? Or do we actually want to communicate that only  a subset of things that have migration handler implementations will actually be migrated? Or we maybe we just want to say ""hey check out the docs for the set of things that are migrated by default?""'"
7006,364355469,"b'>migrationTypesMap [](start = 41, length = 17)\r\n\r\nBecause the key value here is string (not strongly typed) can you leave a comment with an example of what would get stored here?'"
7006,364355710,b'Super nit: Alphabetical ordering of using'
7006,364368481,"b'@keveleigh this will create a instance of migrationTypeInstance each time this getter is called right? My C# isn\'t as strong as yours, but unless there\'s some magic here (where the runtime knows about/watches selectedMigrationHandlerIndex to know that things should only change based on that), I assume this would create a new instance of the handler on each.\r\n\r\nIf this is required, then we should actually document this (i.e. comment), because someone could easily look at this (i.e. what I\'m doing) and be like ""oh we don\'t need to do this, let\'s just cache it"" '"
7006,364369645,"b'Is the significance of ""4"" because we want it to come after the DependencyWindow?\r\n'"
7006,364371279,"b""Note that we've historically seen cases where GetTypes would throw a ton of exceptions (i.e. if there are assemblies that aren't loadable).\r\n\r\nSee https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5949/files for reference.\r\n\r\nI would actually probably lean on using GetLoadableTypes as is done in that PR to avoid hitting that type of issue going forward.\r\n\r\nDo I know exactly what scenario? No. Where we observed it, it was in some other development envs where there were some other interesting non-Unity standard setups AFAIK but I could imagine that someone who is pulling in binaries (i.e. dragging in a DLL to their project) could probably trigger that as well."""
7006,364372319,"b""If it isn't too hard to do, it might also be good to gate this on recompiles as well (or asset changes) - i.e. arbitrary focus changes maybe this isn't super interesting.\r\n\r\nHOWEVER if you're using this and this is fairly fast, then you don't need to do this - it's just if this adds micro hangs that we'd want to do this. I don't want to ask for premature optimization."""
7006,364373867,"b""Can you leave a comment why this is +1ed here (and below?)\r\n\r\nI assume this is because Unity gives us 1-indexed selected values, but this isn't necessarily immediately obvious to mere mortals (i.e. myself)"""
7006,364374623,"b""So QQ here - if there's already some specific ordering in ElementAt(i), can you elaborate a bit more on why we need to have another copy of the these keys? Is it to avoid having to use ElementAt()? Is it to account for the Unity 1-index selection? If it's the latter we can always offset in a different way (i.e. convert to zero indexed when coming back from Unity land)"""
7006,364375629,"b""Calling this out not because I think you should change this, but because there's a general gotcha associated with this type of code.\r\n\r\nDrawMigrationTypeSelector is called before DrawMigrationToolbars and the order here is important because GUI.enabled = false is called here. There's an implicit dependency between these two functions that is order (i.e. toolbars depends on type selector to have been called first, and this isn't called out anywhere in comments).\r\n\r\nThe danger here is people reorganizing stuff in the future and leaving part of the GUI in an enabled state, but the rest of it disabled, and there's no context for future folks to understand that dependency.\r\n\r\nI think that because of the relative small scope of things here I don't think it really matters, but it's a thing to keep in mind for future changes."""
7006,364376393,b'This line confuses me a little bit because I would assume the right side would be ToolbarOption.Scenes (maybe worth leaving a comment why this is objects and not scenes?)\r\n\r\n'
7006,364377130,"b'```suggestion\r\n                    var removeIcon = EditorGUIUtility.IconContent(""winbtn_win_min_h"");\r\n```'"
7006,364377628,"b""Super nit: Thoughts on having the HorizontalScope enclosed by the if statement here, rather than the other way around (i.e. how it is now)?\r\n\r\nOr do we need the HorizontalScope here even if it's empty?"""
2978,230510962,"b""is this going to be needed? if not, let's remove commented out code"""
2978,230511125,"b'this looks to be outdated code, probably should be removed.'"
2978,230511247,b'please remove... it is not a valid namespace in MRTK :)'
2978,230511707,"b""let's try to avoid throwing in MRTK. the exceptions will likely be handled automatically by Unity and may case a performance issue.  recommend using Debug.LogError messages instead to alert developers of an issue,"""
2978,230512055,b'Please add some comments describing the purpose of the enum and the meaning of the values. Will help those reading the code to better understand the usage.\r\n\r\nthanks!'
2978,230512152,b'Is this something that should be allowed to be set in code?'
2978,230512243,b'Please provide tooltip attributes to fields that appear in the inspector.'
2978,230512355,b'Lots of commented code here... what needs to remain and what is obsolete?'
2978,230512677,"b'Per MSDN conventions, please use full words for these values (ex: BottomMiddle instead of BotMiddle).'"
2978,230512763,b'Please add summary tags for api documentation generation.'
2978,230513335,b'Please consider replacing hex values with shift notation as per the style guide.'
2978,230513414,b'Please add summary comments for api documentation generation'
2978,230513473,b'Northeast instead :)'
2978,230513584,"b""This comment isn't needed. Thanks!"""
3066,230526668,b'Did you mean to remove the glass material?'
3066,230526745,b'Does this need to get updated in all of the checked in materials?'
3054,230527348,b'These should change to 2017.4 LTS'
3054,230527472,b'Can we make this HoloToolkit Release? Now that Mixed Reality Toolkit (aka vNext) is getting closer to release we should differentiate.\r\n\r\nThanks!'
3054,230527520,"b""Let's use HoloToolkit (throughout) instead (see earlier comment)"""
3054,230527736,"b""Unity's menu is Import Package, let's use that term for clarity"""
3054,230527801,"b""Let's replace MRTK with HTK (throughout) in this branch. Thanks!"""
3089,231639044,b'This branch is not frozen. We are taking key customer fixes and releasing as needed.'
3089,231639581,"b'This list will quickly go out of date. It may be advisable to show an example of how feature branches work here.\r\n\r\nOtherwise, this file will need to be modified whenever a branch is added or deleted -- an easy task to forget.'"
3089,231639789,"b'BTW, the planes branch is attributed to the wrong dev :)'"
3089,231681095,"b'Perhaps have one that does not actually exist, but serves as an example of the pattern we use for feature branches. \r\n\r\nNot sure if it needs to list owners. Those may change or be more than one person.\r\n'"
3051,231682822,"b'This feels like a state value as opposed to an event handler. Perhaps create an IMixedRealityFocusState interface that can contain items like this and, perhaps, the current list of focusers.\r\n\r\nWould fit very well with the practice of partitioning items into related interfaces and enable customers to respond to / implement just the portions that are of interest to them.'"
3086,231686504,b'need to check showLogs here and other similar calls'
3066,231686957,"b'the nice thing about having the glass material is it shows customers (like me :) ) who may need an example, how to achieve a glass effect,'"
3086,231689205,"b'Is that not the purpose of the showLogs argument? If a customer passes in ""showLogs == false"" it seems as if the method should not log.\r\n\r\nThis is where something like the logging level task/proposal can address the ""much more important"". It gives customers a finer grain control over the types of messages received.'"
3102,232021861,b'Curious as to why 5.'
3102,232022219,b'Should we consider making an enum that defines specific priorities? Similar to how we have defined the menu index enum?'
3099,232023929,"b'Presumably this is not required since the core toolkit component will call Destroy on the observer, correct?'"
3102,232100654,b'Seems reasonable.'
3143,233633878,b'It was called from one location internal to the toolkit object (and it was a simple wrapper around an assert statement. What makes it required? Consistency of message?'
3143,233634526,"b""> I hope we don't have to go through each feature area and replace all our debug statements.\r\n\r\nWe do because static classes (ex: UnityEngine.Debug) cannot have extension methods. I am signing myself up to update the calls.\r\n\r\n> I'd almost want to say each feature area should have it's own logging level, so some can be more verbose than others.\r\n\r\nThe implementation makes that very doable. Each system would use the DebugUtilities overload that takes in a LoggingLevels parameter."""
3143,233635186,"b'> What if users want to supply their own custom logging levels?\r\n\r\nAre you asking about runtime users or developer users? Developers can set their desired level in the MixedRealityToolkitConfigurationProfile and that will control the core toolkit object and the services.\r\n\r\nIf you are asking about custom application code, this is why there are DebugUtilities overloads that take the logging level as a parameter.  It allows any code to send custom levels to the log methods.'"
3143,233635620,"b""> Seems like a lot of duplicated code, couldn't we just log this critical error in the ActiveProfile property?\r\n\r\nThat sounds like a good optimization. This change was to match the pattern used in several other methods (ex: GetService)."""
3143,233635775,b'I was testing something and missed uncommenting it... thanks for the catch!'
3143,233635872,b'I was testing something and missed uncommenting it... thanks for the catch!'
3143,233635903,b'I was testing something and missed uncommenting it... thanks for the catch!'
3143,233639286,b'Fair enough. I put it back in my recent commit.'
3143,233640637,"b'> Let\'s also add that virtual property to the IMixedRealityService interface, and update each Service profile with the logging level.\r\n\r\nOnly concern here is that customers will be required to change the logging level for ALL of the services individually.... that can be quite a few.  Any thoughts on a good way to have a ""set all to <level>"" feature? Perhaps on the toolkit menu?'"
3143,233641491,"b""> Let's also add that virtual property to the IMixedRealityService interface,\r\n\r\nPropose making this change in a subsequent PR (when the services are updated to honor the setting). Sound fair?"""
3143,233665365,b'yep :)'
3143,233671005,"b""Updated ActiveProfile to always log a critical error if there isn't one configured"""
3148,234015116,b'var makes me sad :)'
3148,234017183,"b'Yeah, I know... old habits die hard :)'"
3159,234357395,b'maybe. Not a bad thought'
3159,234357490,b'I had thought of that as a possible optimization.'
3164,234387607,b'Can this be a separate PR? These were the strings that previously existed.'
3164,234387675,"b'The test should probably not be checking the log string then (requires an exact match), and checking the return from GetService.'"
3164,234397400,"b""> Please fix the test correctly. Let's not hide it.\r\n\r\nAgreed. Hiding failures was not the intent\r\n"""
3164,234397512,"b""This doesn't break the test case.. The Assert.IsFalse(MixedRealityToolkit.HasActiveProfile);  and Assert.IsNull(MixedRealityToolkit.Instance.ActiveProfile);  are the true tests and are less fragile (a one character change in the code breaks string based comparisons like this)."""
3164,234397566,"b'I will implement a less fragile version of the test by checking that the value returned by GetService is null, using Assert.IsTrue()'"
3164,234700708,"b'> We also test the errors we ""Expect"" when something is not correct. \r\n\r\nWhile I agree that this is a good endeavor, it can make the tests fragile. If a method changes the log string (ex: a spelling error is fixed, the strings get localized, or if we add a feature like this one, that allows developers to disable some log messages) the test will fail.\r\n\r\nOne possible solution is to return error _codes_ and validate those values, rather than a specific log string.'"
3164,234700954,b'Fair enough (and Stephen already changed the values).'
3164,234702435,"b'Part of the feedback on this PR was to consolidate the message that occurs when ActiveProfile is null (have the getter log the messsage). That resulted in the system displaying an error when the MixedRealityToolkit component is first added to the scene (by default, there is no profile configured).\r\n\r\nIs the preference to go back to logging a message in each caller if they detect a null ActiveProfile? I am fine with that.'"
3164,234703102,"b""> this call should NOT have been moved from it's original location,\r\n\r\nThat change was made based on feedback... I can easily re-add the log messages at the points of access."""
3164,234704184,"b'We received customer feedback to enable a path to configure the volume of the logging from the toolkit. This PR\'s pattern has been successfully leveraged in past projects.\r\n\r\n> why would Anyone ever want to ""hide"" critical errors?\r\n\r\nAdding the ability to filter critical errors is about customer choice (and completeness of the enum). Some developers do not wish to see the error logs and simply handle return values to check for errors.'"
3159,234750920,b'a mistake. sorry'
3159,234751499,b'nice catch! thanks :)'
3159,234765705,b'that feels outside of the scope of this change as the original code had the != null (do not want to fundamentally change behavior here).'
3173,235506146,"b'nor -> or (since we say ""does not implement"")'"
3173,235507104,"b""Curious if we actually need a contstructor-less base implementation. Wouldn't having a base and a basewithconstructor create potential traps (read: easy to make mistakes) for customers creating services and providers?"""
3173,235507771,"b'Presumably, this wont be needed Systems which require data providers would be responsible for initiating load correct? That would also potentially allow them to set additional requirements (ex; implemented interfaces).'"
3173,235508595,"b'Along the lines of the earlier comment. If the toolkit component provided a method that systems which use data providers to call at initialization time, we can save a good deal of code here and allow systems / extension services to add/remove data provider requirements without requiring the toolkit component to change.'"
3173,235508928,b'How were services being limited to platforms previously?  Does this duplicate work?'
3173,235509049,b'Mostly asking because I do not see (in this PR) a removal of the old filtering methology'
3173,235509159,b'add a Debug.LogWarning here?'
3173,235533654,b'Thanks for pointing that out @keveleigh. I knew I was scanning over something without noticing it. :)'
3173,235534041,"b'> All services should be registered with the service locator only.\r\n\r\nTrue, though it might be useful / easier to read if the services triggered loading their data providers during initialization. '"
3173,235534509,"b""> This namespace is here so we can iterate through the spatial awareness service's data providers.\r\n\r\nIt may likely that data providers do not require any additional methods. The way that #3180 is reworking the observers, that will be true, We can leave the comment here until that is completed."""
3173,235534764,b'Fair enough. we have lots of log messages as it is :)'
3173,235534920,"b'Not a blocker at this time, more of something to consider when data providers are added.'"
3173,235549873,"b'```suggestion\r\n            LogAssert.Expect(LogType.Error, $""Unable to register {typeof(IFailComponent)}. Concrete type does not implement IMixedRealityExtensionService or IMixedRealityDataProvider."");\r\n```'"
3188,236422051,b'recommend using Microsoft.MixedReality.Toolkit.Examples.Demos'
3188,236422979,b'Do you anticipate a per-scene audio manager instance or per-app?'
3188,236423326,b'```suggestion\r\n    public class AudioDebugMessage : AudioNode\r\n```'
3188,236423498,b'Suggested renaming class to avoid potential conflicts.'
3188,236423595,b'```suggestion\r\n    public class AudioDelay : AudioNode\r\n```'
3188,236423744,b'```suggestion\r\n    public class AudioProfilerEvent\r\n```'
3188,236423807,b'```suggestion\r\n    public class AudioEventParameter\r\n```'
3188,236423925,b'```suggestion\r\n    public class AudioLanguageSelector : AudioNode\r\n```'
3188,236423985,b'```suggestion\r\n    public class AudioRandomSelector : AudioNode\r\n```'
3188,236424040,b'```suggestion\r\n    public class AudioSequenceSelector : AudioNode\r\n```'
3188,236424108,b'```suggestion\r\n    public class AudioVoiceFile : AudioNode\r\n```'
3188,236806571,"b'perhaps use the .net culture codes instead (ex: en-US, fr-CA, etc). that would allow for easier globalization (we will need this type of support for text soon as well).'"
3148,236822336,"b""Why do we need to specify the observer assembly in the SDK? We shouldn't need to be making direct calls into it (they should all go through the Spatial Awareness component in the Core)."""
3148,236822876,b'good catch!'
3148,236824054,b'The original copy was intentional. This was done for two reasons:\r\n1. Applications do not need access to all of the contents of the SpatialMeshObject (they can request them on demand from the GameObject)\r\n2. Returning a copy protects the application from exceptions while enumerating (the collection can change on them at any time while the observer is running).'
3148,236825256,b'Please see earlier comment. Thx'
3148,236825329,b'Please see earlier comment. Thx'
3186,236836774,"b'This test appears to set the value it is expecting and only truly checking the log string... Is this intended?\r\n\r\nSince the log message precedes setting ActiveProfile to null, it appears that\r\n\r\nMixedRealityToolkit.Instance.ActiveProfile = null;\r\n\r\nis not necessary for the test.'"
3186,236837034,"b'This comment does not appear accurate, the line above appears to do the configuration creation and the asserts validate the results.'"
3186,236837772,b'Rather than re-running a test (which may fail) please consider a helper function that sets the desired initial conditions?'
3186,236837852,b'Rather than re-running a test (which may fail) please consider a helper function that sets the desired initial conditions?'
3186,236838038,b' Rather than re-running a test (which may fail) please consider a helper function that sets the desired initial conditions?'
3186,236838088,b'Rather than re-running a test (which may fail) please consider a helper function that sets the desired initial conditions?'
3186,236838123,b'Rather than re-running a test (which may fail) please consider a helper function that sets the desired initial conditions?'
3186,236848920,"b'In my previous test dev life, I found tests to be best (and most reliable) when they could be run completely in isolation. It is possible to train the system if one test depends upon another.'"
7188,375545838,b'removed'
7188,376532201,b'Updated placeable object label visibility control by adding listeners to two new events OnPlacingStarted and OnPlacingStopped and added null check.'
7188,376548767,b'Removed'
7188,376549338,b'Added two new events `OnPlacingStarted` and `OnPlacingStopped`'
7188,372753410,"b""If this is only used in start and the inspector, this shouldn't really be a public interface. \r\n\r\nMark it as protected and InternalsVisisbleTo for the inspector\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.internalsvisibletoattribute?view=netframework-4.8\r\n\r\nalso simplify to \r\n\r\n`protected bool IsColliderPresent => GameObjectToPlace != null ? GameObjectToPlace.GetComponent<Collider>() != null : false;`\r\n"""
7188,372753493,"b""don't worry about the if not a new value check here, we only need that if we could potentially be doing something expensive"""
7188,372753548,b'same here'
7188,372753612,b'and others'
7188,372753641,b'missing tooltip'
7188,372753746,b'Look at using CoreServices.GetSPatialAwarenessDataProvider() api'
7188,372753870,b'`observer.DisplayOption = spatialMeshVisibility ? SpatialAwarenessMeshDisplayOptions.Visible : InitialSpatialMeshDisplayOption;`'
7188,372753923,b'remove debug log'
7188,372754091,"b'if you are trying to use delta time effectively, use \r\nhttps://docs.unity3d.com/ScriptReference/Time-realtimeSinceStartup.html'"
7188,372754162,b'remove debug logs and empty space'
7188,372754373,b'we might want to wrap these with #IF UNITY_EDITOR or check they are compiled out at runtime\r\n\r\nAlso maybe add DebugEnabled property to toggle'
7188,372754537,b'remove?'
7188,372754736,"b'these also need to be covered with an OnEnable/OnDisable\r\n\r\nIf this component is disabled, it will still respond to global pointer events'"
7188,372755104,"b""Either two options here\r\n\r\n1) Capture what the original layer was in StartPlacement and then re-apply here. Default isn't necessarily correct\r\n\r\n2) Don't modify the gameobject layer at all. Just fire a warning message"""
7188,372755353,b'This seems problematic that the collider present check is against the GameObjectToPlace ? but this solver also requires a getcomponent collider on the current gameobject?'
7188,372755429,"b""seems like missing comment?\r\n\r\nI don't think caching this is necessary. Just call CoreServices.SpatialAwarenessSystem whenever you need the current system"""
7188,372755670,"b'Same here, I know this is just a draft. But just adding note as reminder to clean up here'"
7188,372756121,b'I believe this needs to be an array stored. You are only returning the first valid response option but later on in `ToggleSpatialMeshVisibility` you are apply that initial option from one observer to all possible observers'
7188,373105904,"b'Just to check, [Experimental] is being used on the very first thing to show the experimental warning right?\r\n\r\nActually a fairly neat usage of this - I would expect that if this entire thing is experimental this would be on the class itself but this is a decent way of getting the same thing. If this is how we wanna do this going forward it might be worth leaving a comment (both here and ExperimentalAttribute.cs)'"
7188,373106792,"b'Is it not a valid transition to clear the gameObjectToPlace? i.e. if i wanted to make a game object not the one to place, the only way for me to do that with this code is to point it at something else, and then I guess delete that other dummy object.'"
7188,373107620,"b""Also in case you're tempted to simplify to:\r\n\r\n```c#\r\nprotected bool IsColliderPresent => GameObjectToPlace?.GetComponent<Collider>() != null;\r\n```\r\n\r\nDon't do that - Unity's null checking overloading makes that a dangerous thing to do."""
7188,373107708,"b""So yeah @Troy-Ferrell's line is good."""
7188,373108336,"b'After making this protected or private (probably private honestly? - we can expose things as people need them but this is just a helper function that seems to be specific to some one off checks we have), having a comment here about this not being called in an Update loop would be good (i.e. because it GetComponent-s which should really be done only once (maybe start/awake or in editor/inspector only)'"
7188,373109228,"b""Nit: Be consistent with specifying units (i.e. on line 61 meters is specified but not here). I think that all distances are assumed to be meters unless specified when in Unity. Consistency is important because if someone sees that one is specified in meters but the other isn't... they're like.... what units?"""
7188,373109821,"b'Super nit: Avoid ""you"" in comments:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#writing-style'"
7188,373110066,"b'```suggestion\r\n        [Tooltip(""If true, the gameObjectToPlace will start in the placing state.  The object will immediately start"" +\r\n```'"
7188,373110225,"b'```suggestion\r\n        "" following the TrackedTargetType (Head or Controller Ray) and then a tap is required to place the object.  AutoStart"" +\r\n```'"
7188,373110559,"b""Also if we're gonna do multiline strings that get concatenated (totally good to reduce line width) a space must exist either at the end of the string or the beginning of the next to ensure the last and first words don't run together. (I think)"""
7188,373110755,"b""Same comments on these comments as well (I think we'll fix up the on above and bring those changes down here."""
7188,373111426,"b""DidHit is named a bit interesting - What's the mechanics of the past tense? Does the act of checking it cause it to reset (i.e. because you know that it did hit, the next time time has passed so it's no longer hitting?) Is this within the current frame? \r\n\r\nAlso, is there a reason why this is public (i.e. it seems like this is an implementation detail of this file... so far)"""
7188,373111571,"b""```suggestion\r\n        /// The offset between the game object's center and The default value for SurfaceNormalOffset is half the depth of a game object. \r\n```"""
7188,373111678,b'Or just update to be consistent with the comment above.'
7188,373112273,"b""Same comment as not needing to check the value diff (in general, not a bad thing to be cognizant of but for simple things like this it's not super necessary)"""
7188,373117400,"b'Ah... this one is interesting.\r\n\r\nThere are a few things to mention here:\r\n\r\n1. If the spatial awareness system is disabled or isn\'t configured to run, we should make sure that this code is resilient to this and doesn\'t crash (i.e. access to spatialAwarenessSystem doesn\'t get rekt)\r\n2. We should be clear via documentation that this does have a dependency on the spatial system, and that it also controls the visibility of the mesh by default.\r\n\r\nAlso, what can be interesting is that there\'s no ""override"" for spatial system visibility. That is, imagine that you\'re an app that\'s consuming TapToPlace and spatialawareness at the same time - imagine that your app wants to actually have spatial awareness on at all times.\r\n\r\nNow you pull in tap to place, and after tap to place has finished its work, it will disable/hide the spatial map! That\'s not great, because you wanted it to always show, but this other component (this thing) just disabled it for you.\r\n\r\nThis is a general problem in other areas of eventing/true/false enable control where you need to multiplex access (i.e. you want to have multiple people say they ""want it enable or disabled"" and if anyone wants it enabled, it will be enabled, and if no one wants it enabled, it will be disabled).\r\n\r\nThat\'s more complicated, but I think that in this case it might just be good to, when tap to place is done, ""restore"" the previous state of the mesh visibility (i.e. if it was disabled, make sure it gets disabled, it it was enabled, make sure it doens\'t get disabled).\r\n\r\nThis wouldn\'t solve the problem of:\r\n\r\n1. Tap to place starts\r\n2. Other app code enables mesh visibilty\r\n3. Tap to place ends.\r\n\r\nBut it would at least fix the main issue.\r\n\r\nIt might be intersting to call out this issue in the comments (and suggest that consumers can set this to false and control the spatial mesh visibility as part of using tap to place?)'"
7188,373117890,"b""Oh wait you're actually doing this with InitialSpatialMeshDisplayOption.\r\n\r\nIn that case, I think still calling out the unsolvable problem (i.e. the list mentioned above) would still be helpful."""
7188,373122765,"b""Same comment on needing spaces after/before the ends/beginnings of lines so that words don't get smushed"""
7188,373124320,b'Should we be using https://docs.unity3d.com/ScriptReference/Physics.IgnoreRaycastLayer.html instead of hardcoding an arbitrary value?'
7188,373126050,b'```suggestion\r\n            if (!ColliderPresent)\r\n```'
7188,373126767,"b""If there are other solvers on this object, wouldn't this also disable the other ones? i.e. is it not valid to have this be on a thing (but not auto-start) and only have it start working on demand?"""
7188,373127256,"b""Similar comment before - wouldn't this stop all solvers on this object?"""
7188,373128924,"b""So in general, it's best to register for events after you've already updated your internal state to be able to service those events.\r\n\r\nThis is less impactful in cases like Unity where you have single-threaded execution on the game thread, and becomes more of an issue once you go to multithreaded situations, but it's still good practice to have (i.e. otherwise it's possible that you may register for an event which will immediately do a callback, and if you haven't already set IsBeingPlaced = true, you'll kinda... get rekt)"""
7188,373129747,"b'Given this comment, would it be worth scoping this conditional to just that tracked target type, or does it not really matter if we do this check for other other target types? Just trying to understand the comment more.'"
7188,373132060,"b""Also out of curiosity, what's the experience for both KeepOrientationVertical and RotateAccordingToSurface being enabled at the same time?"""
7188,373132877,b'Why are we catching double click and eating it?'
7188,373707052,b'Removed'
7188,373708224,b'Added Tooltip'
7188,373710279,b'DebugEnabled property added'
7188,373710517,b'Removed'
7188,374330344,"b""Why would we want TapToPlace depend on the spatial awareness system? I would expect to use this component even if I'm not using SR, just that it would place things on the bubble, or collide with other stuff in the scene..."""
7188,375319125,"b""hello. I want (and expect) this script not to depend on SRat all. When spatial awareness is disabled in MR toolkit, gameobject with taptoplace script on it start to behave weirdly, go back and forth across the scene, start to rotate, jump from one position to another, etc. Still researching the reason. Actually i'm using spatial awareness, but at the moment of placing object i already have mesh of walls and floors and spatial mesh disabled. I hope, that i'll find out the reason of this behaviour, despite this, i found taptoplace script pretty good and useful"""
7188,375492721,"b'I am going to go with option 1, the layer change is required if the object is in the placing state.  If the game object layer is not changed to IgnoreRaycast while in the placing state, the head gaze ray will return a hit on the object itself instead of a surface beyond the object.  '"
7188,375534517,b'The `GameObjectToPlace` and the current gameobject the TapToPlace component is attached to are the same but I added `GameObjectToPlace` for the `SurfaceNormalOffset`\r\n\r\n```\r\nSurfaceNormalOffset = GameObjectToPlace.GetComponent<Collider>().bounds.extents.z;\r\n```'
7188,375548122,b'Yes I added the attribute there to show the warning at the top of the custom inspector \r\n![image](https://user-images.githubusercontent.com/53493796/73889569-db179600-4824-11ea-859a-49d27684db16.png)\r\n\r\nAdding the attribute is in the documentation for an experimental feature: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/ExperimentalFeatures.html#experimental-features-should-have-an-experimental-attribute'
7188,375553490,b'Added meters to max distance comment and tooltip'
7188,375554649,"b'""You"" was removed'"
7188,375555449,b'Suggestion added'
7188,375556045,b'Suggestion added'
7188,375557016,b'Updated comment to be consistent with tooltip above'
7188,375557994,b'Spaces added'
7188,375558280,b'Suggestion added'
7188,375585831,b'The blue cube has both `RotateAccordingToSurface` and `KeepOrientationVertical` set to true and the Quad has only `RotateAccordingToSurface` true\r\n\r\n![TapToPlaceRotateAccordingToSurface](https://user-images.githubusercontent.com/53493796/73895787-a2cc8380-4835-11ea-95d7-44b59062bb89.gif)\r\n'
7188,375588275,b'Added `Physics.IgnoreRaycastLayer`'
7188,376023950,"b""@julenka The reason tap to place uses the spatial awareness system is to allow for the option to show the wireframe representation of the spatial mesh while the object is in the placing state.  Showing the spatial mesh while the object is in the placing state is behavior from HoloToolkit's tap to place.\r\n\r\nI can add a check that looks to see if the spatial awareness system is enabled or I can remove the mesh display behavior completely. \r\n\r\nDA-NDI, thank you for testing!  The weird behavior you are seeing will be addressed."""
7188,376031285,"b'When you air tap or use the pinch gesture, `OnPointerClick` sometimes gets called twice.  Tap to place toggles between `IsBeingPlaced` true/false to determine the state of the game object to place.  If `OnPointerClick` is called twice after one click, the game object to place will not change states.  For example, if we have a game object we want to place, we click it once and the game object enters the placing state.  If a double click occurs, the object will be in the placing state and then immediately switch back to the placed state. \r\n\r\nThe guard is there to avoid the immediate state switching after one click.'"
7188,376043525,"b'@CDiaz-MS ""Showing the spatial mesh while the object is in the placing state is behavior from HoloToolkit\'s tap to place."" \r\n\r\nI would also vote on removing this in the MRTK version of TapToPlace. It will simplify the code and remove dependencies. \r\n\r\nIt is important to add events though in TapToPlace on when state transitions occur. This way people can enable or disable the SA system themselves if they so wish. \r\n\r\nWe could also look at creating an extended TapToPlace component in the future that does this SA toggling functionality'"
7188,376048216,"b'Yes, spaces need to be added, the words did appear without a space in the tooltip.'"
7188,376048324,b'fixed'
7188,376067676,"b'It looks `UnityEngine.Physics.IgnorRaycastLayer` is a const = 4\r\n![image](https://user-images.githubusercontent.com/53493796/73976167-95b69f80-48dc-11ea-831e-deb35cdee128.png)\r\n\r\nBut in the UnityEditor the layer is = 2\r\n![image](https://user-images.githubusercontent.com/53493796/73976058-643dd400-48dc-11ea-927a-55e2a24de3a5.png)\r\n\r\nIf 2 is not used as the layer number, the issue of the raycast returning a hit on the object it is supposed to place comes up again.'"
7188,376069051,b'I really like the idea of removing the SA dependency and adding an IsBeingPlaced event.  \r\n@julenka @wiwei What do you think about changing the original HTK behavior for tap to place MRTK?'
7188,376088886,"b'DidHit is used to determine the position of the object.  If the raycast hit a surface, then place the object on that surface, if there was not a hit on a surface then place the object at a default distance.  It\'s named to answer ""Did the raycast hit a surface?"".  The name could be changed to DidHitSurface to make it clearer. \r\n\r\nAlso, there is no particular reason it is public, this property is only used in this file.  I\'ll update this property to protected.'"
7188,376113884,"b'Changed `ColliderPresent` to `protected internal IsColliderPresent` and added `[assembly: InternalsVisibleTo(""Microsoft.MixedReality.Toolkit.SDK.Experimental.Inspectors"")]` to enable access to tap to place\'s custom inspector.'"
7188,376117318,b'`ColliderPresent` is now `protected internal bool IsColliderPresent`'
7188,376123957,b'Added \r\n`CoreServices.InputSystem?.UnregisterHandler<IMixedRealityPointerHandler>(this);`\r\ninto OnDisable to ensure the global pointer events are unregistered if the component is disabled'
7188,376127771,"b'Ok thanks for the info, the RegisterHandler line has been moved after the states have been updated'"
7188,376547374,b'Removed SA dependency and added new events'
7188,376547644,b'Removed SA dependency'
7188,376548306,b'`GameObjectToPlace` was removed so this line is now\r\n```\r\nSurfaceNormalOffset = gameObject.GetComponent<Collider>().bounds.extents.z;\r\n```'
7188,376548654,b'SA dependency was removed'
7188,376549971,b'I removed the `GameObjectToPlace` property because the game object to place will always be the `gameObject` TapToPlace is attached to. '
7188,376568548,"b'`if (SolverHandler.TransformTarget != null)` was added for the case where `AutoStart` is true and the `TrackedTargetType` is not the head (i.e. Controller Ray or Hand Joint).  The head gaze ray is always present on application start, so there is not a case where it could be null.  \r\n\r\nUnlike the head gaze ray,  the controller ray or hand joints as a `TrackedTargetType` come in and out of tracking, which create potential for a null `TransformTarget` on Start.   For example, if we have an object with `AutoStart` enabled and the TrackedTargetType is controller ray,  but the controller ray is not tracking yet on Start, then we are trying to calculate where to place an object based on a null position.\r\n'"
7188,376572384,b'Yes this would disable other solvers on an object.  But is there a case where there would be two active solvers on one object? @wiwei '
7188,376630109,b'Yes there are cases where two solvers can be active on one object. That is actually a semi-fundamental part of the way solvers were originally designed. This class should definitely just disable itself if applicable'
7188,376666239,b'I do not think realtimeSinceStartup will be helpful in this case.  I am trying to catch an extra OnPointerClicked call so the placing state is not switched back immediately.  The issue is explained [here](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7188#discussion_r376031285)'
7188,377350732,"b""So the SA dependency is pretty neat as an option - I think an interesting immediate scenario/selling point is being able to turn it on and being able to place things on walls, rather than having to precreate geometry in the scene.\r\n\r\nHowever, I think it might be more common for folks to load up the example in editor (and thus, having the geometry there and not have it be SA bound would probably be more immediately useful).\r\n\r\nI think it would actually be a nice option to have (i.e. engage SA system during placement) but it's probably fine without. It also sidesteps the question of how to coordinate SA disable/enable (i.e. the multiplexing issue that I mentioned before)"""
7188,377379906,"b'Ah, does https://docs.unity3d.com/ScriptReference/LayerMask.NameToLayer.html this one work instead?'"
7188,377382377,"b""Yep, they're pretty much designed to be able to be chained (i.e. why there's a solver handler/manager that orders them in a deterministic way)\r\n\r\nIdeally this class should just no-op when it's not in placement mode, though FWIW I would imagine that the behavior here is kinda weird when using multiple solvers (i.e. tap to place really does expect to be alone.)"""
7188,377991540,"b'This worked:\r\n```\r\nIgnoreRaycastLayer = LayerMask.NameToLayer(""Ignore Raycast"");\r\n```'"
5052,297415567,"b""Re: removal of Singleton\r\n\r\nWas there a reason this wasn't adapted into something like an extension service?"""
5052,297417285,"b'My goal here was to get a straight, minimal port in to unblock folks who needed it for historical reasons. '"
5052,298672287,"b'Looking at the code (not just the comments :) ), this is in the experimental namespace and should be safe to deliver initially as a monobehaviour to get developer feedback.'"
5052,298672549,b'nit: _maybe_ a bit too casual of a tone in the doc comments?'
5052,298672877,b'?: What kind of information?'
5052,298673288,b'```suggestion\r\n        /// Enumeration defining the types of anchor operations.\r\n```'
5052,298673693,b'nit: why var when int is just as few characters? :)'
5052,298675903,"b'Old code, changed.'"
5052,298675970,b'```suggestion\r\n            for (int i = 0; i < anchors.Length; i++)\r\n```'
3310,246213105,b'coding convention: please add { } around single statement conditionals and format as multiple lines (for readability)'
3310,246213249,b'doesnt feel like we need to check captureTex == null here... it is checked for != null in the next condition and destroyed.'
3310,246213434,"b'formatting feels a bit odd here... not a merge blocker, but if you change this file for other reasons.... ;)'"
3310,246213493,"b'for me, at least, this formatting is hard to read'"
3310,246213683,b'coding convention: please make separate files for each class'
3310,246213721,b'please add summary tags throughout this class'
3310,246214214,b'you should call GC.SuppressFinalize here.  please see https://blogs.msdn.microsoft.com/davidklinems/2006/01/10/wrapping-unmanaged-resources/ for an example dispose pattern implementation'
3310,246214658,b'this feels strange. perhaps remove this class until DLLs are distrubuted with this feature?'
3310,246214801,"b'namespace should have ""Examples"" somewhere (like in the demo script)'"
3310,246214990,b'this could become the basis of adding debug output as part of the Diagnostics System!'
3323,246938760,"b'When running in VR, the demo scene objects appear below the floor plane. 0,0,0 is on the floor in VR vs at the head in HoloLens'"
3323,246939100,b'Please capitalize the enum value names.'
3323,246939764,b'should this be a private set property instead of a method?'
3323,246940233,"b'minor formatting suggestion, please format all empty implementation event methods similar to OnSourceDetected.\r\n\r\nthanks!'"
3323,246940487,"b'MRTK vNext requires Unity 2018, it is likely safe to remove this precompiler condition.\r\n\r\nsame comment applies to all UNITY_2017_x_OR_NEWER conditions'"
3323,246940862,"b'is this code ever going to be needed? if not, please remove as it can lead to customer confusion. if it _is_ going to be required, please add a TODO comment re: why it is currently commented'"
3333,246956062,"b'good catch, thanks!'"
3333,246962212,b'yes please :)'
3333,246962252,b'thanks!'
3334,247009764,b'Thanks for catching that!'
3334,247272928,"b'all other code was using the interface definition, which resides in a different namespace and did not move.'"
3333,247324042,b'done  :)'
3343,248338724,"b'This method is only called from SetBoundingBoxCollider which, in turn is only called from CreateRig (called whenever the state goes from inactive -> active. \r\n\r\nAs the vectors are cached in the positions array, this change feels like a nice to have rather than a must have,'"
3343,248395816,b'That seems reasonable and appropriate'
3355,249221808,"b'for ease of reading, please reformat similar to \r\n\r\n```\r\npublic Side ClippingSide\r\n{\r\n    get { \xe2\x80\xa6 }\r\n    set { \xe2\x80\xa6 }\r\n}\r\n```'"
3350,249266060,"b""I'm a huge fan of readability. Since you do not read currentPoint before you write to it, you can safely do away with the initialization, but I _do_ like the habit of always initializing variables."""
3310,250500199,b'Did we get clarification on the license for this? non-commercial use would likely be a non-starter.'
3310,250709882,"b'> You could use the ""Shaderball"" model that already exists in the MRTK\r\n\r\nI like this idea!'"
3367,250803711,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3323,250811372,b'good catch!'
3384,252489845,b'Good catch!'
3384,252489887,b'```suggestion\r\n  isCustomProfile: 0\r\n```'
3390,252781863,b'that seems like a reasonable spot'
3390,252788123,b'that looks like a typo.... let me check'
3390,252811419,"b'the compiler balked when I left it as internal, presumably because other assemblies are using a public property that calls into this class.'"
3390,252811613,b'i can also envision instances where assemblies may wish to know relative folder paths'
3397,253193888,b'I agree with @Cameron-Micka. Please consider keying off of they type and not the name.\r\n\r\nThanks!'
3399,253226977,b'this is a note to fix building against the .net backend in a future pr'
3399,253227310,b'besides not being a const. the name might be changed by the user.... '
3399,253227488,b'this is to remind me to fix building the .net backend. it is not related to this pr.'
3401,253285948,"b'this is the UWP version number. to the best of my knowledge, it must be all integers'"
3399,255271680,b'not needed at all... removed'
3424,255284634,"b'you cannot return a null since the compiler does not know if T might be a value type. default(T) should return null for ref types, like the observers.'"
3424,255618009,"b'The ""where T : IMixedRealitySpatialAwarenessObserver"" statement tells the compiler that T must implement IMixedRealitySpatialAwarenessObserver. All observers need to implement this interface, plus any additional interfaces / functionality required.'"
3443,256940876,"b""we can update the code to a switch when we hit critical mass of constraints (it'll have to change anyhow as we add new ones)"""
3458,257314050,"b""i'll double check."""
3458,257314261,"b'the older version had grip press if i recall correctly,'"
3458,257315728,"b""there weren't any custom actions"""
3458,257325454,"b'just confirmed, no custom actions and grip pressed was used.'"
3458,257344250,b're-added'
3464,257827858,b'I have confirmed an il2pp build deploys and runs. there are other parts (interactables) of the project that are preventing successful .net backend builds.'
3458,257828179,b'That is something i was wanting to partner with you on. I would like to make the profiler a data provider and give it its own profile.'
3458,257828304,"b'Thanks! You are awesome, @Cameron-Micka!'"
3479,258281208,"b'also, is 50 still too many?'"
3479,258281731,"b'can you define ""highly non-uniform""?'"
3485,258647008,b'we could.'
3485,258649111,b'done.'
3464,258720758,"b'The standing policy is to support the backends that Unity supports. 2018.4 will continue to support the .NET backend for 2 years following its release.\r\n\r\nAs we move to Unity 2019, we will only support il2cpp. For as long as we support Unity 2018, we will also support .NET.'"
3537,261028406,b'Please decorate the class with a DataProvider attribute. Let me know if you need help deciding what values to use.  Thanks!'
3537,261297732,"b""Good point. Let's chat offline and figure out a good solution."""
3464,261438506,"b""I wasn't aware of that define! We should create an issue to replace all of the  #if WINDOWS_UWP && !ENABLE_IL2CPP instances with it!"""
3537,261439572,"b""per our conversation, you don't need the attribute if the class does not implement IMixedRealityDataProvider.\r\n"""
3548,261475889,"b'as much as I prefer doc comments, if this is khronos code, adding the summaries may make it harder to integrate updates, thoug'"
3548,261475995,b'UInt16.MaxValue may be a good choice'
3552,261791391,"b""why this change? isn't the original version the pattern established for MRTK?"""
3552,261791609,b'are you suggesting this as the new pattern globally within MRTK?'
3557,262206492,"b""sounds good. i'll update!"""
3557,262206946,b'sounds good!'
3548,262685857,"b'if the cast cannot be completed as requested, the result will be null. there should be a check to avoid potential NullReferenceException'"
3548,262686300,b'an alternate check would be\r\n\r\nif (!(AssetImporter.GetAtPath(path) is TextureImporter)) { /* handle error case */ }'
3548,262689725,"b'it wont throw (except in very specific cases), but it will return null.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/as\r\n'"
3548,262733601,"b'If the path can be invalid, can it also be pointing to a non-TextureImporter?'"
3548,262735674,b'The security dev/tester in me is always expecting a custom crafted payload that triggers an exploit. I always fall on the side of validation over assuming the data is good.'
3548,262740949,"b'Since we are providing a platform, we should protect the application from corrupt data streams, intentional or otherwise. A null check feels prudent here.'"
3586,264023717,"b'Most consumers of MRTK will not be creating their own profile classes. Suggest the message read something like:\r\n\r\n""This profile is not supported for <service>. Using an unsupported service may result in unexpected behavior.""'"
3606,264705131,b'The foundation code will utilize intelligent diambiguation. There will also be documentation / samples for how to disambiguate cleanly in customer code.'
3610,264966198,b'What does UseSubstitution do? Maybe a quick 1 line summary tag for each.'
3610,264966320,"b'Not overly fond of the enum name. TypeEnum doesn\'t describe the usage. Perhaps ""ProfileCloneBehavior""?'"
3610,264966408,"b'Also, does it make sense to have a leave empty option for sub-profiles that the user does _not_ want to use?'"
3607,264966706,b'Minor issue: MRTK code style capitalizes the first letter of method names.'
3617,265263512,b'why add sealed here? why would we want no further sub-classes to be able to override?'
3617,265267566,"b'@keveleigh, @wiwei, thoughts?'"
3606,265288232,"b'it means we will handle disambiguation in the most appropriate manner (ex: UnityEditor.Editor, etc)\r\n'"
3630,265789458,"b'is this enum intended to be referenced by client code? if so, our guidelines ask for a separate code file. If not, please mark as private.\r\n\r\nthanks!'"
3630,265790559,"b""I don't see a check for editor in this file. Did I miss something?"""
3630,265790693,"b'Is this only used for editor code? If so, please consider wrapping in an editor preprocessor check'"
3630,265792156,"b'Good eye, @andreiborodin! \r\n\r\nWe do have some extensions (ReflectionExtensions.cs) and I believe this may be already provided.'"
3640,266074837,"b'If memory serves, if Instance is null and the component is in the scene, it will be instantiated. The core pattern has not changed (see other examples of calling through .Instance).\r\n\r\nThanks!'"
3640,266080707,b'This is the first of several PRs. The goal of this one is to be as seamless as possible for current code. The next one will pass an instance of IMixedRealityServiceRegistrar to the service instances to eliminate the need to call MixedRealityToolkit.Instance explicitly'
3640,266080868,"b'The complete set of changes for #3545 exceeds the guidelines for small, targeted PRs :)'"
3640,266082400,"b'Yes, this is definitely planned work.\r\n\r\nThe intent here is to get the interface and the first implementation reviewed. I should have the second one (pass the interface to services and some additional static->instance changes) \r\nprepared today.'"
3640,266134066,"b'It;s a good way to check to see if, for example, the boundary system is running.\r\n\r\nThe call would look like\r\n\r\n```c#\r\nif (registrar.IsServiceRegistered<IMixedRealityBoundarySystem>()) { ... }\r\n```'"
3640,266134987,"b'core systems are un-named.\r\n\r\none of the goals of this pr is to limit behavioral change in the service locator. \r\n\r\nthe team is definitely willing to entertain thoughts of how to make improvements to the existing locator, feel free to file issues and they can be addressed in the not too distant future'"
3640,266135163,"b'this is the current service locator behavior. it was a primary goal to minimize functional change when applying this PR.\r\n\r\nthe team is definitely willing to entertain thoughts of how to make improvements to the existing locator, feel free to file issues and they can be addressed in the not too distant future'"
3640,266135296,"b'agreed. one of the goals of this change was to limit behavioral change.\r\n\r\nthe team is definitely willing to entertain thoughts of how to make improvements to the existing locator, feel free to file issues and they can be addressed in the not too distant future'"
3640,266137948,b'There was previously an issue with customers seeing _lots_ of debug output if a service could not be acquired (ex: was not loaded). The showLogs param was an attempt to reduce that output to one message when there was a legitimate issue finding the serivce.'
3640,266139706,b'great thing to add in the future. would be additive not a breaking change :)'
3640,266142221,b'interesting point. the primary goal for removing the statics is consistency and reducing developer confusion (ex: dont i need an instance to be able to query for data)\r\n'
3548,266598782,"b'Can we create models of our own, Perhaps using Paint3D, to avoid additional licensing?'"
3548,266599052,b'Same question re: the boombox model.'
3548,266600478,"b'Can we get an expansion of ""TRS"" to help customers better understand what it is?'"
3548,266600666,b'Same TRS request here.'
3548,266601119,"b'Can we get summary tags for these enum values? Would help customers know what they should use,'"
3548,266601389,"b'These enum values should be capitalized. Also, can we get summary tags for them?'"
3548,266601559,b'Can we capitalize the field?'
3548,266601741,b'Can we please get summary tags for these enum values?'
3548,266601855,b'Please add summary tags for these enum values'
3548,266602058,b'The MRTK coding convention captializes public fields.'
3548,266602319,"b'Can we add summary tags? Also, our coding convention does not use all caps names.'"
3548,266602407,b'Can we get summary tags here?'
3548,266602551,"b'Per coding conventions, public fields should be capitalized.'"
3548,266603031,b'Should update capitalization (ex: POSITION -> Position).\r\n'
3548,266603115,b'Please add summary tags.'
3548,266603524,b'please captialize public fields (throughout)'
3548,266603719,b'please add summary tags'
3548,266603782,b'please add summary tags'
3548,266604356,b'It still feels prudent to check for null to prevent possible app crash / failure case with no developer information.'
3548,266660461,"b""it's a dependency that requires license registration for us to ship. if we create our own test models, there is no extra license validation step before MRTK ships"""
3651,266717021,b'```suggestion\r\n# What is MixedRealityToolkit v2\r\n```'
3651,266717092,b'```suggestion\r\nThe v2 branch is taking all the best lessons learned from the original HoloToolkit and refactoring / restructuring it to both:\r\n```'
3658,267587412,b'do we need this namespace? #Resolved'
3658,267587446,b'or this one? #Resolved'
3658,267587565,"b'```suggestion\r\n    /// This class is an example of the <see cref=""Microsoft.MixedReality.Toolkit.SpatialAwareness.IMixedRealitySpatialAwarenessObservationHandler{T}""/> interface. It keeps track\r\n```'"
3667,267863950,"b""this was left over from an earlier round of edits. i'll remove :)"""
3667,267864145,b'i didnt see a need for one. i am happy to add it for balance. '
3667,267864516,b'5 was me leaving existing behavior in place. i am definitely open for adding a defined value'
3667,267864880,b'most likely. thanks for catching it!'
3667,267865641,b'good call'
3667,267876473,"b'at this time, the teleport system required an input system. that dependency is not intended to be changed in this PR.'"
3667,267884361,b'we may be able to. that would be outside of the scope of this PR. the goal is to limit the change as much as possible.'
3698,270074507,b'this formatting will likley not be picked up by the doc generator. please consider reformatting'
3698,270074806,b'plz consider adding a summary tag for this struct'
3738,270610683,"b'Service is define as an IMixedRealityService to enable it to store any derived type. This line casts to the expected type, in this case IMixedRealityInputSystem in such a way as to get a null, rather than a typecastexception in the event that the wrong type (or null) is stored.'"
3738,270944465,b'Good suggestion. Will add that in the near future.'
3738,270960448,"b""good question. i'll be sure to do a thorough scrub in the near future to ensure we are doing the right thing"""
3738,270960639,b'will do. thought I removed all of them :)'
3743,270983752,b'That will indeed need to change. The input simulation service will be registered in the input system profile going forward (and in fact is there by default)'
3755,271456040,"b'As long as the change (if truly needed) does not constitute a breaking change, we can definitly defer unitl after RC1.\r\n\r\nWe **could** take this merge and fix issues in the developent branch prior to declaring RC1 for better visibility on the scope of the change.'"
3750,271461902,b'makes it nice and easy to spot. thanks!'
3755,271462706,"b'if not, there may have been merge was incorrectly resolved. we should investigate and update as a separate PR if necessary'"
3768,271493662,"b""hmmm. good catch. i'll take a look\r\n"""
3768,271493976,b'do you recommend removing the example implementation section?\r\n'
3768,271515521,b'now pointing to the correct branch'
3768,271515863,"b'xref references (suggested by @thalbern ) are resolved by docfx, I believe'"
3774,271530907,b'thanks!'
3774,271530978,b'thanks!'
3780,271552759,b'why remove the range? what would happen if the value were 0 or negative?'
3780,271552924,"b'also, can you add a previouslyserializedas attribute to support legacy profiles?'"
3807,271945473,b'curious as to why this changed to internal'
3807,271945648,b'the pattern for MRTK has been to use lower case private field names and not using underscores.'
3807,271947458,"b'I just noticed this is in a demo script. while the standards should be the same, I do not believe the team is quite a strict :)'"
3807,271956006,b'just the beginning :)'
3805,271993924,b'```suggestion\r\n- [Floor Settings](#floor-settings)\r\n```'
3805,271994005,b'```suggestion\r\n- [Boundary System](BoundarySystemGettingStarted.md)\r\n```'
3812,271994340,"b'```suggestion\r\nwalk you through the general thought process of how to conduct a performance analysis, along with common\r\n```'"
3812,271994471,"b'```suggestion\r\nFor people completely new to performance optimization, this is a great video to watch.\r\n```'"
3812,271994860,"b'links as document section headers seems a bit unusual. \r\n\r\nperhaps move the link to the word ""video"" in the following sentence'"
3812,271995035,"b'```suggestion\r\nresources, but is worth repeating here because enabling this is crucial for performant mixed reality apploications.\r\n```'"
3812,271995249,b'developers will need to turn the diagnostic system off in their profile before shipping. maybe link to the diags documentation or repeat the guidance from there?'
3828,272289837,b'```suggestion\r\n* [HoloToolkit to Mixed Reality Toolkit Porting Guide](HTKToMRTKPortingGuide.md)\r\n```'
3828,272290258,b'should have a related profiles list'
3828,272290501,b'needs related profiles listed'
3828,272290668,b'Related profiles needed'
3828,272290787,b'list mesh observer profile?'
3828,272290869,b'profile(s) list'
3874,272812685,b'```suggestion\r\n- [Official Release](#official-release-plan)\r\n```'
3874,272812691,"b'```suggestion\r\nWith the RC1 release of MRTK v2, the majority of the componentization work has been completed. \r\n```'"
3874,272812694,b'```suggestion\r\n- [Component communication](#component-communication) is performed through interfaces \r\n```'
3874,273194117,b'nope. was a placeholder I forgot to remove.\r\n\r\nthanks!'
3874,273194199,b'```suggestion\r\nindividual components are isolated from all but the core layer of the foundation.\r\n```'
3874,273194430,b'```suggestion\r\n![Using the spatial awareness system via interfaces](../../External/ReadMeImages/Packaging/AccessingViaInterfaces.png)\r\n```'
3874,273194505,"b'```suggestion\r\nRC2 will have support to enable applications to be built with a variety of architectures, including:\r\n```'"
3643,273627590,"b'@Alexees, the team was very busy preparing the RC1 release and this PR was postponed.\r\n\r\nI will personally pull and test your changes this week.\r\n\r\nThanks!'"
3922,274708340,"b""@lukastoenneMS, i'll handle the updates as I merge into my branch/fork. that way, this PR stays as targeted as possible"""
3922,274708888,"b""Let's file an issue on that once this is in."""
3922,274709275,"b""I'll handle the update when i merge into my working branch. thanks!"""
3946,275217953,b'please add { } around these if blocks. too easy to add an indented line that looks to be in the block but isnt.\r\n\r\nthanks!'
3922,275306978,"b""The MRTK core assembly should have no dependencies, in a perfect world. Let's identify the specific editor assembly classes and methods and investigate moving them into the core assembly, or at least factoring them into an isolated assembly that is safe for the core to reference (and avoid the cycle that @lukastonneMS mentions)."""
3976,275724926,"b'This can be likely be simplified to property.type.Name.\r\n\r\njust a note, _not_ needed for this PR as this is pre-existing code.'"
3977,275725520,"b'Why the change from 140 -> 170? \r\n\r\nBy the way, these both feel like ""magic numbers"" that might warrent a named constant for clarity.'"
3977,275725751,b'nice addition!'
3962,275735317,b'Having things like profile locks at the project level feels right. Developers may wish to unlock profiles for only a specific project to avoid accidentally modifying them in others.'
3936,275760248,b'should these be readonly with a constructor that sets them?'
3936,275760562,"b'should this be a MessageEvent instead of a byte[]?\r\n\r\nalso, same question as MessageEvent re: readonly fields with a constructor'"
3936,275761052,b'i dont actually see a diconnection occuring here.'
3936,275761320,b'should this take a MessageEvent?'
3936,275761716,b'should this take a MessageEvent or am i missing something?'
3981,275785710,b'Looks good!'
3985,276121844,"b'readonly fields can only be initialized in their declarations or in the constructor. by making this a monobehavior (and initializing them in awake) they cannot be readonly fields.\r\n\r\nto preserve the previous behavior, consider initializing in the declarations (like previously) and not in Awake.'"
3991,276630039,b'Is this to inform of deprecated method use in the core toolkit or is this something that app / extension code may hit?'
4060,278193524,b'looks like the issue is actually a missing href line.\r\n\r\nplease add:\r\nhref: SpatialAwareness/ConfiguringSpatialAwarenessMeshObserver.md'
4099,279047172,b'Good question. Something similar may be introduced elsewhere (ex: in the main profile when selecting the experience scale) that better describes the expected behaviors.'
4099,279047459,b'Part of the intent with removing this warning is to avoid reaching across profiles for information (better separation)'
4099,279092520,b'good catch! i can add summaries.'
4099,279097591,b'You can thank @Alexees for most of it! I just did some minor reformatting and tweaking.'
4099,279106212,b'Good call!'
4099,279106347,b'Sounds good. I will clarify the comment when i move the check to AddService\r\n'
4099,279107558,"b""This is based, a bit on Unity's transform API. there is a RemoveChildAt(index), but no RemoveChild(transform).\r\n\r\n@WiWei, can you file an issue to add better symetry?"""
4099,279107688,b'you bet!'
6875,357571073,"b'Nope, these represent the type of manipulation, so they should all be called with the same values for `isOneHanded` and `isNear`.\r\n\r\nIn fact, `transform` should be a reference to the same `MixedRealityTransform` for all three calls.'"
6875,358210506,b'those three methods are the same except the transform flag check - wondering if we should put the content into a common private function where we just pass the constraint '
6875,357286617,"b""The old code that handled faceAway actually had directionToTarget (not the negative version of it) - i.e. if you see on the old line 650). I'm not an expert here so maybe there are some new changes between those two sections, just wanted to check if there was an error before (or now) or something else in between changed up."""
6875,357493009,b'Agree with will -- reading the code it seems this shoudl be flipped but probably good to just verify the behavior because I could be wrong:\r\n\r\n```suggestion\r\n            transform.Rotation = Quaternion.LookRotation(faceAway ? directionToTarget : -directionToTarget);\r\n```'
6875,357590831,"b""Oh thanks for catching this. I actually noticed that the logic in `ManipulationHandler` was incorrect but I didn't fix it properly for this constraint and forgot to fix for `ManipulationHandler`.\r\n\r\nI've confirmed that `ManipulationHandler` options do the opposite of what you'd expect. Here are the options I used for `ManipulationHandler`:\r\n![image](https://user-images.githubusercontent.com/47415945/70794742-4b121e80-1d96-11ea-9f88-b1107978a887.png)\r\n\r\nAnd here's the behaviour:\r\n![face_user_wrong](https://user-images.githubusercontent.com/47415945/70795071-ed320680-1d96-11ea-8cf7-ab2554f7eebd.gif)\r\n\r\nI'll fix this for both this constraint and `ManipulationHandler`"""
6875,357727026,"b'On a second look, this isn\'t actually incorrect, it just so happens that most objects in the HandInteractionExample scene have a ""front"" on the ""back"" side of the object:\r\n![image](https://user-images.githubusercontent.com/47415945/70814953-7f043880-1dc4-11ea-937a-980e5eac67c2.png)\r\nWhen we do `FaceUser`/`FaceAwayFromUser` it\'s the blue axis that we\'re pointing towards/away from the user. That\'s why in `ManipulationHandler` the behaviour looks backwards while the logic looks more correct.\r\n\r\nI\'m not familiar with which axes generally point where on object models, so I\'m not sure whether we should fix this for correct looking behaviour or for correct logic.'"
6321,337510472,"b'I would rather have this interface just with a pose and have the pose include the scale value - our current MixedRealityPose doesn\'t support that, but maybe we can discuss adding that for a future PR. That would make this interface cleaner and easier to use. Also MixedRealityPose would feel ""more complete"" for me as it\'s our representation of a Unity Transform'"
6321,349245587,b'How is this different from a solver?'
6321,349500800,"b'This only constrains in what way we can manipulate an object, whereas if I understand it, a solver continuously updates an object\'s transforms in some way relative to another transform.\r\n\r\nFor example, if we had a ""fixed distance from head"" constraint, that limits a transforms position so that while manipulating, the object remains at a fixed distance from the head, but once we stop manipulating we can move away from the object and it will stay in place.\r\n\r\nWhereas, if we had a ""fixed distance from head"" solver for example, that would continuously update the position of the object. When we move, the object will always move with us, remaining at a fixed distance from the head. \r\n\r\nThe solver also needs to make some decisions as to where to move the object to, whereas with constraints this is managed by manipulation.'"
4270,283752108,"b'>if (!Application.isPlaying) [](start = 20, length = 27)\r\n\r\nNo biggie and thanks for spotting it but this seems to fix a different bug. If that is the case I would have rather seeing this change in a separate PR and linking to its own bug.'"
4270,283963599,"b'Actually, without this fix the playmode tests will fail, caused by a null reference exception that happens when removing the controller for a simulated hand.'"
4715,291288966,b'Can we use `IsTracked` for this?'
4715,291290128,"b'This event will fire for all lost sources, not just the one this pose synchronizer is listening for. This should probably be inside the below `if` statement (pending my first comment, though).'"
4715,291293343,b'Or maybe `TrackingState`?'
4715,291542568,"b""Following from Julia's suggestion, we should probably use `enabled`"""
4970,295381267,"b'>InputSystemGlobalHandlerListener [](start = 46, length = 32)\r\n\r\nFor my own understanding, is the main value in going with InputSystemGlobalHandlerListener here (instead of just being a MonoBehavior) is how it will wait for the input system to be valid before starting up? Or is there some other aspect here of non-focus/gaze related stuff?'"
4970,295395712,"b""3 things:\r\n* hides waiting for input system in `Start`.\r\n* InputSystem property was used in most of derived classes, and I didn't want to copy-paste it everywhere.\r\n* additional utility method to register all handlers for a component via reflection (used in only one place for the moment, but it will not look nice without it)\r\n\r\n---\r\nIn reply to: [295381267](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4970#discussion_r295381267) [](ancestors = 295381267)"""
4970,295397981,b'Actually I misread the class what class the question was for..\r\nJust first 2 reasons for this one.'
7012,365003271,"b'I believe this is removing a field in an asset, could this break people that depend on that somehow, or is it unused?'"
7012,365005955,"b'Yeah, unless this is replaced somewhere in the same script, I think it should stick around. This class is intended to be used for more than just pointers.'"
7012,365006262,b'Is the gameobject name updated somewhere else now?'
7012,365015099,"b'The existing bug here is that Handedness is both controlled via it\'s setter and via the Controller public property. This is a conflict because it doesn\'t make sense that Handedness is both the value I should synchronize with as well as my current handedness. \r\n\r\nFor example, I could set handedness in inspector to left and then this is completely ignored by setting Controller property to the right one. Furthermore, I could then set Handedness to value Left again....even though I am assigned to the right controller.\r\n\r\nThus, either this becomes \r\na) only a getter saying ""hey I am currently this handedness"" (which is current solution in this PR)\r\nor\r\nb) The Handedness property has a setter which is validated throughout the class (i.e you can\'t assign a Controller that has an invalid handedness)\r\n\r\n@julenka  / @keveleigh thoughts on A vs B?'"
7012,365015870,"b""Doesn't that seem weird to force it on the user? PointerName is at least assigned/controlled by the consumer. """
7012,365016868,"b""Furthermore, I could set Handedness to Any and then Controller property sets it to Right. \r\nOriginally, if I set Controller to null (which is done in the input system), then the handedness would still be Right...not Any which is what I had set in the inspector.\r\n\r\nThe lifetime of this property isn't properly managed so we need to go with either A or B above...or if you guys can provide a third option"""
7012,365027743,"b""b) seems riskier, so it's okay to go with a) for now. @thalbern or @wiwei , regarding deprecating fields, do you have suggestions? Another suggestion is we could mark the property as obsolete for a release, and not use it internally anywhere. We could remove it in 2.4."""
7012,365032059,"b""I could mark it as obsolete...but it's a private field so I don't see how people could leverage it?"""
7012,365379706,"b'Interesting...looking through, I thought this script used to do more as far as ""set the handedness in the inspector, then wait for a controller to be detected with that handedness and synchronize"". It doesn\'t appear to do anything like that anymore.\r\nOf course, that\'s also probably a better use case for solvers than this. I think I\'m less concerned about this removal now, since...it doesn\'t do anything? At least in the base class.'"
7012,365948365,"b'I just deprecated for now, but it at bottom of class'"
7012,366323626,b'Why not just use \r\n```\r\npublic bool DestroyOnSourceLost => destroyOnSourceLost;\r\n```\r\nIf you are not altering either the getter / setter?\r\n\r\nAlso consider this for other areas this is being changed for'
7012,366323944,"b'Why remove the setting of the game object name, unless you are now doing this somewhere else?'"
7012,366326718,b'I would seriously have to question why you are putting an obsolete flag on a PRIVATE field.  \r\nObsolete is for telling consumers of a function or property outside a class is it going to be deprecated.  Private fields do not fall in this category because they are private.  No need to make them obsolete.'
7012,367160122,b'It was originally removed. Please read PR thread \r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/7012#discussion_r365003271'
7012,367160259,"b'I believe that just creates a getter, no setter'"
7012,367160597,"b'In the PR description there is an example. Basically constant calling to his makes ""Left_Right_Left_BlahPointer"" names. Instead of checking the name and doing substrings, I just removed it so the name is left as-is'"
5955,324909904,"b'> var mh = manipEvent.ManipulationSource.GetComponent<ManipulationHandler>(); [](start = 11, length = 76)\r\n\r\nNot really related to your current change, but do you know if this mh is always gonna be the same as the mh defined in Start()?\r\n\r\ni.e. should we just cache mh in Start and use that to then do mh.ManipulationType?\r\n\r\nI assume that what this code here is trying to do is ask questions about the manipulation handler on the same game object, not about the manipulation handler on some unrelated game object.'"
3764,271491908,"b'> private bool isRecording = false; [](start = 7, length = 34)\r\n\r\nIs this intended to be used for logging/debugging purposes only? It looks like this is getting set correctly but not inspected.'"
3764,271492498,"b""Or was this kinda to make sure that StartRecording doesn't invoke dictationSystem.StartRecording in the case it gets double-called?\r\n\r\n---\r\nIn reply to: [271491908](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3764#discussion_r271491908) [](ancestors = 271491908)"""
3764,271639350,b'The second. It must have been lost when refactoring. Thanks for the catch!'
3755,271434431,b'nit: serialized fields should have tooltips'
3755,271449073,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3767'
4626,290408718,b'We may also want to use FormerlySerializedAs here as well.'
4626,290409180,"b""Was this namespace change intentional? This doesn't feel like a demo because it's actually in the .SDK/ place (not the demos location)"""
4626,290409573,b'(Actually for all of the rename/changes below as well)'
4626,290409896,"b""Hm, weird, yes - I don't remember changing that. Odd. So, which namespace are we using then? Stay with .Input?"""
4626,290410621,b'I think that this comment was related to the OnLookStart (should probably be changed to reflect the dwellTimeInSec value instead)'
4626,290411477,"b""Nit: Add a comment for public properties (in particular, is this true if you're just looking at it, or does it wait for some little amount of dwell as well? i.e. if my eye just flickers over it I assume this will return yes very transiently)"""
4626,290412975,b'```suggestion\r\n            if ((InputSystem?.EyeGazeProvider != null) && (InputSystem?.EyeGazeProvider?.UseEyeTracking) && (InputSystem?.EyeGazeProvider?.IsEyeGazeValid))\r\n```'
4626,290422404,"b'If I do this, I get the following error:\r\n![image](https://user-images.githubusercontent.com/32180789/58902387-ddcf5380-86b7-11e9-9b32-2983425a6b4d.png)\r\n\r\n'"
4626,290427049,b'> (Actually for all of the rename/changes below as well)\r\n\r\nWhich other ones? '
4626,290427243,b'Updated!'
4626,290427365,b'Updated!'
4626,290703895,b'Oh noooooooooooo yeah I was wrong.'
4626,290704086,"b'Yep, keep with what it was (unless we have a good reason to change it!)'"
4626,291344406,"b""Can we leave these as private and add public accessors instead? We've wanted to keep things encapsulated, [per the coding guidelines](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Documentation/Contributing/CodingGuidelines.md#encapsulation).\r\n\r\nMight also be a good time to make the serialized field lowercase with the `FormerlySerializedAs` tag."""
4626,291736632,b'@keveleigh Updated.'
7246,383484441,"b'I find the difference between ""UseEyeTracking"" and ""IsGazeInputEyeBased"" confusing. Shouldn\'t ""UseEyeTracking"" be used as an indicator to whether eye-gaze input is used in contrast to ""IsGazeInputEyeBased""?'"
7246,383843404,"b'Agree that the names are confusing, although having useEyeTracking does not guarantee that eye is input for gaze pointer. '"
7246,387138077,b'IsGazeInputEyeBased is a combination of UseEyeTracking which is the user enabled setting for having eye tracking as input method and IsEyeTrackingAvailable (which i want to rename to IsEyeTrackingDataValid) which is the flag for indicating if we did receive / could process eye tracking data from the hardware.\r\n\r\nSo basically IsGazeInputEyeBased is like a IsEyeTrackingEnabledAndValid flag (maybe we should rename it to that?)'
7246,387215580,b'Its more clear to me too'
5562,318750461,b'do you need to initialize this? = new UnityEvent()'
5562,318754281,"b""I shouldn't need to since Unity's serialization system will overwrite this value at deserialization time. But, if this is a pattern we want to follow in the MRTK I can change it?"""
5562,318836072,b'What about if you instantiate the component at runtime?'
5562,318844236,"b""Good catch!  I'll make that change."""
4475,287247050,"b""I understand the reason for this class is because Unity is not fond of Generics. This class makes sense. However, there are two main things I'd like to see addressed:\r\n\r\n1. There are no code comments and therefore no intellisence or documentation on the type.\r\n2. The type is a nested type inside of InputActionHandler. I do not believe this should be a nested type. I beleive it should exist in the namespace."""
4475,287247325,b'Just want to say that I really do like this class. I think this will be quite helpful.'
4475,287247594,"b'I really like this pattern. Converting to Unity event handler and the option to mark as ""used"" are both great features.'"
4475,287314247,b'Good idea. Changes coming.'
6321,337503342,b'should we move those into the rotation constraint? #Resolved'
6321,337504190,"b""should we change this to be ScaleConstraint? would make more sense I suppose / less confusing for users - (for later: we can create a doc chapter about all our constraints and how they're working together with different ux elements)"""
6321,337505215,"b""xD didn't see i'm in manipulationhandler - fine this way :) \r\n\r\n---\r\nIn reply to: [337503342](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6321#discussion_r337503342) [](ancestors = 337503342)"""
6321,337519135,"b'I changed it to ScaleConstraint initially, but it broke references to it in the example scenes. Is there a way to rename a component without breaking references?'"
6321,337554911,"b""It looks like it's worked now. I may have tried to move it as well last time and that's why it didn't work. I've gone with `MinMaxScaleConstraint`."""
6321,338066188,"b""I would've preferred ScaleConstraint - i don't think the minmax is necessary?"""
3323,250810678,"b'I feel like some changes were reverted, like the capitalization changes here: https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3323/commits/403140a93a374c8624088ee2a116d51270969607'"
3323,250811089,b'The enum capitalization might be the only one actually'
3323,250811372,b'good catch!'
3323,251177508,b'Updated!'
4056,277748982,"b""Don't you also need to update objectToHandRotation to use the pointer pose?"""
4056,277750167,b'Will this correctly use the grip pose rotation instead of the pointer pose rotation?'
4056,278020433,"b""I believe it shouldn't matter because we're only interested in how the rotation changes over time, not the absolute value. In practice, it seems to work fine for 6 DOF controllers and near interaction but hand rays don't produce any rotation."""
4056,278022639,b'It seems that it was already using it:\r\n\r\n            // Calculate relative transform from object to hand.\r\n            Quaternion worldToPalmRotation = Quaternion.Inverse(pointer.Rotation);\r\n            objectToHandRotation = worldToPalmRotation * hostTransform.rotation;'
4118,279616750,"b""Would be nice to explain why we are doing this null check here instead of just using pointerIdToPointerMap.Count, it's not obvious to me :-)"""
4118,279616921,"b'> Not to sound self-referential but this PR fixes the issue it fixes, i.e.: #4117. I agree ManipulationHandler could do with a general review (e.g. use of controller velocities) but in the meantime fixing those null references does no harm and help us with upcoming changes to gaze pointer.\r\n\r\nI think Stephen actually has a point. This will unblock people yes, but really we should remove all that velocity code from ManipulationHandler. I created a separate bug to track that. It sounds like this at least temporarily unblocks you though, which is why I approved this PR.'"
5086,298192079,b'```suggestion\r\n            // by the manipulation handler. Check if these children have contexts that tell\r\n```'
5156,299184011,"b'One minor improvement on this would be to cache this value anytime the pointer map is updated - so on pointer down/up, it will call .First() just once (which would then be reused for the duration of the move ""updated"" path).\r\n\r\nMore generally this would also lead to actual determinism in the algorithm as well, because right now it\'s only working thanks to luck - dictionary value enumeration is never advertised as being deterministic.'"
5156,299220153,"b""I think that would be ideal. I'm going to leave that for @julenka to work out since she's most familiar with the state machine."""
5156,299804330,"b'Easiest may literally be to just have two fields: \r\n\r\n```\r\nPointer firstPointer;\r\nPointer secondPointer;\r\n\r\nOnPointerDown(Pointer newPointer)\r\n{\r\nsecondPointer = newPointer\r\n}\r\n\r\nOnPointerUp/OnSourceLost(Pointer lostPointer)\r\n{\r\n  if (lostPointer == secondPointer)\r\n  {\r\n     secondPointer = null;\r\n  }\r\n  if (lostPointer == firstPointer)\r\n  {\r\n    firstPointer = secondPointer;\r\n    secondPointer = null;\r\n  }\r\n}\r\n\r\nprivate IMixedRealityPointer GetFirstPointer()\r\n{\r\n  return firstPointer\r\n}\r\n```\r\n\r\nThis of course assumed you never have more than two pointers, but I think this is fair and we can debug assert that.'"
5261,302424263,"b""To make it more C#-like, I'd change this method into a read-only property, maybe called just `GrabPoint`."""
5309,304037083,"b""it feels a bit wrong to me that we set the scale min and max here but not retain the info about this being relative to the initial state. so if you would call start() again after setscalelimits has been called with relativeToInitialState is true , the scale would suddenly change because it's interpreting those values as relativeToInitialState the second time this is called. """
5359,305559162,b'spacing'
5379,305733197,"b""I have this marked as WIP. For one, it's doesn't work with 6dof controllers as it doesn't take the controllers rotation into account. Additionally, relying on the `rotateLogic` isn't ideal, as I'm pretty sure there are circumstances where this object will not be Setup with the correct values for the current rotation."""
5359,305749445,"b""Regarding my changes in #5364: those affect only the position vector, by ensuring that the grab point is properly fixed in object space.\r\n\r\nThe rotation is computed independently before that. Bernadette's change improves the stability of the rotation constraint, by constraining the overall rotation since start of the manip instead of each incremental rotation offset."""
5379,305833867,b'This should also include the calculation of `right` above.'
5379,306809840,"b""Oops, forgot to remove the WIP stuff. I'll do that now."""
5379,307011902,b'Could you please explain why you removed this? It seems like this is changing behavior of GrabPoint so I want to understand repercussions.'
5379,307012442,b'Or zero if none is found?'
5379,307012680,"b'Perhaps we should assert here that the pointer exists in the map, returning zero if none is found might lead to some tricky to discover bugs in the future.'"
5379,307012979,b'nit: remove commented code.'
5379,307013412,"b'can we remove hostLocalGrabPoint variable if we are not initializing it? Or, is it already removed?'"
5379,307201251,"b""Yeah, my changes require a distinction between the pointer position, the grab position and the object position:\r\n\r\n- pointer position: A point on the hand/controller defined by the type of pointer you're using\r\n- grab position: A point on the object where the pointer grabbed the object\r\n- object position: The origin point of the object\r\n\r\nThe way this was before, for near interaction the pointer position and the grab position would be equal. In fact, for near interaction pointer.Position returns the palm position. Now, the grab position is where you grabbed the object."""
4756,291316534,"b'there does not appear to be a unique page for 2017... you have to click on ""older versions""\r\n'"
4756,291317545,b'updated download link'
4721,292573899,b'```suggestion\r\nmeshes known to that observer.\r\n```'
4720,292576243,b'This is not quite accurate. Hiding the mesh is different from disabling the system.  Either the caption needs to be Disabling Spatial Awareness or the instructions need to direct the user to set the DisplayOption on the observer to None'
4882,293855100,"b""> and I can't count past 2 so \r\n\r\nHahaha!"""
4882,293855643,b'i didnt notice adding that.... might have been auto-added by Unity 2018.4.2'
4882,293856276,"b"">  consider spawning a different interface\r\n\r\nThat would be consistent with the IMixedRealityDataProviderAccess interface. I'll make the change"""
4882,293870106,b'removed. was unused and was blocking .net backend builds'
4882,293876331,b'> This is gonna be a pain (sorry) \r\n\r\nNot a pain at all. :)'
4882,293879076,"b""I'll add enums for the following (and implement the checks in a future PR)\r\n\r\n- VoiceCommand (aka keywords)\r\n- VoiceDictation\r\n- SpatialAwareness (question: should there be three of these? mesh, plane, point)"""
4455,294378625,"b'@SimonDarksideJ, that Unity blog post was from five years ago. I concur with @Railboy that we should not over index on something that was asked and no related product change for that time span.'"
4455,294913888,b'This feels like a major behavior change (it doesnt look like this code was moved from elsewhere in the input system).\r\n\r\nIt also does not feel like the responsibility of the input system to enforce this (read: what if the input system is not being used?).'
4455,294914041,b'Shouldnt this be the responsiblity of the camera system?'
4455,294914814,b'This feels like non-deterministic behavior from an application stand point (read: an app may not always load scenes in the same order and may get different playspaces each time).'
4455,294915003,b'I realize we discussed this a bit yesterday in person. It just hit me this morning while re-reviewing.'
4455,294938881,"b""> if the input system isn't being used then the event system is not added\r\n\r\nIn the current implementation, which component is adding the event system to the camera?"""
4970,295545601,"b"">Do we actually have a scenario where we'd want a delayed registration in Start and not just fail fast in enable, if input system is not present?\r\n\r\nBy that argument, should the base class Start need to be async at all? :)"""
5022,296799281,b'nit: prefer expanded names (not acronyms)'
5022,296800243,b'Registrars could possibly trigger an invalidate or we could add an event to signal the cache to clear. Would love to hear thoughts on these options.'
5022,296800722,b'consider adding a flags param to allow invalidating individual services (or all)'
5022,296842416,"b'Or, ServiceCache?'"
4455,296858780,b'We cannot have direct references to the MixedRealityToolkit class in our systems. They need to use the MixedRealityServiceRegistry'
4455,296858851,b'We cannot have direct references to the MixedRealityToolkit class in our systems. They need to use the MixedRealityServiceRegistry'
5035,297257307,"b'No, the addition of the ClearObservation methods is also a breaking change'"
5035,297262080,b'done :)'
4858,297284275,b'fixed by restoring from the dev branch'
4858,297284552,b'accidental. should not have been changed'
4858,297285085,b'fixed'
5045,297359954,"b'removing these as the doc tool apparently is not fond of bookmarks with a \'.\' in them. (this was the failure in doc generation: ""illegal link"")'"
4965,298452667,b'We use these comments to generate API documentation. Agree they should be added.\r\n\r\nThanks!'
5052,298672287,"b'Looking at the code (not just the comments :) ), this is in the experimental namespace and should be safe to deliver initially as a monobehaviour to get developer feedback.'"
5052,298672549,b'nit: _maybe_ a bit too casual of a tone in the doc comments?'
5052,298672877,b'?: What kind of information?'
5052,298673288,b'```suggestion\r\n        /// Enumeration defining the types of anchor operations.\r\n```'
5052,298673693,b'nit: why var when int is just as few characters? :)'
5135,299559957,b'It should as this is a run time addition. :)'
5135,299560293,"b""I'll be sure to run the CI tests to make sure there nothing conflicts"""
5128,299720963,"b""it's not really needed anymore. i can remove if you think it is the right thing to do"""
5128,299721026,b'it was todo to pick the right number :\\'
5128,299728384,b'removed'
5128,299728467,b'Serialize and Write* removed as they are not needed for the asset importer and end up being stale code.'
5128,299762536,b'it feels like we need a followup PR to separate service and data provider menus.'
5140,299763604,b'nit: specify units (presuming meters)'
5128,300079356,b'this was debugging code... thanks! :D'
5128,300079557,b'good catch... was supposed to be private'
5128,300079710,b'that is by design so that the collection does not change during enumeration. same behavior as the WMR Mesh observer'
5128,300081586,"b'for this pr, this code will not change. we should open a discussion re: safety vs performance and guidance relating to the two '"
5128,300081757,b'interesting.. i dont think even the live mesh handles that :)'
5128,300082124,b'you update the display option. we _can_ change the semantic.'
5128,300082240,b'same as the occlusion material question :)'
5128,300082522,b'ex:\r\n\r\nobserver.OcclusionMaterial = newMaterial;\r\nobserver.DisplayOption = Occlusion;'
5128,300082654,b'i like that'
5191,300119544,b'```suggestion\r\n1. Notifications for when observations (ex: meshes) have been generated (and a way to get those observations).\r\n```'
5191,300119817,b'```suggestion\r\n3. Visualization of the observed environment.\r\n```'
5191,300119910,b'```suggestion\r\nThis system only works on platforms that support spatial mapping. Currently MRTK provides in-box support\r\n```'
5191,300119954,b'```suggestion\r\n- HoloLens\r\n```'
5191,300120202,b'```suggestion\r\nand then running its list of spatial observers (which are also referred to as data providers).\r\n```'
5191,300120340,b'```suggestion\r\nin-box MRTK spatial observer talks with the Windows Mixed Reality platform to get HoloLens meshes) and\r\n```'
5191,300120867,"b'It is the observers that have the configuration settings re: start behavior, etc. The system only manages observers.'"
5128,300162586,b'added support and confirmed in editor.'
5128,300167737,b'good call!'
5128,300177401,b'already fixed.\r\n'
5230,301260529,b'timing to allow the system state to be updated by the speech event handler.'
5230,301260661,b'good call'
5230,301319123,"b'in an earlier incarnation, it failed each time unless under the debugger (timing changes)... i felt this was a more robust way ensure a good buffer of time :)'"
5233,301714819,b'These methods are documented as part of the IMixedRealityServiceRegistrar interface :)'
5233,301715553,"b""i'll write something a little more descriptive :)"""
5233,301733136,b'done :)'
5233,301733191,b'done :)'
5233,301733246,b'done :)'
5233,301733306,b'done :)'
5233,301733346,b'done :)'
5233,301778003,b'yeah copy/paste typo :)'
5233,301778576,"b'It was originally intended to span multiple systems. Currently, it only impacts boundary, though it can (should) be used to determine the location of the origin (head or floor)\r\n'"
5233,301778739,"b""I'll take a look"""
5233,301778943,b'was a safely check. there shouldnt ever be nulls\r\n'
5233,301779581,"b""The interface was designed to support the MRTK object's public methods. we should consider removing this one as it is of limited use."""
5233,301779934,b'All. This is the same semantic used elsewhere (ex: MRTK object)'
5233,301780354,b'> Does this have to be default(T) because the compiler thinks we might be using structs or something else here?\r\n\r\nExactly'
5233,301781227,"b'you know, that should likely be pushed into the base class... good catch!'"
5233,301790409,b'fixed'
5233,301790595,b'fixed'
5233,301790727,b'fixed'
5233,301791072,b'fixed'
5233,301796394,b'fixed'
5233,301800029,b'fixed'
5233,301800097,b'fixed'
5233,301800155,b'fixed'
5233,301800258,b'fixed'
5233,301800319,b'fixed'
5233,301800436,b'fixed'
5233,301800755,"b""while retaining the MRTK object's behavior\r\n"""
5233,301801363,"b'AddService is what updates the registry. If we do not add the service, application code cannot locate the service without having foreknowledge of the registrar(s) in the scene.\r\n\r\nThe local storage within the registrar implementation is a performance optimization so that it does not need to query the registry each update, enable, etc.'"
5233,301829937,b'fixed'
5233,301835914,b'removed the short circuit and added a full implementation'
5233,301835977,b'removed the short circuit and added a full implementation'
5258,302168004,"b'before merging this, please get approval internally and register the usage (i can help)'"
5267,302235462,"b'it helped with debugging :D \r\n\r\ni can remove, though we may wish to remove a similar method in other services.'"
5267,302237375,b'removed'
5267,302285763,b'good question...'
5268,302758140,b'```suggestion\r\n            IMixedRealitySceneSystemEditor sceneSystemEditor = target as IMixedRealitySceneSystemEditor;\r\n```'
5268,302758397,"b'without the above change, if target is not a scene system, you will throw and not get to the null check below.'"
5268,302758535,b'shouldnt need this line (the cast below should suffice)'
5292,302774377,"b'unfortunately, yes. i have not found a safer way to handle this scenario. ideas?'"
5374,305932706,b'Can you add a comment re: why the BaseCursor property is getting set to null when the references are equal?'
5374,305933388,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305933417,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305933576,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305933627,b'nit: consistency: most other loops in this file use for instead of foreach'
5373,305939967,"b'You marked targetScale as protected in BaseCursor.cs, is there a reason you decided to hide it (and make it private) in this class?'"
5408,306508334,b'good catch. thanks!'
5373,307012525,"b""I dont have any real recommendation, it just seemed odd to hide a base class' protected member with a derived class private member."""
5373,307014033,"b'> I think it would potentially do a double-lerp of the scale (InteractiveMeshCursor.UpdateCursorTransform calls base.UpdateCursorTransform, and both do lerps, and not quite in the same way).\r\n\r\nQuestion: how does making targetScale private prevent this?'"
5374,307504999,"b'in general, we have used a two step validation\r\n\r\nif (Pointer != null && Pointer.CursorModifier != null)'"
5455,308831085,b'0-1.'
5455,308831153,b'nice catch'
5455,308831346,"b'for this demo, yes.\r\n\r\nI can look into making it resilient to a change.'"
5455,308831528,b'sounds good'
5473,308957796,b'I will need to work with @andreiborodin on this part. I do not believe they are consumable via NuGet now.'
5473,308958169,"b'Looks like we need to add Extensions and Tools to that list.\r\n\r\nAs a note, this was a simple string replace. None of this class leverages the toolkit files class.'"
5473,309425611,b'updated the tool source. thanks!'
5473,309428492,b'talked with @andreiborodin and it looks like these files will be packaged correctly.'
5473,309431817,"b""i'll update the syntax :)"""
5473,309434173,b'fixed\r\n'
5455,309460371,b'fixed'
5480,309840656,b'i can give that a try :)'
5373,309857076,"b'Looking at the code, it appears to do two lerps regardless of private or protected :)\r\n\r\nI, personally, am not a fan of hiding varaiables.\r\n\r\nThx!'"
5479,310310516,b'will update. thx!\r\n'
5479,310310531,b'will update. thx!'
5481,310681087,b'sounds good'
5524,311177526,b'added'
5524,311177576,b'removed'
5524,311177701,b'added'
5524,311177883,b'fixed'
5524,311178006,b'fixed'
5524,311178644,"b'i believe it is less discoverable there,'"
5524,311178738,b'fixed'
5524,311182122,b'added'
5523,311213559,b'nit: can you add a summary tag for doc comments?'
5523,311222813,b'You can remove this and related methods. Now is the time to make the last of the breaking changes and get this interface right. :)'
5523,311223454,b'nit: consider checking for IMixedRealityDataProvider and log guidance to inquire with the appropriate service.'
5523,311223762,b'nit: consider adding a note to register with the appropriate service'
5526,311231857,b'I agree with Troy. This pattern is cleaner and more robust (you cannot forget to call EndHorizontal)'
5526,311232559,b'why not use the same pattern as above here?'
5507,311286765,"b'this code feels a bit odd.  I recommend doing something like:\r\n\r\n```\r\nT service;\r\n\r\nif  (!MixedRealityServiceRegistry.TryGetService<T>(out service))\r\n{\r\n    return default(T);\r\n}\r\n\r\nserviceCache.Add(typeof(T), service as IMixedRealityService);\r\nreturn service;\r\n```'"
5540,311777777,b'i like that!\r\n'
5540,311778322,b'i can explain what they are. i was concerned about duplicating the api docs too much'
5507,312138478,b' Use [`IMixedRealityServiceRegistrar.GetDataProvider<T>()`]\r\n\r\nshould no longer be valid.'
5560,312562949,b'Good catch on the LastHandLost....'
5560,312563413,"b'```suggestion\r\n    * OnLastHandLost: occurs when the hand tracking state changes from at least one hand in view, to no hands in view.\r\n```'"
5613,313143698,b'search / replace bit me.... :)'
5613,313145148,b'yep :)'
5613,313504505,"b""sounds good. i'll add the 2 back :)"""
5613,313505161,b'I pulled the link from a previous set of release notes. Do you have any suggestions?'
5631,313582928,"b""agreed. i'll fix"""
5631,313583349,b'yes. i am not calling SetVirtualRealitySupported. i am hoping that a SetStereoRenderMode gets added so i can set all supported platforms at once (dont make the customer reopen to see the dialog)'
5613,313633216,b'added'
5613,313633379,"b'@Troy-Ferrell, not sure what you mean here, can you give an example? thanks!'"
5648,313989990,b'Unneeded. BaseCoreSystem already specifies IMixedRealityService'
5648,313990532,b'Good catch! My bad reading.. :D'
5613,314423718,b'known issues has been folded into the release notes. no need for a separate file'
5613,314423794,b'fixed'
5613,314423944,b'addressed'
5613,314424007,b'fixed'
5613,314424206,b'done'
5613,314424758,b'i see what you mean now... thanks!'
5613,314453755,b'done'
5613,314454044,b'removed section. to do this right would essentially be a huge in excel.'
5613,314460535,b'added missing headings'
5613,314494828,"b'I wasnt planning on it, since we do not formally support using MRTK systems and features on those devices'"
5613,314494946,b'i can do that'
5613,314508353,b'in progress'
5613,314510207,b'added. will be in the next commit'
5699,314917861,b'```suggestion\r\nplacing it in the center of the Holographic Frame and then performing the air tap gesture.\r\n```'
5613,315440555,"b'Alphabetical makes the most sense, now that i think about it. Thx!'"
5613,315815303,b'added'
5613,315817200,b'fixed.'
5613,315817312,b'removed'
5613,315817499,b'they were copied from her email and slightly modified.'
5613,315819113,b'updated. thanks!'
5613,315819942,b'removed'
5613,315821493,b'done'
5613,315821778,b'added. this section had gotten lost in an earlier merge'
5613,315822254,b'fixed'
5613,315822341,b'fixed'
5613,315824155,b'added.'
5613,315824477,"b'per discussion, leaving these changes here to reduce the number of documentation PRs reqiiored for release'"
5613,315828261,b'updated.'
5613,315828872,b'reworked'
5613,315829440,b'addressed'
5613,315830628,b'added'
5613,315831104,"b'removed this line,. the updating doc covers the service registry'"
5613,315833776,b'added'
5613,315834367,b'added'
5613,315872541,b'most of the references to files in this doc are paths. they match what is imported from the packages. links 1) dont exist yet and 2) may change as new releases are merged into mrtk_release\r\n\r\nthoughts?'
5613,315873427,b'this was requested by an internal customer. should we remove?'
5613,315875059,"b'per discussion, i agree with the above'"
5613,315881622,b'i do not recall deleting it.... i can add it back'
5613,315882282,b'added back'
5732,315950024,"b'reworded, thanks!'"
4695,291820189,b'Thanks!'
4695,296299384,"b'Super-nit:\r\n\r\n```suggestion\r\n            keys.Insert(0, ""(No Selection)"");\r\n```'"
4695,296677279,b'Note: this will need to be `RegisterHandler<IMixedRealitySpeechHandler>`. Same with Unregister.'
4695,296857469,b'This should be updated to target the correct input handler types.'
5033,297268770,"b'>  public void ForceUpdateThemes() [](start = 6, length = 33)\r\n\r\nNit: Add a doccomment (really about when it should be called and guidance around it)\r\n\r\nMore generally, would it make sense to have it so that setting interactable.Profiles would trigger this automatically?'"
5033,297268892,b'Second question is less important.\r\n\r\n---\r\nIn reply to: [297268770](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5033#discussion_r297268770) [](ancestors = 297268770)'
5033,297292765,"b'I think we should open a feature request issue for interactable runtime support in general. Changing themes and changing IsGlobal would both fit there, along with a static utility class for assembling themes.'"
5069,298003388,"b'Since the new name is SelectionMode, can you update the enum name also?'"
5069,298003602,"b""note: it's probably too much for this PR, but per the [Coding Guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#access-modifiers) it would be nice to make these serialized and private, and then expose the fields via public properties."""
5069,298050037,b'Should we log a warning if dimensions != 2? It seems odd for a consumer to SetToggled() on an object that is not a togglebutton. They might not be aware'
5069,298059621,"b'Also can you update summary comment to elaborate on what each type/mode means (i.e Button for single click interaction where dimensions will equal 1, etc etc'"
5069,300809832,"b""I've been thinking about this for a while now, I'll at least make the new stuff follow the guidelines."""
5069,300819107,"b""I moved the enum out to it's own file and added clarification on each value."""
5069,300819220,"b'Added a log, hopefully this is clear enough. ```Debug.Log(""SetToggled(bool) called, but SelectionMode is set to "" + (SelectionModes)(selectedMode - 1) + "", so DimensionIndex was unchanged."");```'"
5014,305528786,"b""could you please share the whiteboard photos we took together when we discussed architecture? I don't recall where we landed, but not sure if passing through only interactables is what we wanted. I thought we wanted to have something more general."""
5014,305532052,"b'We built a scrolling object collection with our latest partner and were able to circumvent the ""pass though mode"" idea. In the end we didn\'t have to make any changes to the MRTK input layer.'"
5558,312287259,b'Oh myyyyyyyy'
5558,312287486,"b'When I updated this assert before, it was specifically happening in cases where this script wasn\'t really being used ""correctly"" - i.e. this script assumes that it gets the full range of focus events (i.e. IMixedRealityFocusChangedHandler and IMixedRealityFocusHandler.\r\n\r\nWhat this assert means is that, there\'s something else in the chain that is eating one of the interface events (or it just isn\'t getting the other set of events but is getting the others). It\'s possible though that I had misunderstood the calling conventions/requirements here, in which case it would probably be worth removing the assert if that\'s the case.'"
5857,320411406,"b'I am still addressing all TODO: Troy...I just wanted to post PR to get things started. \r\n\r\nAlthough the majority of files in this PR are not code to review, it is still a large change'"
5854,320465637,"b"">GetReceiver [](start = 17, length = 11)\r\n\r\nIt's also odd to me that it returns the first found of a certain type (meaning if I add two of the same type, it will never return the other one) - this particular type of API surface (first one wins) is of an odd design (usually you want to provide deterministic way of getting a specific instance).\r\n\r\ni.e. if I call AddReciever twice and then lose the second one, there's no way for me to get the second one using these typical APIs (I guess I could iterate over the events).\r\n\r\nMaybe there should be an overload that returns all that match (keeping the singular case for convenience/typical usage)? Or should there never be multiples there?"""
5854,320517498,b'I added overload for returning all matches.'
5854,320517562,"b""But actually it seems odd that you'd have multiple of a type. But, it is possible so I added an overload."""
5925,322992179,b'example comment'
5967,325448155,"b'For a less disruptive change, instead of removing this method, would it make sense to mark it as Obsolete and redirect this to the new method? '"
5967,326325066,"b""I've been testing this out, I was wondering, why does interactable have a States field, but then also have a separate States field for each theme? It sounds like it's possible for themes to have a state machine different from interactable. How is the States field in Interactable itself used? Is it used for event receivers?\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/65271312-c33bb180-dad1-11e9-92c0-f3803b4f0684.png)\r\n"""
5967,326325647,"b'So this is part of the original architecture except both States properties were not surfaced.\r\nTheme => Uses it\'s states property to determine how many values a property needs to define (for example, what color to set for each state)\r\nInteractable => Uses States more to determine what kind of State Machine (i.e state model class) to instantiate at runtime inside it\'s class. Then it updates that state machine instance.\r\n\r\nI throw a warning that the States properties need to be the same. Technically they don\'t because the values are accessed just based on index. So if I had a states object with just Default/Focus, it should theoretically work against an object with Default/Focus/Pressed/Disabled.\r\n\r\nStates in general requires a lot of refactoring. This is just something I didn\'t want to untangle and add risk/work to this PR.\r\n\r\nIt\'s weird but short term I don\'t know how to fix it. I can\'t just enforce only ""DefaultInteractableStates"" because we actually use the ""FocusPressTouchGrabStates"" as well as Interactable.'"
5967,326403604,"b""The theme should hide the State field when rendered in the Interactable UI. It's part of Themes for the reason you mentioned above, to allow the theme to have something to configure without being placed on an Interactable.\r\n\r\nFrom what I remember, there should be an issue with placing a theme with one States object on an Interactable with another States object containing different states. Or have a single theme applied to two Interactables with different state objects. Haven't tested that though."""
5967,326411213,"b'I changed it to not hide. I want it to be obvious to the user. Also, I am trying to veer away from custom render logic. It should just be here is a Theme and render like it you normally would. If the States objects are different, it renders a warning message. \r\n\r\nFurthermore, if I hide it, the user has to double click into the theme to change it anyways which is just more work. '"
5967,326440047,"b'Good point. \r\n\r\n""If the States objects are different, it renders a warning message."" this is cool.'"
6068,327938583,"b""Ah, so I think this means that if interactable's Enabled property is false, then when you enable the entire component, this will also set interactable's Enabled = true. Can you call this out in the comments for the Enabled property, so people know what behavior to expect?"""
6068,328261832,b'```suggestion\r\n            if (disabled)\r\n```'
6068,328266142,b'```suggestion\r\n            if (!Enabled)\r\n```'
6068,328270239,b'nit: space for if (disabled)'
6068,328270357,b'Why only clear focus instead of all states?'
6068,328283474,b'I was only clearing the focus within SetDisable because that was the only state that appeared incorrect within the bugs reported. But I could add a ResetAllStates within SetDisable to clear all the states.'
6068,328374262,b'Removed SetDisabled and InternalUpdate because they were causing a test failure for TestDestroy in InteractableTests.'
6068,328377574,b'Fixed '
6068,328377624,b'Fixed'
6104,328927237,"b'>if (value > 0 && dimensions != value) [](start = 16, length = 37)\r\n\r\nconsider putting an assert statement or a warning to call out when invalid values are passed in #Resolved'"
6104,328927764,b'why is this check required?'
6104,328928368,"b""this isn't really doing anything .. can be deprecated."""
6104,328929797,"b'>esetBaseStates(); [](start = 25, length = 17)\r\n\r\nglobal listeners should also be unregistered if the interactable is disabled #Resolved'"
6104,328930476,b'is there a use case? #Resolved'
6104,328930968,b'when does this get reset?'
6104,328933179,"b'>     public string VoiceCommand = """"; [](start = 3, length = 37)\r\n\r\nnot required to fix in this PR, but support for multiple voicecommands is useful. Some apps configure shell parity ""Select"" and a global voice command configured to trigger the same interactable '"
6104,328933835,"b""doesn't do anything useful in the script"""
6104,328935641,"b'>protected float globalFeedbackClickTime = 0.3f; [](start = 8, length = 47)\r\n\r\nnit: it should either be editor configurable or a const'"
6104,328938903,b'nit: could be a switch case #WontFix'
6104,328941811,"b'>OldFocusedObject [](start = 31, length = 16)\r\n\r\nnit: null check #Resolved'"
6104,329202028,"b""Updated comment.\r\n\r\nBasically, if we are disabled (GameObject level), then we will re-register ourselves during OnEnable because we generally unregister ourselves in the OnDisable\r\n\r\nThis is to ensure Interactable doesn't respond to input when disabled"""
6104,329202629,"b""we are not using but someone might be. It's pretty harmless so I'd rather not deprecate now. """
6104,329204032,"b""No, that only occurs in OnDisable. When Interactable.IsEnabled = false but the GameObject is still enabled, we still see the item and can still collide our cursors on it etc.\r\n\r\nWe still accept global input but we just ignore processing it via CanInteract() which is largely powered by IsEnabled.\r\n\r\nI like explicitly controlling global register/unregister in the tight loop of OnEnable/OnDisable. When we start changing that via other code entrance paths then things get more complicated and prone to issues\r\n\r\nGameObject.enable => Means will this thing run at all. More all or nothing\r\nInteractable.enable => means will I ACCEPT input. I'll still update my themes and listen etc, but will I respond #Resolved"""
6104,329205129,"b""No these auxiliary states I don't understand very well. These aren't priority for most users but I don't want to eliminate their access #Resolved"""
6104,329205597,"b""Only via ResetAllStates() which is only called if a new States type is assigned in SetupStates(). \r\n\r\nIn general practice, it should **NOT** be reset because once I visited, it's just true for life. """
6104,329206042,b'That is an interesting point. Definitely not going to do in this PR to mitigate risk but @ritijain open a bug and feel free to link in the description of this PR with the other issues I have found'
6104,329206343,"b'Great catch, thanks #Resolved'"
6104,329207521,"b""I don't want to show it in editor. It'll just confuse people and most don't need access to it. \r\n\r\nI didn't want to make it const because it's protected. Someone may inherit this class and set a new value for the property"""
6104,329208500,"b""I actually don't like switch cases for short lists and it's not part of the coding guidelines #WontFix"""
6104,329284553,b'Yeah. It might be a good idea  to reset it after certain time period ?\r\n\r\n---\r\nIn reply to: [329205597](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104#discussion_r329205597) [](ancestors = 329205597)'
6104,329284734,"b""Reminder to properly handle destruction if the object jets disabled / destroyed. Not sure you are tracking enough state to enable that. Maybe you are and it's farther down in this PR :-)"""
6104,329284795,"b'I never really undrestood what ""RsetBaseStates"" meant. While you\'re here, maybe rename?'"
6104,329285643,b'Could you add a comment for what the property is used for? (i have to go skim through code to understand how clickTime and globalFeedbackClickTime are different)\r\n\r\n---\r\nIn reply to: [329207521](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104#discussion_r329207521) [](ancestors = 329207521)'
6104,329287184,"b""it doesn't feel right because the purpose of interactable is provide a state machine by processing all inputs. I don't see why we can't mark this as obsolete. If someone wants this functionality they have always pipe it by creating a click event receiver handler\r\n\r\n\r\n\r\n---\r\nIn reply to: [329202629](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104#discussion_r329202629) [](ancestors = 329202629)"""
6104,329287520,"b'Sorry I mistyped my original comment. It should NOT be reset. The state tracks whether the button has been every clicked. BY definition, it needs to stay true unless I am changing the state manager.'"
6104,329287859,b'A ClickCount is state information. Yes someone could go recreate the functionality themselves but why make them do that? By deprecating we are more likely to do harm then good.\r\n\r\nWhat is the benefit to deprecating this? What do we gain?'
6104,329748741,"b""Going to resolve this as won't fix to adhere to the breaking change guidelines of MRTK\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html\r\n"""
6104,329752186,"b""yea it's tracked in OnEnable/OnDisable"""
6493,343271787,"b'If I was a user that saw, this how would I know how to recreate the asset?'"
6493,343905421,"b'Great question. I think they just need to set up the profiles and events again, which is not great. I want to improve this message once we understand this bug better, but for now I think not throwing errors will be good '"
6602,347514393,"b'Curious here - in other locations in this PR, it looks like if clauses were joined to avoid multiple if->return but this one pulls it out - is this primarily to avoid a line count issue? If so we could just do something like:\r\n\r\n```c#\r\nif (eventData.Command.Keyword == VoiceCommand&&\r\n    (!VoiceRequiresFocus || HasFocus) &&\r\n    IsEnabled)\r\n```'"
6602,347534308,"b""I pulled the IsEnabled out for two reasons\r\n1) I want it to be more deliberate and obvious to readers that we won't do anything unless enabled\r\n2) It matches the rest of the file in that if we are disabled, return immediately"""
6647,348237955,b'Do you happen to know why this serializes an `int` instead of the actual `MixedRealityInputAction`?'
6647,348239054,"b'Because that is the way it was originally implemented. InputAction, both in Interactable and in MRTK, has a lot of issues. Existing item for here is: https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6105'"
6647,348642461,"b'```suggestion\r\n        ""This is different than the enabled property at the GameObject/Component level."" +\r\n```'"
6834,356205302,"b""@julenka @thalbern do you guys know if HasGestureMax is also something that we'd want to consider resetting here? The naming here is so similar that I can't help but ask."""
6834,356216006,"b""I agree that this should be reset too , but having a look at the code (get/set for property, deprecated set method, setting flag directly) I don't see anywhere in MRTK where we would actually set that flag. Is this wired up in the inspector somehow? """
6834,356216437,"b'@wiwei well HasGestureMax is a bit problematic. HasGestureMax has comment ""Currently not controlled by Interactable directly"" but we do reset it in the reset all states or reset input states method. So it\'s not a great scenario but I think we don\'t have to worry about HasGestureMax in this case. We should update the comment though for that one and others\r\n\r\n@vaoliva suggestion, just make it HasPress = false, and HasGesture = false. It\'s weird to check one but not the other and there are only two values for it so setting it to false is fine. We also don\'t save on performance or anything. \r\n\r\n@julenka / @thalbern , I wonder if we can remove the roll off timer? The comments suggest we are delaying firing some lost focus but really we are just delaying setting HasPress to false when we are pressed but lose focus which I currently don\'t understand why we have to delay that setting. It\'s weird to me that we can have HasFocus = false and HasPress = true for 0.25 seconds\r\n\r\n```\r\n        // allows for switching colliders without firing a lose focus immediately\r\n        // for advanced controls like drop-downs\r\n        protected float rollOffTime = 0.25f;\r\n        protected float rollOffTimer = 0.25f;\r\n```'"
6834,356254004,"b""@Troy-Ferrell wouldn't it be better to call ResetInputTrackingStates() at that spot to make sure all the interaction states are reset?"""
6834,356265701,"b""Yea I considered that. It makes sense but it's just a larger change and not sure of the impact. """
7137,370468852,"b'Would it make sense to automatically call `Initialize()` here (and in the other cases that added an error log)?\r\nThen, `Initialize()` would be `private`/`protected` and called either in `Awake()` or when one of these properties is accessed, whichever comes first.'"
7137,370606482,b'Agree - we can do a EnsureInitialized() in case those get / sets are called :)'
6104,328865185,b'could this be istoggled to make it more clear?'
6104,328940045,"b'this part can be moved to Awake.\r\nwhen gameobject is checked in disabled, OnEnable can be invoked before Start.'"
6104,329210295,b'No it has to be in Start. Interactable does work that happens in Awake and need to occur before this code'
6473,342797610,b'ToggleList does not have get/set and backing serialized private field etc'
6473,342797785,b'simplify to ```=> currentIndex```'
6473,342798130,b'You need to save list of actions and then remove this list. The removelistener later is a different anonymous instance'
6473,342798408,"b'nit: I would update this to ""force selection set""'"
6473,342798647,b'case if toggellist is null?'
6473,342799415,b'simplify \r\nToggleList[I].IsToggled = i == index;'
6473,342799932,b'might be safe to check ToggleList[i] is not null'
6473,342800421,b'We actually should start always doing\r\nOnSelectionEvents?.Invoke();\r\n\r\nbecause OnSelectionEvents is public and thus could be set to null by another party'
6473,342802248,"b""I believe this needs to be inside the if statement body above. If we aren't changing selection, we shouldn't be firing a click? @julenka thoughts?"""
6473,342802401,"b'simplify set => SetSelection(value, false, true);'"
6473,342802685,"b'Like if I call CurrentIndex =2, many times over, seems weird to call onclick?'"
6473,342857075,b'Simplified '
6473,342857303,b'Updated'
6473,342867180,b'Added a null check'
6473,342867440,b'fixed'
6473,342962287,"b""I think Catherine had a specific case she was fixing which required onclick to get called, I think otherwise the visuals didn't update? I don't fully remember..."""
6148,329830080,"b'EyeGazeProvider and GazeProvider are the same thing, but i do agree.'"
6158,330297883,b'This looks like temp content'
6158,330297902,b'This duplicates the above.'
6158,330298114,b'Please add an entry for the new Medium LOD'
6162,330306296,b'we should mark the property as being previously serialized as the old name'
6158,330640783,"b""> Why wouldn't I just add the obj I downloaded directly to my scene?\r\n\r\nAdding the obj to the scene would not allow the developer to exercise the code that would run when the application is using live spatial data."""
6158,330641655,b'> Why is it called an observer?\r\n\r\nIn large part the name was chosen to match the other providers. :)'
6158,330643329,b'Lines 6 and 16'
6245,333197760,"b'""unity"" should be ""Unity""'"
6043,333673599,b'yes. it would'
6250,333677188,"b'""children classes such  the"" -> ""child classes such as the""'"
6250,333677800,"b'""implementation *ShellHandRayPointer*"" -> ""implementation of *ShellHandRayPointer*""'"
6305,335702466,b'You may need to add the typeof() check as in spatial'
6344,337742187,b'thanks. just saw that'
6344,337742524,b'outdated comment :)'
6344,337742736,b'i generally prefer to do those changes as a separate PR.'
6344,337747305,b'moved.'
6344,337747529,"b""these are components, not gameobjects. for now, let's leave as-is"""
6344,337748432,b'fixed. bad merge.'
6344,337748781,b'was a placeholder. added a proper comment'
6344,337750450,b'added'
6344,338169582,b'good catch'
6344,338169629,b'it is not. i will remove'
6344,338170752,b'it isnt. got added accidentally. nice catch!'
6344,338173386,b'added'
6344,338173793,"b'Only the camera settings... so far. We could make the folder and assembly be ""UnityAR""\r\n'"
6344,338212787,b'done'
6344,338690728,"b'something unneeded, i believe. wiill confirm'"
6344,338690799,b'good catch. thanks!'
6344,338691218,"b""trackedPoseDriver is not a GameObject (it's a script). we will need a new extension to handle"""
6344,338691813,"b""it's to allow the demo apps to build without modifying the profile (similar to how the profiles have not had unsupported input modalities removed).\r\n\r\nif you feel strongly, we can document how to make the demos work on mobile ar"""
6344,338692146,b'we should co-engineer a solution that also confirms whether or not the provider successfully initialized. i can go in more detail in a separate discussion / PR'
6344,338692245,b'good catch. thanks!'
6344,338692474,"b""good idea. can you open an issue to track? i'd like to keep this PR as focused as possible."""
6344,338692840,b'MRTK will not function without a camera tagged as MainCamera. We can replace this with an error and require the developer to manually tag. Thoughts?'
6344,338693425,b'should be #6346 '
6286,338731551,"b'This message is misleading if the layer is already set to Spatial Awareness.  Can we get a wording tweak or have it succeed if the value is already set?\r\n\r\nAnother option would be to differentiate ""failure to set"", ""already set"" and ""set to something we didnt expect""'"
6286,338741058,"b'```suggestion\r\n                if (!EditorLayerExtensions.SetupLayer(SpatialAwarenessDefaultLayer, ""Spatial Awareness""))\r\n```'"
6286,338741139,b'just noticed that this check appears to be backwards :)'
6344,338829498,b'added a brief remarks section'
6344,338829686,"b""ahh. ok. i'll double check :)\r\n"""
6344,338830062,"b'actually , some of the test automation relies on MRTK creating a camera if one doesnt exist... i can fix these issues when i fix the automation. sound ok?'"
6344,339265424,b'we havent traditionally. we definitely can. i have an issue open for documentation and am happy to add that then'
6344,339265476,"b'good idea, can you open an issue?'"
6344,339265517,b'good catch'
6344,339265563,b'inheritdoc adds comments to the docs :)'
6344,339266098,b'added'
6414,340358767,b'i found that i was always expanding.... i can put it back :)'
6414,340359008,b'i can go for bucketing.'
6414,340359119,"b""if you file an issue, i'll write the doc :)"""
6414,340359501,"b'in the unity class, it is just ""architecture"" i was trying for consistency with what customers see in the inspector'"
6414,340366026,b'oh... gotcha\r\n :D'
6414,340366420,b'fixing now'
6344,340379698,b';)'
6344,340379895,b'it is optional. not all profiles have a description'
6344,340380002,"b'to me, private variables are always camel case :)'"
6344,340381174,b'done :)'
6418,340832616,b'It lead to confusion and concern when customers chose to _not_ include ar foundation in their project.'
6418,340832772,b'sounds good'
6418,340833310,"b'i got a question about that line this morning, in fact.'"
6457,341795224,b'yeah. i forgot to remove the obsolete attribute when i created this constructor. good catch!'
6457,341795273,"b'we could talk to the registry directly. they are treated as core services (constructed and registered by the service locator), hence the change. do you see a reason where this might be the wrong path?'"
6457,341795298,b'the base constructor sets the value of ConfigurationProfile'
6457,341795317,b'yes! i think i missed this one :)'
6457,341795326,b'i do not think so. nice catch'
6457,341795397,b'this comment is wrong (from an older version of this change)... we do not actually rethrow'
6457,341795420,b'unneeded comment was from an older implementation of this change'
6457,342169430,b'removed'
6457,342173531,b'removed'
6457,342173610,b'removed'
6457,342174955,b'removed'
6497,343294753,"b""correct, i'll put the current ones back. nice catch!"""
6506,343457769,b'should we consider hiding this checkbox if ar foundation packages are installed? they do not build correctly using the .net backend if c# projects are generated'
6506,343748956,"b""> We could, though it wouldn't prevent people from checking it in the normal Unity build window instead (which would affect this build as well).\r\n\r\nagreed\r\n\r\n> I'm also not fully sure how we'd detect those packages. I forgot, do you detect them elsewhere a specific way?\r\n\r\nI have code in the EditorProjectUtilities class that searches the Library\\Packages folder."""
6486,343779148,"b'Question does this shader leave the meshes visible after the pulse? If not, i would recommend _not_ changing the default material.'"
6486,343779513,"b'On further consideration, we should not include experimental components in the default profiles.\r\n\r\nThanks!'"
6497,343812374,"b'In theory, yes. Since Unity would compile the asmdefs using the .net backend, correct?'"
6497,343820227,b'oh yeah. i see where you are going now :)\r\n'
6497,343877117,b'there will be. i am writing docs after we branch for stabilization (they do not risk breaking the build) :)'
6497,343877383,b'i can rename the variable -> isSupportedArConfiguration'
6497,343877596,b'i thought i added a comment.... will confirm\r\n'
6497,343877692,b'done'
6497,343877814,b'was supposed to be mobile :D'
6497,343877935,b'we could\r\n'
6497,343878982,b'clarified comment a bit'
6497,343879330,b'fixed typing error :)'
6503,344358171,b'Please add this class to the namespace used in the other .cs file. Thanks!'
6503,344358404,b'Missing license header'
6503,344358529,b'Missing license header.'
6503,344358819,b'Here is the header to add:\r\n\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License. See LICENSE in the project root for license information.\r\n\r\nThanks!'
6542,344848303,b'it can if running in the editor....'
6542,344848528,b'though future-proofing is also a nice side effect :)'
6542,344855457,b'i dont know how i failed to notice that.... THANKS!'
6549,344933042,"b""in ReadProfile... doesn't it?\r\n"""
6549,344933374,"b""Oh. I see.... It's in the declarations of the variables. Is that a confusing pattern? I can change it."""
6543,344971557,"b'Most likely. Otherwise, it could cause some confusion.,'"
6544,345390661,b'@andreiborodin suggested this ordering. I will work with him to ensure the CI template is appropriately updated.'
6559,345439936,b'i can make that change. thanks!'
6559,345442406,b'One note on single entry folders... I am going to keep the Extension services folder as there are a couple of new ones in 2.2.0 that need to be documented\r\n'
6559,345443508,"b""as part of the extension folder, i am going to duplicate the extension tool wizard to help elevate it's visibility"""
6563,345484370,b'nit: this file isnt needed as there is no Editor folder.'
6570,345923957,"b""good catch. i'll make that change"""
6570,345924183,"b""i'll give that a try"""
6570,345926535,b'that looks much better. THANKS!'
6573,345979605,"b'nit: please alphabetize the using statements (ease of reading, etc)'"
6573,345980125,"b'nit: current coding style uses the ""== null"" pattern (throughout)'"
6573,345980267,b'nit: extra line'
6573,345980439,b'Please add summary comment for docs'
6573,345980891,b'please consider adding summary block throughout'
6573,345981661,b'please add summary comment for this class'
6573,345981778,b'please add summary comment for this interface'
6573,345982011,b'nit: please alphabetize the using statements'
6573,345982150,b'please add summary comment for this class'
6573,345982585,b'does this need a hard-link to a specific input system implementation? doing so limits flexibility (cannot use with a custom implementation)'
6573,345982918,"b'Is there an entry in the toc.yml file? If not, please add one.'"
6573,345990287,b'```suggestion\r\n        private IMixedRealityHandJointService HandJointService => handJointService ?? (CoreServices.InputSystem as IMixedRealityDataProviderAccess)?.GetDataProvider<IMixedRealityHandJointService>();\r\n```'
6591,346599969,b'Can you add doc comments to this enum and values?'
6622,347658555,b'the file format uses 4.'
6622,347658677,b'i had visual studio create one and used the same format'
6622,347658777,"b""i'd like to leave it in until we are sure we no longer need / want it"""
6635,348190706,b'i can remove them'
6635,348190943,b'sounds good. i will elaborate a bit more.'
6635,348194818,b'Adding:\r\n\r\nIt has been created to allow the delivery of these features to customers while\r\nthe MRTK team works to implement packaging changes that may have posed risk to the product.\r\n\r\n> [!Important]\r\n> This folder is expected to be removed from the **_next_** version of the Microsoft Mixed Reality Toolkit. Please take no dependencies on the current structure.\r\n'
6635,348235597,b'fixed.'
6648,348657611,b'I am happy to create a new file and link from here as well as the TOC'
6648,348679204,b'it is referenced both ways in the doc. i just picked one. i can update all to be one word'
6692,349304218,"b'Do customers know what PV means? should we phrase as ""color camera"" or something?'"
6692,349350203,b'you can inline the text in the inspector instead of the tooltip... an info callout like we have in boundary'
6704,349457684,b'folder names are different now (ex: there is no _Core folder any longer)'
6704,349457885,b'MixedRealityManager -> MixedRealityToolkit and CoreServices'
6704,349458141,"b'Perhaps it is time to refresh / remove this article as it is out of date, and as this comment states, large changes need to be handled carefully.'"
6702,349458749,b'please add comment after each #endif to help clarify which condition it is closing. thanks!'
6702,349459072,"b'later in the file, the DOTNETWINRT_PRESENT define is paired with UNITY_WSA... is there intended to be different conditions where this define is checked?'"
6702,349459356,"b'nit: previous conditionals have DOTNETWINRT_PRESENT second. not a required change, though it may help with readability'"
6702,349459469,b'same as earlier nit comment...'
6702,349718393,b'I would put the #elif condition'
6702,349718474,b'i see. sounds good.'
6718,349845478,b'not sure. what is the consensus from the reviewers?'
6718,349845511,b'not a bad idea'
6718,349845523,b'not a bad idea'
6718,349845652,"b""we can explicity write the indentation Unity's file currently supports. there is no functional difference with or without the indentation"""
6718,349858718,b'the reader lets us read each line for later writing one at a time.'
6718,349858727,b'please see above comment'
6718,349858792,b'tracking this with #6723 '
6731,350481503,"b""> meanings of WINDOWS_UWP and UNITY_WSA\r\n\r\nI'll get the definitions of these from the unity docs and add here. We can discuss / test once i have them posted.\r\n"""
6731,350481780,"b'From Unity:\r\n\r\nUNITY_WSA | #define directive for\xc2\xa0Universal Windows Platform. Additionally,\xc2\xa0NETFX_CORE\xc2\xa0is defined when compiling C# files against .NET Core and using .NET\xc2\xa0scripting backend\r\n\r\n\r\n'"
6731,350482087,b'WINDOWS_UWP is not set in Unity. It is set when compiling in Visual Studio'
6731,350482550,b'I am more than happy to take time to analyze the #if directives together to ensure they are correct.'
6733,350486362,"b'good question. i\'ll add ""is expected to be""'"
6767,352908392,b'Note: This does not solve the issue for customers who use the asset packages from GitHub...'
6767,353311287,b'we have a solution for the github repo (there is a script in the scripts folder already). anything that gets checked into one of the MixedRealityToolkit.* folders should address issues for customers using the unity or nuget packages (>90%)'
6767,353311618,"b'we should discuss a good way to call out the required steps for repository users, i 100% agree.'"
6731,353409484,b'Not sure. We should chat on this one.'
6785,353480246,"b'There is not, nor was there for 2.1.0.  Do you believe we need them for this release?'"
6785,353482796,b'just me adding content in the middle of a sentence and not noticing the redundancy. thanks!'
6767,353484668,"b'It depends on whether or not we want them to appear in the project window.... i will continue to work on this as it will be of minimal impact to the release schedule.\r\n\r\ncurrent thinking is to check the .asmdef contents in both 2018 and 2019 and display a dialog pointing the user to instructions, if not found. we can also do a similar check for the AR Foundation and XR Legacy packages.'"
6731,353536608,b'yep. we need to be able to respond to PostRender'
6731,353536801,b'i believe a side effect of the previous #if block locations.'
6803,354527104,b'I was attempting to eliminate reference issues if the UnityAR provider assembly is not buildable a the time this code needs to run.\r\n\r\nThoughts?'
6803,354527267,b'we can.'
6803,354527450,b'Good question. I can put them back and remove later'
6803,354547823,b'added back.'
6803,354547861,b'added back'
6803,354547916,b'added'
6803,354588400,b'confirmed that merging this into the editor assembly will break on platforms that rely on the runtime assembly to successfully compile. i recommend we keep the separate config checker assembly'
6824,355732298,"b'Actually, i was able to successfully use the latest build this morning\r\n'"
6824,355732563,b'i made your recommended change in a different spot (in the connecting instructions)'
6824,355888601,"b'It is just a reminder to close the dialog when complete. i can see how it reads like ""be sure to do step 1""... i\'ll remove the last step'"
6824,355888787,b'oops. this was a copy paste error from a different version of this doc.'
6824,356181355,b'removed'
6824,356181419,b'fixed'
6824,356201436,b'These links are FYI and are there to link customers to the core documentation if they experience issues or have further questions on remoting.'
6824,356202043,b'You do not need to go through them each time. I will make a reminder note that this is for when you close the project / Unity.'
6824,356204354,b'updated'
6873,357316560,"b'```suggestion\r\n> This is currently supported on both Windows Mixed Reality and OpenVR, loading any controller models provided by the platform API.\r\n```'"
6891,357442993,b'i we dont want the asmdef at the end.. i will fix the start of the file'
6891,357742638,"b""I've got a thought on how to address this. Should submit the change today"""
6891,357742837,"b""I've got a thought on how to address this. Should submit the change today"""
6891,357877951,b'should be addressed it the latest commit'
6891,357877972,b'added back'
6891,357897155,"b'We may want to, indeed.'"
6891,357945738,b'One thing i would like to confirm when trying this idea is that profiles do not break.'
6891,358386551,b'It has been documented as a breaking change in the release notes in this PR. I would be happy to put back the old signature / implementation and deprecate.'
6891,358386973,b'This is no longer relevant... Thanks for pointing it out.'
6891,358387153,b'i should have noticed that... it is one og my nits \xf0\x9f\x98\x84 '
6919,359519736,"b'Please add documentation to the release notes / updating guide as part of this PR. Otherwise, the behavior change may get lost. Thanks!'"
6891,362629117,b'That was accidental. I was trying to limit the length of the asmdef file names and forgot to update the internal names.'
6891,362629684,b'This change breaks the ability to reference the assembly in non-AR Foundation platforms (ex: standalone and UWP)... Looks like we need a different solution.\r\n'
6891,362629993,b'![image](https://user-images.githubusercontent.com/13281406/71693218-baa97700-2d60-11ea-8b4d-8eb2c260119b.png)\r\n'
6891,362632339,b'fixed'
6891,362634087,"b'This is, indeed, a breaking change. The API was introduced in 2.2.0 and, to the best of my knowledge, is used in one MRTK file that has since been updated.\r\n\r\nI will investigate a mitigation and apply as appropriate.'"
6891,362645715,"b'renamed the new class ScriptUtilities, restored and marked obsolete the previous implementation'"
6891,362700751,b'updated'
6891,362919118,b'we have several customers on older versions of 2018.4. We should keep the current loading/writing code until we formally require newer patch versions of 2018.4.'
6891,362920877,"b'Added\r\n\r\n```\r\nDebug.LogWarning($""Mutliple ({asmDefFiles.Length}) {asmDefFileName} instances found. Modifying only the first."");\r\n```'"
6891,362927797,"b'Added remarks comment block and additional inline comment.\r\n\r\n```\r\n        /// <remarks>\r\n        /// Versions of Unity may have different factorings of components. To address this, the UpdateAsmDef\r\n        /// method conditionally compiles for the version currently in use.\r\n        /// To ensure proper compilation on each Unity version, the following steps are performed:\r\n        /// - Load the Microsoft.MixedReality.Toolkit.Providers.UnityAR.asmdef file\r\n        /// - If AR Foundation has been installed via the Unity Package Manager, add the appropriate assembly references\r\n        ///   - Unity 2018: Unity.XR.ARFoundation\r\n        ///   - Unity 2019 and newer: Unity.XR.ARFoundation, UnityEngine.SpatialTracking\r\n        /// - If AR Foundatrion has been uninstalled, remove the assembly references. \r\n        /// - Save the Microsoft.MixedReality.Toolkit.Providers.UnityAR.asmdef file\r\n        /// This will result in Unity reloading the assembly with the appropriate dependencies.\r\n        /// </remarks>\r\n```'"
6891,362928200,b'Previous implementation restored and marked as obsolete.'
6891,362945686,b'done. thanks for the catch!'
6891,362997046,b'the language does not allow namespace members to be marked as private\r\n\r\n![image](https://user-images.githubusercontent.com/13281406/71755753-1f3c0300-2e41-11ea-8002-fb10fc224047.png)\r\n'
6891,362997078,b'see earlier comment re: language support'
6981,363405097,"b'> positions an element relative in front of the forward axis of the reference.\r\n\r\nPlease consider rewording, it is a bit confusing. Thanks'"
6981,363405872,"b'```suggestion\r\n        [Tooltip(""Default distance from eye to position element around, i.e. the sphere radius"")]\r\n```'"
6981,363406396,"b'If the element says at least this close, shouldn\'t the variable be min as opposed to max?\r\n\r\nOr should the tooltip (and comment below) read ""no further than""? '"
6981,363406538,b'Same question as maxViewHorizontalDegrees'
6981,363406726,"b'```suggestion\r\n        [Tooltip(""The element will stay world locked until the angle between the forward vector and vector to the controller is greater then the deadzone"")]\r\n```'"
6981,363407133,"b'where is the deadzone defined? this is the first use of the term, though it is entirely possible that i missed it in my read.'"
6981,363407795,b'Consider the following style throughout?\r\n\r\nget => useAngleStepping;\r\nset => useAngleStepping = false;'
6981,363408044,b'```suggestion\r\n            // Angular clamp to determine goal direction to place the element\r\n```'
6981,363408156,b'```suggestion\r\n        /// <returns>Angle between project from and to in degrees</returns>\r\n```'
6981,363408274,b'```suggestion\r\n        /// <returns>Signed angle between vec and the plane described by normal</returns>\r\n```'
5830,363483514,"b'Please consider using ""Any Hand"" as ""Both Hands"" could be read as the controller in intended to be held in two hands (ex: common gamepad controllers)'"
5830,363483880,"b'> controllerMappings[i].Handedness is ""Both"" it does not matter what hand ControllerHandedness is, it works for both\r\n\r\nThis is where Any might be a better description.'"
6738,363486597,"b'I tend to agree, @keveleigh  '"
6988,363534177,"b'That would vary based on system implementation. Some will generate null reference exceptions, others may not behave as expected.\r\n\r\nI can add ""The data provider may not behave as expected without the required profile."" to the warning message if that feels right.'"
6988,363534341,b'This was part of the change that i picked up from #6133. I can take a look at it.'
6988,363534922,b'I can also add additional doc comments here to try to educate service implementors on the need for reasonable behavior / proper marking of this value.'
6988,363535067,b'Sounds reasonable. Thanks!'
6988,363537267,b'removed.'
6988,363537450,"b""it's been removed. it was not used"""
6988,363537572,"b'per @Troy-Ferrell, this method is unused and has been removed.'"
6988,363538182,"b'> Also do we care about enforcing this at runtime?\r\n\r\nWe _could_ consider hiding the profile field if requires profile is set to false. That would be a separate change, however.\r\n\r\nIf i am misunderstanding the question, please let me know.'"
6988,363538680,"b""As far as the specific behavior of a given provider, the behavior is up to the the developer. I'm not sure what we could do to enforce a behavior. """
6989,363867954,"b'is this the root pointer for all native access? not sure what ""root"" means here'"
6989,363868114,"b'```suggestion\r\n        /// The current native frame <see href=""https://docs.microsoft.com/uwp/api/Windows.Graphics.Holographic.HolographicFrame"">IHolographicFrame</see>.\r\n```'"
6989,363868783,"b'> really only needs to exist while we support both legacy Unity XR and XR SDK\r\n\r\nThat said, this is a good pattern to maintain going forward as the engine may change in ways that the provider needs to accomodate.'"
6989,363868935,b'please see above comments related to this and the next summary block'
6989,363869533,"b'i have been trying, in recent PRs to document changes as they happen. even so, adding a comment to #6922 will help ensure that the change notes are as complete as possible'"
6989,363870073,"b'Would there be any other utilities provider other than Windows Mixed Reality? If not, maybe name this as UtilitiesProvider for ease of reading?'"
6989,363871016,b'Consider turning this into a function?'
6989,363871526,"b'no ENABLE_DOTNET here? that was special cased above, but i am not seeing it anywhere (?) else?'"
6989,363872778,"b""Along the lines of @wiwei's question; should we have an overall XR SDK utilities provider that aggregates anything we need to access, regardless of platform?  Is that feasible?"""
6988,363893681,"b'> we could add in like the base dataprovider/extension service class a check in the constructor if I require a profile but the one given was null\r\n\r\nGreat thought! That way, the null refs would make sense to the customer. I like it!\r\n'"
6989,363939821,b'ignore me.... i missed the <see ... /> part of the comment. it is fine as is'
6988,363940354,b'done.'
6992,363946878,"b'If so, we can add that later and in a compatible way. When we do, we should consider overriding == and != as well'"
6988,363952861,b'likely.\r\n\r\nthat was the next change i was going to make \xf0\x9f\x98\x84 '
6988,363954942,b'done. and found a bug in IsProfileRequired at the same time'
6988,363956202,b'Added comment to the attribute docs\r\n\r\n```\r\n        /// <remarks>\r\n        /// Services requiring a configuration profile should include code that helps inform customers\r\n        /// if one is not provided. A check in the service constructor with a corresponding warning log\r\n        /// message is recommended.\r\n        /// </remarks>\r\n```'
6983,363971688,"b'small suggestion: it is more readable to have a space after the , here. at first glance, i was seeing a mixture of 0.5 and 5.0 (mistook a comma for a period) '"
6983,363971757,"b'```suggestion\r\n        _RoundCornersRadius(""Round Corners Radius"", Vector) = (0.5 ,0.5, 0.5, 0.5)\r\n```'"
6983,363971852,b'suggested change added below'
6981,363998825,"b'> So ""at least this close"" means the same as ""no further than this""\r\n\r\nGotcha.... sorry if i was confusing, it\'s not only early in the year, but early in the _decade_! \xf0\x9f\x98\x84 '"
7013,364498695,"b'with this constraint, it will not be possible to add this provider to profiles on earlier versions of Unity and if present, the provider will appear to be ""missing"".\r\n\r\nthat could lead to customer confusion.'"
7013,364499082,b'Would it be better to support BoundarySystemProviders?'
7013,365020941,"b""nit: dangling sentence... ends in a ','. is something missing?"""
7013,365021133,b'remove the defines also?'
7032,365445710,"b'consider simply ""because of a long path issue""'"
7032,365446519,b'```suggestion\r\n     <!-- Keep the following line to exclude extra files-->\r\n```'
7059,366518307,b'what are the side effects of not flagging the hit as valid?'
7061,366536738,"b'The original intent was to limit the number of properties in the class (ex: why add an additional float property when we already have 3 of them in the Vector3).  I have not seen feedback re: confusion and it is a documented behavior.\r\n\r\nWe could, potentially, modify the class to add a sphere radius property that gets/sets the X value of the vector and display custom ux in the inspector.'"
6939,367659022,"b""My primary concern (and perhaps @keveleigh's) is that blocking until the model loads would create a noticeable glitch in the app.\r\n\r\nIs there any way to avoid blocking?"""
7093,369175372,b'sounds good. do you want to do that in a separate PR or this one?'
7124,369826622,b'does this need an xr management check?'
7124,369827091,b'The source uses WMR_ENABLED around the new XR namespaces. does a similar check need to be performed here?'
7124,369827254,b'nit: { } instead?'
7124,369827983,b'is any of this shared between the xrsdk and legacy implementations?'
7124,369828879,b'should we be null checking anything here?'
7124,369829827,b'feels like a lot of this can be moved into a base class.'
7096,369874063,"b""nit: it's easier to read these on separate lines"""
7096,369874262,b'please add { }'
7096,369874497,b'should this also have a setter?'
7096,369874717,b'nit: extra whitespace'
7096,369874791,b'nit: extra whitespace'
7127,370884588,b'Do we expect / wish to encourage adding this script via the component menu? Is there precedent for MRTK doing so?'
7193,373125256,b'it can be moved back. the original thought was it would be needed here eventually \xf0\x9f\x98\x84 '
7203,373634697,b'can you update this to use the new XRSettingsUtilities.LegacyXRSupported property?'
7203,373635085,b'that will allow removing the pragma'
7217,374402355,b'fair enough'
7217,374402495,b'I can add those as work items'
7217,374402534,b'i mean themes\r\n'
7217,374403093,"b'I generally add things that are a significant amount of work that we are committed to deliver.\r\n\r\n@julenka, if you would like more detail under UX, please feel free to commit to this change or mention them here. whatever works best for you.'"
7217,374403417,"b'Historically, they do not change much. I have found value in not requiring customers to scroll content / jump between pages whenever possible.'"
7217,374403665,"b'i had trouble wording it, tbh.... i will remove the section'"
7217,374404132,"b'It was added to the change tracking issue, so it was transcribed here. I do believe there is value in calling out key improvements to components, even if they are bug fixes.\r\n\r\nBTW, @thalbern is out this week. @julenka, do you have any input here?'"
7217,374404341,b'@keveleigh confirmed that grab works with the specified version of the plugin.'
7217,374404515,"b'True, though this is the most reported error.'"
7217,374404782,b'Similar to the spirit in which the updating instructions are contained in each release. Removing this note may imply that the fix is already in the product.'
7217,374408283,b'done'
7217,374408439,b'will remove that line. agree it seems redundant'
7217,374408730,"b'have replaced it with ""Platform Expansion: Hands"" and discussion of Leap Motion and Oculus Quest'"
7217,374409210,b'link added to article describing the new platform'
7217,374409647,b'removed'
7216,374410114,b'we actually have always read the file more than once...'
7216,374410279,b'fair enough!'
7216,374410371,b'sounds good. thanks'
7216,374412196,b'sounds good. i will rework the code to make it more testable without needing to rewrite files repeatedly'
7211,374948434,b'Please do not remove the implementation of this method when marking obsolete. Existing code should continue to function.'
7211,374948584,"b'If possible, it is better to re-implement obsolete methods using the new code.'"
7211,374948897,b'I do not believe we want to recommend obsolete Unity methods here.'
7230,374961536,b'will do.'
7230,374961957,b'correct. -0 is not a valid prerelease in our format.'
7230,374962505,"b'this is a parsed/preset 0 literal, so i presume so. i can do some more investigation'"
7230,374962599,b'i can remove'
7230,374962822,b'wanted to make certain the method was changing the value. i can remove :smile:\r\n'
7230,374962900,b'even in tests? :smile:'
7230,374962943,b'will update'
7230,374963073,b'sounds good'
7230,374963465,b'this is based 100% on the format used by MSBuild for Unity. I fully agree that a more robust system should be explored'
7230,374966593,b'done'
7230,374966817,b'done'
7096,369876731,b'Missing MSFT license'
6410,355548426,"b'Per [pull request guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/PullRequests.html#creating-a-pull-request), please update documentation to describe how to use the button configurator. I think updating the Button documentation page would work (it would be good to work with @cre8ivepark on this). '"
6410,380848994,b'Missing summary'
6410,380849254,b'typo: `Sat` instead of `Say`'
6410,380849402,"b'```suggestion\r\n        /// If no icon set is available, or if no texture with that name is found, no action is take.\r\n```'"
6410,380849446,"b'```suggestion\r\n        /// If no icon set is available, or if no texture with that name is found, no action is take.\r\n```'"
6410,380849500,"b'```suggestion\r\n        /// If no icon set is available, or if no texture with that name is found, no action is take.\r\n```'"
6410,380849680,b'```suggestion\r\n        /// Sets the character for the button. This automatically sets the button icon style to Char.\r\n```'
6410,382232400,"b'```suggestion\r\n        /// If no icon set is available, or if no texture with that name is found, no action is taken.\r\n```'"
6410,382232531,"b'```suggestion\r\n        /// If no icon set is available, or if no texture with that name is found, no action is taken.\r\n```'"
6410,382232581,"b'```suggestion\r\n        /// If no icon set is available, or if no texture with that name is found, no action is taken.\r\n```'"
6410,382233708,"b""Possible incorrect Unity object null checking here. Looks like this label and the renderer references are base `UnityEngine.Object`s, which [don't support](https://docs.unity3d.com/ScriptReference/Object.html) the null conditional operator."""
6410,382248476,"b""~~These components all inherit from MonoBehaviour (which extends Object) so they should be fine.~~ Never mind, after reading #5981 I'm convinced, will change."""
6410,354997604,b'missing doccoments for public methods'
6410,382234153,b'Missing MSFT license header'
6410,382234479,b'This `public` class and some of its `public` properties and methods are missing summary tags'
6410,382235215,"b'```suggestion\r\n                int newSelection = GUILayout.SelectionGrid(currentSelection, quadIcons, maxButtonsPerColumn, maxHeight);\r\n```'"
6410,380850019,b'nit: leading blank line'
6410,380850713,b'Might be good to convert these into summary tags for the docs'
4317,283954796,"b""This doesn't build. The `UnityEditor` namespace is only present in the Editor itself. You'll need to wrap this and the namespace in `#if UNITY_EDITOR`.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/57724810-79811d00-7640-11e9-93ab-a4c685632ee1.png)\r\n"""
4317,285354431,b'Pretty sure this breaks the build'
4317,285355991,b'https://dev.azure.com/aipmr/MixedRealityToolkit-Unity-CI/_build?definitionId=15\r\n\r\nThe automated builds seem fine'
4317,285359501,"b""Fine, don't take my word for it."""
4317,285374193,b'@StephenHodgson the build from Unity to VS worked for me and @keveleigh said the automated builds were fine. Can you elaborate what build is broken for you?'
4317,285384632,"b""Editor code should never make it into the final build. I'm surprised the build even succeeded.\r\n\r\nMust be getting removed by the compiler or something, but really this should not be included."""
4317,285692330,"b""@keveleigh @StephenHodgson is right this include will definitely break the build. Something must be funky with the automated builds.\r\n\r\nEdit: Just built from Unity. It didn't break. This is a first - looks like we need to comb Unity's change logs because this is not expected behavior."""
4317,285695364,"b""@railboy Do you (or anybody else) have a build break or actionable call stack? I have not had issues building after this change.\r\n\r\nLooks to me like it's currently not breaking the build because there's something in the namespace that's available at runtime (the \xe2\x9a\xa0 means only available in the Editor): \r\n![image](https://user-images.githubusercontent.com/3580640/58040291-036e3180-7aea-11e9-9777-35e5e43e6166.png)\r\n"""
4317,285696870,"b""Might just be a misconfiguration on Unity's part which we probably shouldn't depend on though."""
4317,285702066,"b'>Do you (or anybody else) have a build break or actionable call stack?\r\n\r\n@keveleigh Nope, looks like a non-issue after all.'"
6001,327283620,"b'Could you use NodeList instead? This seems like a duplicate. In general, be wary of adding new public members, as it increases API surface we need to support.'"
6001,327286621,"b""I suspect this might have been an old merge. I vaguely remember not having access to NodeList at some point. I don't even reference it so I'm not sure why its there. Happy to remove."""
6001,331240069,b'See if you can prevent this from being serielized'
6001,331259695,"b""Curious what the pushback is here? A couple arguments for the change:\r\n\r\n- In its current state, the list is inaccessible through `SerializedObject` (custom inspectors).\r\n- The list is of type `ObjectCollectionNode` which are `Serialized`.\r\n- The most common use case for `ObjectCollection` is setting them up at editor time. Pressing \r\n`Update Collection` generates this list. As a user, I'd expect the list to keep its state.\r\n- The original implementation serialized this field. https://github.com/microsoft/MixedRealityToolkit-Unity/blob/91107545a518aa543fd43376daa9ad420fa03fb9/Assets/HoloToolkit/UX/Scripts/Collections/ObjectCollection.cs#L27\r\n- IMO its a regression (which I take blame since I was the one who brought `ObjectCollection` to MRTK v2) The original PR #2606 had this as a public (serialized) field, which was changed due to PR feedback."""
3658,267121204,"b""@SimonDarksideJ  Didn't we want to make sdk components noticeably different?"""
4317,283889844,b'Does this affect undo support somehow?'
4317,283927030,"b'This is updating the default orientation behavior (not related to the undo support)\r\nCurrently, the default orientation gives a wierd result. \r\n![2019-05-14 10_56_31-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - PC, Mac   Linux Standalone](https://user-images.githubusercontent.com/13754172/57720618-150d9000-7637-11e9-87a0-452612a44261.png)\r\n\r\nWith OrientationType.**None** (this PR)\r\n![2019-05-14 10_57_00-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - PC, Mac   Linux Standalone](https://user-images.githubusercontent.com/13754172/57720642-1fc82500-7637-11e9-9588-e008ac588276.png)\r\n'"
4317,283935739,"b""yes exactly as @cre8ivepark has shown. It's very frustrating to always change the defaults when most will want the latter photo"""
5140,299763604,b'nit: specify units (presuming meters)'
5140,299798344,"b""none of the other fields specify their units. You sure that people wouldn't just assume its meters, like everything else is? Can't remember anything being something else actually."""
5140,301321021,"b'Default is meters, which I think is fairly common enough that not specifying here is fine.\r\n\r\nI think the times where it does become value is time (i.e. is it seconds, milliseconds, etc)'"
6550,344946385,"b""I'd probably pull this out and make it a separate file. I suspect it will be reused for future Object Collections."""
6550,344947833,b'nit: only UpdateCollection on value change'
6550,344947946,"b'>                     [](start = 27, length = 20)\r\n\r\nnit: trailing space'"
6550,344948016,"b'>false [](start = 38, length = 5)\r\n\r\naccidentally left here?'"
6550,344948225,"b'>  // protected int Columns; [](start = 6, length = 27)\r\n\r\nnit: leftover code?'"
6550,344959715,b'I think the same comment applies to the LayoutOrder one too!'
6550,344960003,"b'```suggestion\r\n                    Debug.LogError(""Cannot assign Rows when layout type is ColumnThenRow"");\r\n```'"
6550,344960536,"b'Nit: In the particular case where we are trying to log a specific error message for a single case (i.e. ColumnThenRow), it\'s more helpful to have a non-concatenated string. (i.e. Layout in this case will always only be a single type so that imagine...\r\n\r\nthat someone is searching for ""Cannot assign Rows when layout type is ColumnThenRow"" they can find the exact string in the code.'"
6550,344961100,"b""Actually wait, reading this closer, I think it might be more helpful to give an error saying what IS expected instead of what ISN'T expected (i.e. this should only be used with RowsThenColumns, so that it tells people how to use it correctly, rather than telling them they are using it wrong without a direct guide on how to use it right).\r\n\r\ni.e. I think a general principle is if we're going to give an error message, we should tell people how to get things right, instead of how they got things wrong."""
6550,344961217,b'Same comment as above with respect to error message messaging (staying in the positive instead of the negative)'
6550,344961244,b'```suggestion\r\n            else if (Layout == LayoutOrder.ColumnThenRow)\r\n```'
6550,344980445,"b""Thought about why the other fields don't call UpdateCollection() after and realized this is because you may want to change multiple properties in a frame, and only need to recompute once. Decided to follow that existing pattern to save on layout compute."""
6550,344981016,"b""lol. my vs code auto complete adds a '.false' every time I add a period..."""
6550,344981097,b'Thank you!\r\n'
6550,344984732,"b'Fixed, great suggestion'"
6550,344985595,b'Let me know what you think of the  new error messages.'
6650,348555595,"b""I'm probably missing something here but if I understand this correctly you're determining if we have to upgrade this asset purely by checking if those values are set to the wrong defaults, which could be problematic in future. After version 2.2 there might be grid object collections that have those values set up on purpose by the user and then we're upgrading those assets and changing the setup the user wanted to have on every scene load. """
6650,348679504,b'Do we need this if you have EditorApplication.update?'
6650,348679921,b'Looks like you have undo.recordobject twice?'
6650,348686262,"b""I'm surprised OnValidate did not work. Did you also try ExecuteInEditMode? \r\nhttps://docs.unity3d.com/ScriptReference/ExecuteInEditMode.html\r\n\r\nIt's great you unsubscribe from update once done...this all will still execute though every code change and recompile though. And FindObjectsOfType isn't cheap, especially dependent on the scene. This looks like it should work but i'm slightly worried about setting the precedent of adding this kind of editor overhead as we get more components that need to be migrated. Especially since in general we only need to perform the migration once per scene and then never again, so we searching/checking constantly for only one update (generally) in the lifetime of this component\r\n\r\nI'm not exactly sure of a better solution yet. The benefit to mind of ExecuteInEditMode for like Awake() is that you don't need to findobjectsoftype and you can clean the code up a bit"""
6650,348686653,"b""Do we have to UpdateCollection here? As Bernadette said, this seems potentially problematic. If a user wants different values or something changes in the future, we will be forcing update of the sub elements everytime against the user and they can't turn it off"""
6650,348740536,b'I waffled on it myself. Removed.'
6650,348741299,"b""I was also surprised OnValidate did not work. The asset did not get marked as dirty / to save when I used OnValidate.\r\n\r\nI didn't notice any slowdown when checking on every asset save but can see that having such a precedent for all assets could cause a slowdown.\r\n\r\nExecuteAlways + Awake is working, so going with that approach"""
6650,348741342,b'Good catch!'
6650,348741441,b'Added asset versions'
6650,348793374,"b""Nit: For some of these, consider using string interpolation which can make for a little neater looking stuff:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated\r\n\r\nAlso mentioning this because it's more common in some other newer languages."""
6650,348793552,"b'(Especially with the Debug.Log of the one on line 491, the reduction in """"\'s could possibly increase the readability of the final format'"
6650,348799961,"b""Nit: If you ever think that these have a chance to be chained together (i.e. someone upgrades from 2.1.0 to 2.4.0), then it might make sense to have UpgradeAssetToVersion1() directly set assetVersion = 1 (and then have the other  checks come after, so that they will incrementally be upgraded). Realistically this shouldn't matter here (because I don't think there's going to be another change here that affects row/cols in a way that would depend on this upgrade code to have run."""
6821,355637589,b'```suggestion\r\n        /// Specify direction in which children are laid out.\r\n```'
6001,334099355,"b""There is no need for the GameObject entry. Can't we just do transform.gameobject?\r\n\r\nCollider isn't used and seems redundant with Colliders\r\n\r\nIsClipped seems specific to just the scrolling collection. That should be in a inherited special class. \r\n\r\nThis node will just balloon if every type of collection adds the properties it additionally wants to save.\r\n\r\nSame with Offset for GridObjectCollection, Radius for ScatterObjectCollection etc"""
6001,334124542,"b'@Cameron-Micka FYI on the `MaterialInstance` issues. Also, that error is coming back.'"
6001,334137051,"b""I'm guessing that error is from a material that was already instanced being instanced a second time. We should figure out what material(s) those are? I should demote the error to a warning and print out the material(s) in question. As for the frame time that looks like there are ~278 renderers in the clipping primitive. So, it has to loop though them all and update their material property blocks. Same is true for the MaterialInstance class. There are ~278 instances all their Update being called. I would recommended simplifying the scene a bit. In the future we could add some logic to the ClippingPrimitive to not update if no changes were made to the primitive. But, I don't think that should block this PR."""
6001,334146618,"b'Cool, I second Camerons opinion. It is worrisome and important but should not block this PR.\r\n\r\n@Cameron-micka, can you open up a bug with all relevant details for the MaterialInstance update perf issue since you seem to have a solid grasp of it?\r\n\r\nIf you also find noteworthy details for clipping primitive as well, please file a bug'"
6001,334156749,b'Of course! Added some bugs: https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6270 and https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6271'
5374,305965788,"b'I believe many implementations of `IMixedRealityPointer` are MonoBehaviors, which would cause this check to behave potentially unexpectedly: https://blogs.unity3d.com/2014/05/16/custom-operator-should-we-keep-it/'"
5374,306120032,"b'I agree that it is problematic - is there an existing MRTK convention for handling this case? We have a have a pretty simple NullIfDestroyed extension in our codebase for this situation (it just tries casting to a MonoBehaviour or Unity.Object and then does the overloaded null check on the casted version), and I could bring that into MRTK if it would help.'"
5374,307504999,"b'in general, we have used a two step validation\r\n\r\nif (Pointer != null && Pointer.CursorModifier != null)'"
5374,307529432,"b'That works if you\'re doing the null check through a class type, but not through an interface type. The interface ==/!= is still just doing a reference (in)equality check, without the extra ""is destroyed"" check that the Unity.Object ==/!= null will do (https://stackoverflow.com/questions/1881459/how-do-i-override-the-equals-operator-for-an-interface-in-c).'"
4437,284932129,"b'Is there an equivalent thing here to do around waiting for the input system to be fully initalized, or can we assume that by this point it should already have been?'"
4437,284948999,b'it already should have been.'
4995,296096168,b'Temp implementation? Do we want to check it in yet?'
4995,296096291,"b""It looks like you're trying to figure out what type of resize handle to use here, but I'm not fully following how because I don't understand what handleRigTransform is. Could you explain in a comment what you are doing here?"""
4995,296236187,"b""Hopefully the new logic makes a bit more sense. I can still add a comment if you feel like it's necessary."""
4995,296243671,b'`adjustedHandlePos` is still a bad name. That needs changing.'
5374,305932706,b'Can you add a comment re: why the BaseCursor property is getting set to null when the references are equal?'
5374,305933388,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305933417,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305933576,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305933627,b'nit: consistency: most other loops in this file use for instead of foreach'
5374,305966284,"b'Not sure if this is just GitHub formatting, but the indentation here seems inconsistent with the line above.'"
5374,305966629,"b""I think this might be fine, since this line was present in the original file:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/5374/files#diff-89d7de97a7cae3c9e2c96ea7bc566646L290\r\n\r\nI'm good either way though."""
5374,306119172,"b""yeah, the indentation is wrong (probably a merge artifact) - I'll fix it"""
5374,306127243,"b'well, it looks good locally now, but still looks bad here :/ hopefully it is just GitHub formatting at this point.'"
5374,306127504,b'added'
5374,306127752,b'Either way works for me too - just let me know what is preferred.'
6310,336038183,"b""if someone modifies the pointer appearance during runtime the bounds won't be correct anymore. \r\nI'm just having a scenario in my mind where someone shows context dependent pointer representations - in that case bounds would always refer to the pointer visuals that were used as a initial value"""
6310,336060621,b'update comment'
6310,336066606,"b""I'm not sure if this approach will work as expected with all the platforms we're supporting - we can't rely on them having the same / similar FOVs - Does this work well for both HL1 and HL2? How does this look on mobile?\r\n\r\nUsually we're using cm / m as units for properties in our UX components. I was wondering if we could maybe have a size in cm or fixed scale applied to the cursor in 1m distance - this would be the value we set up and then we calculate the cursor scaling from this reference which should be the same on all the platforms? Would that make sense?"""
6310,336069024,b'default value should be false as that was the original behavior '
6310,336096468,"b""Agreed, should've thought of that. Will make relevant changes."""
7529,392314492,b'there are currently no api doc pages for these classes.'
7529,392317990,b'Issue #7534 tracks the missing doc pages'
7529,392323670,b'done'
7529,392328064,"b""the general pattern has been 'prefab' after the reference, but i will move."""
7529,392349498,b'this is actually pointing to the script as an example. not sure what the value of pointing to the API docs for the class will provide.'
7529,392354331,b'there isnt an api doc for the DemoSpatialMeshHandler class'
7529,392360188,b'done'
7529,392361019,b'done (and flipped the \\ to /)'
6925,393358268,"b'Please add license header (// Licensed under the MIT License.). If desired, feel free to add a copyright designation.'"
6925,393359045,"b'Please add summary comments describing each property. Also, please add [Tooltip(""..."")].\r\n\r\nThis request applies to all serialized fields.'"
6925,393359575,b'Please add license (and any optional copyright) header.'
6925,393360420,b'Please add license (and any optional copyright) header.'
6925,393360456,b'Please add license (and any optional copyright) header.'
6925,393360622,b'Consider adding summary comments for these enum values. They will help make the MRTK documentation best in class. Thanks!'
6925,393360649,b'Please add license (and any optional copyright) header.'
6925,393360730,b'Consider adding a summary comment here'
6925,393360798,b'Please add license (and any optional copyright) header.'
6925,393360864,b'Please add license (and any optional copyright) header.'
6925,393360948,b'Consider adding summary comments for these enum values.'
7577,396783396,"b'Why is this line here? It is commented, so is safe, but the code should get platform defines from the project.'"
7275,396822092,b'done'
7590,398101261,b'i tried a search/replace. i will fix the spaces'
7594,400481460,b'nit: maybe IMixedRealityGazeProviderHeadOverride?'
7600,400542697,b'not sure. good question'
7600,400552936,"b""let's back them off until we know they tell us somethin"""
7605,401837765,"b'reducing visibility is a breaking change. i wanted to avoid breaking anything,'"
7605,401838419,"b'good question. if we created a single element array, there would be no need for Unity to allocate the return'"
7605,401838650,b'same could be done for spherecast as well'
7605,401855186,b'updated.'
7605,401907080,b'i think i will go back to the previous single layer impl and investigate the new method in another pass'
7605,401907688,"b'not sure, but at least the raycaster should ignore irrelevant layers. should investigate in a separate pass\r\n'"
7605,401935294,b'true. the intent was to enable the nonalloc form of raycast to be used in place of the original. do you think we should make this one private?\r\n'
7605,401936426,b'done'
7619,404324537,b'accidentally deleted. thanks for the catch!'
7619,404325404,b'I will work with @vaoliva to ensure that her changes merge correctly and have the markers.'
7646,407013870,"b""There's another mistake in this marker... The string has the wrong method name."""
7646,407014102,"b'It was, but i forgot to add it to the description. :/\r\n\r\ni dont have before / after. anecdotally, the partner we tested this change for states it is an improvement.'"
7646,407566103,b'added comment to description'
7646,407566320,b'fixed.'
7646,407566377,b'fixed'
7646,407566432,b'fixed'
7646,407567022,"b' i can look into this. in many cases, the derived class will also appear in the trace as they typically call the base as well as their own custom code.'"
7646,407569198,"b""that's a good question. by showing these quick-out events, we see that there is a method call adding _some_ overhead and that the stack is consistent between these and more expensive calls.\r\n\r\nAdding the markers after the enabled check _would_ make it easier to see the impact by eliminating the 0ms events.\r\n\r\nI'll consider and modify in a future PR. I will need to scrub the complete tree to find all instances of this type of tracing,"""
7646,407586423,b'fixed'
7646,407587701,"b'@keveleigh, are you proposing adding implementations that are only markers and calls to the base class for each derived class? or are you indicating that the trace context should make it clear with the markers as they currently are?\r\n'"
7646,407587805,b'https://github.com/microsoft/MixedRealityToolkit-Unity/issues/7647\r\n'
7646,407595513,"b""that's fair"""
7646,407604136,"b'Per discussion, leaving this as-is and will evaluate if further refinements are needed after spending time using this change.'"
7652,407769401,"b""i'll remove"""
7652,407770061,b'done'
7652,407770090,b'done'
7676,409887699,"b'Maybe ""Use MRTK v2.3 anchoring""?'"
7730,416976612,b'Correct. That was out of the scope of this implementation. It is likely a fairly corner case (ex: uninstall unused spatializer x and install new spatializer y) between project loads.'
7774,419691739,b'```suggestion\r\n   1. XR Plug-in Management\r\n```'
7899,426744433,"b'```suggestion\r\nTo upgrade the assets on all buttons in the project to the new recommended format, use the ButtonConfigHelperMigrationHandler. \r\n```'"
7899,426744905,"b'```suggestion\r\nIf an icon is not found in the default icon set during migration, a custom icon set will be created in MixedRealityToolkit.Generated/CustomIconSets. A dialog will indicate that this has taken place.\r\n```'"
7899,426859339,"b'```suggestion\r\nIf an icon is not found in the default icon set during migration, a custom icon set will be created in MixedRealityToolkit.Generated/CustomIconSets. A dialog will indicate that this has taken place.\r\n```'"
7899,426859841,"b'```suggestion\r\nTo upgrade the assets on all buttons in a project to the new recommended format, use the ButtonConfigHelperMigrationHandler. \r\n```'"
7906,427051790,"b'I wonder if there is a clean way to determine the correct doc version for the link? This one will always point to the dev branch docs.\r\n\r\nThis isnt anything to block this change upon, more an open question.'"
7915,427570722,"b'nit: if this test is run in a project where an iconset exists, the length is likely already >=1. you might want to check for a preexisting file and cache the initial length and then check with a +1'"
7969,430583876,b'I copied this note from 2.3.0. The intent is not not force customers to go back to previous releases to find this.\r\n\r\nThoughts?'
7969,430583974,b'Thanks for catching this!'
7971,430594415,b'That would likely require a second PR (to dev) that restores the in-code links.'
8019,436185297,"b'please consider adding ""Experimental"" to this namespace. '"
8019,436185442,b'why is this class internal?'
8019,436185694,b'suggest initializing these fields to avoid warnings.'
8019,436185900,b'Please add summary comment to this function. thx!'
8019,436186161,"b'same ""Experimental"" namespace addition here as well. we can remove when we are confident in the API shape.'"
8019,436186383,b'this should likely be factored into an interface + concrete class to allow customers to implement their own logic'
8000,436210592,"b'@provencher, have you taken a look at how the UnityAR camera settings provider manages required camera and playspace components? \r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/releases/2.4.0/Assets/MRTK/Providers/UnityAR/UnityARCameraSettings.cs\r\n\r\nNote, the above link is to the 2.4.0 implementation'"
8019,436826638,b'nit: code style: please put the else if on the next line :)'
8033,438548944,b'Is that confusing since there is an MSBuild menu that will _not_ be removed?'
8033,438549168,b'I can check and possibly cache the result.'
8033,438549495,b'Not sure. We havent tested 2020 and have only seen the loop issue on some early versions of 2019.x'
8033,438549606,"b""I'll try a reword."""
8033,438549719,"b""I'll update that page. Thanks!"""
8033,438936222,"b'Removing the precompiler condition and genericizing the dialog message. All users will now experience the confirmation dialog,'"
8033,439049609,b'This gets called once per menu display.\r\n\r\n![image](https://user-images.githubusercontent.com/13281406/84435318-7c08ca00-abe6-11ea-85dd-2feafdfc31cf.png)\r\n'
8033,439093415,"b'i have tested on recent 2019.3 builds and 2019.4 and have not seen the loop. the issue appears to have been with an early 2019.3 release.\r\n\r\ngood question on the ""how do you fix""'"
8033,439093875,b'i cam happy remove the prompt as we recommend customers be on more recent 2019.3/4 builds'
8033,439094440,"b'actually, not doing this results in json that cannot be loaded. this code has existed since MSBuild for Unity configuration was added to MRTK and has shown to be resilient.'"
8033,439094536,b'it appears to be getting flagged since i moved it into a shared function'
8033,439094627,b'sounds good'
8033,439094830,"b""this was based on the output of Unity's json API."""
8033,439095207,b'yep. remove is the correct thing and thx for catching the typeo'
8033,439095611,b'it has failed on earlier versions and has been stable on current versions. not sure the best wording here.'
8033,439096320,"b""Unity's JSON parser/writer does not appear to support dictionaries, which is why we do this two phase serialization """
8033,439097830,b'>  It seems like you could still have a well-formed JSON file that just has different spacing\r\n\r\nLet me look for something more robust'
8033,439150219,b'Reimplemented to be less fragile.'
8033,439150447,b'have a better (more robust) implementation now'
8050,439663986,b'it is easy enough to keep the for loop and catch a different exception \r\nwhichever makes folks happy :)'
8050,439665653,b'Definitely! We should have extensive tests for ensuring this works once all of the issues have been uncovered.'
8050,439680237,"b'> if we wait until the next frame to try to recreate the UIRaycastCamera, would we have to make the DestroyImmediate race condition change? \r\n\r\nthat appears to be an issue based on Unity indicating the object exists after Destroy and before cleanup. MRTK is checking the next frame and, seeing that the object exisst, does not recreate it.'"
8050,439680323,b'Super appreciate the feedback here! '
8050,439680729,"b""> All remaining service lifecycle code is cancelled for this frame\r\n\r\nI'll see what i can do to ensure complete update/cleanup between changes. It may introduce an extra frame, or so, between shutdown and restart."""
8050,439714312,b'I will see if that scenario can work with just the changes in this PR. It may require additional changes to fully support the requested test.'
8050,439714344,"b'Sounds good. I will restore the loops and update the exception handling,'"
8050,439714530,"b'> What if I try to change the profile when a system is enabled / disabled / reset.\r\n\r\nThe [Late]Update try/catch is only for data providers. Services are covered by the handling in ExecuteOnAllServices* methods, which are called in most (very few exceptions) situations.\r\n\r\nAn earlier incarnation of this change had exception handing for all data provider methods (enable, disable, etc) and that was originally deemed unneccessary.\r\n\r\nHappy to revisit!'"
8058,440582164,"b'I can do that. It will likely be the services, providers and extensions (which is the majority of those changed here).'"
8058,440582305,"b'That said, a pruning of the list _is_ warranted here'"
8058,440583270,"b'@keveleigh, do you think it is worth marking the _classes_ vs marking the entire assemblies?'"
8058,441661566,b'We do not expect any customers to depend upon this assembly. It is used internally by MRTK.\r\n\r\nIt was changed here due to the path length getting too long and breaking compile of the Windows Mixed Reality provider'
8058,441804343,"b'In fact, there were some unnecessary assemblies that have been folded in this PR. :smile:\r\n'"
8058,441804938,"b'Added a custom preserve attribute that supports inheritance. this allows us to decorate only the base class(es) to perform strategic, targeted preservation'"
8058,441820187,"b'@keveleigh is working to update our MixedRealityToolkitFiles class to use AssetDatabase APIs. Once that work is complete, this PR will be modified to adapt to the change. '"
8072,442604965,b'Yes please!'
8050,443014863,b'for loops restored.'
8050,443015673,"b'I will investigate some more. \r\n\r\nFrom what I recall when investigating this before, the LateUpdate will not get called due to the shutdown / restore process that occurs. \r\n\r\nI _defintely_ want a cleaner solution here'"
8050,443015837,b'?'
8050,443016975,"b'Looking at the profiles, there does not appear to be anything in the Default HoloLens1 profile that expressly disables near interaction.\r\n\r\nI will update the profile as part of getting the above described test implemented.\r\n'"
8058,443855853,b'it is not. must have been accidental. thanks for the catch!'
8058,443860122,b'mistake :)'
8058,443864850,"b""I'll take a look"""
8058,444345772,b'Added'
8058,444407391,"b'None of the methods in the call stack return or early exit as currently written. I will look at adding this.\r\n\r\nFortunately, the ones needing modification are all private. There will be no breaking changes involved.'"
8058,444433755,b'The scope of the required changes feel outside of that of this PR. There are some structural changes in MixedRealityToolkitFiles.cs that need investigation.'
8058,445051027,b'correct. it is to verify the behavior regardless of slash direction.'
8058,445052890,b'i missed one file \xf0\x9f\x98\x84 '
8058,445054634,b'fixed'
8058,445681311,"b'This ensures the assembly is always processed by the linker. With the forthcoming PR to add an mrtk specific linker to generated folder, i can likely remove these.'"
8058,445682591,"b'i had deleted it in a previous commit, then re-added from the mrtk_development branch. Not sure what GH is flagging here.'"
8058,445683085,"b""Good catch! Thanks @julenka! I'll add a fix (and test case)"""
8058,445740201,b'removed'
8058,445740313,b'fixed and new edge case tests added'
8105,445840800,"b'It should be created in MixedRealityToolkit.Generated, in Assets.'"
8105,445840909,b'Just like custom profiles'
8105,447118739,"b'For 2.5, it would be solved by documentation (""add these lines if you customized, delete the file if you didnt""). Ideally, we would add some UI in a future release.'"
8105,447120705,"b'We\'re good on this.\r\n\r\nPer: https://docs.unity3d.com/Manual/ManagedCodeStripping.html#LinkXML\r\n""You can use any number of link.xml files in a Project, so plugins can provide their own preservation declarations.""'"
8107,447214784,"b'After reviewing the code for the observer, i did not find anything that was obviously ""deleting immediately and adding after a delay"" this was an attempt to see if not calling the add path (just updating in place) made a difference.\r\n\r\nOtherwise, i believe the issue in #8097 is lower than MRTK (Unity or platform behavior related?)'"
8128,448029331,b'we probably should. thx'
8128,448029527,b'maybe. right now that is all that is in this folder. might be confusing though in that we are not providing anything else.'
8128,448031542,b'done. added the known good version from 2018.4. 2019.4 should update appropriately based on past experience'
8128,448510659,b'done'
8088,449261026,b'```suggestion\r\n\xef\xbb\xbf// Copyright (c) Microsoft Corporation.\r\n```'
8088,449261109,b'```suggestion\r\n// Licensed under the MIT License.```'
8088,449262188,b'```suggestion\r\n1. Ensure that [developer mode](https://developer.oculus.com/documentation/native/android/mobile-device-setup/) is enabled on your device. Installing the Oculus ADB Drivers is optional.\r\n```'
8088,449262614,b'I dont think this step needs to be documented. Customers can use existing scenes.'
8088,449262996,b'Please take this section out until hand tracking support has been added.'
8128,450341334,b'great catch. thanks!'
8151,451032521,b'it does not leave them behind. i can remove that entry'
8151,451032629,"b'we support building local similarly to the way we do for nuget packages (run the script file). if you call createupmpackages.ps1 with ""-OutputTarget local"", they will be generated and copied to the value provided by -OutputDirectory'"
8151,451032801,b'works pretty well. i use it for testing changes :)'
8151,451033876,b'removed.'
8151,451708617,"b""I'll look into that"""
8151,451797083,"b'For consistency with the nuget packaging script, i would like this one to behave similarly. i will check for a pre-installed node.js and only fetch the package if not found,'"
8151,451813344,b'added a check for a previously installed version. only download and unpack if not on the path'
8151,452400015,b'Yep. It is a sample category for things that run in the editor (ex: inspectors)'
8151,452400666,"b'@CDiaz-MS, to be clear, the leap provider uses _no_ Unity XR APIs?'"
8151,452401834,b'removed .legacy and the erroneous 2020 note'
8151,452408713,b'offline confirmation that i was confused by this question. updated the examples layout to fix'
8151,452560736,"b'i recall needing to do this step. worst case, it reports that it isnt needed :)'"
8165,453109745,b'let me give that a shot'
8165,453122346,b'done'
8165,457507326,b'sure'
8165,457507481,b'will double check'
8165,457508058,"b""i took it from an example. i'll remove and post the output\r\n"""
8165,457508704,"b""i'll work on that today"""
8165,457581844,b'resolved :)'
8165,457584116,b'sharp eyes! thanks!'
8165,457589911,b'fixed'
8165,457593943,b'silences messages like\r\n\r\n    Directory: C:\\handPhysUpm\\Assets\\MRTK\\Extensions\\HandPhysicsService\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        7/20/2020  11:00 AM                Samples~'
8165,457594457,"b'granted, no one is likely to watch this output. I do prefer a cleaner log'"
8165,457623599,"b'added parameter to allow for specifying, if not present, it will be determined in the previous manner'"
8165,457665901,b'updated'
8200,460153759,b'maybe find a word that is easier to translate than doodad :)'
8200,460154107,"b'nit: no need to keep this comment and plz add ""private""\r\n\r\nsame comment for Update too'"
8200,460155078,"b'nit: i do not believe we have used multi-variable initialization like this in the past. for consistency, can you match the other vars?'"
8200,460156074,"b'nit: in general, we only indent the parameter list by one.\r\n\r\n```\r\nMethod(\r\n    param1,\r\n    param2,\r\n    param3);\r\n```'"
8200,460156411,b'nit: same indentation comment. it helps to avoid horizontal scrolling on narrow (read: portrait) screens'
8200,460158311,b'Please add copyright / license header\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'
8200,460158856,b'Please add copyright / license header\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'
8200,460159986,"b'This file has the older copyright / license. GitHub isnt letting me add a comment there since it is unchanged, can you update it to the new one?\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'"
8200,460161153,b'Can you update to the newer format?\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'
8200,460161407,"b'Please add summary comment block on all public (or protected) methods, properties, fields'"
8200,460161652,"b'nit: not fond of var, when the type name is short :)'"
8200,460169412,b'```\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'
8216,461134908,b'most likely :)'
8216,461134911,b'nope. good call. i will remove that part now'
8216,461135012,"b""i'll give it a try"""
8232,463223861,b'this is the same mechanism as used by the unitypackage task. it should be passed to us as well.\r\n\r\ni _do_ want to make sure we can spin final packages with the official version at some point. i do not believe a simple file rename will be sufficient here.'
8232,463671385,b'yeah. its on the order of a handful of minutes'
8232,464666550,b'it is for both. the build machine passes in the project root. the local runs can omit it'
8232,464667168,b'the script needs to know the project root in order to find the package.json files. this value gets resolved by the script and equates to the actual root (the build machine runs all scripts from the context of the project root (where Assets lives))'
8232,464667527,"b'the build pipeline does not use these, they are for the local runs. that said, i am happy to remove'"
8232,464669458,b'done'
8232,464686222,b'let me see what i can do \xf0\x9f\x98\x84 '
8232,464693320,b'removed that section. ProjectRoot is now required to be passed on the command line\r\n'
8232,464694459,b'i verified through several build machine tests that it starts in the actual project root and that this is the correct path to pass'
8232,464723909,b'Let me take a look at how to do this better.... I have an idea based on what you said @wiwei '
8232,465349809,b'separated them :)\r\n\r\na future PR will allow the pipeline to specify official builds (which will not use the build number)'
8050,465367354,b'Let me double check. I believe all of the systems that have this method may behave the same.'
8050,465370363,b'Suggest adding detailed comment describing the scenarios.'
8050,465370753,b'I will address in a separate pr'
8050,465372876,"b'initialization needs to happen right away, otherwise profiles do not get read correctly.'"
8050,465376323,b'going to open a separate PR for the boundary system issues'
8232,465837058,"b'by that definition, all of our package.json files are templates :)'"
8232,465838413,"b'good question. i believe i crash will potentially impact other scripts. fortunately, as part of CI, it will fail the run and terminate.'"
8232,465838798,b'i will update the messages'
8232,465839207,b'they may have been left over from an earlier incarnation. will look into it'
8232,465839816,"b""it's a leftover note to remind me to add the section"""
7016,366999194,"b'nit: Feel free to ignore this for now. But should use IgnoreCollidersNotInFOV public property instead of private, to be consistent with access to private variables in case the getter/setter does particular code check etcs'"
7016,367092431,b'Fixed.'
7214,374380967,"b""I think these two lines are valid in `OnValidate`, since they're checking to ensure specific fields are within certain ranges. From https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnValidate.html:\r\n>You can use this to ensure that when you modify data in an editor, that data stays within a certain range."""
7214,374382135,b'The other lines fail because they depend on scene objects that might not have loaded into the scene graph yet. These just refer to floats'
7214,374383262,"b'Yep, I called this out in my description, someone read it yay.\r\n\r\nI will change it back to keep OnValidate as you say :)'"
7214,374384206,b'>I called this out in my description\r\n\r\nOops \xf0\x9f\x91\x80'
5242,303393278,b'add description what the class does (eg keeps mouse pointer within screen boundaries)'
5242,303465625,b'done'
5242,303908115,"b""i can't find the description. wondering if you didn't push the last commit or if github is just not showing me the change?\r\n\r\nalso if you can add one or two sentences to the spatialmousepointer class description , just what it does (mouse pointer moves around camera in 3d space , not bound to screenspace)"""
5242,303940264,"b'Ok, I added something in. I just did not think that I should write any more than there was before I even touched the class.'"
5242,303971288,"b""Somehow I screwed up. I have the same repository twice with just the s in upper and lower case. But I can't open both at the same time for a merge, so I have to see what I can do about that."""
5242,303984140,b'Managed to merge. Now the description is there'
5242,304323336,"b""I know the documentation in most classes is not great - but we're trying to improve that. So whenever a new feature is added or an existing feature gets fixed / refactored we should update / improve documentation as well :)"""
6863,358278990,b'do we need to write some sort of migration for this? breaking change?'
6863,362574543,"b'I think this was correct before:\r\n\r\n```suggestion\r\n        [Tooltip(""Used when no focus target exists and select is not pressed"")]\r\n```'"
6863,362576197,"b'Or something like:\r\n\r\n```suggestion\r\n        [Tooltip(""Used when a focus target doesn\'t exist and select is not pressed"")]\r\n```'"
4974,295690694,"b""I guess it's some kind of margin? Does it make sense to make it configurable? (i know you didn't add it, but any idea what this is for?)"""
4974,295691449,"b""Can GameObject.transform ever become null? We don't expect this to happen anywhere else at least. Removing those would make this check a little less verbose."""
4974,295704521,"b""This is not a reliable solution, we should fix the input simulation instead if there is a discrepancy with hand tracking. I'm trying to understand how these actions work, but don't have a good understanding yet."""
4974,295898925,"b""I'm assuming it exists to bump up the inaccuracy of someone targeting an object to pick it up - i.e. they may mis-grab slightly. That said, SphereCastRadius could just be 0.05f larger \xf0\x9f\x98\x84 """
4974,295899272,b'I grabbed this from PokePointer - IMO its redundant. I can clean it up.'
4974,295900037,"b'This is a weird one, the GrabPointer is set to ""Grip Press"" - which on device works great. In editor, the ""pinch"" gesture only fires ""Select"". I don\'t know enough about input simulation to make that fix so I just stuck this in here. PokePointer doesn\'t even use the base.OnInputDown call so I figured it was okay.'"
4974,295929122,"b'I removed `gameObject` since `grabbable.transform` is the same thing. Depending on garbage collection, a unity object can be null, but still exist so the component could still exist as well.'"
4974,296388285,"b'Now that @julenka showed me the Physics Raycasting bits in the `FocusProvider`, I better understand why this 0.05f margin exists. `SpherePointer` flags itself as ""near"" a collider to let `FocusProvider` do the more expensive overlap check.'"
4974,296388366,b'force reverted to go down a simpler route.'
5339,304669914,b'Is is possible to also add a check to make sure that the object that is close to the hand has a NearInteractionGrabbable? Currently this will return true even if there are no grabbables near the hand.'
5339,304684380,b'Does this (and `NearObjectRadius`) need to be public? They seem like values only used internally in this script.\r\nMaking things public for tests feels strange to me.'
5339,304724478,"b'I could thing of an example: what if you wanted to show an object *just out of reach*? So, at the point where you still have a hand ray but if you move just a bit closer the ray disappears. How would a consumer determine that distance without this var? '"
5339,304794431,b'I like to have at least a public getter for serializable fields. It seems wrong to be able to edit something in the inspector but having no way to at least _read_ that value at runtime.'
5339,304795053,"b""I'm just reproducing the previous behavior, which also did not include a check for specific components beyond the collider. I'd rather not make a potentially breaking change at this point."""
5339,304796777,"b""It's an aspect of Unity i'm really not fond of: this fact that you have more access to settings in the editor by default than through the API. At least that's how our access policy with private fields plays out in practice."""
5339,305051721,b'Works for me! Thanks for the additional context.'
5618,313178034,b'About my comment above about HandJointUtils.TryGetJoint(Controller). Seems like a great example of where that method would be useful.'
5618,313245036,"b'@julenka, these were instances of people calling HandJointUtils when they didn\xe2\x80\x99t have to after doing a find all references'"
5823,319248679,"b'I think a for loop over toQuery here is excessive, remove'"
5823,319440003,b'should we adjust the comment for docfx as well here? '
5823,319533568,"b'```suggestion\r\n        /// Additional distance on top of<see cref=""BaseControllerPointer.SphereCastRadius""/> when pointer is considered \'near\' an object and far interaction will turn off.\r\n```'"
6870,356942589,b'Add comment'
6870,357327429,b'Nit: Delete empty return comment clause'
6870,357329299,b'```c#\r\nif (grabbable != null && !isInFOV(collider))\r\n{\r\n    grabbable = null;\r\n}\r\n```'
6870,357330728,b'```suggestion\r\n                Bounds bounds = myCollider.bounds;\r\n```'
6870,357330812,b'```suggestion\r\n                foreach (var corner in corners)\r\n```'
6870,357332034,b'Similar comment about abbreviations as in:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/6550#discussion_r344948695'
6870,357333697,"b'If TryUpdateQueryBufferForLayerMask is intended to be called once per frame per the documentation, this would alloc memory each frame right? '"
6870,357336277,"b""Looking at the test case - is there one also for this edge case?\r\n\r\ni.e. I see a comment around this one:\r\n\r\n// Move forward so that cube is no longer visible\r\n\r\nBut it looks like it's actually a 'false' case.\r\n\r\nIt's possible I'm not reading deeply into this enough."""
6870,357338091,b'```suggestion\r\n            private bool isPointInFrustrum(Vector3 point)\r\n```'
6870,357338223,"b""What's the significance of the number 10?"""
6870,357339528,"b'Similar question around camera buffer here - why do we choose .05 meters (instead of say, the camera near clip plane or something else based on what the user has configured)'"
6870,357349578,b'+1'
6870,357350997,"b""at the cube no longer visible test we're moving past the object, so it's not in FOV anymore. The edge case is if you have an object that is so big that it spans the entire FOV, so a cube in front of you that takes up the entire screenspace. We could add a test for that by just spawning a huge cube and checking if the pointer is active?"""
6870,357352871,"b""sry in front of you is wrong - it has to surround you as well.\r\n\r\nthough now thinking about this - if we have that scenario, do we really want to leave that pointer enabled? like if there is a gigantic cube surrounding us like a room and we're close to the back wall of that room and there's objects to manipulate inside of that cube that might be able to trigger far interaction? \r\n\r\nOn the other hand , not sure if you would want to define a thing like that as a grabbable then..... probably not"""
6870,357386487,"b'```suggestion\r\n            /// Intended to be called once per frame, this method performs a sphere intersection test against\r\n```'"
6870,357386568,b'```suggestion\r\n            /// all colliders in the layers defined by layerMask at the given pointer position.\r\n```'
6870,357387792,b'Use CameraExtensions.IsInFOV here instead'
6870,357387954,b'use CameraCache.Main.IsInFov() instead'
6870,357388933,"b'switch to for (int i = 0.... list should no add garbage collection, but some research shows foreach loop does have additional assembly compared to for (int i. Especially since I believe this is called every frame'"
6870,357389643,b'simplify this to return (xMin <=.....);'
6870,357389865,"b""Make static? don't see any private code\r\n\r\nAlso returns is empty in comments"""
6870,357484781,"b""Oh whoops I forgot about this -- I was testing out the idea and forgot about this magic number. It worked sooner than I expected and I didn't clean up this code. I'll comment it and fix. Thanks for the careful review!"""
6870,357484912,"b""Yes you're correct -- I just forgot to clean this up."""
6870,357486000,b'Whoops. I made this PR too quickly. Nice catch.'
6870,357486054,b'```suggestion\r\n```'
6870,357486150,"b'Good catch, I need to fix that.'"
6870,357486220,"b""todo: Committed too quickly -- fix compile error's after applying Will's change."""
6870,357486711,"b""Oh cool, I didn't know about that. However, that function won't allow me to slightly increase the camera's FOV to have a slight buffer, or to use a distance from camera slightly larger or smaller. I could add a utility function that is a bit more flexible. I can explain in comments why I didn't use camera.IsInFov"""
6870,357487229,"b"">though now thinking about this - if we have that scenario, do we really want to leave that pointer enabled? like if there is a gigantic cube surrounding us like a room and we're close to the back wall of that room and there's objects to manipulate inside of that cube that might be able to trigger far interaction?\r\n\r\nActually line 56 tests exactly this case -- you are inside of a giant grabbable. I considered not supporting this edge case but then remembered a customer that mentione he was pleasantly surprised that he could move objects when he was inside of them. So if he accidentally was inside a huge object he could still move it. So I decided to support that edge case explicitly."""
6870,357487262,"b"">Looking at the test case - is there one also for this edge case?\r\n\r\nYes, see SpherePointerTests line 56. The very first test spawns a cube that's 1 x 1 x 1 m at the origin -- the camera is inside the cube."""
6870,357487350,"b""argh you're right."""
6870,357487414,"b""Oh cool, I didn't know about that. However, that function won't allow me to slightly increase the camera's FOV to have a slight buffer, or to use a distance from camera slightly larger or smaller. I could add a utility function that is a bit more flexible. I can explain in comments why I didn't use camera.IsInFov\r\n\r\n"""
6870,357494900,b'Use the Mathutilities is in fov then?'
6870,357801020,b'@thalbern  could you let me know if my comments resolve your concerns here?'
6870,357803037,b'Added comments explaining this.'
6870,357886899,b'Done'
6870,358322313,"b""yes, i didn't realize the cube was surrounding us in that case - all good :)"""
6870,360237819,b'Is this not going to be in shared location so touch can take advantage too?'
6870,360238724,b'Can this maybe be simplified to myCollider.bounds.Contains(CameraCache.main.transform.position)?'
6870,360238846,b'Remove?'
6870,360240495,b'Simplify if statments to something maybe like below?\r\n```c#\r\nif (grabbable != null)\r\n{\r\n   if (ignoreCollidersNotInFOV && !isInFOVCone(collider))\r\n   {\r\n        /// comments\r\n       grabbable = null;\r\n   }\r\n   else\r\n   {\r\n       return true;\r\n    }\r\n}\r\n```'
6870,360240680,b'Update method comment?'
6870,360240922,"b""nit: maybe lastCalculatedFrame? just to point out it's a frame number"""
6870,360548408,"b""Yeah I know we used to have that, but actually I like keeping in separate since it makes it easier to read for me, even though it's a little more lines."""
6870,360550535,b'Can we reuse/extend this method:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Utilities/MathUtilities.cs#L496 \r\nor its camera extension:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit/Extensions/CameraExtensions.cs#L34\r\nor does this do something different?\r\nCould we add it as a math utility if it might be useful elsewhere as well?'
6870,360585671,"b'I plan to do this in a follow up PR. To make it shared I want to add some unit tests, so I was waiting to do that in follow up PR to keep this from getting too complex.'"
6870,360587137,"b'Yes! I was planning to do that in a follow up PR. If I make it a public utility, I would need to add unit tests. Wanted to keep this PR scoped, and then in follow up PR add unit tests. Created #6950 to track the work.'"
6870,360587365,b'Sounds good!'
6870,360587628,"b""Maybe, however given that the current approach is tested and known to meet performance requirements, I'd prefer to wait for a follow up PR. I would need to re-test the change, and am not sure there would be a huge benefit (the code is not too complex). I made a comment to consider that approach in the future."""
6977,362972318,"b""```suggestion\r\n            /// Utilizes a cache to test if this collider has been seen before and returns current frame's calculated result.\r\n```"""
4526,287345264,b'please add some documentation to this class '
4899,293970242,"b""Can update be called when the app isn't playing?"""
4899,293970364,"b""Do you know if there's a reason all the MonoBehaviour methods are `public` in this class?"""
4899,294011212,"b""I don't. I'd prefer if they were private."""
4899,294011296,b'When a class uses the ExecuteAlways attribute Update can get called.'
4899,294424749,"b""This class doesn't appear to have that attribute though"""
4899,294444013,"b'My mistake, thanks.'"
4899,298790856,"b""This didnt' have execute in edit mode, why did you add ExecuteAlways here?"""
4899,298790874,"b""Why do you need this check here? I don't see why sphere pointer needs to have executealwaysattribute, and therefore why it needs this check."""
4899,299103958,b'To ensure OnEnable / CheckInitialization is called in edit mode. This is a substitute for OnValidate.'
4899,299104012,"b""This class now uses ExecuteAlways so OnEnable is called in edit mode. Update also gets called, but because it executes more than initialization logic we exit early if we aren't in play mode."""
3584,263512996,"b'Seems like it might be good to keep this line, to prevent additional input while the teleport movement / animation is happening. Were you seeing it cause issues?\r\n\r\n https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/007187adfabe7c548055986c0f5bee1ba9a8e035/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/TeleportPointer.cs#L254'"
3584,263513622,b'Nevermind! I see now you removed it because `BaseControllerPointer` has an identical block of code.'
8399,478697901,b'i believe you will need to update the sceneObjects dictionary\r\n\r\n```\r\nsceneObjects[saso.Guid] = saso;\r\n```'
8399,478702688,b'small nit: i would move that line above the send'
8403,478742273,b'nit: please add { } around the single line ifs'
8402,479448952,"b'this was intended, yes :)'"
8488,485260163,"b""it's back"""
8488,485268366,b'i do not believe so... i will remove them'
8593,492909633,b'is this used? i dont see anything obvious in the diff'
8645,493885609,b'added.'
8645,493886032,"b'i will double check, but i believe the recent commit has resolved this concern.'"
8645,493887152,"b'In fact, i tested this on a project without xrsdk enabled and not only did the check box not appear, it also did not reproduce the bug.'"
8645,493887672,b'or are you saying we may still need the checkbox for Android / iOS?'
8658,493972402,b'I do not believe this is a change. The error does not always occur. It appears to be somehow based on the SDK version selected...'
8666,494632467,b'i can do that'
8666,494632993,b'thanks folks! I will make the change now'
8666,494633820,b'both done!'
8668,494640322,"b""nice catch.... i'll fix the guid"""
8668,494670326,b'fixed by appending MRTK'
8671,495092052,b'Do we want to expand the comment re: what may not work?'
8675,495169614,"b'```suggestion\r\nNote that elastics will continue simulating once manipulation ends (through the elastics manager update loop). To block the behavior, elastics auto update [EnableElasticsUpdate](xref:Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager.EnableElasticsUpdate) can be set to false.\r\n```'"
8675,495170018,"b""```suggestion\r\nBy default, the elastics manager component, when added to a game object, won't have elastics enabled for any transforms type.\r\n```"""
8675,495170451,"b""```suggestion\r\nThe elastics manager inspector will indicate whether a configuration is shared or inlined as part of the current instance by showing a message in the property inspector. In addition, shared instances won't be editable directly in the elastics manager property window itself, but instead the asset it's linking to has to be directly modfied to avoid any accidental changes on shared configurations.\r\n```"""
8675,495170589,"b'```suggestion\r\nCurrently, elastics manager offers configuration objects options for the following transform types, each of them represented by a [elastic configuration object](#elastic-configuration-object):\r\n```'"
8682,498572125,"b'Just want to make sure.... the intent here is to force the trigger, correct?'"
8761,500435901,b'This line should be removed as Foundation depends upon StandardAssets.\r\n\r\nI will be moving the file(s) at issue from Foundation into StandardAssets in a PR back to your branch.'
8753,500474948,b'all of the profiles or just this one? the reason i kept the changes was due to these being immutable when installed'
8753,500475787,"b'oh! just the Included: 1, i presume'"
8753,500475994,b'and the build index....\r\n'
8753,500486887,b'fixed'
8753,500536503,b'i have not noticed any slowdown. doing this here also ensures that the inspector does not need to be closed and reopened for the check to be performed.'
8753,500538872,"b'in that case, i can try changing that :)'"
8764,500602549,"b'1.4.1 is not provided by the package manager in Unity 2019.4. since we only provide UPM packages when using 2019.4 and newer, it feels prudent to specify a version that is available via the UPM interface. 2.1.1 is the latest verified version of the TMP package for 2019.'"
8764,500602794,b'![image](https://user-images.githubusercontent.com/13281406/95261343-15379e00-07df-11eb-8571-0c5cdf8b5f30.png)\r\n'
8753,500637065,b'There is an existing documentation link as part of the inspector :) '
8753,500637463,b'agreed. i was thinking that as i diverged this one a bit (it is more hard coded than the others)'
8753,500646562,b'i set breakpoints and am NOT getting any repeat calls into OnEnable after deleting the files (from the command line) or re-entering the profile (switch to a different inspector and/or a different object)'
8753,502034954,b'Sure'
8753,502035386,b'was matching the existing private static string variables... i am happy to change all of them'
8773,502099815,b'done'
8773,502100124,b'let me look into that one'
8753,502117126,"b""looks like that's a good fix... thanks!"""
8773,502121667,"b""So we DO have two copies of this model in the tree.... \r\n\r\nSDK\\Features\\UX\\Prefabs\\ProgressIndicators\\ProgressIndicatorRotatingObject.prefab accesses it from the foundation pacakge.\r\n\r\nI'll consolidate the refs"""
8773,502127908,b'fixed. updated the refs in the ET scene to use the consolidated files.'
8773,502613868,"b'thanks,. no changes to the material were intended. i will fix that'"
8773,502617063,b'@MaxWang-MS fixed! nice catch'
8777,502689144,b'most likely. looks like we missed that in the other PR'
8777,502689273,b'not easily with the packaging process.... i will confirm that our unitypackage files do the right thing'
8777,502689335,b'we could'
8777,502728177,b'fixed by #8780 '
8777,502728183,b'fixed by #8780 '
8777,502728196,b'fixed by #8780 '
8786,503455430,b'The other packages are governed by .npmignore files. They will get picked up automatically'
8786,503455657,b'good thought.... i suppose we should just check the files in to each package root.'
8786,503580473,b'this looks like it got missed from a different PR? this is the current location for the files.'
8786,503580562,"b""maybe it's GH being confused?"""
8786,503580738,"b""i'll do something like that"""
8786,503584446,"b'That is odd... It _is_ the correct path, however.'"
8786,503584581,"b'provided that nothing else changed in the profile (index, order, etc). this should be what we want.'"
8786,503594058,b'done'
8786,504113409,b'caught it'
8786,504113554,b'fixing'
8804,505720784,b'Thanks for pointing that out. Missed it :)'
8804,505721005,b'that was a mistake on my part based on some testing i was doing.'
8804,505721462,b'that is why i took this route.'
8804,505721518,b'will fix. thx'
8804,505751993,b'> We could also do it when this menu item is invoked?\r\n\r\nIt shouldnt actually be needed. The copy happens automatically.'
8804,505753518,b'i need to learn to type that word :)'
8804,505757325,"b'in fact, we _have_ to do this on import because the shader is otherwise unavailable to Unity (being in a folder called ""Shaders~"")'"
8787,505900726,b'should we verify that inputModule is not null here?'
8805,505933322,"b'they are small fixes, like the two sample updates. i think we are fine without them.\r\n\r\nthey _will_ show up in the changelog (via the link contained in that file)'"
8804,505977527,"b""I'll look into that in a bit more detail,."""
8804,505977660,"b'you are right, i will change that. thx!'"
8804,505979548,b'need to confirm the location of the function and whether or not it is safe to move to a new assembly'
8804,506014660,b'i currently have an implementation using AssetDatabase.GUIDToAssetPath(sentinel) do you have a preference?\r\n'
8804,506652098,"b'good thought. the editor may not be able to find the file since unpacked, it will be in a ~ folder'"
8804,506779778,b'added support for embedded package having a Shaders~ folder instead of Shaders'
8804,507886259,"b'We could. I picked a MRTK/Shaders to avoid long path issues. The generated folder was left as-is in 2,4 to avoid possible compat and source control issues.'"
8859,514630543,b'why the casing change?'
8906,518292860,b'the thought was to ensure that derived class initialization succeeds before the base class sets the IsInitialized flag. happy to move it back.'
8906,518293070,b'missed that one. i would love to hear your thoughts on the earlier comment.'
8906,518293616,b'the thought here was to disallow because Destroy implies that the object is going away. I could1 100% be wrong here.'
8906,518294827,b'interesting point. any thoughts on how to make it more robust?'
8906,518332468,"b'upon further review, removed the check'"
8906,518410339,b'revisited these changes.'
8906,518410581,b'implemented the backing bool as a nullable. added an assert to check for null'
8906,518449091,b'yep. just found that and am pushing a fix now.'
8906,518449320,"b'i am fine calling base.Initialize here. setting the bool was to avoid having the pattern flipped (base first, vs base last)'"
8906,518449576,b'essentially the same reason that isinitialized is being set directly. 100% happy to switch this to a call to the base class'
8906,518468303,"b'updated to use base.Initialize and added comments when it was ""out of place""'"
8906,518468333,"b'updated to use base.Enable and added comments when it was ""out of place""'"
8906,519019939,b'thanks for pointing that out. it was moved in error.'
8906,519020654,"b'good catch, looks to have been added by visual studio. i will remove\r\n\r\n'"
8923,521735280,"b'Wherever possible, we should strive to maintain the current behavior as the default so we do not break customer applications when they update.\r\n\r\nIf a non-default setting is optimal, we should document the setting, what makes it preferable and why. When we update our major version, we can change the behavior without fear.'"
8946,524468559,b'good thought!'
8945,524542783,"b'it is commented temporarily, pending work being done as part of #8944 '"
8945,524542951,"b""will fix the extra 'v'"""
8945,524544066,b'added'
8945,524544240,"b""fixed the 'v', added comment re: #8944"""
8945,525519685,b'i was hitting trouble returning a hashtable.\r\n\r\nhappy to try again\r\n'
8945,525568537,b'looks like i was just doing something wrong before.... updating now'
8945,525642118,b'fixed'
8938,526262331,b'I might have missed this in the review.... where does this int id get generated? is it related in any way to the guid?'
5,58743546,b'Destroy vs DestroyImmediate perhaps?\n'
5,58743925,b'Could you also please add a test in Tests folder? That really helps with avoiding regressions when others change code. Also a good way to show usage.\n'
12,60152691,b'NIT: Please use similar naming convention as in GestureManager.cs.\noldHitObject to be oldFocusedObject\ncurrentHitObject to focusedObject\n'
12,60152791,b'Please follow existing brace pattern:\n\nif(condition)\n{\n    // write code\n}\n'
12,60152800,b'Please follow existing brace pattern:\n\nif(condition)\n{\n // write code\n}\n'
20,61009027,b'Please add another commit which will fix converting Tabs to spaces in all the shaders.\n'
21,61498533,b'Fixed. Thanks for catching this.\n'
21,61498760,b'Fixed.\n'
31,62940614,b'Consider adding a comment for the Test you added\n'
31,62942337,b'Tap gesture\n'
31,62942445,b'... performs a Tap gesture.\n'
31,62942528,b'What if SpatialMappingManager is null?\n'
35,63130357,b'Please add a summary comment to this function.\n'
37,63130433,"b'Like the idea, but please put this into its own function for reusability.\n'"
46,63957611,b'Looks like you are reverting fixes made by Kurtis. Please update your fork and issue a new commit.\n'
46,63959362,b'I believe this can now be replaced with a bool instead of the int as it no longer used?\n\nbool first = true;\n\nAnd then inside the loop:\nif(first)\n{\n    first = false;\n    // Perform actions\n}\n'
46,63959631,b'.Last is good I guess as its faster than .Last() which can be O(n) for some collections.\n'
47,63960933,b'What is HuP?\n'
47,63960988,b'Perhaps clarifying in the summary comment that its the MainCamera object.\n'
47,63961233,b'Do we need comments around the enum and public floats? ToolTips?\n'
47,63961493,b'Is this function trying to smooth mouse input?\n'
47,63961584,b'Perhaps refactor this into a new class in the Utilities folder called DLLImports?\n'
51,64933504,b'HoloLens is actually Windows Holographic as the SDK right?\n'
52,65415977,"b'Consider naming this ""App"" since that\'s what is most common in all the Holographic Academy tutorials.\n'"
52,65416370,b'Perhaps a struct or class with properties for these values?\nOne called BuildSettings buildSettingsOld another buildSettingsUniversal?\n'
52,65416586,"b'How are you setting the Platform to be ""Windows Store"". Sorry if I missed that somewhere.\n'"
52,65416726,b'What if there are multiple scenes in a project? That is not uncommon.\n'
52,65416934,b'Will it be useful to have a log file with the output dump?\n'
59,66656768,"b'Should this be something like, Make sure the asset is not null in the editor?\n'"
69,68141762,"b""Can you not do this already with OnGazeEnter and OnGazeExit?\nI don't see too much benefit of this in the generic class. You could write your own MessageGazeManager since this is a partial class and add this function to your class. \n"""
69,68144203,b'Recommend making private GameObject focusedGameObject to a public read only property. Handle custom messages in your class.\n'
69,68144638,"b""If you make the focusedObject public:\n1. Any other class can also use it for hands / gestures or voice. They can do whatever they choose to do with it. \n2. They also don't need to depend on SendMessage VS SendMessageUpwards or other variants.\n3. They could use it a more polymorphic way instead of this message way.\n"""
69,68149941,"b'Sorry to harp on this.\nFeels like an overkill to have another script attached onto my game object to do something as simple as GazeManager.Instance.FocusedGameObject.SendMessage(""FooBar"");\n\nI vote not having this script at all. And your change simply make the change to make focusedGameObject public.\n\n@jwittner and @keveleigh please weigh in on your preference.\n'"
69,68427809,"b""@jwittner @dbouianov looks like a few things got missed in code review?\nPlease update this file to it's original settings.\n"""
69,68428005,b'Also these files should not have been checked in.\nAssets/HoloToolkit/Input/Models/Cursor/cursor_hand_ready.fbm/templates.meta  \nAssets/HoloToolkit/Input/Models/Cursor/cursor_ready.fbm/templates.meta \n'
69,68428336,b'Why were so many prefabs added? How do they differ? Do we really need these?\n'
72,68428495,"b""Please don't check in updates to templates.meta\n"""
70,68428827,b'Would a prefab help with these preset?\n'
72,68454653,"b""Could you please update the ReadMe.md on what this prefab is for?\nRight now I'm not sure what this does.\n"""
72,68455364,b'Technically I can achieve the same functionality with just GazeManager.cs.\nWhat are we providing extra with this feature and FocusedObjectMessageSender?\n'
72,68455734,b'Does this need to be public?\n'
72,68455998,b'Please revert this file. \nYou are attempting to check in your Editor build settings to the entire project.\n'
72,68456035,b'Please revert this file.\n'
72,68457744,"b""I guess clarifying here that this selection happens with a voice command Vs an air-tap gesture would be beneficial.\n1. Is that true? \n2. Should this work in conjunction with air-tap?\n3. If you have air-tap wired up then just saying 'Select' also triggers the same action.\n"""
72,68459550,b'Yeah if multiple can trigger then then showing both examples would be nice.\nOr stating that in the class description and readme.\n'
72,68459704,"b""I agree. It's a nice idea but don't think we need it really :)\n"""
72,68459807,b'I like that idea. B20 is the latest.\n'
72,68460436,b'I totally support both types of changes. Just want to make sure any ambiguity is resolved whether through comments and tests or not having that code.\n\nI suppose the reason this is advantageous is you can send any custom message to gaze at objects and not just OnGazeEnter and OnGazeLeave.\n'
72,68461669,"b'With this file, were you trying to demonstrate that this works with dynamically created prefab instances?\n'"
72,68462299,b'Makes sense. Please do update the readme with such info.\n'
72,68605730,"b""Just a comment to clarify this:\n\n> > If the desire is to keep HoloToolkit simple, I would suggest adding a separate Examples/Test folder under the root HoloToolkit folder instead of keeping Test folders alongside each module.\n\nWe started like this but then we had cross folder dependencies which was not fun. This way developers can completely delete the folder feature areas that they don't rely on.\n"""
83,69351162,b'Trying to understand the issue: Is it that the class is not in the HoloToolkit.Unity namespace?\n'
87,69351852,b'As long as we specify in the ReadMe or Info to remind people to keep their device connected.\n'
87,69352089,b'Giving time for the query to execute?\n'
87,69355765,b'Could you please update the ReadMe.md with information about this component?\n'
83,69597243,b'I like this. Having both enum and class inside the HoloToolkit.Unity for better discoverability.\n'
87,69598223,"b""We recommend and follow general [C# coding conventions](https://msdn.microsoft.com/en-us/library/ff926074.aspx). Also match the style in files for sure.\n\nPersonally, I can do without the 'k' prefix :)\n"""
95,69602488,"b'Please match comments formatting with other comments. Also perhaps a ToolTip for the fields so devs know they can change these mapping in ProjectSettings->Input if they want to.\n\nElse, looks like a good change.\n'"
96,69628246,"b'Ben, these are big breaking changes to functionalities being used by many.\n\nPlease revert your changes to GazeManager.cs and add a new file instead.\nPerhaps something like: GazeManagerStabilizer.cs to better use with your functionality.\n'"
96,69628292,b'What is GGVInputModule?\n'
96,69628627,b'Since this is a partial class you can choose to reuse the variables being exposed in GazeManager.cs already.\n'
99,69936708,"b""Please follow variable naming convention in this file. I don't believe variables start with _.\nExample: stripTagsRegex\n"""
99,69937178,b'Just ensure you updated your forked branch from Master.\nUpdate the code review if you see any pending merges there.\n'
83,69939446,b'This happened because you updated your fork with Master? :)\n\nThe pull request should have only updated itself in the event that you had to check in those changes to your branch. Which should not have happened.\n\nI suspect we might have to close this pull and open a new one with only your updates.\n\n@jwittner any suggestions?\n'
83,69940729,b'I will merge and see if there are any conflicts. I just am not sure if your commit should have shown all the other files everyone else changed.\n'
96,69999068,"b""I still don't get why this is being removed from GazeManager?\n\nYou can keep this in. The other script can check if the SetStabilizationPlane bool is enabled. If so, you can disable it.\n"""
96,69999171,"b'Or, you can check if SetStabilizationPlane bool is checked and programmatically add your script from GazeManager.\n'"
96,69999482,b'Could you please add summary descriptions for these useful functions?\n'
96,69999747,b'@jwittner any preference if this test scene should be in Utilities\\Tests vs Input\\Tests?\n'
96,70322508,b'StyleCop recommendation is PascalCased for const.\n'
117,70724751,b'Any specific reason for 1024 and not just new SB( )?\nPlease make it a const with a PascalCased name.\n'
117,70724879,b'NIT: These DllImports might be more readable with the function declaration being in a new line. For example:\n[DllImport(....)]\npublic static void FuncName( )\n'
117,70725223,b'Perhaps a separate issue tracking this TODO?\n'
117,70725263,"b'This class seems like a Test class?\n\nIf so, then please move this code from Scripts into Tests folder.\n'"
117,70725487,"b'As always, please do update the README if it does not already have this :)\n'"
118,70726648,"b'Please update the description for the Shader as well. Specially, the difference between Occlusion and WindowOcclusion.\n\nhttps://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/SpatialMapping/Shaders/Occlusion.shader \n'"
118,70726814,"b'Agreed, thanks. I recalled and then saw your comment.\n'"
130,71783745,b'As @riverar pointed out these files are all MIT licensed. Since this repository is under the Microsoft maintainers we have this branding.\n'
134,72102193,"b'Instead of this, can we use the Main Camera prefab which is available in the HoloToolkit? That way there is one prefab with all HoloLens recommended settings.\n\nAnyone else have any thoughts on this?\n'"
134,72102381,b'I am also not sure if we should be scanning for multiple cameras as only those developers who know the specifics really well end up using multiple cameras. I would recommend sticking to the main camera prefab from HoloToolkit Utilities prefab.\n'
134,73005672,"b""Exactly, it's not a black box that is why everything is documented [here ](https://developer.microsoft.com/en-us/windows/holographic/camera_in_unity)which also points to the HoloToolkit Main Camera prefab. We should get developers in the flow of the docs and the toolkit. I am sure you can help with that :)\n"""
134,73006363,b'I do find this useful in general development. Just another thought :) And Adam is right the tutorials do recommend this to make development easier.\n'
140,73007065,"b""Adding comments here explaining the math and 'why' for folks will make this so much better :)\n"""
141,73007742,b'What is arean exactly? Sorry I was unsure if this was a typo or not.\n'
141,73008420,b'NIT: Typo: air-tap\n'
141,73008553,b'NIT: Remove Of cause\n'
141,73008604,b'Do you need to gaze at a line to remove it?\n'
141,73009260,"b""There seems to be some localized character at the end of the Tooltip. Can you please fix that for en-us so it's more readable?\n"""
141,73009814,b'Please follow consistent coding guides. \nif (condition)\n{\n    // some code\n}\nelse\n{\n    // some code\n}\n'
141,73011730,b'Please follow curly braces pattern.\n'
141,73012086,b'Did you mean to inherit from IClosable? Perhaps a better name may be? IPolygonClose or something?\n'
141,73012120,b'NIT: extra lines. Please remove.\n'
141,73012259,b'Please follow curly braces pattern for if else.\n'
141,73012343,b'Define the 0.005f into private const ?\n'
141,73012436,b'I suspect this is what showed up as the character in your video :) You locale might be set different :)\n'
141,73012710,b'Please do go through all your files and remove extra lines.\n'
141,73012811,b'Please have these localized to en-us.\n'
141,73013045,b'Or perhaps this character does not show up correctly?\n'
145,73072038,b'I also wonder if you make this into an actual event that people can sign up for?\n'
159,73903682,b'Did the default change for the entry? I think the previous default was Primary Client?\n'
159,73905755,"b""That's right. Thanks for reminding me Alex.\n"""
170,74996529,"b""Do you want to just return early from these if's instead of a 3rd check?\n"""
170,74996658,b'Please update the README.md on how to use the scene. How to wire up keywords etc.\n'
170,74996866,b'Missing copyright headers in *.cs files.\n'
173,74997292,b'NIT: Please convert these to ToolTip.\nI have heard feedback from folks that tool tips work better than summary comments in editor. \n'
170,75042715,b'No worries on copyrights then. Updating readme though is a must have :)\n'
175,75045711,"b""General NIT: It's nice to have curly braces around the if's to future proof and be consistent.\n"""
175,75045719,"b""General NIT: It's nice to have curly braces around the if's to future proof and be consistent.\n"""
177,75350964,b'NIT: discoveryClientListener\n'
177,75351051,b'NIT: Convert comment to ToolTip please for better in editor usage.\n'
177,75351156,b'private variables should be: pingIntervalCurrent cased.\n'
177,75351191,b'isTryingToFindServer\n'
180,75352347,b'NIT: Please follow the curly brace patter to future proof code.\nif(condition)\n{\n}\nelse\n{\n}\n'
173,75714868,b'Does /// mean they are commented out?\nWill this mean the ToolTip does not show up in the Unity editor when you hover over the field?\n'
187,76289354,"b'NIT: I wonder if you can get away with public string SpaceQueryDescription { get; set; }\nUnless you really need objectPlacementDescription = """";\n'"
187,76303595,"b'Jeff, is this actually working? Having ProjectSettings inside Assets folder?\n\nDo you need your own Project Settings? Should this not just live in it own folder as a Scene in the same project?\n'"
187,76303780,b'HoloToolkit-Examples?\n'
187,76303892,b'It would be good to list what the addon actually does somewhere. \n'
187,76304417,b'What if rayResult was actually a failure due to missing script or null?\n'
187,76639702,"b""As Jeff is being consistent in his naming, let's keep his convention here.\n"""
187,76640400,"b""None of those examples has a separate project settings so let's be consistent till we can :) I would recommend removing the project settings folder ... feel free to use different folders in there to organize the files. This will also keep things cleaner.\n"""
191,76689624,"b""The Unity documentation does not say anything about that for DestroyImmediate but I thought it made more sense to remove the event handler when it's actually located.\n"""
191,76692977,b'Since this code is not tied to any events technically yes it possible if the user is quick enough. But I have never measured those ticks to know for sure. Do you have any recommendations?\n'
191,76693954,"b'Someone may change this code and not call CreateAnchor() in the AnchorStoreReady function. Which means you are starting your components without adding anchors and only adding them when placement is done. So ""if any"" just means that a developer may not have an anchor attached to the object previously but we will attempt to destroy it anyway.\n\nDestroyImmediate(null) works fine. Internal code specifics are hard to say from their docs but I would imagine it\'s a safe assumption to make that they do. At least I don\'t see any null reference exceptions :)\n'"
191,76694322,"b'Sure thing. Will add that. \nHowever, if you were trying to solve some race condition between anchor store being ready and user tapping that wont affect that. The likelihood is low though from my observations.\n'"
196,77292378,b'Perhaps some // comment on why we are not using the same gesture recognizer as the tap one?\n'
196,77292437,b'I go back and forth on this but something to think about: Does this hand tracking logic make more sense in HandsManager.cs?\nPros: All InteractionManager events go in HandsManager.cs. This script also helps with hand detected affordance.\nCons: Now there is another script dependency. \n\nI feel the pros outweigh the cons in this case. Keeps GestureManager simple.\n'
196,77292560,b'NIT: if(!pressedHands.Contains(state.source.id))\nIn the off chance.\n'
196,77292588,b'NIT: if(pressedHands.Contains(state.source.id))\nIn the off chance.\n'
196,77292716,b'<3 this idea.\n'
196,77292750,b'Should you add the component if one does not exist?\n'
196,77292814,b'Should this be public?\n'
196,77943908,b'@micthom-msft I totally understand why we cache the current hand. We do something very similar in the Holograms 211 Gesture class. I was only proposing to keep that logic more in the HandsManager but I am ok to leave this as is for now. I will think more on this and will issue a new PR if I find it simpler to move it elsewhere.\n\n@jwittner we need this association as the user could press another hand while in the manipulation gesture but we will ignore that hand and only bind ourselves to the hand which started the gesture.\n'
209,78399855,b'Does this need to be a public addition? Please feel free to revert.\n'
209,78400000,"b""Also please revert templates.meta. You don't need any changes in those.\n"""
209,78400411,"b""Please revert this file. Project level build settings don't need this update.\n"""
205,78402909,b'Perhaps you add a check if this capability is missing? And LogError?\n'
205,78403039,b'Please consistently use the:\nif(condition)\n{\n    // braces pattern\n}\nelse\n{\n}\n'
205,78403167,b'Perhaps a private member in the class?\n'
205,78403322,b'I would try to use some other word than Manipulated :) Since that is a gesture name.\n'
205,78785598,b'Yeah I looked too and no luck.\n'
179,79008868,b'Should this be public and others being able to query the status?\n'
179,79009121,"b""Recommend using TextMesh instead. It's cheaper than Text which has canvas renderer stuff. I learned about this very recently and it makes atleast 5 fps difference :)\n"""
179,79009276,b'NIT: \nif(condition)\n{\n    // code\n}\n'
179,79009334,b'NIT: if curly brace pattern.\n'
179,79009477,b'It would be nice to make this a public field so users can change it based on their preferences.\n'
179,79009564,"b""Even these could be public fields set to colors you have for now. I have known people to be picky about these color feedback choices :) So let's let them decide.\n"""
179,79210942,b'@alexdrenea yeah I have certainly changed colors of the font on the TextMesh. \nWill share a screenshot with you soon as I get a chance.\n'
179,79211075,b'Haha NIT is short for nitpicking :) basically a recommendation style comment.\nhttp://www.dictionary.com/browse/nitpicking \n'
179,79211282,"b""I'll try to paste an example for this. I might have something similar but not on a TextMesh.\n"""
221,79680294,b'NIT: This class does not follow the naming convention typically followed for public fields.\n\npublic TextToSpeechVoice Voice;\n'
221,79680428,b'True for other fields as well.\n'
227,80282793,"b""templates.meta files should be reverted. They don't need to be updated.\n"""
227,80283385,"b""So we don't break functionality for everyone:\n\nOption 1:  How about we keep the SendMessage code but behind a Boolean value?\nWe can then announce a transition breaking change plan and give people time to move to the delegate pattern.\nAfter that time has elapsed, we can go in and remove the SendMessage pattern.\nThe Boolean value was default to false to force developers to think about this.\n\nOption 2: We create a new class which uses the base partial class GazeManager and only changes the UpdateRaycast function to use delegates.\n\nThoughts? I am certainly open to other ideas to support both functionality while we transition.\n"""
227,80284112,"b""NIT: Personally, not a fan of single syllable parameter names. Makes it hard to find and replace in the future. They are ok in loops :-) If you feel it's worth while, please consider calling it say focuedObject may be?\n"""
227,80284630,b'This function name makes it a little ambiguous. SendOnTap implies to me sending some message or something. \nI see the motivation that you cant have the function name and event handler with the same name.\nPerhaps TapHandler or something?\n'
227,80296567,b'Very vague description. Please make it more specific.\nI intend to use Doxygen to generate API docs for the toolkit.\n'
227,80296743,"b'Recommend instead of ""string"" something like ""replace with your keyword"".\n'"
227,80297122,b'This removes the ability to hook keyword functions from the editor.\n@keveleigh thoughts?\n'
227,80297270,"b""This feels like a test script showing usage. Any reasons for this it's in the Scripts folder?\n"""
227,80298544,"b'I encourage not using this pattern.\n1. renderer.material.color will make a copy of the material in memory increasing memory and draw calls\n2. renderer.sharedmaterial.color is better than 1 but will change all objects that use that material\n3. Best is you use a shader on the material which exposes a highlight color and use this script to change that color. To reference this code, please look at the Holograms 210 Gaze academy code for highlighting objects. It uses a custom shader for this which is more performant than 1 and 2.\n'"
227,80298636,b'Again this script feels like a test scene script?\n'
227,80298704,b'Please see material comments above.\n'
227,80299114,b'Reason for not initializing placing?\n'
240,80594486,b'NIT: Worth adding a null check here and logging a Debug.LogError in case developer missed dragging the WorldAnchorManager somewhere.\n'
240,80594635,b'NIT: Public properties are PascalCased. \ngameObjectToAnchor should be GameObjectToAnchor.\n'
240,80594672,b'NIT: AnchorName instead of anchorName.\n'
240,80594702,b'NIT: AnchorStore instead of anchorStore :)\n'
240,80594723,b'Should this be private set; ?\n'
240,80595172,b'NIT: Boo anchorName here instead of AnchorName :)\n'
241,80596366,"b'Hmm so you only need these for air tap? What about other gestures?\nI believe the right place to add this might be in the HandsManager, where we detect FingerPressed and FingerReleased. They seem more generic. That will be agnostic to GR then.\n\nWhat do you think?\n'"
240,80736260,b'This seems wrong. Why are we removing TapToPlace from the gameobject? Did I read this wrong?\n'
244,81180642,b'NIT: your gaze has entered.\n'
244,81180793,"b""NIT: GameObject's collider.\n"""
244,81180817,"b""NIT: GameObject's collider.\n"""
244,81180873,b'NIT: your gaze has entered.\n'
244,81180937,"b""NIT: GameObject's collider.\n"""
244,81185879,b'I have concerns here doing a GetComponent every Update frame for 2 game objects. Can we make some measurements perhaps? With and without?\n'
244,81186069,b'Do we like the fact that we are supporting 3 different ways of doing this? Feels confusing to me.\nPerhaps the default GazeManager supports only one way and other classes derived from partial support the other mechanisms.\n'
244,81186278,"b'Since we are touching this, I feel we should not get rid of the event args if people want to key off of number of taps etc.\n'"
244,81186467,b'This script is something anyone will have to edit to use.\nWhy dont we just introduce a concept of InteractibleManager much like Gaze 210 then?\n'
244,81186509,b'Same comment as above.\n'
245,81187587,b'Love this idea!\n'
245,81187774,b'NIT: private variables are recommended to start with small case. camelCased.\nverts\ntris\n\nPublic variables and properties are PascalCased.\n'
245,81187848,b'Should it be a property?\n'
248,81190162,b'Lets call this gazeManager or gazeManagerInstance to be consistent with other classes.\n'
248,81190327,b'Debug.LogError(missing GazeManager in the scene)\n'
248,81191760,b'I see your motivation and concern. But this is a very common mistake.\n'
244,81192131,b'I think we should.\n'
250,81840837,b'Could you please help understand why the additional check is needed? Either way I would expect to tap right?\n'
250,81841488,b'Correct but you already set the FocusedObject = newFocusedObject on line 272 and started capturing new gestures right?\n'
250,81868582,"b'If I understand this correctly, you will only accept a tap if I looked away and saw the object again? What if I wanted to tap on the same object for some other interaction state to show up?\n'"
257,81869196,b'Should this be a public GameObject TargetObject since people need to wire this up in Unity editor.\n'
257,81869260,"b""I'm curious at to why you chose to make these private instead of public?\n"""
257,81869413,b'Perhaps add this check in Start() and do a Debug.LogError\n'
257,81869924,b'Is this truly an example of a unit test scene? If unit test then it should reside in Utilities\\Tests folder.\n'
260,81874039,b'NIT: float curvedRatio; //camelCased.\n'
260,81874146,b'NIT: If you expect this to be set in the Inspector then please add a ToolTip().\n'
260,81874288,b'Function is never called from anywhere? Sorry if I missed something.\n'
250,82091894,b'I agree it should stay the way it was.\n'
250,82092058,b'This worked for me in the editor so not sure why we need a change?\n'
250,82092158,b'What other source have you actually tested with to validate these changes?\nI just want us to be deliberate when adding complexity to these classes.\n'
250,82092201,b'Example clicker?\n'
250,82092482,"b""Is this HashSet really tracking a state? Feels like it's tracking a source?\n"""
250,82092973,b'So we do this here and in GestureManager?\n'
250,82093011,b'I do like and think these events fit better in this class.\n'
250,82093101,b'Could you please put comments on what this check is achieving?\n'
266,83062351,b'True. Nothing I saw in this change seemed Linq related.\n'
205,83063176,b'Sorry for the delayed response. Is this a Unit test type scene?\nIf so then please move it under the Tests folder under Input.\n'
205,83898465,"b""I'll merge this in soon as this is resolved on. Thank you!\n"""
250,83901911,b'Should this if block live outside of the source.kind == Controller check? Should it be called for normal finger pressed?\n'
250,83902246,b'Or I wonder if the source.kind check should happen inside the OnManipulation events? Sorry if I sound confused!\n'
250,83911080,b'NIT: public fields should be PascalCased.\n'
250,83911268,b'@micthom-msft any thoughts?\n'
289,84512419,b'NIT: What if there is none? Should you add it?\nSame for SetText. What if this component never got found.\n'
289,84513698,b'Should the directory be customizable via the Inspector?\n'
289,84513886,b'Please add a summary. Also whether you expect a full path or not.\n'
289,84725413,b'Missed that. Makes sense!\n'
289,84725655,b'Each component exposes its own fields. So whichever component the developer needs to drag onto their Managers object or SpatialMapping prefab. That would be a good place.\n'
306,84728181,b'Should this be removing the event handler in OnDestroy?\n'
306,84728218,b'Nice :)\n'
306,84728383,b'Remove these lines then?\n'
306,85785224,b'I am asking for it to be -= in the OnDestroy :)\n'
321,86912535,"b""Hmm given that the signatures are same I would have expected ApplyEffect to perhaps return the effect GO so I don't have to do a GetComponent again. And that effect passed into RemoveEffect. But I guess this works too. \n"""
319,86914604,b'Sorry I should have thought of this in the interface review but just for handling a simple air tap every class with not have these two stub methods that do nothing. Thoughts?\n'
319,86914714,b'Looks like GitHub codeflow is making these values weird ? :)\n'
319,86915186,b'Missing HoloToolkit.Unity namespace?\n'
319,86915259,b'Hmm looks like it never was in the HTK.Unity namespace.\n'
319,86916073,b'IIRC only thing missing in ISourceStateHandler is SourceMoved/Updated. I could be wrong.\n'
319,86916175,b'How is this different from the one in Utilities folder? Called Main Camera.prefab?\n'
319,86916318,b'Description for ISourceState and INavigation is swapped.\n'
319,86916381,b'Incomplete sentence?\n'
319,86916497,"b""I still don't under stand why this is being removed.\n"""
319,86916611,"b""If we expect developers to be able to use these values correctly, let's put some comments on them explaining what they mean.\n"""
319,86916803,"b""I don't quite understand this state. How can I 'Interact' without a TargetedObject?\nIs this CursorOffHologram state with Hand detected?\n"""
319,86917041,b'Why do we do a complex state management logic to sign up for a simple OnFocusObjectChanged event?\n'
319,86917220,b'Goal is that component can be added to any GameObject that wants to affect the cursor state?\n'
319,86917275,b'Please move Awake() down after the variables have been declared.\n'
319,86917405,b'Sorry this class is a little unclear. What are these objects?\n'
319,86917487,"b""I still don't understand why you would remove some simple classes that work for people.\nThis is like forcing people to use one prefab and I am not a fan on that.\n"""
319,86917800,b'Sorry if I missed where you set the stabilization plane aka focus point. This is a must have.\nI would consider putting these long code blocks in functions and calling them in Update to display concepts better.\n'
319,86917833,b'Feel free to refer to the old GazeManager on how to do it.\n'
319,86917915,b'Will this guy raise the OnFocusEnter and OnFocusExit?\n'
319,86918154,"b""What's this?\n"""
319,87119747,"b""I am OK if it's fixed in a separate one. Although, do you think the up/down might make sense in ISourceState?\n"""
319,87119790,b'Agreed. Please leave as-is.\n'
319,87119920,b'This would break the documentation links on dev center since they refer to the Main Camera.prefab in HTK. Perhaps file an issue to remind us to fix dev center with this change.\n'
319,87244146,"b""> > The names are the closest approximation to what they reflect. \n\nNot sure how true this is. Seems like it's the 'Ready' state per OOBE and other verbiage correct?\n"""
319,87244514,"b""I want us to be careful with these statements. Let's have an inclusive mindset where we respect some people find value for these type of classes. I agree with the sentiment however that is a blanket argument. I will add it back if I see a need for it.\n"""
319,87283895,b'Sweet!\n'
319,87284332,b'It is not sentimental. It is ensuring you are actually helping developers with varied levels of depth along the way.\n'
319,87284558,b'Feedback is a gift :) \nIf Ready is nebulous then the OOBE experience should not be using that verbiage.\nAnyway I can see pushback on this. So please consider this non-blocking.\n'
319,87295863,"b'> > What does ""Ready"" mean when using 3DoF input from the clicker?\n\nAwesome call out indeed!\n'"
339,89843618,"b'So we are consistent with other HoloToolkit shaders, please make this:\r\n\r\nShader ""HoloToolkit/3DTextShader""'"
339,89843693,b'Or something inside the HoloToolkit drop down for ease of discovery in Unity.'
340,89844202,"b'Any reason why these are all caps? Please make them: Create, Delete.'"
340,89844670,b'Please ensure TapToPlace.cs works with your changes.'
343,89846031,"b""@pinkwerks I don't see the actual SpatialMappingTap.shader added in this pull request.\r\nCould you please add it? I can help with GitHub if needed."""
343,89846217,b'Also could you please update the README.md with the new shader and test scene?'
344,89846589,b'Are these still needed? If not then please delete.'
344,93956687,b'Please update the PR and I will merge it. Thanks!'
376,93956937,b'Please host images [here](https://github.com/Microsoft/HoloToolkit-Unity/tree/master/External/ReadMeImages).\r\nYou can create a sub-folder\xc2\xa0called Input. This system will be more manageable and transparent than an external website.'
376,93957276,b'I am not in favor of hosting packages on\xc2\xa0external websites which are not manageable easily using\xc2\xa0OSS.\r\nI would recommend hosting packages\xc2\xa0in the Externals or UnityPackages folder in the same repository.'
376,93957332,b'I would\xc2\xa0be happy to have @riverar add his updates to this repository if we deem that better.'
392,93957640,b'Hmm I was wondering why\xc2\xa0should HoloToolkit > Help menu point to Unity development overview.\r\nPerhaps to GettingStarted.md or a new page for help?\r\n'
392,93957727,"b""You could use regions here if you'd like."""
392,93957755,b'Can these all be simple get; set; ?'
392,93957989,"b""I wonder if we should respect Unity's/Microsoft's casing\xc2\xa0here like:\r\n1. Instead of Wsa to WSA\r\n2. Uwp to UWP"""
392,93958045,b'I agree explicit declaration does make the code more readable. Thanks Jared for updating!'
392,93958448,b'Have these and above strings been verified with Unity 5.5? I remember some of them changing.'
392,93958471,b'I vote for improving it :)'
392,93958566,b'Agreed this is not a HoloLens settings hence makes more sense\xc2\xa0in the other class.'
392,94505041,b'It would be\xc2\xa0great if you could point me to the PR where were said regions were unacceptable. I\xc2\xa0doubt that\xc2\xa0was the complete reason :) You can certainly\xc2\xa0use regions.'
433,94820223,"b'I\'d recommend editing this comment. This wrapper is mainly for air tap correct?\r\nAvoid using the word ""manipulation"".\xc2\xa0It\xc2\xa0could be confusing to some.'"
433,94821735,b'This change is starting both recognizers now:\r\ngestureRecognizer and navigationRecognizer.'
433,94821924,b'Not related to this change but we do lose the headRay. Do we carry that forward to the event handler?'
376,94833365,b'This still needs more thinking. For example:\r\nWhat version of the code is this package made out of? Perhaps some date etc.?\r\n'
376,94833491,"b'How about to make this PR simple, you remove all this asset package stuff, we merge it and then design it properly?'"
433,94834597,b'Well that works for a scenario when looking at the same hologram when interacting. But there are scenarios where I could look away but still be interacting with the\xc2\xa0previously gazed at\xc2\xa0hologram. Especially in manipulation like scenarios.'
455,94984492,b'I could not find any shader that was easily letting me do highlights.\xc2\xa0\r\n@dbastienMS\xc2\xa0does the new shader you are adding give me something like this?'
454,94994712,"b""Love it! Might I\xc2\xa0suggest a highlight property in here? So\xc2\xa0we can highlight a material when\xc2\xa0the user's gaze enters.\r\nI'm open to other suggestions on that but I think we should have it\xc2\xa0:)"""
392,95024420,"b'You have to init regardless like below.\xc2\xa0\r\nFor your\xc2\xa0cases I just felt there was no need for value style properties as they were not doing any calculations. \r\nBut I agree its style and non blocking.\r\n\r\nprivate Dictionary<TSetting, bool> values = new Dictionary<TSetting, bool>();\xc2\xa0\r\nOR\r\nDescriptions = new new Dictionary<TSetting, bool>();\xc2\xa0\r\n'"
459,95912526,b'How\xc2\xa0do developers use this file?'
459,96517088,b'We will hold off on merging 432 since its work in progress.'
454,96715502,"b""Let's add highlights using the emission mask using a test scene in a following PR."""
472,97685572,"b""Do you think it's better to just point the Readme to\xc2\xa0the documentation page?\r\nThis way if the main doc page gets updated,\xc2\xa0this page will not fall behind.\r\n\r\nAlso perhaps link the\xc2\xa0case study from this page?"""
484,98954480,b'This is fab :)'
485,98956054,b'This is a great update!'
492,98957494,"b""Hmm yeah finding out from\xc2\xa0Unity is there is something like ServerReady event or something akin would be nice.\r\nWill keep this PR open till you hear back.\r\n\r\nI don't think the change is bad but just want to understand more :)"""
496,99440962,"b""Why are we doing this? Just\xc2\xa0because we are unable to add the externals folder into the asset package?\r\nOne of the main reasons for\xc2\xa0making it external was they are binary files that don't compile\xc2\xa0under Assets.\r\nAdding a zip file with the same stuff does not help that cause.\r\n\r\nI think we can come up with a\xc2\xa0better solution than a zip file under Assets.\xc2\xa0\r\nJust for solving the problem of mismatching SharingServer.exe binaries problem, we could always add a check in code\xc2\xa0in the Launch Sharing Service option to check version numbers. I think that would better than the zip.\r\n\r\nWhat do you think?\r\n"""
496,99441291,"b'Perhaps print a message,\xc2\xa0please download latest sharing binaries or something akin.'"
498,99442072,b'TODO: Need to find out if having a SIL license if\xc2\xa0ok under an MIT project.'
498,99442203,b'Typo: open -> open'
496,99450998,"b""But it does mean there is another copy of this\xc2\xa0uncompilable code in the repo now right? I guess that's what I'm not sure if the best option. So when someone updates the External folder they also now need to update the zip file."""
498,101097376,b'Yes we got approval from LCA on this! WOOT!'
513,101098017,b'Typo: unpack'
513,101098266,b'I am surprised you changed it to var ;) :)'
513,101098395,b'Why are these being changed?'
547,107219300,b'Should this be a Scenes folder under Tests following the convention in other folders?'
547,107219375,"b""Utilities\\Tests\\Scenes basically. We don't want to *force* app developers to use this and hence I recommend putting this under Tests."""
708,120185159,"b'Yes please double check here. I know without this check, we could not use the updates correctly with prefabs like BasicCursor or Cursor.'"
708,120185375,"b""Is there a test scene that demonstrates this feature 'switching between a 6DoF controller's pointing ray and gaze' ? If not please consider adding it."""
708,120203787,b'Please ensure you update the TestOverrideFocusedObject test scene to show how to use it. This functionality is needed by several apps.'
708,120204165,b'Why is this deleted? This functionality is used by several academy apps. '
708,120204270,b'Must fix: What is the replacement here?'
777,127296030,b'Just thought of this to address some feedback I got from folks.\r\nCould you please add a Unity link here so people know which installer to use exactly? Thanks!'
765,127311653,b'Should these have some description?'
765,127311799,b'Oh I see it in the variable names below.'
765,127322081,b'NIT: Vector3.one'
793,128155240,b'By design?'
793,128155379,b'represent the right controller'
793,128155853,b'This giant switch case needs some comments to follow along.'
793,128155959,b'Perhaps refactor this into a function.'
793,128156207,b'Check tooltip.'
793,128156360,b'Perhaps a comment like for in editor support use diff script.'
733,128291238,b'Typo: CoRoutine'
764,128362243,b'Please add class descriptions for your new classes and update the README in the Utilities folder.'
764,128363226,"b""Without some descriptive text, it's getting hard to determine whether these classes truly belong in Utilities or your examples folder."""
793,128364716,b'Both left and right descriptions are the same?'
793,128364978,b'Can we not make this script work with overridden models in the editor? Obviously not the ones from Windows update.'
795,128365245,b'Ideal for mixed reality applications?'
793,128386966,b'Ah true. I guess even if we plugged in via USB?'
808,130161768,"b""It's worth documenting the normal route for building as well."""
808,130161830,b'File > Build Settings etc.'
808,130161955,b'This seems like one long text blob. Adding numbers / bullets will help here.'
695,130433886,b'Might be worth adding a voice command or something to bring the UI up again just in case.'
695,130434119,b'Not a fan. What was the intent here? Magic numbers tend to fall apart quickly. I understand you were estimating IP size?'
695,130966142,b'Private const at a minimum?'
820,131004155,b'I wonder if these should have been overloads vs breaking?'
820,131004683,b'Why the name change?'
820,131020033,b'SupportsPointing made sense since this promotes the point and commit interaction vs gaze and commit. Ray could be anything.\r\nThoughts?'
820,131020657,b'Basically this would break someone who is updating to the toolkit for sure. If we can help avoid that then great. Much like we did with new prefabs but still keeping old ones around kinda :)'
831,131773903,"b'I see this pattern a lot in the code. You could consider doing something like:\r\n\r\nprivate void SetButtonPositonRotation(GameObject controllerButton, Transform controllerButtonTransform)\r\n{\r\ncontrollerButton.transform.localPosition = controllerButtonTransform.localPosition;\r\nrotation blah\r\n}\r\n\r\nYou could make this even better by passing in structs/class for each button type as most are similar calls.\r\n'"
878,134046733,b'Seriously Unity? Wow! I think we have changed these with pretty much every Unity release.'
878,134047285,b'Hmm have the normalized and cumulative values gone from signature? '
874,134306705,b'Should this not new and instead caller should check for null? So hitInfo.point does not fail?'
874,134307078,b'Why are we not just deleting this class then?'
874,134308703,b'Ah right!'
874,134309227,"b""Like your approach of making it obsolete! Let's use it for now and see how it pans out."""
886,135093738,b'No idea. Will need to ask Alex Turner.'
886,135094847,"b""I had considered the changing boundary during lifetime. What I'm unsure of is, what if I change the boundary and rerun the app, I think its the same instance of the app. Regardless I've made it a public function now to recalculate boundary."""
886,135094910,b'Also it should not be an expenesive op. Its just a list of vectors.'
886,135095819,"b"">Also, boundaryBounds doesn't get reset anywhere, so it keeps getting added to each time this method is called.\r\n\r\nFor this I moved the instantiation inside the calculate call.\r\n"""
886,135096134,b'Want to ensure this will only return for immersive right? Not HoloLens?'
886,135109916,"b""There's also this which I'm not sure what to do with:\r\n\r\n```\r\npublic enum Type\r\n{\r\n    PlayArea = 0,\r\n    TrackedArea = 1\r\n}\r\n```"""
886,135144171,"b""I'm following up on all this with Microsoft and Unity developers."""
886,135903068,b'Follow up done. Please look at PR.'
883,136164365,"b""Do these match Unity's names now?"""
1373,151771906,b'Umm since you are touching these: What is the naming scheme here?\r\nAre all examples/tests under HoloToolkit.Unity.Examples? \r\nOr each area has an examples namespace under it?\r\n'
1373,151772202,b'Do we care about differentiating between UnitTests Vs actual Tests?'
1373,151775059,b'Why is this not under a fancy name now?'
1373,151797476,b'Are any of the others under .Utilities?'
1407,152133297,b'Added text.'
1407,152133505,b'Done.'
1407,152133807,b'Clarified. Thank you.\r\n\r\nWorking branch will still be open for check ins after being snap shot. The stabilization branch will only accept bug fixes at that point.'
1407,152133969,b'More than what I have currently?'
1407,153278991,"b""1. I like the idea of dropping v1 too. It was tied to older unity naming schemes which are now obsolete.\r\n\r\n2. I also like the idea of sticking close to the Unity version numbers as it reduces confusion in developers of what this name means. Instead of inventing a new scheme ourselves, let's reuse what Unity has.\r\n\r\n3. For minor release, I agree on the proposal. The x in the old one was also for that. However, we should try to avoid as many minors as we can to avoid too much package goop for developers. It's hard to keep track of Unity release and to add to it toolkit releases. My mind just exploded :)\r\n\r\nI will update the PR accordingly. Thanks for the suggestions!\r\n"""
1407,153279687,"b""1. About separating feature folders, yes they should not have a dependency on BuildAndDeploy folder for sure. They will have a dependency on Utilities though which is like our Common folder.\r\n\r\n2. For separate packages, the winning scenario is porting customers. Sometimes they don't want the brainwork of piecemeal importing the big toolkit. Instead they want simpler packages for say, motion controllers, camera rendering, spatial mapping etc. We should address this feedback. Hence I'm supportive of separate packages for different scenarios and not just feature areas. \r\nI acknowledge that these packages will be difficult to maintain manually and hence we need an automated story asap :) """
1407,153279757,b'Great suggestion. Will update.'
1415,153284310,"b""I frankly don't understand why the complicated new class for something simple like this. So I need to now implement interfaces to handle GamePad which previously just worked?\r\n"""
1419,153285132,"b""When are we going to stop adding these checks for Unity versions toolkit branch does not support?\r\nI'm not a fan of changes like these which force people to update scripts for no benefit :("""
1415,153300955,b'Then GamepadInput.cs cannot be marked obsolete. We have to keep the simple implementation working for everyone. '
1339,154231392,b'Why not delete public GameObject as well?'
1339,154231904,b'Pls add summary. What does this class actually do?'
1339,154232015,b'These made the code hard to read but okay.'
1339,154232469,b'These I think will cause more confusion than solve.\r\nPerhaps more text around how or when to tweak them would be good.'
1339,154738276,b'MR250 still sets it as full scale  for immersive.'
1436,154746068,"b""Where is a use case for this? If you have down and up you don't need press.\r\n"""
1436,154746167,b'I propose removing this addition to the interface.'
1453,154751917,b'What does state tracking mean for this base?'
1453,154755980,b'Class needs:\r\n\r\n1. Copyright headers\r\n2. Summary description\r\n3. Public variable summary or Tooltips if inspector enabled.'
1453,154756407,"b""Looks like this class needs to be in Input folder? Since it's doing a bunch of Raycast stuff?"""
1453,154756771,b'I almost feel these 2 functions RaycastFromHead and SphereCastFromHead belong in the core GazeManager? What say?\r\nThen CameraMotionInfo is just about the motion math.'
1453,154757191,b'Class needs:\r\n\r\n1. Summary description\r\n2. Public variable summary or Tooltips if inspector enabled.\r\n3. Needs to be under Input folder.'
1453,154757881,b'This also might live under Input\\Gaze or something.'
1453,154765781,b'Typo? Orientation instead of Orrientation?'
1453,154765948,b'Summary please :)'
1453,154766096,b'Typo: GetOrientationRef()'
1453,154766218,b'Consider adding Range attribute.'
1453,154766805,b'Is this comment consequential?'
1453,154767097,b'So scale gets applied to parent transform?\r\nHow does this work if the target transform is the camera?'
1453,154768037,b'NIT: There are strange one space off formatting issues in this file.'
1453,154768093,b'Delete?'
1453,154768307,b'Delete?'
1453,154768937,b'Delete?'
1436,154770194,"b""Yeah so let's not implement a polling function with our eventing story just yet :)"""
1436,154796444,b'This might not be the only polling function you need. The approach needs to be more thought out. We can skip this from this release to design it better.'
1339,154810111,b'Worth adding an else block and dumping a debug log.'
1453,155033589,"b""Well I guess I'm unaware of what state we are tracking here. State of which input or ?"""
1453,155034028,b'So currently GazeManager is a mess. I saw some new checkin by @Railboy applying Ray[0] ray step changes and this has made that class quite unreadable. \r\n\r\nThis logic could live in FocusManager perhaps?'
1453,155034167,b'Upon more investigation perhaps FocusManager.cs?'
1479,155065879,b'MRTK_Version.txt or something akin.'
1509,156739912,b'The point is precisely not to :) We are separating as much cross feature as we can :)'
1509,157043032,b'Will do.'
1509,157043297,b'I will be removing these classes as I am not convinced this is the right way anyway to handle this.\r\n'
1509,159334632,b'I left this for the separate PR as you suggested above for adding features. Just moved the script to SpatialMapping since it uses it.'
1530,159953971,b'Packages need to be from master. Is that the case?'
1532,159957985,b'Wow could not repro either :) Perhaps Stephen has some flags turned on in VS?'
1508,159967227,"b'@StephenHodgson I completely agree with you that this is odd. In the spirit of helping PRs move along, we filed an issue where we can figure out what is MRTK editor (already merged in the past) and why is it needed. Unfortunately not sure why this was not caught sooner. For example: CompoundButtonMesh.cs also has this goop.'"
1509,159969141,b'We spoke offline. Decided on meh!'
1509,159969168,b'Fixed.'
1601,160005491,"b'So I understand, you are adding these for patch release correct?\r\nAnd will remove them later in your 2017.3 PR?'"
1518,160556186,b'Perhaps we use these core scripts to demonstrate the auto resolve.\r\nFor example: For MixedRealityCameraManager.cs we must have CameraCache singleton resolved first.'
1518,160556325,b'Perhaps we use these core scripts to demonstrate the auto resolve.\r\nFor example: For RemoteHeadManager.cs we must have SharingStage singleton resolved first.'
1518,160556589,b'Typo: Likely -> Likely'
1636,161849371,"b""Adding a using up top would make this a little better for sure. Let's do that."""
1636,162208323,b'Is this HoloToolkit.Sharing using for the native code base?'
1636,162208807,b'Why are we changing the branches everywhere? From master to Dev_Working_Branch?'
1636,162209117,b'Revert please.'
1636,162209231,b'Revert please. Sharing will stop working without these.'
1636,162209316,"b""What's this value mapping to?"""
1518,162459107,"b""I still don't see a single place where this is getting used in the core toolkit. What about implementing this function in FocusManager.cs?"""
1666,163923316,"b""I believe this is also needed by SWIG files.\r\n@keveleigh we should atleast write a comment in these files explaining why they don't have a root namesapace."""
1676,166453436,b'https://docs.unity3d.com/ScriptReference/Object.DestroyImmediate.html\r\n\r\nDestroys the object obj immediately. You are strongly recommended to use Destroy instead.'
1711,167711422,b'This sucks that now to use simple Gaze and Cursor in my app I need both folders Input and UX?'
1711,167711509,b'This scenario is needed by pretty much every app. I am not supportive of this. Sorry if I should have caught this earlier.'
1711,167716606,b'Perhaps a UX folder under Input for things that depend purely on Input like Cursor and Motion Controllers?'
1711,167949985,"b""@StephenHodgson I don't recall a discussion around us agreeing on everything UX but I could be wrong for sure. It's OK for UX to use Input. It should infact.\r\n\r\n@DDReaper what you said is the exact opposite feedback I get. People don't want to import a ton of code into their projects. Hence I did the semi-modularization by reducing cross feature dependencies.\r\n\r\nMy scenario is fairly simple as I stated above: In my app I need Input from gaze and I need to visualize it. Looks like I will need a lot of code to do that contained in two separate feature folders Input and UX. Previously I could just import Input and be on my way.\r\nThese type of massive code pieces are a part of what deter people from using and contributing.\r\n\r\nI agree from an asset prespective having things in UX makes sense. But 99% apps will also need a cursor. \r\nI just want to make sure we address the feedback on MRTK around poor modularization. :(\r\n\r\n"""
1711,167951139,"b'Exactly, I believe this is a child of the MRCameraParent.'"
1711,167951578,b'May be we solve this with Unity packages for scenarios. @keveleigh thoughts? We chatted on this yesterday briefly.'
1743,170305866,"b""This is something I bounced around my team for awhile on picking a name. They shared the same concern but decided it would be best to guide users who were accustomed to using the Unity/Standard shader towards using this (purely based on name association). But, if there is another name the community would like I'm happy to change it!"""
1743,170306501,"b""The Models\\Materials folder is auto generated from the ShaderBall FBX, while the root Materials folder contains hand made materials. It's best to keep the auto generated materials in Models\\Materials because any changes to the FBX will be automatically associated to existing materials in that folder. """
1743,170306923,"b""Ah good to know! I'll look @cre8ivepark's scene and make that change."""
1743,170307267,"b""I'll make this change too. I just used the Mixed Reality Toolkit->Apply Mixed Reality Scene Settings menu item to set up the input manger. So, we should probably open up an issue to make sure that menu item conforms to the new standard. """
1743,170308462,"b""Good catch, I'll address this too!"""
1743,170308847,"b""This was the Unity light on the cursor, which was replaced with a HoverLight. I'll fix the missing reference above and make sure if can be toggle on/off like the InteractiveMeshCursor requires. Thanks for pointing this out!"""
1743,170309281,b'Is this true for fields I want to be public as well? I.E. should I mark it private and serialized and add default settors/gettors?'
1743,170310649,"b'That would incur extra Update calls at runtime. But, I agree readability is probably paramount here. '"
1743,170312728,"b'I don\'t believe that is true, check out the topic ""How Update is called"" in this blog post: https://blogs.unity3d.com/2015/12/23/1k-update-calls/ \r\n\r\nBut, there is probably not going to be many of these behaviors in a scene, so it\'s a moot optimization, I\'ll make it more readable! '"
1743,170378637,b'@cre8ivepark awesome! I will be sure to use that prefab.'
1743,170765160,"b'Good catch! Fixed, I wish I could use material property blocks for shader keywords. :('"
1743,170783146,"b""I can turn that settings off on the FBX, but I'm curious how do you handle potentially losing material references when FBX changes are made? Or, embedded media in the FBX? We've found our art team prefers working with the materials that get auto generated."""
1743,171012199,"b""I've consolidated the material folder and disabled auto import of materials. But, I would highly recommend giving the auto imported material workflow a second try if you get a chance! They work great for models which are being iterated on, plus any changes you make to the auto materials won't get stomped over. """
1743,171034967,b'Added an issue! #1768 '
1743,171398534,"b""@DDReaper Are there any other changes you would like me to make? I believe I've addressed all of your review comments. """
1743,171941416,b'Great suggestions! Just made those changes and pushed them up.'
2129,189383395,"b'There isn\'t an explicit hard limit, but I wanted to settle on a number that didn\'t incur much performance overhead (especially for the HoloLens and ""Core"" Windows MR PCs). Two seemed like a good number since usually we have zero to two motion controllers/pointers (I\'m sure that will change before we know it haha).\r\n\r\nIf there is an outcry for more hover lights, I\'m happy to add a more generic solution in the future!\r\n'"
2129,189464670,"b""3 lights will be an easy change, I'll make those changes and upload them tomorrow. Since you are  most likely to need 2+ hover lights on an immersive HMD we should have performance to spare. :)"""
2363,199214033,"b'Can we change 0 to 0.0 to avoid conversion on some platforms? For example: #define IF(a, b, c) lerp(b, c, step((fixed) (a), 0.0)); '"
2428,201525268,"b'None of these ""need"" to be static. I just like to mark them static to hint to other programmers that these functions will likely only operate on what is passed in, or other static members. It\'s also probably a premature optimization haha.'"
2428,201526654,"b""I can certainly do this but, I probably won't have time until next week."""
2428,202113679,b'This string is only used by this file at the moment! '
2502,205907217,"b""Opps, I'll fix this."""
2502,205907722,b'Sounds good!'
2502,205907894,"b""Ah, no we aren't. I'll loop though modifiedMaterials OnDestroy and clean them up there."""
2502,205908020,"b""Not at all, I'll change that!"""
2502,206636861,"b""I'm making the requested changes now, I'm confused on what to change here?"""
2502,206657737,"b'Ah okay, I\'ll make that change to conform to the standard. Is the perf worry about allocations? If so, I believe Unity fixed that in 5.6: https://forum.unity.com/threads/upgraded-c-compiler-on-5-3-5p8.417363/ ""this generally means that doing \'foreach\' over an Array, List<T>, Dictionary<T>, or HashSet<T> should not allocate.""'"
2502,206660148,b'Sounds good!'
2502,206668825,"b""Thank you for the offer, I wish I would have seen this earlier. But, I think I've just made all the requested changes."""
2502,206695742,b'Unity only generates a new material the first time you call `renderer.material` then it is smart enough to realize an instance has already been created and returns that for later calls.'
2502,206695845,"b""Haha, sounds perfect to me. I'll fix that!"""
2502,206711541,"b""I just restarted Unity and I'm seeing this too, which is very concerning... let me se what is going on."""
2502,206712194,"b'I just tried this in an empty project:\r\n\r\n    public Renderer testRenderer;\r\n\r\n    private void Update()\r\n    {\r\n        if (Input.anyKeyDown)\r\n        {\r\n            Material material = testRenderer.material;\r\n            material.color = Color.red;\r\n        }\r\n    }\r\n\r\nAnd, my material count went up by one (Window->Profiler->Memory->Materials) the first time any key was hit, then maintained constant (material count and memory wise) with sequential key strokes. @StephenHodgson are you seeing a different behavior?'"
2502,206714353,"b""It's better to be paranoid than leaking!"""
2502,206714611,"b""I was just about to ask if anyone has seen this, the guids look the same. And, I haven't touched those prefabs... has anyone seen something like this before? I'm going to keep digging."""
2502,206721077,"b'I need to step out for today, but I did notice it appears Unity changed the serialized names of 3 prefab tracking variables (looks like an innocent name change) in the scene assets. Reverting the scene restores the prefab linkage, but I would like to see if I can find a proper fix.'"
2502,206721146,b'I can do that!'
2502,206956696,"b'Found a real fix, I want to test one thing then I\'ll push the changes. This was the problem for those interested: \r\n\r\nI needed to replace 4 text strings in the scene: \r\n""serializedVersion: 6"" => ""serializedVersion: 5"" \r\n""m_CorrespondingSourceObject"" => ""m_PrefabParentObject"" \r\n""m_IsPrefabAsset"" => ""m_IsPrefabParent"" \r\n""m_SourcePrefab"" => ""m_ParentPrefab""\r\n\r\n\r\nSource: https://answers.unity.com/questions/1520106/what-does-assertion-failed-on-expression-prefabisp.html'"
2502,207060747,"b'I can certainly switch it back, or move to normal Single Pass? My team has been using Single Pass Instanced for all of our projects (even enterprise applications delivered to clients) and it has been super stable and a big perf win.\r\n\r\nI think the \xe2\x80\x9cpreview\xe2\x80\x9d portion is a handful of Unity extensions haven\xe2\x80\x99t been updated to utilize it. Such as TextMesh Pro. But, it\xe2\x80\x99s pretty easy to fix those instances. (No pun intended. \xf0\x9f\x98\x89)'"
2502,207101110,"b'Ah interesting, are you seeing it in a particular scene or all scenes? I suppose we have only been using Unity 2017 LTS so haven\xe2\x80\x99t done much testing in 2018.'"
2502,207283578,"b'It looks like #2521 might change this setting? But, please let me know if there is anything you need me to do.'"
2914,224963656,"b""@quakeulf thank you for taking a look at this. I love the idea of making the gradient exponential. I am a bit curious about why you needed to add this since the radius can be controlled on the HoverLight component (it is packed into the 'w' component of the hover light data). Is this so the radius can be controlled on a per material basis?"""
2914,225735067,"b""Apologies for the delay (I've been traveling for work). Let me pull this down when I return to see how this functions."""
2914,230107689,"b'After reviewing this I think a good addition would be to make this feature ""opt in."" Much like how _HOVER_COLOR_OVERRIDE is done. That way existing materials will not change automatically on users when they get this change. Then I would change the shader parameter to something like _HoverLightRadiusOverride.'"
3066,230863969,"b'I did remove it and replaced it with the triplanar one since I thought the glass one was a little ""meh"" looking. But, I\'m more than happy to add it back if you think it is useful?'"
3066,230864285,"b'I agree haha, this is our teams new coding style so I must have done it subconsciously. But, I happy to revert it.'"
3066,230866645,"b""Oh no it should be fine. Unity's material system will just resort to the default value which is good by default. It also keep around old properties that don't have to do with newly assigned materials, which seems odd, but can be a lifesaver when you switch back to a previous shader and your settings are the same."""
3066,231724031,"b""That's a very good point! I'll add it back in, with a few more material examples (to satisfy my need for uniformly organized shader balls). """
3066,232054280,"b""Alright, I've added the glass back with a few extra examples (please see the last gif in the overview)."""
3066,232109787,"b'Thank you for pointing this out. My gut reaction was to use sign too but I don\'t ever want a ""axisSign"" of zero, so I wasn\'t sure of a better way to do this?'"
3066,232331178,"b""That's a good point! I'll add a comment that that saves 2 math instructions based on Unity's shader compiler. """
3303,244607582,"b""Ah, I wish Unity would remove that obsolete member. It's odd I don't get that warning locally anymore?\r\n![renderer](https://user-images.githubusercontent.com/13305729/50565558-d1983200-0ce4-11e9-89ed-ab08bdf1520e.jpg)\r\n\r\n\r\nI'll change them all to _renderer just in case."""
3303,244607675,"b""I agree this has got somewhat confusing since the preprocessor removals when moving to vNext. (This code was pushed down from ClipPlane.cs) I'll add a comment to make it a bit more clear."""
3310,245423346,"b""I'm not sure what the stance is on distributing DLLs and if we need the source? @davidkline-ms might know?"""
3310,245424134,"b'This material is showing up as ""Hidden/InternalErrorShader"" in the editor for me?'"
3310,245424759,b'Should we follow the pattern used in FollowGyroscope and use Application.isEditor or vice versa?'
3310,245425135,b'Nit: Default comment'
3310,245425729,"b""Nit: It seems like the standard for most files in the MRTK is to explicitly mark members as private. I'll leave it up to you if you want to change all the instances of this. """
3310,245426000,"b""Nit: I've noticed the use of spacing to line up member variables and some functions. I haven't seen this pattern in the MRTK before. I'll leave it up to you if you want to change all the instances of this or not."""
3310,245426253,b'I think the hope is that all public members have summary tags.'
3310,245428313,b'Nit: Should all of these scripts live in a Preview namespace if they are currently in the preview folder?'
3310,245430354,"b""Does this work in non-editor builds? I'm assuming it did since I saw stuff working. Just wanted to double check since you normally need to reference shaders in a scene or in the player settings in order to find it outside of the editor."""
3310,245431286,"b'A few global comments:\r\n\r\n- It looks like the scripts are missing their icon reference in the .meta files.\r\n- Should we move the unity scene files into an ""Scenes"" folder like the other examples?\r\n- A handful of usings in scripts could be removed (Right Click/Remove and Sort Usings)'"
3310,245431382,b'This was mentioned in earlier conversation but can we mentioned enabling the WebCam for UWP builds?'
3310,245432208,b'Nit: do we want to overwrite the same texture each time?'
3310,245432809,"b'Nit: I found this UI somewhat confusing since my selection always went back to ""..."" It might be cool if all the settings are grayed out if SuperLow/Low/Medium/Normal/High is selected and then add another settings called ""Custom"" that un-grays the options and allows the user to pick whatever.'"
3310,245433085,"b'Nit: It looks like you are trying to minimize dependencies on the MRTK, but it might be nice to use the CameraCache for consistency.'"
3310,245433423,b'Nit: This was cool to watch on device. You could use a AnimationCurve property to allow the user more control and eliminate this easing function.'
3310,245433661,"b""I've never heard of a Nautilus Sphere? Could you comment more about what it is/used for?"""
3310,246082919,b'Awesome! I missed that is was in a resources folder.'
3310,246083710,"b""I'm cool with passing on the icons. I find it a hassle to maintain but do it anyway due to fear of rejection. I should ask what the original thought process is behind the icons."""
3310,246084058,"b'Oh, very cool!'"
3310,250669999,"b'The license term looks a bit ambiguous: http://www.graphics.stanford.edu/data/3Dscanrep/ You could use the ""Shaderball"" model that already exists in the MRTK since it was created by Microsoft.'"
3382,251965759,"b'This is a great usability idea! I\'m on the fence if this would be useful to the user or an annoyance to users who are processing tons of textures to have to hit ""ok"" after every save?'"
3397,253188151,"b""Nit: I'm weary with switch statements keyed off strings. But, it should be find for this scenario."""
3397,253188447,"b'Nit: Do we want to handle the default case with a log? Else, we could remove it.'"
3399,253224729,b'Just double checking this is a capture TODO? '
3399,253225216,"b'Nit: this is probably not a const expression, but would be a bit more consumable: https://docs.unity3d.com/ScriptReference/LayerMask.NameToLayer.html'"
3399,253225416,b'Should we remove this?'
3458,257564430,"b'I was a little concerned this would not work if this script was instantiated (rather than serialized) outside of the editor. But, this worked perfectly for me in a non-editor build!'"
3458,257565268,"b""Nit: We could move all these serialized fields into a serializable class/struct that can be shared between the diagnostics profile and this component. But, 99% of users don't usually alter these default settings. :) """
3458,257566122,b'This is great we have an example scene! In the future this could be a nice place to demo some examples of what could cause performance to decline or fluctuate (with our various diagnostic tools pointing out the problem(s)).'
3458,257566629,b'I verified this can still be dropped into a scene and works standalone. \xf0\x9f\x91\x8d '
3780,271821150,"b""Great idea about backwards compat with FormerlySerializedAs. I'll add that. As for the range question. I didn't think it made sense to constrain users to the 0-1 range. Since they may want to sample every 2 seconds and so on. If the sample rate is <= 0 then the frame rate will just be sampled every frame. """
3780,271821301,"b'Great idea, added!'"
3780,271823574,"b""This got me for a bit too, since I couldn't figure out why instances weren't being rendered. Once I looked near the origin they appeared, so I was able to narrow it down to a culling issue. Then I found the numerous Unity forum posts about the issue you pointed out. I'm not aware of a bug report, but it seems like there certainly is a bug, or their documentation is out of date. I have an open discussion with Unity around a similar issue so I'll reach out to them about this too!"""
3780,271823745,"b'Good idea, added!'"
3780,271824247,"b""Good idea, I just removed that tag since it doesn't really make sense for this shader."""
3750,273121827,b'Nit: Curly braces.'
3886,273130098,"b'Super nit: Missing space after ""if.""'"
3886,273130433,"b'Should be wrap this UpdateRenderers call in a ""if (!useOnPreRender)"" too?'"
4049,277930870,b'Yep! All callers of this method only read from the material properties.'
4311,283924145,"b""That's a good idea! I'll add that."""
4311,283988378,b'@Jarodshow Great idea! I just added a menu item validator to make sure they at minimum have a renderPipelineAsset specified in their project settings. (Just validating any SRP asset in case a developer has a custom RP based on the LWRP.)'
4311,284387780,"b'Of course! I agree we should get this in the release notes and maybe bubble it up higher in the docs. Unity has a similar [obfuscated menu item ](https://docs.unity3d.com/Packages/com.unity.render-pipelines.lightweight@4.0/manual/images/MaterialUpgraders.png) for upgrading a project. I thought about adding the MRTK menu item there too, but Unity keeps changing the location with each release. '"
4311,284388392,"b""Good question, it does not unless someone changed the private methods to public and incorporated into some pipeline. But, I don't think many developers know this tool exists yet."""
4311,284389139,"b""Maybe once we make the Lightweight Scriptable Render Pipeline is more standard (when we upgrade to Unity 2019+) we can build some tooling that auto detects shaders need to be upgraded? But, Unity doesn't even do this. You just end up with a bunch of magenta materials."""
4311,284389807,"b""It does not since this is just changing the interpolator semantic which doesn't have a connection to serialized data. Thanks for checking!"""
4343,284470315,"b""Super Nit: Missing space between '.' and This"""
4343,284472381,"b'It was eye opening to see how many materials in the MRTK are still using Unity\'s Standard shader, this tool is awesome! Sadly some of the materials found were imbedded in others assets (often FBXs) and cannot be altered (Unity makes it looks like you can alter them, but when you re-open the editor your changes are lost). Maybe we should filter out materials whose asset path does not end in "".mat""? Or, we could flag them somehow and say ""Hey! Extract these materials and please change their shader.""'"
4388,285659082,"b'Nice catch, thank you Julia!'"
4501,286995411,"b'One question that has come up with partners and the pressable button is what is the purpose of the ""Static Content?"" Is that something we can delete while we are working in here? It seems to always be disabled.\r\n\r\n![image](https://user-images.githubusercontent.com/13305729/58264363-97cad500-7d32-11e9-9636-af1588363a32.png)\r\n'"
4526,287004164,"b""That's a great question. This is the default shader property name Unity (and the MRTK) uses for texture tiling and offset of the main texture (albedo). So, it should be compatible with most shaders a developer choses. But, we could always expose that property name if desired? """
4501,287076867,b'Awesome! Thank you Yoon.'
4532,287524896,b'I like that idea! Since you really only need one instance of this.'
4708,290829965,"b'This might be desired behavior. But, there seems to be some asymmetry between the InputSystem.Register andInputSystem.Unregister calls. Should this occur in OnDisable()? Or, should it be Start() and OnDestory()?'"
4708,290854146,b'Functionally it seems perfect to me! So feel free to merge. I just have found myself making those symmetry mistakes so thought I would bring it up. I tend to follow the OnEnable/OnDisable pattern for all registrations so that users can just enable/disable objects to subscribe/unsubscribe.'
4734,291648876,"b'I wish I could have, but there was just a settor (not a gettor) for depth buffer sharing. But, I did gleam how you accessed the project properties pre-2019 from there!'"
4734,291649068,"b'Ah yes, this file original came from TMP. Does MRTK have a preference for tabs or spaces?'"
4836,292559159,"b'Sadly the tool is a internal, custom one written by a member of the Shell team. I could reach out to them about open sourcing it, but that would probably take some time and effort. I could also spend a bit of time in the future re-formatting and commenting this shader for user readability (and for the hand triangle shader).'"
4836,294502964,"b""I left them in so this wasn't a breaking change. And, developers may want to attach gameObjects to the touch points? (Rather than just a shadow.)"""
4836,294503315,"b'I left the code in sense this shader was generated from a tool, and it may be easier to resolve changes if we take an update from that tool.'"
4993,296809467,"b'The original inspiration came from [Unity\'s implementation](https://github.com/Unity-Technologies/UnityCsReference/blob/053d3ce1c53ee3dd4ff1aa08522c1284453f0796/Editor/Mono/Inspector/StandardShaderGUI.cs#L335) but since I\'ve added features it has ballooned a little bit. I somewhat like the explicitness so I wouldn\'t mind keeping it as is, but feel free to factor out the common properties as long as when the user selects ""Custom"" it retains their previous settings.'"
4993,296812994,"b'I know this bug existed before your PR. But we should remove the ""only_renderers d3d11"" pragma and wrap ""target 5.0"" in this preprocessor:\r\n\r\n#if defined(SHADER_API_D3D11)\r\n            #pragma target 5.0\r\n#endif\r\n\r\nSo we support other platforms (iOS, Android, etc.). Feel free to do this in your PR or I can open a bug.'"
4993,296813897,"b""TL;DR It's your call. ;)"""
5096,298763342,"b'Ah, thank you for the info. Updated!'"
5096,298763385,b'Good idea!'
5096,298763553,"b""I switched over as many as I could (sans Button, parametrized Space, and a few Labels that require special alignment). That's so weird their isn't a EditorGUILayout Button?"""
5096,298763613,"b""I didn't even think of this. Great suggestion! Switched it over."""
5096,298763697,"b'I\'m not sure I can with a project setting? But, I just added a ""Fix Now"" buttoon like you find in the material inspector.'"
5096,298763744,"b""Didn't even think of this, added!"""
5096,298764305,"b'When you close the window it destroys the DependencyWindow and hence the dependencyGraph, so everything is restored to the defaults when you re-open the window.'"
5168,299591885,"b""I wish we could too! But, sadly the ButtonPressed event doesn't pass any state along to know which input source fired the event."""
5168,299594054,"b'Using a set was my first reaction (since I wanted to avoid duplicates), but I also needed something sorted by ""age."" I thought about SortedSet too, but I didn\'t think the overhead warranted something this simple. '"
5168,299594325,"b""Good idea! It does require the MRTK/Standard shader, or one which follows similar naming conventions. I'll add that comment. """
5168,299596924,"b'Right now the ""_BORDER_LIGHT"" feature of the MRTK/Standard shader maintains the border width based on the object\'s scale. For example if you have a border width of 10 pixels on an object of scale (1,1,1) then you scale that same object to (2,2,2) your border will now be 20 pixels wide. Sometimes developers want to maintain the border width no matter the object scale (in the case of the button front plate as it get\'s compressed, and a few other instances I\'ve encounterted). Right now the only thing using this behavior is the button, but I wouldn\'t say this behavior is unique to the button. I\'m happy to move it elsewhere if there is a more appropriate location?'"
5168,299614213,b'I bet we could! We should give it a try.'
5175,300073499,"b""Good catch! I'll fix this."""
5168,300074520,"b""Good catch, I'll fix that!"""
5168,300075650,"b""I'm glad you brought this up since the logic does look misleading. In the shader (where the border width value is used) it also looks for the smallest axes scale and then uses that to calculate the border size. So this behavior almost does the inverse of that to maintain border width."""
5229,301337022,"b'Nice catch, fixed!'"
5258,302172216,"b""The duck makes it's triumphant return! https://www.youtube.com/watch?v=7UaDvIPpQnQ"""
5271,302634506,"b'These are great questions! I did that to match the values found in the default color picker for HDR colors. (In recent versions of Unity they have also exposed floating point color values.) But, by default an HDR color value is displayed in Unity as 4 unsigned byte values and a floating point scaler.'"
5244,302636169,"b'Yes, this was for a experiment if we wanted a cursor on the thumb when grabbing. I noticed the shell still has (dead) code paths for this. So, maybe it will come back at some point?'"
5175,303108580,"b'Oh I like that idea, I can add that!'"
5175,303108700,"b""That's a good idea, let me try that out."""
5175,303174710,"b""I just started going down this path but decided against it to keep this functionality independent of the MRTK (in case someone want's to just drop this script into older MRTK versions, or projects without the MRTK)."""
5303,303688872,"b'Thank you for reviewing, I\xe2\x80\x99ll update this document tomorrow!'"
5328,304123872,"b'I\'m not too familiar with the ""toc"" file. Does this line need to be in the utilities namespace?\r\n  \r\n`href: Utilities/DependencyWindow.md`'"
5328,304125276,b'Should this be?\r\n\r\n`- name: Dependency Window`'
5014,305532052,"b'We built a scrolling object collection with our latest partner and were able to circumvent the ""pass though mode"" idea. In the end we didn\'t have to make any changes to the MRTK input layer.'"
5389,305534904,b'Did you need to commit this image too?'
5389,305534965,b'Did you need to commit this image too?'
5389,305544609,"b'Weird, GitHub is failing to render the image for me.\r\n\r\n![image](https://user-images.githubusercontent.com/13305729/61569181-05496800-aa3b-11e9-9b97-2c869140d0a1.png)\r\n\r\nLooks like the only difference is the case in the extension? .PNG vs .png'"
5389,305546386,b'This lead me down [a rabbit hole](https://stackoverflow.com/questions/7996919/should-url-be-case-sensitive) haha.\r\n\r\nDo both of these links work for you?\r\n\r\n1) https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Documentation/Images/Performance/UnityStandardShader-Stats.png\r\n\r\n2) https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Documentation/Images/Performance/UnityStandardShader-Stats.PNG'
5389,305917230,"b'@cre8ivepark thank you for testing! @Troy-Ferrell I would recommend switching to the case on disk, so .PNG'"
5412,306883239,b'Since it appears this class requires a RadialView present to do anything. Maybe we should require one? https://docs.unity3d.com/ScriptReference/RequireComponent.html'
5412,306883914,b'Nit: spacing after if is missing.'
5412,306901400,"b""I'm not so sure it isn't optional, since they should remove this component if a solver isn't present on this object. But, I agree the logic should switch to the base solver class. In which case we can't use require component. haha"""
5416,307880343,b'Nit: Now that this happens in Awake (which is way more correct) we could remove the [SerializeField] attribute from SolverHandler since it will be null at serialization/deserialization time.'
5443,307914370,"b""Could we change this type from a string to a SceneInfo object in case example scene names change we don't lose references? """
5443,309453500,b'I can add this real quick then hook up the references!'
5443,309468707,b'Just pushed up these changes: \r\n![image](https://user-images.githubusercontent.com/13305729/62254452-10db4e00-b3ae-11e9-9c6c-e465d71a6329.png)\r\n'
5500,310298288,b'To be honest I have no idea where this came from haha. @keveleigh is this because this PR https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5458/files is not in stabilization?  '
5500,310308723,"b""I'm actually not sure why we needs these? Looks like they were added here: https://github.com/microsoft/MixedRealityToolkit-Unity/commit/b042ac1446aecc4d5190501620a036d868fb064d#diff-8b68ce5f0aa5c4660f69b67600085bed I'll remove them since it doesn't look like they are required. (Since we have [RequireComponent(typeof(SolverHandler))] and acquire it on Awake) """
5500,310309050,b'Just for brevity since it can be inferred via the input.'
5500,310309988,"b""I could go either way, they kind of exist behind the scenes aren't dependent on the Solver system. So maybe they could be documented elsewhere?"""
5500,310313956,b'AFAIK it works since C# will infer generic types based on arguments. Just checked the debugger to make sure:\r\n![image](https://user-images.githubusercontent.com/13305729/62401524-6cd1de00-b538-11e9-9c6e-61f106fd8258.png)\r\n'
5526,311186640,b'Nit: I wonder if we should make some abstract RenderHelpURLInspector base class for all these custom inspectors to avoid code dupe?'
5526,311189785,"b""Yeah, I've been bitten by that same thing. I wish I could do [CustomEditor(typeof(Blah), typeof(Foo), typeof(Bar))]"""
5500,312238953,b'\xf0\x9f\x98\x82'
5613,314496127,"b'Here are a few more MRTK Standard Shader features that might be nice to point out?\r\n\r\n\xe2\x80\xa2\tA  warning and ""Fix Now"" button is now displayed on materials which are in a project that has depth buffer sharing enabled and do not write depth.\r\n\xe2\x80\xa2\tProximity lights now have per material color overrides and a ""Subtractive Light"" option to mimic proximity shadows.\r\n\xe2\x80\xa2\tClipping primitives can now be toggled on/off at runtime without requiring shader permutations to be known at (player) build time.\r\n\xe2\x80\xa2\tAdditive and transparent materials are now clipped correctly. A new property for non-opaque or cutout materials called \xe2\x80\x9cBlended Clipping Width\xe2\x80\x9d allows developers to set the width of the clip blend region.\r\n\xe2\x80\xa2\tLighting of back face triangles is now correct.\r\n'"
5562,314893581,"b""That's a good idea, I'll make that change. I started by using the Interactable behavior (but it makes some assumptions that don't always work and it's pretty heavy for this use) so that's why I put this here."""
5562,314894122,"b""I would really like to add this model since it demonstrates proper asset consturction, naming, and PBR workflow. It would be nice to phase out the old lander (and maybe even the rover) since they don't demonstrate the same quality bar I would like to see in the MRTK."""
5562,314894635,"b""We shouldn't need to since Unity's serialization system will initialize all serializable properties for us. But, I suppose a user could nullify the event? I can make the change."""
5562,314895126,"b""Yep @julenka is correct. We've had so many components that just fall over when instantiated at runtime with null references that this is a sanity check for that. Would love to do screenshot comparisons. But, that would require some work on the test and build machine side. :("""
5562,314895616,"b""Ah, this comment is misleading. Thanks for pointing that out, I'll fix this! It should read that you should use a MRTK/Standard material but it's recommend to make the MRTK/Standard material as bare bones as possible (in other words unlit)."""
5562,314896086,"b""I'm just using OnValidate to apply changes as they occur in the editor. I could make a customer inspector but seems a little overkill?"""
5562,314896323,b'We need to do this at runtime for meshes that are loaded dynamically. Such as loading user generated content at runtime.'
5562,314896397,b'Good idea!'
5562,314896445,b'Certainly! '
5562,314897974,"b""They shouldn't need to be initialized since Unity's we do that for you for any serializable properties. But, I'm happy to provide a default. Also, I do prefer the private serialized field pattern. I was just following what I found in PressableButton, BoundingBox, etc. But, we should probably fix those too? I'll make this change!"""
5562,314898152,"b""I like your name better, I'll change that."""
5562,314898181,b'Good idea!'
7281,386591603,"b""nit: looks like `HandednessLabels` isn't used anymore. Can it be removed?"""
4661,289509812,b'The pattern for accessing profiles and systems has changed. Please see #4315 and #4437 for reference and feel free to reach out with questions.'
4661,289530730,"b""@davidkline-ms , hmm so what service then contains IsInputSystemEnabled as your commet highlighted(aka what service consumes MixedRealityToolkitConfigurationProfile in it's constructor)? The only method I see for accessing profiles is roughly:\r\n\r\n```\r\nIMixedRealityService service;\r\nMixedRealityServiceRegistry.TryGetService<IMixedRealityService>(out service); \r\n\r\nsvc.profile.blah.dosomething etc\r\n```"""
4661,289924318,"b'at this point, there is nothing that consumes that profile, other than the MixedRealityToolkit object.\r\n\r\nbased on feedback from some customers, there will be scenarios where there isnt a MixedRealityToolkit object in the scene.\r\n\r\nmany (though not yet all) instances of Is<Service>Enabled are replaceable with a check to see if the system is non-null'"
5868,321358509,"b'Can we instead have the following:\r\n\r\n1) a checkbox ""use speech confirmation tooltip""\r\n2) If checked, the speech confirmation tooltip prefab field shows up.\r\n\r\nOr, have a tooltip that clearly states ""if null, no tooltip will show up"". '"
5868,321866306,"b'The tooltip text is in SpeechInputHandler.cs. \r\n \r\n       [SerializeField]\r\n        [Tooltip(""Assign SpeechConfirmationTooltip.prefab here to display confirmation label. Optional."")]\r\n        private GameObject speechConfirmationTooltipPrefab = null;'"
7006,369281314,"b""@keveleigh @davidkline-ms  I think that this places a dependency of the Foundation package onto the Tools package, which would create a circular dependency.\r\n\r\nIt's a bit unfortunate that this is something that we had to discover though through manual code review - ideally we'd have some tooling that would detect this (this last sentence is not directed at this PR, just a general comment that it's really hard to find these things in general without infra investments)."""
7006,369283793,"b""Ah, I should clarify, the circular dependency isn't in the asmdefs (these are fine) - the circular-ness is at a higher level (i.e. the .unitypackage files), where now Tools.unitypackage depends on Foundation.unitypackage and Foundation.unitypackage depends on Tools.unitypackage."""
7006,369294193,b'What is the specific interdependency that got added here? There might be room to move things around.'
7006,369490595,"b'The Inspector of ManipulationHandler  now has a button offering the user the possibility of migration to ObjectManipulator. MigrationTool was in Tools assembly. Moving MigrationTool to SDK.Experimental.Utilities and removing that dependency.   MigrationWindow stays on Tools, but Tools depending on SDK should be fine, right?'"
7006,369710835,"b""Yep, Tool depending on SDK is totally fine. I *think* that doing what you said should be fine (usually circular reference removing involves doing something like this, or making some other root common thing that both can depend on. In this case because there's this root thing 'foundation' we're a little more limited). """
5526,311186640,b'Nit: I wonder if we should make some abstract RenderHelpURLInspector base class for all these custom inspectors to avoid code dupe?'
5526,311188878,"b""yea I thought of that too. I wish I could just create one class and say all these objects will use that. But I still have to create an inspector class/file for each item and set [CustomEditor(typeof(Blah))]. \r\n\r\nI didn't go the base class route though because there is only two and inspectors have strong tendency to become specialized/custom during their lifetime. """
5526,311189785,"b""Yeah, I've been bitten by that same thing. I wish I could do [CustomEditor(typeof(Blah), typeof(Foo), typeof(Bar))]"""
5140,299565153,"b'Nit: For clarity, converting the int value to the actual enum type would be preferred. Same goes for layout type.'"
5140,299588226,b'done'
6001,326393827,b'Please move to MixedRealityToolkit.SDK/Experimental/Inspectors/UX/Collections/ScrollingObjectCollectionInspector.cs'
6001,326393883,b'Put this in namespace  Microsoft.MixedReality.Toolkit.Experimental.Inspectors'
6001,326394336,b'You can use \r\nusing (new EditorGUILayout.HorizontalScope())\r\n{\r\n}\r\n\r\nEverywhere you do begin / end horizontal'
6001,326406430,b'Use StandardShaderUtility'
6410,355547282,"b'Per [documentation guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#property-method-event-summary-blocks), please make sure all public PMEs (properties, methods events) have comments.'"
6410,380850793,b'Missing header'
3617,265263512,b'why add sealed here? why would we want no further sub-classes to be able to override?'
3617,265265934,"b""Yep, good question, we have the RenderCustomInspector available for overriding, so that path can be used. I needed to move actionOptions to this location and wanted to prevent overriding of this behavior by a sub class. My thinking is that if there is a compelling reason to undo it that RenderCustomInspector doesn't satisfy, it can be undone then. Today no class overrides it."""
3617,265267566,"b'@keveleigh, @wiwei, thoughts?'"
3617,265696337,"b'I think it\'s fine here, given that the intent is to make sure that the code below:\r\n\r\n if (actionOptions == null && !Interactable.TryGetInputActions(out actionOptions))\r\n            {\r\n                EditorGUILayout.HelpBox(""Mixed Reality Toolkit is missing, configure it by invoking the \'Mixed Reality Toolkit > Configure...\' menu"", MessageType.Error);\r\n            }\r\n\r\nActually gets run. Being able to further override makes it easy to forget to add this (I assume that this check is actually critical).\r\n\r\nIt might be worth having a minor comment about that (i.e. ""please override through RenderCustomInspector to ensure that correct prerequisite state checks are performed on your behalf"")'"
3617,265696975,"b'Good idea on the comment, will add it.'"
4143,280290507,b'Are these TODO items still needed?'
4143,280504590,b'```suggestion\r\n\r\n```'
4143,280580945,b'Removed the TODO notes.'
4527,286744145,"b'hehe, bugfix? '"
4527,286866673,b'that was spotted by daniel :) '
4357,286985755,b'This also seems like an unrelated change to the PR'
4357,287073019,"b'This was a bug fix made as I was working on the themes, every time a new theme is added the properties were closed by default, it was getting annoying.'"
4357,287073182,"b""I'll add to the bug fix section."""
4548,287160808,"b""Not sure if this is what it's supposed to be, but was my best guess :)\r\n```suggestion\r\n        protected void DrawDropDownProperty(Rect position, SerializedProperty prop, string[] options, GUIContent label)\r\n```"""
4548,287160855,"b'```suggestion\r\n                DrawDropDownProperty(position, actionId, actionOptions, new GUIContent(""Input Actions"", ""The input action filter""));\r\n```'"
4695,290089834,b'odd spacing here.'
4695,290843332,b'More issues with incorrect spacing.'
4695,291441089,b'Spacing'
4695,291441532,b'@davidkline-ms  is this the proper / recommended way to get MRTK profiles now?'
4695,291441582,"b'What do we do if the user selects ""none"" for the speech commands here?'"
4695,291441632,"b""grammer nit: its, not it's"""
4695,291442023,"b'You can delete this method and just use [Array.IndexOf](https://docs.microsoft.com/en-us/dotnet/api/system.array.indexof?redirectedfrom=MSDN&view=netframework-4.8#System_Array_IndexOf_System_Array_System_Object_) instead. `Array.IndexOf(options, option);`. Also, any reason you would want this to be public?'"
4695,291442076,"b'Instead, do `currentIndex = Array.IndexOf(speechKeywords, voiceCommands.stringValue)`'"
4695,291651455,"b""We set the VoiceCommand property to an empty string. There's code in Interactable and the inspector that checks for an empty string to see if listening for voice commands is active or not."""
4695,291657046,"b'There\'s a slight difference here than Array.IndexOf. This starts at item one in the array because ""None"" was added at item zero. If the speech command is not in the list, I want it to be zero, which is ""None"".\r\n\r\nI was concerned that someone could create a speech command called ""None"" for some scenario, like choosing the amount of something via speech command. In that situation, a created speech command would match the inserted ""None"" value at index zero and turn off  listening for voice commands. It would be weird that there would be two ""None"" values in the list, but that\'s an extreme edge case that would not break anything.\r\n\r\nI wanted an easy way to turn off speech command handling without adding another toggle to enable/disable it. But any value we insert could potentially be a speech command that someone could create. If this is too weird, I can put in the toggle :)\r\n\r\n'"
4695,291657395,b'See above comment.'
4695,291658463,b'Should I follow this pattern?\r\n``` C#\r\nif (!MixedRealityToolkit.ConfirmInitialized() || !MixedRealityToolkit.Instance.HasActiveProfile)\r\n            {\r\n                descriptionsArray = null;\r\n                return false;\r\n            }\r\n\r\n            MixedRealityInputAction[] actions = InputSystem.InputSystemProfile.InputActionsProfile.InputActions;\r\n```'
4695,291820176,"b""I would say yes, though looking to @Railboy and @davidkline-ms for the blessing since they own that system. But the ConfirmInitialized() has been the pattern I've been following."""
4695,291820253,"b'I see. Up to you. Just wanted to make sure you were aware of the tools available. If you wanted to use LINQ you could also do keywords.Skip(1).IndexOf(...) or similar to skip the first element. \r\n\r\nIs it a fair assumption to always assume that the first element is keywords.None? If ""None"" is not even a valid keyword, why is it even in the keywords list?\r\n\r\nIt\'s not a huge deal, just wondering if I can provide some suggestions that could help simplify the code. It was not obvious to me that the first element in the list always represents ""no keyword"". I would expect if no keywords are registered for the keywords list to be empty.'"
4695,292172068,b'Updated to use similar pattern for getting input actions.'
4695,292186555,"b""Thanks for the suggestions, I don't use LINQ very much and should learn more about it.\r\n\r\nLeaving the first item blank or just spaces does not work in the editor popup, it just ignores the item without valid characters in the drop down so it doesn't should up as an option. I replaced None with -No Selection- as the first item, it's more clear and gives the user the feeling that they can select it as an option to turn the feature off."""
4695,296300188,"b""I was a little confused by this message showing up when I set the speech command to 'No Selection' - it should probably only show up when there are no options."""
4695,296300303,b'>These values only work if they are set before runtime or OnEnable is called. The Interactable does not currently support runtime registering and unregistering.\r\n\r\nWe should put the dropdown in a disabled block during play mode.'
4695,296316079,"b""That makes more sense. I'll also make sure the tooltip is clear where the speech command list is coming from at least."""
4695,296368078,"b'I disabled some of the settings during play mode, those that should only be edited in edit mode. '"
5070,297859494,b'```suggestion\r\n\r\n```'
5070,297859569,"b'```suggestion\r\n                    EditorPrefs.SetBool(statesPrefKey, showStates);\r\n```'"
5070,297860776,"b'Can you elaborate a bit more (on the PR, maybe not in comments in the code) about why an indent happens here but not down below?'"
5070,297862168,"b""That's an oversight. I'll update it."""
5069,298004551,"b""Why are you only updating dimensions.intValue if it's less than minMultiDimensionValue? Why not always update it?"""
5069,298051115,"b'Maybe move new GUIContent to static private class ""Styles"" so not allocating every repaint'"
5069,298054877,"b'Also here, make dimensionLabel in a static class instead of overwriting reference for variable selectionTypeLabel. Looks weird to read that the selectionTypeLabel is being use for the dimension property'"
5069,298055509,"b'Because he is clamping it. If we are in multidimension mode then the minimum value possible for dimensions is 3. For example, if user goes from button mode (dimensions = 1) to MultiDimensionalmode, then the dimensions needs to be updated to min value of 3. Maybe also change that if statement to some kind of \r\ndimensions.intValue = math.max(dimensions.intvalue, minMultiDimensionValue)\r\n\r\nWhy do a comparison of selectionTypeIndex against minMultiDimensionValue? Why not if (selectionType == Interactable.SelectionTypes.MultiDimension )?\r\n\r\nI think you can remove selectionTypeIndex and below just use dimensions.intValue = selectionType == Interactable.SelectionTypes.button ? 1 : 2. To make it more explicit that dimensions value is tied to SelectionMode'"
5069,298056372,"b'Same here, check against selectionMode type'"
5069,298056936,b'why not use isPlayMode variable like you did above?'
5069,298057637,"b'If I am reading this correctly, I think you can remove all of these GUI.enabled. Just wrap both selectionMode properties and the dimension properties stuff (can Select, etc) all around one GUI.enabled = !isPlayMode;'"
5069,298059262,"b'Again to be more explicit for readers, just use selectionMode? so something like below. Also for toggled, can we call make it clear that one theme is deselected or off or untoggled and other theme is the toggled on\r\n\r\nif (selectionmode == toggle)\r\n{\r\nthemeLabel = ""Theme ""  + (t == 0 ? ""(Deselected)"" : ""(Selected)"";\r\n}\r\nelse if (selectionmode == multidimension)\r\n{\r\nthemeLabel = ""Theme "" + (t + 1);\r\n}'"
5069,300819128,"b'Great points, made updates as suggested.'"
5526,311232559,b'why not use the same pattern as above here?'
5526,311288383,b'Because I want #5493 to go through'
6104,328943252,b'nit: extra line #Resolved'
6162,330306296,b'we should mark the property as being previously serialized as the old name'
6162,330309824,"b""Looks like it's marked in the original PR: https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104/files#diff-a34c3fc73243420b0de3150d786c43e4R196, just not accounted for in the inspector"""
6162,330310109,b'It was marked there. But the inspector script is trying to look for the old property name and is not accounted for here.'
6647,348642083,"b'```suggestion\r\n        private static readonly GUIContent selectionModeLabel = new GUIContent(""Selection Mode"", ""The selection mode of the Interactable is based on the number of dimensions available."");\r\n```'"
5493,312057027,b'add class description please'
6473,342800554,b'nit: fix spacing'
6473,342801166,"b'@julenka, what do you want to do with inspector public class comments? Mark internal or just add generic comment ""I am inspector of blah""'"
6473,342801308,b'combine if statement conditions into one if'
6473,342806302,"b""actually don't believe this will work. If I set CurrentIndex = -1 in the inspector, it will actually set the value. """
6473,342868530,b'Combined '
6473,342868694,b'Added if index < 0'
6473,342956112,b'I like marking them as internal'
6473,343261431,b'@Troy-Ferrell and @julenka How do I mark something as internal?'
6473,343273238,b'`internal class InteractableToggleCollectionInspector `'
6523,343980918,"b'This is great, if I updated currentIndex in the inspector to like -1, then it won\'t accept the value. \r\n\r\nOther problem though is ToggleList is still exposed. Since it\'s more unlikley someone will change the ToggleList via inspector at runtime, I\'d say it\'s fine to just disable the GUI for that property. \r\n\r\nYou\'ll have to get rid of `base.OnInSpectorGUI()` and do your own rendering\r\n\r\n``\r\n... OnEnable()\r\n{\r\ntoggleListProperty = serializedObject.FindProperty(""toggleList"");\r\n...\r\n}\r\n\r\noninspectorgui()\r\n{\r\n\r\nnew EditorGUI.DisabledGroupScope(Application.isPlaying))\r\n{\r\nEditorGUILayout.PropertyFIeld(toggleListProperty);\r\n}\r\n\r\nEditorGUILayout.PropertyFIeld(currentIndexProperty);\r\n\r\n...\r\n```\r\n'"
6523,344422271,b'Disabled editing the ToggleList through the inspector during playmode. \r\n![image](https://user-images.githubusercontent.com/53493796/68520770-5e8a1100-024f-11ea-9b3b-52d072dbfd95.png)\r\n'
3933,274656282,b'nit: I think public fields in structs normally start with a capital letter [reference here](https://microsoft.github.io/MixedRealityToolkit-Unity/CodingGuidelines.html#naming-conventions)'
3933,275736570,b'nit: instead of having this if statement. We can add the following attribute to the method: `[DrawGizmo(GizmoType.Selected)]`'
3933,275738151,"b'`Math.Abs` is redundant here: Since `endPos >= startPos`, `(endPos - startPos) >= 0`'"
3933,275740200,b'`Abs` is redundant'
3933,275742420,"b'In general, would it make more sense to adjust the other distances according to the one being moved? So for example adjust `startPos` and `endPos` here using `pressDistPos`(instead of the other way around).\r\n\r\nThis would also rectify the situation of when the user manually set `startPos` and `endPos`, so that `startPos` > `endPos`, which would let us get rid of the `Math.Abs` below.\r\n\r\nOf course, this would also mean to only adjust all the actual distances (`startDistance`, `endDistance`, `pressDistance`) in the last `if` when calling `Undo.RecordObject`.'"
3933,275743446,b'Use plane[1] for the position here?'
3933,275877781,b'typo:used.'
3933,275879096,b'I believe private bools should start with lower case. It would be good to [review the coding guidelines here](https://microsoft.github.io/MixedRealityToolkit-Unity/CodingGuidelines.html#naming-conventions).'
3933,275879742,"b'Please put braces after ifs like this here, and below.\r\n\r\n```\r\nif (condition)\r\n{\r\n  then stuff\r\n}\r\n```'"
3933,275880360,b'Braces.'
8424,481311928,"b'Is this being used anywhere? Maybe a good name would be ContainsRenderer? Or something akin to ""this primitive currently influences this renderer. Just because ""Check If Clipped"" might be interpreted as ""is this renderer straddling the clip vs not-clipped threshold?""'"
8424,481312768,"b""I'm always hesitant to use the hasChanged flag since you are unsure who else is mutating it. But, I can't think of any other way to achieve this optimization. """
8424,481424186,"b""I'll leave it up to you! Just was curious why it was added. It might be a good API to have for developers (or we might not want to bother supporting it). """
8424,483307941,"b""Just a heads up I don't think this was removed."""
8503,485883297,"b'This was the old (current?) behavior of the MaterialInstance. But, @vaoliva may have addressed this with her latest changes?'"
8739,499726420,"b'I found having a larger range (-10, 0) provided some ""crisper"" results. But, I haven\'t spent time to see what other effects a larger bias could have.\r\n\r\nOne ""end user"" suggestion would be to have the range be positive then negate the bias in the shader (since it\'s weird to think in negative biases). But, this suggestion is totally up to you.'"
8739,499729375,"b'Also the bias defaults to zero, so when a user turns on _EnableSSAA so they don\'t see an immediate change. Might be nice to have a sane ""default value"" other than zero.'"
7440,502036779,b'Is this where we want the constant buffer to end? I would assume we also want to include properties from below (ie _RefractiveIndex though _ProximityLightOuterColorOverride). You might need to move the properties in the _DIRECTIONAL_LIGHT block out of the constant buffer since they are already in their own constant buffer. '
7440,502043883,"b'Th batcher is new to me as well (so I\'m not positive on what to add) but looking at the [documentation ](https://blogs.unity3d.com/2019/02/28/srp-batcher-speed-up-your-rendering/) under ""\xe2\x80\x9cPer Material\xe2\x80\x9d variables"" it says: \r\n\r\n`First, all \xe2\x80\x9cper material\xe2\x80\x9d data should be declared in a single CBUFFER named \xe2\x80\x9cUnityPerMaterial\xe2\x80\x9d. What is \xe2\x80\x9cper material\xe2\x80\x9d data? Typically all variables you declared in the \xe2\x80\x9cshader property\xe2\x80\x9d section. That is all variables that your artist can tweak using the material GUI inspector.`\r\n\r\nSo any variable that\'s in the inspector (per material tunable) should be between the CBUFFER START and END macros. Note, some of the members are ""global"" like the directional light parameters. So they do not need to be in the constant buffer afaik. '"
7440,502514096,b'Should this material be included?'
7440,502649954,b'With the latest changes I see this shader reporting:\r\n\r\n![image](https://user-images.githubusercontent.com/13305729/95627216-a487c000-0a30-11eb-8832-5a3518d7fc4e.png)\r\n\r\nThat might be due to some of the properties being conditionally defined in/out. We may have to remove those preprocessor definitions. ie:\r\n\r\n`#if defined(_HOVER_LIGHT) || defined(_PROXIMITY_LIGHT) || defined(_BORDER_LIGHT)`\r\n            `fixed _FluentLightIntensity;`\r\n`#endif`\r\n\r\nbecomes\r\n\r\n`fixed _FluentLightIntensity;`'
7440,502650161,"b""This nested buffer within the per material constant buffer might not be supported? I'm not 100% sure, but would be surprised if it is.\r\n"""
8804,505718170,b'We could also do it when this menu item is invoked? https://github.com/microsoft/MixedRealityToolkit-Unity/blob/06a06778e38da622b37cc299a93f16e143b7bdeb/Assets/MRTK/Core/Inspectors/MixedRealityStandardShaderGUI.cs#L781 '
8804,505718792,"b'Also, here is the relevant check to see if the conversion is required: https://github.com/microsoft/MixedRealityToolkit-Unity/blob/06a06778e38da622b37cc299a93f16e143b7bdeb/Assets/MRTK/Core/Inspectors/MixedRealityStandardShaderGUI.cs#L820 '"
8739,509785809,"b'```suggestion\r\n            public static GUIContent mipmapBias = new GUIContent(""Mipmap Bias"", ""Degree to bias the mip map. A larger negative value reduces aliasing and improves clarity, but may decrease performance"");\r\n```'"
8739,509786771,"b'nit: we might want to grey out (and disable) ` materialEditor.ShaderProperty(enableTriplanarMapping, Styles.enableTriplanarMapping);` option above if `PropertyEnabled(enableSSAA)` is true since the two are mutually exclusive in the shader.\r\n'"
8739,509787052,b'nit: I think this whole block is aligned a little too far to the right.'
8842,511160050,"b'```suggestion\r\nFinally, add a [`ClippingBox`](xref:Microsoft.MixedReality.Toolkit.Utilities.ClippingBox) and `SecondClippingBox` component to your scene and specify the same Renderer for both boxes. The Renderer should now be clipped by both boxes.\r\n```'"
8842,511160293,b'Nice! \xf0\x9f\x91\x8d '
8842,511168486,"b""Love this scene! I saw some minor performance issues when running on HoloLens 2. But since this scene is geared towards being a stress test, I think it's fine. I took a peek in the frame debugger and verified everything is instancing as expected."""
8812,512237867,"b'It looks like the text in this image still says `Upgrade MRTK Standard Shader for Lightweight Render Pipeline`, could you update it?'"
8812,516178575,b'Could you re-comment out this line so that the shader works with the built-in render pipeline by default?\r\n```suggestion\r\n            //#define _RENDER_PIPELINE\r\n```'
8812,516180223,"b'Could you change this line so that the shader works with the built-in render pipeline by default?\r\n```suggestion\r\n            Tags{ ""RenderType"" = ""Opaque"" ""LightMode"" = ""ForwardBase"" }\r\n```\r\n\r\n'"
8812,516180298,b'Could you re-comment out this line so that the shader works with the built-in render pipeline by default?\r\n\r\n```suggestion\r\n            //#define _RENDER_PIPELINE\r\n```'
227,80230235,"b""Agreed, but we also use keyword.ToLower() as well in the Keyword Manager, and I'll remove it there as well.\n\nThis class also needs to get the material instance on start, and got grab the components when the keyword is recognized.\n"""
227,80230546,"b""Intentionally left uninitialized.  Responses are set in the Inspector window of the Editor.\n\n(I'll add comments and update the documentation)\n"""
227,80230802,"b""Agreed.  I had just kept what was already there. I'll update accordingly \n"""
227,80232080,"b'I thought about expanding this a bit, but I wanted to discuss this a bit more with the community.\n'"
227,80232336,"b'I thought about that, but I wanted to include the examples of usage in the methods to help new contributors understand how to use and implement in their own classes.\n'"
227,80233011,"b'I assume you mean the formatting here as well? \n\nSorry about all of these, it\'s difficult when your companies formatting rules differ from standard default haha.  I pretty much had to do all the formatting by hand. (Although isn\'t there a way to enforce this in the project settings in VS? Not sure)\n\nAs for the `keyword.Equals(""String"")` I just wanted to show an example of usage inside the virtual methods. (People should be overriding these anyway)\n'"
227,80235459,"b""From my understanding any contributions to the HoloToolkit namespace requires you to add this, regardless of employment status (Technically they own everything according to the CLA you're required to sign before being allowed to add anything to the repository).  But because this file is not in the namespace, I'm also unsure. @NeerajW or @jwittner could you clarify this for us?\n"""
227,80304568,"b'Renamed to ""ProcessTap""\n'"
227,80304741,b'Intentionally kept it a bit vague so we could update it later as more people commented on the nature of the changes requested.\n\nAny suggestions are welcome!\n'
227,80304779,b'Great Idea!\n'
227,80304884,"b'This does not remove the ability to hook keyword functions, just changes the implementation of how to do it. See Interactable.cs or SphereKeywords.cs for KeywordRecognized(string)\n'"
227,80305781,b'This is used in the test scenes. Was FocuesedObjectReciever.cs but renamed to ChangeColorOnFocus.cs\n'
227,80306809,b'I agree. The code is unchanged from the original file FocuesedObjectReciever.cs this file was renamed from and probably should be addressing in a separate PR or Issue in the main branch of the HTK.\n\nSee issue https://github.com/Microsoft/HoloToolkit-Unity/issues/236\n\n```\n -    private void Start()\n -    {\n -        material = GetComponent<Renderer>().material;\n -        originalColor = material.color;\n -    }    \n```\n'
227,80307055,b'It is renamed from SelectedObjectMessageReciever\n'
227,80307257,"b'This class was also renamed from SelectedObjectMessageReciever.cs, and probably should be addressed in a separate PR or Issue in the main branch of the HTK.  See issue https://github.com/Microsoft/HoloToolkit-Unity/issues/236\n'"
227,80307905,"b'Initializing field by its default value is redundant.  If we had exposed this field in the Inspector, then I can understand the need to keep it.\n'"
227,80308873,"b""See latest PR commits.\n\nI created a warning method in GazeManager that throws the message about the deprecation.\n\nIf it was between only these two, I'd vote Option 1.\n\nOption 2 sounds a bit more complicated.  It may be hard new programmers to follow.  I'd also rather see the SendMessage calls be put into the separate partial class, to let people understand that the pattern is not generally recommended.\n"""
227,80309579,b'Will do!\n'
227,80310877,b'I agree.  But we should address that there are currently 4 meta files that keep getting regenerated because they were not properly added in the main branch. Issue https://github.com/Microsoft/HoloToolkit-Unity/issues/235\n\ntwo .fbm/templates.meta files for the cursor\nAssets/HoloToolkit/Input/Plugins.meta\nAssets/HoloToolkit/Scripts/Microphone.meta\n'
227,80320684,b'This is required class that is needed to facilitate the changes of the PR.\n'
227,80320872,"b""It's encouraged to use `for` instead of `foreach` in [Unity Performance Considerations/General CPU performance tips/Basics](https://developer.microsoft.com/en-us/windows/holographic/performance_recommendations_for_unity)\n"""
227,80321623,"b'Having them scattered around the scene may not be such a good idea and could make it quite hard to find. The class is also includes ""Manager"" in the name, which usually suggests that it\'s the only one of its kind.\n'"
227,80321864,"b""Could you elaborate a bit more?\nWhat is it that you don't see in the Inspector?\n"""
227,80322731,b'I like both.\n'
227,80322876,"b""That's a good point.\nI've already discussed splitting some of this into a separate PR. This class seems like a good candidate.\n\n[UnityEvents were also taken into consideration](http://jacksondunstan.com/articles/3335) for removal and replacement with the delegate events and helps tie in the pattern nicely with the other input methods from gaze and gestures.\n"""
227,80323161,"b""I definitely see your point from a designers point of view.  Lets see if we can keep the existing functionalities you're talking about while while using the delegate events.\n\nSee:\nhttp://jacksondunstan.com/articles/3335\n"""
227,80477819,"b""The desire to let designers use the Inspector to set up Events this way is great for doing quick prototyping, but isn't necessarily the best practice in a production environment.\n\nI've already discussed separating this out as a new PR and trying to get that same functionality (assigning events in Inspector) without using Unity Events. \n\nFor reference:\nhttp://jacksondunstan.com/articles/3335\n"""
227,80479573,"b""Initialization is redundant.  The value assigned is never used and overwritten by the InteractionSourceLocation.\n\nIf this doesn't output a valid vector3 then we would want to fix InteractionSourceLocation.\n"""
227,80481842,"b""Ahh, I see.\n\nYes, renaming it might be best if used in this way.\n\nAlthough the idea of having many scattered around the scene doesn't sound very good.  Sometimes things can get buried and makes it harder for new developers/designers to find.\n\nWe should be able to keep this as a manager, and have all the keywords in one place, while keeping the functionality you described about gazing at objects and enabling their keywords.\n"""
227,80483139,b'I think we already discussed finding a way to keep the functionality of assigning Events in the Inspector elsewhere.\n'
227,80490336,"b""That is true, but this loop is embedded in the update loop, and we'll need to iterate this array every frame.  It might be best to keep it as a for loop to avoid any memory allocations during every frame.\n\nThis could potentially have a big impact of performance if we were to have a fairly large array, although, I think when it comes down to it, testing this and doing a study to see exactly what the performance impact would be might be best.\n"""
227,80490420,"b""That is true, but this loop is embedded in the update loop, and we'll need to iterate this array every frame. It might be best to keep it as a for loop to avoid any memory allocations because this iterates every frame.\n\nThis could potentially have a big impact of performance if we were to have a fairly large array, although, I think when it comes down to it, testing this and doing a study to see exactly what the performance impact would be might be best.\n"""
227,80529798,"b'Short answer, yes it is doable. \n\nLong answer, who wants to write it? lol.\nThere are a few examples on the web and in the unity asset store.\n'"
227,80547648,"b'No. See http://jacksondunstan.com/articles/3335\n\nAlso, [Interfaces are a ill advised](https://developer.microsoft.com/en-us/windows/holographic/performance_recommendations_for_unity)\n\n>  Interfaces in particular are much slower than a direct call.\n'"
227,80551010,"b""Okay, I'll be sure to keep this in mind in the future.\n"""
227,80551271,"b""@stbertou Just so you know, these changes will most likely not make it through the PR, but it is something I'm looking at improving in the future.\n"""
227,80555266,"b""yea, I'm not sure. I think some cold hard data that can back this up would sway any opponent to the idea.\n"""
234,80563050,b'Good call!\n'
240,80684275,b'Nit: private\n'
240,80684305,b'Nit: private\n'
240,80684399,"b'Nit: private, redundant bool initialization.\n'"
240,80684662,b'Nit: private\n'
240,80684687,b'Nit: private\n'
240,80684703,b'Nit: private\n'
240,80684805,b'Nit: private\n'
240,80684860,b'Nit: public\n'
240,80685010,b'update should also be explicitly private\n'
240,80685270,b'Nit: private\n'
241,80685727,b'Nit: private\n'
241,80685783,b'Nit: private\n'
227,80702735,b'Strange I got wildly different results using [this test method](http://jacksondunstan.com/articles/3335).  \nHow are you calculating your performance?\n\n| Num Args | Num Listeners | C# Event Time (ms) | UnityEvent Time (ms) |\n| --- | --- | --- | --- |\n| 0 | 1 | 246 | 3499 |\n| 0 | 2 | 1026 | 5299 |\n| 0 | 3 | 1696 | 7001 |\n| 0 | 4 | 2243 | 8661 |\n| 0 | 5 | 2714 | 10367 |\n| 0 | 6 | 3215 | 12047 |\n| 0 | 7 | 3720 | 13746 |\n| 0 | 8 | 4223 | 15512 |\n| 0 | 9 | 4804 | 17344 |\n| 0 | 10 | 5330 | 19025 |\n| 1 | 1 | 246 | 5357 |\n| 1 | 2 | 727 | 7361 |\n| 1 | 3 | 1392 | 9330 |\n| 1 | 4 | 1874 | 11410 |\n| 1 | 5 | 2396 | 13366 |\n| 1 | 6 | 2887 | 15267 |\n| 1 | 7 | 3361 | 17300 |\n| 1 | 8 | 3829 | 19177 |\n| 1 | 9 | 4323 | 21144 |\n| 1 | 10 | 4839 | 23292 |\n| 2 | 1 | 250 | 6604 |\n| 2 | 2 | 780 | 9457 |\n| 2 | 3 | 1442 | 11168 |\n| 2 | 4 | 1910 | 13394 |\n| 2 | 5 | 2432 | 15593 |\n| 2 | 6 | 2913 | 17807 |\n| 2 | 7 | 3427 | 20037 |\n| 2 | 8 | 3907 | 22321 |\n| 2 | 9 | 4446 | 24620 |\n| 2 | 10 | 4944 | 26835 |\n'
227,80708674,"b""I'm also inclined to also just test out raycasting objects to call a GetComponent().Tapped(); method as well. (at lest that is also debuggable unlike Unity Events)\n\nI agree, when subscribing to lots and lots of listeners definitely sees a performance hit, but not nearly as much as Unity events. Keep in mind that my current implementation only subscribes to events `OnEnable` and unsubscribes `OnDisable`.\n\nAlthough, I don't really see this being a problem for most developers, I _could_ see a problem for devs that are using lots and lots of intractable objects in the scene at once.  But then again, why would you do that knowing you're on a mobile device?  Goes back to designing good applications for your target  platform.\n"""
227,80718038,"b""Yes, but I don't think older comments update properly in the comments thread.\n"""
227,80720638,"b""True, this is an opinion of mine, but if I could just do something in the Editor, I'd much prefer it to coding.  But if doing something in the Editor effects the performance of my application (because of the nature of our platform) vs coding it, I'll take the coding over editor ease of use.\n"""
227,80749796,"b""Ah, sorry I must have been confused.  I'll take a look at this and compare notes.\n"""
227,80754534,b'https://forum.unity3d.com/threads/custom-ui-event-system-revamped.353544/\n\nLooks pretty cool. Open source as well.\n'
227,80760930,"b""What's the rest of the setup?  You've also got prefabs and such.  I'm not sure what goes on there and what those scripts look like either.\n\nAlso it seems like we're only measuring the speed at which we're calling the SendMessage but not the actual time it takes for the receiver to get the message.\n"""
227,80769119,"b'I modified the test to include the SendMessage times.  Simply create an empty scene and put this on the camera. delete the directional light. press play.\n\n```\nusing System;\nusing System.Diagnostics;\nusing UnityEngine;\nusing UnityEngine.Events;\n\npublic class TestScript : MonoBehaviour\n{\n    private const int NumReps = 10000000;\n    private const int MaxListeners = 1;\n    private const int MaxArgs = 3;\n\n    [Serializable]\n    private class IntEvent1 : UnityEvent<int>\n    {\n    }\n\n    [Serializable]\n    private class IntEvent2 : UnityEvent<int, int>\n    {\n    }\n\n    private event Action csharpEv0;\n    private event Action<int> csharpEv1;\n    private event Action<int, int> csharpEv2;\n    private UnityEvent unityEv0 = new UnityEvent();\n    private IntEvent1 unityEv1 = new IntEvent1();\n    private IntEvent2 unityEv2 = new IntEvent2();\n\n    private string report;\n\n    private void Start()\n    {\n        Stopwatch stopwatch = new Stopwatch();\n        long[,] csharpEvTimes = new long[MaxArgs, MaxListeners];\n        long[,] unityEvTimes = new long[MaxArgs, MaxListeners];\n        long[,] sendMsgEvTimes = new long[MaxArgs, MaxListeners];\n\n        for (int numListeners = 0; numListeners < MaxListeners; ++numListeners)\n        {\n            csharpEv0 += NoOp0;\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; ++j)\n            {\n                if (csharpEv0 != null)\n                {\n                    csharpEv0.Invoke();\n                }\n            }\n            csharpEvTimes[0, numListeners] = stopwatch.ElapsedMilliseconds;\n\n            unityEv0.AddListener(NoOp0);\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; ++j)\n            {\n                unityEv0.Invoke();\n            }\n            unityEvTimes[0, numListeners] = stopwatch.ElapsedMilliseconds;\n\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; j++)\n            {\n                SendMessage(""SendAMessage"", SendMessageOptions.DontRequireReceiver);\n            }\n            sendMsgEvTimes[0, numListeners] = stopwatch.ElapsedMilliseconds;\n        }\n        for (int numListeners = 0; numListeners < MaxListeners; ++numListeners)\n        {\n            csharpEv1 += NoOp1;\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; ++j)\n            {\n                if (csharpEv1 != null)\n                {\n                    csharpEv1.Invoke(11);\n                }\n            }\n            csharpEvTimes[1, numListeners] = stopwatch.ElapsedMilliseconds;\n\n            unityEv1.AddListener(NoOp1);\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; ++j)\n            {\n                unityEv1.Invoke(11);\n            }\n            unityEvTimes[1, numListeners] = stopwatch.ElapsedMilliseconds;\n        }\n        for (int numListeners = 0; numListeners < MaxListeners; ++numListeners)\n        {\n            csharpEv2 += NoOp2;\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; ++j)\n            {\n                if (csharpEv2 != null)\n                {\n                    csharpEv2.Invoke(11, 22);\n                }\n            }\n            csharpEvTimes[2, numListeners] = stopwatch.ElapsedMilliseconds;\n\n            unityEv2.AddListener(NoOp2);\n            stopwatch.Reset();\n            stopwatch.Start();\n            for (int j = 0; j < NumReps; ++j)\n            {\n                unityEv2.Invoke(11, 22);\n            }\n            unityEvTimes[2, numListeners] = stopwatch.ElapsedMilliseconds;\n        }\n\n        report = ""Num Args|Num Listeners|C# Event Time (ms)|UnityEvent Time(ms)|SendMessage Time(ms)\\n------------ | ------------- | ------------- | ------------- | -------------\\n"";\n        for (int i = 0; i < MaxArgs; ++i)\n        {\n            for (int j = 0; j < MaxListeners; ++j)\n            {\n                report += i + ""|"" + (j + 1) + ""|"" + csharpEvTimes[i, j] + ""|"" + unityEvTimes[i, j] + ""|"" + sendMsgEvTimes[0, j] + ""\\n"";\n            }\n        }\n    }\n\n    private void OnGUI()\n    {\n        GUI.TextArea(new Rect(0, 0, Screen.width, Screen.height), report);\n    }\n\n    private static void NoOp0() { }\n    private static void NoOp1(int a) { }\n    private static void NoOp2(int a, int b) { }\n    private static void SendAMessage() { }\n}\n```\n\n| Num Args | Num Listeners | C# Event Time (ms) | UnityEvent Time(ms) | SendMessage Time(ms) |\n| --- | --- | --- | --- | --- |\n| 0 | 1 | 257 | 3621 | 2015 |\n'"
227,80782357,"b""@darax  A couple of things.\n\nWhy is the time constantly increasing in your test results?  Shouldn't we only be counting the time for each frame, not for the aggregate of all the frames since we started?\n\nKeep in mind that realistically none or most of these events messages will not be called _every_ frame.\n\nI noticed you're starting the timer before figuring out which random object to send it to. This may also skew your results.  We only want to know the time for each of our implementations.\n"""
227,80798447,"b""Nice catch on the SendAMessage!  ~~I'll have to update that~~. (Code snippit above updated!)\nYes, I also realized that I only had one listener for the sendMessage, and I wasn't sure how to add more listeners for it so you may want to x20 to it (I'm just kidding, that's no way to get the right value! \xf0\x9f\x98\x86). That's why I really liked your test bed better and made a few changes as well.  I counted the time it took when we send the message, to when we receive it.\n\nMilliseconds were 0 for only one listener, so I changed it to ticks of our stopwatch. (Which also means the perf really doesn't matter unless we're calling 100's at once)\n"""
227,80907262,"b""Haha, that's actually how I started out in Unity. I was just a designer playing with values in the inspector!  Then I got curious... too curious haha!\n\nbtw check this out: \nhttps://forum.unity3d.com/threads/custom-ui-event-system-revamped.353544/\n\nIt follows the discussed design pattern while enabling designers to wire up things in the Inspector.  Looks pretty cool. Open source as well.\n"""
227,80928598,"b""Can't really make the compile errors surface with `[obsolete]` in everyone's code, but I can at least throw the warning every time someone throws `OnSelect`, `OnGazeEnter`, and `OnGazeLeave`.\n"""
227,80963311,b'I was probably going to close the PR and open a new one to clean up some of this for easier review.  This was mainly for starting the discussion and letting people comment of the proposed changes.\n'
227,80963418,b'Will do!  Sorry I thought I caught all those guys\n'
227,80963539,b'I agree. These were mainly to show examples of how people may use this in the future.\n'
227,80971607,"b""Yeah, I still don't think my implementation quite works.  I'm still doing some adjustments to ensure we're getting the correct times. I was starting to see some strange numbers that didn't quite make sense.  I also want to get rid of the co-routine. \n"""
227,80981438,"b'Still a bit on the fence:\nhttp://jacksondunstan.com/articles/3043\n\nOne thing to keep in mind though:\n\n> Now that we\xe2\x80\x99ve established which is faster\xe2\x80\x94interfaces\xe2\x80\x94the question becomes: should you bother? Interfaces are definitely more work to set up, harder to read, more error-prone, and more difficult to integrate into your code. The percentages faster are impressive, but will you save a lot of total CPU time? The above test results are measured in milliseconds per 100 million callback calls. That\xe2\x80\x99s clearly way more than you\xe2\x80\x99ll have in any reasonable game or app.\n'"
227,80982892,b'ohh also this was a good read too http://www.codeproject.com/Articles/468967/Interfaces-vs-Delegates\n'
227,80991017,"b""Here is the latest version of my perfTest I modified from @darax \n\n[perfTests.zip](https://github.com/Microsoft/HoloToolkit-Unity/files/499020/perfTests.zip)\n\nI think it's important to note, that even at 1000 listeners all 3 methods never take more than a millisecond.\n\nWhile I'm still on the fence about Interfaces vs Delegates, I think it's still important that we move away from SendMessage\n"""
245,81128611,b'Nit: Could you put the`!UnderstandingCustomMesh.isImportActive &&` on the next line?\n'
245,81128763,b'Nit: should be `IsImportActive`\n'
245,81129848,b'Nit: should be `maxFrameTime`\n'
245,81130171,"b""Nit: If this class is public, it should belong in its own file.  If it's private, then make it explicit.\n"""
245,81130388,b'Nit: local variables need to be put on their own lines.\n'
245,81130850,b'Nit: remove extra new line\n'
245,81131700,b'Nit: Start and Update should probably be closer to the top of the class.\n'
205,81135369,b'I think a more descriptive name than go is also good.\n'
205,81135531,b'Could we add some single spaces between our fields and the tooltip of the next field please?\n'
205,81135670,b'Nit: `private void Update()`\n'
205,81135951,b'Nit: please use explicit types\n'
205,81136576,"b'Nit: Instead of just go, could we rename this to be a bit descriptive? Like `rotateGo` or `goToRotate`?\n'"
244,81187296,b'That was also my concern with using the Interface.\n'
244,81187912,b'I left this in mostly to demonstrate the differences between them.  Most likely will be removed when we make a decision on which to use.\n'
244,81188509,"b""So you'd like to include the tapCount with the delegate event being thrown?  I'm not sure what you mean here.\n"""
244,81188793,"b'No one would need to edit this class, this would be a base class that others can inherit from and override the methods as needed.  Will most likely be renamed to `Interactable.cs` if we decide to use delegate events.\n'"
244,81189113,"b'This is an example class, unlike `InteractableViaEvents.cs`, showing how you would implement the Interface.  Users would be writing their own classes that follow this pattern, and this class would most likely be removed in the final version.\n'"
248,81191062,"b""I didn't want to spam this in case the reference is still null for a few frames.\n"""
244,81192001,"b""That's what I forgot! Thanks\n"""
244,81194061,"b'That\'s the mystery of SendMessage (exactly why I\'ve requested we remove these).\nThey get called by SendMessage(""OnSelect"").\nIf we move this into a new class we\'d have to make sure that class was also included on the same GameObject as our `GestureManager.cs` and `GazeManager.cs` See [Unity Documentation](https://docs.unity3d.com/ScriptReference/GameObject.SendMessage.html)\n\n> Calls the method named methodName on every MonoBehaviour in this game object.\n'"
244,81195529,"b""Might want to make this change in the main branch as well.  I wanted to fix the subtraction of delegate errors there as well because we're getting a `System.Action` for ManipulationStarted, completed, canceled. (Which I don't think supports delegate subtraction).\n"""
248,81197258,"b'We could count count 5 or 10 frames before throwing the error, what do you think?\nOr we could change Awake to Start like @jomalli suggested.\n'"
245,81199534,"b""Looks like when we call `MeshData()` we're making a new `Mesh` anyway.  I think a public property with a private getter might be a good idea.\n\nThen again does `MeshObject` need to be public anyway? seems like every time we go through a new sector we're overwriting this value anyway.\n\nMight not hurt to add each `MeshObject` we create to some sort of public list or something in case anyone wants to get them.\n"""
244,81207615,"b""wouldn't we just overwrite this value when we search our dictionary for it in\n`if (!interactableCache.TryGetValue(FocusedObject, out newInteractable))` anyway?\n\nWhat would be the benefit?\n"""
244,81209965,"b""I'm not sure exactly what tapCount represents. Is it the cumulative taps or a period of time?\n"""
244,81210215,b'Fixed with caching update\n'
244,81210617,"b'True, they really could! haha.\n\nYeah, I made sure to go back and look over those test scripts.\n'"
244,81211566,"b""Not sure if we want it to be public though.\n\nAlso, you can't be pass a property through the `out` of a method. It would have to be a field. \n"""
248,81341064,"b""Even better idea!  (I can't believe I didn't just do that simple solution!) \xf0\x9f\x98\x86\n\nThanks @keveleigh !\n"""
245,81350646,b'Makes sense to me.\n'
241,81600744,"b""Would we want to check if focus has changed here so we don't tap on the object if it's not our focused object?\n"""
250,81604454,"b'very slow.  This was part of the discussion in the new branch.  Besides, you can still bind delegate/events in editor as well. ([with some work of course](https://forum.unity3d.com/threads/custom-ui-event-system-revamped.353544/))\n'"
257,81748357,"b""Nit: please make all unity methods explicitly private.\nNit: You can just remove `Start()` if you're not using it anyway.\n"""
257,81748407,b'Nit: explicit `private void Update()`\n'
257,81748547,b'Nit: use explicit types\n'
257,81748713,"b""Nit: Cache your `GetComponent<T>()` values in `Awake` or `Start`.\nNit: Also, be sure to add Null checks for the component you tried to get before trying to access a field or property value from them.\n\nI wouldn't suggest using Unity UI.  I'd like to see if we can do this useing a Quad primitive.\n"""
257,81749358,b'Nit: replace `/ 2` with `* 0.5f`\n'
257,81749517,b'Nit: either add formatting with parenthesis or break after `||`\nNit: replace `/ 2` with `* 0.5f`\n'
257,81749728,b'Nit: `0.0f`\n'
257,81750461,b'Nit: Rename to `TargetObject` and maybe make it a property with a `{ get; set; }`\n'
257,81750542,b'Nit: replace `/ 2` with `* 0.5f`\n'
257,81750556,b'Nit: replace `/ 2` with `* 0.5f`\n'
257,81750655,b'Nit: use explicit types\n'
257,81750694,b'Nit: use explicit types\n'
257,81751713,"b""Nit: cache the `targetPositions` transform in either `Start` or `Awake` but you shouldn't need to use `GetComponent<Transform>()` to get your objects `transform` anyway.  Just use `targetObject.transform.position`.\n"""
257,81753285,"b""I'm not entirely sold with the name OnTop.  I think this should be a bit more descriptive. Like: RenderOnTop or RenderLast (since we're most likely putting it at the end of the render queue).\n"""
245,81758060,b'Nit: private\n'
245,81758240,b'Nit: private\n'
257,81760520,"b'Nit: Rename `IndicatorMarginPercentage` to `indicatorMarginPercentage`, make it private and add `[SerializeField]` attribute tag so they still show in Inspector window.\n'"
257,81761459,"b""At the beginning of our update loop we should check to make sure `TargetObject` is valid so we don't do extra work, turning off our indicator and return if it's null.\n\n```\nif(TargetObject == null)\n{\n    //Turn off our indicator\n    return;\n}\nelse\n{\n    //Turn on our indicator\n}\n```\n"""
257,81835244,"b""Just drop the `f`.  I couldn't tell the types from just the PR. haha\n"""
250,81841088,"b""If our focus has changed we wouldn't want to process the tap on the last thing we were looking at, correct?\n"""
250,81846540,"b""This is mainly for Input from the editor or companion apps I think. So OnRecognitionEnded and OnRecognitionStarted started has nothing to do with input from the HoloLens.  Because we're in an update loop, we'd only want to process the Tap if we've got a new focused object or if our manipulation has not yet begun.\n"""
250,81847228,"b""Something else to keep in mind is that this is in a LateUpdate loop, so if we didn't check if the focused object was changed we'd get tap and pressed events thrown every frame.\n"""
250,81971030,b'fixed with latest changes.\n'
257,81971509,"b'@NeerajW  The `[SerializeField]` attribute shows private fields in the Inspector.\n\nIn either case, I agree this should probably stay a public property with a getter/setter.\n'"
257,81971603,b'See my comments in the previous review. The [SerializeField] attribute shows private fields in the Inspector and the indicator margin percentage may only need to be set once per application.\n'
257,81972319,"b""good to keep this in update.  @mister-liss we should also be turning on and off our target indicator renderer here as well if we don't have a current `TargetObject`.\n"""
260,81973217,b'nit: private\n'
260,81973277,b'nit; private\n'
260,81973391,b'Might be called outside the class?\n'
257,81973897,"b""sure, but you're in a loop, so any speed increase is good.  Remember the HoloLens is technically a mobile device.  Also, using division could potentially get a div by zero error.\n"""
257,81975381,"b""I think keeping this a public property would be good in case people want to overwrite the TargetObject at runtime.  Also, if it's a property then you will not be able to assign the object in the inspector window nor use the Tooptip.\n"""
257,81976042,"b'This should probaly have a more descriptive name as well like ""OutOfScreenIndicatorTest"" or ""HeadsUpDirectionTest"" .unity\n'"
257,81976323,"b'calling `this.` is redundant, and can be removed in file.\n'"
250,82603809,b'Not removed.  Was renamed to `keyboardSelectKey` and protected by `#if UNITY_EDITOR || UNITY_STANDALONE`\n'
250,82604150,b'Will make public again.\n'
250,82604482,"b""Partly because `OnTap` and `OnRecognitionStarted` gets called _every_ frame if we don't.\n\nDuring testing this was able to fire without issues no matter which button was pressed.  I was able to get the Tap to register without fail.  This may have been because of the `GetMouseButtonUp()` but `GetMouseButtonDown()` calls every frame the button is pressed.\n\nSorry, the last time I used the emulator it worked this way, but that was a loong time ago.  Haven't used it recently.\n\nI'd almost like to see the ability to do like the keyboard key selector and assign a custom mouse button activator (or combination thereof) and use that. It would allow more customization for developers.\n"""
250,82605039,"b""I used the all the scenes in the test folder to test functionality.  \n\nHaven't tested with clicker yet. I was hoping to have done that last week, but Hurricanes always ruin the party. haha.  I'll do it today.\n"""
250,82606233,"b""yeah, you're correct. I was following the naming conventions from the previous pattern. Will  rename.\n"""
250,82606692,"b""The only difference is we're filtering only for hand sources\n"""
250,82607744,"b""Will do.  Although, I only copied this from what was already there in the GestureManager, I agree that I'm not entirely sure why we're checking this.\n\nEssentially, we're checking if we didn't have hands detected and setting our current hand state to the delegate's interaction source state.\n\nBut would't we always have a hand detected if we get a source pressed?  (especially for hands?)\nI can understand if we're using the clicker, or some other source, but the hands are pretty much always tracked.\n"""
250,82651942,"b""In the current Microsoft master neither hand nor clicker works in the GestureManipulator.unity scene.\n\nIn this PR, the test scene only handles hand manipulation. I'm updating to get both hand and clicker input. \n\nI can't seem to get the GestureSettings.ManipulationTranslate to recognize when I translate with the clicker.  Is this the correct behavior of GestureSettings.ManipulationTranslate?\n"""
205,82678402,b'I think a better name than just Example would be good. Like GameControllerTest.unity or something like that.\n'
205,82678490,b'You may want to revert this file. It is not needed for this PR.\n'
205,82785514,b'Good point.  We should probably put in a issue for those as well.\n'
266,83022072,b'Nit: extra space\n'
266,83022202,"b'Are we actually using Linq in this class?  If so, do we _need_ to?\n'"
205,83024005,b'Is this graphic setting change needed for this PR?\n'
289,83740032,b'Nit: Are we actually using Linq?\n'
250,83740640,b'good catch @darax \n'
250,83741347,"b""Sounds good to me. I'll update it.\n"""
250,83844820,"b""I'll do some hard testing on this to ensure that what you described isn't happening.  I'll let you know what I find. \n"""
250,83847485,"b""This prevents calculation when we're not the Focused Object during the update loop when there's multiple gesture manipulators in the scene.  Before, even though we're getting the `Interpolator` component on our game object and making that do our movement, we still perform the math calculations because we're changing the `Manipulating` flag true, even when we're not the Focused Object.\n"""
250,83860602,"b""Good catch @darax. You were right. I've updated this accordingly. Let me know what you think.\n"""
250,83905856,"b'I agree, it was left over stuff from the refactor.  Although, they were pretty useful when debugging.  It might be useful if we kept them and made it a public property with a private setter.\n'"
250,83923276,b'Normal finger manipulations are handled seperately by the `manipulationRecognizer` events. But we still need to get the current input source to get the correct manipulation positions during our manipulation.\n'
250,83924962,b'This was removed to prevent other interaction sources from interfering with the current manipulation.  Let me put it back and move it into the check for the `state.id`\n'
250,83929012,"b""@NeerajW I'm sure this will all change once the new input module is added.  This just fixes most things for now.\n"""
250,83933676,"b""@darax Ahh, I remember what they're used for. UX.  That way people can query to know if the cursor needs change when a source is detected or pressed.  (It's similar to how the HandsManager knows when to show/hide the hand icon)\n"""
260,84255450,b'Do we need to change the graphics settings for this?\n'
301,84475655,"b""While we're editing this file, could we make the Awake and LateUpdate methods private as well please?\n"""
301,84511299,b'Where does `CursorOnHolograms` get set?\n'
306,85744195,"b'lol, yeah this actually is in the SharingManagerConneced method.\n'"
306,85788110,b'Interesting that it gets removed after we raise the `Instance_SessionJoined` event.\n\nWe also never unsubscribe to `SharingManagerConnected` on line 128 either.\n\nWe should probably be unsubscribing to any/all of these events whenever we call OnDestroy.\n'
314,85927336,b'Maybe rename to UnetPlayer.prefab?  There might be others who have player prefabs already made.\n'
314,85927457,"b""Same thing with this class, or wrap it in a namespace so there won't be conflicts.\n"""
306,86182942,b'Nit: Extra line\n'
306,86183531,b'Keep in mind that the Singleton pattern is being updated due to the new input module https://github.com/Microsoft/HoloToolkit-Unity/issues/277\n'
316,86192597,"b'If this is only happening while in editor, would we want to surround the whole if statement?\n'"
306,86337482,"b""These should probably stay public, if they were already public.\nSorry, I just meant the things that weren't explicit.\n"""
306,86337546,b'Should stay public\n'
306,86337610,b'should stay public\n'
306,86337626,b'should stay public\n'
319,86542568,b'Missing licencing header\n'
319,86542653,b'Missing licensing header\n'
319,86543747,b'Does this trigger also call `gameObject.setActive(false)`?\nWe may want to deactivate this game object so colliders deactivate as well.\n'
319,86544248,b'could be a for loop because this is embedded in the update loop.\n'
319,86544714,b'Fix licencing header\n'
319,86608648,"b""I think it's a good idea to let developers figure out how they want to handle buttons and just have an example.\n"""
321,86768822,b'Might want to revert the EditorBuildSettings.asset\n'
319,86979804,b'Looks like the keyword is getting hashed?\n'
319,86979907,"b""Yeah I'm not so sure example scripts should be in the HoloToolkit namespace unless they're apart of the Toolkit itself.\n"""
319,86980380,"b""We used the object's layer to do this as well. Not sure how straight forward that is though.\n"""
319,87230869,"b""Not so sure I like this line, and those like it down below.  I wonder if there's a better way. Seems to be a lot of allocations in this block.  Too many anon methods.\n\nPotentially we could create a static delegate that can be reused between methods that use any one of our interface handler types.  It would nicer on the GC by reducing the number of delegate allocations.\n\nFor Example:\n\n```\n\n        private static readonly ExecuteEvents.EventFunction<ISourceStateHandler> OnSourceDetectedEventHandler =\n            delegate (ISourceStateHandler handler, BaseEventData eventData)\n            {\n                SourceStateEventData casted = ExecuteEvents.ValidateEventData<SourceStateEventData>(eventData);\n                handler.OnSourceDetected(casted);\n            };\n\n        private void InputSource_SourceDetected(object sender, InputSourceEventArgs e)\n        {\n            // Create input event\n            sourceStateEventData.Initialize(e.InputSource, e.SourceId);\n\n            // Handler for execute events\n            ExecuteEvents.ExecuteHierarchy(GazeManager.Instance.GazeTransform.gameObject, sourceStateEventData, OnSourceDetectedEventHandler);\n\n            // Pass handler through HandleEvent to perform modal/fallback logic\n            HandleEvent(sourceStateEventData, OnSourceDetectedEventHandler);\n        }\n```\n"""
319,87247281,"b""No worries, I wouldn't mind doing this work later on.\n"""
327,87583893,b'fixed.\n'
341,89188445,b'Probably should just remove this outright instead of commenting it out.'
341,89188652,b'Why change from protected to public?'
341,89188704,b'Nit: remove comment'
341,89189406,b'Nit: remove comment'
341,89189504,b'Nit: remove comments'
341,89190481,"b'See my latest changes to InputManager.cs for examples of how to avoid this anon method.\r\n\r\n```\r\nprivate static readonly ExecuteEvents.EventFunction<IFocusHandler> OnFocusChangedEventHadler =\r\n    delegate (IFocusHandler handler, BaseEventData eventData)\r\n    {\r\n        InputEventData casted = ExecuteEvents.ValidateEventData<InputEventData>(eventData);\r\n        handler.OnFocusChanged(casted);\r\n    };\r\n```'"
341,89190924,b'Why make a second singleton type class?'
341,89191161,b'Nit: Braces around if statements'
341,89191214,b'Nit: Braces around if statements\r\n'
341,89191257,b'Nit: Braces around if statements\r\n'
341,89191283,b'Nit: Braces around if statements\r\n'
341,89191367,"b""This file should be reverted. If you're unsure how to revert, then just clear out all the scenes in the build window."""
341,89191479,"b""Wonder how these got changed...\r\nWe should use the version you've got, as they're the correct settings."""
341,89191569,b'Please revert this file as well.'
341,89327359,"b""I'd just revert this, but it really depends on which GIT GUI you're using, or if you're just using GIT bash console, there's some typing involved.\r\n\r\nWouldn't be hard just to copy the string and put it where it belongs and commit that if you run into problems."""
341,89327728,"b""I'm not sure. I think @maxouellet and @paseb should weigh in."""
341,89336060,b'Nit: Braces around if statements.'
341,89336785,b'Do we really want to overwrite any `position` we get with `Vector3.zero`?\r\n\r\nSame questions for each override below.\r\n\r\nDoes this just reset everything?'
354,90521978,b'Nit: formatting'
354,90522106,b'Nit: more descriptive name than just Text. Could be ambiguous if used improperly. suggested name: `RecognizedText`'
354,90522311,b'Nit: System should be first.'
354,90522726,b'Nit: I know this is like this in the old version but I think we should rename `k` to be `key`'
354,90522891,b'Why use switch instead of if statement?'
354,90534948,b'Great explanation Tim!'
354,90651552,"b""I'd probably roll this back and let the other guy address it in his PR"""
354,90926856,b'(To answer your question) Any Unity methods should be either private or protected if inheriting from base class.'
354,90927152,b'This should be private'
354,91074598,"b'Just private.  Any Unity Methods are private unless overridden in a base class, then become protected.'"
354,91081543,"b""Good question, how are we handling other similar events throughout the new input system?\r\nI think it's fine the way it is, but if it doesn't match the pattern by @maxouellet then it should be updated to reflect that."""
354,91395027,b'Nit: Refactor to `using UntiyEngine.Windows.Speech;` in file.'
354,91395237,b'Nit: Refactor to `using UntiyEngine.Windows.Speech;` in file.'
354,91395570,b'Nit: remove `UnityEngine.Windows.Speech.`'
354,91395618,b'Nit: remove `UnityEngine.Windows.Speech.`'
354,91395809,b'Do we _really_ need Linq?'
354,91395950,b'Nit: remove `UnityEngine.Windows.Speech.`'
354,91950016,b'Please try to remove the Linq array per [Performance Recommendations ](https://developer.microsoft.com/en-US/windows/holographic/performance_recommendations_for_unity)\r\n\r\n> Do not use LINQ'
392,92180041,"b""This is enforced in another script: [Enforce Editor Settings.](https://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Editor/EnforceEditorSettings.cs)  I like that it enforces automatically instead of when the user deliberately applies settings.  It also ensure's we're using [visible meta files](https://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Editor/EnforceEditorSettings.cs#L23)."""
392,92180292,b'nit: braces'
392,92180492,b'nit: braces'
392,92181640,b'nit: explicit'
392,92181766,b'Nit: missing licensing header '
392,92181797,b'Nit: missing licensing header '
392,92181830,b'Nit: missing licensing header '
392,92181852,b'Nit: missing licensing header '
392,92185409,"b""I'm mostly just trying to point out there's two, and wanted to open discussion to which method is best.\r\n\r\nWhen in a development environment, where many people are regularly committing to shared repositories, it's best if the unity editor has both Serialization and Visible Meta files enabled.\r\n\r\nI can only see the usefulness of having binary when building final applications, but generally this is done by either one person, or an automated build agent.\r\n\r\nThe final assets get optimized by Unity during build time anyway."""
392,92199441,"b""I agree, that's why it's in the other class, because really these are not HoloLens specific editor settings."""
392,92231234,b'nit: remove empty line'
392,92231281,b'nit: empty line space'
392,92231340,b'nit: empty line space'
392,92231447,b'nit: empty line space'
392,92231464,b'nit: empty line space'
392,92231520,b'nit: empty line space'
392,92231602,b'nit: empty line space'
392,92231619,b'nit: empty line space'
399,92399187,b'nit: tab formatting'
399,92399384,b'nit: for instead of foreach and explicit vars'
399,92416914,"b""Oh, I must have misread the data type. My apologies. I think it's fine the way it is then with foreach if it's unavoidable. """
354,92633581,b'missing comment?'
354,92633987,"b""Nit: use TextMesh instead of uGUI.  Although really it doesn't matter since it's a test scene."""
354,92634090,b'nit: private'
354,92634292,"b""This is not a good way to change the color of a material. This method introduces memory leaks where and each renderer creates a [clone instance of the material who's color is being changed](http://answers.unity3d.com/questions/548420/material-memory-leak.html)."""
354,92635961,b'Which has a bug attached to it. https://github.com/Microsoft/HoloToolkit-Unity/issues/236\r\n\r\nSolution: [Cache the references to your materials and make sure you destroy them when done](http://answers.unity3d.com/questions/711611/materials-count-increases-in-memory-issue.html)'
354,92637171,"b""That's up to you.  Is this supposed to replace the old?"""
354,92675569,b'You should cache like this instead: `cachedMaterial = GetComponent<Renderer>().material` in Awake or Start.'
354,92675823,"b""This should be ` Destroy(cachedMaterial);` and called in OnDestroy or when finished using the `cachedMaterial`.\r\nI'm not sure calling this method is actually doing anything beneficial and is really only supposed to be used on assets you load using `Resources.LoadAsset();`"""
354,92677165,b'Not sure if `Resources.UnlaodAsset` will help here.  We should probably cache all the child renderers in a `material[]` on Start or Awake and destroy them when finished using this class.'
354,92816594,b'We should probably revert this back.'
354,92818425,"b'It\'s probably best to cache all the renderers here, and be sure to check/update the cache if children are added/removed. (forgive the brevity)\r\n```\r\nprivate MaterialPropertyBlock propertyBlock;\r\nprivate Renderer[] childRenderCache;\r\n\r\nprivate void Start()\r\n{\r\n    propertyBlock = new MaterialPropertyBlock();\r\n    childrenRenderCache = GetComponentsInChildren<Renderer>()\r\n}\r\n\r\npublic void OnSpeechKeywordRecognized(SpeechKeywordRecognixedEventData eventData)\r\n{\r\n    switch(keywords)\r\n    {\r\n        case ""reset all"":\r\n            for(int i=0; i < childrenRenderCache.Length; i++)\r\n            {\r\n                ChangeColor(childrenRenderCache[i], Color.white);\r\n            {\r\n            break;\r\n    }\r\n}\r\n\r\nprivate void ChangeColor(Renderer, Color color)\r\n{\r\n    // Do Color stuff\r\n}\r\n```\r\n'"
354,92822471,b'Will this be replacing KeywordManager.cs? (If so should we be removing it/Depreciating it to give others time to migrate over?)\r\n\r\nOr does this only exist on the object that will be executing the logic when the keyword is spoken?'
354,92829901,"b""No worries, yeah I agree we should skip the other review content and get back to it later.\r\nI don't mind trying to take a look at updating the material color changes in a separate PR"""
354,92830335,b'Absolutely'
354,92836940,b'I think the only thing blocking this PR is the ability to assign the GameObject and script method to trigger with each of the keywords without hard coding it in a class.\r\n![image](https://cloud.githubusercontent.com/assets/13334553/21238531/725bb4ce-c2d1-11e6-9427-5ef6d440515d.png)\r\n\r\nI think the only way to really do this is through a UnityEvent.'
405,92957277,b'Nit: missing braces'
354,93036219,b'We can probably remove if empty.'
354,93036302,b'Tab offset.'
405,93058415,b'Would it be beneficial to also make this public to enable the placement of an object right away?'
405,93058762,"b'Could we also either put everything on one line, or a new line after each comma?'"
405,93059459,"b'One more little nit, but this is just personal preference, explicit vars.'"
405,93059658,"b""Exactly, I've got a few instances where this is beneficial."""
405,93060776,"b'Not sure if I like the rename, `IsBeingPlaced` kinda makes more sense with the name of the class.'"
405,93062025,"b'Also, could we add in the comments how it would be useful to mark this true if you wanted to make the object placeable immediately?'"
405,93062422,b'Yeah good point.  Not sure if dragging is the correct verb here is all.  '
405,93062683,"b""What about `IsBeingEdited`? or `IsEditable`? (I don't favor the second option, though, because it'll flip all the logic)"""
405,93063295,"b'> Setting this true will place the object immediately.\r\n\r\nWhat about: ""Setting this to true will enable the user to place the object in the scene.""?'"
405,93065197,"b""I'm not sure if I follow.\r\n\r\nFlipping this bool only enables us to update the position of the `GameObject` during the update loop.\r\n\r\nThe only place we set the object's anchor is in `Start` and `OnInputClicked`."""
405,93067173,"b'""Setting this true will place object immediately"" makes it sound like the object will not be movable unless the user clicks the object again, but the way it\'s currently implemented will actually result in the opposite.'"
405,93068390,b'No worries @madvlad you rock dude. Thanks for submitting this PR.'
405,93241655,b'Ahh okay must have missed that.'
376,93324423,"b""Yeah I wasn't really sure where to go with that.  I'm open to suggestions but I'm not a fan of `1a, 1b, etc`"""
376,93338882,b'Haha I fail miserably at spelling.'
4775,297238287,"b""Yeah, i will add a header for this so we can tell versions apart.\r\n\r\nNote that i would rather get rid of this custom format ASAP and use glTF by default. I've got a branch with a proof-of-concept glTF exporter implementation, but can't say when this can be ready for use: https://github.com/lukastoenneMS/MixedRealityToolkit-Unity/tree/input_recording_gltf"""
4775,297303894,"b'Input animation format now has a simple header with a magic number (for identifying invalid files up front), a major and a minor version number. The rest of the file could change and we can decide to do versioning for backwards compatibility.'"
4775,296839345,b'Similar question that @Troy-Ferrell asked @davidkline-ms earlier'
4775,297238465,b'Fixed.'
4775,296180300,b'nit: align brackets'
4775,296842874,"b""Do you know if it's actually possible to be pinching if not tracked?"""
4775,297225928,b'done'
4775,297242242,"b'On the side of the input simulation this will never happen, because the hand device is destroyed when it stops tracking.\r\n\r\nFor the recorded input data itself, however, these are just separate animation tracks, there is no logic that prevents keyframes in the ""IsPinching"" curves when the ""IsTracking"" curve has a False value. It\'s not worth adding that kind of complication.\r\n\r\nNothing bad will happen when if you set the hand data to (isTracked=False, isPinching=True), the sim service just won\'t create a hand device and isPinching is ignored.'"
5248,304597182,"b""I tried pulling this branch and cannot seem to get a record working. In particular I get a nullreferenceexception for OnRecordingStarted & OnRecordingStopped. These should both be accessed via OnRecordingStart?.Invoke();\r\n\r\nAlso when I hit record/stop in the HandInteractionRecordArticulatedHands example scene, I don't see any file posted? \r\n\r\nAlso the materials in the HandInteractionRecordArticulatedHands example scene use the Unity standard shaders"""
5248,304815853,"b""Probably the input service data providers got messed up again, it happens all the time because MRTK doesn't have proper versioning ..."""
5248,304816363,"b""You should be able to fix it manually by setting the data provider types in the input system profile for the recording and playback services. I'll have a look after merging mrtk_dev."""
4211,281886088,"b'Might be good for me to clarify: are these poses a single frame, or a recording, over multiple frames? I was assuming multiple frames. For example it would be extremely useful to be able to record hands as a user is pressing a button, or for example accidentally grabs something.\r\n\r\nI can share example code for how I did this when I was prototyping -- what I had worked for me and correctly stored timings to ensure that hand frames were replayed at exact same speed as recorded.'"
4211,281886174,"b'What is the frame of reference here? Relative to world origin 0,0,0 using camera.forward? Or, is it relative to the camera?'"
4211,281972738,"b""Oh, this isn't the input animation recording feature yet. Here's the input animation branch:\r\nhttps://github.com/lukastoenneMS/MixedRealityToolkit-Unity/tree/hand_sim_playables\r\n\r\nI'll try to wrap the input animation branch up asap."""
4211,281974121,"b'Joint poses in ArticulatedHandPose are stored\r\n\r\n- in camera space\r\n- for the right hand\r\n\r\nFor the left hand they simply get mirrored. I added comments on the ArticulatedHandPose class yesterday to clarify, let me know if i should add something there.'"
4211,281976961,"b'A point of interest: JSON would be a bad choice for storing animation due to file size. Even with the somewhat less verbose Unity asset format the file size for hand animation is on the order of megabytes for just a few seconds of animation. This would add up quickly if we use it for test resources, so a binary format is highly desirable.'"
7375,383904910,b'This block is repeated in every (?) manager class. Can it be placed in a base class and eliminate the duplication?'
7375,384582646,"b""I'll take a look at this today"""
7375,384686961,"b""Okay, looking at this, I think that yes, we can do some de-duping here. I already have a few follow-up PRs to this one, so I'm going to propose this change is further investigated / implemented as part of an additional PR, as it's slightly outside the scope of this one in my mind.\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/issues/7416"""
5173,314510681,"b'>controller [](start = 16, length = 10)\r\n\r\nI think this should be controllerType (judging by how Debug.LogError is mentioning controllerType'"
5173,314511235,"b""Ah, I guess maybe the line before was just for creating a more debug-friendly message. I guess in this case it was weird to read a set and then a null check for something that wasn't just set.\r\n\r\n---\r\nIn reply to: [314510681](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5173#discussion_r314510681) [](ancestors = 314510681)"""
5173,314511477,"b'Yeah nevermind :)\r\n\r\n---\r\nIn reply to: [314511235](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5173#discussion_r314511235) [](ancestors = 314511235,314510681)'"
3773,278659467,"b"">IInputSimulationService [](start = 66, length = 23)\r\n\r\nJust for my own understanding, what was the reason for removing the IInputSimulationService from the InputSimulationService implementation?\r\n\r\nFrom a casual reader it seems like this implementation should implement the interface, so I'm curious why it's being removed."""
3773,278736854,"b""This looks like a confused merge due to the doc link attribute. I'll put it back."""
4211,281886447,"b'Curious, why do we need this, why did we not need this previously?'"
4211,281975590,"b""Previously the poses were all hardcoded in SimulatedHandPose.cs as static fields with initializers. Right now we still have a fixed set of supported gestures in ArticulatedHandPose.GestureId, but we could perhaps make that configurable at some point (not sure how that might work, i'd rather not do that now)."""
4697,290690095,"b""Nit: May as well move this to the line above so that our simulation and actual provider can be consistent (i.e. eye tracking status is always updated first, then eye gaze direction/position).\r\n\r\nEnd effect honestly shouldn't be anything but yeah"""
4697,290917132,b'Done.'
5822,319143219,"b'**Note**: ManipulationHandlerThrow test is currently broken by this, because the way hand velocity is calculated relies on UpdateVelocity being called no more than once per frame.'"
5822,319435786,"b""Fixed the throwing test. It was doing an additional WaitForFixedUpdate after releasing, which recomputes the hand velocity filtering and makes it deviate from the expected rigid body velocity. Previously this wasn't happening because the hand data update was blocked by the timestamps."""
6193,331094625,"b'Please add comment explaining why we do this. Note that I believe real reason identified by @keveleigh is that the camera movement is mapped to AXIS_3, and AXIS_3 happens to be the select trigger on WMR controllers'"
6783,353671226,b'nit: add comment for api docs: resets deltas to zero '
6783,353779201,b'Good catch!'
6822,359060149,b'Interesting. I wonder if this can break input simulation? Would be good to check that input simulation is still working after adding the base calls.'
6822,361221990,b'Why would this break input simulation? The hands interaction example scene worked for me in editor which uses this service for the input.'
5853,320509140,"b""Super nit: Move these into an else {} statement of resetHand - no need to set them if we're just gonna reset them to identity."""
5853,321693619,"b'It\'s just a UI script, the ""else"" case runs in, like, 99.999% of draw calls :)\r\nNo need to make it complicated IMO.'"
5853,320509731,"b'>// if (GUI.Button(position, KeyBinding.CodeToString(code.intValue))) [](start = 12, length = 68)\r\n\r\nNit: I think dead code that was commented out right?'"
5853,320718076,b'pls add doc  comment for this class'
5853,320718229,b'pls add doc comment for class'
4240,282545991,b'there should not be dependencies between services and platforms. was there a reason the WMR provider needed to be added?'
4240,282749845,b'resolved itself'
5853,320510460,"b""If there's any way to preserve the file history here that would be great -this is showing up as a pure add/delete (meaning you lose history at this change). Was trying to review this against the old (and it's hard because it shows up as a pure add)"""
5853,320512462,"b'It feels like this comment should apply to the else statement (could we move it closer there?).\r\n\r\nOtherwise it looks like the comment says ""we shouldn\'t do this"" and then the code immediately does it (in what seems like the typical/first thing that is read)'"
5853,320512709,"b"">private const float MouseWorldDepth = 0.5f; [](start = 8, length = 43)\r\n\r\nWhat's the significance of the .5 number? (and is it designed to also match the other .5f values down below?)"""
5853,320723460,b'pls document all public properties / functions'
5853,321211166,"b'I can move it back into the Editor folder for this PR, and then make a pure file move commit later.\r\n\r\nThe purpose of moving these files is to keep the service implementation (which happens to be editor-only atm) separate from actual inspectors etc.. That will also make it easier to change assembly settings if we ever figure out how to solve the input sim profile warnings in standalone builds #3971'"
5853,321666751,"b'Added comments\r\n```cpp\r\n        // Default world-space distance for converting screen/viewport scroll offsets into world space depth offset.\r\n        // The pixel-to-world-unit ratio changes with depth, so have to chose a fixed distance for conversion.\r\n        private const float mouseWorldDepth = 0.5f;\r\n        // Center of the viewport is at (0.5, 0.5)\r\n        private readonly Vector2 viewportCenter = new Vector2(0.5f, 0.5f);\r\n```'"
5853,321691005,"b""Yeah, it's a confusing legacy comment. You're correct, it probably applies to the else case, moved it there."""
5853,320725001,b'add doc comment to public function'
5853,320513139,"b'>InputSimulation [](start = 53, length = 15)\r\n\r\nI think this file is still called ""InputSimulation.Editor"" but it doesn\'t match the name of the asmdef - I think this file should be renamed to InputSimulation.Implementation'"
5853,321667107,"b""I've moved files back into Editor for the time being, can do a clean file move later for git history."""
5853,320513288,"b'>/// <param name=""wantsJumping"">Show the cursor</param> [](start = 4, length = 54)\r\n\r\nDelete this line (I think it was copy pasted from the other wantsJumping location down below)'"
5853,320513649,"b"">// any kind of click will capture focus [](start = 24, length = 39)\r\n\r\nI think the comment here and the code here don't seem to match up - it looks like it's getting keydown for the rotation key specifically, not any type of click. """
5853,320515319,"b"">MouseLookButton [](start = 39, length = 15)\r\n\r\nI don't think that MouseLookButton is defined - was this supposed to be something else?"""
5853,320515680,"b"">left, right or middle [](start = 48, length = 21)\r\n\r\nWas this a comment from an older iteration? The helper function doesn't seem to have anything specific to left/right/middle mouse button"""
5853,320515729,"b'Same comment on the thing down below:\r\n\r\n// if mousebutton is either control, shift or focused\r\n\r\n---\r\nIn reply to: [320515680](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320515680) [](ancestors = 320515680)'"
5853,320516519,"b""Why is this (and the function down below) using a == 0 check (if it's only called internally in this class and is gated on transitions - i.e. false -> true, true->false?). It seems like this should only transition from 0 -> 1 and then 1 -> 0 """
5853,320517022,"b"">#if UNITY_EDITOR [](start = 4, length = 16)\r\n\r\nThis asmdef looks to be editor-only - I'm curious why UNITY_EDITOR is specicially needed here (would be worth adding a comment here for that reason)"""
5853,321656241,"b""This is a refcount to make sure that cursor visibility and locking is handled correctly when both head and hands are rotating at the same time.\r\n* Cursor should not be unlocked when one rotation stops while the other is still going.\r\n* Cursor must be unlocked when all rotations have stopped.\r\n\r\nIt's still not 100% reliable because it only handles the input sim subsystem - if any other system uses these static cursor features it can mess up the cursor state too. We don't have a global API for managing this. But at least this common case of head + hands rotations works."""
5853,321663195,b'Adding a comment to numRotating to clarify.'
5853,321668332,"b'Legacy comment, fixed.'"
5853,321668418,"b'Legacy comment, fixed.'"
5853,321668465,"b'Legacy comment, fixed.'"
5853,321690120,"b""1. This code originated in ManualCameraControl, which was previously in the all-platforms Microsoft.MixedReality.Toolkit.Services.InputSimulation asmdef. Since it's only used by the input simulation implementation class i have moved it into the Editor subfolder.\r\n1. The Editor subfolder contains both genuine editor code (inspectors, windows) as well as implementation classes that just happen to be editor-only at this point. In the future it's possible that these implementation classes will be enabled for all platforms, so i would prefer to keep this #ifdef."""
3881,273477283,b'add null check to if - GetInputSimulationProfile() can return null'
3881,273500463,b'GetInputSimulationProfile() throws an error if the profile is null (or of the wrong type). So null check is redundant i would say.'
7018,366025338,"b'Since the JSON files are moving to classes, how will this impact ability to have custom input simulation gestures?'"
7018,366032422,"b'hmmm, I mean the original implementation was hardcoded as well. \r\n\r\nBut it is a good point to consider the flexibility of this new design. One could argue that the SimulatedArticulatedHandposes are a custom cache implementation and thus someone could create their own just like it...they would just have to update the other service implementations as well.\r\n\r\nI could look at adding accessors to SimulatedArticulatedHandposes '"
7018,367682721,b'Added setter to override'
5853,320500796,"b"">KeyCodeNames [](start = 21, length = 12)\r\n\r\nThis isn't used in this constructor - was this supposed to be used? (Or can we delete this?)"""
5853,320501732,"b'> public KeyType BindingType => bindingType; [](start = 7, length = 43)\r\n\r\nNit: Consider adding a space after BindingType'"
5853,320502439,"b"">internal [](start = 8, length = 8)\r\n\r\nWas this supposed to be public? I haven't seen this private/internal combination in the codebase yet."""
5853,320502954,"b'>((KeyCode)code).ToString(); [](start = 32, length = 27)\r\n\r\nAnother thing to consider in the future:\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/system.enum.getname?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.enum.getname?view=netframework-4.8)\r\n\r\nFor this, probably not worth changing to that link.'"
5853,320505346,"b'> Left = 0, [](start = 11, length = 10)\r\n\r\nNit: I think that our guidelines say to include a None value like:\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/enum](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/enum)\r\n\r\nI think we can go either way, it would be good to be consistent within the same file (i.e. KeyType.None and MouseButton.None). If only because this would also let us return MouseButton.None from the ""TryGet..."" function down below in failure case (instead of returning a ""valid"" mouse button)'"
5853,320507671,"b'Ah... this was done to keep some consistency with the existing InputSimulationMouseButton, I guess nevermind then.\r\n\r\n---\r\nIn reply to: [320505346](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320505346) [](ancestors = 320505346)'"
5853,321202674,"b'Left over from previous iteration, will remove.'"
5853,321203030,b'Not sure what you mean here.'
5853,321208277,"b""These are marked internal so that the inspector can access them. I didn't want to make them public because the value is not very meaningful on its own, the TryGetKeyCode and TryGetMouseButton functions should be used instead if one needs to know which internal KeyCode or mouse button is used.\r\n\r\nThe inspector needs access to some internals of the KeyBinding to convert to and from a plain enum index, which allows selecting a KeyBinding directly from a combined list. I've changed the inspector slightly so it now accesses the enum dictionaries and doesn't need the Code property."""
4211,282553995,b'is this a breaking change? meaning was SimulatedHandPose ever publicly available?'
4211,282556045,"b'_Technically_ yes since it was/is a public class, but highly unlikely that any external developer actually used it.'"
5853,320507000,"b'>MixedReality [](start = 20, length = 12)\r\n\r\nCan you also add a link/mention on this issue:\r\n\r\n[https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5772](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5772)\r\n\r\nAnd also a new section here:\r\n\r\n[https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Updating.html](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Updating.html)\r\n\r\nTo describe the changes here (i.e. deletion hand yaw/rotate controls and how to use that functionality in the new world?)\r\n'"
5853,320507097,"b""It's cheaper for us to do this as we go along the month than trying to write this all at the end (and potentially forgetting some stuff as we go)\r\n\r\n---\r\nIn reply to: [320507000](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320507000) [](ancestors = 320507000)"""
5853,320508169,"b'>defaultHandSimulationMode [](start = 35, length = 25)\r\n\r\nIs it possible to FormerlySerializedAs here? It looks like this still reasonably equivalent.'"
5853,320508621,"b'>Controls how mouse look control is activated [](start = 18, length = 44)\r\n\r\nI think this tooltip was copy pasted from above (but should reference hand rotaation instead). '"
5853,320511622,"b'>private KeyBinding handRotateButton = KeyBinding.FromMouseButton(KeyBinding.MouseButton.Right); [](start = 8, length = 95)\r\n\r\nWhat are your thoughts on adding a comment regarding the priority order of hand rotate vs camera rotate? Otherwise the question here is around ""hey, both the hand and camera have the same mouse binding"" - AFAICT the camera wins out if both try to be active.'"
5853,320511769,"b""Ah wait, it's the other way around.\r\n\r\n---\r\nIn reply to: [320511622](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5853#discussion_r320511622) [](ancestors = 320511622)"""
5853,320734250,"b""can you add doc comments as well pls , tooltips won't shop up in the doc portal"""
5853,320734649,"b""also some properties don't have tooltip (eg mouseRotationSensitivity)"""
5853,321218715,"b""I will change the default key binding to Ctrl for the hand rotation, so (by default) there won't be a conflict. And then if you set them to the same binding again it will just do both camera and hand rotation at the same time.\r\n\r\nMy thinking originally was that it would be better to just have one key for enabling rotation for anything, but it seems that the combinations are a bit fiddly, and by having dedicated keys for both rotations it just extends the current system and doesn't mess with muscle memory so much. There's just no ideal solution here, just more or less annoying tradeoffs ..."""
5853,321702002,b'done!'
3881,273792945,"b'I notice we are now adding dependency on .SDK which I think is okay since foundation now has toolkit, services, and SDK. But calling it out in case it is not okay.'"
4240,282546115,b'same comment re: WMR provider dependency'
4240,282750056,b'same here'
4500,286188124,"b""This should ease #3971 on WSA, but we'll still need a proper fix for all platforms."""
7018,364744331,b'i think you forgot your todo :)'
5002,296315026,"b""> if (cumulativeDelta.magnitude > manipulationStartThreshold) [](start = 31, length = 60)\r\n\r\nDo we expect that there should ever be a case where you don't get manipulated started events, just hold start -> hold end -> navigation start -> navigation update -> navigation complete?\r\n\r\nI'm curious because assuming there's only a hold going on and no navigation, it looks like it's possible that this would start navigation, and then on the next interaction update because a navigation is in progress, it will never start the manipulation. Or is it the case that, cumulativeDelta is only ever updated AFTER a hold has already been processed?"""
5002,296318642,"b""Also when we're done with this PR, it might be worth updating the input docs to specify the expected order (basically copy paste what you had in the issue into the docs)"""
5002,296319225,"b""Yeah, trying this out (pulling this down locally) I have to hold for a fairly significant amount of time to trigger the manipulation event - if I don't wait a long time, it only ever goes into navigation mode.\r\n\r\n---\r\nIn reply to: [296315026](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5002#discussion_r296315026) [](ancestors = 296315026)"""
5002,296628310,"b'I\'ve changed it now so that the manipulation event starts as soon as you pinch.\r\n\r\nNote that there will never be ""canceled"" events for `Manipulation` and `Navigation`, only for `Hold` when you start moving after `Hold` has already started. If i cancel the manipulation on `Hold` start then it will only work by moving immediately, which is probably not desirable either. \r\n\r\nWith the current behavior the events are largely independent from each other, with the exception of canceling `Hold` when moving, and i think this is the least complicated way to do it.'"
5002,296681713,"b""I've added a section to the documentation about the expected order of gesture events.\r\n\r\nI've also linked the Gesture Tester example script there, which has proven useful to devs in the past for correct usage of the events, particularly for distinguishing the 3 event types based on generic InputEventData."""
5002,296794479,"b'Looks great, thanks!'"
5002,296795239,"b""So here's a really dumb question from me, but looking at how cumulativeDelta is updated:\r\n\r\ncumulativeDelta += currentPosition - lastPosition;\r\n\r\nIt seems like it would be possible to actually move your hand back into a position such that the cumulative delta ends up being 0,0,0 again, which would in theory start the hold here.\r\n\r\nIs this not the case (i.e. is there some abs() going on elsewhere?)\r\n\r\n"""
5002,296811336,"b""Yes, this can happen in theory (have never seen it happen in practice though, not even with the simulated hands). Note that i've copied this from the HTK implementation.\r\n\r\nThe cumulativeDelta is also used for determining the navigation rails when they are enabled, which requires keeing a vector. The function doesn't look very robust though, we may want to revisit this at some point - if anyone actually uses it."""
3881,272985128,"b"">Enum.GetNames(typeof(TrackedHandJoint)).Length [](start = 49, length = 46)\r\n\r\nThis will include the 'None' enum value, in case that's an issue."""
3881,273395631,"b'The purpose of this is to get the necessary array size, so we can use `(int)TrackedHandJoint` as an index. The `None` item is pretty much unused, so not a problem (apart from minor size overhead, not worth optimizing at this point).'"
3881,273448058,"b'Nit: I believe DateTime has quite high internal resolution, what can be imprecise is the value returned by UtcNow'"
3881,273454002,"b'I see, will clarify the comment.'"
4587,290648065,"b'The smoothTime should be configurable, not least because we want to be able to disable it for testing purposes. The value should go into the input simulation profile, with a matching entry in the inspector, like so:\r\n\r\n```diff\r\ndiff --git a/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs b/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs\r\nindex 60001148d..17b62a8f3 100644\r\n--- a/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs\r\n+++ b/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs\r\n@@ -47,6 +47,7 @@ public class MixedRealityInputSimulationProfileInspector : BaseMixedRealityToolk\r\n         private SerializedProperty defaultHandDistance;\r\n         private SerializedProperty handDepthMultiplier;\r\n         private SerializedProperty handJitterAmount;\r\n+        private SerializedProperty handSmoothTime;\r\n\r\n         private SerializedProperty yawHandCWKey;\r\n         private SerializedProperty yawHandCCWKey;\r\n@@ -104,6 +105,7 @@ protected override void OnEnable()\r\n             defaultHandDistance = serializedObject.FindProperty(""defaultHandDistance"");\r\n             handDepthMultiplier = serializedObject.FindProperty(""handDepthMultiplier"");\r\n             handJitterAmount = serializedObject.FindProperty(""handJitterAmount"");\r\n+            handSmoothTime = serializedObject.FindProperty(""handSmoothTime"");\r\n\r\n             yawHandCWKey = serializedObject.FindProperty(""yawHandCWKey"");\r\n             yawHandCCWKey = serializedObject.FindProperty(""yawHandCCWKey"");\r\n@@ -190,6 +192,7 @@ public override void OnInspectorGUI()\r\n                 EditorGUILayout.PropertyField(defaultHandDistance);\r\n                 EditorGUILayout.PropertyField(handDepthMultiplier);\r\n                 EditorGUILayout.PropertyField(handJitterAmount);\r\n+                EditorGUILayout.PropertyField(handSmoothTime);\r\n                 EditorGUILayout.Space();\r\n\r\n                 EditorGUILayout.PropertyField(yawHandCWKey);\r\ndiff --git a/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs b/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs\r\nindex 6a4d7564b..b441fb7f1 100644\r\n--- a/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs\r\n+++ b/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs\r\n@@ -151,6 +151,10 @@ public class MixedRealityInputSimulationProfile : BaseMixedRealityProfile\r\n         [Tooltip(""Apply random offset to the hand position"")]\r\n         private float handJitterAmount = 0.0f;\r\n         public float HandJitterAmount => handJitterAmount;\r\n+        [SerializeField]\r\n+        [Tooltip(""Time it takes hands to reach the target mouse position"")]\r\n+        private float handSmoothTime = 0.15f;\r\n+        public float HandSmoothTime => handSmoothTime;\r\n\r\n         [Header(""Hand Rotation Settings"")]\r\n         [SerializeField]\r\n```'"
4587,290654629,"b'I would like to restrict the smoothing to just the mouse movement, which seems to be it\'s intended purpose. The gesture animation of the actual joints is already animated smoothly, so the damping just makes it feel too ""squishy"" IMO and isn\'t necessary to avoid fast motion.\r\n\r\nDoing this in the `SimulatedHandDataProvider` instead has the added advantage that smoothing is not applied when hands are simply animated. This is important for the upcoming input recording feature, which will be used for testing and should reproduce the recorded animation as accurately as possible, without additional smoothing.\r\n\r\n```diff\r\ndiff --git a/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs b/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs\r\nindex d348e3dec..53b355145 100644\r\n--- a/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs\r\n+++ b/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs\r\n@@ -31,6 +31,7 @@ internal class SimulatedHandState\r\n         public bool IsPinching { get; private set; }\r\n\r\n         public Vector3 ScreenPosition;\r\n+        private Vector3 velocity = Vector3.zero;\r\n         // Rotation of the hand\r\n         public Vector3 HandRotateEulerAngles = Vector3.zero;\r\n         // Random offset to simulate tracking inaccuracy\r\n@@ -90,17 +91,21 @@ public void SetViewportPosition(Vector3 point)\r\n             ScreenPosition = CameraCache.Main.ViewportToScreenPoint(point);\r\n         }\r\n\r\n-        public void SimulateInput(Vector3 mouseDelta, float noiseAmount, Vector3 rotationDeltaEulerAngles)\r\n+        public void SimulateInput(Vector3 mouseDelta, float noiseAmount, Vector3 rotationDeltaEulerAngles, float smoothTime)\r\n         {\r\n+            Vector3 worldPoint = CameraCache.Main.ScreenToWorldPoint(ScreenPosition);\r\n+            Vector3 newScreenPosition = ScreenPosition;\r\n             // Apply mouse delta x/y in screen space, but depth offset in world space\r\n-            ScreenPosition.x += mouseDelta.x;\r\n-            ScreenPosition.y += mouseDelta.y;\r\n-            Vector3 newWorldPoint = CameraCache.Main.ScreenToWorldPoint(ScreenPosition);\r\n+            newScreenPosition.x += mouseDelta.x;\r\n+            newScreenPosition.y += mouseDelta.y;\r\n+            Vector3 newWorldPoint = CameraCache.Main.ScreenToWorldPoint(newScreenPosition);\r\n             newWorldPoint += CameraCache.Main.transform.forward * mouseDelta.z;\r\n-            ScreenPosition = CameraCache.Main.WorldToScreenPoint(newWorldPoint);\r\n\r\n-            HandRotateEulerAngles += rotationDeltaEulerAngles;\r\n+            // Apply damping to the hand movement\r\n+            newWorldPoint = Vector3.SmoothDamp(worldPoint, newWorldPoint, ref velocity, smoothTime);\r\n\r\n+            ScreenPosition = CameraCache.Main.WorldToScreenPoint(newWorldPoint);\r\n+            HandRotateEulerAngles += rotationDeltaEulerAngles;\r\n             JitterOffset = UnityEngine.Random.insideUnitSphere * noiseAmount;\r\n         }\r\n\r\n@@ -295,7 +300,7 @@ private void SimulateUserInput()\r\n\r\n             if (isSimulating)\r\n             {\r\n-                state.SimulateInput(mouseDelta, profile.HandJitterAmount, rotationDeltaEulerAngles);\r\n+                state.SimulateInput(mouseDelta, profile.HandJitterAmount, rotationDeltaEulerAngles, profile.HandSmoothTime);\r\n\r\n                 if (isAlwaysVisible)\r\n                 {\r\n\r\n```'"
3881,272981146,"b'>control [](start = 34, length = 7)\r\n\r\ncontrolled'"
3881,272983735,"b"">DateTime currentTime = DateTime.UtcNow [](start = 12, length = 38)\r\n\r\nApparently this can be quite unprecise (~50ms intervals): [https://stackoverflow.com/questions/2143140/c-sharp-datetime-now-precision](https://stackoverflow.com/questions/2143140/c-sharp-datetime-now-precision). I'd say that for timestamps in general it's better to use Stopwatch.GetTimestamp: [https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch.gettimestamp?view=netframework-4.7.2](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch.gettimestamp?view=netframework-4.7.2)\r\n\r\nIt may be unnecessary here, seeing how the timeout is probably expressed in seconds. Up to you."""
3881,273398552,"b""Legacy code, but good point anyway. Right now the timestamp is only used to detect if data has been changed in the same frame. I believe it's supposed to prevent multiple hand data updates in the same frame.\r\n\r\nI would leave it as is for now, since it works alright. Will have to revisit timestamps anyway when looking into support for simulated update frequency, i.e. simulate 45fps hand updates of the Hololens instead of 60fps Unity updates. I'll add a comment to change this in future."""
3881,273480773,"b'```suggestion\r\n        /// If true then the hand is always visible, regardless of simulating.\r\n```'"
3881,273481353,"b'```suggestion\r\n        /// If true then the hand is always visible, regardless of simulating.\r\n```'"
3946,275217953,b'please add { } around these if blocks. too easy to add an indented line that looks to be in the block but isnt.\r\n\r\nthanks!'
3916,273894616,b'Document the difference here?'
3916,273993108,b'Done.'
4587,290656686,b'Out of curiosity: did you use the HandGestureRecorder tool to record this gesture?'
4587,290657187,"b'Better description needed, e.g. ""Open hand with palm facing up and fingers spread out"".'"
4587,290805228,"b'Hi Lukas,\r\nAt first, I didn\'t know the existence of this script, so I created my own MonoBehaviour.\r\nWhen I found the HandGestureRecorder and tried to attach it to a gameobject, a the pop-up  shows : ""The script is an editor script."".\r\nSo I created my own GestureRecorder'"
4587,290805877,"b'Absolutly, ""Open Sky"" means nothing'"
4974,295705401,"b""This should use an overlap test similar to the one implemented in #4942. We're still trying to figure out how to make that work with UnityUI objects though."""
4974,295901988,"b""Thankfully we don't have to worry about UnityUI here since this is for grabbing objects. I'll take a look."""
4263,286781574,"b'Recommend changing this to DistanceToTouchable, since not all of these are surfaces (at least one is a volume).'"
4942,295226429,"b'Should this read: ""Distance behind the surface at which you will receive a touch **ended** event""?\r\n\r\nI thought distBack represented the ""depth"" of the plane. So, if you moved your finger more than 25 cm behind the surface (such as the button, or the UnityUI surface), then you would get a touch up.\r\n'"
4942,295227525,"b'Why are we no longer using distfront? My understanding was that we used distFront to determine the distance from surface that you would receive touch down event at.\r\n\r\nSo, if I wanted to get a touch down only when actually touching the surface, set distFront to zero.\r\n'"
4942,295230769,"b'Okay, reading the code more I understand: You will get touch started events any time you hit the surface, or any time your finger is up to pokeThreshold behind the surface. In other words, pokeThreshold is sort of like the ""depth"" of the touchable surface, is that right? Maybe ""surfaceDepth"" would be a more understandable term? You could then render it as a collider.\r\n\r\nI called it \'poke depth in this picture but \'surface depth\' might make more sense.\r\n![image](https://user-images.githubusercontent.com/168492/59758626-391a4d80-9243-11e9-9c98-f9f3c7a55e63.png)\r\n\r\nOr, am I misunderstanding the code?\r\n\r\nMaybe the comments can help explain as well the meaning of the variable?'"
4942,295247533,b'It seems that with these changes all near interaction touchables must have a collider. Does it make sense to keep a separate ColliderNearInteractionTouchable class?'
4942,295297559,"b'See comment below about NearInteractionTouchableUnityUI. I would love to kick out the UnityUI class, at which point we could indeed merge the base classes too.'"
4942,295696019,"b'Never mind, UnityUI case seems to be too important to drop.'"
4942,296823386,"b'Added a bit more inline doc to explain these:\r\n\r\n```csharp\r\n        [Tooltip(""Distance behind the surface at which you will receive a touch started event"")]\r\n        [SerializeField]\r\n        [FormerlySerializedAs(""distBack"")]\r\n        protected float pokeThreshold = 0.25f;\r\n        /// <summary>\r\n        /// Distance behind the surface at which the touchable becomes active.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// When the pointer distance to the touchable object becomes less than -PokeThreshold (i.e. behind the surface),\r\n        /// then the Touch Started event is raised and the touchable object becomes tracked by the pointer.\r\n        /// </remarks>\r\n        public float PokeThreshold => pokeThreshold;\r\n\r\n        [Tooltip(""Distance in front of the surface at which you will receive a touch completed event"")]\r\n        [SerializeField]\r\n        protected float debounceThreshold = 0.01f;\r\n        /// <summary>\r\n        /// Distance in front of the surface at which you will receive a touch completed event.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// When the touchable is active and the pointer distance becomes greater than +DebounceThreshold (i.e. in front of the surface),\r\n        /// then the Touch Completed event is raised and the touchable object is released by the pointer.\r\n        /// </remarks>\r\n        public float DebounceThreshold => debounceThreshold;\r\n```'"
5033,297161919,b'Note that the collider properties will be moved to an intermediate base class `ColliderNearInteractionTouchable` in #4942. The `usesCollider` property is removed entirely (all touchables except UnityUI require a collider anyway).'
5033,297253851,"b""Edit: We'll merge as-is for now, then update later once your changes are in."""
5033,297470807,"b""@lukastoenneMS  and @Railboy  please coordinate in case Railboy's PR goes in first. Seems like touchableCollider could go away entirely."""
5781,318712590,"b""These will be breaking changes. We should note this for the next release. @wiwei where are we collecting breaking changes? For now, I'll add the 'breaking change' tag to this PR."""
5781,318728324,"b'If desired, I can revert these changes.  They are not required for my change.\r\nIt just seemed odd to me to have them all protected rather than private.  Is there a reason that these are all protected in the first place?\r\n\r\n---\r\nIn reply to: [318712590](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318712590) [](ancestors = 318712590)'"
5781,319128959,"b""> Is there a reason that these are all protected in the first place?\r\n\r\nI think @MenelvagorMilsom  did the original implementation I believe, but I can't think of a reason other than he made it a base class so maybe wanted to make everything protected by default.\r\n\r\nI would say if it's not needed, better to not make the change unless it provides customer value. """
5781,319142407,"b""Per this policy, this breaking change does not meet the bar.  I'll revert it.\r\n[https://cognitionwiki.com/pages/viewpage.action?spaceKey=MRTK&title=Breaking+Changes](https://cognitionwiki.com/pages/viewpage.action?spaceKey=MRTK&title=Breaking+Changes)\r\n\r\n---\r\nIn reply to: [319128959](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r319128959) [](ancestors = 319128959)"""
5781,319275332,b'Reverted these breaking changes.'
4678,291461412,b'Reminder to include these lines:\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License. See LICENSE in the project root for license information.\r\n```'
5738,318999253,"b""Can we add some tooltip or info msg here as well that explains what's going to happen or link to documentation, just so it's more clear what's going on."""
5738,318999261,"b""I would add some tooltip or info msg that says we're going to remove CanvasUtility and NearInteractionTouchableUnityUI """
5882,321028562,"b'just for fun, you could consider implementing this using LINQ.\r\n\r\nusing System.Linq;\r\n\r\ntargets.SelectMany(target => (target as Canvas).GetComponentsInChildren<Graphic>())\r\n.Where(graphic =>StandardShaderUtility.IsUsingMrtkStandardShader(graphic.material) && graphic.GetComponent<ScaleMeshEffect>() == null);'"
5882,321401293,"b'PS.  If you do that, then this function could return IEnumerable<Graphic> instead of List<Graphic>\r\n\r\n---\r\nIn reply to: [321028562](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5882#discussion_r321028562) [](ancestors = 321028562)'"
5882,321527629,"b""Haha, I haven't heard many people use the work fun and LINQ in the same sentence. ;) I do like the idea of returning an IEnumerable. I'll fix that!"""
5781,318117942,"b""can you add a  [UnityEditor.CustomEditor(typeof(BaseNearInteractionTouchable), true)] here so this is the fallback for all the NearInteractionTouchables? Then you also won't have to define the NearInteractionTouchableUnityUI editor further up. """
5781,318776865,"b'Per conversation, not going to do this because this inspector is not applicable for all derivations of NearInteractionTouchableBase.'"
3640,266072872,b'Can instance be null?'
3640,266074837,"b'If memory serves, if Instance is null and the component is in the scene, it will be instantiated. The core pattern has not changed (see other examples of calling through .Instance).\r\n\r\nThanks!'"
3607,266967588,b'Could we just keep the count of pointers over each object instead?'
3607,267519150,b'The idea of an AR Indiana Jones reaching out for the golden Trophy just came to be. I think you want to be able to make sure that both hands and not just a hand and the gaze are reaching out to it before you throw in the glow shader :)'
3607,268231287,b'Is this no longer a valid concern?'
3607,268233976,"b'>MixedRealityToolkit.InputSystem.RaiseFocusEnter(currentPointer, pendingFocusObject); [](start = 24, length = 84)\r\n\r\nRaising focus enter/left for all pointers will break all focus handlers relying on the existing behavior. We already have focus changed events to detect multiple pointers, '"
3718,269842136,"b""Isn't the usual formatting with the `&&` on the right?"""
3718,270125195,b'Updated'
3749,270985314,"b"">// TODO: cache and clear [](start = 67, length = 24)\r\n\r\nNit: Please clean up the TODO prior to checking this in (i.e. shouldn't be per-update allocations)"""
3749,270985439,b'(Same with the thing down below) - i.e. hitUi\r\n\r\n---\r\nIn reply to: [270985314](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3749#discussion_r270985314) [](ancestors = 270985314)'
3749,270986529,"b""> // FIXME: This is assuming only the grab pointer is using SceneQueryType.SphereOverlap.  [](start = 31, length = 89)\r\n\r\nCan you add a little more context about this FIXME, or file an issue with tracking information on this? It's difficult to understand without additional context how I would approach fixing this, how I would verify it, etc."""
3749,270990630,b'Thanks for pointing this out. I actually forgot to address this'
3749,271225229,b'Extended the comment and created this ticket: https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3758'
3607,275344326,b'Actually not. Proceeding with your recommendation this now just counts pointers for each focusable gameobject.'
4070,279788324,b'We should raise pre focus changed/focus changed regardless of the value of objectIsStillFocusedByOtherPointer'
4136,280522318,"b""Is this null check necessary? It's not performed for the pendingOverallFocusEnterSet."""
4171,280861976,b'```suggestion\r\n\r\n```'
4136,281548790,b'It is. I found out the hard way: Dictionary will throw an exception if you try to remove a null key.'
4270,283026094,"b'Code looks good to me, only comment here is that this code looks super testable (i.e. it takes deterministic inputs, and then its state changes) - this would be a great candidate for a unit test.'"
4270,283476592,"b""It's not enough to do a null check on a pointer.\r\nThis is because the pointer is stored as an interface, but many of them are actually monobehaviors.\r\n\r\nWhen a pointer is destroyed, it will pass a regular null check, but throw a MissingReferenceException. You must also cast it to monobehavior to null check it properly. This unfortunately is much more expensive, but safer.\r\n\r\nThis is why I'm so adamant pointers should never be destroyed, so that we don't ever hold a list of null pointers.\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/issues/4223"""
4270,283477686,b'You could reduce nesting by doing and && here with the condition above.'
4270,283477952,"b""If you're counting the active near pointers, you could expose this at a higher level. This seems like information that might be important."""
4270,283478147,b'Same as above. I can see a few cases where knowing the number of far pointers can be very useful.'
4270,283478338,b'Same as above. Be careful doing null checks with monobehaviors that are stored as interfaces.'
4270,283478726,"b""This whole loop has a ton of complexity just to gauge the state of a cursor. I understand why it's happening, but I think it should be heavily profiled before being merged in."""
4270,283509296,"b""Hm, interesting. Since this does not regress prior behavior (we did the same null check previously), I will keep this in for now. We can then fix this and other null checks later, as part of a separate issue. I'm trying to keep this scoped to implementing the specific behavior to match the shell."""
4270,283524547,"b""I understand wanting to keep the same behavior.\r\n\r\nMy experience with pointers however has shown that if the pointer is destroyed, it won't be considered null until unity's native side cleans it up.\r\n\r\nThis is why you want to know if the reference is still valid, which can only be done with the overridden monobebehavior null check, which isn't called unless you cast the pointer reference to monobebehavior."""
4270,283526182,"b""This is the same reason the `?` fails on monobebehaviors. This check is actually somewhat new since it wasn't possible before dot net 4.x. It works the same way as the ternary operator or the ?? Null check however.\r\n\r\nYou can read about how unity handles null checks here\r\n\r\nhttps://blogs.unity3d.com/2014/05/16/custom-operator-should-we-keep-it/"""
4270,283526354,"b'I could, but then the meaning of the else clause below would mean ""it is not near and enabled"", meaning that if the pointer was NearPointer and disabled, that it would fall into the else clause. Even though it might be okay, I think I\'d prefer to keep it this way for now, just so it\'s more clear what what else clause captures.'"
4270,283526744,"b""Okay, I'll expose the number of near and far active pointers as public property in FocusProvider. I won't make it part of the interface to avoid making a breaking change. """
4270,283590408,b'Just added some playmode tests to validate the state of cursor giving hand states.'
4270,283590976,"b""Removed this null check, because the pointer should never be null at this point in time. Other code in update loop already assumes the pointer is not null. It's appropriate in this case to crash/throw exception because this reflects program being in incorrect state."""
4270,283895852,"b""Nit: I understand the motivation here but I'll just say it hurts a bit to see the non-universal concepts of near and far pointers hard-coded into the focus provider. I had hoped the pointer mediator could handle the business of near and far pointers somehow. Ah well."""
4270,283968158,"b""@provencher asked to expose the number of near and far pointers. \r\n\r\nI had also thought about putting the near and far pointer management in the mediator, but wanted to avoid the number of classes that knew about / managed the gaze pointer. Currently the gaze pointer field is private, and managed by the FocusProvider only. I'd like to keep access of that pointer private if possible to reduce the possible classes that could modify it and get us into an undesired state.\r\n"""
4482,285789275,b'Can this be null ever?'
4482,286121513,b'InputSystem is a prereq to this file (i.e. other places have the same level of dependency)\r\n\r\nEyeGazeProvider is set up by the input system uniquely within its startup path and startup will fail if there is no gaze provider given.\r\n\r\nSo tl;dr Not as far as I can see.'
4698,290678805,"b'>ref readonly Dictionary [](start = 15, length = 23)\r\n\r\nI think this should be IReadOnlyDictionary instead. Dictionary is a reference type (i.e. class) so a ref to a dictionary object is a ref to its address. I believe that what you are returning there in C++ terms is Dictionary* const, instead of Dictionary const *.'"
4698,290681903,"b""Actually, to be precise, I think `ref readonly Dictionary` translates to `Dictionary** const` in C++ and I don't think C# provides any way to have a `Dictionary const **` or `Dictionary const *` return type."""
4698,290683060,"b""I can see no option to approve with comments, so I'm approving it so it can be checked in once you do that change."""
4698,290727327,"b'Nth correction, I think `ref readonly Dictionary` translates to `Dictionary * const *` in C++.'"
4678,290792101,b'Is this not necessary anymore?'
4678,290842544,b'Must have removed by mistake. Thanks for catching.'
4678,291462180,"b""Will this compile with the .NET backend? I recall a while back having trouble using the default value expression because that's only available in [C# 7.1 IIRC](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/default-value-expressions)"""
4974,296703590,b'#4942 adds a configurable PokePointer property for this. The FocusProvider should probably use the PointerProfile like it does for other settings.'
4974,296705378,"b'I would suggest a simple buffer saturation check here like in #4942, so that users are notified in the unlikely case that the buffer is full and they may be missing interactions.\r\n\r\n```\r\n            if (numColliders == colliderBuffer.Length)\r\n            {\r\n                Debug.LogWarning($""Maximum number of {numColliders} colliders found in FocusProvider overlap query. Consider increasing the scene query buffer size in the pointer profile."");\r\n            }\r\n```'"
4974,296706116,"b""Doesn't look like the unbuffered code path would ever be used now."""
4974,296706542,b'Why not foreach?'
4974,296809614,"b""I think all the changes in this file are no longer necessary, actually. Addison and I discussed a much simpler solution. Addison is on pat leave also. I'll take over the PR and just provide the two fixes in basecontrollerpointer and sphere pointer."""
4974,296862308,"b""Removed the changes here since they aren't relevant to the bugfix. Let's re-open the discussion in separate issue if needed."""
4722,298993199,"b'>if [](start = 27, length = 2)\r\n\r\nNit: start comments with capital for consistency.'"
5156,299185604,"b'@julenka, do you have any data on some of the more complex scenes that people were building? 64 seems like it could be a small number potentially depending on how many near interaction things that exist.\r\n\r\n'"
5156,299185823,"b""Ah, I guess it's part of the profile anyway, so it's changeable at least there."""
533,120494772,b'Good catch'
533,120495004,b'Any suggestions on how to fix?'
533,120505623,"b""I'll go with option 1. Seems a bit easier to implement.  Although, I don't thing the button would need to track the return value.  We can just throw a warning about not being able to start/stop the recording."""
664,120665909,b'nit: `if(!Directory.Exists(directoryPath))`'
714,121273025,b'Feels like this belongs in Utilities...'
533,121273675,b'https://github.com/Microsoft/HoloToolkit-Unity/issues/556'
715,121286631,b'I believe you can assign `=null` to keep this warning from showing up.'
715,121466520,"b""That's only a build warning, correct?"""
715,121488599,"b""That's not a big deal. There's a few of those kinds of warnings already. It can stay."""
714,121519969,"b""Hey shouldn't this be `!string.IsNullOrEmpty(buildError)`?"""
664,122776928,b'Nit: Unity methods should be private.  Goes for OnDisable and OnGUI too.'
664,122777424,"b'Nit: Should this class be its own file?  If not, then class should be private.'"
731,122783756,"b'Seems like this added an object reference, was this `GameObject` a prefab?  Do we need to be applying the changes to the prefab and not the scene?'"
732,123057135,b'nice!'
732,123058234,b'I think the uri is now `HoloToolkit-Tests\\Input\\Scripts\\MicStreamDemo.cs`'
733,123059380,"b""I don't believe that this is a valid platform definition.  See https://docs.unity3d.com/Manual/PlatformDependentCompilation.html\r\n\r\nUse: `# UNITY_WSA`"""
733,123059605,b'nit: explicit private access modifiers for unity methods.'
733,123063769,b'Why have empty method?'
733,123064326,b'nit: extra line space'
733,123078154,b'nit: extra line space'
733,123078213,b'Nit: Extra line space'
733,123078304,b'Nit: Delegate should be declared at the top of the class.'
733,123401497,"b""I was just curious because I hadn't seen it is all. Thanks for the clarification guys.\r\n\r\nbtw, @waynebaby, I believe that this project only targets .net 3.5 currently. Will C# 6 work?"""
733,123552481,"b""Still have a few extra line spaces, but other than that looks good! \r\n\r\nI'll need to throw this on a device and test it."""
736,124021201,b'Great idea!'
733,124023598,"b""Should we explain why we don't need to catch this exception?"""
733,124026918,b'Maybe we should at least return null?'
733,124027120,b'nit: single letter variable names. `view` would probably work best if unused already.'
733,124027348,b'nit: redundant `Windows.UI.ViewManagement` is already defined in the using section above.'
733,124278850,"b'No worries, I just meant using a comment `//Unused` or something similar.'"
742,124393090,"b""@darax it would be nice to make the `UNetAnchorManager` inherit from the `WorldAnchorManager`, but I wasn't sure where to start.  I noticed this class inherits from `NetworkBehavior`."""
757,126179154,"b'These are good points, Max. I agree.'"
757,126180314,"b""I'll update accordingly.  Thanks Max!"""
760,126189557,"b'Another thing is, do we need to call `eventData.Use();` someplace?'"
733,126487758,"b""Let's remove these empty methods"""
733,126487855,b'nit: formatting on braces'
733,126488211,b'nit: extra line'
764,126496660,b'Nit: Please revert this.  Project is currently on 5.6.2f1.'
764,126496772,b'Project settings should also be reverted.'
764,126496867,b'Editor build settings should also be reverted.'
764,126499100,"b""You don't have write access to the branch you're trying to merge?"""
765,126568095,b'Looks broken'
765,126568111,b'Same here.'
765,126568133,b'Broken'
765,126571449,b'nit: explicit access modifiers. (Is this public or private?)'
765,126571491,"b'nit: All the Unity API methods should be private, not public.'"
765,126571572,b'nit: extra line space'
765,126571630,"b'nit: this. is implied, we can safely remove it.'"
765,126571903,"b""This should be broken out into it's own file, in an Editor folder."""
765,126571978,b'nit: extra line space'
765,126572017,b'nit: tab formatting'
765,126572046,b'nit: extra spaces'
765,126572118,b'nit: explicit private access modifier for Unity APIs'
765,126572214,b'We could switch to a for seeing as this is in an update loop.'
765,126572298,b'We could cache this vector allocation as well bc of the loop.'
765,126572893,b'nit: private'
765,126573095,b'Why does this method have an underscore prefix?'
765,126573198,b'Nit: we should cache this component as a private field in awake or start.'
765,126582223,b'nit: private'
714,126735773,"b'Great catch, thanks!'"
777,127068789,"b'Ah, yes.  Thanks for the catch.'"
717,127073224,"b'We do, it now correctly uses `GazeManager` result which does raycasting against both geometry and canvas renderers.'"
777,127296472,b'Great idea!'
808,130171654,b'Done'
808,130172294,"b""Not sure if I see a valid reason to add the normal route to building, when it's as easy as a button press. I guess we could add a link to the Unity Documentation."""
695,130434131,"b'I think that should be setup by the developers, but I can add an example in the sharing test scene.'"
695,130434685,"b""To prevent string overflow. The window does not resize automatically. Besides there's only so many digits needed for a local ipv4 address."""
695,130716955,"b""This is mainly for the HTK sharing, so that's why it is highly coupled.\r\n\r\nI think uNET has a lot more flexibility and doesn't have a IP requirement seeing as they have their own matchmaking services built in."""
695,130717266,"b'BTW, your first comment is because of [this bug](https://github.com/Microsoft/HoloToolkit-Unity/issues/804) which has a PR https://github.com/Microsoft/HoloToolkit-Unity/pull/805'"
747,130772624,"b""Because `SceneLauncher` is a singleton, and I think there's some initialization that happens.  I'll look into how we can make this baked into the scene."""
747,130772669,"b'Ty, ty'"
747,130772779,b'This just makes it easier to add scenes to the build settings without having to go through the build window.'
747,130773160,"b""I'll double check to make sure that these cases are covered."""
747,130773258,"b'I thought I did just that, but it depends on if people import just the core HoloToolkit or also the Examples and Test asset packages as well.'"
747,130773455,"b'The Editor already warns you if you have unassigned references, but I can revert.'"
747,130773658,"b'In fact, I should update the serialization to only include scenes from the core HTK.  The `SceneList` serialization will get updated anyway when people add/remove scenes from the Build Settings.'"
747,130932797,"b""I'll have to get back to you on this. I've got a few other priority items to take care of."""
695,130972363,"b""I see the benefit, but I think that's something devs should do in their own project."""
695,130972494,"b""Will do and I'll make it 12."""
747,131183304,"b""This should get thrown whenever you enter play mode when you've got unassigned public references in the inspector.  I think there is one other requirement for it to be thrown, but I cannot remember off the top of my head. I'll get back to you on this."""
827,131246564,"b""Thanks. That's exactly what I was attempting to do lol"""
827,131246714,b'UNITY_EDITOR is redundant even when remoting'
827,131246786,"b""It was moved into it's own class."""
827,131251197,"b""Sounds good. I'll update."""
827,131251275,"b""I'll double check. Thanks!"""
827,131251485,"b""Really it shouldn't matter even when remoting because the build should already be WSA"""
827,131258261,"b'Fixed, and added.'"
742,131515073,b'I should double check this and make sure this is a desired change.'
827,131963967,"b""I'll look into it right now. Was this in standalone pc build, or wsa?"""
827,131975158,"b""What's your build target platform? """
827,132023086,"b'No worries, I figured. Should be addressed in my latest PR'"
841,132599786,"b""I'll double check that formatting. \r\n\r\nThanks!"""
852,132822441,b'Nit: `* 0.5f`'
852,132822552,b'~Why cache again?~'
852,132822598,b'Nit: public variables should be PascalCase.'
852,132822647,"b""Although this is very optional because it's following the same pattern as unity to get the main camera. Less work to refactor, but maybe making it PascalCase will show there's a difference between usages?"""
852,132824990,"b""IMO calling it directly actually helps legibility, even if it's just a bit longer. Less Spaghetti. \r\nNot that performance is an issue here, but local references do add to the heap (albeit negligible now days).  Not a big deal."""
852,132825009,"b'~We cache here, then again on line 104.~'"
852,132825030,"b""Oh I see, it's needed because it's the update. Please disregard comments."""
852,132826475,b'nit braces `{ return; }`'
852,132864998,"b""I think it's fine, and the class should also include the license info in header."""
852,132865054,b'nit License header'
831,133160600,b'Did you mean to update this with this PR?'
747,133355191,"b""> - A scene is removed from the build settings and a different one is added. (Lists will have the same length, but different elements.)\r\n\r\nIn my latest update this is no longer possible.\r\n\r\n> - Build settings are updated without opening the SceneLauncher prefab in the inspector, so update doesn't occur.\r\n\r\nDo you mean that it isn't serialized into the prefab?  Then I believe you are correct this does not handle that edge case.\r\n\r\n> - Build settings are updated while SceneLauncher prefab is already open in inspector, so OnEnable isn't called again.\r\n\r\nFixed.  Updates the prefab list when the user navigates back into the editor from the build window.\r\n\r\n> - SceneLauncher prefab is modified by this function, but Unity is closed without saving the change to the prefab. (Would editor code be required to mark it dirty or save the prefab?)\r\n\r\nI think making sure people intentionally save changes is better.  We could also prompt to ask if people want to save before quitting."""
747,133355274,"b""> 2. Maintain a completely different list in SceneLauncher. This isn't exactly what HoloToolkit needs, but some projects might want to have a long list of scenes in the build, but only have a subset of those scene launchable from the SceneLauncher menu. \r\n\r\nI totally agree, we should make this only show scenes we would want to switch to.\r\n\r\nWhat do you think about having a list of the scenes from the `EditorBuildSettings` with a check box that gives users the choice enable or disable the button?\r\n\r\nThat way the `SceneLauncherEditor` no longer changes the `EditorBuildSettings` and it only reads and lists the available scenes to enable/disable. (although I would like to ensure that at least the current scene is added to the build)."""
873,133550100,b'What about the readme version text update?'
874,133870723,b'This is awesome. Just one suggestion is to move this into `HoloToolkit-UnitTests/Utilities/Extensions` folder.'
874,133870823,"b""We should probably still check to make sure `WorldAnchorManager.Instance != null`.  It's optional to have in the scene."""
874,133870924,"b""Do we really want to spam log warnings if there isn't a parent  intentionally setup on purpose?"""
874,133871073,b'We should check the instance here too.  `WorldAnchorManager` should be optional.'
874,133871130,"b""This is awesome.  In fact, we probably don't even have to change the layers of the object or its children because of this change."""
874,133871200,b'`SpatialMappingManager` is also optional. We should check if we have a valid instance.'
874,133871256,"b""We should probably add the descriptions of these parameters and what we're returning."""
874,133871507,b'suggestion: for loop instead of foreach'
874,133871537,b'Awesome.  Does this PR also update the core MRTK scripts that use this obsolete reference?'
874,133888071,"b""~In my [PR addressing the updates to the `WorldAnchorManager`](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/742) I actually remove this line. The `WorldAnchorManger` shouldn't be a required dependency.~"""
874,133888228,b'For any loop if possible. Just a perf optimization.'
874,133888522,"b""Actually I did not. Looks like I also made the hard dependency. I think it would be nice if we didn't need to require it.  The script should work as is."""
874,133890902,b'```\r\n            for (int i = 0; i < parent.childCount; i++)\r\n            {\r\n                parentsQueue.Enqueue(parent.GetChild(i));\r\n            }\r\n```'
874,133891162,"b""Oh I see, parent isn't a `Transform` Component?\r\n\r\nPartly why I avoid `var` when types are not evident. No worries then."""
878,134047703,"b'This beta release does not address the API changes, just the security update.'"
878,134047754,"b""It's a regression"""
878,134048439,b'[Critical Security Patch](https://unity3d.com/security?utm_campaign=other_global_information_2017-08-17-Global-Editor-Security-Notification&utm_content=2017-08-17-Global-Editor-Security-Notification&utm_medium=email&utm_source=Eloqua)'
878,134048593,"b""It doesn't address the cumulative updates that's been done with the other beta builds."""
874,134079559,"b""No worries, but that's where the other integration tests are located at the moment."""
874,134081561,b'Thanks for checking.'
874,134383286,"b""@Zod- yup you're correct, generally we mark as obsolete and remove later after people get a chance to update their references."""
874,134627838,b'nit: braces'
747,134817951,"b'No worries, I definitely understand.'"
888,135322928,b'I thought so too! '
888,135329769,"b""Ahh I see.\r\n\r\nYeah doesn't matter either way I suppose.  Users will still need to set it in their projects anyway."""
887,135330740,"b""This goes back to our prev conversation in the update PR haha.\r\n\r\nI'll apply those learnings."""
887,135335312,"b""The [documentation for win 10 capabilities](https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-uap-capability) hasn't been updated recently. Keeps [sending me back to win 8](https://msdn.microsoft.com/library/windows/apps/hh464936)."""
747,135639773,"b""I'll put back but make optional"""
904,136188589,"b""What's with the strange space formatting?"""
904,136188766,b'Could we rename to `HoloToolkit/Examples/UnlitTriplanar`? (same for all the other example shaders)'
904,136190293,"b'Also, I think the upgrade notes are injected by Unity, we can probably remove those as well, and add the default CLA license header.'"
747,136218974,"b'I feel like having it create another instance, only to destroy it is too costly, but I agree it should be a bit more self contained in the scene.'"
747,136219066,"b""Agreed, I'll see what I can do."""
747,136219153,b'Updated'
747,136219326,b'Great idea'
904,136478400,b'One more weird tab'
904,136478471,b'Another tab'
911,136478942,"b""I'm unsure if we should include ReSharper stuff in the project."""
747,136482032,"b""There wasn't an easy way to use `PostProcessScene` attribute because it has to be a static call to the class, and our serialized properties could still be unset.  We would somehow still need to know about our prefab somehow, even if it's in the scene."""
747,136486192,b'Done. I also removed step 2 because the refactor gave the ability to put the scene at any index.'
747,136487854,"b""Btw, by default if a new scene is added it's automatically disabled unless the user goes and enables it, so I think we would want people to update this prefab anyway.  Updating the build settings, doing the post process, and then building wouldn't have made the buttons show up anyway."""
927,136857113,b'Nit: remove line changes. (seems to have added extra spaces)'
927,136858547,"b""Yes, all you have to do is push the changes to your branch and they'll automatically show up here."""
930,136886268,b'Because potentially someone could implement the hrtf parts.'
930,136889588,"b""Yeah it's causing a mismatch in the stream in the receiving end."""
930,136891079,"b'I could comment it back in on the receiving end too, but I figured this way was saving network traffic.'"
747,137130939,"b'Huh, I thought I updated that, sorry!'"
747,137131002,b'\xf0\x9f\x98\x84 '
747,137131031,b'Will do.'
935,137150887,"b""I take it this is for people that aren't developing on a windows machine?\r\n\r\nIt should just work if you're already in the editor."""
935,137151508,"b'Oh I see, it fails to build.'"
935,137151671,b'Hmm... seems to build fine for me.'
935,137151962,b'Line 43 needs to be moved down to 47'
935,137152014,"b'```\r\n        [Tooltip(""The confidence level for the keyword recognizer."")]\r\n        public ConfidenceLevel RecognitionConfidenceLevel;\r\n```\r\n\r\nThat\'s what needs to be moved down into the compile directive'"
935,137152266,b'No getting around this one.'
935,137152357,b'make it private and serialize it.'
935,137152380,b'and add a public method to get & set it if people need to update or know it.'
935,137152749,"b'Starting at line 45:\r\n```\r\n#if UNITY_WSA || UNITY_STANDALONE_WIN\r\n        [SerializeField]\r\n        [Tooltip(""The confidence level for the keyword recognizer."")]\r\n        private ConfidenceLevel recognitionConfidenceLevel;\r\n\r\n        public void SetConfidenceLevel(ConfidenceLevel newLevel)\r\n        {\r\n            recognitionConfidenceLevel = newLevel;\r\n        }\r\n\r\n        public ConfidenceLevel GetConfidenceLevel()\r\n        {\r\n            return recognitionConfidenceLevel;\r\n        }\r\n```'"
935,137152788,b'and be sure to update the editor script serialized property lookup too.'
935,137155182,b'Should we go ahead and set a default level?'
935,137158353,b'Where?'
935,137289502,b'I think we should go ahead and set it here to minimize the effect of reserialization.'
929,137686038,"b'Yes to the line below, no to the current line'"
747,137698764,"b""The change is there but it doesn't reflect because then comment thread was started in the left pane instead of the right in the diff view."""
747,137703676,"b""\xf0\x9f\x98\x82\xf0\x9f\x98\x82\xf0\x9f\x98\x82 I can't win """
747,137703742,"b""I didn't think about what it looks like in the scene after the buttons got generated. I'll have a fix in a bit after dinner."""
936,137842674,b'Not exactly a fixed list from Unity side.\r\n\r\nThe joystick list gets changed every time a new one is recognized by either the player or the editor.'
936,137843289,b'Will do.'
929,137902602,"b""The light data.\r\n\r\nIt can be a rather large file, and probably doesn't need to be in the repository."""
929,137903447,"b"">I don't seem to have that file, and it doesn't seem to be generated at any point?\r\n\r\nUser generates it when they open the scene and build the lighting.\r\n\r\n> Why the need to both delete and ignore the folder?\r\n\r\nI didn't delete it.  Just marked it as untracked. (the folder that is)\r\nThe light data did need to be deleted."""
929,137905583,b'https://docs.unity3d.com/Manual/GlobalIllumination.html\r\n'
929,137907688,b'It _could_ be set to automatic.'
929,137907763,"b""I'm all fine with straight up removing it."""
747,137911574,b'This was intentional. '
747,137912132,b'Why _not_?'
747,137912806,"b'If you import the toolkit into your own project they will not be included in your project settings.\r\n\r\nTesting this project\'s scenes on device, on the other hand, might be pretty handy to have this enabled.\r\n\r\n> Saying ""Why not?"" doesn\'t answer any of those questions.\r\n\r\nYeah I just wanted to know your reasoning why you wouldn\'t want it, is all.'"
747,137913003,b'@ForrestTrepte even suggested putting in _all_ the scenes. I just choose the two that are included in the main toolkit package.'
747,137913245,"b""> So, SceneLauncher becomes useful if I'm testing more than one scene, or do I get anything with just one?\r\n\r\nI'd like to think so.  That's mainly the reason why I was going to add it.  To make testing the example and test scenes easier."""
747,137913314,"b""I was even half tempted to move the SceneLauncher scene out of the main toolkit and put it in an example folder then reference _all_ the scenes in the toolkit.\r\n\r\nI don't think people really need a prefab of the scene launcher in the kit.  It's there to be more as an example."""
747,137913734,"b"">Also, does this change cause me to do any additional work? Do I need to manually add my scene somewhere to show up in the launcher, or can I just build with my scene and it works? \r\n\r\nIt would depend on if we add all the toolkit scenes.\r\n\r\n- If we have all the toolkit scenes in the build settings.\r\n    - If you're working on a scene that's already in the toolkit, no extra work. Deploy and test to your hearts content.\r\n    - If you're working on a scene that's not in the toolkit, and will be added to it, then you should add it to the build settings, then update the `SceneLauncher.prefab` with the enabled button.\r\n- If we don't include all the toolkit scenes.\r\n    - You will need to add it to the build settings, then update the `SceneLauncher.prefab` with the enabled button.\r\n    - Or alternatively delete the two scenes and add your own.\r\n- I could make the new scene button automatically enabled then it's just business as usual.\r\n    - Add the scene to your build settings and go."""
747,137919999,"b""> I'm not sure what the best choice is. Is there a way we could make both behaviors very convenient?\r\n\r\nYeah probably.  But I'll do it later in a separate PR.\r\n\r\nI agree. Just revert for now and open a new issue for it."""
949,137930613,"b""nit: we don't need to change the name.  Please revert."""
924,137937026,b'please revert formatting '
952,137937040,b'Yeah we should be using `SharedMaterial` not `Material` call here to avoid creating the material instance.'
952,138107614,"b""I do prefer `SharedMaterial` but as long as we're cleaning up after ourselves it should be okay."""
963,138490410,"b""no, it's optional.  Does the same thing the default camera component does."""
963,138490699,b'Done'
936,138869900,b'We need to serialze this field.'
936,139294455,"b""It was never really working anyway, but I think it's good practice to add the message."""
970,139314707,b'nit: removed extra line'
981,139319304,"b""The check is `string.IsNullOrEmpty`on the receiving end, so it shouldn't make any difference."""
981,139319320,b'It probably should have been returning `string.Empty` instead of `null` anyway.'
985,139465095,b'We need to wrap this to be 5.6 compatible. '
989,139725780,"b'It would be handy to make this public as well, in case someone wants to manually update the offset themselves.'"
989,139726718,"b""We should probably get the collider from this object as well to add into our calculation.\r\nThis class requires a component to work anyway, and child component colliders shouldn't be taken into consideration. (Think of it as the collider around this object is a bounding box)"""
989,139731921,b'> GetComponentsInChildren gets components from both the current gameObject and its children\r\n\r\nIt does?! I learned something new today \xf0\x9f\x98\x86 \r\n'
989,139732202,"b""> And isn't it useful to get the midpoint of the object and it's children?\r\n\r\nYes I agree, but if there's a collider on a child that's outside the collider on this object, you could run into problems. Ideally the collider on this object should encompass _all_ the child objects."""
989,139732336,b'This can still be private.'
936,139836701,"b""Not that I'm aware of. This step is optional, and I've kept this flexible where people don't have to use the provided `InputManager.asset` and map their own.\r\n\r\nI'd also rather overwrite so there are not overlapping or conflicting mappings."""
936,139836944,"b""I kept it as a singular event _type_ to reduce complexity.  But it will raise separate events for each controller.\r\n\r\nI'm already thinking about a plan to make sure sure this plays well with the motion controllers in the dev branch.  I'll be sure to request your feedback when I submit."""
977,140019555,b'@DDReaper really either can be used. It makes no difference. '
977,140028052,"b""It's more of a performance issue."""
989,140307817,b'Why should this start at 1?'
989,140308983,b'Why make this 1?'
989,140309681,b'Oh I see'
989,140310010,"b""Yeah let's check to make sure we have a collider."""
989,140518003,b'nit: `GameObject`'
1006,140667432,b'sut?'
828,140843146,"b""What's with the custom obj ref?\r\n\r\nShould we allow obj extensions in general? (Pretty much the same as .fbx)"""
828,140845957,"b""Agreed. I've never had issues with VS obj objects in my projects with the Obj/ folder ignore."""
1007,140847266,"b'Pretty sure we already have a class that does exactly this, but in a more generalized way.\r\n\r\n@keveleigh ?'"
1007,140847508,b'Why is all this commented out?  Should it be removed?'
1007,140847696,b'Did we also update the readme?'
1007,140847795,"b""Please remove this and it's meta file."""
1007,140848250,b'What did this use to do?  Why was it removed?'
1007,140859012,b'I also want to make sure the Motion controllers and Xbox Controllers play nicely.'
1007,140859799,b'nit: formatting.'
1007,140859957,b'nit: braces'
1007,140859986,b'formatting.'
1007,140862505,b'Revert is easiest.  I think we should be using that version though.'
1007,140865405,b'Could be tabs vs spaces'
1007,140865764,"b""I'm in favor of making those awesome changes to the `InteractionSourceInputSource` class.  I like that the class is more generalized and cross platform friendly.  Makes things less complex.\r\n\r\n> (that's a lot of source!)\r\n\r\nI laughed way too hard at this."""
1007,140870069,b'I think `InteractionInputSource` is fine lol.'
1007,140907504,"b'>The basic problem has been with the discoverability of interfaces for what interactions an object can consume. This would be better solved on the InputManager front by knowing what event\'s I can consume as oppose to the guess work of going through all the interfaces especially for global listeners.\r\n\r\n@paseb I\'m not sure if I understand this.  What do you mean by ""the discoverability of interfaces""?  From what I understand the reason why we\'re implementing the Interfaces was to get away from delegates and events to improve overall system performance.'"
1007,140915108,"b""> That performance is negligible.\r\n\r\nI'd like to disagree, it was a major part of the reason the input system was refactored.  Although, I do have to agree with your analogy. The difference being that there's exposed interfaces for people to tap into and use as they need.\r\n\r\nI think the biggest issue here is that most people don't fully understand it, and how to use it properly.\r\n\r\n> Having just interfaces without the ability to quickly use intellisense to see what I can hook into from events represents the same problem.\r\n\r\nI agree, this is somewhat of an issue, and I can see the benefit to how this was arranged to make finding interactions easier.  This goes back to the previous point.\r\n\r\n> That's why we need some middle ground and if someone wants to implement interfaces in all their base classes that fine. Also if someone wanted to just extend an `InteractibleObject` and override an virtual function that should be fine as well.\r\n\r\nI think I better understand what this class is supposed to do now, thanks.  It's more of a basic building block for overriding and implementing custom logic.  I'm in favor of keeping it.\r\n\r\n>I prefer delegates or event/actions with names variables and really haven't seen any perf issues. \r\n Has anyone done a hard study on the actual perf impacts?\r\n\r\nYes, there was a [whole thread](https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/277) covering the tradeoffs and perf impacts with each type we suggested.  The biggest push was getting away from [`GameObject.SendMessage`](https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/224).\r\n\r\nSubscribing to delegate events decreases perf logarithmically, seeing a dramatic impact as more objects subscribe.\r\n\r\nAlthough with the push for the VR, it really doesn't matter but on mobile platforms."""
1007,140916506,"b""@paseb as far as perf is concerned, here's a link to a good perf test you can do on your own:\r\nhttp://jacksondunstan.com/articles/3043"""
1007,140917571,"b""> Are there other ways we could have a set of building block abstract classes that provide a foundation to rapidly develop off of?\r\n\r\nNot that I can think of, you're on the right track.\r\n\r\nHaving the option is fine, but really we shouldn't do all the hand holding.  At some point devs will need to make the custom logic themselves for their implementations in their own apps.  Giving the option and examples of what to use is better than packing it all in without a choice."""
1007,140920142,"b""Agreed, let's not forget that Unity plans on doing a whole revamp of the Input System as well in a near future release.  That's something we also need to take into consideration."""
1012,141134226,"b""Just for now. The dev branch didn't have this wrapped and we've got to go back and fix this."""
1015,141157828,b'Good question.'
1015,141158444,"b'Oh I see. It was the last return, which was redundant, and my formatting tool removed it.'"
1016,141160501,"b""@keveleigh did you get to test this with the motion controllers?\r\n\r\nI still plan on revisiting this to make sure we're clear of any conflicts."""
1016,141160584,b'Should we ignore or include this in our project files?'
1016,141168011,"b""Yeah, I'm unsure exactly what these dependencies are or what they're used for."""
1021,141186309,"b""Please remove this and it's meta file from the PR"""
1021,141186584,b'These files should go in `Assets/HoloToolkit-Tests/Input`'
1023,141215530,"b""They do, but I like a clean console, that doesn't have warnings."""
1028,141234403,"b""I see it too, but I don't think it's anything to worry about.  Just some formatting thing on Githubs side."""
1028,141234803,"b""> I'm not yet sure how I feel about recreating Unity's enum here.\r\n\r\nIt's not the first time [the Input System does this](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputSources/SupportedInputInfo.cs).\r\n\r\n> it's a breaking change for anybody using the existing event data classes.\r\n\r\nWell that's why it's a dev branch right?  I'm more worried about forwards compatibility and how the rest of the community is going to have to deal with the new changes, because as it stands it's not a compatible change.\r\n\r\n> What do we gain over wrapping all references with UNITY_WSA?\r\n\r\nAll previous projects on the master branch gaining forward compatibility, especially ones where people use the input system in cross platform apps.\r\n"""
1028,141240262,"b""\xf0\x9f\x98\x82\xf0\x9f\x98\x82\xf0\x9f\x98\x82\r\n\r\n> I don't believe SupportedInputInfo is a Unity enum.\r\n\r\nHmm, could be another I was thinking of?\r\n\r\n> all apps will still need to add a press type to their existing events anyway.\r\n\r\nWhy? Isn't there a default type that automatically works?\r\n\r\n[Note]\r\nMy first attempt actually removed the press type from all events other than the interaction events that were specifically from the Interaction Manager."""
1028,141409376,b'Should we move the tags parameter to the end of the statements that use it and make it null by default as well to keep it compatible with the master branch?'
1021,141471030,"b""Do we want this in the grab mechanics examples folder, or actually have it in it's own folder in Examples with other toolkit branding assets?"""
1007,142005401,b'Why is this commented out?'
1007,142005499,b'Could we make this optional?'
1049,142277266,b'Pretty sure I updated the GUID to point to be the `MixedRealityCamera` prefab.\r\n![image](https://user-images.githubusercontent.com/13334553/31103257-d29614b2-a78a-11e7-94b1-4ce1c0e7fa83.png)\r\n'
1049,142277420,"b'@keveleigh would you prefer the `MiedRealityCamera` prefab, or the `MixedRealityCameraParent` prefab?'"
1049,142278584,"b"">If we want to go down to 1 prefab, reusing the HoloLensCamera GUID would probably be best to maintain forward compatibility, right?\r\n\r\nI don't think so.  I'd fear the new branch would get a lot of missing references if we changed that.\r\n\r\nI think it's fine the way it is, cause the scene settings window will just replace the camera in the scene anyway.  That way devs have the option to update and use the new prefab."""
1007,142279945,b'Yeah just the debug log.\r\n\r\nLogs are pretty expensive.'
1049,142282532,"b""I'll update the GUID to point to it."""
1028,142283329,"b""@keveleigh I figured out why it's marked red.  The `&` should be escaped to `&amp;`"""
1021,142298110,b'Why is there an empty class?'
1059,142463592,b'Good point.  Sorry I usually do the same.'
1059,142463880,"b'That was the intention to open a new window each time.\r\n\r\nI usually have specific explorer windows open, and would be frustrated if one of them were to change on me unexpectedly.'"
1059,142464759,"b""The problem is that the `AnyCPU` enum string doesn't match the string we need to match with (`Any CPU`) which gets passed to the msbuild process later."""
1059,142465624,b'I also wanted to use `/f` to give the window focus because without it the editor stays on top.'
1059,142467620,"b""I don't see `System.Enum.TryParse`.  Is this feature .NET > 3.5?\r\n\r\nOnly `System.Enum.Parse`."""
1059,142468355,"b'nvm, seems to work fine.'"
1028,142498122,b'Yeah https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1028#discussion_r142283329'
1028,142498304,"b'I think scripts like this should really belong in the Examples or separate from the input system.\r\n\r\nDon\'t get me wrong, they\'re important, but not part of the ""Core"" system.  More of an implementation of it.'"
1028,142498997,b'Good catch!'
1021,142499119,b'should this be virtual?'
1028,142501922,"b""That's why I moved it into Utilities"""
1028,142503955,"b""I'm down for moving this again when we do the reorg for MRDL"""
1021,142510218,"b""We should move this into it's own folder most likely, seeing as it's for the toolkit in general."""
1021,142515925,"b""That's exactly what I was thinking! :)"""
1059,142547406,b'Fixed in #1072'
1059,142547566,b'I thought I had fixed this. Sorry about that. Must have slipped in my rebase retry.'
1021,142560850,b'Nit: revert'
1021,142563283,"b'Sorry about the late reply, but yes.'"
1021,142587807,"b'Images should be a power of 2, so mipmapping works better (eg, 64, 128, 512, 1024, 2048, etc)'"
1080,142789905,b'Are we actually using these references now?'
1072,142793863,b'Nope.'
1080,142795926,b'So do you know if there are any plans for Unity to expose more of these spatial APIs in the editor?'
1080,142797100,"b'That would be amazing. Really, Unity should be footing the bill to implement some of this stuff though, to be honest. \xf0\x9f\x98\x86 '"
1080,142802044,"b""If the `InteractionManager` is just a wrapper for `SpatialInteractionManager` what's the advantage of subscribing to the detected and lost events here?"""
1080,142803713,"b""Couldn't we just make an extension to get the `source.controller` like we did with enabling and disabling the haptics?  That way everything can compile nicer in this class?"""
1080,142804357,"b'Infact, we could add to the `HapticsExtensions` class and maybe rename it to be `InteractionSourceExtensions` or something along those lines.  What do you think?'"
1080,142805897,"b""If we're getting rid of the MixedRealityCamera.prefab would this PR get a breaking change label?"""
1080,142807590,"b""We should also probably move that class into `Input/Scripts/Utilities` as well while we're at it."""
1021,142830085,b'![image](https://user-images.githubusercontent.com/13334553/31206885-80fed638-a92f-11e7-9739-8a4f6f086ead.png)\r\n'
1021,142830822,b'Easier just to revert all changes'
1007,143087864,b'Seems like this folder got removed but this meta file still remains. Please remove'
1007,143087981,b'What are these console icons for?'
1007,143088534,"b'Pretty sure we already have a material named ""Wireframe"" in `SpatialMapping/Materials/`'"
1007,143088692,b'We should probably disable the material import for `CursorRing.fbx`'
1007,143088961,b'We should disable material import for all the Cursor_Scale meshes as well.'
1007,143089058,b'What kind of file is this? Does Unity recognize and use it?'
1007,143089217,b'All the materials in the models folder should be moved over to the Materials folder.'
1007,143089352,b'spelling `interactable`'
1007,143089388,b'nit: braces'
1007,143089404,b'nit: extra line'
1007,143089448,b'we can remove `System` and `System.Collections`'
1007,143089558,"b""we don't need `System.Collections`"""
1007,143089579,"b""This should be in it's own file unless we can make it private."""
6027,327068325,"b""tooltips are missing as well :-) . If you're already adding the /// please add tooltips <3 """
6027,327340463,"b'>(please also add default behavior description to /// comment that will appear in docs\r\n\r\n@CDiaz-MS  please remember to do this as well, I saw you added the tooltip'"
6027,327340562,"b""I think it's out of scope for this PR, but would be good to probably make a custom inspector."""
6027,327340701,b'@CDiaz-MS  reminder to add doccomments to all public fields in this file.'
6027,327340850,b'The summary should be moved down to decorate `public Collider` not the private member'
6027,327381513,b'fixed'
6027,327381855,b'Added doc comments to all public fields'
6027,327381972,"b'```suggestion\r\n        [Tooltip(""BoxCollider used to calculate bounds and local center, if not set before runtime the gameObjects\'s BoxCollider will be used by default"")]\r\n```'"
6027,327381974,"b""```suggestion\r\n        /// BoxCollider used to calculate bounds and local center, if not set before runtime the gameObjects's BoxCollider will be used by default\r\n```"""
6027,327383490,b'Commited'
6027,327383632,b'Committed '
4263,286781807,b'You could actually move this to NearInteractionTouchableUnboundedPlaneEditor.cs and move into an Editor folder to remove the #if UNITY_EDITOR. Can do in a later PR.'
4942,295240522,"b'I\'m not sure this class makes sense any more. It\'s original intention was to allow for a plane of infinite size that would be touchable. However, it seems like the poke pointer will always dispatch touchUp events once a pointer has passed some distance threshold. Additionally, I don\'t think the current behavior actually allows a touchable to be infinitely large. Finally, it makes the definition of ""NearInteractionTouchable"" a bit more muddled since NearInteractionTouchable is really a touchable surface of bounded size, which is essentially the same thing that this class is. \r\n\r\nHow do you feel about removing it? I don\'t think anything except the touchable sample uses it.'"
4942,295240578,b'It also was not released in RC2 so is not a breaking change.'
4942,295247986,"b'I too am happy with the removal of this class. I was unsure how it should be distinct when adding it. As long as touchable are tied to colliders, functionally this is going to behave like `NearInteractionTouchable`. \r\nCurrently, the only distinguishing features of this class is the distance function and cursor behaviour, but neither align with expectations as the collider is not infinite. '"
4942,296827179,b'I have removed this class now.'
4942,295232409,"b'We should add documentation to note that to make a Unity UI touchable you need to use NearInteractionTouchableUnityUI. There\'s a related issue to also add a ""how to set up unity ui for touch input"" #4949 '"
4942,295232531,b'Make sure to update the unity ui example scene and hand interaction example scene to use this.'
4942,295248831,"b""Doesn't this require a collider component too? If we require Unity UI to be wrapped in a collider for near interaction, we need to make sure that doesn't affect far interactions (i.e. interactions via raycast-based pointers). """
4942,295296554,"b""Background: Previously the BaseNearInteractionTouchable class was handling both the collider case and the collider-less case. The latter was only used for UnityUI case, so i've split the collider code off into a separate base class `ColliderNearInteractionTouchable` for simpler code.\r\n\r\nSo, no, the UnityUI case didn't and doesn't require a collider. There is a breaking change here: with the static list used previously the PokePointer would still have considered objects with UnityUI, but now they won't be included. However, even before this change the UnityUI case was quite pointless because it would never have generated events, since these would be raised through the FocusProvider with an additional raycast.\r\n\r\nI can only assume that the UnityUI stuff is left over from HTK days and not functional. AFAIK we don't have any examples for it either."""
4942,295303881,b'There are examples in HandInteractionExamples and HandInteractionUnityUIExample. Unity UI is functional and should be tested.'
4942,295313580,"b'I have no clue how the UnityUI thing works. The examples seem to be broken with this change, would be great to have an actual test indeed.'"
4942,295345916,"b""I don't know the details but I know that `MixedRealityInputModule` translates our pointer events into the mouse pointer events that Unity UI understands (see `GetMousePointerEventDataForMrtkPointer()`). """
4942,295348528,"b""So it looks like what is happening right now is that the PokePointer in `OnPreSceneQuery` [sets up a ray step](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/e18e7078bde38454816a0d3d2bd7c5e54bc2ccc5/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/PokePointer.cs#L74), and the FocusProvider then [uses this to perform a graphics raycast](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/e18e7078bde38454816a0d3d2bd7c5e54bc2ccc5/Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs#L1078). This goes into the internal Unity system for handling UI.\r\n\r\nThe problem now is that there is no equivalent to the Physics.OverlapSphere function for the graphics/event system in Unity. We would need this to filter UI elements for the poke pointer, otherwise we'd have to go back to a static list for the UnityUI touchable variants ..."""
4942,295349888,b'@luis-valverde-ms I think these are two separate systems.'
4942,295374864,"b""I can't find a solution to this. If nobody has any idea we might as well drop this PR."""
4942,295612062,"b""I think we can do it, there's so many good things in this PR.\r\n"""
4942,295630100,"b""I think that dispatching of input in UnityUI is implemented in [MixedRealityInputModule (MRIM)](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L302).\r\n\r\nHere's what I think happens (based on my experience with [this PR](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4765/files). \r\n\r\n1. MRIM tracks all active pointers by listening to [sourcedetected](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L302), sourcelost\r\n2. MRIM implements [IMRPointerHandler](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L11)\r\n3. OnPointerDown, MRIM updates state of its tracked pointers.\r\n4. In [Process()](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L115), MRIM actually translates the pointer states it is tracking (pressed, not pressed, etc) into instructions for Unity to ProcessMouseEvent.\r\n5. As part of ProcessMouseEvent, Unity calls GetMousePointerEventData, which calls [GetMousePointerEventDataForMRTKPointer](https://github.com/julenka/MixedRealityToolkit-Unity/blob/e5dac4afce15cc6719b6cd11b965b1dcb0919a6a/Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs#L188). \r\n6. That method is the thing that has the meat -- it takes the position and rotation of the pointer (actually, the rotations of Rays[0]) and converts that into a ray. This ray then gets used to figure out which UI element is hit in Unity UI. We don't need to worry about figuring out which Unity UI subelement is hit though. We just need to set up the ray so that it will hit Unity UI.\r\n\r\nIn short, I think as long as you can [set up that ray step](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/e18e7078bde38454816a0d3d2bd7c5e54bc2ccc5/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/PokePointer.cs#L74) at some point so that the position of ray step matches some place in front of the surface, and the rotation points toward the surface (so that the ray will hit the Unity UI), you will be fine.  """
4942,295631141,"b""Hm now reading Luis's comment above I feel like you and Luis probably already figured out what I said above...and you're already setting up the ray step. Keeping the comment anyway in case it helps somebody else."""
4942,295644167,"b""Here's an idea: In FindClosestTouchableForLayerMask, could you just do a graphics raycast for UnityUI? Don't worry about a sphere cast, just do a raycast. Reasoning is this: Unity UI is always going to be a flat rectangle, so you will always touch them from the front. You could set the position of the ray to be finger tip, and the direction of the ray the normal of UnityUI surface.\r\n\r\nSo, first find the colliders from volumes using the sphere cast, then also look for any UnityUI by doing a graphics raycast, ignoring all surfaces farther than touchableDistance."""
4942,295695332,"b'The problem is in the first link of this chain: finding all potential touchables to examine (i.e. the ""broad phase""). Without this no RayStep will be created and no graphics raycast happens.\r\n\r\nDoing a graphics raycast isn\'t a good solution, because i don\'t know at that point in which direction to cast the ray. Just casting to ""forward"" (what does that mean for a poke pointer?) will probably miss ui elements and cause problems down the line.\r\n\r\nI\'m considering just adding back the static list for just the Unity canvas objects, so we can at least get a reliable behavior. Then perhaps we can try to get Unity to supply a proper overlap test for their UI elements.'"
4942,295914967,"b""In partner apps I've scene they usually just have one Unity UI canvas, maybe 2."""
4942,296177353,"b""Doesn't really matter if it's 2 or 1000 though, we'd need some global refs to the canvases to examine. Could be automatic registry in a static list as before, or a simple input system pointer to the canvas to use, but the latter is even more error-prone."""
4942,297023452,"b""I think static list for Unity UI is OK. It's definitely a case we want to still support (several partners depend on it)."""
4942,297105002,b'Done. The Demos/HandTracking/Prefabs/TestCanvas.prefab is actually the only place where we have a Unity UI touchable.'
4942,297139553,"b""I've added back the static instances list for UnityUI touchables. It works fine in the examples, but would be great to have an automated test for this case too. I've tried creating a Canvas object and test components from script, but that didn't work for some reason (i'm not an expert on the UI system). Loading the prefab would be easier, but we haven't solved the question of test resources yet."""
4942,297306714,"b""Have a look at #5033 for an example of how to load prefabs. @Railboy  and I have been using that pattern (just load resource from string...). It isn't ideal because if the prefab names change the tests will break. I already had that happen to me. But it will at least unblock you. Maybe a static class exposing methods to load common test resources would be good, or a single class that would load test prefabs. This way there's just one place where the paths to prefabs used for tests exist. And then if a resource fails to load print a nice error to make it clear how to fix.\r\n"""
5156,299178143,"b""I don't think this retains the original intent, which was to prevent the collection from being added to / removed from."""
5156,299185713,b'Is there a way to deliver a read-only collection without garbage / that you can iterate over without an enumerator? I feel like there must be.'
5156,299186395,b'I think that List itself also just implements IReadOnlyCollection:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1?view=netframework-4.8\r\n\r\nSo you might be able to just return instances itself (and leave the IReadOnlyCollection part alone)'
5156,299193415,b'Tried changing Instances to return an IReadOnlyList and it works great.'
5781,318718090,"b'Can we do this in Awake instead of OnValidate? When a script which is as  commonly found in the scene as buttons tries to perform OnValidate, it can cause UnityEditor to hang because for every button instance in your scene the editor triggers the OnValidate at compile time. (We had run into this problem in RemoteAssist).\r\nThis comment would also apply to all baseclasses following this pattern.'"
5781,318727627,"b""I'll give this a try.  It just needs to occur before any attempt to use rectTransform.\r\n\r\n---\r\nIn reply to: [318718090](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318718090) [](ancestors = 318718090)"""
5781,319163615,"b'Awake works in app but fails because the inspector queries the Bounds property before Awake occurs.  I switched it to a Lazy and that seems to work in both places.\r\n\r\n---\r\nIn reply to: [318727627](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318727627) [](ancestors = 318727627,318718090)'"
4263,286783437,b'what about if the volume does not use the collider? It would be good in the tooltip or class description to say that this class requires that a collider exists on the component and that the collider is used to compute the touchable volume.\r\n\r\n'
4263,286783588,"b'@wiwei I wish we had a way to mark this component as ""BETA"" or ""EXPERIMENTAL"". It will be the first time we are showing it in a release and I could see the component becoming subject to change as people put it through its paces.'"
6026,326841577,"b'Out of curiosity, what do we want to always be considered a touchdown event?'"
6026,326841599,b'I know it says (it checks distance < 0) but still not clear'
5920,322859322,"b""This seems troublesome. I feel like a lot of developers are just going to set On/Off but really most will want the scenario of Off vs Default. Having a pointer On seems dangerous because we have all of that custom logic in PointerMediator to do special steps we think are good\r\n\r\nI'm not exactly sure how I would fix this. Maybe at least make Default = 0 since that is the default we want"""
5920,322863209,"b""Following up on this, I know it's annoying, but it might also be good to change PointerOnOff example scene content to be like PointerBehaviorExample instead. Again the problem is people will generally not want On/off but Default/Off"""
5920,322863768,"b'Also now seeing the PR and understanding everything, I was an idiot before. These should be AlwaysOn and AlwaysOff enums. Sorry about that'"
5920,322973211,"b'Nit: Move the Default to location zero, so that in the case that things get initialized to zero, the default is actually chosen as the default, not on.\r\n\r\nOtherwise I think if this gets persisted and defaults get chosen things will just be ""AlwaysOn""'"
5920,322986848,"b'Updated to the following enum:\r\n\r\nAlwaysOn,\r\nAlwaysOff,\r\nDefault'"
4678,290806532,"b""I'd rather call this `DefaultRaycastProvider` to make it clear this is the default implementation. """
4315,283533422,"b'>? [](start = 59, length = 1)\r\n\r\nSame question in other places (i.e. why does this add new null checks against FocusProvider?)'"
4315,283613390,b'to protect against null-reference exceptions if the FP is ever not set'
4315,283613499,b'i am fine removing them. it just felt wrong to not have them when the code is dereferencing FocusProvider'
4315,283882440,"b'in retrospect, i would like to keep these checks to allow us to avoid expensive nullref exceptions.'"
5882,321025867,"b""I see.  Here's where you're setting it to the -1 you mentioned in the shader.  Maybe add a comment here saying that that's why you're setting it to -1 here."""
5882,321026753,"b'>localScale [](start = 77, length = 10)\r\n\r\nWill this work for nested rectTransforms with non-1 localScale?\r\n\r\nEx:\r\n\r\n    Canvas\r\n      > Parent (scale not 1.0)\r\n          > ImageWithScaleMeshEffect\r\n\r\nYou might need to iterate through the hierarchy accumulating localScales.  Or alternately, use rectTransform.scale / canvas.scale maybe?'"
5882,321365402,"b'Should this be in Services, or SDK? @davidkline-ms I often wonder about this, whether to put things in services or SDK. What are the rules to follow for deciding if something should go into services or SDK? Maybe a one sentence rule of thumb to follow? Here\'s a strawman: ""If it related to getting data, it goes into services. Otherwise (UI, interactions, etc) put it in SDK""'"
5882,321411409,b'Good idea! I\xe2\x80\x99ll add a comment expanding what is going on here and in the shader. The way the data is packed is a little obuscated.'
5882,321470497,b'Set helpurl? or better yet on BaseMeshEffect if not already there?'
5882,321527449,"b""That's a good point, it might not? Let me verify and get back to you."""
5882,321528129,"b""To be honest I don't understand the divide between SDK, Services, and Providers. What does the dependency graph look like? And, can they live on their own? I'm happy to put this wherever makes sense. :)"""
5882,321529152,b'Will do!'
5882,321539677,b'I just tested this on PressableButtonsTestCanvas by scaling the PressableButtons RectTransform. Luckily everything still works I believe due to the way vertices get rebuilt.'
5882,321552298,"b""You can figure this out by looking at the asmdef files. It looks like SDK depends on a bunch of stuff, but services usually depends only on MixedRealityToolkit.\r\n\r\nI think if it isn't a core MRTK service like the input system, spatial mesh system, or boundary system, it should go into SDK. """
5882,322345755,"b""Sounds good! I'll move this into SDK."""
5882,322355793,"b'We spoke offline, going to keep this script in Services because MixedRealityCanvasInspector depends on it.'"
4107,289572149,b'Stray copyright header?'
5648,313989759,"b""Shouldn't this stay the same?\r\n\r\n```suggestion\r\n    public partial class MixedRealitySceneSystem : BaseCoreSystem, IMixedRealitySceneSystem\r\n```"""
5648,313989990,b'Unneeded. BaseCoreSystem already specifies IMixedRealityService'
5648,313990532,b'Good catch! My bad reading.. :D'
6457,341782450,b'Should we cache this cast in the constructor?'
6457,341795298,b'the base constructor sets the value of ConfigurationProfile'
6457,342218552,"b""should the constructor also set the value of `profile`, so we aren't casting every time this field is used?"""
5125,298665448,"b'>cachedBuildScenes = EditorBuildSettings.scenes; [](start = 20, length = 47)\r\n\r\nThe previous thing would set the cached build scenes at the very end (instead of setting it on each iteration) - curious to know about why we went from reconciling/snapping the state of the array at the end, vs incrementally building it (and thus, calling it multiple times as it gets increasingly larger)'"
5125,298672383,"b'This was working fine if only one scene was being added at a time, but it would get confused if multiple scenes were being added. Later parts of the loop would be working off old data.'"
4107,289572599,"b'```suggestion\r\n            EditorGUILayout.HelpBox(""Some scenes in your build settings have duplicate names. This can cause problems when attempting to load scenes by name. Please ensure the highlighted scenes have unique names."", MessageType.Warning);\r\n```'"
3424,255278008,"b""I wonder if `null` is more useful here, since whatever `default` returns won't be an actual running observer, right?\r\n\r\nOr can you not return `null` because `T`?"""
3424,255284634,"b'you cannot return a null since the compiler does not know if T might be a value type. default(T) should return null for ref types, like the observers.'"
3424,255284757,"b'Perfect, thanks!'"
3424,255616323,"b""Is the expectation that T implements IMixedRealitySpatialAwarenessObserver? Or will there be asks for object types that don't directly implement this interface but then resolve correctly in the type check?"""
3424,255618009,"b'The ""where T : IMixedRealitySpatialAwarenessObserver"" statement tells the compiler that T must implement IMixedRealitySpatialAwarenessObserver. All observers need to implement this interface, plus any additional interfaces / functionality required.'"
5035,297144017,b'Are the renamings of SpatialAwarenessObjectParent and CreateSpatialAwarenessObjectParent the only breaking changes?'
5035,297257307,"b'No, the addition of the ClearObservation methods is also a breaking change'"
5267,302202609,"b""What's the purpose of an override that only calls the `base` function?"""
5267,302235462,"b'it helped with debugging :D \r\n\r\ni can remove, though we may wish to remove a similar method in other services.'"
5267,302237375,b'removed'
3557,262926771,b'Typo: _...provides support **for** comfortable..._'
3557,267510908,b'picking up this change.'
3667,267852925,"b"">(registrar.GetService<IMixedRealityInputSystem>(showLogs: false) != null) [](start = 35, length = 73)\r\n\r\nJust making sure I understand this, this means that in order to create a teleport system, there's an ordering required (i.e. I have to both new up an input system, and also register it, before I can actually new this up). i.e. it's not possible to create this first, then enable an input system, and have things light up after."""
3667,267876473,"b'at this time, the teleport system required an input system. that dependency is not intended to be changed in this PR.'"
4099,279112404,b'Same comment from the other section - if this is going to be done in any sort of inner loop it would be best to avoid lambdas (which may mean we have to change the function definition of PerformanceTransformation'
6635,348185852,"b'Are we leaving these files in the UnityAR folder as well? Seems redundant with these one level up now, and no other subfolder'"
6635,348190706,b'i can remove them'
6635,348185454,"b""I think that this README misses the major point of this folder, which is that this is a staging/temporary one that is intended to be removed in the weeks following, and is only here to avoid a risky set of changes to packaging.\r\n\r\nEspecially interesting is to ensure that folks aren't taking a dependency on the structure of this (i.e. it will find a different home shortly)"""
6635,348190943,b'sounds good. i will elaborate a bit more.'
6635,348194818,b'Adding:\r\n\r\nIt has been created to allow the delivery of these features to customers while\r\nthe MRTK team works to implement packaging changes that may have posed risk to the product.\r\n\r\n> [!Important]\r\n> This folder is expected to be removed from the **_next_** version of the Microsoft Mixed Reality Toolkit. Please take no dependencies on the current structure.\r\n'
1007,143096828,"b""tabs to space, and each variable on it's own line."""
1007,143096876,b'default case should be last and `throw new ArgumentOutOfRangeException();`'
1007,143096940,b'default case should be last and throw new ArgumentOutOfRangeException();'
1007,143096959,b'value assigned is never used'
1007,143096975,b'default case should be last and throw new ArgumentOutOfRangeException();'
1007,143097012,b'We should probably address this TODO'
1007,143097053,b'radius parameter is never used.'
1007,143097066,b'radius parameter is never used.'
1007,143097090,b'for'
1007,143097137,b'merge if statements and add braces'
1007,143097175,b'value assigned is never used'
1083,143208665,"b""The anchor is never attached in this method, so I don't think this comment is quite right,"""
1007,143255682,"b""Yeah, if it's used outside of the `AnimControllerButton` class it should be in it's own file, otherwise we should make it private."""
1007,143256811,b'Compile errors might be from some `UnityEditor` dependency.\r\n\r\nBut yeah [in the docs](https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnDrawGizmos.html) it says:\r\n>This function does not get called if the component is collapsed in the inspector'
1007,143264134,"b""I can't really discern the difference"""
1007,143267221,"b""This is untrue. That's what [`PrefabUtility`](https://docs.unity3d.com/ScriptReference/PrefabUtility.html) is for."""
1007,143268988,"b""Public fields should not have underscore prefix.  Why can't it be `IsLockFocused`?"""
1007,143292584,"b""Why do you need to know if it's a prefab at runtime?"""
1098,143333157,"b""Split into it's own file"""
1098,143344631,"b'Unsure how much of this will get removed, or just moved to the `FocusManager`.'"
1098,143344641,"b""We really shouldn't need to register our canvas'.  Looking for a way to remove this."""
1101,143345790,b'Is there a way to do this without the need to get the canvas components?\r\n\r\nMaybe caching them for use again later?'
1101,143345959,b'We just need to know if both raycast results are from the same canvas?'
1101,143345990,b'Is there a way to do this without all the allocations from linq?'
1101,143346034,"b""I'm not sure if I understand this line quite right.\r\n\r\nAre we checking if `raycastResult.gameObject` is null, or does this return a bool, if we've hit a `GameObject`?"""
1101,143346070,"b""We've got a closure allocation on line 297, and multiple object and delegate allocations occurring in the linq statements. Generally good to avoid linq in update loops, if possible."""
1101,143346180,"b'Does it make sense if we made this a private field and just cleared the list each time, instead of allocating a new list?'"
1101,143346292,"b'We should probably keep this inside the `GazeManager` class as a private struct, or at the very least move this class into the input feature area scripts/utilities folder.'"
1101,143346474,"b""That also sounds like a great idea. I'd just like to keep all the feature area's scripts together in their respective folders.\r\n\r\nI'm slowly trying to decouple the feature areas so they can work on their own if needed."""
1101,143346597,b'Instead of `new RaycastResult()` we could use `default(RaycastResult)`'
1101,143495795,"b""Can we confirm that this `GetComponent` isn't being called each update?"""
1101,143518201,"b""It seems like we're just getting the component to check to see if it's the same depth.  \r\n\r\nIs there another way we can do this?  This will impact performance too much."""
1101,143552178,b'missing License header'
1101,143565405,b'I think they should be prioritized like the 3d Objects.'
1122,144081920,"b""`.material` is bad unless we're destroying the fade material later."""
1122,144082013,b'Oh good. we are.'
1126,144147939,b'`Edit Input Manager` seems more appropriate.  Also 2 should be 3.'
1126,144148115,b'Why did this change?  Did we also change the `StartVertical` to `StartHorizontal`?'
1126,144148169,b'FYI Some of these changes are pending in another PR.'
1126,144148333,b'Should be `CONTROLLER_MENU` because the Xbox and Motion controller shares this button mapping.'
1100,144156976,"b""Strange this _says_ it was changed but in my checkout it's still XR."""
1126,144157974,"b""I'm blind \xf0\x9f\x98\x86 """
1126,144158298,"b""Oh, wow, I didn't know that.  Yeah we should really work the names out."""
1126,144158478,"b""We could always add a duplicate entry into the `InputManager.asset` that maps to the same button, but with different names.\r\n\r\nBut I'm not sure if it's a good idea."""
1133,144190995,b'We should probably use `if (Application.isEditor)` instead.'
1133,144197324,"b""The method gets called whether it's in the editor or not cause it's a unity API"""
1140,144335944,b'Please revert the meta file change.'
1141,144370150,"b""I'll look into it and double check. Thanks for the heads up!"""
1126,144373642,b'I like it! \xf0\x9f\x98\x82'
1100,144382783,b'@keveleigh pointed out this will break the build. need to fix.'
1126,144395313,b'We should also add the Xbox Controller references to the description.'
1100,144429850,"b""You'll never see the rays at runtime.  It's an Editor only thing."""
1100,144429885,b'Yes it does improve perf.'
1100,144429967,"b""Nope, I fixed it so we don't have to register the canvases"""
1100,144430060,b'Yes it called an extension method @Zod- wrote.  Lots of testing went into it.'
1100,144430129,"b""Left for debugging purposes.  Wasn't sure if we should wrap a debug bool someplace if we want to do quick testing."""
1100,144430454,b'This was kept to keep backwards compatibility for older projects.'
1100,144431239,"b""Yeah, there seems to be a few `Camera.main` references in the new classes that didn't get updated yet."""
1100,144431473,"b""Not really sure why we're checking if it's null to begin with.  It'll throw errors later on if it's skipped."""
1100,144443303,b'Yeah it was kept the same to prevent breaking changes when people updated their projects.'
1100,144443349,"b""You're right, We probably should keep these assertions """
1100,144443556,"b'It is true, but we never used this.enabled in the example scene to do anything.'"
1100,144444523,"b""Question: Is the teleport marker optional?  Do we want users to teleport without seeing one?\r\n\r\nIn either case the change is valid and works like you described.  I updated the private field to be serialized so you're setting the prefab on the private field instead of having a public and private field.  I removed the public field all together."""
1100,144444806,"b""For some reason GitHub isn't actually showing all the changes but it's there.\r\n![image](https://user-images.githubusercontent.com/13334553/31525573-0f96b982-af76-11e7-9986-5cb6f77f44a5.png)\r\n"""
1152,144608279,b'Is this the same meta file from the dev branch?'
1117,144619200,"b""Also an implicitly typed local variable declaration cannot be initialized with `null'"""
1100,144623269,"b""Yeah, they don't really do anything anyway. \r\n\r\nYou'd never get OnFocusEnter/Exit raised if the GameObject is disabled."""
1100,144624377,"b'I was mainly worried about current projects updating to the new version, and limiting the number of breaking changes required to update.'"
1100,144624423,b'Fixed in #1158'
1100,144624666,"b""I'll revert this. Seems like an unnecessary change."""
1100,144625341,"b""This adds the selected object to the pointer event data that feeds back into Unity's native event system."""
1100,144641792,b'sure'
1126,144648248,"b'This class could be private, unless it needs to be public, then it should be in its own file.'"
1126,144648282,b'This enum could be private'
1126,144648382,b'Why are all these public variables camelCase?'
1126,144648439,b'Should we make this string a const?'
1126,144648522,b'Should we make all the axis names consts as well?'
1126,144650452,b'This could be made readonly'
1160,144663551,b'`DestroyImmediate` is for in Editor where `Destory` is prefered at runtime.'
1160,144664992,b'Added the auto destruct if an instance is found.'
1160,144665480,"b'Idk if a warning is needed.  It _could_ have been the uncertain script execution order that we got here before `Awake`, instead of the improperly calling `base.Awake`.\r\n\r\nI wonder how we can definitively check for that?'"
1160,144667597,"b'haha, yeah good catch.'"
1162,144925767,b'I can revert this.\r\n\r\nBackwards compatibility for Unity versions is more dangerous than forwards compatibility.  Usually Unity handles updating any meta files without much worry.'
1162,144926077,b'I suppose we could make the ProjectVersion.txt reflect the minimum editor version compatibility (which is currently 5.6)'
1162,144949029,b'I think targeting the min version is probably better if you want to avoid asset corruption.'
1162,144958032,"b""@keveleigh  These are outdated.  I'm pretty sure I updated this to what you're suggesting, but I'll check it out again."""
1162,144958993,b'This is also outdated. The current version is always written as suggested.'
1162,144959251,b'This was also recently updated.'
1162,144959490,"b""No, it's wrapped around just the one field and the other obsolete warnings still show.\r\n\r\nWe disable then re-enable a few lined after."""
1162,144962558,b'Fixed'
1162,144963481,"b""I still disagree with this, but I'll revert so it doesn't become a blocker.  I wanna try to get the release out before the FCU launch."""
1162,144963689,"b""~~Ahh I think we want to make sure the headset _is_ present here.~~ Good catch.\r\n\r\n[edit]\r\nActually we just want to make sure we're not the Hololens, so I think just checking if no device is present should be enough."""
1162,144965913,"b""It's to disable the Obsolete warning from using the `FocusedChangedDelegate`, but it doesn't disable the warning when subscribing to the `FocusedObjectChanged` event itself."""
1162,144967770,b'Sorry I wrote the Version not the Build number.'
1162,144968794,"b'Ahhh, let me double check what version is in VS Installer'"
1162,144971177,b'Fixed \xf0\x9f\x98\x83 '
1175,144992763,"b""We would probably want it to throw the null ref.  If it's not found by then, it means the `InputManager` either isn't in the scene or it's disabled. \r\n\r\nThe Singleton updates should have fixed the issues we were having with `Awake` not being called in time."""
1021,145008933,b'Please remove the `Project/Manifest` files'
1178,145015111,b'good catch!'
1178,145015214,b'Yup'
7230,374973134,"b'Yep, we should hold ourselves to the same standard everywhere. Tests are not an excuse to make less readable code.'"
7230,374973316,"b""It's definitely changing the value right? It's not getting it as an input"""
5195,300159379,"b'In addition to checking for the correct delimiter, did you check that eye tracking playback from the original issue works with this new format?'"
5195,300160846,b'I did not!'
7096,369874791,b'nit: extra whitespace'
7096,370335370,b'License header'
7096,370554865,b'i have to stop creating scripts via unity editor :D'
7096,370576021,b'checked the other bounds control files as well and added header where it was missing'
7006,366836366,b'```suggestion\r\n    public class MigrationToolTests\r\n```\r\nI think this is the standard. Same for the file name.'
7006,366837687,"b""It would be great if there was a way we could add some tests that migrate a prefab, or a scene too. Is this something that's possible to test here?"""
7006,366941696,b'I believe those test are already there no? There is a test where a prefab asset is created from that game object. and then the actual prefab asset is migrated. The same for scene asset.'
7006,366949866,"b""omg, sorry. You're totally right, haha. Somehow totally missed the other tests in my first review. Apologies for that."""
7006,366957983,b'Changing'
7006,367011658,b'nit: file name should be MigrationToolTest**s**.cs.meta?'
7006,367361300,"b""think I didn't added the new meta, and the old one is still there. I will delete this file, as the meta will be generated auto right?"""
7006,367633931,"b""Do you know if the test ever fails (i.e. the assert above is triggered), does DeleteAsset actually get called, or will this leave a dangling asset?\r\n\r\nIf so, it might be helpful to have a cleanup function (i.e. TearDown) guarantee that. (i.e. I don't think it affects this case, but some Save type functions will fail if you're saving on an existing path, which means failure to clean up would actually prevent future runs from working).\r\n\r\nIn this case I don't *think* we run the danger of the re-save issue based on my reading of the Unity docs for SaveAsPrefabAsset, but in general we should be mindful of how we cleanup dynamically/filesystem state after tests."""
7006,367850028,b'Good point'
7099,379416234,b'nit: double line\r\n'
5033,298072454,b'Is it necessary for Edit mode test here?'
4482,285787627,b'eye gaze?'
4482,285788113,"b""Maybe pull into utility? We've pasted this a few times now."""
4482,286121142,"b'Put into a static private, utility is overkill until we need to use it in multiple places.'"
5659,314129027,"b'>ssert.IsTrue(dataProvider.IsInitialized); [](start = 13, length = 41)\r\n\r\nWould it also be worth asserting that dataProvider.IsEnabled (i.e. if it gets created enabled?)'"
7441,385629894,"b'Would it be easier to use the MRTK files lookup? This feels like adding steps (open meta file, find guid, etc) for developers.'"
7441,385630310,"b'on the other hand, is this a faster access method for test collateral (ex: no file system lookup)'"
7441,385779344,"b'My thought was that the MRTKFiles APIs seemed to do a lot regarding searching directories and everything. Depending on how Unity maps GUIDs to paths, this felt like a more performant solution, and one that would be more robust to file name or folder name changes.\n\nI can run some tests today to see perf between the two.'"
7441,385851124,"b'Ran the following test. Let me know if it looks like I misconfigured anything, but the results (across 1000 runs of each, so on the scale we\'re running, it\'s probably negligible) were:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/75574959-17997480-5a14-11ea-89a6-a55f44eb5d4b.png)\r\n\r\n\r\n```c#\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nusing Microsoft.MixedReality.Toolkit.Input;\r\nusing Microsoft.MixedReality.Toolkit.SpatialAwareness;\r\nusing Microsoft.MixedReality.Toolkit.Utilities.Editor;\r\nusing System.Diagnostics;\r\nusing UnityEditor;\r\nusing UnityEngine;\r\n\r\npublic class TestFileLoading : MonoBehaviour\r\n{\r\n    private const string TestInputSystemProfileGuid = ""9c5be3fea81382342b84623b5b225012"";\r\n    private const string TestEmptyInputSystemProfileGuid = ""45c96c8b3073919419eae31f72ca8e4e"";\r\n    private const string TestSpatialAwarenessSystemProfileGuid = ""757d72d70f9c56144b05346288682e00"";\r\n    private const string CameraSystemPrefabGuid = ""8a5d96f565aaee14ca3e07575bb9ce80"";\r\n    private const string RadialSetPrefabAssetGuid = ""8b83134143223104c9bc3865a565cab3"";\r\n\r\n    private const string TestInputSystemProfilePath = ""EditModeTests/Services/TestProfiles/TestMixedRealityInputSystemProfile.asset"";\r\n    private const string TestEmptyInputSystemProfilePath = ""EditModeTests/Services/TestProfiles/TestEmptyMixedRealityInputSystemProfile.asset"";\r\n    private const string TestSpatialAwarenessSystemProfilePath = ""EditModeTests/Services/TestProfiles/TestMixedRealitySpatialAwarenessSystemProfile.asset"";\r\n    private const string CameraSystemPrefabPath = ""Experimental/ServiceManagers/Camera/Prefabs/CameraSystem.prefab"";\r\n    private const string RadialSetPrefabAssetPath = ""Features/UX/Interactable/Prefabs/RadialSet.prefab"";\r\n\r\n    private void Start()\r\n    {\r\n        Stopwatch stopwatch = Stopwatch.StartNew();\r\n\r\n        for (int i = 0; i < 1000; i++)\r\n        {\r\n            _ = AssetDatabase.LoadAssetAtPath<MixedRealityInputSystemProfile>(AssetDatabase.GUIDToAssetPath(TestInputSystemProfileGuid));\r\n            _ = AssetDatabase.LoadAssetAtPath<MixedRealityInputSystemProfile>(AssetDatabase.GUIDToAssetPath(TestEmptyInputSystemProfileGuid));\r\n            _ = AssetDatabase.LoadAssetAtPath<MixedRealitySpatialAwarenessSystemProfile>(AssetDatabase.GUIDToAssetPath(TestSpatialAwarenessSystemProfileGuid));\r\n            _ = AssetDatabase.LoadAssetAtPath<Object>(AssetDatabase.GUIDToAssetPath(CameraSystemPrefabGuid));\r\n            _ = AssetDatabase.LoadAssetAtPath<Object>(AssetDatabase.GUIDToAssetPath(RadialSetPrefabAssetGuid));\r\n        }\r\n\r\n        stopwatch.Stop();\r\n\r\n        UnityEngine.Debug.Log($""Load by GUID took {stopwatch.ElapsedMilliseconds} milliseconds."");\r\n\r\n        stopwatch.Reset();\r\n        stopwatch.Start();\r\n\r\n        for (int i = 0; i < 1000; i++)\r\n        {\r\n            _ = AssetDatabase.LoadAssetAtPath<MixedRealityInputSystemProfile>(MixedRealityToolkitFiles.MapRelativeFilePath(MixedRealityToolkitModuleType.Tests, TestInputSystemProfilePath));\r\n            _ = AssetDatabase.LoadAssetAtPath<MixedRealityInputSystemProfile>(MixedRealityToolkitFiles.MapRelativeFilePath(MixedRealityToolkitModuleType.Tests, TestEmptyInputSystemProfilePath));\r\n            _ = AssetDatabase.LoadAssetAtPath<MixedRealitySpatialAwarenessSystemProfile>(MixedRealityToolkitFiles.MapRelativeFilePath(MixedRealityToolkitModuleType.Tests, TestSpatialAwarenessSystemProfilePath));\r\n            _ = AssetDatabase.LoadAssetAtPath<Object>(MixedRealityToolkitFiles.MapRelativeFilePath(MixedRealityToolkitModuleType.SDK, CameraSystemPrefabPath));\r\n            _ = AssetDatabase.LoadAssetAtPath<Object>(MixedRealityToolkitFiles.MapRelativeFilePath(MixedRealityToolkitModuleType.SDK, RadialSetPrefabAssetPath));\r\n        }\r\n\r\n        stopwatch.Stop();\r\n\r\n        UnityEngine.Debug.Log($""Load by MRTKFiles took {stopwatch.ElapsedMilliseconds} milliseconds."");\r\n    }\r\n}\r\n```'"
7441,386681287,"b""It is negligible in our scenario, but very enlightening. I'm good with using GUIDs provided that we always use them to access test collateral :)"""
4116,280101951,"b""Could we format this test like the others above where we're also testing the return value?\r\n\r\nTypically it's best to also test setting the value with the same value again to ensure that not change has happened as well.\r\n\r\nThanks :)"""
4116,280109730,"b""> Could we format this test like the others above where we're also testing the return value?\r\n\r\nI find this formatting quite natural and clear. Can you paste the test formatted as you'd like to see it?\r\n\r\n"""
4116,280112161,"b""Sure take a look [here](https://github.com/XRTK/XRTK-Core/pull/138/files)\r\n\r\nI added an additional test case that was specifically designed to test the inverted axis types, and updated the tests to also validate two additional value changes. \r\n\r\nI don't think your tests adequately cover all the use cases.\r\n\r\nWe're testing:\r\n\r\n1. set initial value\r\n2. did value change? `Asset.False`\r\n3. set to value 1\r\n4. did value change? `Assert.True`\r\n5. set value 1 again\r\n6. did value change? `Asset.False`\r\n7. repeat for each additional value change (we used 4 additional values)\r\n8. set initial value\r\n9. did the value change? `Assert.True`\r\n10. set initial value again\r\n11. did the value change? `Assert.False`"""
4360,284332204,b'```suggestion\r\n            interaction.BoolData = true;\r\n```'
4360,284332495,"b""There's not a lot of value having a bool that is assigned to true, and used whereever the 'true' value is desired - just use true directly (same goes for other parts of this file)"""
4360,284333304,"b""Nit: It might be helpful to have a comment that this is specifically verifying that changing a value from 0->0 is the single exception that doesn't trigger another change"""
4424,284903070,b'Do you also need to tear down the scenes in the playmode tests? Interesting that there are only two locations where we create / tear down scenes in edito mode tests.'
4424,284903723,"b""Methods marked with [TearDown] get called after each test is run so it's destroying scene assets every time."""
6457,341782604,b'Can we just clean these up for our test files?'
6457,341795317,b'yes! i think i missed this one :)'
6457,341782734,"b""Is this used? I didn't see it added for the other files."""
6457,341795326,b'i do not think so. nice catch'
6457,342174955,b'removed'
5659,314135938,"b"">ITestSpatialAwarenessDataProvider [](start = 23, length = 33)\r\n\r\nNot really a question for this because I think this is consistent with the rest of the test code, but... any reason why this isn't just like, defined down below (i.e. public class TestSpatialAwarenessDataProvider : TestBaseDataProvider,, IMixedRealityDataProvider, ITestService, IMixedRealitySpatialAwarenessObserver, IMixedRealitySpatialAwarenessMeshObserver?"""
5659,314448834,b'Yea I was just following the existing paradigm. The main benefit though is we can test getting this interface as well as the base interfaces in all the registrar/registry stuff'
5659,314129827,"b'>Input System [](start = 24, length = 12)\r\n\r\nspatial awareness system'"
5659,314129876,b'I think there are a few more copy pastas down below as well\r\n\r\n---\r\nIn reply to: [314129827](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5659#discussion_r314129827) [](ancestors = 314129827)'
5659,314130324,"b"">Assert.IsNotNull(spatialAwarenessSystem); [](start = 12, length = 41)\r\n\r\nNit: Asserting null for creation of things via new isn't super interesting to verify (i.e. did I manage to new up memory?). If the constructor threw I think the test would have already failed out as well."""
7032,365326330,b'Nit: Add a comment about why TestUtilities is being excluded (being that we have another package that is including those)'
7032,365329614,"b'I\'m trying to leave a comment on line 29/30, but I can\'t seem to figure out how to do so (no changes there).\r\n\r\nI think that this:\r\n```\r\n <file src=""..\\..\\Plugins\\**\\Microsoft.MixedReality.Toolkit.Tests.*"" target=""Plugins\\"" />\r\n```\r\n\r\nNeeds to be updated to exclude the Test.Utilities binary right? Otherwise it\'ll end up getting included in both packages.\r\n'"
7032,365330126,b'Same comment for the test utilities CS code.'
7032,365437459,"b'Oh yes, you are right.  The test utilities were included in the test package when the test package should only contain the play/edit mode tests.\r\nAdded this to exclude the TestUtilities from the Tests package:\r\n```\r\n<file src=""..\\..\\Plugins\\**\\Microsoft.MixedReality.Toolkit.Tests.*"" exclude=""..\\..\\Plugins\\**\\Microsoft.MixedReality.Toolkit.Tests.Utilities*"" target=""Plugins\\"" />\r\n```'"
7032,365438013,b'Added'
4995,300427582,"b""Is it still necessary? (I'm asking because this setting will remain for all tests running after this one)."""
4995,300429789,"b""Do I understand correctly, that Release and InteractHover _must_ come on different frames? If that's the case, yield WaitForFixedUpdate should probably be just `yield return null`."""
4995,300430573,"b""Don't need `yield return null` here, because `Show` will skip a frame."""
4995,300431542,"b""Don't have to wait for physics here."""
4995,300431982,"b""I believe we don't need Wait for fixed update and null here, because hand.Show should wait for a frame for hand to show,"""
4995,300432149,b'Same here and below'
4995,300432403,"b'Probably not necessary, as cube is Destroyed as a whole in TearDown'"
4995,300432915,"b""Don't need 2nd and 3rd yields."""
4995,300441944,"b""In order to get the test to pass, I need `yield return null` for _Pinch right hand_, _Show left hand on object_ and _Pinch left hand_. I'm not sure why, but it won't work without them."""
4995,300445078,"b""I'm not so sure on the exact behaviour, but when I change this to `yield return null` it fails 50% of the time. """
4995,300453303,"b'Interesting, ok, thanks for clarification.'"
7480,387371732,b'Need to flip these'
7480,387372701,b'Oh good call'
5036,297046954,b'add comment'
5036,297047045,"b'scale is 0.5, fix comment'"
5036,297090441,"b'Can we add a function to BoundingBox to get the GameObject for all or one specific corner(s)? Could just be a wrapper around the FindDescendants, but would keep the logic inside BoundingBox.cs.'"
5036,297093428,"b""So swapping out just the input sim profile works like this? I tried something similar for writing gesture event tests, but was setting the entire MRTK.Instance.ActiveProfile because i didn't want to risk changing assets (the default input system profile) just by running tests. If the tests fail they would not reset the profile and inadvertently change the asset, which might get saved automatically by Unity. But changing the ActiveProfile at runtime causes a lot of broken behavior. Just changing the input sim profile probably is easier to keep working."""
5036,297275648,"b'Yep, this was working for me! The only thing I needed to make sure was to change the profile back to original at the end of the test.'"
5036,297320951,"b'ah great suggestion, thanks.'"
5309,303651682,"b'>/// <returns></returns> [](start = 8, length = 23)\r\n\r\nNit: Delete this line.'"
5645,313945878,b'Heh. Maybe we should increase the tolerance here.'
6924,358938881,"b'Breaking change, or does the migrationhandler help with this?'"
6924,358943733,"b""that is fine - it's just a rename - we don't need a migration for that - unity is smart enough to figure that out"""
6924,358948635,"b'I wonder if we can use `[MovedFrom(true, sourceClassName:""TransformScaleHandler"")]` to ease migration in code'"
6924,359290224,b'The `TransformScaleHandlers` in HandInteractionExamples have been updated to `MinMaxScaleConstraints` without any changes to that scene in this PR. '
6924,359293723,"b""We tried looking into the mentioned attribute MovedFrom but couldn't find any documentation about it. What does this attribute do? \r\nUnity handles renames automatically - there's no need to do any migration. All references to renamed scripts are still working. I'm not sure I'm understanding the concern about the rename."""
5965,325269549,"b""To match the experimental structure elsewhere, please put under Assets/MixedRealityToolkit.Tests/Experimental/PlayModeTests/BoundsControlTests.cs and namespace Microsoft.MixedReality.Toolkit.Tests.Experimental, or similar if there's a structure you'd prefer. But it should include Experimental in folder and namespace."""
5965,325285792,b'the scale and position vectors should be saved and then re-used across these tests.'
5965,325286185,b'These kind of asserts should be part of the instatiate setup'
5965,325286429,b'why getcomponent twice?'
5965,325288148,b'It would probably be good to also add a test that changes the bounds and see if the min/max scale adjust accordingly'
5965,325288300,b'Duplicate assert as prior tests and should be in Instantiate helper'
5965,325288496,b'why getcomponent again?'
5965,325288666,b'These numerical values seem like they should be saved as constants?'
5965,333939035,b'just so i understand this correctly: so your suggestion is testing changing the bounds in code (instead of hand interaction) and checking if the min / max applies to that as well? '
5965,333946918,"b""they're very specific to the tests - i saved the start size / center values but i'd rather keep those local - will put them in local vars"""
6410,355546512,"b""Per gilbdev's comment, it would be nice to add a test to verify that changing the text of a button at runtime changes the button's text."""
5938,323993965,b'Maybe rename to TestPointerHandler...so no one tries to accidentally add this in their scene'
4722,298996831,"b'Documentation here to make life easier for people maintaining this test, please'"
6863,357494965,"b'Do we need any new tests for the curve pointer and line pointer? Perhaps things that test that a curve pointer actually collides against colliders along the curve, and line pointers collider along colliders that are straight. Just realized we may not have tests for this.'"
6863,357765871,"b""hmmm, curvepointer can be tested through the teleportpointer implementation...but not sure what tests we have there. \r\n\r\nThe main test I should look into (if it already exists) for LinePointer is the IsFocusLocked code (which was pre-existing logic that was preserved). We set different start/end points based on that if condition which would be good to validate in a test (again if it doesn't already exist). """
6863,362646159,b'Test added'
4722,298998949,b'Document at least the intent of the class'
6321,337516835,b'does it work to set all three axis as constraints ? '
6321,337524081,"b""Yeah, you won't be able to move the object. I figured that this generally isn't behaviour we expect people to use, so testing it seemed unnecessary."""
6321,338067897,"b""I'd add the couple of lines to test this bc the stuff that breaks is usually the unexpected use cases :) . doesn't harm to have it there if it's working and we support it"""
6875,358219737,"b""nit: i'm not a big fan of the name of this test - it's not really clear to me what it does from reading the name - CombinedConstraintFarNear? """
7275,377325169,"b""A lot of our other code doesn't use the registry directly now and just goes like:\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/version/releases/2.2.0/Documentation/Boundary/BoundarySystemGettingStarted.html#accessing-boundary-system-via-code\r\n\r\ni.e. CoreServices.BoundaryService\r\n\r\nTo reduce the verbosity and take advantage of caching stuff.\r\n\r\nIt's also interesting to note that, the values returned by CoreServices should ideally also change after profile switches"""
7275,377325337,"b""@Troy-Ferrell FYI, I assume that we should probably access things that's consistent with how our stuff is documented"""
1305,149245690,b'nit: formatting'
1305,149245734,b'nit: extra line spacing '
1305,149245825,b'nit: fields should be declared at the top of the class'
1305,149245886,b'private or public accessors?'
1305,149245917,b'not being used?'
1305,149246036,b'missing access modifiers'
1305,149246090,"b""nit: put in it's own file"""
1305,149246204,"b""Each of the enums in this class could be in their own files as well, and probably don't need to be in this `LineUtils` class"""
1305,149246290,b'not used?'
1305,149246313,b'not used?'
1305,149246455,b'not used?'
1305,149246474,b'line space'
1305,149246552,b'nit: formatting'
1305,149246844,b'not used?'
1305,149246939,b'nit: remove'
1305,149473609,"b""I really _really_ don't like this pattern."""
1305,149473943,"b""That's what summary xml comments are for."""
1305,149474058,"b'Fantastic.  Also, please be sure to make sure the namespaces in the rest of this folder are also correct.'"
1305,149474146,b'Disable the material import on the mesh asset.'
1305,149474411,"b""I think it's always good to know, that way future devs know what scope they're in."""
1305,149475624,b'So what happens if someone tries to use a custom shader for line rendering?'
1305,149490974,"b""> your skin crawl\r\n\r\n\xf0\x9f\xa4\xa3 I wouldn't go _that_ far, but yes. It goes against all the industry standard best practices. """
1305,149491525,"b""It's just helpful to know if this information should have the _ability_ to be accessed outside the scope of just this class.  Idk it's really not a big deal here. Just my 2c"""
1256,149495564,"b""@keveleigh, I added the ability to choose if you don't want the canvases to have the UIRaycastCamera as their world camera."""
1256,149496030,"b""Also, btw, if you don't want to use the RaycastCamera, the MainCamera is the default when the canvas' worldCamera is null anyway, so the only thing you'll need to do is assign the main camera in the Focus Manager. But again, it's **_highly_** recommended you use the RaycastCamera on the EventSystem."""
1256,149497411,b'@DDReaper my latest commits have made this easier to do by asking users if they want to update their world camera to the RaycastCamera.'
1256,149501589,b'Will revert'
1305,149503933,"b'Haha, Unity development is a different beast. I think a lot of traditional software engineers get tripped up with some things.'"
1305,149504653,"b""Could we remove this, and it's meta file until we get it sorted out?"""
1305,149507503,b'was there an update for this?'
1305,149507557,b'Not seeing this change yet.'
1305,149526487,b'Is changing the reference to this file going to break anything?'
1305,149526546,b'nit braces'
1305,149526623,b'fields should be declared at the top of the class'
1305,149526707,b'nit braces'
1305,149526735,b'nit braces'
1305,149527098,b'nit formatting'
1305,149527395,b'nit braces'
1305,149527606,b'nit braces'
1305,149527636,b'nit braces'
1305,149527684,b'nit braces'
1305,149527713,b'bit braces'
1305,149527825,b'nit braces'
1305,149527955,"b""Maybe a name that's longer than lr. `lineRenerer`?"""
1305,149528098,b'nit braces'
1305,149528490,b'nit braces'
1305,149528518,b'nit braces'
1305,149528545,b'here too'
1305,149528642,"b'nit braces.\r\n\r\nAlso, we should cache this get component call in start or awake'"
1305,149528662,b'more braces'
1305,149528961,b'fields should be declared at the top of the class'
1305,149529004,b'nit: braces'
1305,149529228,b'we should serialize this `transformHelper` and give users the option to assign it in the inspector instead of searching this way.'
1305,149529258,b'nit braces'
1305,149529607,b'nit braces'
1305,149529644,b'more braces'
1305,149529698,b'some more'
1305,149529932,b'nit: use `gameObject.EnsureComponent<ParticleSystem>();` instead'
1305,149530004,b'nit braces'
1305,149530031,b'nit extra space'
1305,149530050,b'more braces'
1305,149530123,b'braces'
1305,149530160,b'braces'
1305,149530570,"b""I've noticed we get the line base line a lot. Maybe we should also require the component on the classes that use it."""
1305,149530597,b'Also: braces'
1305,149530783,"b""you could even make source a property and get the component if it hasn't yet been initialized.\r\n\r\nAlso: braces"""
1305,149530995,b'we could use `gameObject.EnsureComponent<MeshFilter>()` here too.\r\nAlso : braces'
1305,149531320,"b""nit braces.\r\n\r\nAlso, are we handling the case if we're rendering the line when we're not in playmode? (or does this not get rendered if we're not playing?)"""
1305,149531479,"b""Let's go ahead and do this TODO. seems simple enough"""
1305,149531570,b'ensure component here too'
1305,149531748,b'why call `this.StepMode` are we hiding an inherited property?'
1305,149531847,b'fields should be declared at the top of the class'
1305,149531983,b'we can probably remove this region now'
1305,149532045,b'more braces ;) Here and down the rest of this class'
1305,149532287,b'braces here and below'
1305,149532458,b'we should cache this instead of getting the component each update.'
1305,149532559,b'nit braces'
1305,149532588,b'braces'
1305,149532620,b'braces'
1305,149532653,b'extra space'
1305,149532725,b'Do we want to create a new hash set each time we draw the footer?\r\nMaybe we can cache this.'
1305,149532834,b'We can probably cache this list and clear it each time we add a point'
1305,149534098,b'braces'
1305,149534462,b'braces'
1305,149534506,b'braces here and below'
1318,149739087,"b""While we're at it, this should get moved into it's own file as well."""
1318,149739201,"b""Should be in it's own class unless it can be made private"""
1318,149741716,"b""Why can't we add these new properties to the PointerData class?"""
1318,149741895,b'Because this is public we should make the new method an overload and mark the old as obsolete.'
1318,149741990,b'same here with the overload and marking obsolete.'
1318,149742169,b'braces'
1318,149742778,b'See my changes in the PR about how to do this properly.'
1318,149743177,"b""Don't just remove this, but mark it as obsolete."""
1318,149743306,b'Same here. Mark obsolete and just return the first ray `Rays[0]`'
1318,149744334,b'remove'
1318,149744475,b'put back and mark obsolete. return default first ray.'
1318,149744764,"b""Seeing as this is a struct you don't need to use the new keyword each time.  ~~Setting the new values should be enough.~~\r\n\r\nOh I see, we're initializing the data this way.  Maybe you should have a utility method that does this for us instead. `UpdateRayStep()` or something along those lines."""
1318,149746675,"b""> It already is... \r\n\r\nIdk how I missed this haha. \xf0\x9f\x98\x86 \r\n\r\nI disagree that the context is lost.  It def makes it much more readable, which is important in open source projects.\r\n\r\nI also find it annoying when people warp a public class in other public classes that don't have any dependencies to the class they're part of."""
1318,149746975,b'I think it makes sense to make PointerData public and protect the setters.'
1318,149747443,"b""You won't have incomplete info if you provide the defaults.  but yeah throwing not implemented it fine."""
1256,149759592,b'See #1302'
1318,149762314,"b""Haha yeah. I'm really taking about exactly that \xf0\x9f\x98\x86\r\n\r\nI just like having the shorter references instead of 5-10 references.\r\n`FirstClass.SecondClass.ThirdClass.FouthClass.YourActualRefetence`\r\n\r\nI find anything more than two to be completely unnecessary."""
1256,149787530,"b""No I think where we're checking is the correct place.\r\n\r\nWe shouldn't have to know about what kind of source we're dealing with in the input manager."""
1256,149802153,b'Will do :)'
1256,149818315,"b""It never did before.\r\n\r\nThere were comments and notes about this. But currently voice doesn't raise souce up/ down/ clicked so it doesn't matter."""
1256,149831700,"b""`Select` is a protected voice command that's raising the click from the OS, correct?  I meant any custom voice commands in the MRTK via `SpeechInputSource`."""
1318,149832080,"b""Agreed, the Obsolete should also tell us what to replace it's usage with."""
1256,149833195,"b'> I wouldn\'t be surprised to see the ""select"" keyword sending in a type of None as well there\r\n\r\nThat wouldn\'t surprise me, smh, might just be the case.  What source is raised when we use the `Select` keyword? \'Cause it\'s not coming from `SpeechInputSource`.'"
1256,149849309,b'I think this is a separate issue from the uGUI pointer stuff.  Any chance we could open a new issue and address it later with a new PR?'
1308,149853355,b'That is correct. Will be fixed by the uGUI raycast PR'
1256,149853669,"b""I'll be sure to check for both `Hand` and `Voice` here."""
1256,149854157,"b'> If you test the uGUI stuff on HoloLens and use the ""select"" keyword, does it work as-is?\r\n\r\nI won\'t have a way to test this on device until Monday.  I took some vacation time. (Yes the irony about be still contributing even on vacation \xf0\x9f\x98\x86 )'"
1308,149855070,"b""I'll double check this in a different PR. Open an issue for me please?\r\n\r\nShould be working when deployed (Worked for me in MRTP3, but they did change the way that stuff works so idk)"""
1308,149855329,"b""What's wrong with the whitespace here?"""
1308,149855404,"b'nvm I see it, thanks!'"
1256,149855575,"b""I'll still be here \xf0\x9f\x98\x86 """
1308,149856042,"b""@keveleigh I'll address this in #1309 Removed OptimizeSceneForDeviceType"""
1256,149857895,b'@keveleigh fixed.'
1318,149872920,"b'I think he\'s trying to suggest you add `[Obsolete(""Please use RayStep[] Rays"")]`'"
1318,150031017,b'Why does the PR show changes to files from the merge?'
1318,150064576,"b""No, then the changes would show in the meta files.\r\n\r\nIt looks like the commits have been duplicated some how. Please fix so the PR only shows the changes you're planning to commit."""
1326,150114725,b'Maybe we should add a note that this only works for IL2CPP and .NET 4.6.\r\n\r\nWe also need to add the dll references for this to work properly in the MRTK project.  We will also need to add documentation for devs to know they will also need to setup their projects to use this as well.'
1332,150313775,b'nit: extra space.'
1332,150320823,b'Did we ever create an overload to mark as obsolete for this?'
1332,150321358,b'We should also put this back and mark as obsolete with the new usage in the message.'
1332,150321491,b'nit: whitespace'
1332,150321639,b'Should we make this virtual in case someone wants to do something here?\r\nShould we also make the `PrePostRaycast` virtual as well?'
1332,150322024,b'should we make this virtual as well?\r\n(same question for `OnPreRaycast`)'
1332,150327784,b'Some people like to inherit and overwrite their own logic for some classes.  See #1265'
1326,150330371,b'`namespace HoloToolkit.Unity`'
1326,150330544,"b""classes should be in their own files.\r\n\r\nAlso this class is in the generic namespace instead of the MRTK's"""
1326,150330589,b'nit: private access modifier'
1326,150330732,b'Take a look at the other headers in the toolkit.\r\n\r\n```\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License. See LICENSE in the project root for license information.\r\n```'
1332,150332715,b'Because this field was moved a few lines below the comment got left behind.  Should we also update this with a `<summary>` tag?'
1332,150336022,"b""I'm still trying to figure out if we should just make `PointerData` public and serialize it, without having to make the `PointerResult` class.\r\n\r\nThoughts?"""
1339,150373543,b'Should Z = 0 as well?'
1274,150418511,b'nit: braces.'
1274,150418539,"b""What replaces this?\r\nWhat is the new usage?\r\nWhy didn't the usages get updated in the `EditorEvents` down below?"""
1326,150687414,b'Will do.  I was just going off the [Unity Documentation](https://docs.unity3d.com/Manual/IL2CPP-WindowsRuntimeSupport.html) regarding this usage.'
1326,150697834,b'nit: missing access modifier'
1326,150697861,b'nit: missing access modifier'
1326,150698106,b'nit: `<summary>` tags?'
1326,150698307,"b""Have we checked to make sure `KeyCode.M` isn't used elsewhere in the project?"""
1326,150698640,b'Is there a way we can use `MicrophoneHelper.GetMicrophoneStatus()` without having to check for `ENABLE_WINMD_SUPPORT` in our implementation?'
1326,150698814,"b""Update the comment to use `<summary>` tags.\r\n\r\nor even `<remarks>` tags explaining it's usage."""
1326,150699576,b'When will the warning show? During compile or build time?'
1326,150699646,"b""If compile time, I'd rather not, but if it's at build time, then it's not that big a deal."""
1362,150870464,"b""You wouldn't have to cast here if explicit var declaration"""
1362,150892631,"b""If users don't have the `HolographicEmulationWindow` open in the editor we never get a valid window."""
1326,150893019,b'Just trying to think about ways to make this simpler for devs to use in their own code.'
1362,150915240,"b""That's what I'm saying."""
1362,150932675,"b""That would be nice, but I suppose this works in the meantime.\r\n\r\nI'd just add a note in the comments or something."""
1364,150951133,b'Nit: conflicts with changes in 1350'
1364,150953517,b'This is also fixed in 1350'
1364,150955110,b'`uiRaycastResult.IsValid`'
1350,151003104,b'Yeah that field name is obnoxiously long haha'
1350,151003592,"b""To be honest, I'm trying to understand why you'd ever want to skip registering the gaze pointer."""
1364,151243568,b'should we also add the asserts here too?'
1339,151264780,b'`HoloToolkit.Unity.Boundary`'
1298,151271440,"b""No, it'll update correctly.  I tested this in my own project.\r\n\r\nWe want the new script to take the place of the obsolete script."""
1298,151275138,"b""Just in case someone was referencing the class in code.\r\n\r\nThe scene changes will migrate properly, but people will still get compiler errors because it's a singleton, someone may have referenced it."""
1326,151292422,"b""That's a good point, would this also include Unity's holographic remoting?"""
1379,151526931,b'Probably should be `HoloToolkit.Unity.InputModule`'
1379,151527487,b'```\r\n#if UNITY_2017_2_OR_NEWER\r\nusing UnityEngine.XR.WSA.Input;\r\n#else\r\nusing UnityEngine.VR.WSA.Input;\r\n#endif\r\n```'
1379,151527781,b'breaking change?\r\n\r\nshould we overload and add obsolete message?'
1379,151528080,b'```\r\n#if UNITY_2017_2_OR_NEWER\r\nusing UnityEngine.XR.WSA.Input;\r\n#else\r\nusing UnityEngine.VR.WSA.Input;\r\n#endif\r\n```'
1379,151558557,b'Should this be a `GameObject` extension method?'
1379,151558862,b'`base.OnDestoroy` should be called last not first.'
1373,151797928,"b""I'm not sure what the difference is here."""
1373,151798164,"b""No, they're all under `HoloToolkit.Unity`"""
1373,151798273,"b'Unsure, I was following the established pattern.'"
1339,151822366,b'Should we be checking is the headset is opaque?'
1339,151822855,b'Should this be a warning?'
1403,152061837,b'Please use the `EditorPrefsUtility` class'
1403,152061927,b'nit: braces'
1403,152062038,b'remove this file.'
1403,152067737,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Scripts/Editor/EditorPrefs.cs\r\n\r\nThe name of the class is incorrect'
1403,152072277,"b""Why aren't you using the `EditorPrefsUtility`? \r\n\r\nThis just duplicates existing code."""
1403,152072412,b'Probably best to make this a const string with an underscore prefix.'
1403,152074969,"b""I really don't like the way we've engineered these editor windows.  This really breaks commonly used industry standard design paradigms."""
1403,152078184,b'Why put MRTK twice in the string?'
1403,152080379,"b'Well by biggest concern here, specifically, is duplicated code.'"
1403,152080787,b'Where is this meta file coming from?\r\n\r\nWhere is the accompanied data?'
1403,152083725,"b""I think it's fine for now, but we should def include it in the issue we open for refactoring."""
1339,152099856,"b""What's the new shader we're using?"""
1339,152100016,"b'```\r\nDebug.LogFormat(""Object {0} is within established boundary. Position: {1}"", name, gameObject.transform.position);\r\n```'"
1339,152100211,"b'```\r\nDebug.LogFormat(""Object {0} is outside established boundary. Position: {1}"", name, gameObject.transform.position);\r\n```'"
1339,152100474,b'Should this be cached as a const?'
1339,152100783,"b'We could probably use a local Vector3 field and just reset it, then update it with the new position before assigning the container objects new position'"
1339,152101033,b'Could we add a note about that here please?'
1339,152101472,b'Removes the need to allocate a new Vector3'
1339,152106005,b'Ah not as a const but a readonly private field. My bad.'
1339,152106123,b'Why are we choosing `-3` anyway?'
1407,152107893,b'Maybe add a link to Academy Content?'
1407,152108007,b'Some feature areas have dependencies. We may need to address this before actually implementing.'
1407,152118511,b'Do we want to get more specific with the minor versioning? \r\n\r\nFor example the fully qualified Unity Editor Release usually inlcudes `Major.Minor.0p1` or `Major.Minor.0f3` etc'
1339,152118721,b'Should we add these comments to our description of the value?'
1407,152143380,"b'I think that would be ideal, but then it adds another revision number. Should we loose the v1 prefix in favor of a minor prefix that increments for a single Unity version change?\r\n\r\nfor example:\r\nOld:\r\n`v1.2017.2.x`\r\n\r\nNew:\r\n`2017.2.0f3.x` or `v2017.2.0f3.x`\r\n\r\nwhere x is our revision number for that specific unity release.'"
1407,152147390,"b""Pretty sure that's the goal for each of the folders/packages feature areas"""
1407,152147794,"b""Although I'm unsure if really needing to do seperate packages for each feature area is really a necessity because when importing a Unity package you already get the option to include/exclude specific folders.\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/33048068-dfff0484-ce0d-11e7-8f6e-7e12180f27d5.png)\r\n"""
1326,152856299,"b""Is this a test/example class?  It doesn't belong in the core toolkit folder."""
1435,153037237,b'nit: extra line?'
1415,153293369,"b""Yes, because if you weren't implementing the interfaces you were not handling the input correctly.\r\n\r\nThis new class isn't intended to complicate, and this isn't just something trivial to add onto the `InputManager.prefab` that doesn't follow the appropriate implementation patterns."""
1419,153293781,"b""Because there's lots of Devs who still use the toolkit that need the support for older editors"""
1433,153297747,b'Good question. I noticed the same thing.'
1415,153301336,"b'The new, simple implementation is `XboxControllerHandlerBase`'"
1415,153549181,"b""For the most part the underlying logic is the same, with the difference here being that we're handling the input properly though the interface.\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/33331592-d87cd164-d416-11e7-824e-4147b1d7beba.png)\r\n\r\nThe important thing here is customization of the `Select` and `Horizontal Navigation Axis` that were hard coded previously.  Now users can map their own with easy dropdowns.  Because of the updated code structure, devs can now inherit directly from this class and implement their own additional logic on top of the standard inputs."""
1373,153558393,b'A fancy name?'
1453,153678897,b'nit: should be in `HoloToolkit.Unity.InputModule` namespace'
1453,153678962,b'nit: use `CameraCache.Main` for increased performance.'
1453,153679152,"b""Why are we raycasting again?  Couldn't we get the current ray from the GazeManager?"""
1453,153679261,"b'This is pretty expensive.  Probably a better, and easier way to get this from the `FocusManager` or `InputManager`.'"
1453,153679286,b'nit: use `CameraCache.Main`'
1453,153679306,b'nit: use `CameraCache.Main`'
1453,153679335,b'nit: use `CameraCache.Main`'
1453,153679348,b'nit: use `CameraCache.Main`'
1453,153679393,"b""Nit: remove this file and it's associated meta."""
1453,153679441,b'nit: formatting'
1453,153679521,"b""I'm pretty sure we might already have a class that does layers, or layer extensions. Should this logic be there?"""
1453,153679650,"b""There's already a class that extends raycasting.  Should this logic be there?"""
1453,153679852,b'nit: extra line space'
1453,153679890,b'nit: should this attribute be directly above the class declaration and under the summary comments?'
1453,153679941,b'nit: use `CameraCache.Main`'
1453,153680041,b'Should `TracktedObjectToReferenceEnum`  be outside the scope of `SolverHandler`?'
1453,153680129,b'nit: use `CameraCache.Main`'
1453,153680137,b'nit: use `CameraCache.Main`'
1453,153680263,b'nit; extra line space'
1453,153680304,b'nit: formatting'
1453,153680387,b'nit; please put attribute directly above class declaration '
1453,153680438,"b'nit: formatting,'"
1453,153680501,b'nit: * 0.5f'
1453,153680609,"b""Pretty sure there's already a class that should help find the controllers."""
1453,153680638,b'nit: extra line space.'
1453,153680659,b'Do we need this?'
1453,153680756,b'Nit: move to its own file?'
1453,153680791,b'nit: move to its own file?'
1453,153680836,b'nit: formatting.'
1453,153680878,b'nit: formatting'
1453,153680961,b'nit: formatting'
1453,153681010,b'nit: missing braces'
1126,153681262,"b""We don't need these Fire1, Fire2, Fire3, & Jump mappings"""
1126,153681319,"b""You've got Fire1, 2, & 3 mapped multiple times as well."""
1126,153681621,b'I think we should probably make a backup copy anyway in case users want to revert their changes.'
1126,153681847,"b'I forget, but did we ever add the option to get a clean InputManager.asset or does this only add to the current mappings?  ~~What happens if users do this more than once? Do we have a way to prevent duplicate entries?~~'"
1126,153681915,b'Ahh good we do.'
1456,153843245,b'why not use 1/30?'
1456,153843731,b'you could initialize this field in line and remove the start method all together.\r\n\r\n`private List<PersistentTouch> ActiveTouches = new List<PersistentTouch>(0);`'
1456,153844068,b'`CameraCache.Main`'
1456,153844445,b'please update parameter names to `touch` and `ray`'
1456,153844611,b'Lets optimize this by removing the delegate allocation and just iterating through a for loop'
1456,153844830,b'nit; missing braces'
1456,153844980,b'nit: update names to `touch` and `ray`'
1456,153845674,b'Why is this class included in your PR?'
1456,153846070,"b""I've changed the target branch for this PR"""
1456,153859124,"b""No need to update the PR. I've already fixed this."""
1126,153887648,"b""I prefer to have a way to get a clean copy without all the extra mappings I won't need."""
1126,153909486,b'I like having the option.'
1453,153930618,b'Multiplication is faster than division '
1436,154248002,b'Will do'
1436,154248059,"b""It's already built into the system to prevent people from doing exactly this."""
1436,154248215,"b""I'm not sure if this is exactly where we want to add this note, but down below in the class overview"""
1436,154403933,"b""Oh this is a very good point. I'll update this appropriately.  We should have a section exclusively on how to get events and how they're routed."""
1436,154467633,"b""I'm pretty sure these interfaces are already there, are they not?"""
1468,154468024,b'please remove the comments about the issue numbers.'
1436,154487093,"b""Could we make sure they're `MotionController` or something that doesn't sound as generic? """
1339,154739778,b'Should we update this to MRTP 5?'
1339,154740610,"b""Isn't this an event in the InputManager?\r\n\r\nWe probably don't need to subscribe to this kind of event if we can get it through the interface.  Might see a perf improvement here."""
1339,154746067,b'Exactly the interface I was talking about :)'
1436,154746418,b'I disagree.  This mirrors how Unity handles input and we should be doing that as closely as possible.'
1436,154746613,"b'This also opens up the Input Handler to use more generic inputs like keyboard presses, mouse clicks, etc.'"
1436,154746889,"b""Having this addition doesn't change anything immediately and really is an addition to what's already there."""
1436,154753381,"b""Yeah it was never implemented in anything we're currently using, but essentially it is for polling."""
1436,154794392,b'Why?'
1407,154794964,b'I think this is just copied and pasted from the main page.'
1453,154795335,"b""I'm also concerned we're duplicating raycast logic."""
1436,154797621,"b""I don't understand. It's matching that pattern Unity uses to poll for button/key/click presses.\r\n\r\nIt's generic enough to be raised/called/handled from any input source that implements this.\r\n\r\nI can't think of any other way to design it better than that."""
1436,154798147,"b""Plus there's not really and perf overhead because of the way we've reduced allocations and reuse Events in the InputManager."""
1479,155049117,b'Should we also add the toolkit version here?'
1415,155063176,"b""`GamePadHandlerBase` itself wasn't, but the `XboxControllerHandlerBase` was and it inherits from this class"""
1415,155063952,b'Are you using an older Xbox or the Xbox one S?'
1415,155064052,"b'Good catch.\r\n\r\nI was trying to keep in sync with your axis manager, but these must have gotten past me.'"
1415,155065021,b'So the input still works even though it says no controller connected?'
1415,155065176,"b""I'll double check."""
1415,155072162,"b""Seems like the scene may have gotten messed up in a merge. I'll double check this stuff later today."""
1415,155125584,b'Should be fixed now.'
1415,155126319,b'Fixed.'
1453,155379003,"b""extra `'`"""
1453,155379117,"b""please remove this file.  It was added to the project's `.gitignore`"""
1415,155391193,b'Forward better?'
1415,155391333,"b""If it wasn't setup then why was it mapped?\r\n\r\nShould we remove it/implement it?"""
1415,155391383,"b""It's for custom mappings."""
1415,155391540,"b""So it's backwards?  I used the mapping from prev version."""
1415,155391562,"b""So it's backwards? I used the mapping from prev version."""
1415,155391742,"b""Its for custom input mappings. Similar to the `XboxControllerInputSource`.\r\n\r\nIt keeps this component backwards capable in case people don't want to use the new input mappings."""
1415,155393825,"b""It's now properly used in the last update."""
1415,155394191,b'So what should the proper name be?'
1415,155394943,"b""Also so there's not any breaking changes."""
1415,155395026,b'Oh I also somehow forgot to add the new editor inspector script for this class.  One sec.'
1415,155397489,"b""No, it's not a breaking change because the string value isn't different, and the value serialized in the prefab isn't any different either."""
1415,155398300,b'\r\n![image](https://user-images.githubusercontent.com/13334553/33691957-d90a94f6-da9f-11e7-992c-007c5a6d91f3.png)\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/33691896-7ef348aa-da9f-11e7-8a52-5ab3f008c640.png)\r\n'
5920,322859657,b'nit: Can you rename to PointerBehaviorTests? Seems more accurate\r\n\r\n'
5920,322861249,b'why use bool? when you have PointerBehavior for the three states?'
5920,322987424,"b""because I want to test IsInteractionEnabled of a specific pointer. Otherwise I'm just testing if a setter works. Instead, I'm searching for pointers and actually testing if they are enabled."""
7246,394249700,b'nit: can you add a comment that translates that guid to the path - when kurtis replaced our hard coded paths to guids he left the paths as comments so ppl could still figure out where those assets are '
5923,322929980,b'Nit: Delete this extra line'
5923,322930269,"b""Nit: Delete the empty returns and blank comment line afterward.\r\n\r\nI think that VS auto-adds these which is mostly to get you to fill them out, but for tests they're not very useful so deleting them is the best thing to do."""
5923,322931711,b'.5 in this case means that the two vectors are at most ~50ish degrees away from each other right (i.e. at least in the same hemisphere)'
5923,322932171,b'@wiwei what is the guidance on adding a copyright block here?'
5923,322932680,"b'Nit: make your comments consistent: so, \r\n\r\n// Like this\r\n\r\n//instead of having some like this'"
5923,322933915,"b""I would also recommend making sure that the line pointer's origin is close to initialPos. Otherwise, the ray could be in the correct direction, but located at like 100m away, and the test would still pass."""
5923,322934738,"b'make sure to normalize both Direction and forward. A * B = |A| |B| cos (theta) so if |A| or |B| > 1 you will have incorrect value. You could also just use AngleBetween, now that I think about it...'"
5923,322935165,"b""I don't think you actually need to move the hand around -- this test is supposed to just check the first frame. It's good practice  for learning but not needed to check in."""
5923,322935670,"b'I would only recommend adding delays if they are really needed. As is, this test will take ~ 5 seconds. Imagine if each of our 175 tests took 5 seconds. The tests would take a long time to run.'"
5923,322962048,"b""It feels like all of the other tests here aren't testing the name of the test (i.e. they're not actually about the first frame) - what's the intent of the rest of the test here (also something that I wasn't sure about - I would assume that the direction of the hand is independent of it's position, once its direction is set. If this isn't the case (i.e. based on what exists below), i guess maybe it's just interesting info for me to know."""
5923,322962535,b'Please insert:\r\n\r\n```csharp\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n```'
5923,322962647,"b""I'll add a code verifier to check this."""
5923,323006517,b'The direction of the line pointer is not independent from the position of the hand.  My understanding is that the line pointer direction changes based on the position of the hand relative to the camera.  But the range of motion for the hands in the input simulation is way larger than the actual range of motion of hands.\r\n\r\n[Video - Line Pointer Direction Behavior](https://youtu.be/Fay6-mpgpW8)'
5923,323012443,"b'@julenka \r\nAdded in:\r\n```\r\n            Vector3 linePointerOrigin = linePointer.Position;\r\n\r\n            // Check that the line pointer origin is within half a centimeter of the initial position of the hand\r\n            var distance = Vector3.Distance(initialPos, linePointerOrigin);\r\n            Assert.LessOrEqual(distance, 0.005f);\r\n\r\n```\r\n\r\nThe distance value comes out as 0.002237.  Also the linePointer.Position is the same as linePointer.Rays[0].Origin.  Which is better, linePointer.Position or linePointer.Rays[0].Origin?'"
5923,323013784,"b""linePointer.Position is better because the rays might actually change some day (if we want to say make teh ray a little higher from the pointer's position)"""
5923,323017765,"b'@julenka \r\nChanged to:\r\n```\r\n// Make sure the angle between the line pointer ray and camera forward does not exceed 40 degrees\r\nfloat angle = Vector3.Angle(linePointer.Rays[0].Direction, Camera.main.transform.forward);\r\nAssert.LessOrEqual(angle, 40.0f);\r\n```\r\nthe current angle for the first frame is 36 between the line pointer and camera forward, should I increase the range or is 40 good?'"
5923,323018519,b'Changed to Angle calculation instead of Dot'
5923,323318718,"b""Either way is good! I think that in general having a comment clarify what it relates to in real world concepts is good (i.e. I'm not a dot product/cosine god, so having it regular terms around angles is helpful). \r\n\r\nAnyways, I consider this comment thread resolved. I think I should have been more clear about what I expected changed (i.e. mostly just comments), so I'll be better about that going forward!"""
5923,323362401,b'Add a comment describing the class. Look at the other tests for examples.'
6870,356942649,b'indent'
6870,357339387,b'that comment is a bit off. maybe:\r\nTests that sphere pointer behaves correctly when hand is near grabbable and grabbable is in or outside camera FOV'
6870,357487472,b'Whoops! Nice catch.'
6822,359061998,"b'What is the behavior if `pointer.DestroyOnSourceLost` is true but `PlayModeTestUtilities.GetInputSimulationService().EnablePointerCache` is false? Would a pointer be disabled, but in a cached object list? I would expect the following\r\n\r\nWhen input source is lost....\r\nEnablePointerCache true, DestroySourceLost true => not sure the behavior\r\nEnablePointerCache true, DestroySourceLost false => Pointer gets disabled but moved into the cache\r\nEnablePointerCache false, DestroySourceLost false => Pointer gets disabled\r\nEnablePointerCache false, DestroySourceLost true=> Pointer gets destroyed'"
6870,360238993,b'Empty returns in all methods'
6870,360239136,"b'nit: maybe remove ""giant"" from test name. Seems just simple 1m primitive cube yes?'"
6822,361224818,"b'> EnablePointerCache true, DestroySourceLost true => not sure the behavior\r\n\r\nIf DestroyOnSourceLost is true, the pointer will be destroyed. Whether the pointer is ""added"" to the cache or not, depends on how quickly the pointer destroys itself since it\'s not immediate by Unity. \r\n\r\nTechnically it\'s possible for a pointer to be added when it\'s about to be destroyed is added, or a pointer that is inactive but is destroyed at some future point while in the cache. \r\n\r\nIn these cases, the cache scans itself and clears null entries with CleanActivePointers() or with the stack popping while loop scan'"
7016,364891002,b'This would also be good to simplify with base class shared between the two'
7016,365006732,"b'Good point! I still would prefer to wait until we have more need, specifically when creating a ConePointer. I can create a bug for this and mention that following up from #7016 we should make a base class.'"
7016,367000841,b'Can you rename this? Not understanding viewofview'
7016,367000904,b'maybe meant FieldOfView?'
7016,367001452,"b""Since you arent' creating an interface or base class, maybe add else statement here that throws error saying test helper isn't valid for this type of pointer? To help notify people who might try to use this in future"""
7016,367095727,b'Was supposed to be TestPointerFieldOfViewHelper'
7016,367096150,b'Was supposed to be TestPointerFieldOfViewHelper\r\n'
7283,377384076,b'nit: very minor but maybe TestPointerFOVLargeColliderHelper to simplify a bit'
7283,377384277,b'nit: can getComponent of the box collider be pulled out of the for loops?'
7283,377385949,b'Also nit: can this be placed at bottom of class as private?'
7283,377394302,b'Done'
7283,377394604,b'Done'
4527,286744435,"b""Per suggestion from @wiwei we want to avoid numbering the tests since it's arbitrary. Suggest removing the numbers to stay consistent with his suggestion."""
4527,286744604,"b'Since this is actually not relying on running the editor / doing hand movements / getting focus events, could this actually be an editor test?'"
4527,286744691,"b'Same here, wondering if it could be an editor test instead of a playmode test. Advantage is editor tests run in CI today, playmode tests when they will run in CI is TBD as far as I know.'"
4527,286848148,"b""I suppose it could be - the reason I added it as a runtime test was that we had some customers scaling their buttons during runtime, so i wanted to simulate that scenario - in the end it shouldn't matter anymore as the calculations are the same now"""
5033,298071522,"b""That's incorrect. `Setup` implementation from `IPrebuildSetup` will be called once before entering play mode (this is when  `EnsureTextMeshProEssentials` should be called because it installs a unity package). NUnit `[Setup]` will be called before executing test, when already in play mode. This test needs 2 separate setup methods, which serve different purposes."""
5123,298705825,b'I think Lars has a convenience method in his latest interactable tests pr that you can call instead of doing manually.'
5154,299154909,b'Suggestion: you can now use TestHand class Luis wrote to make hand movement easier.'
5154,299154958,"b'remove comments, here and below.'"
5154,299230299,b'Nit: Maybe leave a comment why these numbers are these numbers? (e.g. they are default distances for pressable button)? '
5298,303046235,b'```suggestion\r\n        /// This test verifies that buttons will trigger with far interaction\r\n```'
5781,319937786,b'should be safe to not destroy this as the play test base class is deleting all the root level gameobjects in the tests scenes on teardown '
5781,320477137,b'Thanks.  Yes I ran all of the tests with my latest changes.  They all pass and none leave any gameobjects behind.'
5781,320533540,b'Woah cool'
5781,320878565,"b""I know.  It's kind of like magic.  I learned about this relatively recently when working on [UnityGLTF](https://github.com/KhronosGroup/UnityGLTF).  Unity knows how to parse this in its test window and it shows up like this.\r\n\r\n![image](https://user-images.githubusercontent.com/41760870/64276738-7d8dbf00-cefd-11e9-97fb-8a8915bc845f.png)"""
6048,327344882,"b'New in this iteration, I get the zero point after scaling and use it when computing distances.'"
6048,327345158,"b'New in this iteration, I get the zero point in ScaleWorldDistances in addition to ScaleLocalDistances.'"
6129,329639118,"b'```suggestion\r\n            Assert.True(wasClicked, ""Interactable is enabled, and should receive click events"");\r\n```'"
7128,370673121,b'can you use TestHand instead of this util method? would be easier to use and easier to read '
7128,370746848,"b'I feel like I\'ve seen a lot of comments like this recently about this API. Do we want to deprecate it and migrate everything over to `TestHand`? Are there still cases where this API is ""better""?'"
7128,370750922,"b""`TestHand` is just a wrapper on  PlayModeTestUtilities.ShowHand and other PlayModeTestUtilities fucntions so they can't be deprecated"""
7128,370768542,"b'Changed all calls to PlayModeTestUtilities.ShowHand, move or hide found in the file to TestHand '"
7128,371174627,"b""@keveleigh - I think this is more a copy paste thing - we never unified the tests to stick with the one or the other - it's ok to use either of them but imho the wrapper is just easier to read / nicer to use - I'll open a ticket to go over the tests and replace the utility calls with the test hand"""
5955,324918256,"b'Now that the test has been already written, this is more of a consideration for next time, but in general having tests who state assertions depend on previous state (i.e. the fact that things start at 2 in this test case are because the previous ""cases"" already exist). This makes it hard to do things like delete things from earlier parts in the test (imagine we were to add a new test case in the middle after the first case and before the second case, we\'d have to change up everything after it).\r\n\r\nWhere in reality, these really are separate test cases (i.e. PrimitiveManipulatorOneHandedEvents, PrimitiveManipulatorTwoHandedEvents, PrimitiveManipulatorOneAndTwoHandedEvents)\r\n\r\nThis is something that may not actually matter but when it does, it\'s something that you would wish that you had had structured differently.'"
5944,324405083,b'Remove'
5944,324405495,b'Normally for vector comparisons we use `TestUtilities.AssertAboutEqual`'
6165,330324827,b'out of curiosity is a light needed?'
6165,330328339,"b""No it isn't, but I added it to inspect what was going on in the editor a bit better. I can remove it."""
6165,330328671,"b""I figured, feel free to keep it. But add comment that it's just for developer visually inspecting test or something"""
6165,330698526,b'Please add summary comment'
6165,330779231,"b'Since this deals with lifetime management, it would give more confidence if we stressed these tests a bit more, something like creating 100 objects, changing the materials every frame on each object, then destroying all 100 and ensuring nothing is leaked.'"
6165,330783867,"b'Nice catch, will do!'"
6165,330785880,"b""That's a great idea! Let me see if there is an API to query the scene material count. If so, I can add this in a future PR. :)"""
5336,304265776,b'move these up'
5336,304265935,b'Fix comment'
5336,304265994,b'Fix comment'
5336,304266077,"b'Comment this class, what expectedscroll means'"
5336,304266299,b'add comment explaining you needed to do this because currentpanposition actually gives you the current pan DELTA (I should update the naming of that property in HIPZ).'
5336,304266365,b'Remove comment'
6915,358527521,b'why not use SlowMoveHand?'
6931,359404414,b'nit: Missing new line'
6931,359445476,b'```suggestion\r\n            TestHand rightHand = new TestHand(Handedness.Right);\r\n```'
6931,359449726,"b""I think this was copied from some of the other code above/below, but in general we should avoid abbreviations unless they have some crazy high value.\r\n\r\nhttps://google.github.io/styleguide/cppguide.html#General_Naming_Rules\r\n\r\nOtherwise, you can end up in situations where you're reading something and see:\r\n\r\nh.Show() - what is h? Is it handle? Is it hamburger? Is it hand? \r\nh2.Show() - what is h2? What is it's relationship to h? Are they ordinal? (no, because one is left, one is right, and there numbering actually doesn't matter)\r\n\r\n\r\n"""
6931,359450753,"b'Compare that to:\r\n\r\nleftHand.Show()\r\nrightHand.Show()\r\n\r\nAnd it\'s much clearer in the code what is happening.\r\n\r\nIn the context of this small function the value isn\'t as high, but as things get added to tests (which they will) and things change in the future (which they will), there\'s the chance that the distance increases to the point where the declaration of h isn\'t close enough for someone to be like ""oh yeah it\'s the right hand""'"
6931,359450809,b'```suggestion\r\n            TestHand leftHand = new TestHand(Handedness.Left);\r\n```'
6931,359451191,b'I think missing a call to both rightHand.Hide() and leftHand.Hide() - I think this only hides the right hand right now.\r\n\r\n'
6931,359453857,"b""Also out of curiousity, what was the delta with this change? i.e. because we changed the touch/scroll point mechanics I think that this tweak would be expected, I'm just curious how much of a delta it was compared to before."""
6931,359882721,"b'New Pan Delta is 0.2558216. On device this should remain the same, but on the editor, Hand Controller pointer (around Index Tip) is being used for initialization but Hand Palm position is being used on update, so there is an offset there. No Hand Palm on HL1.'"
5416,308998259,"b'>WaitForSeconds(SolverUpdateWaitTime) [](start = 29, length = 36)\r\n\r\nDoes this actually add 2 real seconds of wait per test? Or is this ""game time"" which can be configured to move faster than normal?'"
5416,308998557,"b""Can you add a comment about where the camera is located (i.e. is it at 2.5m?) so that this check can have a little more context about what it's about"""
5416,308998776,"b'Would also be interesting have a test that shows what happens when both hands are in the scene - if people start depending on this behavior, we should have a test for that'"
5416,309042232,b'@wiwei it is real time. We can & should totally use game time though. Although I think the solvers are being updated against realtimeSinceStartup'
5416,309314977,b'Just switched comparison to be the actual head transform in case it changes'
5416,309316037,b'@wiwei  yea problem is TimeScale ( https://docs.unity3d.com/ScriptReference/Time-timeScale.html ) does not affect realtimesincestartup which is used by the solvers'
5416,309335876,b'Added to TestHandModality'
5500,310293885,"b'instead of breaking inheritance, can you just add virtual to the BasePlayModeTests function and then override here?'"
5500,310294349,"b""Good catch! I didn't know the scene wasn't wiped between tests"""
5622,313177080,b'why 2?'
5622,313177217,b'Why not just use handjointutils?'
1544,158173393,"b""Why do we require this component be attached to the GameObject if we're inheriting from that class?"""
1544,158174432,b'switch?'
1544,158174605,b'switch?'
1544,158174659,b'nit: missing braces'
1544,158174723,b'What work is there that needs to be done here?'
1544,158175013,b'Do these values get updated?  Should they be const?'
1508,158175427,b'Should this be a LayerMask so we can choose more than one?'
1560,158344804,b'Why remove static?'
1563,158375640,b'Should this be a monobehaviour or maybe an extension?'
1550,159012038,"b""Did it though?  I think the latest versions of the Editor will now return that the device is present even when it's unplugged."""
1554,159012077,"b'It removes all the old files in the folder before regenerating, so it should be fine.'"
1554,159012125,"b""Also, I make them more generic bc the changes made it so we're no longer creating duplicate texture sizes.  Now we generate only what we need, and no more duplicate sizes exist.  It's possible that a single texture is being used for many icons."""
1532,159012384,"b""`this` is required _because_ we're setting the values in the constructor.\r\n\r\nIdk, I just keep getting a compiler warning about it, and figured we should heed the warnings."""
1530,159012508,"b""Well I already added these changes to the packages and they're already released, soo...."""
1530,159292253,"b""Well the stabilization branch got merged into master before I could review it, and this was the stuff that needed to be fixed.  I don't like making releases that include warnings or issues building, which is what the changes outlined show.\r\n\r\nSo you'd rather put out a broken release?"""
1532,159293407,b'![image](https://user-images.githubusercontent.com/13334553/34496114-233a315e-efad-11e7-8cb3-8b9973ec0af7.png)\r\n'
1496,159295481,b'Should we do anything here?'
1496,159295517,b'Should we be doing anything here?'
1563,159308536,"b""We should check if it's null first before searching, that way we can give devs the option to serialize this into the prefab/scene."""
1563,159308600,b'nit; all Unity Methods should be private'
1563,159308672,b'nit: extra line'
1563,159308747,b'please use the `<summary>` tags'
1518,159317817,"b""I'm not a big fan that we have this empty override method in each of the classes.\r\n\r\nIs there a way to have the option of using this, without having to have an empty stub in every class that inherits from `Singleton`?"""
1456,159326185,"b'If this is the case, should we also add `TouchSupported` in our SupportedInputInfo enum?'"
1456,159329357,b'Good point. Maybe we should have?'
1508,159555258,b'NameToLayer might not be good.  Devs may have different layer names and may even have this missing in their projects.'
1508,159780920,"b""If we're not using the custom editor, do we need to declare it?"""
1508,159780969,"b'If this is empty, does it need to be here?'"
1544,159781366,b'Why the new keyword?'
1544,159781501,b'Should be \r\n```\r\n#if UNITY_WSA \r\n#if UNITY_2017_2_OR_NEWER\r\nusing UnityEngine.XR.WSA.Input;\r\n#else\r\nusing UnityEngine.VR.WSA.Input;\r\n#endif\r\n#endif\r\n```'
1544,159781728,b'Should be \r\n```\r\n#if UNITY_WSA \r\n#if UNITY_2017_2_OR_NEWER\r\nusing UnityEngine.XR.WSA.Input;\r\n#else\r\nusing UnityEngine.VR.WSA.Input;\r\n#endif\r\n#endif\r\n```'
1544,159781847,b'Please revert this file.'
1508,159945595,"b""MRTKEditor  is not a Unity thing.\r\n\r\nI'd really like us not to use this custom editor if we don't need to.\r\n  \r\n(Def a point of contention for me, sorry) """
1530,159959263,b'They are. With the fixes addressed.'
1508,159961009,"b""Aside from the redesign of the editor stuff itself, why does this empty class need to be declared if it's empty and unused?"""
1509,159964128,b'extra spaces?'
1578,159965006,b'We can probably revert this line.'
1486,160003664,b'Why not keep to the usual naming conventions and make this `IFocusHandler`?'
1486,160003754,b'needs to initialize `this`'
1486,160003847,b'I think the rename is not needed. The usual pattern for singletons is the manager suffix.'
1486,160004008,b'Still not a fan of this string.'
1486,160004052,"b""I almost feel like the source and it's id should be enough to determine what the events origin is."""
1486,160004373,"b""If we're defining the enum values we should probably use the flags attribute and make the assignments bit operators"""
1486,160004480,"b'Also, it seems like some of these changes are beyond the scope of just multi pointers'"
1486,160004527,b'Def want to make sure this is fixed before merging.'
1601,160006350,b'Whichever comes first'
1486,160055398,"b""Not sure if it's worth caching the reference if we're just going to call it directly below"""
1486,160055504,"b""I think don't think there's a strong reason to rename Pointers to Foucusers."""
1486,160055522,b'Event datas should only ever be created in the InputManager and handed there.'
1486,160055611,"b""There's no reason to have these events if we're already raising them through the InputManager"""
1486,160055806,"b""I don't think this should be an override, but instead have the InputSourcePointer own the Cursor"""
1486,160055831,b'Not convinced we need this here.  It should be enough that we pass this info through the raised event'
1608,160295380,"b""No, it's not a breaking change, because in all calling places, we're passing an array anyway.\r\n  """
1608,160295487,"b""`GetType()` is causing an enormous amount of allocations during this time.\r\nWe've pretty much finished developing this portion of the system, and I could instead just comment it out, with notes that tells people to comment it back in if they need to test it.\r\n\r\nI think the performance is higher priority for something that may not ever get called."""
1608,160295658,"b'Yes, this change is very worth it, considering it removes _all_ allocations for this check.'"
1518,160296107,"b""Idk, the script runtime execution order issues seem to be a one off for most classes, not all.\r\n\r\nOption is better in this case, cause it's not something people will have to use every time."""
1518,160296170,b'Simply making the abstract method virtual in the base Singleton Class should be enough.'
1518,160296276,"b"">Having it be optional to include would render it useless, as certainly nobody would use it.\r\n\r\nI disagree, if there's a need, it'll get used.  We just need to make sure we document it correctly."""
1486,160305316,b'Ah I see. Well why not just use the built in `Input.Selectable` to handle this kinda stuff?'
1486,160305477,"b""I don't see another place where we're registering focusers that aren't pointers, or is this in a later revision?\r\n  """
1486,160305694,"b""I think with my refactor work, because each Input Source is unique, you should no longer get events that aren't from a single source. \r\n\r\nPlease review and let me know if that's not the case."""
1611,160545083,"b'Agreed, I think leaving it the same as it is, should be okay. eg: `InputModule`'"
1518,160557480,b'I agree with this.\r\n\r\nSomething like `SharingStage.AssertIsInitialized();` Should be enough.'
1611,160575963,b'`MixedRealityToolkit.Input.Cursor` conflicts with `UnityEngine.Input.Cursor` as well.'
1611,160803351,b'Agreed'
1611,160803838,b'Interations?'
1611,160804366,"b""I'm not sure how I feel about this namespace because it hides the UnityEditor one."""
1611,160804608,b'Do we really need namespaces for each of these?\r\nI think bundling most things in the base InputModule namespace should be enough.'
1611,160804790,b'Should be able to'
1611,160989950,"b'Ah, I see, that makes sense.'"
1620,161083107,b'spaces > tabs'
1623,161119724,"b""Don't forget to add `eventData.Use();` to consume the input event."""
1613,161344805,"b'Ah okay, I see. Then we should name them something different.'"
1486,161345638,"b'Yes, that is correct'"
1629,161358382,"b""Where did this section go?\r\n\r\nInto it's own class? (I hope)"""
1636,161588402,b'Please revert. Null Coalescence is not supported in Unity.\r\n\r\nhttps://blogs.unity3d.com/2014/05/16/custom-operator-should-we-keep-it/'
1636,161820905,b'Seems kinda long.  We could probably add a `using MixedRealityToolkit.Utilities.AdaptiveQuality.AdaptiveQuality;` to the top of this class.'
1636,161821363,"b'Or, would it make more sense to add the `Examples` subnamespace at the end to make it all fall under the ` MixedRealityToolkit.Utilities.AdaptiveQuality` namespace?'"
1613,161823220,b'Is the inheriting class supposed to set to be able to update/change these fields?'
1613,161827963,"b""Well, just adding the `[SerializedField]` attribute to the base class' protected field should be enough to expose them in the editor.  If we're not trying to override or change the values in the inherited class then we don't need to override or call a new field."""
1613,161828467,"b""I'd like to avoid the `MRTKEditor` stuff until we get that sorted out."""
1613,161829091,b'Then why would we want to expose it in the inherited class?'
1613,161829472,"b""The only thing I'm trying to fix in the PR is the fact that we're hiding inherited members."""
1642,161923185,"b""Do we really need a log that this always returns false when it's stated in the comments above?"""
1642,161923384,"b'This is kinda strange, I did a straight merge from the master branch, without any edits.'"
1642,161924239,"b""Idk, having optional debug logs like this is probably useful.  IMO, Production apps wouldn't want this kind of thing spamming the console."""
1642,161924286,b'Not to mention the performance impact debug statements have in general.'
1648,162460882,b'Could we shorten this to just `/Sharing`? like we did above?'
1648,162461058,"b'Yeah I think we can just use `/Assets/MixedRealityToolkit-Examples/MotionControllers-GrabMechanics` as the link, correct?'"
1650,162461490,b'Does updating this material required for the gLTF update?'
1650,162462038,"b""Will this meta file change break the scene references in other people's projects?"""
1648,162470080,"b""Oh I see. I wasn't aware we had a Dev_Working_Branch there."""
1659,163365736,b'Just following [MSDN naming conventions](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/names-of-type-members#names-of-fields)'
1659,163365925,"b'Indeed, I added this intentionally.'"
1659,163367645,"b""Potentially you could update the logic being performed in the Solver Handler (or any inherited classes), or change it's position, without having to destroy and create a new instance of the component/object."""
1659,163375858,"b""Well as far as I can tell, I'm the one of the biggest contributors and I follow the MSDN guidelines.\r\n \r\nIt might be better to follow industry standard and address this in a [separate issue](https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/1660)."""
1666,163726176,"b""Should we be using `UNITY_WSA` or `WINDOWS_UWP` throughout the project?\r\n\r\nWhat's the difference?"""
1666,163924601,b'See https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1666#discussion_r163919711'
1666,164014665,"b'Ahh, I thought it was from the reflection extensions '"
1518,164544272,b'I change a good deal of things here in the focus manager concerning pointers in a separate PR. Probably not a good use case example.'
1518,164544524,b'Why are we removing this?'
1518,164544586,b'Oh I see it was moved here'
1673,164756046,b'What obsolete code is the 618 suppressing?'
1673,164756256,b'We can most likely remove the 618'
1676,164757193,b'missing private access modifiers in methods and fields.'
1676,164757363,"b'Please make sure this builds for windows standalone as well.\r\nAlso, the VR namespace should be XR'"
1676,164757448,b'remove unused methods.'
1676,164757842,b'You should only use `DestroyImmediate` in the editor. `Destroy` should be enough at runtime.'
1676,164758034,b'`gamobject.EnsureComponent<WorldAnchor>();` would remove the need to check for null.'
1676,164758255,"b""Do we really need all these debug logs?\r\nComments should be enough, if you're no longer testing"""
1676,164758335,b'Missing namespace'
1518,165479224,b'We can probably remove this method. Redundant anyway.'
1518,165479318,"b""Should probably revert this change. We're not using the 2017.3 Editor for the dev branch."""
1518,165479437,b'Remove redundant method call'
1685,165479782,b'Yeah it should probably just have the Holo replaced with MixedReality'
1518,165481154,b'Great addition!'
1518,165481415,b'Why rename this?\r\nUnsure but I think the spelling is correct here.'
1518,165481666,"b""please revert this file. May have unintended consequences in other people's projects."""
1518,165481794,b'nit: revert'
1518,165481972,b'nit: remove redundant base call and and method.'
1518,165482016,b'nit: remove redundant base call and and method.'
1518,165482470,"b'We should probably use `DontDestroyOnLoad(instance.transform.root);`\r\n\r\nAlso, remove extra `;`'"
1518,165482667,b'This method seems rather redundant to `AssertIsInitialized()` and `IsInitialized` property.'
1518,165483326,"b""I tried this out but it doesn't actually seem to do anything in the editor.\r\n\r\nI was able to add a gaze manager component multiple times anyway.\r\n\r\nI don't believe this attribute carries over to inherited members."""
1518,165484417,"b""What's the purpose of the lock here?"""
1518,165484555,b'nit: revert. Does not relate to PR'
1518,165484582,b'nit: revert. Does not relate to PR'
1518,165484689,b'Why remove these spaces?'
1518,165487649,b'We could check to see if we need to instantiate a new instance here by searching for or creating a new `GameObject` to attach this component to.\r\n\r\nFor example:\r\n```\r\nif(objects.Length==0)\r\n{\r\n    instance = new GameObject(typeof(T).Name).AddComponent<T>();\r\n}\r\n```'
1690,166736202,"b""Good question. \r\n\r\nI don't think it's a good idea to make the object you're using to start the dictation a global listener.\r\nBut if you did, you'd have a script on the object that listens for the click handler:\r\n\r\n```\r\nOnInputClicked(EventData eventData)\r\n{\r\n    StartCoroutine(DictationManager.Instance.StartRecording(gameObject);\r\n{\r\n```"""
1575,166767518,b'This is required when using the input system prefab.'
1575,166768317,"b'New setups are auto opt in, while existing setups are opt out. '"
1690,166776944,"b""Okay, I'll make the listener optional."""
1711,167757729,b'Will do.'
1711,167757773,"b""Unsure, but it's definitely still here in the Stabilization branch."""
1711,167757916,"b""I don't believe we were using it any longer. The attach to controller and motion controller visualization scripts made this obsolete. Also it was missing the script reference because its only script component was removed.  I'll double check the Stabilization branch to make sure."""
1711,167758041,"b""I thought we agreed that all visual representations would be UX?\r\n\r\nAlso, after my input refactor we won't have the requirements to use a cursor on our pointers, this is just temporary.  This class is getting removed anyway."""
1711,167758223,"b""No matter how we approach this, most likely the ux will be dependent on the input folder in some way. But we won't have the Input depending on the ux."""
1711,167760151,"b""Okay, so I went back to look. This got wrapped up into the MixedRealityCameraPartent prefab.  But it's not been deprecated. The Visualizer was the missing script reference on this. I can revert, but not sure if it's really needed if it's already on the camera prefab."""
1711,167760187,"b'Yup, this prefab was never removed.'"
1711,167764138,"b""Okay, I'll be sure to put it back and fix the script reference."""
1711,167992184,"b""@DDReaper I think we should def focus on making some feature areas decoupled. For example spatial mapping and understanding shouldn't have dependencies on input for example."""
1717,168244587,b'Do we want to check if application is editor and use destroy immediate if true?'
1718,168363500,b'`HolographicSettings.isOpaque` should be enough to evaluate the platform.'
1718,168382590,"b'Is this compatible with previous versions of unity? \r\nEg 5.6, 2017.1?'"
1718,168382626,b'This change should be reverted as well'
1718,168382835,b'Please move anything in resources folder to appropriate place. Resources folder was removed.'
1718,168382908,b'Please revert editor version.'
1718,168456242,b'Auto unity updates should handle these changes. Should leave editor version as is'
1718,168902615,b'nit: missing private modifier'
1718,168902708,b'nit missing private modifier.  Also please remove default comment.'
1718,168903035,b'Do we want to remove this?'
1718,168903158,b'Are we using this anywhere?'
1718,168903282,"b""We're adding another type of Singleton into the toolkit?\r\n\r\nNot sure this is a good idea."""
1718,168903452,"b""Doesn't compile for standalone or other platforms."""
1718,169439091,b'why is this commented out?\r\n\r\nShould we remove it?'
1718,169439494,b'Why are we getting the name?'
1718,169439765,b'nit private access modifier. We can remove the comment above as well.'
1718,169440152,b'We should probably encapsulate these fields with properties if they need to be accessed by an external class and make these private and serialize the fields.'
1718,169440295,"b'Also, use PascalCasing for public and camelCasing for private'"
1718,169440529,b'nit missing private access modifier and we can remove the comment above'
1718,169440625,b'nit missing private access modifier and we can remove the comment above'
1718,169440715,b'(Goes for all classes in this PR.)'
1718,169440860,b'nit missing private access modifier and we can remove the comment above'
1718,169441313,b'Memory leak in this class when calling renderer.material (here and below).\r\n\r\nPlease properly cache the material and dispose of and created instances.'
1718,169441566,b'strange brace formatting in this section.  (also missing braces on this line.)'
1718,169441645,b'missing braces'
1718,169441842,b'breaks cross platform compatibility '
1718,169442015,b'missing private access modifier'
1718,169442136,b'Is it?'
1718,169442234,b'missing braces'
1718,169442372,"b""please move into it's own file and encapsulate the fields."""
1718,169481743,b'`DestroyImmediate` should only be used for editor code only.  Please use `Destroy` instead.'
1727,170000909,"b""What's this doing exactly?\r\n\r\nI'm not sure we should be defining our own symbols."""
1727,170001148,b'Should we replace this with calls to the InputManager.RaiseManipulationStarted/Ended?'
1727,170001371,b'We should probably encapsulate this and serialize the private field.\r\n\r\n(same to all public fields below)'
1727,170001795,b'Where is this object located in relation to this GameObject the component is on?'
1727,170001965,b'please move the start method between awake and update.'
1727,170002536,b'not sure I like using the `#if SYMBOL` here for a placeholder todo'
1727,170002734,b'public classes should be in their own files.'
1727,170003032,b'use `CameraCache.Main`'
1727,170003566,b'We should probably use an obsolete marking in an empty class to tell devs what the new class name is.\r\n\r\nThis would be a breaking change.'
1718,170005122,b'Some strange space formatting changes in this file.'
1718,170005432,b'breaks cross platform compilation '
1718,170005583,b'Where is this button in relation to this GameObject the component will be attached to?'
1718,170005732,b'Missing license header.'
1718,170006010,"b'We should probably encapsulate the public fields and use proper PascalCasing for public and camelCasing for private.\r\n\r\nIf you need to show the private field in the editor, be sure to serialize it.'"
1718,170006465,b'please encapsulate public fields'
1718,170006594,b'Do we really need to throw this debug in production code?'
1718,170006700,b'Is there a way to customize this scalar value?'
1718,170006784,b'Where is this button in relation to the GameObject this Component is on?'
1718,170007000,"b""Not sure if I like that we're switching by the object's name.  What if I want to name my button something else?"""
1718,170007998,"b'@Railboy , @cre8ivepark is this a valid change?\r\n'"
1718,170091876,"b'if this was public before, do we want to also serialize the field to users can reference the text result object in the inspector?'"
1718,170092042,b'Could this be an auto property?'
1718,170092191,b'Do we also want to serialize this as well?'
1718,170095482,b'Still a lot of formatting changes in this file.\r\n\r\nCould we revert these just to see the real changes please?'
1727,170301335,"b""It doesn't matter what the input source is, we can take advantage of these events here."""
1727,170301577,"b""Just wondering if we can assign the GameObject in the inspector and maybe provide a way to search if it's unset."""
1727,170301708,b'Cause tag lookups are expensive and this eliminates the issue.'
1743,170306957,b'looks like we got a broken reference here'
1743,170307183,b'Why was this GameObject deleted from the prefab?'
1743,170307839,b'Please encapsulate the public fields and use a private serialized backing field for the properties so they still show in the inspector.'
1743,170308791,b'please encapsulate any public fields'
1743,170309054,b'Just to make things a bit cleaner we could use `Applicaiton.isEditor` to check this and remove the compiler symbols.'
1743,170310392,b'Ideally yes.'
1743,170311557,"b""Update gets called anyway on all MonoBehaviours, so it's really not a big deal."""
1743,170313808,"b""Oh that's right, they did fix that.\r\n\r\nI've been using Unity for too long haha.  That was a good blog post too."""
1711,170357211,"b""Right, if it's on the MRCameraParent, do we need it as it's own prefab?\r\n\r\nIt's already a component someone can just add to any GameObject they'd like."""
1727,170667291,b'Maybe we should add new events like `TwoHandedManipulationStarted` etc.'
1743,170732820,b'`!= null` ?'
1743,170732938,b'`isClippingPlaneOn` ?'
1743,170733088,b'Do we dispose of this material later? \r\n\r\nMemory leak if not captured and disposed properly when this class is destroyed later.'
1743,170774995,"b""I happen to agree with @DDReaper here. We shouldn't auto import the materials."""
1759,170776582,b'Why remove these?'
1759,170776976,b'Do we know for sure that this should be internal to the MRTK?\r\nWhat if someone wants to utilize this struct in their own code?'
1759,170777159,b'please use encapsulation'
1759,170777352,b'nit: variables on separate lines.'
1759,170777643,b'please use `<summary>` tags'
1759,170779915,"b""It's no matter, vNEXT will most likely pick up from there and you've adding it into the dev branch, so I don't see any issues there."""
1759,170780107,b'@KevinKennedy anything using `UnityEngine.XR.WSA` needs the ` UNITY_WSA` definition.'
1743,170788084,"b""I suppose it depends on the art team.  My initial experience with Unity was with 3d asset creation.\r\n\r\nGenerally, I don't like the default materials created by the editor, and usually end up changing them every single time, not to mention that sometimes the auto import will stomp any changes you made to the default material (although I suppose they could have fixed that by now).\r\n\r\nDepending on the workflow, pipeline, and the technical abilities of the artists, some choose to write their own shaders in Maya/Max and export this way, and I believe that there may also be a way to correctly reference the shader to use from the modelling program itself on export. \r\n\r\nI've found that the only real important information from the model is the UVs, and managing the materials in the editor is generally the best route."""
1743,170791073,"b'> Ideally, the scene also needs to follow the updated standards.\r\n\r\nDid we make that a standard?  We really need to document these more.\r\nAlso, what if in my projects I want that object named `Globals` ? \xf0\x9f\x98\x9d '"
1718,170791781,b'Can we get rid of the find method here and just reference it in the inspector? \r\n\r\nThe Find should only be a fallback if the inspector value is null.'
1718,170791949,"b'Okay, but where is the `ProgressExamples` component location in relation to this GameObject?'"
1761,170968286,b'Why are we even using a unity event here anyway?'
1763,170969868,b'Nit: braces'
1764,170974727,"b""This value is from Unity's serialization?\r\nShould we make this const?"""
1764,170975255,b'Is re a reference?'
1764,171014387,"b""I think it's okay. But something like `_ref` or `_reference` is okay.  Up to you."""
1743,171014951,"b""imo, models should only be delivered into a project when they're complete. haha.  Again, I suppose it's up to the processes and workflow of each team.  For the purposes of the open source project, we should deliver models as they're completed and not auto import the materials."""
1718,171074351,b'empty update loop?  We can remove this.'
1718,171074722,"b""Do we really need this?  `HolographicSettings.IsDisplayOpaque` should be enough to tell the difference.\r\nMaybe we can have some global value we can set this at, but maybe that's for vNEXT."""
1773,171084742,b'We should match this with the editor version'
1773,171084988,"b""Should all these other platform's identifiers also be updated?\r\nfor exampe: `com.Microsoft.MixedRealityToolkit-Unity`"""
1773,171085135,b'Please update package version as well.'
1773,171085506,b'No scenes should be included in the editor build settings.'
1773,171087716,"b""After our input refactoring all button mappings in the editor will no longer be needed. Let's just start with a clean slate for now."""
1772,171088136,b'Try restarting the editor.'
1772,171088267,"b""The platform target shouldn't matter."""
1772,171088575,b'https://docs.unity3d.com/Manual/PlatformDependentCompilation.html\r\n'
1772,171095568,"b'5.6, 2017.2, 2017.1, and 2017.3'"
1761,171100870,"b""yeah that's exactly the problem. It's better to do it in code."""
1761,171101035,b'Best bet is to retarget the PR for the stabilization branch if you want to see these fixes in the next release'
1761,171104435,"b""It's not any different than having a float field and a game object field and referencing it that way.\r\n\r\nBelieve me, it's a lot easier to deal with, and goes a long way for project management."""
1761,171104673,"b'> This is also true for the current implementation of the buttons, checkbox and other UX prefabs provided by the holotoolkit-examples package.\r\n\r\nYeah, those are also doing it wrong.'"
1772,171104846,"b""What's stranger, is that I never get had the issue in the first place.  I wonder if it has something to do with what .NET workloads are installed on the machine."""
1772,171104987,"b""The ambiguous reference is exactly what we're trying to fix here."""
1772,171105017,b'Are you sure you pulled in the fix?'
1772,171107764,"b""Yeah the same will need to be addressed in the dev branch.  Although I'd like to see MRTK vNEXT use strictly use .NET 4.6."""
1772,171111717,"b""You're right."""
1773,171277901,b'This should match the project version text file.\r\n\r\nDid we ever figure out which version of the editor we wanted to do this work for?'
1759,171336558,b'missing access modifier'
1773,171367604,"b""Wouldn't we want the examples to be in MixedRealityToolkit-Examples?"""
1773,171367921,b'I think we can get rid of this level and move everything up into the SDK folder'
1718,172026373,b'Does this need to be set in the inspector?\r\nIf so we may want to also have a private serialized backing field.'
1718,172026421,"b""We should probably require this component or at least check to make sure it's not null and cache it.\r\nShould we also unsubscribe for OnDisable?"""
1718,172026437,b'We can cache the TextMesh Component too'
1718,172026446,b'extra space'
1718,172026474,b'Do we want to set this object in the inspector?'
1718,172026492,b'add space after last method'
1718,172026562,b'extra space'
1718,172026575,"b'Do we want to do this, or just disable it so we can reuse it again later?'"
1718,172026615,b'Is this value expected to be set via inspector? If so we need a serialized private backing field.'
1718,172026627,b'Does this need to be public?'
1718,172026644,b'We should probably cache the button component and also unsubscribe on disable.'
1718,172026681,"b'Should we also require this component?\r\nShould we also cache it?\r\nAlso c is too short a name, `text` would suffice. '"
1718,172026711,b'can this be private? If so please make the change and add the serialized attribute.\r\nIf not then add a public property that utilizes the field as a private serialized field.'
1718,172026723,"b'please change this to a private, serialized field.'"
1718,172026779,b'missing license headers'
1718,172026785,b'encapsulate public fields'
1718,172026799,"b""Don't we already have a class that does something similar to this?"""
1718,172026808,b'Missing license headers.'
1718,172026817,b'missing namspace'
1718,172026828,b'please encapsulate public fields'
1718,172026843,b'missing namespace'
1718,172026845,b'missing license headers'
1718,172026854,b'please encapsulate public fields'
1718,172026861,b'breaks cross platform support'
1718,172026868,b'encapsulation '
1718,172026885,b'Singleton class already prevents this from happening. We can safely remove it.'
1718,172026932,b'encapsulation of public fields'
1718,172026947,b'missing private access modifier. Also please remove default comment.'
1718,172026960,"b""memory leak when setting color because we don't clean up the created material references."""
1718,172026976,b'use sharedMaterial'
1718,172026990,b'missing private access modifier. Please remove default comment as well.'
1718,172026999,b'missing access modifier.'
1718,172027001,b'missing access modifier.'
1718,172027005,b'missing access modifier.'
1718,172027007,b'missing access modifier.'
1718,172027011,b'missing access modifier.'
1718,172027021,b'memory leak'
1718,172027031,b'memory leak'
1718,172027036,b'memory leak'
1718,172027041,b'missing access modifier.'
1718,172027047,b'missing access modifier.'
1718,172027051,b'memory leak'
1676,172027099,b'please remove comment'
1676,172027110,b'breaks cross platform support'
1676,172027123,b'We can probably set a reference to this in the inspector'
1676,172027179,"b""Should we make this an enumeration if this blocks the main thread?\r\nIf we don't care, then why use async for WSA?"""
1676,172027230,b'needs an extra line'
1785,172027431,b'maybe we can cache the renderer when we set the target reference?'
1785,172027457,"b""some of these line changes really aren't needed."""
1785,172027471,b'lots of empty lines here at the bottom.'
1785,172027543,"b""We probably shouldn't be calling this method like that.\r\nMight be better if we had a private method that handed the logic"""
1785,172027552,b'memory leak'
1785,172027558,b'memory leak'
1785,172027575,b'memory leak'
1785,172027643,"b""if this is serialized, then it should also be private.\r\nif access outside the class is needed, then please create a property and use the field as it's backing."""
1785,172027695,b'not sure `??` works the way you expect for `UnityEngine.Object` types.\r\nSpecifically checking `!=null` is best practice here.'
1785,172027731,b'cache the component here and use it everywhere below.\r\n```\r\nvar handle = cornerHandles[i].AddComponent<BoundingBoxGizmoHandle>();\r\nhandle.Rig = this;\r\netc...\r\n```'
1785,172027745,b'better to check null'
1785,172027754,b'cache and use the handle component.'
1785,172027782,"b""You could even make a cache for each handle and re-use it outside the for loop below so you don't have to use get component on each again."""
1785,172027813,b'use `clone.transform.position = Vector3.zero`;'
1759,172027905,b'please cache the material reference and destroy it during the GameObjects `OnDestroy` call.\r\nThis is a bad memory leak in Unity.'
1759,172027930,b'private and serialized please.\r\nif you need access from an outside class add a public property that uses the field as backing.'
1759,172027940,b'please remove redundant `this` in class.'
1759,172027972,b'Please put this back in.'
1759,172027979,b'lots of extra space up here.'
1791,172061592,"b""does this need to be serialized it it's public?"""
1792,172063628,b'I need to revert the changes to this scene.'
1792,172063771,b'Looks like this class need to move into a Editor folder'
1792,172063836,b'revert'
1792,172063870,b'revert'
1792,172063921,b'We should mark this obsolete and point to the new teleport manager.'
1792,172063944,b'move back into root Input Module folder.'
1791,172071339,"b""Nah, I don't think it's too necessary for stabilization.\r\nReally up to you tho."""
1792,172408067,"b""@DDReaper still not sure I like how we've split scripts into Utilities and Common."""
1821,173644714,b'This fixes namespace issues by moving it inside the class instead of declaring it above.'
1821,173909351,"b""Thanks! I'll be sure to clean up the language a bit."""
1821,173982904,"b""because that's the enum value"""
1821,173984541,"b""That's a good point, I could remove the them"""
1829,173984801,b'Not sure all these GUID changes are good.\r\nDid these get changed in the master branch?\r\nCould see people getting missing script references on their prefabs and in their scenes.'
1821,173985521,"b""Unsure, but maybe the editor is doing something to ensure the compatibility level is set to this value because it's using the 4.6 scripting runtime version."""
1818,175202123,"b""Because the parameter wasn't being used in the method, and the method was private."""
1839,175268989,"b""Don't we already have some sort of default material?"""
1839,175269009,b'Could we properly name all the meshes in this object?'
1839,175269014,b'the fbx has a camera embedded in it?'
1839,175269026,b'Please disable material import.'
1839,175269076,"b'Ah I see, this was an imported material. Please disable material import on the model you imported.'"
1839,175269107,b'Why is there a materials folder in the prefabs folder?\r\n\r\nThis should me moved into the root materials folder and a subfolder for their specific use.'
1839,175269144,b'use `gameObject.EnsureComponent<Tooltip>();` and add the `ToolTip` required component class attribute.'
1839,175269157,b'fields and properties should be declared at the top of the class'
1839,175269163,b'use standard header'
1839,175269178,"b""let's move the attribute declaration down below the summary"""
1839,175269187,b'private fields with public properties if access is required outside the class.'
1839,175269221,"b""this default bounds could be declared in a private field and reused each time it's needed to reset values."""
1839,175269249,"b""If the background renderer doesn't change often we can probably cache the `MeshFilter` so we don't have to get the component each time we scale this."""
1839,175269258,b'lots of extra space.'
1839,175269273,b'move these to the other private fields declared at the top of the class.'
1839,175269282,b'nit: missing braces'
1839,175269305,"b""let's make the default throw the out of bounds exception."""
1839,175269325,b'private fields with public properties if access is required.'
1839,175269351,b'private fields with public properties if access is required.'
1839,175269470,b'if the `Tooltip` is required for this class and gameobject then be sure to add the required component attribute and use `gameObject.EnsureComponent();`'
1839,175269476,b'missing braces'
1839,175269495,b'`return toolTip != null;`'
1839,175269502,b'default case should throw array out of bounds exception'
1839,175269521,"b""let's try to put the nested switch statements in their own methods to prevent confusion and reduce nesting."""
1839,175269537,b'use `CameraCache.Main.transform`'
1839,175269541,b'also remove comment'
1839,175269578,b'fields should be declared at the top of classes'
1839,175269600,b'private fields with public properties if access outside the class is required'
1839,175269642,"b""we  can probably cache this vector value in a serialized private field.  What's with the magic numbers anyway?  Is this something a dev might want to customize?"""
1839,175269692,"b'instead of just popping the tooltip on and off, should we animate them?'"
1839,175269712,b'fields should be declared at the top of the class'
1839,175269720,"b""missing access modifier and there's an extra line space here."""
1839,175269734,b'not sure this attribute is valid'
1839,175269735,b'missing braces'
1838,175269915,"b""On top of that, it's harder to see if there were any changes to this class."""
1838,175269963,"b""kinda odd formatting, it's probably safe to put this on a single line."""
1838,175269984,b'@SimonDarksideJ it was moved to the end of the file for some reason.  We can probably revert this change.'
1838,175270001,"b""Agreed, there's not many anyway so no need to break them up."""
1838,175270042,"b""What was the purpose of renaming this? Just for cosmetic reasons?\r\nCould we revert these just so it's a bit easier to focus on the real changes?"""
1838,175270082,"b""Why change this method to exclude an audio source?\r\n\r\nWhat if a dev already has an audio source cached and they wanted to use it instead of having to get the component here?\r\n\r\nLet's just check if the provided audio source is null, then then get it if needed."""
1838,175270102,b'we could probably put all the parameters on a single line.'
1838,175270138,"b""If this is a Manager, then shouldn't we be able to get it's singleton instance instead of getting the component?"""
1838,175270152,"b""let's use the summary tags here"""
1838,175270179,b'please use encapsulation with a serialized private field so you can set the quality in the editor.'
1838,175270221,b'could we rename `ai` to `influencer` or something like that?'
1838,175270251,"b""This seems odd. Let's replace `MonoBehaviour` with `GameObject` instead."""
1838,175270279,b'formatting seems off'
1838,175270309,"b""let's check for null here in case the dev set it in the inspector"""
1838,175270337,b'could this be const instead?'
1838,175270350,"b""if it's expected for devs to modify this value let's remove the readonly modifier."""
1838,175270378,"b""let's use encapsulation with a private serialized backing field.\r\n(same for all public fields below)"""
1838,175270383,"b""let's serialize this so devs can set it in the inspector"""
1838,175655349,"b'Right, and if we use a public property to access them, then we still have both, as intended.'"
1838,175655637,b'spaces could be off.'
1838,175655868,"b"">  are you advocating having BOTH a private and a public field?\r\n\r\nNo private field with public property. We're trying to ensure encapsulation."""
1838,175655918,b'I guess that depends on the tool we use.'
1846,175890072,b'PascalCase'
1838,176183460,"b""In either case I'd like to at least inspect it and see a description via tooltip"""
1838,176203773,b'Thanks!'
1865,176720566,"b""This method and it's delegate counterpart should me moved into the input manager class."""
1870,176898827,b'is it possible to mark these obsolete?'
1873,176899159,b'missing namespace'
1873,176899203,"b""good practice to cache the renderer reference in start or awake so we don't have to get the component each time we set the emitter material."""
1873,176899215,"b""still not sure if this is correct.  What about classes that implement the IAudioInfluencer that don't inherit from MonoBehaviour?"""
1865,176899460,"b""No need to add a new source.  The input source is just as it says, the root source of the input, which in this case would be from the Tap event (passing in the event data's input source should be enough to satisfy this condition.) Thoughts?"""
1865,176959058,"b""we don't generally use/set `eventData.selectedObject` unless it's for uGUI related things. generally this is null.\r\n\r\nWe should revert these lines."""
1865,176959075,b'got some extra spaces on this line'
1865,176959105,b'why not just use InputManager.Push/Pop modal input?'
1865,176959124,"b""We probably don't need to make this an input source, but just pass the click input source when we raise the event."""
1865,177128796,"b""Yes, this is what I was.\r\n\r\nI'll have to take a look at the class you're taking about, but the selectedObject is something that should be handled by the focus manager.\r\n\r\nIf you pop/pash the modal Input handler, you should be able to specify an object that will temp get all input directly."""
1878,177278362,"b""Oh, I thought I had added that back in the old branch, but I completely started over and forgot to cherry pick that. Thanks for reminding me. I'll be sure to get that added back in."""
1865,177278917,b' eventData.selectedObject should always be the focusedObject.'
1849,177279112,"b""I used to enforce explicit types, but I've gotten lax as long as it's implied.  Chances are the type is `InputSource`."""
1873,177280064,"b""That's what I mean, what if a dev decided to make their own IAudioInfluencer, and didn't want to have their class inherit from Monobehavior?"""
1865,177479752,b'>Ideally I would like to know what game object is being placed when those events fire\r\n\r\nYou could add a GameObject property to the eventData to get this info.'
1873,177664621,b'Fair enough'
1884,177664778,"b""I'm in favor of HoloToolkit.AugmentedRealityCapture"""
1884,177814888,b'I think they should use the Singleton provided.'
1865,177853223,b'This test can go into the InputTest.cs in the examples folder.'
1884,178091906,"b""Not sure if we have have another place in the docs where the version is referenced.  We already have 3, and it's hard to keep track of."""
1895,178223044,"b""Let's cache this `FrontPlate`'s mesh renderer so we don't have to get the mesh renderer each time we Show/Hide"""
1895,178434308,b'Where in the hierarchy is the `FrontPlate` in relation to the GameObject this `AppBarButton` is attached to?'
1849,178434611,"b""Instead of using these actions let's raise the even through the InputManager."""
1849,178434631,"b""per coding guidelines, let's either make this private or move it into it's own class."""
1849,178434748,"b""Seems like this method could just be added to the `InputSource` itself.\r\nBut `InputSource.TryGetGripPosition` does essentially the same thing. I'll address this in the input refactor."""
1849,178434754,b'value assigned is never used.'
1849,178434775,"b""let's put the brackets on a single line with the method."""
1849,178434797,"b""We probably don't need to add summary statements to the interface implementations.  The documentation should get inherited by the doc generator. """
1849,178434808,"b""They're on separate lines."""
1849,178434855,"b'Good question. Not sure what other manipulation modes there might be, unless we start getting multi-dimensional.'"
1849,178434863,b'Seconded.'
1849,178434880,b'I think anyone who adds more modes will also be responsible to add the new states.'
1849,178434929,b'I think var is fine here. Usually a position is either a float or Vector3.  The type is implied here by passing in the host transform position.'
1849,178434940,"b""We can probably just remove altogether seeing as it's private."""
1849,178434987,"b""Probably not because we'd have to have hands detected to ever get them into the map.\r\n\r\nBut it's still probably good to assert the count != 0.\r\n\r\nIf there's no way it can be 0 we should just use \r\n```\r\nreturn m_handsPressedLocationsMap.Values.Aggregate(Vector3.zero, (current, state) => current + state);\r\n```"""
1849,178435007,b'Although imo we should stay away from linq and just iterate over the map.'
1849,178435030,"b""Let's use a `#region` instead of summary tags used in this way."""
1849,178435090,"b""let's define this `new Vector3(0, -0.2f, 0)` as a private readonly field so we don't have to create a new vector each time we get the hand pivot position."""
1849,178435112,"b""Let's use `UnityEngine.Debug.Asset` instead.  This is mainly used for Unit Tests."""
1849,178435167,"b""let's either put this on one line or break up each parameter on their own lines. Just needs to be consistent. """
1849,178435243,"b""Let's rename this to `UpdateMap` so people don't mistake this with Unity's Update API"""
1878,178435848,b'@davidkline-ms done.'
1895,178591457,"b""So it's dynamicly generated?\r\n\r\nOr do we have a game object in the scene to reference?"""
1895,178685644,"b'I don\'t like that we\'re using `cButton.transform.Find(""FrontPlate"")`.  Is there a way we can do this using a `GameObject` reference instead of a string lookup?'"
1906,178778683,b'Flags and bit assignments.'
1906,178782292,b'typo: `Definitions`'
1906,178847120,"b""We probably don't need bit masking for all these enums just the Handedness one."""
1906,178854804,"b""We can remove the Flags attribute here since we're not using bit ops"""
1906,178854958,"b""We can remove the Flags attribute here since we're not using bit ops"""
1906,178855287,"b""We can remove the Flags attribute here since we're not using bit ops"""
1906,178855414,"b'Initialize with `None = 0,`'"
1906,178856128,"b'Initialize with `None = 0`,'"
1906,178872508,b'Should we go ahead and add constructors and make these properties get only?\r\n(same question for all the other structs)'
1906,178873386,"b""Let's move Raw to be 0 in case we want to add new actions"""
1884,178874454,"b""Is this a custom define?\r\n\r\nI'm not really sure we should define our own. [Unity should have definitions we can use](https://docs.unity3d.com/Manual/PlatformDependentCompilation.html).\r\nuse `UNITY_IOS`"""
1884,178874818,b'No spaces when defining parameters for methods.  Please revert.'
1884,178875309,b'Does this need to be wrapped in `UNITY_IOS` to make sure it compiles for other platforms?'
1884,178875820,"b""Just a suggestion. I'm more in favor of  `camera` vs `cam`.  Generally abbreviations should be avoided."""
1884,178876101,b'`var cameraParameters = new CameraParameters();`'
1884,178876324,b'strange formatting'
1906,178884644,b'Can we add None as the default?'
1906,178885102,"b""Let's move Raw to be the default so if we want to add more actions here at the end it's easy."""
1906,178886756,"b""Should we move other after none, so if we add more it's easy to do?"""
1884,178887955,b'Agreed. `arCamera` should be good here then.'
1884,178903256,b'please rename `c` to `cameraParameters`.'
1884,178904205,"b""let's turn off the material import."""
1884,178904916,b'What is `iobj`?'
1884,178905151,"b""I'm not sure it's a good idea to include all these dependencies in the toolkit. It's going to introduce issues with others who are already using this plugin."""
1909,178950109,"b""Not sure I agree with rebasing. Merging should be just fine. Generally a rebase can cause more issues if someone is rebasing a branch that's already been pushed to the server."""
1909,178950451,b'extra angles'
1909,178950603,b'missing `</returns>`'
1909,178950702,"b""or it's missing the opening `<remarks>` your choice."""
1909,178950991,b'I wish there was an easy way to just add the tooltip as the documentation.'
1909,178987920,"b""No we didn't.  Yeah I think rebasing can cause more headaches than it's worth. As long as there's not conflicts we should be okay."""
1895,179017370,"b""You could make a serialized field in `CompoundButton` and assign the reference that way in the Editor when building the prefab. Then after you've got the single component, you've also got the reference via the field's property.  The result would look something similar to the following:\r\n\r\n```\r\ncButton = GetComponent<CompoundButton>();\r\ncButton.MainRenderer.enabled = false;\r\ntext = cButton.Text;\r\ntext.Text = template.Text;\r\nicon = cButton.Icon;\r\nhighlightMesh = cButton.HighlightTarget;\r\n```"""
1911,179178544,"b'please add summary xml tags to the public methods you edited.\r\n\r\nAlso, please use better parameter names. `o` is not valid. `syncObject` is a better alternative.'"
1911,179178605,b'missing brackets.'
1911,179178701,b'missing brackets.'
1911,179178829,"b""let's use a different name than `elt`"""
1911,179178961,b'use a better name than `o`'
1911,179179193,"b""Why don't we pass in the sync model as an optional override? (same for `DefaultSyncModelAccessor`, and `SyncSpawnedObject`)"""
1911,179179262,b'put this back'
1911,179179498,"b""Not sure I agree with this change. It's setup to do a specific thing."""
1911,179179717,b'Not sure I agree with this change. The Sharing Stage should handle connecting all by itself.'
1911,179180196,"b""What happens if you don't have internet access and you're trying to connect on awake?  There's no fallback. \r\n\r\nA better design option would be to start disconnected and connect when you need. (which is how the system currently works.)"""
1911,179180416,b'Same thing with comments above. SharingStage should determine to connect by itself.'
1916,179527996,b'What was the first version we agreed on?'
1916,179528700,"b""It's not important"""
1916,179528807,b'Agreed'
1918,179593065,b'missing summary '
1918,179593108,b'also missing summary'
1918,179593173,b'missing summary'
1918,179593257,"b""let's cache this"""
1918,179593295,b'missing summary'
1918,179593496,"b""let's cache the button in awake or start and register it then.  (we don't have to worry about if it's disabled cause the click will never happen."""
1920,179909092,"b""If we're using interfaces for the managers, we don't need to subscribe, we can directly call the methods in each child manager."""
1920,179909112,"b""I don't like that we have enables on pure c# class., the summary is misleading bc they won't be in the scene.\r\n\r\nWe should only consider a manager enabled if it's enabled via the profile, and listed in the MixedRealityManager's active manager list."""
1920,179909131,b'focus should be part of the input system.'
1920,179909135,b'controllers should also be part of the input system.'
1920,179909141,b'Actually we do need to use this.'
1920,179909156,"b""Instead of subscribing to events, let's just call the methods directly."""
1920,179909185,"b'Instead of ProfileUpdate, let\'s call this ""Reset"" so the managers can do what they need.  Also gives us a more generic way to reset the managers as needed and not just for profile updates.'"
1920,179909211,"b""I'm a little apprehensive to putting this class into vNEXT.  I thought we were going to move away from the Singleton pattern."""
5159,315358795,"b""Hi @Alexees , I'm curious....did you ever have a case when you wanted the offset to be in world space? It seems by default the offset is in local space always."""
5159,315533176,"b'I did not think about use cases really :)\r\nI was just a little frustrated about Orbital that I thought, make it as flexible as it can be. Now you can follow something, with offset, and at the same time look at something, with offset. Maybe someone might find this useful. You might want to look at a ""wheel of fortune"" spinning and toggle between following the price part around and just looking at the top where the stopper thingy is. Granted, the SolverHandler does not have this capability, because it uses the additional transform offset and getting rid of that would have meant a breaking change. In turn, since nobody complained I guess, turns out even that offset is always ever needed in LocalSpace.\r\nOf course you could always just add another transform and just look at it instead. But that would mean the same would apply for the SolverHandler... \r\n> It seems by default the offset is in local space always\r\n\r\nI don\'t understand, some value has to be the default. It certainly doesn\'t mean worldspace isn\'t used.'"
3367,250791168,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791232,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791268,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791296,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791323,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791346,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791358,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3367,250791385,"b'```suggestion\r\n        /// <param name=""profile"">The service\'s configuration profile.</param>\r\n```'"
3607,264811246,"b""What's the benefit of this change?"""
3607,264871815,"b""The MixedRealityInputSystem's HandleEvent method casts to BaseInputEventData. I routed the focus events through it too, therefore the change."""
3607,264897486,"b""What's the benefit of sending focus events through the `HandleEvent` path instead of directly to the focused / unfocused object?"""
3607,264980076,"b'the InteractionReceiver could listen to everything that happens to another gameobject, except for these.\r\nthis path uses global listeners while the previous bypassed them.'"
3819,272241382,"b"">sourceHandedness [](start = 116, length = 16)\r\n\r\nIf this is intentionally ignored, it might be worth leaving a comment saying so (i.e. it's weird that we're being told a source handedness for hand tracking data and then saying it doesn't matter)"""
3819,272251743,"b""~~Hmm yeah, does seem weird that it's ignored. Not sure that was intentional. (Also, looks like the method summary has some stale parameters)~~"""
3819,272252112,"b""Whoops I didn't refresh!"""
3399,253225416,b'Should we remove this?'
1975,182487966,b'I would love to see us use the System.Diagnostics assert (also?). I have not gotten UnityEngine asserts to fire when debugging in VS.'
1975,182488216,"b""is this assert right? shouldn't eventData.used == true just cause an early exit?"""
1975,183439205,"b""You're not meant to hit the asserts in VS because unity strips them from the build purposefully. """
3397,253188151,"b""Nit: I'm weary with switch statements keyed off strings. But, it should be find for this scenario."""
3397,253188447,"b'Nit: Do we want to handle the default case with a log? Else, we could remove it.'"
3397,253193888,b'I agree with @Cameron-Micka. Please consider keying off of they type and not the name.\r\n\r\nThanks!'
5307,307004850,"b'This looks like a function that would be a great candidate for a unit test / edit mode test, since it has known inputs and outputs. It will be great to have to not only verify your changes but more importantly make sure nobody breaks you in the future :-)\r\n\r\nYou can learn more about writing edit mode tests [here](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/UnitTests.html#edit-mode-tests)'"
5307,307004944,b'nit: extra line'
5307,307006740,"b""Since this PR fixes existing functionality I would be okay to complete this PR without tests, but would strongly suggest to add if possible. If not, could you please file an issue to write a test for this function so we don't forget? You can either assign it to yourself if you have time to help, or we can find somebody later to help with this."""
5307,307166613,"b""Sadly, I don't have the time to write tests too. Writing fixes is already a time consuming process. Btw. I'm not allowed or don't know how to assign issues to myself.\r\n\r\n> could you please file an issue to write a test for this function so we don't forget\r\n\r\nIt's not new really. I only extracted this from the other existing method which was meant for collider arrays only and I needed it for one collider at a time. The other method hopefully does have a test already."""
5307,307167213,b'what does nit mean?'
5307,309566353,b'Filed #5486 '
5307,309566700,"b""It just means a small comment on something that's not super important, but is usually also easy to fix. Things like properly spelling words in comments and spacing. """
5307,309883377,b'can you make the numeric values private const ints at top or at the very least add a comment referring to which direction each value corresponds to?\r\nhttps://docs.unity3d.com/ScriptReference/CapsuleCollider-direction.html\r\n\r\nReally surprised Unity used regular ints instead of an enum'
6001,326395857,"b""It's important to mention how the bounds are searched: first it tries to find collider on self. If it finds none, then it returns the bounds of the child mesh renderers.\r\n\r\nNote: this is not what I would expect. I would expect the behavior to try to find collider on self, and then look for children with collidres. In fact, have a look at BoundingBox.BoundsCalculationMethod and how that's used -- I think this utility method could just use that bounds calculation method to compute the bounds.\r\n\r\nNote: might be out of scope for this pr. In that case, I'd recomment just pulling this into ScrollingObjectCollection."""
6001,326772283,"b""I'll move it for now, I agree that it should traverse the hirerarchy of the Transform for all colliders."""
6001,334099699,b'```suggestion\r\n        /// Calculates how much scale is required for this Bounds to match another Bounds.\r\n```'
6001,334100494,"b'Rename to something like GetScaleToMatchBounds\r\n\r\nWhen reading myBounds.ScaleFromBounds(b) it gives sense that I am actually changing myBounds directly, not just retrieving a value'"
7413,386375369,"b'```suggestion\r\n        /// <param name=""ignoreLayers"">A LayerMask to restrict the colliders selected.</param>\r\n```'"
7413,386375431,b'```suggestion\r\n        /// Method to get bounds using collider method.\r\n```'
7413,386376161,b'```suggestion\r\n        /// Method to get bounds using renderer method.\r\n```'
7413,386376288,"b'```suggestion\r\n        /// <param name=""ignoreLayers"">A LayerMask to restrict the colliders selected.</param>\r\n```'"
7413,386376552,b'```suggestion\r\n        /// Method to get bounds using mesh filters method.\r\n```'
7413,386376734,"b'```suggestion\r\n        /// <param name=""bounds"">An AABB in world space around all the mesh filters in a GameObject hierarchy.</param>\r\n```'"
7413,386376982,"b'```suggestion\r\n        /// <param name=""ignoreLayers"">A LayerMask to restrict the colliders selected.</param>\r\n```'"
7413,386377131,"b'```suggestion\r\n        /// <returns>True if bounds were calculated, if zero mesh filters are present bounds will not be calculated.</returns>\r\n```'"
3744,270949198,"b""I think it's [Frustum](https://en.wikipedia.org/wiki/Frustum), not Frustrum."""
3744,271668272,"b""You are right! I'll fix that."""
6128,329285248,"b""This doesn't seem like a script meant for the `Tests` namespace"""
6128,329286547,"b'good catch, I had the file named the same'"
6977,362971937,b'Might have been accidentally added?'
6977,362994437,b'Classic Boo.Lang.'
6977,362994943,"b'>coneAngleBufferDegrees [](start = 18, length = 22)\r\n\r\nJust to make sure I understand correctly, this is a buffer that is shared between both sides of the FOV right? i.e. adding 10 will add 5 effective degrees to either side.'"
6977,362995178,b'![image](https://user-images.githubusercontent.com/3580640/71755377-2a8e2f00-2e3f-11ea-8902-8e3e4407d67d.png)\r\n'
6977,363391984,b'yes updating param comment'
6977,363441417,"b""Is there any benefit to use continuing to provide the `MathUtilities.IsInFOV` method, if it is slower than usingWorldToViewportPoint? Perhaps we should mention in a comment in that it's more performance to use `WorldToViewportPoint` when possible"""
6977,363493024,"b""@julenka sorry somehow missed this comment. I left the MathUtilities because you don't require a camera with that. I guess I could have tried to re-write the MathUtilities to calculate a projection matrix from the fov and properties and then do the multiplication...but didn't want to mess with that"""
7016,364498261,"b""I'm curious to hear opinions on naming for these static variables, as well as whether people have ideas for how to implement this in a better way."""
7016,364893793,b'I feel like this is complicated enough to be in a utility class by itself?\r\n\r\nOther thing that comes up is concurrency. I think....we are fine because Unity restricts all calls to the main thread and this is an extension of Camera. So this should force all calls to IsInFOVConeCached to be serialized and thus not possible for two threads to be accessing the static resources concurrently. Thoughts?\r\n'
7016,364894983,"b'Remove ""Sphere pointer query instances""\r\n\r\n// List of corners of bounds box for current collider being processed in IsInFOVConeCached\r\n// Shared and static to avoid allocating additional memory each frame'"
7016,364895167,"b""Suggestion: I'd also rename to boundsCornerPoints to just be explicit and easier reading"""
7016,364895790,"b'minor nit: make else if (colliderCache.Try) \r\nIf we clear the cache, then we know there is no point in trying to test access'"
7016,364904995,b'Seems like left over comment?'
7016,365478470,"b""I tried to think of a good location and name for this, but couldn't really think of anything. I'm thinking again this might be good to refactor once we have other code that does FOV checks where we want caching.\r\n\r\nHowever, to help clarify things I prefixed the variables with inFOVCone so people understand this is related to the fov cone checks."""
7016,365478636,b'Renamed!'
7016,366649959,b'Done'
7016,366649998,b'Done'
6122,329242901,b'add where T : BaseMixedRealityProfile (or whatever the class)'
6122,329262512,"b""This isn't a generic method."""
6122,329268448,b'That works but then rename argument to be assetType or typeFilter etc not profile type'
6122,329679804,"b'nit: return is empty, I believe this will fail the CI check'"
6122,329679992,b'nit: remove use of informal you'
5766,317683369,"b'```suggestion\r\n        /// <param name=""t"">time in seconds at which to destroy GameObject if applicable</param>\r\n```'"
6361,338688402,"b'```suggestion\r\n        /// Does not call SetActive on the top level GameObject, only its children\r\n```'"
7244,375993662,"b""Nit: It might be interesting to pass the requiringTypes as an out explicitly to be clear that it's a mechanism for returning state.\r\n\r\nUsually these other things tend to be in parameters. Or at least, the name of the function doesn't suggest that it's mutating the requiringTypes. (i.e. if it were named GetDependentComponents it might be more obvious)"""
7244,375993911,"b'Out of curiosity, what are scenarios where the monoBehaviour ends up being null when getting returned? Object/monobehavior destruction?'"
7244,375994644,b'Nit:\r\n\r\n```c#\r\nif (requiringTypes != null)\r\n{\r\n    requiringTypes.Add(monoBehaviourType);\r\n}\r\n```'
7244,375996404,"b'Just ran into this. Rarely happens, but it does when the GameObject has a missing script component on it.'"
7244,376029462,"b'Makes sense, thanks!'"
7244,376132802,b'```suggestion\r\n```'
7244,376132942,"b""This line is triggering a validation failure (we have some code that checks we don't have empty doccomments)"""
6361,338298411,b'nit methods should be named as actions or verbs vs nouns - can you rename this to AppendNewLine ?'
6361,338329790,b'Could you use [Environment.NewLine](https://docs.microsoft.com/en-us/dotnet/api/system.environment.newline?view=netframework-4.8) here?'
3744,272556259,"b""Why not just use a render texture? It'll probably be more efficient as well."""
6492,345497512,b'```suggestion\r\n        /// Walk hierarchy looking for named transform\r\n```'
6001,326396096,b'remember to normalize initialDirection.'
6001,326396228,b'you can just do return dot > 0'
6001,326397008,"b'the name is a bit confusing. I suggest:\r\n\r\nIsOtherSideOfPlane(this Vector3 vector, Vector3 normal, Vector3 planeOrigin)'"
6001,326398537,"b""This doesn't feel like a general utility to me. I actually don't understand what it's doing...perhaps move it back into scrollable collection for now? Or maybe you can help me understand what the code does."""
6001,326398647,b'This feels like it belongs in boundextensions'
6001,326407559,"b'or return Vector3.Dot(delta.normalized, initialDirection.normalized) > 0'"
6001,326407992,b'Or even return int instead\r\nnegative on opposite side\r\nzero on plane\r\npositive on plane side'
6001,326770806,b'Should I just remove this now that @Troy-Ferrell has enlightened me on the `Plane` class? :)'
6001,326771713,"b""I'll move it, I think I put it here because it returns a Vector3.\r\n\r\nAdditionally, I'll tweak this so its an actual BoundsExtension method."""
6001,326786590,"b""This is how I was finding a new point on the plane of the pointer's hit when scrolling with rays. Since you've taken a pass I'll go ahead and pull this out."""
2187,191279832,"b""Let's use the REST library found in MixedRealityToolkit/_Core/Utilities/WebRequestRest"""
2187,191279860,b'`if(Application.isEditor)`'
2187,191953490,"b'Oh, I like it.'"
2187,197616424,b'should we remove this and add a check if string is null or empty?'
2187,197616514,b'Why do we handle HTTPS traffic differently in the editor?'
2187,197616545,"b""We probably don't have to make a new request every time. """
2187,197617404,b'Does this need to inherit from Mono?'
2187,197619851,"b""I'd like to see this only return a Response so that devs can use it as they please. I think having graph response types constrains this a bit.  I think it's best to move that stuff to examples in case people want to know how to utilize and get content from the requests."""
2187,197621347,b'I think this is bc of a known TLS bug in Unity.'
2187,198945155,"b""The reason why it's inheriting from Mono is to allow user to set the Graph settings through the Unity editor, using the inspector to make it Unity friendly. I will be fine to change if you feel strong about it?\r\n\r\nCurrently there are only 3 settings (App Id, Access Scopes, Auth Token) and there might be more to add in the future to support more (uncommon) authentication scenarios (e.g. Authority, RedirectUri, Extra Scopes, etc)."""
2187,199048643,b'You can do that with the ScriptableObjects as well. Please revisit my PR against your branch.'
2187,199048684,"b""I don't think this class should be a monobehaviour"""
2187,191279934,b'could this be a struct?'
2187,191953359,"b""This one can't because it has virtual methods."""
2187,191280025,"b""We're not going to be putting this dll into vNEXT. It causes too much trouble with other packages that also include it.\r\n\r\nWe should be using the `Unity.JsonUtility` where possible."""
2187,191953413,b'Agreed!!'
2187,197616320,b'Where does this dll come from?\r\n\r\nIs there source code that goes along with this?'
2187,197617161,b'https://github.com/AzureAD/microsoft-authentication-library-for-dotnet'
2187,197617234,b'I wonder if there is a nice way to reference this dependency via GitHub.\r\n\r\nMy only concern here is if people already use a library in their projects and they get conflicts.'
2187,198292408,"b""@StephenHodgson I also hate the fact that Unity does not have a nice way to reference NuGet packages, or am I wrong about that? \r\n\r\nOptions I can think of: we make this DLL disabled by default in Unity, so it does not cause any conflicts whatsoever, until users explicitly enable it. Or we don't even include the DLL and we mention in the documentation that developers require MSAL DLL to use MsalGraphAuthentication.cs, provided with the SDK?"""
2187,198307328,b'We could add a auto downloader if they so choose to enable these features'
2187,198307378,b'It would just grab the latest from the github releases'
2187,198649517,b'@StephenHodgson how do I hook to the auto downloader?'
2187,198685455,b'We would have to write something in Unity that checks if they already have the dll in their project and then grab it from a direct link on github.  Or we could use a submodule approach and take it in directly.'
2187,198986583,"b""Got it. We really need a system to reference NuGets from Unity. The change you suggest makes totally sense to me but I don't have the cycles to do it. Can we leave the DLL embedded for now and create a separate work item to create a system that allows managing NuGets that everyone can benefit and hook in? Honestly, I hate the fact that Unity does not integrate with NuGet yet.\r\n\r\nBy the way, I stumbled up on https://github.com/GlitchEnzo/NuGetForUnity. Might be interesting to take a look."""
2187,199048502,"b""Yes, I personally use that in my projects, but we can't count on other's to use it as well."""
2187,197617673,b'Any prefabs should live in the SDK layer.'
2187,195885838,"b""@StephenHodgson I tracked down these two bugs in Unity that are preventing MSAL from working on IL2CPP. Once these bugs are fixed, this library works.\r\n\r\nI'd like to wrap-up this PR as soon as possible. Should we proceed with this change with that caveat (this won't work until those bugs are fixed in Unity) or do you have some other suggestion?"""
2187,195894528,"b""I'll be sure to pull your branch and do a more in depth review this weekend."""
2187,197595577,b'Friendly nudge :)'
2187,197596142,b'Hey @joaocpaiva I saw that 2018.1.6 is out with fixes for this. Going to do a dry run and see if I can get it setup.'
2187,197618361,"b'Tried this out but getting null references in your scene, is the auth correct for the example?\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/41812125-d25375d2-76d1-11e8-8a81-aad8a3c561e8.png)\r\n'"
2187,197619060,"b""I'm also getting this \r\n![image](https://user-images.githubusercontent.com/13334553/41812328-dbe68db0-76d5-11e8-94cf-62ad141b732d.png)\r\n"""
2187,198243927,"b'@StephenHodgson MSAL does not work in the Unity editor because the SDK requires web browser which is not available in Unity.\r\n\r\nThere are two options as workaround to test Graph in the editor:\r\n1. Use network monitor like Fiddler, to sneak peak the Bearer token and copy/paste into GraphConnector inspector as the Test Auth Token\r\n2. Provide custom implementation of IGraphAuthentication instead of using MsalGraphAuthentication. Obviously a real implementation is not trivial (requires OAuth, UI for users to enter credentials, etc).\r\n\r\nFurthermore, in future releases of MSAL this scenario should be unblocked using the device code flow (which enables us to sign-in from a phone for instance), or another device. But Device code flow is not yet implemented in MSAL.Net (this is coming).\r\n\r\nDo you have a particular concern about leaving this as is, knowing these caveats. I guess I can elaborate a bit more in the README.md?'"
2187,197617478,b'Can you explain what this xml file does please?'
2187,197621352,"b""Nvm it was in the readme that it's to prevent stripping byte code for reflected classes."""
1611,160575963,b'`MixedRealityToolkit.Input.Cursor` conflicts with `UnityEngine.Input.Cursor` as well.'
1611,160640183,"b'Should we rename Cursor to MRCursor then?\r\nAlthough, by renaming the Cursor class to BaseCursor, there were no other conflicts as we have no conflicting classes.'"
1611,160533775,b'Where is `BaseCursorStateEnum` defined?'
1611,160639687,"b""That's odd, that should have changed. Will investigate.\r\nHad to rename Cursor to Base Cursor to not impact with the new Cursor namespace."""
1611,160642825,"b'Resolved, bad rename - reverted here. (checked the rest of the code base and this was the only instance)'"
1611,160532651,"b'We should reconsider the `MixedRealityToolkit.Input` namespace, to not hide `UnityEngine.Input` in projects that import the toolkit.'"
1611,160545083,"b'Agreed, I think leaving it the same as it is, should be okay. eg: `InputModule`'"
1611,160639889,b'Agreed. Will rename folder and namespace to InputModule'
1611,160642864,b'Resolved'
1611,160800805,"b'With the namespace rename, can all of the `UnityEngine.` additions be removed?'"
1611,160804790,b'Should be able to'
1611,160941052,"b""Sure, can re-rename them.  Although in some way it's good as it shows it's coming from Unity not MRTK.  Although I was thinking this last night."""
1611,160945264,b'Renamed'
1743,170306957,b'looks like we got a broken reference here'
1743,170307183,b'Why was this GameObject deleted from the prefab?'
1743,170308847,"b""This was the Unity light on the cursor, which was replaced with a HoverLight. I'll fix the missing reference above and make sure if can be toggle on/off like the InteractiveMeshCursor requires. Thanks for pointing this out!"""
1711,167666631,"b""I thought we removed this prefab some time back?  How come it's back?"""
1711,167757773,"b""Unsure, but it's definitely still here in the Stabilization branch."""
1711,167760187,"b'Yup, this prefab was never removed.'"
1711,167667159,"b""Did you mean to remove this prefab? Can't see it elsewhere"""
1711,167757916,"b""I don't believe we were using it any longer. The attach to controller and motion controller visualization scripts made this obsolete. Also it was missing the script reference because its only script component was removed.  I'll double check the Stabilization branch to make sure."""
1711,167760151,"b""Okay, so I went back to look. This got wrapped up into the MixedRealityCameraPartent prefab.  But it's not been deprecated. The Visualizer was the missing script reference on this. I can revert, but not sure if it's really needed if it's already on the camera prefab."""
1711,167763643,b'@StephenHodgson We are using it (MotionController prefab) in the tutorial to show the example of having motion controller visualization without other features such as teleportation and boundary.\r\nhttps://developer.microsoft.com/en-us/windows/mixed-reality/mixed_reality_213\r\n'
1711,167764138,"b""Okay, I'll be sure to put it back and fix the script reference."""
1711,167951139,"b'Exactly, I believe this is a child of the MRCameraParent.'"
1711,170357211,"b""Right, if it's on the MRCameraParent, do we need it as it's own prefab?\r\n\r\nIt's already a component someone can just add to any GameObject they'd like."""
1611,160803838,b'Interations?'
1611,160804366,"b""I'm not sure how I feel about this namespace because it hides the UnityEditor one."""
1611,160944235,"b'Like Cursor.  It doesn\'t block anything in the UnityEngine.Editor namespace as we are only extending it.\r\nBut having this highlights those scripts which are truly dependant on Unity ""stuff"" '"
1611,160804608,b'Do we really need namespaces for each of these?\r\nI think bundling most things in the base InputModule namespace should be enough.'
1611,160941317,"b'My only issue is that it would clutter the InputModule namespace.  Having each in their own namespace, ensures you know what are available when discovering elements.\r\nThis way, even through intellisense, you can easily discover what Cursors, Events, etc are available.'"
1611,160989950,"b'Ah, I see, that makes sense.'"
1711,167711422,b'This sucks that now to use simple Gaze and Cursor in my app I need both folders Input and UX?'
1711,167711509,b'This scenario is needed by pretty much every app. I am not supportive of this. Sorry if I should have caught this earlier.'
1711,167716606,b'Perhaps a UX folder under Input for things that depend purely on Input like Cursor and Motion Controllers?'
1711,167758041,"b""I thought we agreed that all visual representations would be UX?\r\n\r\nAlso, after my input refactor we won't have the requirements to use a cursor on our pointers, this is just temporary.  This class is getting removed anyway."""
1711,167758223,"b""No matter how we approach this, most likely the ux will be dependent on the input folder in some way. But we won't have the Input depending on the ux."""
1711,167905217,"b'When you say ""I need to use both UX and Input folders in my project"" @NeerajW it makes me shudder.\r\n\r\nIMHO, the MRTK project is a full fledged asset, meant to be used / shipped as a whole.  It doesn\'t bloat the project or cause any issue by leaving the main MRTK folder intact.  in some way, that would be wholly resolved by having all the code wrapped in a single DLL (but let\'s not go there)\r\n\r\nWith Unity, there isn\'t any practical reason to remove asset code from a project and if people feel they need to , then we need to address that.  Simply put, just removing ""stuff"" without understanding why people do it is likely to cause runtime issues later because they removed too much.'"
1711,167949985,"b""@StephenHodgson I don't recall a discussion around us agreeing on everything UX but I could be wrong for sure. It's OK for UX to use Input. It should infact.\r\n\r\n@DDReaper what you said is the exact opposite feedback I get. People don't want to import a ton of code into their projects. Hence I did the semi-modularization by reducing cross feature dependencies.\r\n\r\nMy scenario is fairly simple as I stated above: In my app I need Input from gaze and I need to visualize it. Looks like I will need a lot of code to do that contained in two separate feature folders Input and UX. Previously I could just import Input and be on my way.\r\nThese type of massive code pieces are a part of what deter people from using and contributing.\r\n\r\nI agree from an asset prespective having things in UX makes sense. But 99% apps will also need a cursor. \r\nI just want to make sure we address the feedback on MRTK around poor modularization. :(\r\n\r\n"""
1711,167951578,b'May be we solve this with Unity packages for scenarios. @keveleigh thoughts? We chatted on this yesterday briefly.'
1711,167973165,"b'Based on this @NeerajW , then we may need a small re-think on the Multi-VR solution to breed more modularization, if we intend (rather large) chunks to be able to be split off. '"
1711,167992184,"b""@DDReaper I think we should def focus on making some feature areas decoupled. For example spatial mapping and understanding shouldn't have dependencies on input for example."""
2011,184414473,"b""Tag should be an object array and last, as it's optional.\r\n\r\n```\r\npublic void Initialize(IInputSource source, uint sourceId, GameObject boundingBoxRiggedObject, object[] tags = null)\r\n```"""
2011,184713232,"b""We could still see weird stuff here if the input source is null.\r\n\r\nLet's inherit from the BaseEventData instead of the BaseInputEventData."""
2011,184713507,"b""Sure thing: I'm doing the change right now."""
2011,184719640,b'suggested name: `BoundingBoxEventData`'
2011,184719727,b'Suggested name: `BoundingBoxStateHander`'
1865,176959058,"b""we don't generally use/set `eventData.selectedObject` unless it's for uGUI related things. generally this is null.\r\n\r\nWe should revert these lines."""
1870,176898827,b'is it possible to mark these obsolete?'
1870,176923501,"b""Aha! TIL that `[Obsolete]` exists. I'll pop an update up soon."""
2075,187476953,b'Should we remove the component? Or will this be fine?'
2075,187480993,"b""remove the controller finder? I don't believe that is needed (I don't see exceptions anywhere else but OnEnable)"""
2075,187481347,"b""Yeah, mostly a question about if there will be any perf hit to leaving this unused component in the scene. I don't think there should be much, since it doesn't have an `Update` loop or anything."""
2075,187482486,"b""I don't think there will be any perf issues with leaving it in."""
1727,170000909,"b""What's this doing exactly?\r\n\r\nI'm not sure we should be defining our own symbols."""
1727,170001148,b'Should we replace this with calls to the InputManager.RaiseManipulationStarted/Ended?'
1727,170001371,b'We should probably encapsulate this and serialize the private field.\r\n\r\n(same to all public fields below)'
1727,170001795,b'Where is this object located in relation to this GameObject the component is on?'
1727,170001965,b'please move the start method between awake and update.'
1727,170002536,b'not sure I like using the `#if SYMBOL` here for a placeholder todo'
1727,170002734,b'public classes should be in their own files.'
1727,170003032,b'use `CameraCache.Main`'
1727,170168287,"b""It's just a way for me to keep track of TO DO items. Makes sense to remove it for MRTK."""
1727,170174682,"b'Makes sense, I made almost all fields private, and serialized all but the GlobalBoundingBox, since I believe that never gets set (we look for a gameobject in the scene instead which I assume is a pattern elsewhere in MRTK).'"
1727,170175510,b'Done.'
1727,170175566,"b'Out of curiosity, why is using `CameraCache.Main` better than Camera.main?'"
1727,170176274,"b'Hm, based on my reading of `CustomInputSource.cs` it seems like manipulation events are fired whenever a motion controller is moved and a button is down, regardless of whether something is actually being manipulated. Further, the events contain information about the controller id attached to the manipulation. In contrast the `StartedManipulating` and `StoppedManipulating` events are specific to this object--the event communicates ""a specific object began being manipulated"". Additionally, an object may be manipulated by more than one input source, which would not fit with the current structure of the `ManipulationEventData`. For these two reasons, I think it\'s better to keep the events as separate.'"
1727,170176556,"b'@cre8ivepark should comment more here, but my understanding is that this \'BoundingBoxBasic"" UI element can be located anywhere in the scene. Actually after reading the code, we may want to just have a separate component ""ShowBoundingBoxWhenManipulating"" that would listen to the manipulation started and stopped events, and show/hide the bounding box. That would separate the concerns of two handed manipulation (which just manipulates objects) and the rendering of feedback (showing the bounding box). I\'ll see if I can do this over the weekend, or Yoon/somebody else please feel free to make the change.'"
1727,170177547,b'The pattern I emulated was the `StartedDragging` and `StoppedDragging` events in `HandDraggable.cs`'
1727,170301335,"b""It doesn't matter what the input source is, we can take advantage of these events here."""
1727,170301577,"b""Just wondering if we can assign the GameObject in the inspector and maybe provide a way to search if it's unset."""
1727,170301708,b'Cause tag lookups are expensive and this eliminates the issue.'
1727,170319236,b'@johnppella '
1727,170377471,b'changed search for GlobalBoundingBox in scene to Instatiation of BoundingBox prefab.'
1727,170502371,b'Fixed.'
1727,170509459,"b'I tried using the existing ManipulationStarted events and then using a modified `ButtonReceiverExample` class to log & change some text when I received `ManipulationStarted` and `ManipulationCompleted` events, but I got confused when I saw three different `ManipulationStarted` events get logged when I pressed using a simulated hand in editor.\r\n\r\nI then realized that my confusion occured because the same manipulation events were being fired both for the hand input source that began the drag operation, and also for the two hand manipulatable script. I\'m not sure where the third manipulationstarted event came from, perhaps from the second simulated hand.\r\n\r\nUsing this experience as an example, it seems like it would be better to not confuse ""manipulation started"" events that come from the Mixed Reality APIs with the events that indicate ""this two hand manipulatable has started moving""'"
1727,170667291,b'Maybe we should add new events like `TwoHandedManipulationStarted` etc.'
1727,171656025,"b""Okay, I'll look at that this weekend."""
1611,160643555,"b""Don't like the placement of the InputManager, suggest it should be moved to the base of the MRTK.InputModule as it's a core class (as with other managers listed in this folder)"""
1611,160801069,"b""I agree. Putting it at the base of the namespace would be ideal, since it's really the basis for the entire namespace existing."""
1611,160803351,b'Agreed'
1611,160942018,"b'Ok, moved \r\n* InputManager\r\n* MixedRealityCameraManager\r\n* MixedRealityTeleport\r\n\r\nTo the root of the InputModule namespace'"
1792,172063944,b'move back into root Input Module folder.'
1792,172063921,b'We should mark this obsolete and point to the new teleport manager.'
1636,162194752,"b'This is a link to an different repo, so it should remain `master`.'"
1636,162196764,"b""Darn it. I'll fix that in another PR.  Good spotting (5 mins after merge :O)"""
1636,162199526,b'Yeah...apologies for being slow on the draw!'
1636,162352185,b'Resolved in #1648'
1792,172063836,b'revert'
1792,172408067,"b""@DDReaper still not sure I like how we've split scripts into Utilities and Common."""
1792,180861726,"b""Don't get me started!"""
1792,172063870,b'revert'
1975,182488417,b'should this assert? or just early return here?'
1975,183439790,"b""Yes, this script requires the need for a pointer, and without one it's pointless (get it? \xf0\x9f\x98\x89)"""
2315,196098544,"b'Note, Multi-VR breaking issue'"
2315,196098679,b'Multi-VR breaking issue'
2315,196100088,"b""Not exactly a breaking issue, just doesn't currently conform to our standards. Let's add an issue and get back to this later. It will compile."""
2315,196108015,"b""Ok, agreed. Create a task for an #IF UNITY pass to remove these.\r\n\r\nbut if I switched to standalone, this wouldn't work."""
2315,196112047,"b""Well you wouldn't be using hand input on standalone without a Magic Leap right? \xf0\x9f\x98\x89 """
2315,196147488,b'@SimonDarksideJ My next PR will address this.'
2351,198037670,b'OnSourceLost seems like it should still decrement here.'
2351,198041598,b'Whoops. Nice catch'
2351,198589379,"b'WOAH, why is there a WindowsMixedReality reference in Cursors.  \r\nOnly the devices space and the MR manager should have ANY knowledge of the Devices'"
2351,198589521,b'Should only be using the input system (I know this is on the TODO)'
2351,198612071,"b""When we ask the controller if it's a hand below"""
2351,198612533,b'I was also trying to demonstrate a great reason why we might wanna get the controller data directly.\r\n\r\nThis is kind of a one off edge case where we needed to know if we had a hand input type.'
2351,198615234,b'Then we need a way for the framework to realise it.  NOT pull it from the device platform.'
2351,198615353,b'We can get the data directly VIA the interactionMapping!!!!'
2351,198685557,"b""Ah, but of course!  although, I think you'll have to show me."""
2351,198685678,b'I think you said to address this with the interaction mapping in your comment below.'
2351,198685815,"b""Again it was just to demonstrate an edge case where we might want the controller classes public.  During the shiproom meeting someone brought up the idea of polling the controllers directly and I reminded people that they don't have to use our input system, so having the ability to get controller's and their data directly is a nice thing to expose."""
2351,198689136,"b'Oh, fun fact - Source State changes do not have actions.'"
2351,198882755,b'shouldnt this line be inside the UNITY_WSA condition?'
2351,199049653,"b""No, because we've already wrapped it in the controller class."""
2351,199127930,"b""Ok, we'll create a task to review these requirements later"""
2351,199209097,"b'I can live with that, it was just a touch confusing at first'"
2023,184763795,"b""Don't need to wrap this because it's already in an editor folder."""
2023,184763766,"b""Don't need to wrap this because it's already in an editor folder."""
2023,184763832,"b""Don't need to wrap this because it's already in an editor folder."""
2023,184763856,"b""Don't need to wrap this because it's already in an editor folder."""
1975,182488818,"b'Since this is an assert, i assume that UpdateCanvasEventSystems is not always called for an app?'"
1975,183440220,b'`UpdateCanvasEventSystems` that method is very expensive and most of the time the canvas helper _should_ be updating them in the editor as canvases are created and switched to world space.'
2028,186121743,"b""Can we refactor this in to it's own function.  Possibly even a Utility class.  Seems useful for setting defaults."""
2028,186246011,"b""I could put it in it's own method call, but I think it should stay in the `FocusProvider`. It's rather specific to it."""
2028,186246043,"b""Besides this is just a fallback if someone didn't set up their own prefab correctly."""
2371,199542581,"b""The Focus provider relies on our implementation of the input system. So if it isn't there, this should really break."""
2371,199543488,"b""Bad @StephenHodgson \r\nIf we put something in a scene, then we should either remove it or ensure it doesn't break if something we provide is turned off.  So no, it shouldn't break.  At worst you should get a proper warning"""
2371,199543856,b'I thought I had cleaned this up better.\r\n\r\nDo you have a proper repro?'
2376,199622304,b'Is this really an assertable condition? Arent we building in the flexibility for NOT using the input system?'
2376,199622753,"b'> Arent we building in the flexibility for NOT using the input system?\r\n\r\nWe did, but in this case this is a component in our _implementation of the input system_.'"
2376,199622821,b'> Is this really an assertable condition?\r\n\r\nAnd yes.'
2376,199623066,b'Then is it even possible to get into this state? Sorry if I am being dense today :)'
2376,199623358,"b""Never. unless someone puts this component on by hand (Which shouldn't happen as we do it for them)"""
2376,199623777,b'Thanks for clarifying... looks good to me.'
2020,184468223,"b'New, fancy C# syntax :)'"
2020,184641942,b'Need to be careful and check this is supported under IL2CPP :S '
2020,184468501,"b'Why reorder the Header and SerializeField attributes? The header applies to more than just this one field, correct?'"
2020,184581095,"b""It doesn't matter the order. I'm a bit strange about having lines grow. haha.  In reality if we want to do it the professional way we should remove the header attribute and do a custom inspector."""
2233,192571958,"b'If input source is not needed in creation, why is it part of the Gaze Constructor?\r\nDoes this need a little refactoring?'"
2233,192572702,"b""It's tricky, [check line 75](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2233/files#diff-42c2559cca49c73eea6265c6f99893a3R75).  We immediately set the pointer's input source parent after we create our gaze input source.\r\n\r\nPart of the problem was that all input sources default to the gaze pointer if no pointers were passed into the constructor.  Well, if we're the gaze source, and we don't have a gaze pointer yet, we have a chick vs egg problem. So the only way I found around it was to initialize the pointer's source parent after we've created it."""
2398,200405467,b'why does this value differ from VelocityThreshold? Same question wrt MovementThreshold. Should these be ranges? Should the private consts be default values?'
2398,200413787,b'Def want this to be configurable in the inspector.'
2398,200413909,b'Maybe they are the same?  \r\n\r\nI merged CameraMotionInfo and GazeProvider as they mostly did the same things.'
2398,200415352,b'It appears that VelocityThreshold is used as a min check:\r\n```\r\nif (HeadVelocity.sqrMagnitude < VelocityThreshold * VelocityThreshold)\r\n{\r\n    HeadVelocity = Vector3.zero;\r\n}\r\n```\r\nPerhaps rename as such and also rename idleHeadVelocityThresh to headVelocityThreshold and serialize with a range?'
2398,200418052,"b""I'm thinking the VelocityThreshold and idleHeadVelocityThresh may be the same things."""
2398,200418146,"b""This is partly why I wanted to merge these classes in, is to make sure we don't have duplicated logic."""
2398,200418690,b'Btw most of this code was just copied directly from the `CameraMotionInfo` class without changes.'
2398,200419974,b'> serialize with a range?\r\n\r\nWhat are some sane range values?  0.1f to 5f?'
2398,200431062,b'maxHeadVelocityThresh needs a range as well. Also need to verify that max >= min.'
2398,200440609,b'any suggestion on what these ranges should be?'
2137,189621194,b'Not sure string comparisons is the best way to do this.'
2137,189635339,"b""Lol, no, that was just one attempt, I used ID in another class, I'll fix that\r\n"""
2351,198038283,b'Nit: stray empty line'
2351,198244019,b'When would null be valid for controller? (in both Detected and Lost events)'
2351,198244327,b'RaiseSourceRotationChanged()'
2351,198244529,"b'HandleEvent(sourceRotationEventData, OnSourceRotationChangedEventHandler);'"
2351,198245011,b'RaiseSourcePoseChanged()\r\nposition -> Pose'
2351,198245180,"b'HandleEvent(sourceTransformEventData, OnSourceTransformChangedEventHandler)'"
2351,198262406,b'Yes for input sources that are not tied to a controller.'
2351,198262945,"b'Will be renamed to \r\n```\r\nHandleEvent(sourceRotationEventData, OnSourcePoseChangedEventHandler);\r\n```'"
2351,198263105,"b'Will be renamed to \r\n```\r\nHandleEvent(sourceTransformEventData, OnSourcePoseChangedEventHandler)\r\n```'"
2351,198295010,b'Do we get detected | lost events in those cases?'
2351,198686049,b'yes we do.'
2334,197640845,"b""What's with all the input action changes? I thought that was part of the rebase?"""
2455,204597964,b'Is there a benefit to not using the auto-property here?'
2455,204816765,"b""Yes, it's because it's called in the constructor and because it's virtual can cause issues."""
2455,204817017,b'https://www.jetbrains.com/help/resharper/2018.1/VirtualMemberCallInConstructor.html'
2533,207626146,b'What happened to the `GlobalPointingExtent`? Would be nice to have an option to not have to set the same extent on every pointer.'
2533,207643874,"b""It's still there. We set it when we create the pointer now."""
2092,189291374,b'Maybe we should get rid of the capabilities all together?'
2092,189431086,"b'Already done and updated the InputSources you already have after I pulled your patest changes.\r\n\r\nUpdated the Capabilities logic to use the InteractionDefinitions dictionay, which is more efficient.\r\n\r\nBut I seriously need to rethink the ""Supports Capability"" logic, as it returns true if ONE of the required capabilities is valid, which could cause issue.'"
2092,189439096,b'Should be `UnityEngine.Debug`.\r\n\r\nThat class you have in there is reserved for testing'
2092,189439375,b'Why?'
2092,189439381,"b""Generic input shouldn't care, or know about WSA.XR inputs."""
2092,189439387,"b""Same here, we shouldn't be including this in base input sources."""
2092,189439927,b'Why are we setting the interaction definitions id to a generated id for an input source from the manager?'
2092,189440118,"b""As much as I like this new pattern, I feel like it's a bit redundant to have the input type both as a key and in the interaction definition itself."""
2092,189440147,"b""We shouldn't need to call update on input sources.  I'd rather let devs get the raw data at the time they need it instead of polling on updates."""
2092,189440162,"b""Also, let's get rid of this XR.WSA reference. Generic Base classes shouldn't reference specific platform types."""
2092,189440302,"b""Not sure that I agree with the ID being a string. Let's follow the pattern of the rest of the ids we keep as uints"""
2092,189442993,"b""shouldn't this be `!=`?"""
2134,189465388,b'Just wanted to avoid boxing'
2092,189465861,b'Fixed the support capabilities in my pr'
2092,189465944,b'No pointers is valid.'
2092,189465969,b'What about unregister?'
2092,189466000,"b""Let's replace input type key with the Input action we added or else we can only define a single input type, when we need to do multiple."""
2092,189467172,"b""This shouldn't be in the base generic class, but instead in the controller interface."""
2092,189467198,b'Please revert. '
2092,189467208,"b""Base input source shouldn't know about handedness"""
2092,189467222,b'We can probably revert any changes in this class.'
2092,189467227,b'same here.'
2092,189467249,b'Why rename?'
2092,189467261,b'But then not rename the property?'
2092,189467274,b'Get access only.'
2092,189467283,"b'These could be fields, correct?'"
2092,189467325,"b'I still feel like `InputType == InputAction` because of their enum types.  Maybe we can change `InputAction` to a struct with some data that users can set per interaction, like the action id, a custom name, etc...'"
2134,189470248,b'Can we do both?'
2137,189621194,b'Not sure string comparisons is the best way to do this.'
2135,189622697,"b'Ah, my bad.'"
2136,189623747,b'I wonder what the difference is between `UNITY_WSA` and `WINDOWS_UWP`'
2136,189631502,b'So is it a logical replacement?\r\n\r\nShould we update the usages of `#UNITY_WSA && !UNITY_EDITOR` in other places?'
2127,189680261,"b""They should be there. I didn't get a chance to test out the app view manager just yet though."""
2127,189680345,b'Mostly I just removed the c# language features'
2127,189680534,"b""But I also didn't solve the issue with IL2CPP builds:\r\n\r\n```\r\nAssets\\MixedRealityToolkit\\Utilities\\Scripts\\ApplicationViewManager.cs(98,36): error CS1545: Property, indexer, or event 'CoreWindow.VisibilityChanged' is not supported by the language; try directly calling accessor methods 'CoreWindow.add_VisibilityChanged(TypedEventHandler<CoreWindow, VisibilityChangedEventArgs>)' or 'CoreWindow.remove_VisibilityChanged(EventRegistrationToken)'\r\n```"""
2127,189680641,b'Might just roll back this change.'
2136,189693473,"b'@keveleigh, could we add this to best practices and coding guidelines?\r\nI like this table.'"
2137,189722813,"b""not in it's own class via inspectors?"""
2137,190113895,"b""Yes, I don't see why not after the InputAction changes I've made."""
2127,190334990,"b""The changes fix the build issues, but I haven't had a chance to test them"""
2127,190335378,b'I would like to get this into the next release though'
2127,190341597,b'hopefully'
2156,190440155,b'I think we should move the Master configuration to the top and remove Visual Studio all together.'
2156,190697573,b'Sorry I meant one more line up:\r\n\r\n> - Compile testing is performed in the Master configuration for:'
2127,190957707,b'This is only an issue for il2cpp not bc of the API.\r\n\r\nEven  il2cpp with .net 4.x API does not work.'
2127,190957810,b'Same as https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2127#discussion_r190957707'
2168,191015864,b'Do we want exact spelling? \r\n\r\nOr was this part of the problem we had with building and compiling?'
2173,191055457,b'Should we also include a Pointer action as well?\r\n\r\nOriginally I had these defined in the Input Action Profile itself.'
2173,191058638,"b'not true, there is/was a global action for all pointers'"
2173,191058655,"b""I don't think using the device input type as the key is the right thing to do."""
2173,191062653,b'What about pointer actions?'
2173,191062697,"b'I know these are examples, but should we keep them limited to the basic ones, like Select, Menu, Grip, Pointer, Teleport, etc?'"
2173,191063482,b'we never use the currentAction?'
2175,191072883,b'syntactic sugar I suppose.'
2175,191072912,b'in case we ever rename the class'
2175,191072968,b'Because I added logic to prevent users from going into play mode if no active profile is set.'
2175,191073018,b'I usually go with var if the type is explicit\r\n'
2178,191081889,"b""We don't need an overload."""
2178,191081900,b'Formatting'
2178,191081933,b'Why change?'
2178,191081942,b'Why remove?'
2178,191086918,"b'We will most likely always require an action, correct?'"
2178,191088653,b'raw data for all set types.'
2178,191088661,b'Changed = !newValue.Equals(rawData);'
2178,191088672,b'```\r\nChanged = newValue == null && transformData != null ||\r\n                   transformData == null ||\r\n                   newValue.Item1 != transformData.Item1 ||\r\n                   newValue.Item2 != transformData.Item2;\r\n```'
2178,191089260,b'not used?'
2178,191089267,b'not used?'
2178,191090209,b'using Equals method incurs boxing for unity types.'
2178,191090217,"b""Not sure if we're testing all the changed cases properly..."""
2184,191229827,"b""Summary tags in wrong place.\r\n\r\nAlso let's do a doc pass in a separate PR.\r\n\r\nI just wanna see the controller implementation."""
2184,191230085,b'Still not sure this should use the device input type as the key'
2184,191230668,"b""Shouldn't this be getting passed into the constrictor?"""
2184,191231054,b'Not sure if I like the MRTK abbreviation in the name.\r\n\r\n`defaultInputActions` would be suitable'
2184,191231358,b'Why put summary tag on private field?'
2184,191231579,b'Replace *Note with `<remarks><remarks/>`'
2184,191231931,"b""Let's use flat grouping"""
2184,191232099,b'I think the controller models should be moved into the controller configuration profiles.'
2184,191232667,b'Not sure about the name here.\r\nMight just be GamepadController per windows namespace naming.'
2184,191232865,b'What about Windows mixed reality device manager?'
2184,191234134,b'Could this be generic?'
2184,191234341,b'Why do we need this?'
2184,191234840,b'Why move these and make them out of order?'
2184,191236018,"b'But also, we could reuse the controller type for more than just Xbox devices'"
2184,191245704,b'How does this change affect classes like `ControllerFinder`?'
2184,191249943,"b""Isn't this the same as `InteractionDefinition`? Does this replace it?"""
2184,191250453,"b""Not sure if this is needed. Windows doesn't give us specific devices to choose from, but only controllers, gamepads, and their data."""
2187,191279690,b'async?'
2187,191279732,"b""Ah there's two! disregard my last comment then \xf0\x9f\x98\x84 """
2187,191279760,b'can this be a struct?'
2187,191279832,"b""Let's use the REST library found in MixedRealityToolkit/_Core/Utilities/WebRequestRest"""
2187,191279860,b'`if(Application.isEditor)`'
2187,191279934,b'could this be a struct?'
2187,191280025,"b""We're not going to be putting this dll into vNEXT. It causes too much trouble with other packages that also include it.\r\n\r\nWe should be using the `Unity.JsonUtility` where possible."""
2187,191280271,"b""Since we're specifying that vNEXT requires .NET 4.x support we can take out the IEnumerator version of this class."""
2198,191445155,b'Not sure if this is needed.'
2184,191480082,b'Thinking the events we raise to the managers should be in their own region'
2201,191599433,b'This most def should stay here.'
2201,191599483,b'This should stay as well.'
2201,191600063,"b""A bit busy right now, but I'll be sure to explain in detail later."""
2202,191608205,b'Inspectors are for the SDK level. \r\n\r\nWe will need another custom assembly that targets the sdk layer or rename the SDK.Inspectors to only reference SDK.Input.'
2202,191608365,b'We probably need both a Microsoft.MixedReality.Toolkit.SDK for the base assembly as well as Microsoft.MixedReality.Toolkit.SDK.Input'
2202,191609429,"b""Its no worries, having the custom assembly ahead of time shouldn't impact anything."""
2202,191609456,"b""Let's add new scripts in a separate PR"""
2202,191612691,"b""Also, I'm not so sure about starting on the SDK layer until we've finished most of the work on the Core feature areas."""
2204,191654037,"b'Idk why, but Managers Management made me chuckle a little.\r\n\r\nWhat about `Multiple Manager Utilities`?'"
2204,191664104,b'\xf0\x9f\x98\x8b '
2204,191665641,b'`managerSearch` can never be null. I fixed this in my housekeeping branch. please revert.'
2204,191666507,b'Is it possible to have more than one active at a time?'
2204,191666630,b'can we do something other than a cube?'
2204,191666835,b'extra line space'
2204,191666857,b'missing summary'
2204,191667078,b'Can we move this into the device template inspector?'
2204,191674219,"b""What's this do?"""
2204,191676471,"b'odd, still showing up as a change for me.'"
2204,191678974,b'Could we also add a simulated Hand controller as well?'
2204,191682609,"b""we should probably keep this check here seeing as we're asking for the manager a few lines later."""
2204,191682765,b'should be a return.'
2212,191869108,b'should probably be a property'
2212,191869164,b'same here.'
2184,191959480,"b""That's correct."""
2212,192170317,b'extra lines?'
2212,192170715,b'nit: vector3.one'
2212,192181765,b'will we use this later?'
2212,192181962,b'nit `Vector3.one`'
2212,192182235,"b""we could make these readonly fields so we don't have to allocate new arrays each time."""
2212,192182304,b'same here.'
2212,192182469,"b""this could also be a readonly field if we're only ever updating the same 4 array values."""
2212,192182987,b'could be a cached readonly array'
2212,192184458,b'some strange formatting on this line.'
2212,192184601,b'nit: `vector3.one`'
2212,192184777,b'It seems like we have a lot of duplicated code that does almost identical things.\r\n\r\nCould consolidate these?'
2224,192190714,b'None?'
2224,192204324,"b'Hmm, should def have a none option on that enum.\r\n\r\nvNEXT I suppose.'"
2229,192510184,b'strange formatting'
2229,192510271,b'`(_columns * 0.5f)`'
2229,192522004,b'Could we replace the white space with an underscore for the name of this asset?'
2229,192522063,"b'same for the name here as well, please.'"
2229,192522098,b'bad formatting'
2229,192522202,"b'should be private and serialized, if access outside this class is required, then add a public property'"
2229,192522248,b'Same thing for the rest of the fields below.'
2229,192522433,"b""instead of creating a new vector3, let's use Vector3.zero"""
2229,192522715,b'Do we not use the source?'
2229,192523098,"b'Why not just update source with new values instead of creating a new vector3 each time?\r\n\r\n```\r\n            Radius = radius >= 0 ? Radius : radius;\r\n       \r\n            source.x = 0f;\r\n            source.y = 0f;\r\n            source.z = (Radius/Rows) * row;\r\n\r\n            float yAngle = _radialCellAngle * (column - (_columns * 0.5f)) + (_radialCellAngle * .5f);\r\n\r\n            Quaternion rot = Quaternion.Euler(0.0f, yAngle, 0.0f);\r\n            source = rot * source;\r\n\r\n            return source;\r\n```'"
2229,192523182,"b'Also, why not just do pure Quaternion math so we get better results without gimbal lock?'"
2229,192544352,"b""Didn't think it would be, but it was worth a shot."""
2229,192567148,b'Might want to keep these but mark them obsolete to prevent breaking changes.\r\n\r\nBe sure to point people to which enum they should be using.'
2184,192567898,"b""After looking at this again, yes, we do want to make sure we're serializing these fields."""
2233,192572702,"b""It's tricky, [check line 75](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2233/files#diff-42c2559cca49c73eea6265c6f99893a3R75).  We immediately set the pointer's input source parent after we create our gaze input source.\r\n\r\nPart of the problem was that all input sources default to the gaze pointer if no pointers were passed into the constructor.  Well, if we're the gaze source, and we don't have a gaze pointer yet, we have a chick vs egg problem. So the only way I found around it was to initialize the pointer's source parent after we've created it."""
2184,192573030,b'why break this up onto different lines?'
2184,192573041,b'braces'
2184,192573046,"b'also, seeing as this is a singleton, how are we initializing more than once at a time?'"
2184,192767985,"b'actual amounts should be on the left, and results are on the right'"
2184,192770507,b'please revert.'
2184,192771207,"b""Yeah I'd like to discourage people trying to look for actions by string"""
2184,192771843,b'Did we also remove these from all the scaffolding?'
2243,192847764,"b""What's with this?  This change breaks my serialization for me."""
2243,192848096,b'Why remove?'
2229,192849440,"b'Please make this change:\r\n\r\n```\r\n        [Obsolete(""Please use FaceParentFoward"")]\r\n        FaceFoward = FaceParentFoward,             // Zero rotation\r\n        [Obsolete(""Please use FaceParentBack"")]\r\n        FaceForwardReversed = FaceParentBack,    // Zero rotation + 180 degrees\r\n        FaceParentFoward,       // Parent Relative Forwards\r\n        FaceParentBack,         // Parent Relative Backwards\r\n        FaceParentUp,           // Parent Relative Up\r\n        FaceParentDown,         // Parent Relative Down\r\n        FaceCenterAxis,         // Lay flat on the surface, facing in\r\n        FaceCenterAxisReversed // Lay flat on the surface, facing out\r\n```'"
2243,192849952,"b""Nice catch, I didn't realize I had already ported the reflection extensions"""
2243,192850089,b'because each platform is referencing the assembly a bit differently is seems.'
2243,192850815,"b""it might be because there's some hidden characters added/removed in this."""
2243,192850915,b'I just need to update the profiles with the updated serialization and it should be fine.'
2184,192855613,b'These are just examples.'
2184,192855747,"b""I'm wondering if we even want to create default ones for people.  We will have the default that they can copy/start from."""
2184,192856101,"b""We could make it a static and include this to the Type controller parameter so we don't have to pass in the type as well."""
2245,192892426,b'I think a better name without symbols is in order.'
2245,192892483,"b""please rename so there isn't white space"""
2245,192892580,b'please rename with CamelCase naming convention.'
2245,192892682,b'fields should always be private'
2245,192892710,b'missing namespace.'
2245,192892740,b'missing private access modifier'
2245,192892843,b'missing private access modifier'
2245,192892903,"b""is this wrapped correctly so we don't break other builds?"""
2245,192893029,b'odd formatting.'
2245,192893160,b'missing private access modifier.'
2245,192893215,b'safe cast target to solver handler.'
2245,192893288,"b""let's cache the gui content so we're not creating a new one each gui update"""
2245,192893395,b'or just rename the field in the base class to `trackedTransform`'
2245,192893507,b'missing private access modifier.'
2245,192893677,b'breaks cross platform building.'
2245,192893742,b'should we go ahead and move it?'
2245,192893831,b'extra line'
2245,192893884,b'could this be a property instead?'
2245,192893928,b'fields should be private'
2184,192894316,"b'Of course we will have defaults, but I think they should be pre-serialized in an asset when we release.'"
2229,192894770,b'missing private access modifier.'
2229,192894798,b'breaks cross platform support.'
2229,192895111,"b'I just wrote it real quick, but I think you get the idea.'"
2229,192918460,"b""yes, But I believe there's already a platform agnostic handedness enum you can use instead."""
2184,192918771,"b""That's partly why I wanted to use what we already have, but I'm glad it's working now."""
2184,193128613,"b""Goes back to that essence of input I talked about.\r\n\r\nTechnically digital isn't an axis per se but it's still the base and subset of all the things you can do with a signal. Essentially digital is just a clamped sinusoidal with a ceiling and floor value."""
2184,193182217,"b""This is the boxing I'm taking about. Not a big deal. """
2184,193199914,"b""I think it's not that big a deal here since we only create a few devices at a time. Generally this won't happen that often."""
2184,193200259,b'I meant the `InteractionInputSources` class. But @SimonDarksideJ has assured me we will do an A/B test to make sure nothing falls between the cracks.'
2184,193223954,"b""doesn't this cause that crash again?"""
2184,193242363,"b'we can just pass null here, correct?'"
2184,193242398,b'or nothing cause null is default'
2184,193437456,"b""in the constructor it will create a new dictionary buy default is all I'm saying. So you don't have to make a new one here."""
2245,193442506,b'`solverHandler = (SolverHandler)target;`'
2245,193466922,"b""It won't ever not be that type anyway, but everywhere else in code it's written the other way.\r\n\r\nSo either we stick to the established pattern or update it everywhere in all our other editor inspectors."""
2245,193552158,"b'sure, sounds good.'"
2184,193601800,"b""Real question is how'd you get the Samsung device controller to show up?"""
2246,194472343,b'Summary tags should be above the public properties not the attributes for the private fields'
2246,194472558,b'a couple of extra lines before breaks.'
2246,194472756,b'can we just assign the vector instead of creating a new one?'
2245,194473213,b'missing class summary'
2245,194473651,b'Do we want to Instantiate and destroy the object every time?\r\n\r\nWhy not just Instantiate and then set active or disable?\r\n\r\nDestroy when the monobeahviour get destroyed or disabled. (Or does that do this already?)'
2245,194474135,b'I like this addition!'
2245,194474581,"b""What's this for?"""
2245,194475907,"b""Let's make the name for this GameObject a bit nicer."""
2245,194476019,b'missing summary tags should match tooltip'
2245,194476272,b'extra lines'
2245,194476642,b'No changes to Solver.cs did we remove the base start method from it?'
2283,194616567,b'What about position only?'
2283,194616595,b'What are these for?'
2245,194793749,"b""Don't forget to add the obsolete messages and assign the old to the new."""
2299,195768346,b'Could we make the mapping the key instead of the type?'
2245,195772194,b'Why not just add the HideInInspector attribute?'
2299,195772922,b'I still think having the device input type as the key limits us with assigning multiple types here.'
2299,195774439,"b'I agree, I think we should be using something different as the key'"
2299,195774981,"b""Ideally we shouldn't be making new ones anyway. They should be done in the controller's config profile."""
2299,195779588,"b"">A key is unique, so we can't assign multiples. \r\n\r\nThat's exactly the problem."""
2299,195779752,"b"">we do need more input types as we add more physical controllers with more buttons.\r\n\r\nNo we don't. A button is a button"""
2187,195894528,"b""I'll be sure to pull your branch and do a more in depth review this weekend."""
2245,195895177,"b""Idk, this just seems a bit too hacky. I bet there's a better way to fix this."""
2299,195895388,b'This is a ton of boxing in this op:\r\n![image](https://user-images.githubusercontent.com/13334553/41496275-6f734122-70f0-11e8-9e78-c14fef7ee421.png)\r\n'
2299,195895416,"b'> DeviceInputType will GROW, So I fully expect to add Thumbstick 1 / Thumbstick 2 when we do Xbox controllers.\r\n\r\nWe should most def not do this.'"
2299,195895455,b'Should we check if the entry is not null?'
2314,195936111,b'why svg instead of png?'
2314,195936217,b'Oh I see you included both.'
2314,195936794,"b""I think we'll def use TextMeshPro to make the default icon pack for vNEXT."""
2299,196097367,b'Using direct methods \xf0\x9f\x98\x9d '
2315,196100088,"b""Not exactly a breaking issue, just doesn't currently conform to our standards. Let's add an issue and get back to this later. It will compile."""
2315,196100361,b'I def think we should. I was actually contemplating adding a default up/down/and click action for all pointers.'
2315,196103248,"b""The reason _why_ we specifically need them is because of the way the Unity Canvas system works and how our need to raycast against the canvases and physical objects.\r\n\r\nTake a look at the `MixedRealityInputManager`'s Raise Pointer up/down methods.  In each we have to make sure we've got a valid `GraphicInputEventData` before we can properly execute the pointer up/down/click.\r\n\r\n```\r\npublic void RaisePointerUp(IMixedRealityPointer pointer, Handedness handedness, IMixedRealityInputAction inputAction)\r\n{\r\n    // Create input event\r\n    pointerEventData.Initialize(pointer.InputSourceParent, handedness, inputAction);\r\n\r\n    if (MixedRealityManager.Instance.ActiveProfile.InputActionsProfile.DefaultPointerAction.Id == inputAction.Id)\r\n    {\r\n        ExecutePointerUp(HandlePointerUp(pointer));\r\n    }\r\n}\r\n```"""
2315,196112047,"b""Well you wouldn't be using hand input on standalone without a Magic Leap right? \xf0\x9f\x98\x89 """
2315,196112438,"b""That's a possibility.  Let me chew on this a bit more and see if I can come up with a better solution."""
2315,196130561,"b""Ended up removing for now until we need it again. After testing this out, I concur, we don't really need it"""
2315,196131653,b'Thought I put this in the description. Must have missed that...\r\n\r\nSo that it renders properly in the inspector.\r\n\r\nold: `Three Do F Position`\r\nnew: `Three Dof Position`'
2315,196147488,b'@SimonDarksideJ My next PR will address this.'
2316,196944864,"b""We're not sure yet. Let's add it in when we cross that bridge."""
2299,197154719,b'I need to pull a few of these changes out and make them their item PR.\r\n\r\nSorry about this. '
2321,197155140,"b""It wasn't removed."""
2321,197155333,b'The namespace was refactored and these classes are not part of setup.'
2321,197155664,b'This is mainly to ensure that the assemblies are built in the right order.'
2321,197156088,"b'The custom assembly definitions give us clear dependencies, and complication order.'"
2321,197158228,b'The only class that should be part of the setup is Enforce Editor Settings.'
2321,197178595,b'Done'
2322,197283458,b'Yes bc ControllersProfile is a unity engine type that can never be null.'
2322,197283821,"b""It's for the same reason why you can't use the `??` on Unity.Object types."""
2322,197292212,"b""I'll double check in a bit"""
2245,197300085,b'Did we add the range?\r\n'
2245,197303172,"b""Weird it's not showing up in the diff."""
2322,197303891,b'Fixed.'
2322,197305074,"b""> It also looks like unchecking EnableControllerProfiles doesn't actually do anything \r\n\r\nDid you save before running in the scene?"""
2322,197305139,b'BC it def disables the profile:\r\n![image](https://user-images.githubusercontent.com/13334553/41750257-cbabe060-756f-11e8-87cd-de3066d8d26d.png)\r\n'
2322,197305665,"b""Also, as far as I'm aware, we're not even using the Controller Profile yet. It's not wired up to anything."""
2322,197307550,"b""Right, we haven't wired it up anywhere yet."""
2322,197307619,"b""I'm not even really sure what that GetControllerMapping is for anyway. Gotta ask @SimonDarksideJ """
2329,197463962,b'Formatting seems broken in a few of these classes'
2327,197464482,"b""What is this PlatformSwitcher and why can't we either cache a reference to it or make it a singleton?\r\n\r\nFindObjectOfType is very expensive."""
2187,197596142,b'Hey @joaocpaiva I saw that 2018.1.6 is out with fixes for this. Going to do a dry run and see if I can get it setup.'
2187,197616320,b'Where does this dll come from?\r\n\r\nIs there source code that goes along with this?'
2187,197616424,b'should we remove this and add a check if string is null or empty?'
2187,197616514,b'Why do we handle HTTPS traffic differently in the editor?'
2187,197616545,"b""We probably don't have to make a new request every time. """
2187,197617161,b'https://github.com/AzureAD/microsoft-authentication-library-for-dotnet'
2187,197617234,b'I wonder if there is a nice way to reference this dependency via GitHub.\r\n\r\nMy only concern here is if people already use a library in their projects and they get conflicts.'
2187,197617404,b'Does this need to inherit from Mono?'
2187,197617478,b'Can you explain what this xml file does please?'
2187,197617673,b'Any prefabs should live in the SDK layer.'
2187,197618361,"b'Tried this out but getting null references in your scene, is the auth correct for the example?\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/41812125-d25375d2-76d1-11e8-8a81-aad8a3c561e8.png)\r\n'"
2187,197619060,"b""I'm also getting this \r\n![image](https://user-images.githubusercontent.com/13334553/41812328-dbe68db0-76d5-11e8-94cf-62ad141b732d.png)\r\n"""
2187,197619851,"b""I'd like to see this only return a Response so that devs can use it as they please. I think having graph response types constrains this a bit.  I think it's best to move that stuff to examples in case people want to know how to utilize and get content from the requests."""
2187,197621347,b'I think this is bc of a known TLS bug in Unity.'
2187,197621352,"b""Nvm it was in the readme that it's to prevent stripping byte code for reflected classes."""
2331,197628557,b'Whoops need to revert this.'
2334,197640845,"b""What's with all the input action changes? I thought that was part of the rebase?"""
2334,197640923,b'I was going to comment on changes to this file but the meta must have gotten destroyed/corrupted.  Is there a way to fix so the diff is correct?'
2334,197641026,"b""I'd like to keep the direct calls to do a speed test."""
2334,197641087,b'We can probably remove this. All of the interaction source controllers are virtually the same to the interaction manager'
2334,197641165,b'Did we want to completely remove?'
2334,197644626,b'We should probably be getting this data from Managers.MixedRealityManager.Instance.ActiveProfile.ControllersProfile.MixedRealityControllerMappingProfiles'
2334,197646524,"b""We wouldn't have any mappings configured if we're not using the input system correct?"""
2334,197647714,b'should be protected set.'
2334,197648182,b'SixDof is a struct and can never be null.'
2334,197648304,b'See the PR I just opened. It addresses that and some other things.'
2337,197655066,b'This is addressed in the next PR.'
2338,197808331,"b""It's moved into the implemented controllers class"""
2337,197854001,b'Will be moved to base controller in devices refactor. @SimonDarksideJ do you want me to revert until then?'
2345,197891804,"b""Agreed we'll make them internal but for now we should be the only ones working in the repository."""
2345,197891901,"b""Once we figure out how this will go, we'll update the accessors."""
2337,197905159,b'Fixed in a future PR I caught that too.'
2345,197910439,b'Any suggestions on how to fix this?'
2345,197910525,b'Or how to get the appropriate tracking status?'
2345,197920951,"b""We won't need it because all the WMR devices are treated the same by the Interaction Manager"""
2345,197920988,b'Correct'
2350,197973351,b'Need to change this. No cast is needed.'
2351,198041598,b'Whoops. Nice catch'
2351,198043068,"b""How is the name misleading?\r\n\r\nThe next name I thought of was Pose, but I thought people wouldn't understand right away."""
2351,198044616,"b'>Also, does it give us anything that querying ThreeDofPosition and ThreeDofRotation (perhaps in addition to TrackingState) wouldn\'t?\r\n\r\nI don\'t understand the question. Nothing here is being ""queried"", as it were. We\'re simply raising an event that the data in question was changed, for all the registered handler\'s to utilize.'"
2351,198045279,"b'>I feel like I\'ve normally heard it referred to having ""six degrees of freedom"", with the inference being position + rotation.\r\n\r\nAgreed, but Pose is also often used as a form of both Position & Rotation without scale.  Hmm'"
6305,335702466,b'You may need to add the typeof() check as in spatial'
6305,335706142,"b'No actually, the profile type under DataProviderConfigurations is actually BaseMixedRealityProfile\r\n![image](https://user-images.githubusercontent.com/25975362/66958478-18a9a680-f01d-11e9-9841-ee24c34256ce.png)\r\n\r\nWhile the ObserverConfigurations in SA, explicitly use BaseSpatialAwarenessObserverProfile\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/66958523-2d863a00-f01d-11e9-9629-f6f2960a31cc.png)\r\n\r\n'"
6133,341959235,"b""> This code is repeated over and over. We don't want redundant code when it can be put in a function\r\n\r\nI totally agree, but the portion that is redundant is much bigger than just my addition to it and slightly different in every derivate of BaseMixedRealityToolkitConfigurationProfileInspector. Do you suggest extracting all of that out first, or is it ok to take my changes in and then do it?"""
4314,284824657,"b'>// TODO: Troy [](start = 12, length = 13)\r\n\r\nPlease clean up this TODO as well.'"
4314,284835273,b'This comment is on an outdated version of the file. It has already been removed'
5890,321491402,b'Todo later?'
5890,321495395,b'not needed... thanks!'
5890,321496575,b'removed'
4314,284825094,"b'>// TODO: Check if inspector locked? [](start = 20, length = 35)\r\n\r\nIt would be helpful to either resolve the TODO, or provide additional information on how someone else could update this (and how they would validate, etc).'"
4314,284836155,b'Removal. I was going to try to be smart in the future and make sure the inspector appears on selection'
3610,264966198,b'What does UseSubstitution do? Maybe a quick 1 line summary tag for each.'
3610,264966320,"b'Not overly fond of the enum name. TypeEnum doesn\'t describe the usage. Perhaps ""ProfileCloneBehavior""?'"
3610,264966408,"b'Also, does it make sense to have a leave empty option for sub-profiles that the user does _not_ want to use?'"
3610,265211247,"b""Hadn't thought of that. I'll add it."""
3610,266089324,b'nit: may be worth defining some specific visual values like this as readonly/consts or at least fields in the class to that they can be consistenlty reused/updated in one location'
3610,266089604,b'nit: remove this additional line'
3610,266090907,"b'Compared to closing this, is there a way to make the existing window receive foreground? If someone has unsaved changes with the window, I imagine theyll currently be lost by this ux choice to close the window?'"
3610,266091278,"b'granted i guess if this call is made populating profiles, this may not be possible. Feel free to share any personal preference on which is more annoying: losing an already open window vs resetting focus to an open window with the wrong profiles :)'"
3610,266091455,b'Nit: capitalize from to stay consistent with other text having first word capitalized.'
3610,266091824,"b'nit: change to ""Can\'t clone profile - no profile is currently set."" ? It could be more clear how to fix things.'"
3610,266115368,b'I could launch a Proceed / Cancel dialog to verify that they want to stop cloning the current profile and instead clone another.'
3977,275725520,"b'Why the change from 140 -> 170? \r\n\r\nBy the way, these both feel like ""magic numbers"" that might warrent a named constant for clarity.'"
3977,275725751,b'nice addition!'
3977,275806913,"b""Maybe it's to make room for the new HelpBox on line 193 (shown below)?"""
3977,275872911,"b""Yep, it's a height thing because the new info message increases the required height of the window. I thought about commenting this (i.e. 'this determines the size of the window') but then didn't do it because the naming of the window is relatively obvious and missing changing this leads to a very obvious side effect."""
7215,374390083,"b""Is the trailing / required here? It's odd to see trailing folder slashes in general but if it's required that's good to know"""
7215,374391745,"b""I do not think it is required but I'll test it out to make sure."""
7215,374399268,b'This also needs to be fixed. We should not be assuming where the Generated folder should be. It should be retrieve via the MRTKFiles.cs class'
7215,374399400,b'Same here'
7215,374408308,b'The trailing / is not required '
7215,374421132,b'Horray'
7215,374873524,b'The file location is retrieved via MapModulePath'
6988,363534481,b'Suggestion: move this if check to a dedicated function in the base class inspector?\r\nIsProfileRequired or IsProfileMissing(attribue)?'
6988,363535067,b'Sounds reasonable. Thanks!'
6988,363940354,b'done.'
5125,298666052,"b"">SetDirty [](start = 26, length = 8)\r\n\r\nJust to check - this doesn't cause us to spike Unity CPU usage when this inspector is open right? I have flashbacks to the build window """
5125,298672605,b'Not in this case but yes that can absolutely be a problem so this technique should be used sparingly.'
5125,298674375,"b""There was a report that using this constantly, even when changes aren't being made, marks the scene as changed and needing to be saved: https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4516, which seems annoying"""
5125,298694204,"b""In this case it only marks the profile as dirty and not the scene. It must be because it's a ScriptableObject asset and not an actual prefab."""
4314,284825624,b'Same comment on this TODO as well.'
4314,284835357,b'This comment is on an outdated version of the file. It has already been removed'
3629,265788446,"b""I think the class hierarchy goes:\r\n\r\nMixedRealityToolkitConfigurationProfileInspector -> BaseMixedRealityToolkitConfigurationProfileInspector -> BaseMixedRealityProfileInspector\r\n\r\nSince BaseMixedRealityToolkitConfigurationProfileInspector doesn't override OnEnable, in theory this behavior should already exist from the code in BaseMixedRealityProfileInspector.\r\n\r\nUnless this is being done because you're afraid that future people who override BaseMixedRealityToolkitConfigurationProfileInspector  will not call base.OnEnable?"""
3629,265788661,"b""What I mean to say is, it seems like this instance of the code isn't necessary because it's handled in the base class. If it's being done again in a subclass (and only one of them!) it would be great to understanding the motivation behind it."""
3629,265789904,b'Had to short circuit the sub class.'
3629,265791018,"b""Ah doh, yes that's obvious now"""
3890,273248905,"b""`ConfirmInitialized()` is intentionally called here to ensure that the setup phase works correctly. What's the benefit of just bailing if it's not initialized?"""
3890,273267725,"b""These two ConfirmInitialized calls - and only these calls - were causing game objects (camera / play space transform) to be created during OnDestroy in play mode, which Unity really doesn't like.\r\n\r\nBailing in the inspector until the toolkit is initialized elsewhere seems to work. The toolkit still gets initialized in the editor without causing life cycle problems. And at runtime it's obviously not an issue."""
3922,274502534,b'`configurationProfile = (MixedRealityToolkitConfigurationProfile)target;`\r\n\r\nThis line needs needs to be added back. This is the origin of the null reference exceptions.'
3922,274542738,b'That must be what was breaking it for me'
3922,274896433,"b'Fixed, thanks for spotting this.'"
4110,279220272,"b""I think actually putting this in the `CreateAsset` overload would be a little better as we'd then get undo capabilities for each created profile as well."""
4110,279427223,"b'My intent was to cover the assignment to the ActiveProfile field, so I think the Undo.RecordObject needs to be here in the outer function.'"
4110,279427279,"b""@StephenHodgson raises an interesting point about undo and creation of the asset itself. I was just interested in the side-effect of the undo, which is that it tells Unity the MixedRealityToolkit.Instance object is dirty so that it can be saved. But if you actually want to be able to fully undo the whole shebang then I suppose you'd also want to delete the asset that's created. Perhaps that could be accomplished via Undo.RegisterCreatedObjectUndo inside the AssetDatabase.CreateAsset extension method, but I'm not sure if that works with assets and what all the consequences of that could be. I see several calls in MRTK to CreateAsset that don't seem to be creating an Undo record and I'm hesitant to wade into that territory.\r\n\r\nFor now, I'd like to stick with this fix as-is to ensure that the change is saved as described in #4109. @StephenHodgson, if you like you could open a new issue to suggest that calls to AssetDatabase.CreateAsset should be keeping Undo records. But I'm not sure if that's sufficiently important."""
4110,279437530,"b""Resolving the conversation. (Please let me know if that's not the etiquette for PR creator to resolve.)"""
4110,279445913,"b""I think that's fine :) Your reply makes sense to me.\r\n\r\nI'm not sure it warrants an new issue, as I think it's just a nice to have feature.\r\n\r\nThanks @ForrestTrepte!"""
4435,285743326,b'Turns out this is superfluous because the process will be immediately hijacked by selecting the default config profile.'
6446,342216606,b'Is this a place we can use one of our object destroy extensions?'
6446,342272081,"b""ah it's finally been created"""
6482,356873451,b'Missing summary tag for `protected` method'
5125,298663700,"b'>Boo.Lang; [](start = 6, length = 9)\r\n\r\nWhat'"
5125,298670265,b'Boo.Lang!?'
5125,298670368,b'![image](https://user-images.githubusercontent.com/5840182/60357914-bf443b80-9989-11e9-945b-11eac25228fa.png)\r\n'
5125,298697073,b'I think there might be some money in a github app that finds usage of Boo.Lang and posts pictures of Boo'
3750,271068609,b'new file?'
3750,271101635,b'```suggestion\r\n                        property.stringValue = SystemType.GetReference(repairedTypeOptions[i]);\r\n```'
3750,271101690,b'```suggestion\r\n                                property.stringValue = SystemType.GetReference(repairedTypeOptions[0]);\r\n```'
3750,271107774,"b'Added a nice little error icon next to the try repair button\r\n![image](https://user-images.githubusercontent.com/13334553/55369978-a8d33480-54ad-11e9-8aad-a8ff4bdb99ed.png)\r\n\r\n```suggestion\r\n                        var errorContent = EditorGUIUtility.IconContent(""d_console.erroricon.sml"");\r\n                        GUI.Label(new Rect(position.width, position.y, position.width, position.height), errorContent);\r\n                        \r\n                        Rect dropdownPosition = new Rect(position.x, position.y, position.width - 90, position.height);\r\n```'"
3750,271116384,b'Awesome.'
3750,271461902,b'makes it nice and easy to spot. thanks!'
3750,273121827,b'Nit: Curly braces.'
3750,273247725,b'\xf0\x9f\x92\xaf '
5589,312650489,b'No longer need to `Load`?'
5589,312652983,"b'Nope! Load was necessary before because UnityAssembly needed to be turned into System.Reflection.Assembly. Since these assemblies are already System.Reflection.Assembly, no need!'"
3773,278680928,"b'>  public class BaseMixedRealityServiceInspector : IMixedRealityServiceInspector [](start = 2, length = 79)\r\n\r\nNit: Can you add some doccomments for this base class?'"
3773,278734920,"b'>public virtual void DrawSceneGUI(object target, SceneView sceneView) { } [](start = 8, length = 72)\r\n\r\nWould it also be possible to have some comments regarding the type that ""target"" will be - I see that it gets cast to some other interesting things in subclasses, so maybe setting some general expectations (i.e. it will be of type [CustomEditor(typeof(ServiceFacade))] whatever is in CustomEditor) or MixedRealityServiceInspector\r\n\r\nIn general these types of comments are valuable especially with generic object types, to help scope down the set of things consumers/extenders would have to deal with with mental overhead.'"
3773,278735727,"b'Ah, nevermind, I guess <inheritdoc> would probably be good enough here because you have it already on IMixedRealityServiceInspector\r\n\r\n---\r\nIn reply to: [278680928](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3773#discussion_r278680928) [](ancestors = 278680928)'"
3773,278735796,"b""Actually this is probably just a comment for IMixedRealityServiceInspector's parameters. \r\n\r\n---\r\nIn reply to: [278734920](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3773#discussion_r278734920) [](ancestors = 278734920)"""
3773,278684017,"b'I think it might be possible to simplify these lines to \r\n\r\nEditorGUILayout.ObjectField(""Focus Result"", pointer.Result?.CurrentPointerTarget, typeof(GameObject), true);\r\n\r\n'"
3773,278684256,"b'>numPointersFound [](start = 16, length = 16)\r\n\r\nThis is a super nit but, since we only care about the presence of pointers, we can just use a bool type (i.e. pointersExist)'"
3773,275893478,b'Private fields should start with lower case. See [coding guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/CodingGuidelines.html#naming-conventions)'
3773,275899160,"b'This is following a convention set by other inspectors. No issue with making them lower case, but we should do it in another PR where we change the other inspectors to be consistent.'"
3773,278681356,"b'> private static readonly Color disabledColor = Color.Lerp(enabledColor, Color.clear, 0.5f); [](start = 7, length = 91)\r\n\r\nThoughts on having a Colors.cs where these types of constants can go?\r\n\r\nI see disabledColor copy pasted across a few different service inspector implementations.'"
3773,278730989,"b""I'm having a little trouble finding where to use this inspector - can you share some instructions on how to make it visible?"""
3773,278733660,"b""Nit: It's a bit weird reading the default case show up before the non-default case, if only because default always executes last regardless of the order here (so seeing out of code visually laid out out of the order in which it executes is a bit odd to see)\r\n\r\nThat being said, I can't find any coding guidelines that state this explicitly - it seems like it's implicit in guidelines:\r\n\r\n[https://google.github.io/styleguide/javaguide.html#s4.8.4-switch](https://google.github.io/styleguide/javaguide.html#s4.8.4-switch)\r\n[https://google.github.io/styleguide/cppguide.html#Loops_and_Switch_Statements](https://google.github.io/styleguide/cppguide.html#Loops_and_Switch_Statements)\r\n[https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es70-prefer-a-switch-statement-to-an-if-statement-when-there-is-a-choice](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es70-prefer-a-switch-statement-to-an-if-statement-when-there-is-a-choice)\r\n\r\nThis comment is for here and below as well\r\n"""
3773,278734049,"b""For my own understanding, what would be the ramifications of setting the value on this hand joint? we special case it a bunch but if there's no harm in setting it (or just enumerating over the relevant set of hand joint enums) it might simplify some of this code."""
3773,278737650,b'I agree this would be nice. @chrisfromwork has a related proposal open here: #3908'
3773,278739607,"b""It just asks for a joint that doesn't exist. We can always cache the enums we want on startup to avoid this."""
3773,278741739,"b""If you're asking where can you see it in action, it exists on the hand joint service object created under the MRTK object. It's just like the pointer inspector."""
5268,302758140,b'```suggestion\r\n            IMixedRealitySceneSystemEditor sceneSystemEditor = target as IMixedRealitySceneSystemEditor;\r\n```'
5268,302758397,"b'without the above change, if target is not a scene system, you will throw and not get to the null check below.'"
5268,302758535,b'shouldnt need this line (the cast below should suffice)'
3773,278676207,b'Nit: Please remove commented out code prior to checking in.'
3773,278678234,"b'>  string assetPath = $""{MixedRealityEditorSettings.MixedRealityToolkit_RelativeFolderPath}/StandardAssets/Textures""; [](start = 10, length = 116)\r\n\r\nThis line is throwing a warning because it\'s using a deprecated API. Please use the MixedRealityToolkitFiles helper.\r\n\r\nI THINK you wanna do something like\r\n\r\nMixedRealityToolkitFiles.MRTKDirectories.First(), though Andrei would be more authoritative than I am.\r\n\r\nThe reason this was done was to make it so that you could import our code/binaries into not the root assets location.'"
3773,278736682,"b""It's interesting to see this check happen here but not in OnHeaderGUI - i.e. if the facade has been destroyed, is it still interesting to do the OnHeaderGUI stuff as well?"""
3773,278736780,"b'>drawDocLink [](start = 17, length = 11)\r\n\r\nShould drawDocLink also be included in drewSomething down below?'"
3773,278737259,"b'>\xe2\x80\xa2 [](start = 39, length = 1)\r\n\r\nO_O'"
3773,278737727,"b""Super Nit: \r\nif (GetServiceInspectorInstance(serviceType, out inspectorInstance) && !inspectorInstance.DrawProfileField) \r\n{\r\n  return false;\r\n}\r\n\r\nIt's just adding an unnecessary extra scope."""
3773,278738606,"b""I considered it but decided a doc link doesn't really 'count.' Could go either way though."""
3773,278738992,"b""Good question. I've never seen OnHeaderGUI get called for destroyed targets so Unity must do some under-the-hood check prior."""
3773,278739000,"b'>// Would be nice to handle this with a lookup instead [](start = 16, length = 53)\r\n\r\nWe could create a const/final static dictionary for this class that has\r\n\r\nDictionary<Type, string> = {\r\n  {IMixedRealityInputSystem, ""inputSystemProfile""},\r\n  {IMixedRealityBoundarySystem, ""boundaryVisualizationProfile""},\r\n ....\r\n}\r\n\r\nAnd then use that to lookup the property name.\r\n\r\nSince it looks like the only delta here is the property name.\r\n\r\nAlternatively we could just move:\r\n\r\nBaseMixedRealityProfileInspector.RenderProfile(serviceProfileProp, null, false, serviceType);\n                    EditorGUILayout.Space();\n                    foundAndDrewProfile = true;\r\n\r\nOut of each if/elseif statement and into another block like this:\r\n\r\nSerializedObject activeProfileObject = new SerializedObject(MixedRealityToolkit.Instance.ActiveProfile);\n                // Would be nice to handle this using some other method\n                // Would be nice to handle this with a lookup instead\r\nSerializedProperty serviceProfileProp;\n                if (typeof(IMixedRealityInputSystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""inputSystemProfile"");\n                    foundAndDrewProfile = true;\n                }\n                else if (typeof(IMixedRealityBoundarySystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""boundaryVisualizationProfile"");\n                    foundAndDrewProfile = true;\n                }\n                else if (typeof(IMixedRealityDiagnosticsSystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""diagnosticsSystemProfile"");\n                    foundAndDrewProfile = true;\n                }\n                else if (typeof(IMixedRealitySpatialAwarenessSystem).IsAssignableFrom(serviceType))\n                {\n                    serviceProfileProp = activeProfileObject.FindProperty(""spatialAwarenessSystemProfile"");\n                    foundAndDrewProfile = true;\n                }\r\n\r\nif (foundAndDrewProfile)\r\n{\r\n  BaseMixedRealityProfileInspector.RenderProfile(serviceProfileProp, null, false, serviceType);\n                    EditorGUILayout.Space();\n                    foundAndDrewProfile = true;\r\n}'"
2428,202106684,b'Why did the meta files for all these fonts change?'
2428,202106931,b'Why did this get reverted?'
2428,202106969,b'Why did this get reverted?'
2428,202107174,"b""Let's make this a const string seeing as we use it in multiple places.\r\n\r\nWe could do the same of for all the keywords."""
2437,202109028,b'Ask Unity \xf0\x9f\x98\x85'
2437,202109234,"b""We don't have to map any Axes for the WMR Controllers because we get all input directly from the native code, and we don't have to go through Unity's terrible input system."""
2437,202109289,"b'No, Bc this is how Unity defines it.'"
2437,202110345,b'Well this axes utility is only a stop gap until we figure out a way to get the axis data directly.'
2428,202114662,b'Please remove compiler directive in favor of checking for `Application.isEditor`'
2437,202152686,"b'Again, this is just how unity defines it.'"
2446,202546072,b'nit: property'
2446,202546073,b'nit: property'
2446,202546076,b'nit: property'
2446,202546089,b'just white space?'
2446,202546095,b'extra line'
2446,202546103,b'Why? We have our own event system to raise events on.'
2446,202546118,b'public fields should be made private with public property accessors if needed.'
2446,202546127,"b""Why TextMesh? Let's use TextMeshPro."""
2446,202546137,b'memory leak.'
2446,202546163,"b""Let's also update the names of these to comply with our usual standard. (drop the m prefixes)"""
2449,202842087,"b""Maybe, it's just the easiest way to get the input system reference."""
2449,202842960,"b""I'm not sure making a base input class would be good for the SDK components. I just wanted then to be simple and self contained."""
2449,202856664,"b""It doesn't need a property drawer"""
2449,202856730,"b""I'll add this on it's own PR"""
2449,202856966,b'BaseInputHandler it is then.'
2449,203442699,b'The opposite actually.  The events will be accessible and setup in the editor only.\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/42894385-8f89b43e-8a6b-11e8-809a-cae824b4e45d.png)\r\n'
2449,203443050,"b""Why? It's a Unity monobehaviour Method"""
2449,203444538,"b""Why? This has nothing to do with handling focus, only checking it it's required."""
2449,203444657,"b'I disagree, and off topic from this PR.'"
2449,203444669,"b""No, we don't and master is written this way as well. Mostly for performance reasons.\r\n\r\nalso see https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2449#discussion_r203445609"""
2449,203444726,"b""I'll be sure to update this."""
2449,203445609,"b""The keywords can't be changeable because the're not actually defined here. The list of usable keywords is defined in the SpeechInputSource and we don't want people to add keywords that aren't registered with the source."""
2449,203445857,b'Why are we documenting Unity Methods?'
2449,203455633,b'>  should these be accessible via script?\r\n\r\nThat is correct'
2455,203545776,b'I think it makes sense after our conversation during the ship room meeting.'
2455,203545884,"b""It's our _specific_ implementation, and as such belongs in the SDK."""
2455,203828851,"b'>There are very likely going to be devs that want our base implementations and nothing else from the SDK packages.\r\n\r\nI can see this being the case for a few, but at that point they might as well be writing their own implementation and can just cherry pick what they want via the SDK.'"
2466,203834499,"b""let's turn off import materials and use the standard materials we've setup."""
2466,203834614,"b""we probably don't wanna import camera's or lights either."""
2455,203880713,b'This _is_ the base class \xf0\x9f\x98\x85'
2455,203880842,b'That is correct'
2467,203883009,"b""Do you want to destroy the GameObject?\r\n\r\nWhat if there's other components ppl are using on it?"""
2455,203886532,b'So then should we also move the default profiles as well?'
2469,203919193,b'Should this be configurable?'
2469,203919557,b'Extra line'
2469,203919867,"b""Let's replace this with an into help box. It'll look a bit nicer and conform to the pattern we're using in the other profile inspectors for describing their function."""
2469,203920040,b'Is `*` valid for bullets in xml comments?'
2469,203920119,b'EdgeUtility?'
2469,203925980,"b""I don't mind updating those other ones."""
2455,204098567,"b""I'm inclined to keep the manager implenetations and the profiles together.\r\n\r\nI don't see them as mutually exclusive things."""
2475,204215878,"b""Thumb should stay. It's a separate input from these other's you added."""
2475,204215898,"b""Why not just add what we've implemented?"""
2475,204215946,b'Do we need extra braces here?\r\n(same with the switch statements in other places)'
2475,204215966,b'not the interface?'
2475,204215979,b'missing braces.'
2475,204216040,"b""Couldn't this just be a property?"""
2475,204216064,"b""You should checkout how I was doing this in the master branch.  It'll probably have some useful tidbits.\r\n\r\nEssentually you're going to have to poll the joysticks and manage them yourself."""
2475,204216137,"b""We don't need this. \r\n\r\nA button press is a button press. You're going to have to figure out another way to distinguish.\r\n\r\nWe want this enum to be atomic."""
2469,204216166,"b""Yeah if it's an instance there's no reason to cache this reference to the MR Manager."""
2475,204216697,"b'Should have an id via button press, correct? Or are the button defined by axis?'"
2475,204216705,"b'I don\'t see ""Thumb"" by itself.'"
2475,204216879,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputSources/GamePadInputSource.cs'
2475,204216886,b'and also https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Input/Scripts/InputSources/XboxControllerInputSource.cs'
2475,204217342,"b""I'm just trying to say, why not just add the ones we've implemented instead of asking users to check the release notes. \r\n\r\nOnly add a controller type if it's been implemented."""
2475,204217582,b'Will do'
2475,204217684,"b""We should probably add an enum with valid button press enums to assign.\r\n\r\nWe also need to clean up that config screen to be more user friendly. I saw your other issue that identifies this.\r\n\r\nI'll submit a PR against your branch to add the input button enum option for identifying the input button enum to map against."""
2475,204225620,b'I reverted this enum in a PR against his branch.. Nothing to see here.'
2475,204225636,"b""Not if you're referring to the WMR hand input. Then it's just a Windows Mixed Reality Controller type."""
2469,204225675,"b""Instead of using `MixedRealityManager.Instance?` let's confirm the MR Manager is active else we bail early."""
2469,204225688,b'Look at the ways we get the input system and have a property with that checks if the boundary system is cached in a similar way.'
2475,204228066,"b""No, because it's specific to the device layer."""
2469,204228094,"b""We're not using monobehaviours for our managers, so that might be a bit difficult  \xf0\x9f\x98\x85 \r\nBut there is a way to check if the system is enabled."""
2475,204243425,"b""Remove secondary input types. They're redundant."""
2475,204243851,"b""This class needs a drastic overhaul it's hard to figure out what axis mapping really goes to what."""
2475,204243892,"b""Why didn't you take the mappings I gave you?\r\n\r\nThese are all broken, no wonder it doesn't work."""
2475,204243964,"b""What happened to all the mappings I send you?\r\n\r\nThese aren't even close to what I gave you."""
2475,204243989,b'Why does this jump from 0 to 2?'
2475,204244092,"b'vive wand doesn\'t have thumbsticks.\r\n\r\nI was very explicit about what controller has what input in my PR.\r\n\r\n```\r\n+        public static readonly MixedRealityInteractionMapping[] DefaultLeftHandedInteractions =\r\n+        {\r\n+            // Controller Pose\r\n+            new MixedRealityInteractionMapping(0, ""Spatial Pointer"", AxisType.SixDof, DeviceInputType.SpatialPointer, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Trigger (7)\r\n+            // Oculus Touch Controller - Axis1D.PrimaryIndexTrigger\r\n+            // Valve Knuckles Controller - Left Controller Trigger\r\n+            new MixedRealityInteractionMapping(1, ""Trigger Position"", AxisType.SingleAxis, DeviceInputType.Trigger, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Trigger (7)\r\n+            // Oculus Touch Controller - Axis1D.PrimaryIndexTrigger\r\n+            // Valve Knuckles Controller - Left Controller Trigger\r\n+            new MixedRealityInteractionMapping(2, ""Trigger Touch"", AxisType.Digital, DeviceInputType.TriggerTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Axis1D.PrimaryIndexTrigger\r\n+            new MixedRealityInteractionMapping(3, ""Trigger Near Touch"", AxisType.Digital, DeviceInputType.TriggerNearTouch, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Trigger (7)\r\n+            // Oculus Touch Controller - Axis1D.PrimaryIndexTrigger\r\n+            // Valve Knuckles Controller - Left Controller Trigger\r\n+            new MixedRealityInteractionMapping(4, ""Trigger Press"", AxisType.Digital, DeviceInputType.TriggerPress, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Grip Button (8)\r\n+            // Oculus Touch Controller - Axis1D.PrimaryHandTrigger\r\n+            // Valve Knuckles Controller - Left Controller Grip Average\r\n+            new MixedRealityInteractionMapping(5, ""Grip Average"", AxisType.SingleAxis, DeviceInputType.TriggerPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Axis2D.PrimaryThumbstick\r\n+            new MixedRealityInteractionMapping(6, ""Thumbstick Position"", AxisType.DualAxis, DeviceInputType.ThumbStick, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.PrimaryIndexTrigger\r\n+            new MixedRealityInteractionMapping(7, ""Thumbstick Touch"", AxisType.Digital, DeviceInputType.ThumbStickTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.PrimaryIndexTrigger\r\n+            new MixedRealityInteractionMapping(8, ""Thumbstick Near Touch"", AxisType.Digital, DeviceInputType.ThumbNearTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.PrimaryThumbstick\r\n+            new MixedRealityInteractionMapping(9, ""Thumbstick Press"", AxisType.Digital, DeviceInputType.ThumbStickPress, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Trackpad (2)\r\n+            // Valve Knuckles Controller - Left Controller Trackpad\r\n+            new MixedRealityInteractionMapping(10, ""Trackpad Position"", AxisType.DualAxis, DeviceInputType.Touchpad, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Trackpad (2)\r\n+            // Valve Knuckles Controller - Left Controller Trackpad\r\n+            new MixedRealityInteractionMapping(11, ""Trackpad Touch"", AxisType.Digital, DeviceInputType.TouchpadTouch, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Trackpad (2)\r\n+            // Valve Knuckles Controller - Left Controller Trackpad\r\n+            new MixedRealityInteractionMapping(12, ""Trackpad Press"", AxisType.Digital, DeviceInputType.TouchpadPress, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Left Controller Menu Button (1)\r\n+            // Oculus Touch Controller - Button.Three Press\r\n+            // Valve Knuckles Controller - Left Controller Inner Face Button\r\n+            new MixedRealityInteractionMapping(13, ""Unity Button Id 2"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.Four Press\r\n+            // Valve Knuckles Controller - Left Controller Outer Face Button\r\n+            new MixedRealityInteractionMapping(14, ""Unity Button Id 3"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.Start Press\r\n+            new MixedRealityInteractionMapping(15, ""Unity Button Id 7"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.Three Touch\r\n+            new MixedRealityInteractionMapping(16, ""Unity Button Id 12"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.Four Touch\r\n+            new MixedRealityInteractionMapping(17, ""Unity Button Id 13"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Touch.PrimaryThumbRest Touch\r\n+            new MixedRealityInteractionMapping(18, ""Thumb Rest Touch"", AxisType.Digital, DeviceInputType.ThumbTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Touch.PrimaryThumbRest Near Touch\r\n+            new MixedRealityInteractionMapping(19, ""Thumb Rest Near Touch"", AxisType.Digital, DeviceInputType.ThumbNearTouch, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Left Controller Index Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(20, ""Index Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.IndexFinger, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Left Controller Middle Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(21, ""Middle Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.MiddleFinger, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Left Controller Ring Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(22, ""Ring Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.RingFinger, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Left Controller Pinky Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(23, ""Pinky Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.PinkyFinger, MixedRealityInputAction.None),\r\n+        };\r\n+\r\n+        public static readonly MixedRealityInteractionMapping[] DefaultRightHandedInteractions =\r\n+        {\r\n+            // Controller Pose\r\n+            new MixedRealityInteractionMapping(0, ""Spatial Pointer"", AxisType.SixDof, DeviceInputType.SpatialPointer, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Trigger (7)\r\n+            // Oculus Touch Controller - Axis1D.SecondaryIndexTrigger\r\n+            // Valve Knuckles Controller - Right Controller Trigger\r\n+            new MixedRealityInteractionMapping(1, ""Trigger Position"", AxisType.SingleAxis, DeviceInputType.Trigger, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Trigger (7)\r\n+            // Oculus Touch Controller - Axis1D.SecondaryIndexTrigger\r\n+            // Valve Knuckles Controller - Right Controller Trigger\r\n+            new MixedRealityInteractionMapping(2, ""Trigger Touch"", AxisType.Digital, DeviceInputType.TriggerTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Axis1D.SecondaryIndexTrigger\r\n+            new MixedRealityInteractionMapping(3, ""Trigger Near Touch"", AxisType.Digital, DeviceInputType.TriggerNearTouch, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Trigger (7)\r\n+            // Oculus Touch Controller - Axis1D.SecondaryIndexTrigger\r\n+            // Valve Knuckles Controller - Right Controller Trigger\r\n+            new MixedRealityInteractionMapping(4, ""Trigger Press"", AxisType.Digital, DeviceInputType.TriggerPress, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Grip Button (8)\r\n+            // Oculus Touch Controller - Axis1D.SecondaryHandTrigger\r\n+            // Valve Knuckles Controller - Right Controller Grip Average\r\n+            new MixedRealityInteractionMapping(5, ""Grip Average"", AxisType.SingleAxis, DeviceInputType.TriggerPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Axis2D.SecondaryThumbstick\r\n+            new MixedRealityInteractionMapping(6, ""Thumbstick Position"", AxisType.DualAxis, DeviceInputType.ThumbStick, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.SecondaryIndexTrigger\r\n+            new MixedRealityInteractionMapping(7, ""Thumbstick Touch"", AxisType.Digital, DeviceInputType.ThumbStickTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.SecondaryIndexTrigger\r\n+            new MixedRealityInteractionMapping(8, ""Thumbstick Near Touch"", AxisType.Digital, DeviceInputType.ThumbNearTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.SecondaryThumbstick\r\n+            new MixedRealityInteractionMapping(9, ""Thumbstick Press"", AxisType.Digital, DeviceInputType.ThumbStickPress, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Trackpad (2)\r\n+            // Valve Knuckles Controller - Right Controller Trackpad\r\n+            new MixedRealityInteractionMapping(10, ""Trackpad Position"", AxisType.DualAxis, DeviceInputType.Touchpad, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Trackpad (2)\r\n+            // Valve Knuckles Controller - Right Controller Trackpad\r\n+            new MixedRealityInteractionMapping(11, ""Trackpad Touch"", AxisType.Digital, DeviceInputType.TouchpadTouch, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Trackpad (2)\r\n+            // Valve Knuckles Controller - Right Controller Trackpad\r\n+            new MixedRealityInteractionMapping(12, ""Trackpad Press"", AxisType.Digital, DeviceInputType.TouchpadPress, MixedRealityInputAction.None),\r\n+            // HTC Vive Controller - Right Controller Menu Button (1)\r\n+            // Oculus Remote - Button.One Press\r\n+            // Oculus Touch Controller - Button.One Press\r\n+            // Valve Knuckles Controller - Right Controller Inner Face Button\r\n+            new MixedRealityInteractionMapping(13, ""Unity Button Id 0"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Remote - Button.Two Press\r\n+            // Oculus Touch Controller - Button.Two Press\r\n+            // Valve Knuckles Controller - Right Controller Outer Face Button\r\n+            new MixedRealityInteractionMapping(14, ""Unity Button Id 1"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.One Touch\r\n+            new MixedRealityInteractionMapping(15, ""Unity Button Id 10"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Button.Two Touch\r\n+            new MixedRealityInteractionMapping(16, ""Unity Button Id 11"", AxisType.Digital, DeviceInputType.ButtonPress, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Touch.SecondaryThumbRest Touch\r\n+            new MixedRealityInteractionMapping(17, ""Thumb Rest Touch"", AxisType.Digital, DeviceInputType.ThumbTouch, MixedRealityInputAction.None),\r\n+            // Oculus Touch Controller - Touch.SecondaryThumbRest Near Touch\r\n+            new MixedRealityInteractionMapping(18, ""Thumb Rest Near Touch"", AxisType.Digital, DeviceInputType.ThumbNearTouch, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Right Controller Index Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(19, ""Index Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.IndexFinger, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Right Controller Middle Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(20, ""Middle Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.MiddleFinger, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Right Controller Ring Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(21, ""Ring Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.RingFinger, MixedRealityInputAction.None),\r\n+            // Valve Knuckles Controller - Right Controller Pinky Finger Cap Sensor\r\n+            new MixedRealityInteractionMapping(22, ""Pinky Finger Cap Sensor"", AxisType.SingleAxis, DeviceInputType.PinkyFinger, MixedRealityInputAction.None),\r\n+        };\r\n```'"
2475,204244163,"b""I didn't spend 4 hours pouring over the input mappings just for fun."""
2475,204266834,"b""Should we make sure the controller isn't being used/updated while we update the mappings?"""
2475,204267127,"b""I do like this, it's much cleaner!"""
2475,204267776,"b""These aren't always digital.  Why did you add the comments but not summary tags?"""
2475,204269168,b'We may want to break this up into Trackpad and Thumbstick only.  Else the device input type will always be wrong for one or the other. (Which is why I had them split up in my PR)'
2475,204269258,b'Touchpad != Thumbstick'
2475,204269313,b'Should we do the same for grip too?'
2475,204269343,b'How are we getting the correct pointer and grip data for WMR in open vr?'
2475,204490933,"b""It's not always digital\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/43092977-aa57dbb4-8e63-11e8-9982-8878f374cccf.png)\r\n"""
2475,204492552,b'But we could fake it by adding a grip position to the controller and just off setting the grip by the controller position.  This might actually be beneficial.'
2475,204492722,"b""A device input type is not the same as another. Sure it's dual axis, but a trackpad is not a thumbstick."""
2475,204493005,b'Seeing as this is a public method we might see ppl try to set it at runtime which might cause issues.'
2475,204507380,"b""I agree, we don't need to separate the clicker and hands out.  I like just `MixedRealityController` myself."""
2475,204507492,b'https://github.com/SimonDarksideJ/MixedRealityToolkit-Unity/pull/16\r\n'
2475,204535917,"b""What about controllers that use Axis1 and aren't part of OpenVR?"""
2475,204537730,b'Why are these 0.1 but the others 0.001?'
2475,204564815,"b""Shouldn't we keep them all the same, then add a sensitivity modifier after we read the value?\r\nGives users the ability to customize the input a bit more."""
2475,204564996,b'We could always adjust the tolerance after we read the input.'
2475,204565136,b'I think we only need to define a single set of axes for each.'
2475,204565313,b'Again the `DeviceInputType.Touchpad != DeviceInputType.Thumbstick`'
2475,204565485,b'Menu is just another button.'
2475,204565907,b'Although with OpenVR specifically this will be a bit different bc of the button and axes mapping.'
2475,204569075,b'Should we just move the recommended axis type to the summary?'
2455,204816765,"b""Yes, it's because it's called in the constructor and because it's virtual can cause issues."""
2455,204817017,b'https://www.jetbrains.com/help/resharper/2018.1/VirtualMemberCallInConstructor.html'
2469,204831744,b'I think nullable makes sense here.'
2469,204835728,"b""This line should go away if we're following the pattern above."""
2469,204835993,b'these are short enough to put on one line.'
2455,204888830,"b""Isn't this the same in master?\r\nBut yea I agree we should be able to get as well."""
2469,204910452,b'We can get rid of this once the cache pattern is established.'
2469,204911480,"b""we're not using this"""
2469,204911636,b'Do we need documentation for this?'
2469,204911875,"b""these aren't that long, could we put them on a single line?"""
2469,204912209,b'` width * 0.5f`?'
2469,204912511,"b""If we're setting shouldn't that also mean we're passing a parameter?"""
2469,204912660,b'These could be a single line.'
2469,204912943,"b""Let's bail and throw an error if the manager is null instead."""
2469,204925245,"b'Ah I see, Just curious. That makes sense then.'"
2469,204927588,b'formatting seems off here.'
2469,204929854,"b""Why do we need to cast to a bool if the return type is a bool?\r\n\r\nI'm also seeing a possible invalid operation exception"""
2469,204930007,b'missing boundaryType xml parameter description '
2469,204931463,"b""Let's check if the manager is null first then get the bounds.\r\n\r\nAlso, we probably don't have to initialize our local variables seeing as the values assigned are never used.\r\n\r\n```\r\nVector2 center;\r\nfloat angle;\r\nfloat width;\r\nfloat height;\r\n\r\nif (BoundaryManager == null || !BoundaryManager.TryGetRectangularBoundsParams(out center, out angle, out width, out height))\r\n{\r\n    // No rectangular bounds, therefore do not render the quad.\r\n    return;\r\n}\r\n```"""
2469,204931924,"b""wouldn't we want something like this in the SDK?"""
2469,204932086,"b"" `marker.transform.localScale = Vector3.one * 0.1f;`?\r\n\r\nIs there any particular reason we're using 0.1f?"""
2469,204932297,b'Why not just make boundaryType = TrackedArea by default instead of having this overload?'
2469,204932757,b'geoometry -> geometry'
2469,204932791,b'single line?'
2469,204933074,b'playspace -> play space?'
2469,204933877,"b'Getting some warnings about `Scale`, `BoundaryHeight`, and `EnablePlatformBoundaryRendering` are all set in the constructor and their values are ignored during initialization.'"
2469,204934183,b'could this be const?'
2469,204934263,"b""What's our naming conventions for private const values?"""
2469,204934334,b'`public bool IsValid => EdgeUtilities.IsValidPoint(Center);`?'
2469,204934461,b'Why not just make `FindInscribedRectangle` public?'
2469,204934618,b'reproducable -> reproducible'
2469,204934871,b'extra line'
2469,204935237,"b""couldn't we just declare this at the class scope so we don't allocate every time we look for  a new rectangle?"""
2469,204935321,b'why set to 0 if the values are just going to get overwritten?'
2469,204935594,b'dimensiopnal -> dimensional'
2469,204935716,b'`if (angleRadians.Equals(0f))` for floating point precision '
2469,204935861,b'collsions -> collisions'
2469,204936007,"b""Could be declared in the class scope so we don't have to allocate this every time we call this method."""
2469,204936154,b'aspctRatio -> aspectRatio'
2469,204936454,"b""why wrap this if we don't wrap the summary tags?"""
2469,204936805,b'missing a `<` on /returns'
2469,204936898,"b""that's a lot of parenthesis """
2469,204937112,"b""for loop? (might see perf improvements, but I don't think mobile platforms have bounds)"""
2469,204937441,"b'depending on how often we get the intersection point, we may see a perf increase if we use a cached vector2 to do the calc.'"
2469,204937748,"b'example: \r\n```\r\nprivate static Vector2 calcVector = Vector2.zero;\r\n\r\n/// <summary>\r\n/// Returns the point at which two <see cref=""Edge""/> values intersect.\r\n/// </summary>\r\n/// <param name=""edgeA"">The first edge</param>\r\n/// <param name=""edgeB"">The second edge</param>\r\n/// <returns>\r\n/// A Vector2 representing the point at which the two edges intersect, InscribedRectangleDescription.InvalidPoint otherwise.\r\n/// </returns>\r\npublic static Vector2 GetIntersectionPoint(Edge edgeA, Edge edgeB)\r\n{\r\n    float sA_x = edgeA.PointB.x - edgeA.PointA.x;\r\n    float sA_y = edgeA.PointB.y - edgeA.PointA.y;\r\n    float sB_x = edgeB.PointB.x - edgeB.PointA.x;\r\n    float sB_y = edgeB.PointB.y - edgeB.PointA.y;\r\n\r\n    float s = (-sA_y * (edgeA.PointA.x - edgeB.PointA.x) + sA_x * (edgeA.PointA.y - edgeB.PointA.y)) / (-sB_x * sA_y + sA_x * sB_y);\r\n    float t = (sB_x * (edgeA.PointA.y - edgeB.PointA.y) - sB_y * (edgeA.PointA.x - edgeB.PointA.x)) / (-sB_x * sA_y + sA_x * sB_y);\r\n\r\n\r\n    if ((s >= 0) && (s <= 1) && (t >= 0) && (t <= 1))\r\n    {\r\n        // Collision detected\r\n        calcVector.x = edgeA.PointA.x + (t * sA_x);\r\n        calcVector.y = edgeA.PointA.y + (t * sA_y);\r\n        return calcVector;\r\n    }\r\n\r\n    return InvalidPoint;\r\n}\r\n```'"
2469,204938324,b'Does casting to double give you better precision here even though the multiplied values are float types?'
2469,204939277,"b""The values are overwritten by the constructor. So it's redundant to set them in the property initializer."""
2469,204939948,b'Resharper ftw'
2469,204940182,b'Well the method above it is the same. So we can probably just remove the duplicate'
2469,204940370,"b""Let's get rid of the redundant public method and just rename the private one to match."""
2484,205159573,"b""What's a render scene?"""
2488,205160396,b'This seems to be more than just documentation changes.'
2488,205160599,"b""We don't normally document known unity messages and methods"""
2488,205160746,b'seems rather redundant'
2488,205161247,"b""Usually we use xml summary tags for documentation. Here's a good example:\r\n\r\n```\r\n/// <summary>\r\n/// My Documentation will go here.\r\n/// </summary>\r\n```\r\nThis allows others to read the description of your property in the tooltip"""
2488,205161420,b'These changes should be reverted to prevent backwards capability breaking for projects that target 5.6'
2488,205161535,b'These kinds of changes are good.'
2488,205161604,b'revert.'
2488,205161908,"b""unless someone changed it to be blue. This kind of speculative assumption of what the `FocusedColor` may be shouldn't be documented."""
2488,205162016,b'redundant'
2488,205162229,"b'`ObjectToScale.transform.localScale = new Vector3(0, 0, 0);` -> ` ObjectToScale.transform.localScale = Vector3.zero`'"
2488,205162456,b'What if the dev decided to use spacebar?'
2487,205164747,b'nit missing private access modifier.'
2487,205164828,b'initialize with null'
2488,205201983,b'why past tense?'
2488,205221934,"b""It's for unity's new package manager. I suggest we remove this file from the PR."""
2480,205223628,b'not used?'
2480,205226979,"b""We should be checking the value here to make sure it's within our range above.\r\n\r\n```\r\n/// <summary>\r\n/// The division of steps this object can tether to. Higher the number, the more snapple steps.\r\n/// </summary>\r\npublic int TetherAngleSteps\r\n{\r\n    get { return tetherAngleSteps; }\r\n    set\r\n    {\r\n        if (value < 2)\r\n        {\r\n            tetherAngleSteps = 2;\r\n        }\r\n        else if (value > 24)\r\n        {\r\n            tetherAngleSteps = 24;\r\n        }\r\n        else\r\n        {\r\n            tetherAngleSteps = value;\r\n        }\r\n    }\r\n}\r\n```"""
2480,205227134,b'do we really need a region for a single enum?'
2480,205227778,"b""This description doesn't really fix anymore."""
2490,205320336,"b""Unfortunately we have to set the property height here only per Unity.\r\n\r\nYes, it's space for the property name, position, and rotation lines."""
2490,205320652,"b""I'm open to moving the 3f to a local field and replacing it in the OnGUI below if that's what you're referring to."""
2490,205471736,"b""There's a very a very specific reason _why_ I didn't do this."""
2490,205472506,"b""Go ahead and update your version to the Euler and then start changing values in the inspector. You'll find a nasty surprise."""
2492,205517339,"b""Isn't this specific to Windows Mixed Reality?"""
2492,205517485,b'These are fields not properties...'
2492,205517658,"b""Wouldn't this be a bit cleaner in an if-else?"""
2492,205517747,b'Or do you plan on handling other handedness types?'
2492,205518150,"b""`#region Monobehaviouir Implementation`? (like we've been dong in other classes)"""
2492,205518374,"b""I've also been breaking up the interfaces by implementation as well.\r\n\r\nFor example:\r\n`#region IMixedRealityInputHandler Implementation`"""
2492,205518693,"b""If we're not going to make these methods virtual for inherited classes to override, then let's use the explicit interface declaration.\r\n\r\nFor Example:\r\n```\r\nvoid IMixedRealityInputHandler.OnPositionChanged(InputEventData<Vector2> eventData)\r\n```"""
2492,205518976,"b""Functions -> Methods?\r\n\r\n(A function usually denotes that there's always a return value)"""
2492,205519110,b'extra line'
2492,205519294,"b""Why protected if you're not making it virtual?\r\n\r\nIf no virtual then we can just make it private."""
2492,205519581,b'Turn off all the material exports for every one of these fbx models please.'
2492,205519835,"b""What's with the name of these materials?"""
2492,205520098,b'The name of these controllers is a bit strange as well.'
2492,205520701,"b""Wouldn't we want people to be able to update the pose offset at runtime?"""
2492,205520879,b'property should be below the field. please sort accordingly.'
2492,205535009,"b""We don't have to do that. I already changed the [Pose Property drawer](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2490) to use Euler."""
2492,205550722,"b'Dang, these names suck.'"
2492,205551316,"b'Oh, nvm I thought this was a monobehaviour. Nvm'"
2496,205653916,"b""Take a look at Simon's PR."""
2496,205654073,"b""Pretty sure the default (even in master) is left. What's the point of attaching to a controller of it doesn't have a hand to attach to?"""
2496,205654077,"b""Pretty sure the default (even in master) is left. What's the point of attaching to a controller of it doesn't have a hand to attach to?"""
2497,205793224,"b""Shouldn't this now be calling the new method with the interface parameter?"""
2497,205793496,"b""Let's keep the old method and use it to call the method with the interface implementation and mark the old one obsolete."""
2496,205793728,"b'I still need these changes for the pointer viz, which is why I decided to do it separately.'"
2496,205801314,b'Yes'
2496,205819666,"b""I purposefully kept the GUID the same, but I can regenerate it if you'd like."""
2496,205822715,b'Done'
2496,205829755,"b""> Here, they're set active after SourceDetected, but that misses the case where a controller was detected before the prefab is instantiated.\r\n\r\nThat's not true. In OnSourcePoseChanged we set the controller reference if it wasn't set already."""
2496,205830632,b'agreed.'
2496,205830966,"b'Regenerating the guids will help in your ""re-port"". (Although, I think you should address that in the controller viz in #2492)'"
2496,205832022,"b""This is only for the source's position. Does not give grip or pointer pose data.\r\n\r\nYou have to implement the `IMixedRealityInputPoseHandler` to get those."""
2496,205833342,"b'> MixedRealityInputPoseHandler didn\'t seem to distinguish between grip and pointer.\r\n\r\nSure it does, that\'s what the InputActions are for. You compare the action id to the one you setup via the  event data.\r\n\r\n> But...where is the ""source position"" centered?\r\n\r\nThat\'s up to the controller implementation.'"
2496,205854345,b'Then get the data directly from the controller.'
2502,205906227,"b""Don't need a summary tag on the private field. Just a public property if one exists."""
2502,205906329,b'for loop change?'
2502,205906508,"b""let's continue to reference the local field."""
2502,205906639,b'this creates a new copy of that material. Are we disposing that material correctly to avoid the memory leak?'
2502,205906840,"b""This may not work as expected because of the custom assembly definitions we're using."""
2502,205906916,"b'Nvm, I see you added one. Great!'"
2502,205907048,"b""We've been sticking to the `Inspectors` terminology throughout the rest of the MRTK. Do you mind doing the same?"""
2510,205954944,"b""maybe a bullet point instead?  It doesn't seem to fit right with the numbers, imo"""
2510,205954947,b'Same thing here.'
2511,205954968,b'fields should be private'
2511,205954969,b'missing summary'
2513,205974485,"b""This is just an initializer. I'm pretty sure the color is set below, but I'll double check."""
2513,205974616,b'No'
2513,205974730,"b""Not sure what you mean by empty spaces. They're there intentionally to make it more organized and easier to read."""
2513,205974934,"b""I don't understand.  Besides this check only happens on enable, so it doesn't have that much overhead."""
2513,205974972,"b""Pretty specific, as it only pertains to the line rotation. (Unless that's what you're requesting is to rename it.)"""
2511,205979589,"b""Is there a way to also raise an event through the MRTK's event system, or event as an Action?"""
2513,205982207,"b'It does what it says, but sure.'"
2513,205982227,"b""Why? It's a unity override method. I thought we were not documenting unity types/methods."""
2513,205982234,b'Does what it says.'
2513,205982249,b'Literally none of our other inspectors have summary tags.'
2513,205982321,"b'Good question, seeing as this already exists in master...'"
2513,205982423,b'Why? we only use this value in one place.'
2513,205982439,"b""These points are not rendered in the inspector, as such they don't need a tooltip."""
2513,205982452,"b""wasn't in the original, but yeah probably."""
2513,205982465,"b""Not all serialized fields are shown in the inspector, and as such, doesn't need a tooltip."""
2513,205982478,"b""These aren't rendered the inspector the traditional way, and tooltips do not apply."""
2513,205983799,"b""After looking into this, a range wouldn't be helpful. We don't know how large users may make this width, but we do make sure that if it's under 0, we set it to the current width /height, so there's that.\r\n\r\n~~I suppose I could make another custom attribute to make sure it stays above 0.~~\r\n\r\n[edit]\r\nI actually already do this in the inspector code."""
2513,205984687,"b""I don't think we should add a range there, in case the user wants to put in a specific amount."""
2513,205984776,"b'The values are updated correctly in the update loop. The initial colors are just to make sure the system is setup correctly. This and all the other line renderers are executed in edit mode, so the colors, and other values are updated as you changes them.'"
2513,205985169,"b'idk why either, but it works. \xf0\x9f\x98\x85 This is taken pretty much as is from master.'"
2497,206048586,"b""This change isn't relevant to custom cursors. Please, either make a new PR and revert this change, or add it to the description."""
2497,206186646,"b'Oh, I see, you merged from a different branch into this one?'"
2518,206188354,b'should be protected virtual.'
2518,206188495,b'also protected.'
2497,206195832,"b""If so, then this change shouldn't be showing up. No worries. Could you also make the updates requested in #2518? That way you guys don't end up with conflicts?  Thanks."""
2497,206208430,b'Thanks.'
2519,206224114,b'Still trying to figure that out.'
2513,206233760,b'Would 42 be better?'
2519,206286189,"b""If  we didn't have an active profile, how would we ever have created a controller?"""
2519,206286440,"b""I don't think we'll need to call `HasActiveProfile` in classes we know is created by a profile"""
2513,206293766,"b""I very much disagree. The quality different in TMP vs default unity text in VR/AR is quite astonishing. Using SDF should be the industry standard.\r\n\r\nSeeing as TMP is supposed to replace the old text renderers, (It's been depreciated) and TMP is a default asset with Unity now, and its ease to put into projects via the package manager makes it ideal.\r\n\r\nI'm not suggesting we put it in the SDK or Core components, but we should def be using it for our demo, tutorial, and example scenes."""
2513,206299425,"b""It's owned by Unity. Not sure if a license is required if you're using the editor to begin with."""
2513,206299625,"b'> Are we checking it into the examples tree? \r\n\r\nAs stated in https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2513#issuecomment-408679429, I put them in the default download location that the package manager prompts you to place them.'"
2513,206301353,"b'[A relevant forum thread](https://forum.unity.com/threads/text-mesh-pro-integrated-into-unity-core.518414/). \r\n\r\n> At some point the old Text component and Text Mesh will be deprecated but that will come after the new text system / components are available.\r\n\r\n[Here\'s another](https://forum.unity.com/threads/textmesh-pro-unity-2018-1.511748/).\r\n\r\n>As per the title and assuming all goes well, a new version of TextMesh Pro will be included by default in Unity 2018.1.\r\n\r\n[Later on in the thread](https://forum.unity.com/threads/textmesh-pro-unity-2018-1.511748/page-5#post-3568319) it\'s confirmed that 2018.2 has the TMP assets by default.\r\n\r\n>With Unity 2018.2, the TextMesh Pro UPM package is included by default. However, the TMP Essential Resources are not imported / added to a user project until first use and consent of the user. Alternatively, a user can manually import the TMP Essential Resources via the ""Window - TextMeshPro - Import TMP Essential Resources"" menu.'"
2513,206302957,"b"">I am concerned with the license to redist the package.\r\n\r\nThis is a good point. I suppose it doesn't hurt to remove the TMP assets from the project itself and let users download on their own when prompted. Instead I'll just make the folder ignored in git. Sound good?"""
2513,206308268,"b""> In 2018.2, we can solve this better by adding it as a dependent package\r\n\r\nIt's already in the editor in 2018.2, and installed. So no worries there."""
2513,206353107,"b'Okay, I\'ll wait for your PR with the suggested summary changes.\r\n\r\n(I hope you realize, that if I do write them it\'ll be ""Inspector for <type>"" and that\'s literally it.)'"
2513,206354056,b'This has an unbounded max range and adding a range slider would not be ideal.'
2513,206355918,b'I added a bool that checks the values for you.'
2521,206524622,b'More than just customizing camera settings.'
2525,206574313,b'virtual?'
2502,206637310,"b""let's revert it back to the for loop for perf"""
2513,206640011,b'Cause I was testing on HoloLens it might have changed the quality to the lowest.'
2519,206643941,"b""Cause I didn't add it yet.  (Must have been left over when I ported it over) I'll remove it."""
2519,206644191,"b'Well right now `Any` and `Both` are `3`, which is a problem'"
2519,206653515,b'yes'
2519,206654378,"b""I think the event system is added to the UIRaycastCamera that is found under the camera.\r\n\r\nI'll update the debug log to reflect that fact."""
2519,206655306,"b""Mainly this is so we don't have to call `FindObjectOfType<T>` anywhere. We keep track of the event system and input module."""
2519,206655650,"b""huh, I'm getting a type warning in my spell checker with `throughout`"""
2519,206658033,"b""> Where does it get called while the editor isn't playing? \r\n\r\nAny time you access the instance. (Which is the intended behavior)"""
2502,206659115,"b'Yes mainly for allocations, but even on platforms like HoloLens, the perf difference is pretty noticeable in certain hot code areas.'"
2519,206666266,"b""Then what's the point of using the bit flags if we assign both as a discrete value?"""
2519,206668114,b'I get it now. Sorry \xf0\x9f\x98\x85 '
2519,206670473,"b""I've already updated the comments to reflect the change."""
2519,206670651,"b""I'll be sure to update which `GameObject` we're checking against as well."""
2519,206674293,b'We should update them all then. Cause the boundary might be the only done doing it correctly'
2519,206675175,b'Oh we only check the type for two'
2519,206675341,b'How does that apply here?'
2502,206681756,b'Any time you call `renderer.material` you generate another material. You should just be able to loop the list and destroy them as is.'
2519,206682324,"b""Depends on if the property does anything extra when accessing it. I can revert if you'd like."""
2519,206682423,b'@SimonDarksideJ ?'
2502,206697125,"b""> then it is smart enough to realize an instance has already been created and returns that for later calls\r\n\r\nYou'd think that, but it's actually the worst memory leak in Unity.  It def creates a new instance every time you call it.\r\n\r\nhttps://docs.unity3d.com/ScriptReference/Renderer-material.html\r\n\r\n>Note:\r\nThis function automatically instantiates the materials and makes them unique to this renderer. **It is your responsibility to destroy the materials when the game object is being destroyed**. Resources.UnloadUnusedAssets also destroys the materials but it is usually only called when loading a new level.\r\n\r\n[Use `renderer. GetMaterials(List<Material> m)` instead](https://docs.unity3d.com/ScriptReference/Renderer.GetMaterials.html)"""
2502,206708381,"b'Indeed, the cloned instance still needs to be cleaned up as well.'"
2502,206714084,"b""Haha maybe they changed that, but I'm just being paranoid. """
2502,206714215,b'Meta files might have gotten messed up. '
2502,206715910,"b""> are you see a different behavior?\r\n\r\nNope I'm seeing the same. """
2502,206716181,b'Do you mind if we co-locate the property and field together?\r\n\r\nWe also might want to copy the tooltip text into a summary tag for the renderers as well.'
2519,206719244,"b""Isn't that what it is?"""
2502,207055282,"b""@Cameron-Micka I hadn't noticed we changed this. Any chance we could put it back to multipass?\r\n\r\nThe Single Pass Instanced is still in preview"""
2521,207056437,b'What does this do?'
2521,207056648,b'I take it that this removes the TMPro Description panel I put in?'
2521,207057070,b'What did you think about the text resolution with the SDF?'
2502,207065365,"b""I'm getting a slight stutter every few seconds with single pass enabled."""
2533,207091089,"b""No, it means we can only have a single controller pointer component on a single `GameObject`.\r\n\r\nWe can have as many pointers for as many hands, controllers, fingers, and toes as we'd like."""
2533,207091368,"b""If I add summary tags to the editor classes, it'll be redundant.\r\nI'd essentially be writing out the name of the class.\r\n\r\n```\r\n<summary>\r\nBaseControllerPointer Inspector\r\n<summary>\r\n```"""
2533,207091459,b'Good question.'
2533,207091854,b'I made it protected for the time being. If anyone really wanted to know they could get the controller reference below and query its tracked state.'
2533,207281879,b'I should probably also check if the controller supports pointing here.'
2533,207282159,"b""I suppose we're assuming that all Open VR Controllers support pointing?"""
2502,207286518,"b'Yup, I had requested @keveleigh to change it back. Thanks \xf0\x9f\x91\x8d '"
2533,207312679,"b""@SimonDarksideJ would know, but he's on holiday"""
2538,207313709,"b""Shouldn't we be updating this on the main dev branch since it's not related to the example scene?"""
2538,207316055,b'Thanks \xf0\x9f\x98\x84 '
2533,207330098,b'I should be checking if the source id is the same here.'
2533,207357491,b'I tried that but still got a null ref on the MR Manager so I added it back.'
2533,207357774,"b'Whoops, yeah this is a bad change. Sorry.'"
2533,207357930,b'Will do. I thought I was being clever only needing to get the type ahead of time.'
2533,207358166,"b'Bc any controller would be an open VR controller, not just open VR controller. \r\n\r\nI tried to get Xbox controller setup, and it came out as open vr. '"
2533,207358228,"b""Possibly I'll see what I can do."""
2542,207358763,b'`PlayAreaVisualizer`?'
2533,207365078,"b""Doesn't look like we can embed this into the input source request. There's too many controller specific things that could end up happening while we register our pointers. \\\r\n\r\nFirst being that we need to know the type of controller.\r\n\r\nSecond, in WMR we can query if the input source pose supports pointing or not.\r\n\r\nWe would also need to know the handedness of the controller and check against the list of pointers in our pointer profile that match the handedness of our controllers.\r\n\r\nWe could make all those parameters that the input source request makes, but then I think that breaks the OOP nature of the setup, and makes the request do more than it's responsible for.\r\n\r\nAlso, we need to make the pointers before we create the input source, bc we need to pass that list of pointers when we request a new input source, then after we have our input source, we need to assign the controller to each pointer"""
2533,207365933,"b""So the nice thing is that pointers can choose to get their input data from the device's pose, or listen to input actions from that device, which makes choosing the source easy."""
2533,207372143,"b""It doesn't break them, but [just warns that they're unsupported](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2533/files#r207373876)."""
2533,207372284,"b""I think it's bc the MR Manager is in the process of initializing and this get's raised from a different thread in the editor."""
2533,207372394,"b""I figured something out, I think you'll like the result."""
2533,207417151,"b""That's because it's not in the list, and appropriately shows that it's unsupported"""
2533,207418452,"b""There wasn't existing support for it."""
2533,207418653,"b""It's not in the list of devices, so it wasn't supported _correctly_"""
2533,207419387,"b'Agreed, but then how do we get around fact that even non open VR controllers get added?'"
2533,207419497,"b""And it's not like we're hard coding anything, but adding the name of the controller to the list"""
2533,207420119,"b""I've got an idea about how to solve this.\r\n\r\nIn the controller configuration we can add a text field for people to put the name of the controller whenever they set it to generic, and update this switch to fall back to generic when a match is found. But we should definitely keep this line as none."""
2533,207421584,"b""> Yes, a hard-coded list of strings\r\n\r\nIt doesn't have to be."""
2533,207422944,"b""> In the controller configuration we can add a text field for people to put the name of the controller whenever they set it to generic, and update this switch to fall back to generic when a match is found. But we should definitely keep this line as none.\r\n\r\nIn short, from the user's controller configuration file."""
2533,207556215,b'@keveleigh I went a head and reverted this for now. We can pick it back up in beta.'
2542,207562575,b'Why do we need to keep a reference to this?  It should only ever be read from the Active Profile.'
2542,207562860,"b""Shouldn't this component be added to the GameObject we want to visualize? (or do we do that below?)"""
2542,207563136,b'`is or will be`?'
2542,207563220,b'`is (should be)`?'
2542,207563421,"b""Let's lose the profile reference and make sure we're always reading the current profile from the Config"""
2542,207580574,b'z-fighting with what?'
2542,207580624,b'Should we make this configurable?'
2542,207580863,"b""Shouldn't the Boundary System be keeping track of this?"""
2542,207590215,"b""I'd even argue that components should never really be reading from the profile, as it should generally be consumed by managers that are implementing them.\r\n\r\nThe Managers should be passing this information to any components that need the required information. That way we don't have to query the MR Manager at all but to get the active manager for our system."""
2542,207600018,"b'yeah, we should let the boundary manager handle this. '"
2533,207643874,"b""It's still there. We set it when we create the pointer now."""
2533,207644019,"b'No, this change fixes a bug.'"
2533,207646345,"b'Haha, I think he meant after we call GetOrAddCotroller we usually update it too.\r\n\r\nWe were running into issues, and this fixes it.\r\nEssentially we were updating the controller before we raised the source found.\r\n\r\nShouldn\'t be raising input changes for sources that aren\'t ""Found"" yet.'"
2533,207646720,"b""Because we need to set the first point, and we weren't"""
2533,207647047,"b""Oh I see, this should be setting the start point. haha. (why didn't you just say that?) \xf0\x9f\x98\x86 """
2533,207647319,b'Yes. after we get the controller.'
2533,207647646,b'\xf0\x9f\x98\x86 Wow all I saw was the link'
2533,207648147,b'Fixed'
2533,207649156,"b""Let me add an update there and test it out to see if we're still getting that race condition."""
2533,207649437,"b""Doesn't seem to have the race condition, so I added the update after raise detected"""
2533,207649613,b'I resolved them.'
2533,207649752,b'Besides this parameter was not being used.'
2533,207650579,"b""I wish we could but there's things that need to happen in a specific order.\r\n\r\n1. The pointers need to know the controller type (hence the first switch)\r\n2. The controllers need to request a new Input Source using the generated pointer array\r\n3. We need to actually create the concrete controller instance (hence the second switch)\r\n4. Then call setup config on the new controller\r\n5. Then set the new controller on each of the new pointers"""
2533,207652168,b'Unless you know of a way to create a concrete instance from a type reference'
2533,207654819,"b'Yup, that was the second Update we were talking about that gets called.'"
2533,207654983,"b""Getting the controller shouldn't update it.\r\n\r\nIt should be a discrete step"""
2533,207673533,"b""Good question. I'll try it out."""
2533,207676595,b'@Jarodshow how would you pass the constructor parameters in this case?'
2542,207698683,b'approximate?'
2542,207698715,b'Please change this to use `RenderProfile(boundaryVisualizationProfile);`'
2542,207712901,"b'These operators do not use the custom equality operators declared on `UnityEngine.Object`, and so bypass a check to see if the underlying native Unity engine object has been destroyed. An explicit null comparison is preferred in order to clarify intent.'"
2542,207712912,"b'These operators do not use the custom equality operators declared on `UnityEngine.Object`, and so bypass a check to see if the underlying native Unity engine object has been destroyed. An explicit null comparison is preferred in order to clarify intent.'"
2542,207712935,"b""since we've declaired the using at the top do we need ` UnityEngine.Experimental.XR` here?"""
2542,207712971,"b'could we add this ""fudge"" factor to the profile settings?'"
2542,207712985,b'not sure this comment is necessary '
2542,207713016,b'could we also comment out the xml?'
2542,207713039,b'we need to also check if the MR Manger is valid here with\r\n\r\n```\r\n            if (!CheckMixedRealityManager())\r\n            {\r\n                return;\r\n            }\r\n```'
2542,207713062,b'use `RenderProfile(boundaryVisualizationProfile);`'
2542,207713098,b'Why create a gui content for the auto generated content that the inspector will render by default?'
2542,207713107,"b""let's comment out the xml here too please :)"""
2542,207713276,"b'Just trying to get the ""majick"" numbers out \xf0\x9f\x98\x89 '"
2550,207883107,"b""Let's keep the null check here.\r\n\r\nEven if unity throws the assert, it'll still crash unfortunately :/"""
2550,207972531,"b""I'll pull and check now."""
2550,207979223,"b'You can simplify this whole line down to:\r\n```\r\nvar detectedController = Activator.CreateInstance(controllerType, TrackingState.NotTracked, controllingHand, inputSource, null) as GenericOpenVRController;\r\n```'"
2550,207980027,b'The array declaration is also redundant.'
2545,208020592,b'We are dynamically creating the child. I just added the warning here just in case something goes wrong.'
2545,208041670,b'It is also used with thumbstick rotation. \r\n\r\nI copied as is. I can update.'
2545,208041835,"b""In our specific implementation, we're handling the complete event ourselves from within the teleport manager. Other implementations may choose to do it in other ways."""
2545,208041940,"b""I actually need to remove this. It's currently not being used."""
2545,208042093,"b""yes, but they're expensive, and a simple bit flag is enough. I simply copied from master for this one and left as is."""
2545,208042215,b'Should we?  I just did this one for the teleporter cursor'
2545,208042333,"b""yes, I'm not sure how that got passed me. lol"""
2545,208042931,"b""Scratch that. It might be used in the future. It's defined as part of the interface, and I'd rather keep it for now."""
2545,208043027,"b""I don't understand."""
2545,208043503,b'Probably a task we can log for later.'
2545,208043868,"b""I don't think I understand, but okay, let's do that."""
2545,208044217,"b""> also, there isn't a similar check in RaiseTeleportRequest or the other related events\r\n\r\nThat's because it's expected that they come from Teleport Pointers."""
2545,208044660,"b'In our specific implementation of they system, the teleport manager is the one telling everyone listening that the teleport has completed. (line 260)\r\n\r\nOther people using different implementations may choose to do it differently.\r\n\r\nWe have to satisfy the interface implementation of `RaiseTeleportCompleted`, and so too do other implementations.'"
2545,208045001,"b""I just wanted to use a standard asset so we wouldn't make too many one off materials like this."""
2545,208045176,b'private field before property. Got it.'
2545,208047473,"b""Nvm, couldn't find it in master. I think it was from HUX actually. I can't remember exactly where I got it. It was in my multi pointer refactor, that's all I know \xf0\x9f\x98\x85 """
2545,208053189,"b'> just in case they change in a future version of Unity\r\n\r\nI highly doubt that, but sure.'"
2545,208053252,b'> layer values (by name) at startup\r\n\r\nSounds expensive.'
2542,208055137,"b""That's possible to add into the system's config profile"""
2545,208077229,"b""I'm not keen on transforming it over and over again.\r\n\r\nLet's annotate the property letting people know that it's local position, and or add a local position property to access it."""
2545,208077459,"b""> Not everything that needs this info is parented under the camera parent\r\n\r\nCan you give a specific example we'd be using in beta?"""
2545,208309238,b'I think you guys are being a bit overboard here.\r\n\r\nThe inspector for this is user friendly and shows all the layers in the project in the dropdown.\r\n![image](https://user-images.githubusercontent.com/13334553/43790893-d0426fe4-9a28-11e8-9355-acebef0e241f.png)\r\n'
2545,208309596,"b""The only thing I've done here is set it to the default and ignore raycast layers which will most likely never change (nor have they in 10 years that unity has used them)"""
2545,208310468,"b""They're even blocked out from being editable:\r\n![image](https://user-images.githubusercontent.com/13334553/43791077-5bccf890-9a29-11e8-84b1-1b573fa039c6.png)\r\n"""
2545,208311681,b'I ended up just making RaiseTeleportCompleted private and removed it from the interface.'
2545,208313206,"b""I found a nice const value for a substitute that's not some expensive lookup on startup \xf0\x9f\x91\x8d \r\n\r\n`Physics.DefaultRaycastLayers` and `Physics.IgnoreRaycastLayer`"""
2545,208329885,"b""I'm open to the idea of  adding a Position/Rotation property for world space and a LocalPosition/LocalRotation property for local space."""
2545,208330542,"b""They are here because pointers still need to know about teleportation. That's how we're hiding/showing the pointers and their cursors when a teleport request is raised."""
2545,208330591,b'I moved that into a base class.'
2545,208334362,"b'Indeed, and maybe that can be abstracted out a bit more.'"
2568,208393630,b'cause we return in every other swtich. Pretty much redundant else.'
2568,208393689,b'code clean up of redundant things'
2568,208393791,"b'Touch is from the axis, where press is from the button'"
2568,208393866,"b""Huh, I'll double check. I might have missed this one."""
2568,208393992,b'https://docs.unity3d.com/Manual/Windows-Mixed-Reality-Input.html\r\n![image](https://user-images.githubusercontent.com/13334553/43804235-2a30d960-9a50-11e8-8733-52aebf01dff1.png)\r\n'
2568,208395631,"b'Well, it is touchpad press for WMR but the other devices have it categorized as touch.'"
2569,208412725,b'Should we keep the underscore for legibility? '
2569,208421701,"b'No worries, just wanted to make it easier to identify and read.'"
2568,208433725,"b""I tested recently with good results, but I'm going down a different path for this. You'll see in an update soon."""
2559,208611498,"b""Destruction is handled in the `ControllerPoseSynchronizer`'s `OnSourceLost`\r\n\r\nLine 93.\r\n\r\nI agree it is a bit disjointed. Maybe adding a method to the `IMixedRealityControllerPoseSynchronizer` to request destruction of the object is an appropriate step here?\r\n\r\nThe nice thing is we don't have to keep a reference to our new object, and it's pretty much self sufficient once it's spawned."""
2559,208611585,b'Will do.'
2559,208618291,b'Now that I look back the interface already has you implement `DestroyOnSourceLost` to satisfy the requirements of it handling destruction of the object'
2559,208620951,b'Added doc comments in interface.'
2559,208622959,"b""I think it's okay to have a stub for future planning.\r\n\r\nBesides I think David already decided this wasn't making it in alpha, but stabilization."""
2568,208758134,b'I suppose we could do a partial match here.'
2568,208758316,b'I wonder what the hex values refer to.'
2568,208759765,"b""I wonder what is building this string... Hopefully when we switch to the native plugin for input we'll get better info about the controllers"""
2568,208772086,"b""I'll take a look. Trying to get controller registration solid before going in depth on input."""
2568,208784912,b'Fixed.'
2568,209092484,"b""Isn't there an alt keycode to use?\r\n\r\nThe means generic OVR input would be broken as well, correct?"""
2568,209092702,b'Sounds good. I think having it as a vector3 made me put position for some reason haha.'
2568,209318210,"b""The tracking state doesn't trigger when the controller moves in and out of your view anyway."""
2568,209319062,b'No Bueno'
2568,209414454,"b""This might be related to a unity bug. Let's file an issue and get back to it when they fix it. \r\n\r\nRight now it's working reliably enough."""
2568,209432343,"b""Don't forget my next PR is refactoring this to use a generic unity input base device manager, that'll be where we get the source detected and lost from. """
2580,209437226,b'Pointers is a collection. For is not possible.'
2580,209438080,b'https://stackoverflow.com/questions/9625270/what-is-the-fastest-safest-method-to-iterate-over-a-hashset\r\n\r\n>A foreach loop has a small amount of addition overhead on an indexed collections (like an array). This is mostly because the foreach does a little more bounds checking than a for loop.\r\n>\r\n>**HashSet does not have an indexer so you have to use the enumerator.**\r\n>\r\n>In this case foreach is efficient as it only calls MoveNext() as it moves through the collection.'
2580,209441450,b'Kinda like a new line. I wanted to make the warning a bit easier to see right away when you hover over it.'
2568,209471968,"b'Not all controllers will be getting input from the Unity Input System, so no.\r\n\r\nWe already have the Windows Mixed Reality Controllers getting input directly from the Interaction Manager, instead of the old unity input system (and hopefully soon, directly from the Windows namespace itself).'"
2568,209475157,"b""Completely removed all the XR Node events from the open vr controller bc we assign the node, and during the update, we get the node's status, which updates the controller's tracked state"""
2584,209711243,"b""Because we're setting it in the constructor and because it's virtual it'll cause some unintended side effects. Overriding it here fixes that."""
2584,209730935,"b""Any virtual member call in any constructor.\r\n\r\nEssentually if you set a virtual member in a constructor, it's calling on a derived member that might not be initialized yet."""
2584,209731098,b'https://stackoverflow.com/questions/119506/virtual-member-call-in-a-constructor'
2568,209976150,"b'because when null is returned, no input source is found and no input source detected is raised.'"
2568,209976362,"b""If the controller is a generic ovr controller, when it'll already be assigned the type before we get here."""
2568,209976666,"b'Because Unity names the joysticks by specific strings, anything else would fail to recognize the xbox controller by this joystick name.'"
2568,209976847,"b""> And what about generic gamepads? They wouldn't be supported here.\r\n\r\nThat's not true,[ anything else falls back to being a generic unity controller](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2568/files#diff-53e277b118f7be1db021a4dd6ba5c0c2R193)."""
2568,209977092,"b""Yes, I've tested with both the WMR controllers, and xbox controller connected at the same time. \r\n\r\nNo conflicts there."""
2568,209978718,"b'See [Line 46](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2568/files/528aa8eb742b881f4c5094b282c3ef854ea9595a#diff-42d2182336b6426682583fc7e7a29408R46)\r\n\r\nIn the [`GetCurrentControllerType`](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2568/files/528aa8eb742b881f4c5094b282c3ef854ea9595a#diff-42d2182336b6426682583fc7e7a29408R90) method we should get a valid open vr controller type if the joystick name contains ""OpenVR"". If it comes back null, then it\'s not an open vr device.'"
2568,209987521,"b'> Plus we never add just the UnityDeviceManager and the UnityOpenVRDeviceManager anywhere, unless you have also made changes to the MR manager?\r\n\r\nThe `OpenVRDeviceManager` was already defined in the MRManager. I added the `UnityDeviceManager` next to it.'"
2583,210369929,"b""Why not just put this in the scene since it's for the demo?"""
2583,210370034,b'I wonder that the difference is here...'
2583,210370157,b'`Boundary System Visualization`?'
2583,210370342,"b'I think leaving off the last part is a bit misleading, and might have devs looking for a boundary system component on it, when most likely none will exist.'"
2583,210371973,"b""if we know the layer index, why not just assign it here since it's private? \r\n\r\n```\r\n/// <summary>\r\n/// Layer used to tell the (non-floor) boundary objects to not accept raycasts\r\n/// </summary>\r\n/// <remarks>\r\n/// Default is Ignore Raycast layer.\r\n/// </remarks>\r\n private readonly int ignoreRaycastLayer = 2; \r\n```"""
2583,210373217,b'wondering if this should be a `LayerMask` instead of an `int`'
2583,210373469,"b'`Boundary System Visualization`?\r\n\r\nI think leaving off the last part is a bit misleading, and might have devs looking for a boundary system component on it, when most likely none will exist.'"
2583,210396657,"b'... right, but unity processes it via LayerMasks'"
2583,210421247,"b'Do we want this to be configurable, like with focus?\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/44175288-9cbf7180-a09a-11e8-95ac-7d2200a35ad4.png)\r\n'"
2594,210438520,"b""I removed select keyword because it's a reserved keyword used by the OS."""
2583,210438657,"b""If that's the case, why can't we just hard code the int value and explain what the value represents in the comments?"""
2583,210442579,"b'I seriously doubt that, but then we could just update it, if it ever does change.'"
2596,210443146,b'Scriptable object?'
2596,210443369,"b""not sure if flags are appropriate here.\r\n\r\nProbably shouldn't be able to define a wall and ceiling, and we might want to split this up into two enums for describing the surfaces (hangable, angled, etc)"""
2596,210443411,"b""Why include if it's commented out?"""
2596,210443641,"b'Depending on how we implement this, the event source could be whatever we use to wrap the spatial understanding dll with, and we will raise events from it to the spatial awareness system.\r\n\r\nThat way we can have multiple sources of spatial data, but a single spatial awareness system.'"
2583,210443816,"b'But at the cost of runtime perf.  Idk, I think in this case perf > once in a lifetime event'"
2583,210445219,"b'It has a cumulative impact, death by a thousand cuts.'"
2583,210447833,"b""Still not sure why we just don't use a layer mask haha.  That way we could support more than a single layer, if we so choose to in the future."""
2597,210473829,b'Why would it only be whitespace?'
2599,210631696,"b""Not sure how transforming it from then back to local space fixes this.\r\n\r\nIsn't this redundant?"""
2596,210961871,"b""Let's use a LayerMask here."""
2596,210962040,"b""Why wouldn't we want it to just start if the user has it enabled in the config profile?\r\n\r\nWhy do we need this?"""
2596,210962104,"b""Probably don't need this."""
2596,210965433,"b'Also, what if the dev is already defined layer 31 for something else?'"
2596,210976877,"b"">If we disable the system in the config profile, we lose the dev's desired spatial profile.\r\n\r\nThat's not true, the profile is still serialized. I intentionally did't remove it from the saved asset file."""
2596,210977453,"b""We could update the spatial awareness inspector to just not hide the profile when it's disabled."""
2596,210977521,"b""We don't need auto start."""
2596,210977783,"b'Okay, why does it need to be like the HTK?\r\n\r\nLayer masks add greater flexibility, and customization '"
2596,210978049,b'> I believe you suggested this pattern\r\n\r\nIf I suggested anything recently it was to use layer masks :p'
2606,210987074,b'Should we update this to be an event routed through the MRTK?'
2606,210987315,"b'fields should not be public. Please update them to be private and serialized. If a field needs to be accessed outside of the scope of the class, please add a property accessor.'"
2606,210987513,b'These comments could be summary tags instead.'
2606,210987854,b'Some of these enums should probably be defined in the mrtk core'
2606,210987925,b'Should this be a struct?'
2606,210988121,"b'`namespace Microsoft.MixedReality.Toolkit.SDK.UX.Inspectors.Collections`\r\n\r\nAlso, please update the editor folder name to be `Inspectors` instead.'"
2606,210988277,"b""Let's go ahead and grab all the properties off the object so we can have a clean inspector."""
2606,210988431,"b""I'm pretty sure some of these enums are already defined in core."""
2606,210988643,b'Should we have a collection interface?'
2606,210996993,b'`_Core.Definitions.Utilities`'
2606,210997051,"b""That's where most of our enums are defined."""
2606,210998410,"b""No worries, I just wanted to double check. I couldn't find any either. The only one that looks similar is PivotAxis, but I think these area all good here."""
2606,210998634,b'If we end up changing this to a struct we should also move it to the core/definitions/utilities folder'
2606,210998758,b'Anything that defines a collection.'
2606,211001565,b'Folder location should also reflect the namespace I provided above.\r\n`SDK/Features/UX/Inspectors/Collections`'
2606,211005739,b'Sounds pretty generic.'
2606,211005930,"b""I was mostly just curious. I don't mind keeping the action, but also adding an event."""
2596,211006204,"b'After reviewing some more, [I made the concession that the int was fine here](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2596#issuecomment-413950247) as we have multiple profiles.'"
2596,211006840,"b"">Why not? An app experience might want the system set up but doesn't want it to start mapping or analyzing until a specific trigger. On the other hand, some apps will want it all started up at launch.\r\n\r\nBecause it would be up to the developer as to _when_ they choose to enable it. Similar to how the boundary system can enable/disable it's visualizations.\r\n\r\nIt could start disabled, then when the app reaches a point where it needs to be on, it enables it. No auto anything should be in the core system. That's up to how the developer implements their app, not how we choose to setup the system."""
2606,211007852,b'Why would a node be null?'
2596,211008389,"b""Either it starts enabled or it doesn't. Simple as that."""
2596,211010605,"b""> Yes, that's why this is an option in the profile. The developer gets to choose their profile settings.\r\n\r\nThe difference is that it's redundant bc you just don't need to enable system. Then in code the dev can specify when to enable it."""
2596,211011660,"b""It's not like I'm saying we shouldn't delay starting the system until later. Far from it. \r\n\r\nI'm saying that this bool is redundant, because for a system to auto start it needs to be enabled and registered with the MRManager, but then we're gonna enable it when it starts, then just disable it during that startup phase? That's unnecessary. Disable it, but keep the ability to setup the system in the config profile, and let the user turn it on when they feel like they need it. """
2606,211020196,"b""Just grab all the serialized properties, and implement them in the gui update. \r\n\r\nIf you'd like I can open a PR on your branch that does this, if it's still unclear."""
2606,211020539,b'extra lines?'
2606,211020667,b'abstract ?'
2606,211021121,b'Should these be xml format?\r\n\r\n```\r\n/// <summary>\r\n/// Comments\r\n/// </summary>\r\n```'
2606,211021390,b'Seems like a nice vector 3 math extension...'
2606,211021550,"b""we've been adding the name of the region at the beginning and end to help identify them better."""
2606,211023152,b'might want to serialize these so they show up in the inspector'
2606,211023222,b'might want to serialize these so they show up in the inspector'
2606,211023234,b'might want to serialize these so they show up in the inspector'
2606,211023381,b'`*0.5f`?'
2606,211023786,"b""With all these nested switch statements, let's call a method instead and pass any values it needs to it."""
2606,211023922,b'This could also be a handy vector 3 extension.'
2606,211024012,"b""let's drop the bracket onto the next line."""
2606,211024151,b'Could we make this a method instead of a delegate or lamda?'
2606,211024476,"b""We probably don't need to assign a new vector here, seeing as we create a new grid array anyway."""
2606,211024524,"b'Just assign the x,y,z values '"
2606,211024612,"b""We probably don't need to assign a new vector here, seeing as we create a new grid array anyway.\r\nWe should be able to just set the x,y,z values."""
2609,211055288,b'Because Input Actions are required for using the mrtk input system'
2609,211057712,"b'Good, because that was the intended design.'"
2568,211064814,"b""I specifically didn't give it an alias because it's for multiple different devices."""
2568,211064827,"b""> We can make a very readable UI by allowing users to select their controller type and then see the controls available for mapping. Ping me if you have questions on this feedback.\r\n\r\nWe already do this. I don't understand how this would change anything in the UI"""
2594,211064869,"b""Great idea, I'll be sure to add that"""
2594,211064978,"b'> also, when switching to the navigation recognizer, the dev will lose hold and tap recognition in this implementation\r\n\r\nThis is the same implementation in the HTK, so does that happen there as well?'"
2594,211064992,"b""no, either the system is enabled, or it's not. \r\n\r\nSame goes for the conversation we were having in the spatial awareness construct."""
2594,211065014,"b""I'm not sure I understand your comment"""
2594,211065025,"b""We're passing in the value assigned to it."""
2568,211065109,"b'No, you should def only see AXIS_1 only. '"
2568,211065131,"b""There's no point in defining the same axis with a different name, it's redundant."""
2594,211065142,"b'Ah, I see. Then why does the HTK do it?'"
2594,211065147,b'Haha of course you do :p'
2594,211065181,"b'I agree, we should make this configurable as well.'"
2594,211085444,"b""Because it's a pointer event not a key press."""
2594,211085459,"b'If they do trigger this event, then we should filter them out. Clicks from motion controllers are handled in the controller implemention.'"
2594,211085515,b'When they press select'
2594,211085523,"b""We'll be sure to filter the controllers out here, as well """
2594,211088730,"b""Why the down thumbs? \xf0\x9f\x98\x85 I thought that's what you were suggesting. """
2594,211088741,"b'Anything that is handled by the controller should happen in the controller implementation, not in this class, so it would be valid to remove anything not related to gesture control.'"
2594,211088779,"b""Anything handled by the controller should be in the contoller's concrete class implementation, not here."""
2594,211090363,b'Is this similar to how the dictation and keyword recognizers cannot run at the same time?'
2594,211090588,"b'I figured out a way to get the controller references from the windows device manager. Not sure how @SimonDarksideJ will like this, but I thought it was an interesting fix to the issue without filtering out the controllers'"
2594,211090709,"b""> I don't think the gesture recognizer being its own input source makes sense. The events are coming from the same input source as the source detected / input down / etc events from the controller implementation, so it makes sense to me that these should reference the same Controller/source.\r\n\r\nI do agree with you here, but @SimonDarksideJ made it very clear he wanted to separate these out.\r\n\r\n> I started an implementation of the gesture recognizer a week or so ago\r\n\r\nWell where's that at, and why is it the first time we're hearing about it?"""
2594,211103020,"b'Whoops how did that get in there?\r\n\r\nAgreed, I was trying to figure out a way to pass the confidence level to the constructor. No keen on making an enum that has the same values just to get it cross platform. Thoughts?'"
2568,211339803,"b""I don't mind reverting, or moving this to the bottom, if it makes more sense."""
2606,211360622,b'Should the changes to the boundary viz scene this class be in a seperate PR?'
2606,211372814,"b""Type is the suffix we've been going with. But I'm fine with either as long as we make a decision."""
2606,211427762,b'Needs to be a property if public'
2606,211427802,b'Also needs to be a property.'
2606,211427947,b'missing summary tags'
2606,211427973,b'missing summary tags'
2606,211428087,b'extra space'
2606,211428162,b'properties and their corresponding fields should be co-located.'
2606,211428309,"b""Let's put each x,y,z value assignments on new lines here. Might make it a bit easier to read."""
2606,211428416,"b""We can probably remove all the redundant `this`'s as well."""
2606,211428473,b'why not just vector3.zero?'
2606,211428578,"b""pretty sure we can probably make this a struct. Where are we checking if it's null?"""
2606,211428670,"b""Let's go ahead and grab all the properties and show them here so we can a nice clean inspector."""
2606,211428864,"b""why make a new vector here? couldn't we just assign it back to the source and return it?"""
2606,211429140,"b""same thing here. We probably don't need a new vector and can just update the source, then return it."""
2606,211429290,"b""If you'd like I can open a PR with the suggested changes. Shouldn't take but a few minutes."""
2606,211430273,b'missing a `;`'
2606,211433189,b'Seems as though orientType and newPos are unused in the method. We can just remove them altogether.'
2606,211433826,"b""All you'd need to do is get a local copy, assign the values, then assign your modified copy back to the array. Like so:\r\n\r\n```\r\ncase ObjectOrientationSurfaceTypeEnum.Scatter:\r\n// Get randomized planar mapping\r\n// Calculate radius of each node while we're here\r\n// Then use the packer function to shift them into place\r\nfor (int i = 0; i < NodeList.Count; i++)\r\n{\r\n    var node = NodeList[i];\r\n    newPos = VectorExtensions.ScatterMapping(nodeGrid[i], Radius);\r\n    var nodeCollider = node.transform.GetComponentInChildren<Collider>();\r\n\r\n    if (nodeCollider != null)\r\n    {\r\n        // Make the radius the largest of the object's dimensions to avoid overlap\r\n        Bounds bounds = nodeCollider.bounds;\r\n        node.Radius = Mathf.Max(Mathf.Max(bounds.size.x, bounds.size.y), bounds.size.z) * 0.5f;\r\n    }\r\n    else\r\n    {\r\n        // Make the radius a default value\r\n        // TODO move this into a public field ?\r\n        node.Radius = 1f;\r\n    }\r\n\r\n    node.transform.localPosition = newPos;\r\n    UpdateNodeFacing(node);\r\n    NodeList[i] = node;\r\n}\r\n```"""
2606,211433974,"b""Let's not be lazy and do it right."""
2606,211434259,b'These could be lambda expressions. might shorten it down a bit and make it a tad easier to read.'
2606,211434320,"b""let's be sure to use ordinal comparison here. and on the apha reversed as well."""
2606,211434395,b'Where are we even creating and assigning this action?'
2619,211764278,b'Yes by setting the `upDirectionThreshold` value in the inspector.'
2619,211764784,"b""At this point we've already calculated a valid point. So I'm not sure what you mean here."""
2619,211768065,b'@davidkline-ms this distance calculation is only for properly clamping the line renderer to properly render to the end point of the parabola. It is not used in calculating the validity of the teleport result and is outside the scope of this PR.'
2623,211769318,b'This table seems to be broken'
2623,211769452,b'All of these tables are broken as well.'
2623,211771458,b'Do we want to update this to be `Internal` to reflect the planned namespace changes?'
2619,211781437,b'It is not'
2594,212006600,"b""@cre8ivepark This area would be where we create our gesture input source, but I've removed it for now."""
2599,212353108,"b""Strange things happening here when you updated your branch. Be sure you don't have any outside changes."""
2620,212454700,"b""probably need to specify both x & y here instead of the bit assignment bc you didn't specify flags attribute. But also Unity is picky about how it'll render it in the inspector."""
2620,212484932,"b""`x | y` sorry, I didn't mean my & above as a bit op."""
2620,212500950,b'Could always define it as 3'
2620,212507100,"b'Idk, I usually just just the IntPopup'"
2637,212782607,b'Windows Mixed Reality Hand Gestures?'
2637,212782668,b'RaisePointerDown?'
2637,212782680,b'RaisePointerClicked or RaisePointerUp?'
2638,212787700,b'string.empty?'
2638,212809394,"b'Yeah no difference there, just easier to spot and read imo'"
2639,212840062,"b""Because they're not spatial controllers, which won't be rendered in the scene."""
2639,212840072,"b'I made most the images, but just in case there was ambiguity I added the license.'"
2639,212840076,"b'I would say both, yes.'"
2639,212840097,"b""I was integrated correctly, and actually fixed a few issues. \r\n\r\nI'll remove the duplicate invert."""
2639,212840621,b'I assigned the grip pose action to the Spatial Grip on the HL'
2639,212840632,"b'Great catch, fixed.'"
2639,212840635,"b'Great catch, fixed.'"
2639,212840680,"b""Yes, I was planning on moving them to the controller popout windows.\r\nStill trying to figure out where they'd go if they staying in the controller config profile."""
2639,212840714,b'They were combined into a single dropdown.'
2639,212840915,"b""Oh I see. On tick, I'll be sure to update it."""
2639,212841066,b'Great catch. Fixed'
2639,212951028,"b'Depends on how technical you wanna get.\r\nI never ""drew"" anything. \xf0\x9f\x98\x8b\r\n\r\nI did process the images and make sure they were in a format that was suitable for use, which involved resizing, and editing the images from their original form. \r\n\r\nI added a 5 px stroke, cleaned up the images where there was errors, as well as removing the white background by making them transparent, and inverting the colors where appropriate for the dark theme contrast.'"
2639,212951221,b'Take a look at the description of the issue where I laid them out plainly.'
2639,213021918,b'> Fixed an issue with constructors not being updated after the X Axis Inversion addition.\r\n\r\nYes'
2660,213732809,b'Why when we can just add the label?'
2660,213745075,b'Can we make these `## Title` instead of just bold again?'
2662,213791972,b'This might be a silly request but I think the order of the realities is important:\r\n\r\n` AR / XR / VR ` to reflect the spectrum better. '
2662,213794229,b'Usually I refer to the whole spectrum as Mixed Reality not XR. '
2679,214183902,"b""That's a good point. I think we should also be able to support connecting or removing a touch device as well."""
2687,214539614,b'I should completely remove the this file'
2687,214541133,"b""It's part of the pointer interface, so can't really change that."""
2691,214546291,"b""What's this change?"""
2691,214546347,b'We should update the comment here. This should be generic to any recognizer.'
2691,214546379,"b""Don't we have a reference to this in the base controller?"""
2691,214546404,"b""We can just comment that the input doesn't have a default implementation."""
2691,214546459,b'We can probably get rid of this as well. The base class has an input source reference'
2691,214546492,"b'We can get rid of this region, seeing as each controller should be platform specific.'"
2691,214546521,b'We should probably keep some of these comments'
2691,214546723,"b""Why don't we move this inside the method?"""
2691,214546804,"b'`new GUIContent(""Start Behavior"")` can be defined as a readonly field so we don\'t create a new GUIContent every update'"
2691,214546817,"b""In fact, if you update the field name to match, you won't even have to make the GUIContent"""
2691,214546824,b'Why do we need a dispose?'
2691,214546860,"b""Couldn't these be more like our manager events like `Enable`, `Initialize`, `Disable`, and `Destroy`?"""
2691,214546920,"b""Shouldn't this be moved to where the input manager is added? That way if the input system isn't enabled the voice input device manager is also not added."""
2691,214547470,b'Scratch that. We already decided long ago that the devices could still be created and we separated them from the input system.'
2687,214555223,b'Great catch'
2691,214715196,"b""Each implementation is a platform. It's no different from the way we've setup all the other controllers."""
2691,214743286,"b""What's this change?"""
2691,214743401,"b""Shouldn't the device manager be cross platform and our controller implementations be platform specific?"""
2691,214743439,b'empty?'
2691,214743479,b'This null check should be part of the `IsSpeechCommandsEnabled` property'
2691,214743501,b'Same thing here. Check for null in `IsDictationEnabled` property.'
2691,214745244,"b""I don't understand."""
2691,214745297,"b""Oh I see, so there's no more controllers for the input?"""
2691,214746353,"b""Let's keep the field shown and not hide it if it's disabled."""
2691,214746373,b'That way we can assign it and turn on the system at runtime if we wanted.'
2695,214868074,"b""That's a much larger breaking change than a simple bug fix."""
2695,214918479,b'Much appreciated. I do agree we can refine this class a bit more and possibly make it a full proper manager. For now I want to get the rest of the input devices working first.'
2691,215340514,"b""Bc that enum is platform specific and this way we can serialize the data even if we switch the platform.\r\n\r\nAlso for other platforms it may have a different enum structure.  I'm open to making our own clone enum for this."""
2691,215347542,b'I really feel like this should be next to the toggle for enabling and disabling the speech'
2691,215348184,"b""I'd almost rather have a dedicated `WindowsDictationInputDeviceManager` and make each dictation manager be the platform specific implementation just like we did with the Gamepad Input. (Nothing would really change but the name of this class.)"""
2691,215348512,b'We can remove this and replace run with the Update method call from MR Manager'
2691,215348877,"b""Let's rename the input source to `Windows Dictation Recognizer`"""
2691,215349249,b'Do we also want to add the ability to start/stop the recognizer like we do in speech?'
2691,215349579,b'We can drop the `MixedRealityManager.Instance.`'
2691,215349758,b'Same here. We can drop the `MixedRealityManager.Instance.`'
2691,215349838,b'Do we need to cast to uint here?'
2691,215351092,"b""Can we break this enum add into it's own PR?"""
2691,215351236,b'Please remove the speech stuff. Should be feature agnostic'
2707,215411304,"b'""recognition""? Maybe ""it""?'"
2691,215411426,b'Thanks!'
2691,215423237,b'Not sure if this makes sense.'
2691,215423377,b'We should keep the async here. '
2691,215423429,b'Keep this too.'
2691,215423460,b'Keep this.'
2691,215423490,b'Keep this too'
2691,215423677,b'needs summaries'
2705,215424609,"b""Needs to be cross platform. This isn't platform specific so I won't be renaming it."""
2705,215426353,b'I can see us adding to this in the future as more platforms get supported.'
2707,215428520,"b""I didn't realize he moved it \xf0\x9f\x98\x85 """
2691,215761025,b'Oh I thought I removed this.'
2713,215764984,"b""Should return if this check doesn't pass"""
2691,216055874,"b""Doesn't matter much as the OnEnable is overridden and the base call is empty."""
2725,216072777,b'no namespace?'
2725,216072962,b'I think you can just use `Position` as is correct?'
2725,216073031,"b""Unity's string overload is pretty print"""
2725,216073078,b'same line?'
2725,216073461,"b""We shouldn't have any platform specific code in our main system, but in platform components."""
2725,216073525,b'Similar to how we did devices for input system.'
2725,216073612,"b""Let's try to keep throwing exceptions to a minimum as they crash the player/editor. Let's raise an error instead."""
2725,216073801,"b'Do we wanna make a new dictionary every time, or modify an existing dictionary (as not all the surfaces may have changed)'"
2725,216073909,b'We seem to be getting a lot of chern on this line. '
2725,216074261,"b""Can't we just use the one built into the editor resources?"""
2725,216074394,"b""Don't forget to add the button to return to the main config profile"""
2725,216074497,b'missing interit doc summary'
2725,216074533,b'missing interit doc summary'
2725,216074714,b'I think people might get this confused with a UX bounding box.'
2725,216074936,"b""Please remove this so we don't hide it when disabled."""
2725,216089605,"b""I think it has something to do with the MR Manager's serialization of the currently running managers. No related, but just thought it was curious."""
2725,216094223,b'Bounds? \xf0\x9f\x98\x85 '
2727,216115847,b'We can probably get rid of blend shapes and visibility as well.'
2688,216143998,b'Whoops this was part of another pr. need to revert this.'
2687,216146662,b'Extra ;'
2687,216146702,b'Probably need to update the tests to accommodate the new configuration profile components as well.'
2687,216156469,b'need to revert this'
2687,216156487,b'nit sort'
2687,216156518,b'need to revert this as well'
2687,216156849,"b""I'll do this in a separate PR"""
2687,216160065,"b""It's good meow"""
2687,216161695,"b'Agreed, but there will be one more change with the addition to the mouse that is in the next PR. I want to look into making it easy to rearrange this in the future.'"
2705,216161976,"b""Sure thing!\r\n\r\nI just copied the original from the WSA gesture settings but I figured we'd expand this to be our own when new gestures are supported.  I'm not as good at converting these to bit flags, could you help?"""
2705,216162075,"b""I mainly didn't want to change them bc the file was an exact copy of what Unity's gesture settings enum was. Didn't know if changing the type would affect the transformation."""
2736,216177113,"b""for Unity's mask editor 0 means none and -1 is all."""
2736,216177129,"b""I should really take out that debug stuff. I didn't realize I left it in there."""
2736,216177257,"b'>  once bit 31 has meaning, there will be negative values that do not mean ""all platforms"".\r\n\r\nCan you elaborate on this?'"
2736,216178288,b'How do you check if any value is set?'
2736,216178622,"b""Okay, so what's the proper way to check if any value is set?"""
2736,216181602,"b""I don't understand. This is the catch all for everything. If we don't specify one of the other's then it's by default everything."""
2736,216181899,"b""If we don't specify one of the supported platforms, then it'll either be none or everything. returning true here supports the everything flag without having to specify additional platforms."""
2737,216331317,"b""I think we can use our own confidence level we made for the mrtk. Let's update it to use that """
2737,216362147,b'I wonder if we can change the semantic meaning array to a string[]'
2737,216362272,b'The goal here is to remove any platform dependent code from the main input manager'
2737,216362834,"b""Let's revert all of this and just move the dictationRecognizer down under line 62"""
2737,216363841,"b'Oh I see, that might not be possible bc the interface requires some of these methods.'"
2737,216380482,"b""Not sure I like this, we're allocating new list every time we get a phrase recognized. This will impact the gc and the perf of this feature."""
2737,216380578,b'Maybe we can remove completely for now?'
2737,216386736,"b""I'd argue we could take it out entirely.  What are some valid use cases for this anyway?"""
2737,216450359,"b""Now that we've wrapped the whole class we don't need these in every method."""
2737,216450590,"b""Same thing here. Now that we wrapped the whole class we don't need this in every method."""
2737,216450681,"b""I'm not sure we need this."""
2737,216450761,b'We can get rid of this now as well.'
2737,216464270,b'please remove'
2737,216464290,b'please remove'
2737,216464310,b'please remove'
2737,216464340,b'please remove'
4619,288776943,"b'This question leads to a longer discussion of why the input system owns the reference to the focus provider, instead of the focus provider being an independently registered system.'"
4619,288792908,"b'changing the service locator to track the focus provider is too large of a change at this time. also, the input system interface makes the focus provider a read-only property and we are no longer taking breaking changes.\r\n\r\nwe can revisit how the focus provider is managed in a future release'"
4619,289073060,"b'@wiwei, agree that at this point in the release, it is prudent to be mindful of unexpected changes. will add an optional param\r\n'"
4619,289081580,b'added class global internalShutdown variable. also removed unneeded ExecuteOnAllServices call'
4619,289092663,"b'>internalShutdown = true; [](start = 12, length = 24)\r\n\r\nShould RegisterInstance set this back to true? Otherwise it seems like even the static global will always be shutdown forever...'"
4619,289093595,b'good catch!'
4838,293481294,b'Is this supposed to be re-enabled or removed?'
4838,293509965,"b""This addresses #4832. I'll remove the comment."""
5292,302772861,"b'Is this now going to allocate multiple times a frame on each `Update`, `LateUpdate`, etc?'"
5292,302774377,"b'unfortunately, yes. i have not found a safer way to handle this scenario. ideas?'"
5292,302774450,"b""I wonder if we could try to follow the pattern in `BaseEventSystem` instead, where it saves off actions (in that case, registering a listener) for a predetermined, known good time in the app cycle\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/0734ab93655113a974682137477cd095d63f87e2/Assets/MixedRealityToolkit/Services/BaseEventSystem.cs#L208\r\n\r\nAny profile changes (which I think is what this is aiming to support) could be saved off and handled maybe at the end of update / lateupdate / some known good time, probably near the end of the frame so the new services don't get out of order"""
5292,307719024,b'This would be preferable using a static list that is populated/cleared down.  ToList has too many performance overheads'
5523,311223454,b'nit: consider checking for IMixedRealityDataProvider and log guidance to inquire with the appropriate service.'
5523,311223762,b'nit: consider adding a note to register with the appropriate service'
5771,317325165,"b""The idea here was that you care more about the active build target in the editor than the fact that you're in the editor.\r\n\r\nI added the editor as an explicit target to mark editor-only services, which did muddy the definition a little bit (for example, you can't currently mark something as in-app only, ignoring running in the editor)."""
5771,317325364,"b'Removing this would make things a little less configurable, i think, since all services that *can* run in the editor *will* run in the editor, even if one only runs when the build target is Standalone and one only runs when the build target is UWP.'"
5771,317335369,"b""I think I see what you mean but it's more confusing. If I mark something as supported in WindowsEditor, that should be the end all truth. \r\n\r\nI see what you mean in that if I mark a service as WindowsStandalone and WindowsEditor, it will still run in-editor with build target UWP or really any windows build target. But saying we only use BuildTarget in editor is not obvious compared to marking a service that yes I can run in editor"""
6043,327244190,"b'Did you forget to remove this commented out code, or comment it out on purpose?'"
6043,327245706,b'I think this using is not needed'
6043,327248587,b'forgot to remove. thanks!'
6043,327249581,b'nice catch! thanks!'
6043,327383784,"b""Why are we exiting early here? This seems like it's going to not execute services, potentiatlly randomly, if the services cound and MixedRealityServiceRegistry.GetAllServices().Count() do not match."""
6043,327385420,"b'It seems like your aim here is just to iteration through an IEnumerable<IMixedRealityService> while the collection might be getting modified (for example, if you changed profiles and now a service no longer exists.\r\n\r\nDid you consider something like this:\r\n```\r\nusing (IEnumerator<IMixedRealityService> enumerator = services.GetEnumerator())\r\n{\r\n    bool moveNext = enumerator.MoveNext();\r\n    while (moveNext)\r\n    {\r\n        execute(enumerator.Current);\r\n        moveNext = enumerator.MoveNext();\r\n    }\r\n}\r\n```\r\nFrom [this source](https://blog.magnusmontin.net/2015/02/28/enumerating-collections-that-change-in-csharp/). That has advantage of still enumerating over all services that exist, and also is a bit easier to understand (I had to think a bit about why you were doing this count comparison).'"
6043,327385678,"b'Curious, are these just fixing existing bugs, or is that needed specifically to get profile switching working?'"
6043,328239770,b'this change is intended to add the same protections to Update that exist in LateUpdate'
6043,328240117,"b""i'll give your example a try."""
6043,328240821,b'foreach throws when the underlying collecction is changed (ex: when the profile swap happens to occur during this loop)'
6043,328298199,b'nit: are these tabs or spaces?'
6043,328299290,b'This would also be nice to be able to skip the MRTKRegistry.GetAllServices<>() call'
6457,341795420,b'unneeded comment was from an older implementation of this change'
6457,342173610,b'removed'
6446,342216865,b'Is there a chance / downside to this script getting saved in the scene and existing at runtime?'
6446,342271693,b'DepthBufferRenderer body of code is #IF UNITY_EDITOR so nothing will run in that case'
6738,350823809,b'Accidental comment'
6738,351489505,"b""Not accidental. Related to #6735 - my dev console gets filled up with unhelpful and confusing error messages. With switching profiles, it's expected that the ActiveProfile may be briefly null. Hence, showing an error every time the app switches profiles / loads a new scene is not great. I've uncommented it now, but changed it to a warning instead. """
6738,352421228,"b'I think this should stay as an error. Having no active profile is not a state we should ever be in.\r\n\r\n```suggestion\r\n                Debug.LogError(""No Mixed Reality Configuration Profile found, cannot initialize the Mixed Reality Toolkit"");\r\n```'"
6738,352421330,"b""If this is happening because we're manually setting the profile to null for some reason, it should just be swapped directly to whichever new profile is going to be set.\r\n\r\nIf we see issues with that approach, pinging @davidkline-ms  :)"""
6783,353335250,b'Does this new `ToArray()` call not create different garbage or have a perf impact?'
6783,353465577,"b""Yea I know, we could possibly leave this as a foreach loop. \r\n\r\nI made this a ToArray() because using ElementAt() extension supposedly can run in O(N). I'll switch back as it's more likely we'll GC more as our services list grows vs the fixed 40B\r\n """
6795,353972952,"b""Looks like some whitespace changes here. We've typically had `#region`s indented as they were before this change."""
6795,353974052,"b""Use [`Application.isEditor`](https://docs.unity3d.com/ScriptReference/Application-isEditor.html) here? Since these aren't editor-specific APIs, just editor-specific behavior."""
6795,353974420,"b'nit: for readability, might be good to keep this empty line around'"
6795,353980936,"b""ah gotcha, that was on purpose but I'll switch back"""
6795,353983453,b'Going to combine with Application.isPlaying. I want to exclude just edit mode'
6738,363486597,"b'I tend to agree, @keveleigh  '"
7211,373728067,"b"">XRDevice.SetTrackingSpaceType\r\n\r\nWe should double check use of this API. It's deprecated in Unity 2019.3.\r\nWe were able to rework it by defining a new XR SDK based BoundarySystem. I'm not sure this logic should live in the core MRTK script, or at least not a direct API call.\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Providers/XRSDK/XRSDKBoundarySystem.cs#L84"""
7211,375576823,b'Needed?'
7211,376630779,b'nope!'
7275,380873628,"b""So oddly enough and I wish we caught this earlier, but GetAllServices() actually returns a HashSet which is not actually sorted in a deterministic order:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/f7494ca8b3b8331d3fa184caf970be8d18acc6d5/Assets/MixedRealityToolkit/Inspectors/MixedRealityToolkitFacadeHandler.cs#L91\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1?view=netframework-4.8#remarks\r\n\r\nI guess this works as-is just because we're lucky but I guess we could still get bit by this going forward...\r\n\r\n@Troy-Ferrell  FYI"""
7275,380888065,"b""@wiwei I don't think this is applicable? The linked cs file you have is the FacadeHandler. \r\n\r\nMRTK.cs uses MixedRealityServiceRegistry which sorts the services on registeration.\r\n\r\nDo we care if the FacadeHandler renders/handles services in any order?"""
7275,382805103,b'Would be good to mention this in release notes.'
7275,382805290,"b""Please include the comments you had above regarding why you do this, since this is in another file and people won't know why it happens."""
7275,383196986,b'Will do! Good call'
7275,383197224,b'Good catch. I intended to add that comment everywhere and missed this spot.'
7275,383237689,"b""This is not new behavior, but I will definitely add it to the what's new section."""
2316,196275519,"b""Let's remove this file. The core toolkit will be distributed as a single package."""
1636,162208807,b'Why are we changing the branches everywhere? From master to Dev_Working_Branch?'
1636,162335466,"b'Because this will be targeting the dev branch and all links would be broken otherwise.\r\nWhen this eventually gets merged to master, then the links should be updated to master.'"
1648,162460882,b'Could we shorten this to just `/Sharing`? like we did above?'
1648,162463661,"b'This one links to a different repo, the non-Unity one'"
1648,162470080,"b""Oh I see. I wasn't aware we had a Dev_Working_Branch there."""
1648,162471720,"b""There isn't a dev_working_branch on the base MRTK, hence why I had to revert :D """
1636,162195475,"b'Were these edits to SWIG generated files needed? I tend to be hesitant to manually edit these files. If so, this should be updated in the native repo as well, right?'"
1636,162196660,"b""These are only temporary until the base DLL's are renamed.  hopefully the auto-gn should pick them up (else we'll review when importing the new DLL's / gen files."""
1666,163726176,"b""Should we be using `UNITY_WSA` or `WINDOWS_UWP` throughout the project?\r\n\r\nWhat's the difference?"""
1666,163868605,"b'I was going to create another issue to standardise on our #IF statements throughout the project.  As we head towards a more multi-platform architecture, having single definitions for each state will be critical.'"
1666,163870563,b'#1667 created for sorting out later'
1666,163917212,"b'`UNITY_WSA` runs both in the compiled UWP app and in the editor. From my tests, `WINDOWS_UWP` is equivalent to our use of `UNITY_WSA && !UNITY_EDITOR`, running only in the compiled UWP app.'"
1821,173644714,b'This fixes namespace issues by moving it inside the class instead of declaring it above.'
1821,173981497,"b'If this fixes the namespace issue, do we still need to move to 4.6?'"
1821,173981563,"b""Also, if we do move to 4.6, this only *sorta* fixes the namespace issue. With this change, it's still using the Toolkit's old extension method instead of the new official one. Should we not move to the platform's extension method and delete the Toolkit's, since the old Toolkit one only existed to fill the gap of an official one?"""
1821,173984541,"b""That's a good point, I could remove the them"""
2024,185090476,"b'Revert the namespace change for the Dev Branch, or retarget May or June Releases'"
2024,187517454,"b""This should be in it's own file"""
2024,190918421,"b""I added this back from a previous version of the file. This wasn't my code but I used it for testing. I will remove this again."""
2024,185090537,"b'Revert the namespace change for the Dev Branch, or retarget May or June Releases'"
2024,185077359,b'Please revert the summary removal.'
2024,185090577,"b'Revert the namespace change for the Dev Branch, or retarget May or June Releases'"
2024,187517497,b'Missing access modifier'
2024,187517571,"b""Let's also remove the default comments for start and update"""
1854,176269404,"b'Per code style guidelines (see #1846), please move public enums outside of the class. I also recommend naming it TapToPlaceColliderPlacement to make it clear which class it is for (unless you believe it has a more generic usage.'"
1854,176306251,"b""Sounds good! There might be a more generic usage but for now it's a good to keep the name explicit, until there is a need."""
1865,176720566,"b""This method and it's delegate counterpart should me moved into the input manager class."""
1865,176895643,b'@StephenHodgson in fact my initial approach was to put this in InputManager but then I noticed that all existing events implement or need a corresponding IInputSource and I was not sure what to do for the case of the new IPlacementHandler. Any thoughts on that?'
1865,176899460,"b""No need to add a new source.  The input source is just as it says, the root source of the input, which in this case would be from the Tap event (passing in the event data's input source should be enough to satisfy this condition.) Thoughts?"""
1865,176929184,b'Check out the new iteration and tell me what you think.'
1865,176959075,b'got some extra spaces on this line'
1865,176959105,b'why not just use InputManager.Push/Pop modal input?'
1865,176959124,"b""We probably don't need to make this an input source, but just pass the click input source when we raise the event."""
1865,176966878,"b""@StephenHodgson I think this iteration addresses your concerns? \r\n\r\nMy only concern with this version is, the PlacementEventData.selectedObject for OnPlacingCompleted is not the object that is being placed. For example, in the TapToPlace test scene the selectedObject is the 'roommesh' instead of the 'cube' that is being placed. That does not seem the desired behavior of these events?"""
1865,177128796,"b""Yes, this is what I was.\r\n\r\nI'll have to take a look at the class you're taking about, but the selectedObject is something that should be handled by the focus manager.\r\n\r\nIf you pop/pash the modal Input handler, you should be able to specify an object that will temp get all input directly."""
1865,177166482,"b""I believe the reason for this behavior is:\r\n\r\nIn InputManager HandleEvent(), even though modalInput is 'cube', the focusedObject is 'roomMesh' and eventData.selectedObject is always set as the focusedObject. So when the event OnPlacingCompleted handler is invoked for 'cube', the selectedObject is set as 'roommesh'.\r\n\r\nAny suggestions on how to fix? Or is this just by design?"""
1865,177278917,b' eventData.selectedObject should always be the focusedObject.'
1865,177308820,"b""So does it mean the behavior is by design and we should proceed without any modifications?\r\n\r\nSummarizing the issue:\r\n1. the selectedObject when OnPlacingStarted triggers is 'cube' as I would expect.\r\n2. the selectedObject when OnPlacingCompleted triggers is 'roommesh' instead of the 'cube' that is being placed.\r\n\r\nThe events are routed to the registered listeners as expected. It's just the selectedObject when OnPlacingCompleted triggers that makes me wonder whether it's a bug or just by design. Ideally I would like to know what game object is being placed when those events fire ... but maybe I am overthinking the API."""
1865,177479752,b'>Ideally I would like to know what game object is being placed when those events fire\r\n\r\nYou could add a GameObject property to the eventData to get this info.'
1865,177518579,"b""Oh that sounds good to me! I wasn't sure passing the GameObject around would be well received since there was no other event doing it,"""
1865,177829405,b'@StephenHodgson I just noticed I had forgot to remove this unused code so I pushed one last commit.'
1971,182276247,"b'Add the ""Licensed under.."" comment'"
1873,176899215,"b""still not sure if this is correct.  What about classes that implement the IAudioInfluencer that don't inherit from MonoBehaviour?"""
1873,177162060,"b'then prev will be null and the following would handle it appropriately.\r\n                        ((mbPrev != null) && !mbPrev.isActiveAndEnabled))\r\nIf the IAudioInfluencer does not inherit from MonoBehaviour, it is likely not able to be disabled anyhow.\r\n\r\n'"
2779,217421149,"b""We could also enforce this by adding a vs configuration file, but I feel that's a bit extreme for editor default settings."""
2779,217426630,b'[Sure](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions#layout-conventions)\r\n\r\n> Use the default Code Editor settings'
2779,217426888,"b""Now let's get back to reviewing some important PRs like gestures. We really need to get that in sooner rather than later."""
2705,217448994,"b""That's not how I designed the system to be used."""
2775,217449512,"b""But _why_ is it attached to a game object?\r\n\r\nThere's nothing in this class that requires a physical presence in the scene... Unless I missed something?"""
2775,217449931,"b""It's not immediately obvious. Maybe consts would be useful? We could then reuse them for other audio things."""
2705,217450380,b'>**Removed Pointer Up/Down from all scripts raising events outside their respective device manager/controller classes.**'
2775,217454218,"b""Right, but in the editor we would be serializing the value that the required component attached is. We can still check if it's null here before attempting to get it. """
2770,217466014,b'also missing tooltip summary'
2770,217466049,b'summary'
2770,217466204,b'summary'
2770,217466264,b'missing summary'
2770,217466495,b'why this change? Is it now an integer?'
2770,217466604,b'seems like a rather unnecessary formatting change'
2770,217466696,b'seems like a rather unnecessary formatting change'
2770,217466748,b'seems like a rather unnecessary formatting change'
2770,217469126,"b""Okay, well these changes aren't needed. Let's go ahead and revert it to the source truth of mrtk_developement."""
2770,217470068,"b""Right, and changing these lines isn't required to get it to work."""
2775,217493492,"b""Let's tend to use async instead of coroutines... maybe we should write that up as well."""
2705,217525995,b'Will do!'
2775,217527493,"b'of course! lol,\r\n\r\nbut, internally we can def keep to using async over corountines'"
2775,217531097,b'pascalCase'
2775,217531291,b'Do we need to check it before setting it?'
2775,217531346,b'Same question here.'
2775,217531433,"b""there's some extra white space on this line"""
2775,217531720,"b'Just pulled your last commit, seems to still be a method'"
2775,217531837,b'missing beginning summary tag.'
2775,217532085,b'missing tooltip summary '
2775,217532541,b'Boxing here. Did we implement our own equality check for `AudioLoFiFilterSettings` ?'
2775,217532842,b'`!other.LowPassCutoff.Equals(LowPassCutoff)` so we get proper floating point precision checks. (same for the line below)'
2775,217533107,"b""Is it okay that we're using non read only values to compute the hash code?"""
2775,217533292,b'Initialize enum'
2775,217533413,b'tooltip text in summary'
2775,217533475,b'We can move the summary down above the public property'
2775,217533531,b'Oh I see this needs to get moved down to be above the public property.'
2775,217533788,b'soley ? Typo?'
2775,217534383,"b'I think we can write this a bit cleaner:\r\n`cutoffFrequency = Mathf.Clamp(value, 10.0f, 22000.0f);`'"
2775,217536444,"b""Shouldn't this be in core interfaces?"""
2775,217536965,b'We should probably move this into core as well.'
2775,217537105,b'This could also be a property.'
2775,217537136,b'for loop?'
2775,217537210,b'for loop?'
2775,217537283,b'for loop?'
2775,217537381,b'missing a /'
2775,217537573,b'const?'
2775,217537592,b'const?'
2775,217537731,"b""For some reason I'm getting a strong vibe that we should be making an interface for this and putting it in core so people can implement their own kinds of influencers."""
2775,217542436,"b""let's rename it anyway so we don't get build warnings"""
2775,217542507,"b""(I'm also not keep on using pragma to hide it)"""
2775,217542607,b'between'
2775,217543015,b'![image](https://user-images.githubusercontent.com/13334553/45517425-f337d280-b762-11e8-8f4c-2d28f2c5943e.png)\r\n'
2775,217545059,b'` var lowPass = soundEmittingObject.EnsureComponent<AudioLowPassFilter>();`'
2775,217545203,b'We could move the docs to the interface and then inherit them here.'
2775,217545275,b'Same thing about inheriting the docs from the interface'
2775,217545689,"b""I'm not keen on this as `GetComponent` is rather expensive and we're calling this a lot in an Update loop. Perhaps we should change this into an event based system with an `IAudioInfluencerHandler`"""
2784,217550865,"b""Isn't this the same as the ControllerPoseSynchonizer?"""
2784,217551052,b'Not sure this is a good idea.'
2784,217551128,"b""The device layer shouldn't know about anything in the scene."""
2784,217551191,b'Same comment here.'
2784,217551319,b'If anything we should be inheriting form the pose synchronizer.'
2775,217566027,"b""If it's optional why do we attempt to get it then add one if it doesn't exist?"""
2775,217566353,b'`loFiSelectionRenderer` or similar I suppose. Other suggestions welcome.'
2775,217566475,b'we could do the same here with clamp function.'
2775,217566606,"b'> The occluder cannot cache the emitter as it may change when the user moves around the scene,\r\n\r\nSounds like we should be using our event system to handle these kinds of things.'"
2775,217566799,"b""Why not? Seems like something that should be. What if a developer whats to make their own influencers?\r\n\r\nWhat's the advantage of using the interface if we're not going to let people use their own concrete implementations?"""
2784,217567870,"b""Sure, I'll open a PR"""
2775,217568165,"b""Link?\r\n\r\nI'm not sure that this is something we'll ever change, so I think const is okay here.\r\n\r\nAgain I'll leave it up to your discretion. """
2775,217568274,"b""Let's move it into core and use the event system. We should stick to our patterns we've set for the MRTK and not worry about how we've done things in HTK."""
2775,217568365,b'No worries! Just wanted to double check :)'
2775,217569152,b'It is def a property `get` in the name says it all.'
2775,217570196,"b""I disagree, as we're using an interface and using the event data would help keep us from having to get components (which is rather costly)"""
2775,217570594,"b'Correct, so then we can use the proposed `EnsureComponent`'"
2775,217570771,"b""Under the hood the method does exactly what's written:\r\n\r\n```\r\n        public static T EnsureComponent<T>(this GameObject gameObject) where T : Component\r\n        {\r\n            T foundComponent = gameObject.GetComponent<T>();\r\n            if (foundComponent == null)\r\n            {\r\n                return gameObject.AddComponent<T>();\r\n            }\r\n\r\n            return foundComponent;\r\n        }\r\n```"""
2775,217571336,"b""> my bar is that properties should not do very much work (set a value, get a value, validate parameters). this is due to properties looking and feeling like a field... there should be minimal if any side effects\r\n\r\nThat seems to check all the boxes in this case, but I'll leave it up to you."""
2775,217571448,"b""Logically it's no different though. (even from a compiler point of view)"""
2775,217572908,"b""Then what's the apprehension to adding it to core? """
2775,217574294,"b""I suppose we'll have to see when the GC kicks in and we get stalls on HL or another mobile device. \r\n\r\nIn either case, we should at least take a look at what this might look like instead of dismissing it bc it's different than the way it was originally written. Remember the MRTK is not the HTK."""
2775,217574381,"b'I would argue that audio is a pretty core feature, esp for mixed reality applications.'"
2775,217575009,"b""Indeed, but in that case, shouldn't we be registering it as a `IMixedRealityComponent` so we know we're adding it to the correct platforms?\r\n\r\nI don't see us checking SDK's or plugins in this PR, but we do set it, but what if we're not targeting WMR platform?"""
2775,217575873,"b""Good question, bc if they aren't why are we setting the HTRF spatializer?\r\n\r\nAnd - How are we handling platform switching if we are setting the spatializer?"""
2775,217576800,"b""Okay, well what about devs who import the MRTK into their project? Will they have to manually set it as well? Do we have a way to warn them if it's unset? or if their platform is unsupported?"""
2775,217576876,b'How do we handle other spatializers for other platforms? would this demo still apply?'
2775,217578892,"b""Still seems like something we should bring into core so people can create their own concrete types for. I don't see the advantage of having an interface if we're using it for a single implementation."""
2775,217579566,"b'Because they might not have the SDK. Remember, the SDK is only an interpretation of the interfaces, which are all part of the framework.'"
2775,217581595,"b""I don't think you guys understand the point I'm trying to make. \r\n\r\nEither we use an interface and we move it to core, or we keep a concrete type and remove the interface."""
2775,217582119,"b""It's a requirement per the architectural agreement we laid out before we started."""
2775,217583274,"b'https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/MRTK-vNext.md#objective\r\n\r\n>A Building block style front end interface that is easy for new users to construct new Mixed Reality solutions easily, whilst still providing an open framework for intensive developers to consume.'"
2775,217583421,"b""> It is not a catch-all layer, nor should it be, as the size of the core should be kept as minimal as possible.\r\n\r\nAgreed, which is why it's only and interface defining the structure, not the concrete implementation."""
2775,217583576,"b'Essentially this file belongs in the ""interface layer""'"
2775,217592852,"b""I just want to make it clear that we're not just dragging and dropping code from the htk.\r\n\r\nWe need to be thoughtful of the way we've structured things, and make sure we're sticking to what we agreed on with the initial proposed architecture."""
2779,217705783,b'Not sure read only fields apply here. I think those are fine to be public/protected as they can not being changed at runtime.\r\n\r\nThe principal goal here is ensuring proper encapsulation.'
2784,217708234,"b'Easy, use the pose synchronizer'"
2784,217708360,"b""Those requirements being?\r\n\r\nHow _exactly_ is it incompatible? I don't understand."""
2784,217752146,"b""Exactly the scenario you're proposing."""
2784,217754596,"b""I'm not sure how I can get more specific as we've clearing pointed out everything wrong in other sections of the comments and issues related to this. I'm going to politely ask you not to work on this anymore, as I'm not entirely confident you understand the implications of the changes you're requesting to make."""
2784,217769977,"b""Why add this if we're not using it?"""
2789,217920495,"b""You can still set any transform to track, this is just a read only value of the currently tracked transform's type."""
2784,217922369,b'see https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2784#issuecomment-421424132'
2795,217922541,b'read only list?'
2795,217922597,"b""Just that there's only ever one list, created when the MRM is created."""
2795,217922667,"b""Should we add the `TrackedObjectType` to this? \r\n\r\nMight make it easier to determine the type of object that's registered."""
2795,217922686,b'for?'
2795,217922714,"b""Oh I see, instead of using the `TrackedObjectType` we just get the controller's handedness. """
2795,217922735,b'Why not inherit from `BaseInputHandler`?'
2795,217922950,b'Not so keen on the name either. `MixedRealitySceneGameObjects`?\r\n\r\n`object != Object != GameObject`'
2795,217923432,"b'We should probably be checking if the controller is null as well, just in case. Changing to a for loop might make that a bit simpler.'"
2800,218205734,"b""Test scenes shouldn't be in the SDK"""
2800,218206364,"b""Not sure we should be using Unity Events. We've got a pretty solid event system we're already using that doesn't require uGUI."""
2801,218209774,"b'I suppose I could make this an extension, but this class is supposed to be self sufficient as it runs before all other MRTK assemblies are compiled by Unity.'"
2800,218211351,"b"">the main point is that designers can hook them up without code.\r\n\r\nDef agree! Let's sync and discuss how we can accommodate this.\r\n\r\nMy other goal as well is to try and not be dependent on unity gui as well. That's mainly for 2d screens and wasn't really designed with 3d in mind."""
2800,218219895,"b""Oh, I thought that because we were using unity events that they it was strictly uGUI based. In that case, we can def try to stick to the handlers we've setup (very similar to old HTK input). We should still be able to setup events in the inspector without any code. (take a look at PointerClickHandler and SpeechInputHandler classes as examples). We can still use unity events in a small capacity where needed, but I'd like to make sure we're just exposing the fields we need to reference when handling events. """
2800,218220601,b'Take a look at [my comments from this issue related to Unity Events](https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/876#issuecomment-323417651)'
2800,218223033,"b""I def love where this is going, and there's a ton of awesome work you (and I'm sure others) have put into this. I'd like to dig in a bit more before I add any additional feedback. """
2789,218256156,b'I can see how that would be useful.'
2795,218283560,"b""Eric, I think you nailed it right on the head. I'm down to update the terminology to better reflect mvvm."""
2804,218482055,b'`OnDrawGizmosSelected` only gets called in the editor anyway. Do we have editor specific code in this ifdef?'
2804,218482395,"b""This doesn't look good. Event data should only be created by the input system."""
2804,218498182,"b'this could be multiple pointers, correct?'"
2804,218499019,"b'The base input handler already does this kind of stuff. We could make `IsFocusRequired` virtual in the base input handler and override it in this class, then just call the base.'"
2804,218499146,b'bioList? haha'
2804,218499716,"b'Not sure how I feel about making ""clone"" methods of the handlers. What\'s the advantage here?'"
2804,218500970,b'Please do!'
2804,218508040,"b""I don't see why we can't just handle everything in the handler implementations. No need to duplicate methods.\r\n\r\nWe can make all the handler methods virtual and override them just like the ones you've got here."""
2804,218508446,b'Take a look at the [`BaseFocusHandler`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit-SDK/Features/Input/Handlers/BaseFocusHandler.cs)'
2804,218509271,"b""We could make the `IsFocusedRequired`'s set accessor protected"""
2804,218512046,"b""So we're removing the check if the event is valid, then passing that on to the derived classes via the protected methods, correct?"""
2804,218515331,"b""Alright, I think that's okay, but the methods seem redundant (as you could still do the same things with a base call to check the validity). I'm interested in what others think as well."""
2795,218564848,"b""It does't change the timing of the order of operations."""
2795,218564926,"b""But if it is awaited, then yes, it'll delay any method calls after the await."""
2804,218565465,"b""Let's be sure to add the summary statement as well ( I know it's kinda redundant, but it's part of our coding guidelines )"""
2804,218618095,"b""Not really sure we need another interface here. It'd just be a copy of all the handers anyway"""
2804,218667535,"b""I'm not sure we want to allow people to set a new list. We can make this a getter only as it doesn't prevent people from modifying the list."""
2804,218667573,b'same idea here'
2804,218671309,b'You should still be able to accomplish this with the read only property (as the inspector is reading the private field anyway)'
2804,218672154,"b""You should still be able to add/remove items from the list as well. Having a get only accessor just means someone can't make a new list and set it (effectively overwriting whatever was there)."""
2804,218883426,b'do we need a region with only one field?'
2804,218883597,"b""I'd much rather sort the regions by monobehaviors and interface implementations"""
2804,218925481,"b""Hmm, no but maybe it's something we should add."""
2804,219004072,"b""let's be sure to add the region's name to the end as well."""
2804,219004142,"b""Please take a look at any of the pointers to see how we've broken out the regions by interface"""
2804,219004216,b'extra line'
2804,219004230,b'extra line'
2804,219004244,b'extra line'
2804,219004256,b'extra line'
2804,219004394,"b""I know this is a bit nit picky but let's be sure to keep the spacing consistent as well in our project. \r\n\r\nPlease, also add the `/// <Ineritdoc/>` xml tag for any interface implementations."""
2812,219224247,b'Event Data'
2812,219226243,b'HandLer -> Handler'
2809,219257405,"b'I\'ve always felt that the ""Behaviour"" suffix seemed redundant.\r\n\r\n`DiagnosticsHandler` seems much more focused and describes its function.'"
2804,219540983,b'Good catch'
2804,219551170,b'unused?'
2809,219607147,"b'Do we want to make this internal, or just sealed?'"
2809,219607239,b'missing private accessors per coding guidelines'
2809,219607292,"b""We're making a new string builder on each update?"""
2809,219607432,"b""let's get rid of all these new keywords in our update loops.\r\n\r\nWe can cache and update a lot of this stuff."""
2809,219643696,"b""we can create it, then check if it's not null after."""
2809,219643991,"b""Just not sure we should have any allocations in update loops.\r\n\r\nI think keeping the same string builder around and just clearing it in each update loop is a bit better. Idk, I suppose we'd have test the comparison."""
2823,219649190,"b""I'm wondering how many of these enums are pretty generic that we can stick them in the core?"""
2809,219650256,"b""We also need to be aware that imgui is depreciated and it's most likely getting taken out of the core Unity Engine soon."""
2824,219672288,"b""It didn't before"""
2824,219672350,b'Yeah I only intended to put core managers here.\r\n\r\nI already do something similar in the input profile to get dictation and speech manatees l managers using the discovery system.'
2824,219676695,"b""I didn't want to make any logical changes, just refactor."""
2824,219676758,"b'I really should have just updated all the root references to the different systems, but I wanted people to use the ideal way to access the core systems via the Mixed Reality Manager.'"
2823,219916286,b'can we make these summary tags?'
2823,219916409,"b'we also need to initialize our enums \r\nEx:\r\n`MeshFilterBounds = 0,`'"
2823,219926441,"b'This seems really generic, can we possibly move this into core?'"
2829,219997046,b'Formatting seems a bit broken here. Did you change to tabs instead of spaces?'
2829,219997431,"b'Which way is ""North""? \xf0\x9f\x98\x85 \r\n\r\nI wonder if we can come up with a better direction indicator based on X,Y,Z directions. '"
2829,219997526,b'comments should be summary tags.'
2829,219997697,b'bad formatting here as well.'
2829,220002282,b'I think we might already have an enum that has something similar? Not really sure.\r\n\r\nI think this might be a good one to make generic.'
2829,220019784,"b'Most of our enums are in ""Core/Definitions""'"
2809,220026439,b'internal?'
2809,220026772,"b""Instead of making a new one each time, and we know we always have 10 in our array, why not just reuse the ones we have if we've already filled the array?"""
2809,220026878,b'our sum MemoryReading could also be reused each time.'
2773,220043080,"b'Maybe in the mixed reality manager, when we setup the camera profile?'"
2836,220361317,b'Component Registration?'
2840,220715019,"b""Do we want to agree on a naming convention here?\r\n\r\nThere's been talk of using proxy vs visualization"""
2840,220727923,b'@Ecnassianer Do you see the pattern we already have established?'
2840,220771396,"b""It's a naming pattern we've already established using visualization vs proxy as the game object reference.\r\n\r\nI do like proxy a bit more, as it's just a reference to the game object, not the things being rendered (the renderer component comes to mind here)"""
2840,220774755,b'Just trying to figure out what pattern we want to stick with. \xf0\x9f\xa4\x94'
2840,220778188,"b""They're both game object references.\r\n\r\nI just wanna make sure we're on the same page about how we want to talk about and reference these things."""
2840,220779559,"b'Naming is pretty important to the idea of a concept or thing. \r\n\r\nI don\'t really see a difference here.\r\nI see them as pretty much the same concepts.\r\n\r\nWe have a game object reference that doesn\'t actually do any ""visualization"" but it\'s a stand in (proxy) for the concept as a whole.\r\n\r\nIf we wanted to be specific that it\'s actually ""visualizing"" something the field type should reflect that by being a renderer or something that does the rendering in the scene.'"
2840,220781113,"b""That's the thing tho. It's not text. It's a game object."""
2840,220784134,"b'But they\'re similar in the fact that they reference a thing in the scene, and that reference doesn\'t actually do any ""visualization"" or rendering of said thing.'"
2840,220788410,"b'No, just the ones that have ""visualization"" or similar as the name.'"
2839,221056643,"b""For now, let's try to keep it just to documentation."""
2848,221107021,"b""Seems like this might be a `IMixedRealityComponent`? Although I think it's fine here at the moment. Thoughts?"""
2848,221107167,b'what prompted the change from `uint` to `int` type?'
2848,221108042,"b""I'm wondering if we want to get it from the profile, or the manager (as discussed in the shiproom last week)\r\n\r\nI don't think we had an in depth discussion about it. I could go either way."""
2824,221111644,b'We check for null before we call `AddMarkers`'
2824,221111689,b'We check for null before we `AddMarkers`'
2824,221111771,b'We check for null before we `AddMarkers`'
2824,221112168,b'we now await until input system is valid'
2824,221112282,"b""We wouldn't get this event called without an input system in the first place. Null check is redundant. """
2824,221112383,b'receiving a Pointer event means we have a valid input system.'
2824,221112503,b'Fixed'
2824,221112545,b'We check on the line above.'
2824,221112647,b'Fixed'
2833,221112906,"b""We don't need it bc we wait until the input system is valid in the line below on \r\n\r\n`await WaitUntilInputSystemValid;`"""
2833,221113451,"b""> Which means it will sit forever in this loop.\r\n\r\nIt's not a loop, as it's just a continuation. No overhead there.\r\n\r\nBesides why would you disable the input system then put something that depends on the input system directly in the scene yourself unless you're asking for trouble?"""
2812,221114556,"b'Yes. and we already do, so long as we can get mouse support back on the config profile. (pending bug fixes)'"
2848,221114638,b'Seems to make sense. I second that.'
2773,221122579,b'This is a pretty important feature to our one click setup.\r\n\r\nI am definitely not for just merging it and revisiting it next week.'
2852,221274917,"b""I'm not sure we want to bring this over. """
2852,221276870,b'More font shaders?\r\n\r\nDo we want to put these in standard assets?'
2852,221277115,"b'missing explicit access modifiers, should be `private`'"
2852,221277284,b'All fields should be private with public property accessors is needed.'
2839,221338613,b'`IMixedRealityNetworkSystem`?'
2839,221338909,"b""Also, why are we going to set it to photon by default?\r\n\r\nShouldn't we have it set to either uNET (as it's built into the editor) or our planned WebRTC default?"""
2859,221389949,b'`public interface IMixedRealityFoo`'
2859,221390242,"b""Let's also add examples of other interfaces that are defined in the framework like `IMixedRealityController` or some other.\r\n\r\nAlso, I think only being able to get a collection is good, do maybe the example should be a getter only? We probably don't want a collection to be completely changed outside of the class implementation."""
2859,221398559,"b""I'm okay with adding or removing an item from a collection, but I'm not as keen on replacing the whole collection with a new instance."""
2859,221405529,"b""I'm fine with that as long as we're not requesting copies in hot code loops"""
2869,221786826,"b""Depends. We don't want to disable the return to profile button, but I suppose I could make this a simpler flag that is exposed in the base.\r\n\r\nDo you also want me to update all the other inspectors with this PR as well?"""
2869,221789692,"b""I tried to put it in the base initially, but it's not trivial."""
2855,221965764,"b""I'd like to get rid of the unity events entirely if possible, but keep the simple editor assignments"""
2872,222136785,b'Is this dll to be replaced by direct windows api calls?'
2872,222136885,b'Is the source for this dll availible or in the native MRTK repo?\r\n\r\nOr is this something that will be replaced by native windows api calls?'
2872,222137139,"b""private fields with property accessors.\r\n\r\nWill we be able to update this game object after we've attached?\r\nIf we set a new game object, do we need to do any additional processing?"""
2872,222137200,b'missing explicit accessor modifier `private`'
2872,222137244,b'missing explicit accessor modifier `private`\r\n\r\nWe can also loose the boilerplate comment.'
2872,222137295,b'missing explicit accessor modifier `private`\r\n\r\nWe can also loose the boilerplate comment.'
2872,222137376,b'Might be a better way to look for the transforms.'
2872,222137932,b'missing access modifier'
2872,222137975,b'Always runs?\r\n\r\nWhat updates this?'
2872,222138052,b'missing licence and could be cleaned up a bit.'
2872,222138091,b'classes should be in their own files'
2872,222141320,b'Old HTK does not use c# 4 language features. I think the .NET support is only 3.5 '
2872,222142984,"b""We don't have those c# language features availible in the old HTK"""
2872,222143253,"b""Agreed, I think the async utilities doesn't play nicely with the lock as well bc of the way [Unity's synchronization context is implemented](https://github.com/svermeulen/Unity3dAsyncAwaitUtil/issues/10). (But we won't need to worry about that until we bring this over to MRTK and if we make this method asynchronous)."""
2872,222149574,"b"">We could get in a state where the thread locks waiting for the queue to drain while continually adding work.\r\n\r\nThat's exactly why I ended up fixing it in my own synchronization context implementation.\r\nWhich actually keeps track of the number of items in the queue and only dequeues that number when it's locked."""
2872,222150719,"b""```c#\r\n        internal static void Post(Action task)\r\n        {\r\n            lock (_Actions)\r\n            {\r\n                _Actions.Enqueue(task);\r\n            }\r\n        }\r\n\r\n        // Unity's own mono update\r\n        private void Update()\r\n        {\r\n            int actionCount;\r\n\r\n            lock (_Actions)\r\n            {\r\n                actionCount = _Actions.Count;\r\n            }\r\n\r\n            for (int i = 0; i < actionCount; i++)\r\n            {\r\n                Action next;\r\n\r\n                lock (_Actions)\r\n                {\r\n                    next = _Actions.Dequeue();\r\n                }\r\n\r\n                next();\r\n            }\r\n        }\r\n```"""
2852,222341500,"b""Why don't we just use tmpro? It's free and looks a lot better."""
2853,222344986,"b""I'd really like to do that if we can. Hopefully I'll get some time to do a deep dive and open a PR with any suggestions there."""
2855,222348499,"b"">We need a way for designers to wire things up in the editor without code. \r\n\r\n100% yes. We will definitely have a system that allows you to do very similar things.\r\n\r\nThere's a few concerns with Unity events:\r\n\r\n- They're really hard to set and use in code in a dynamic way (like the lines below this thread)\r\n- You can only set a single parameter in the editor\r\n- When debugging them, it's hard to trace the full stack through the entire input system\r\n- They have considerable overhead and performance costs\r\n- If their static serialized references get broken they silently fail."""
2855,222357125,"b""That's a good point.\r\n\r\n@killerantz have you set up tasks for your interactable features yet for us to discuss requirements and acceptance criteria?"""
2855,222399703,"b""I'm not saying we should rewrite things, I'm just saying we should discuss implementations before adding it. \r\n\r\nBesides, from the comment on the line, it seems that it doesn't really work anyway?\r\nSo finding an alternative is preferable. Especially one that takes into account the issues I brought up above."""
2837,222502711,"b""yeah I also noticed that the spacing was strange, but I'm not sure what's going on because I'm only adding a single space. Maybe Unity is increasing the word spacing in the label somehow?\r\n\r\nDo you have any suggestions on a default description? I'm more than willing to accommodate that.  Maybe `Spatial Controller <handedness> Hand`?"""
2837,222510971,"b""Yup I just noticed that. I'll be sure to fix it as well."""
2837,222511002,b'Fix incoming'
2773,222781440,b'I feel like this method is a bit too vague to be in the Mixed Reality manager.'
2837,222781767,"b""I'll be sure to fix. Thanks."""
2879,222859382,b'This seems dangerous \xf0\x9f\x98\x85 '
2879,222859706,b'Usually registry editing is fairly advanced.'
2879,222861090,"b'No worries, that that is helpful. Not a blocker by any means, but it was curious to see.'"
2774,222863304,b'Could we rename this to be something a bit more specific?'
2784,223147420,"b'Just to clarify this class is meant to be used on GameObjects that are looking for controllers, not the controller itself, correct?'"
2902,223892414,b'This file needs to be reverted.'
2902,223892515,b'another superfluous change that can get reverted.'
2902,223892577,b'also not an important change'
2902,223895026,b'Should be opened in its own PR'
2903,223897553,b'Be sure to set an Icon :)'
2902,224508020,"b""I'm intending to do so."""
2920,226714049,"b'```suggestion\r\n            Vector3 initialDraggingPosition = MixedRealityManager.InputSystem.FocusProvider.TryGetFocusDetails(currentPointer, out focusDetails)\r\n```'"
2839,226742485,b'please revert'
2839,226742502,b'please revert'
2839,226833497,b'Where is this file?'
2839,226834286,"b'We shouldn\'t be using Singleton. Please update this to use a `IMixedRealityNetworkingSystem` that inherits from `IMixedRealityService`. Then register it in the ""Additional Service Providers Profile""'"
2839,226834295,b'Whoa? Send Message?'
2839,226834316,"b""Let's have a `None = 0,` initializer"""
2902,226834443,b'```suggestion\r\n            if (UsbDevicesChanged != null)\r\n            {\r\n                UsbDevicesChanged.Invoke(devices);\r\n            }\r\n```'
2951,226856723,"b""Don't like start from scratch?"""
2951,226856727,b'Both technically create a new profile.'
2951,226874666,"b'```suggestion\r\n                if (GUILayout.Button(""Create new profiles""))\r\n```'"
2951,226874684,"b'```suggestion\r\n                                        ""You can use the default profiles provided, copy and customize the default profiles, or create your own."", MessageType.Warning);\r\n```'"
2917,227067187,"b""- Is this meant to be a demo script?\r\n    - If not, should we rename it `BaseMixedRealitySpatialAwarenessMeshHandler `? \r\n- Do we intend to have people inherit from this class or use the interface outright? (I tend to lean for the latter, but if this is in the SDK it's fine to have)\r\n    - If we do intend for people to inherit from this class we should make the interface methods virtual, so they can be overridden.\r\n"""
2917,227067468,b'Seems like this should be changed in the main branch.'
2917,227068310,b'Should this be part of the interface?'
2917,227068403,"b""Shouldn't this also be part of the interface?"""
2944,227070908,"b'Yes, but we only set the name once we create the pointer, so I doubt that can ever really happen.'"
2917,227071887,"b""Let's keep the PRs focused. """
2920,227097263,"b""Depends on if the pointer handles the event or not. We still check if the event is used.\r\n\r\nIf it's not used, then it should go to every handler as intended by the developer."""
2920,227099619,"b'If the developer gets duplicate events, then they need to mark the eventData as used.'"
2953,227107151,"b""shouldn't this return null?"""
2953,227107258,b'(same question for similar returns)'
2920,227108772,"b'>Previously, this was fine because the modal object would only receive one event. Now, it will receive one for every pointer.\r\n\r\nThis doesn\'t handle ""modal"" input, only handles the currently focused objects. So there is no impact there.  If a GameObject is focused by two different pointers, then it should get both events, unless the first event is consumed.'"
2920,227111074,"b""Good catch, I didn't notice right away.\r\n\r\nMaybe we should check if the `modalInput` is the same as the `focusedObject`?\r\n\r\nThoughts?"""
2920,227111404,b'```suggestion\r\n                    GameObject modalInput = modalInputStack.Peek();\r\n\r\n                    if (modalInput != focusedObject) { continue; }\r\n```'
2917,227113597,"b""@SimonDarksideJ I'm looking at you for our verbose naming conventions \xf0\x9f\x98\x9d lol"""
2920,227118275,"b"">If we take the above suggested change, modalInput will never get the event unless it's also the focusedObject, which goes against the purpose of the modal input stack.\r\n\r\nYikes, yeah can't do that. \r\n\r\n> The event should be sent to the modal object once, probably before the pointers are iterated through.\r\n\r\nThe only way to get the focused object is with a pointer reference, and we could potentially have multiple focused objects.\r\n\r\nI'm fairly certain that most (if not all) modal inputs consume the event."""
2920,227122448,"b""I've got an idea. One tick. """
2944,227126225,"b'```suggestion\r\n                if(gameObject == null)\r\n                {\r\n                    Debug.LogError($""{pointerName}\'s GameObject reference is missing!"");\r\n                    return;\r\n                }\r\n                \r\n                gameObject.name = value;\r\n```'"
2917,227132831,b'```suggestion\r\n        public virtual void OnMeshAdded(MixedRealitySpatialAwarenessEventData eventData)\r\n```'
2917,227132891,b'```suggestion\r\n        public virtual void OnMeshUpdated(MixedRealitySpatialAwarenessEventData eventData)\r\n```'
2917,227132949,b'```suggestion\r\n        public virtual void OnMeshRemoved(MixedRealitySpatialAwarenessEventData eventData)\r\n```'
2917,227133109,"b""```suggestion\r\n         public virtual void OnSurfaceAdded(MixedRealitySpatialAwarenessEventData eventData)\r\n```\r\n\r\nI can't add a suggestion for later lines but they need to be updated as well."""
2921,227184010,b'So that I can use it in the other static contexts where it is needed.'
2921,227184687,"b'Sure, two lines below, in the [readonly fields where we setup our async helpers.](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2921/files#diff-ee543afc5d05dda8c9247ad49c1ab8e7R67)'"
2921,227184789,b'There should never be more than one dictation recognizer or `WindowsDictationInputDeviceManager` running in an application anyhow.'
2922,227434821,"b""I heavily adjusted the namespaces and resharper cleaned them up automatically. I don't think it's worth the effort to pull them out separately."""
2963,227969372,b'```suggestion\r\n            var playspace = MixedRealityToolkit.Instance.MixedRealityPlayspace;\r\n```'
2963,227969528,b'```suggestion\r\n                       var playspace = MixedRealityToolkit.Instance.MixedRealityPlayspace;\r\n```'
2963,227969572,b'```suggestion\r\n                       MixedRealityToolkit.Instance.ActiveProfile = configurationProfile;\r\n```'
2948,228379762,"b'```suggestion\r\n            Debug.Log($""Attempting to uninstall {packageName} on {targetDevice.MachineName}..."");\r\n```'"
2976,228523453,"b""Will do. And yes, I'd like us to use is assignable from."""
2981,228555456,b'```suggestion\r\n```'
2981,228555763,"b'```suggestion\r\n                if (!RegisterService(typeof(IMixedRealityInputSystem), Activator.CreateInstance(ActiveProfile.InputSystemType.Type) as IMixedRealityInputSystem) ||\r\n```'"
2981,228555899,"b'```suggestion\r\n                if (!RegisterService(typeof(IMixedRealityBoundarySystem), Activator.CreateInstance(ActiveProfile.BoundarySystemSystemType.Type) as IMixedRealityBoundarySystem) ||\r\n```'"
2981,228555962,"b'```suggestion\r\n                if (!RegisterService(typeof(IMixedRealityTeleportSystem), Activator.CreateInstance(ActiveProfile.TeleportSystemSystemType.Type) as IMixedRealityTeleportSystem) ||\r\n```'"
2981,228556030,"b'```suggestion\r\n                if (!RegisterService(typeof(IMixedRealityDiagnosticsSystem), Activator.CreateInstance(ActiveProfile.DiagnosticsSystemSystemType.Type) as IMixedRealityDiagnosticsSystem) ||\r\n```'"
2981,228556110,"b'```suggestion\r\n                            if(!RegisterService(typeof(IMixedRealityExtensionService), Activator.CreateInstance(configuration.ComponentType.Type, configuration.ComponentName, configuration.Priority) as IMixedRealityExtensionService))\r\n```'"
2981,228556889,"b'Instead of trying the catch the exception, let\'s do a check if it is assignable from `IMixedRealityExtensionService` and return false if not.\r\n\r\n```\r\nif (!typeof(IMixedRealityExtensionService).IsAssignableFrom(type))\r\n{\r\n    Debug.LogError($""Unable to register {type}. Concrete type is missing IMixedRealityExtensionService implementation."");\r\n    return false;\r\n}\r\n```'"
2981,228561176,b'These are optional'
2981,228561191,b'These are optional'
2981,228561204,b'These are optional'
2981,228561217,b'These are optional'
2981,228561231,b'These are optional'
2981,228563414,b'```suggestion\r\n                if (!typeof(IMixedRealityExtensionService).IsAssignableFrom(type))\r\n```'
2985,228658274,b'what about `WINDOWS_UWP`?'
2985,228661263,"b'No worries, I was just curious.'"
2951,228673032,"b'```suggestion\r\n                        profile.CreateAsset(""Assets/MixedRealityToolkit-Generated/CustomProfiles"");\r\n```'"
2985,228679197,"b""Here's one of those cases were we're not being consistent with the compiler define symbols. Will this affect the project?"""
2985,228681617,"b""No worries, I just want to make sure we're using these correctly. Only difference from docs is that it's also targeting .NET Scripting Backend.\r\n\r\n[Unity Docs](https://docs.unity3d.com/Manual/PlatformDependentCompilation.html)\r\n\r\nUNITY_WSA | #define directive for\xc2\xa0Universal Windows Platform. Additionally,\xc2\xa0NETFX_CORE\xc2\xa0is defined when compiling C# files against .NET Core and using .NET\xc2\xa0scripting backend.\r\n-- | --\r\nUNITY_WSA_10_0 | #define directive for Universal Windows Platform. Additionally\xc2\xa0WINDOWS_UWP\xc2\xa0is defined when compiling C# files against .NET Core.\r\n\r\n"""
2985,228682898,"b""That's exactly what I was looking for! \r\n\r\nThanks :)"""
2985,228682975,"b""I don't think we have this section in vNEXT. """
2988,228700815,"b""Yes. Absolutely. Or else the rest of them wouldn't work."""
2988,228702228,"b""If it didn't exist, then the rest wouldn't work.\r\n\r\nNot much to explain."""
2988,228702321,"b""If this script wasn't in it's own assembly and loaded first then the rest of the MRTK wouldn't load properly."""
2951,228723553,b'```suggestion\r\n```'
3001,228746788,"b""This doesn't need to be serialized."""
3001,228746803,"b""Moving the order of the properties doesn't change it's layout in the inspector"""
3011,229112925,b'```\r\n/// <inheritdoc />\r\n```'
3011,229112953,b'revert'
3011,229112989,b'revert'
3011,229113020,b'revert'
3011,229114787,"b'Sorry, thought it was the opposite haha'"
3011,229114893,b'Was rendering strangely. Updated with code block.'
3011,229122028,"b""Yes, replace the summary here. It's pointing to the interface documentation, so don't replace it there."""
3011,229130230,"b'oh yes, thanks :3'"
3024,229293216,b'It will still throw the assert about the missing main camera tag. I was actually wondering if we should just add it for them? '
2978,229426134,b'Why do we have commented out code?'
2978,229426734,b'all fields should be private. Protected/public property accessors are okay.'
3034,229461761,"b""Because nothing outside of this assembly should be calling on this.\r\nNo one should be using this class except for the utilities. That's why it's in the internal folder."""
3034,229463028,"b""Yes, it's one less thing that has to recompile, and adds a bit of security to the async utilities, as there were a few public methods and classes that should have been internal when I initially wrote it."""
3034,229463821,"b""Yes and that's exactly what they get with this change."""
3034,229466335,"b""No, as they shouldn't be directly using this class, because it's an implementation detail of the overall utility.\r\n\r\nIt's to protect the integrity of this system and its function."""
3041,229707569,b'Sounds funny out loud'
3041,229707941,b'Unity is also moving asset store to package manager at some point'
3041,229708611,"b""I think that link is incorrect? \r\n\r\nShouldn't the long hash at the end of the url be unique per user?\r\n\r\nJust checking"""
3041,229708923,b'Stabilization branch is on 14'
3041,229788895,b'```suggestion\r\nIt has been raised within the Mixed Reality Toolkit team that the package should be published to the Unity store.  Microsoft is in talks with Unity as to the best delivery options.  Likely this will be the Unity Package Manager.\r\n```'
3044,229817067,b'Does the bounding box need to be a global listener?'
3041,229818175,b'I think we recently added this type of link with the invite to the master and dev main pages. \r\n\r\nMaybe use that link?'
3041,229818342,"b""What's wrong with legacy?"""
3041,229834618,"b'```suggestion\r\nDon\'t worry though, you still control about when and how you update your project and can even ""Go back"" to a previous version of the toolkit at any time by simply checking out a specific commit or tag.\r\n```'"
3041,229835003,"b""Do we want to update this link with something more relevant? I'm not sure the update link is good. Maybe the archive link?\r\n```suggestion\r\n* [Unity 2018.2.13f1 +](https://unity3d.com/get-unity/download/archive)\r\n```"""
3041,229835467,b'Are making packages separate or all bundled together for beta?\r\n\r\nI was under the impression that each top level folder (and preview feature) is its own package.'
3041,229835827,"b'I think it would also be beneficial to show the MRTK Main configuration, as the toolkit will select it by default when pressing configure.'"
3041,229835892,b'Then show the scene hierarchy after'
3041,229835990,"b'```suggestion\r\n* Mixed Reality Toolkit - The toolkit itself, providing the central configuration and entry point for the entire framework.\r\n```'"
3041,229836304,"b""Maybe we should add warnings or errors when people move this?\r\n\r\nWe should probably do some similar check for the MRTK game object as we don't want people to move it or parent other game objects to it."""
3041,229836611,"b""Maybe take a screen shot of it locked. We don't want to give people the impression it's broken cause it's grayed out."""
3044,229840969,b'always false?\r\n\r\nSeems like we never get into the [else statement on 421](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3044/files#diff-9d24e517f2cbe677a5bbc1a01f74d2efR421)'
3044,229843726,"b""I'm not sure we should be hiding objects in the scene."""
3044,229843902,"b""As this is a generated object, I think it's okay."""
3044,229844485,b'Should we have also been keeping a list of handle renderers as well like we did above for corners and balls?'
3044,229845639,"b""I'm wondering how much of these methods could go into a math utility class"""
2978,229869250,b'This is an odd change'
3044,230524254,b'Most are unused'
3066,230753214,b'Likely yes as it was renamed in the shader'
3066,230753482,"b""Sorry, being nit picky, but do we really need to make this change? It's redundant."""
2978,230776132,b'Resolved in my PR I opened on his branch.'
2978,230776316,b'Fixed in my PR opened on his branch.'
2978,230776435,b'Added with my PR on his branch.'
2978,230776640,b'Easy enough to add property accessor as needed.'
2978,230776884,b'Addressed in my PR on his branch.'
2978,230776991,b'Also addressed in my PR on his branch.'
2978,230777045,b'Cleaned up in my PR on his branch.'
2978,230777130,b'Agreed. I already changed it to a debug error on the PR against his branch.'
2978,230777290,b'Added tooltips in PR against his branch.'
2978,230777542,b'Done in my PR on his branch.'
2978,230777821,"b""I'm pretty sure this change already made it into the dev branch. @JonathanPalmerGD please merge the latest changes after merging my PR on your branch. Thanks!"""
3086,231236300,"b'```suggestion\r\n                Debug.LogError($""Unable to find {type.Name}."");\r\n```'"
2978,231261096,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/CodingGuidelines.md'
3090,231515893,"b""If this feature is complete, then shouldn't continue to have a branch. Last I checked it made it back into development."""
3086,231687186,b'Why? These are much more important than the other where we check. This sort of thing is pretty serious and we should def always show this error no matter what.'
3051,231696189,"b'While yes I agree that we should be partitioning things into nice interfaces for ease of use, I am going to emphasize the fact that this is a requirement for this interface to implement _as a focus handler_.'"
3051,231700549,"b""> it seems more like an implementation-specific requirement.\r\n\r\nExactly.\r\n\r\n> Can you explain more about why this is a requirement?\r\n\r\nI thought that's what I've been doing with my previous replies. Now I feel like we're talking in circles. I'm not going to back down on this. It is a requirement."""
3086,231701664,"b""No, not in the way that you are proposing to use it.\r\n\r\nThe `showLogs` arg is only for when we attempt to re-check if a system is found.\r\n\r\nThe other errors are critical system failures that **shouldn't be silenced no matter what**."""
3066,231704557,"b'Glass material is still there, correct? Just replaced with a better one?'"
3099,232040386,b'That is correct.'
3102,232041113,"b""I'd rather not use an enum here as it removes the flexibility of the developer to determine the priority in a fine tuned, or fine grained way.\r\n\r\nI'm not sure why we choose 5, but it was a happy middle ground between 1 (Which the input system is bc it's critically important that it's initialize first) and 10, which is what all of the extension services are registered at. \r\n\r\nThis priority determines which order Initialize, Enable, Update, Disable, and Destroy are called on each service."""
3101,232384851,"b""This was causing large performance issues with memory allocations each time a service is not found, and searching continues (sometimes indefinitely).\r\n\r\n`null` is the appropriate response here to prevent these problems, and we're not decorating the methods with a `[NotNull]` attribute, so it's pretty much obvious that the returned value could potentially be null.\r\n\r\nWhen requesting a service by name, it's expected to return null if the service isn't found. Why should that be any different when we're searching for services of a specific type?"""
3101,232385946,"b""You do bring up a good point tho. This change isn't really related. I should probably add an issue and split this out into its own PR."""
3089,232392610,b'```suggestion\r\n* [feature/sharing_photon_preview](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/feature/sharing_photon_preview) - Photon Based networking / sharing solution\r\n```\r\n\r\nPer our conversation today in the MRTK Sharing Meeting'
3090,232392881,b'```suggestion\r\n* [feature/sharing_photon_preview](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/feature/sharing_photon_preview) - (@Sean0ng) Photon Based networking / sharing solution\r\n```\r\n\r\nPer our MRTK Sharing Meeting'
3101,232399786,"b'```suggestion\r\n                        Debug.Assert(instance.transform.childCount == 0, ""The MixedRealityToolkit should not have GameObject children!"");\r\n```'"
3113,232756840,"b""If you can figure out a way to do it, sure. I'm accepting PRs."""
3113,232756889,b'Same comment as above'
3113,232763129,b'Already planning on it.'
3113,232765590,"b""These likely need to be updated in the main branch. I updated all of the scenes, so I don't think it's fair to split these out. """
3116,232767244,"b""I don't understand. We no longer have a list."""
3116,232767517,"b'Agreed. I wasn\'t quite sure what to do there for that, as we need to ""select"" the scriptable object profile to get it to display. I\'ll see what I can do here.'"
3116,232777851,"b""I got rid of the list as it was a lot harder to manage the it and prevent multiple from being registered, but I'll see what I can do."""
3121,232816156,"b'```suggestion\r\n                message += ""\\nWould you like to make this change?"";\r\n```'"
3116,232847422,b'needs to be reverted and marked as obsolete.'
3116,232847807,"b'Oh, it seems I renamed the whole class. Need to stub that out and mark it obsolete too.'"
3143,233619705,b'What if users want to supply their own custom logging levels?'
3143,233620023,"b""I hope we don't have to go through each feature area and replace all our debug statements.\r\n\r\nif we do... \r\nI'd almost want to say each feature area should have it's own logging level, so some can be more verbose than others."""
3143,233620266,b'This cannot be removed and needs to stay.'
4468,285317159,"b'```suggestion\r\n                $""The Mixed Reality Toolkit requires Unity {MinUnityVersion} or newer (2018.3 will likely continue to work).\\n\\nUsing an older version of Unity may result in compile errors or incorrect behavior."",\r\n```'"
4468,285317232,"b'```suggestion\r\n        private static readonly string MinUnityVersion = ""2018.4"";\r\n```'"
6418,340828920,b'Why remove this?'
6418,340832616,b'It lead to confusion and concern when customers chose to _not_ include ar foundation in their project.'
6418,340833310,"b'i got a question about that line this morning, in fact.'"
6718,349844855,b'Should we make this part of the configurator instead?'
6718,349845478,b'not sure. what is the consensus from the reviewers?'
6718,349845596,"b'My thought is making this opt-in. We can gate everything around the presence of the adapter, with remoting / additional feature support (like autoplanar) gated behind an opt-in.'"
6718,349858792,b'tracking this with #6723 '
6891,358365673,"b"">string [](start = 12, length = 6)\r\n\r\nIt feels like this should be a const thing, though I don't know in this case if whatever version of .NET stuff that Unity is using will automatically optimize that."""
6891,362632339,b'fixed'
7131,370307199,"b'I feel like we do this `@""Library\\PackageCache"";` kind of paths in a lot of MRTK. Might be worth opening an issue to investigate?'"
7131,370327138,b'#7132 '
7288,377705404,"b""shouldn't the default be true as this was the original behavior?"""
7288,377724682,"b'Since this method hasn\'t shipped in a release yet, I decided to change the default while leaving the existing behavior around, since I think it can be useful in some cases.\nI can flip it around though! I do think the ""asset database only"" cases feels like the more common one to me (and thus made it the default), but I\'m good either way.\nI chatted with @davidkline-ms about this a bit, so tagging him here in case he has other thoughts.'"
7288,377786740,"b""@thalbern, i suggested @keveleigh default to false as this is a better default behavior (it allows for honoring Unity's hiding of the .<folder> pattern. """
7288,377786966,"b'Nit: Consider maybe searchAllApplicationData instead of searchFullFileSystem (because full file system.. is that like, root of the C: drive? Is it the ""/"" folder?'"
7288,377787952,"b""Yeah as long as we haven't already put this method in an existing release, we're fine to change as we want. \r\n\r\nI would even be open to not having the alternate behavior and introducing when needed (because we don't currently have a test for the alternate behavior, it could grow stale and not work)"""
6293,335228830,"b'Not a blocker for this PR, but I have some proposals going forward to move away from `EditorPrefs` wherever possible / it makes sense, and move towards ScriptableObject-based settings.\r\nThis way (going back to ""wherever it makes sense""), settings can be checked into source control and aren\'t local to a user. Something like this, which feels project-based instead of user-based.'"
6293,335229587,b'I was thinking the same thing going through this code.\r\n\r\nAlthough I feel like there needs to be a separation between user preferences (local to developer) and team preferences (saved via source control)'
6718,349844888,b'```suggestion\r\n                    // Go back to the start of the file.\r\n```'
6718,349844962,b'make this a const or readonly?'
6718,349844983,b'make this a const or readonly?'
6718,349845511,b'not a bad idea'
6718,349845523,b'not a bad idea'
6718,349856973,b'Do we need the reader for this or could we use [`File.ReadAllLines`](https://docs.microsoft.com/en-us/dotnet/api/system.io.file.readalllines?view=netframework-4.8)?'
6718,349857002,b'Similar question but [`File.ReadAllText`](https://docs.microsoft.com/en-us/dotnet/api/system.io.file.readalltext?view=netframework-4.8)'
6718,349858718,b'the reader lets us read each line for later writing one at a time.'
6718,349858727,b'please see above comment'
6729,350452420,"b""Path.Combine takes a param, you don't have to do this in two step, just pass in all three parameters into it."""
6754,352422643,b'Should this be `0.8.*` to match the csproj?'
6754,352422810,b'Do we want to be (can we be?) a little more specific here for the MSBuildForUnity scope? `com.microsoft` is pretty large.'
7216,374408435,"b""I think that we've already opened the file and read all of its contents at this point right? (i.e. manifestFileContents?)\r\n\r\nIf we're trying to be optimizing for stuff it might just be simple enough to read the stat of the file (i.e. size) and not do anything if it's empty. Otherwise there's no reason to read the same file multiple times. (i.e. in trying to be more efficient/smarter here, we're actually less efficient because we're reading the same file twice)"""
7216,374408861,"b""I was asking for tests, but FWIW I don't think that necessarily the file parsing parts are necessarily the most interesting - even having something that would take some expected strings (i.e. the manifest content) and run it through this code would probably be sufficient."""
7216,374408990,"b""What's the significance of splitLine[1]? i.e. leave a comment that this is the value in the KVP in the json file."""
7216,374409705,b'Nit: I feel like the old naming here was actually more appropriate especially given the comments (i.e. if no package was found add it the dependencies collection).\r\n\r\nThough I think in that case just changing the comment would also make things feel a little better.'
7216,374410114,b'we actually have always read the file more than once...'
7216,374410279,b'fair enough!'
7216,374410371,b'sounds good. thanks'
7216,374412196,b'sounds good. i will rework the code to make it more testable without needing to rewrite files repeatedly'
7230,374941115,b'```suggestion\r\n            // Attempt to split the version string into version and float components\r\n```'
7230,374942524,b'So these `if`s combined means we want `*-0` as a prerelease version to be more recent than any other prerelease date? Am I parsing that right?'
7230,374943053,b'if ()\r\n{\r\n    return true;\r\n}\r\n\r\nHere and below '
7230,374943637,"b""I always get a little weirded out when I see 0 equality checks using floats because of floating point comparison error, but in C# is it safe if you're comparing it against exactly the zero literal?"""
7230,374960105,"b""FWIW, I don't think the suffix is always going to be a float - I think it's an arbitrary alphanumeric thing right?\r\n\r\nA pre-release version number MAY be denoted by appending an arbitrary string immediately following the patch version and a dash. The string MUST be comprised of only alphanumerics plus dash [0-9A-Za-z-]. Pre-release versions satisfy but have a lower precedence than the associated normal version. Precedence SHOULD be determined by lexicographic ASCII sort order. For instance: 1.0.0-alpha1 < 1.0.0-beta1 < 1.0.0-beta2 < 1.0.0-rc1 < 1.0.0.\r\n\r\ni.e. it would just be alphabetical sorting after that.\r\n\r\nI don't think it's necessarily worth making the change right now but going forward we should just reference the spec where they are spec defined."""
7230,374961536,b'will do.'
7230,374961957,b'correct. -0 is not a valid prerelease in our format.'
7230,374962505,"b'this is a parsed/preset 0 literal, so i presume so. i can do some more investigation'"
7230,374963465,b'this is based 100% on the format used by MSBuild for Unity. I fully agree that a more robust system should be explored'
7230,374968727,b'done'
7230,374972472,"b'based on https://docs.microsoft.com/en-us/dotnet/api/system.single.equals?view=netframework-4.8, since we are explicitly setting the value (ex: via parse) and are not calculating it, a direct check against 0 should be safe.'"
6315,337292126,"b""Everything else in this class stayed `public`. Why'd this one change?"""
6315,337581748,"b'```suggestion\r\n        public static int Get(string key, int defaultValue)\r\n```'"
6315,337293101,"b'Is there a reason we went down the route of ""generic data bag"", instead of creating a specific ""MRTKPreferences"" `ScriptableObject` (like https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6309 started to do and I have in some form in a local branch)?\r\n\r\nMy thought is that we know exactly what our possible values are going to be and which preferences are going to need to be stored, so it seems like a lot to fully recreate the existing `EditorPrefs` as a generic thing as opposed to specifically coding the settings / preferences. Might make the `SerializedObject` (and its inspector) a little more readable and customizable, too, since we specifically know what data it\'ll store.'"
6315,337294227,b'There are also some docs around using `ScriptableObject`s as `SettingsProvider`s: https://docs.unity3d.com/ScriptReference/SettingsProvider.html (which might still be possible here? but probably easier when we know the contents)'
6315,337593824,"b""The impetus of using a data bag was to be more flexible and extensible. Answering your initial questions:\r\n\r\n1) It actually isn't recreation because the feature does not exist yet. EditorPreferences/EditorPref do not work as project settings. \r\n2) #6309 had to create their own SO and the work of loading/identifying a file. It's actually more files and more coding for everyone to manage their own instance\r\n\r\nI'd say MixedRealityPreferences.cs is the class of known tracked properties. \r\n\r\nWe could create a single SO object with one loading utility that contains all Project Preferences explicitly (i.e one property line for each thing you need) and every new consumer has to go in and add their fields. Basically it would be a one off header file with every definition.\r\n\r\nThe problem with that is \r\n1) People will keep adding to it and eventually it will become disorganized and possibly outdated etc. (Less important)\r\n2) Really only MRTK-internal can utilize the class (more important)\r\n\r\nRegarding inspectors, selecting the SO file and viewing it in inspector is not golden path or expected path at all. We need to consider it and handle it as a possibility but the file should remain mostly hidden. \r\n\r\nI've looked at the SettingsProvider docs and MixedRealityPreference.cs is using it. What is the item of value in there though that you are referencing? It has some example code but I don't see any callouts for best practices or warnings etc. \r\n\r\nThe key is I don't expect all Project Preferences to always fit nicely into that Project Settings > Preferences view. An example of that is the build settings. \r\n\r\nThoughts?\r\n"""
6315,341751067,"b"">The impetus of using a data bag was to be more flexible and extensible.\r\n\r\nI like a data bag for this reason. As the toolkit grows there'll be breaking config changes, it's inevitable. Tools like FormallySerializedAs can only do so much. With a data bag we can filter stuff on the way in / out and detect outdated keys, migrate settings, etc. etc."""
6315,341792570,"b'Does this mean that now MRTK will have a file ""ProjectPreferences.asset"" under the MRTK.Generated folder when people use MRTK? Have we thought about what our guidance will be for upgrading between MRTK versions, if people have this asset? Will we ask people to delete the MRTK.Generated folder? '"
6315,341792655,"b""I wonder if we can test that project preferences will work. For example, a test that checks:\r\n\r\n1) If a preference does not exist, it gets added with default values.\r\n2) If we modify a preference, the preference after reload gets saves.\r\n\r\nIf we cannot do this as part of an automated test, how about adding this as a step in build call? I'm thinking about 2)"""
6315,341863253,"b""No people should not be deleting this folder because they will lose all of their personal assets. I don't believe we have ever recommended upgrading this folder. Generally all of the profiles go here and anything else would be totally lost"""
6315,341863315,"b""hmmm we should be able to do a test fine. ProjectPreferences is ignored in MRTK repo so even if a test somehow fails and doesn't clean up properly, it can't go in. It will still only impact locally"""
5175,299808242,b'Remember to add the copyright block'
5175,300073499,"b""Good catch! I'll fix this."""
5175,303103363,b'Would be nice to capture orthographic cameras as well.'
5175,303103391,b'It would be really nice to pull this from `MixedRealityPreferences` so we could set the output path and screenshot format in the project settings.'
5175,303108580,"b'Oh I like that idea, I can add that!'"
5175,303108700,"b""That's a good idea, let me try that out."""
5175,303174710,"b""I just started going down this path but decided against it to keep this functionality independent of the MRTK (in case someone want's to just drop this script into older MRTK versions, or projects without the MRTK)."""
6891,358366227,"b'>AppendScriptingDefinitions [](start = 27, length = 26)\r\n\r\nDo we have an opinion on whether or not these types of functions constitute ""public API"" as well? i.e. otherwise this is also another type of breaking change.'"
6891,358367192,"b""> foreach (string s in oldDefines) [](start = 11, length = 33)\r\n\r\nNormally I wouldn't mention this because it involves LINQ, but because this is editor/scripting code (which also appears to be roughly run-once  or at least once-per-import of stuff):\r\n\r\n[https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.except?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.except?view=netframework-4.8)"""
6891,358386551,b'It has been documented as a breaking change in the release notes in this PR. I would be happy to put back the old signature / implementation and deprecate.'
6891,362634087,"b'This is, indeed, a breaking change. The API was introduced in 2.2.0 and, to the best of my knowledge, is used in one MRTK file that has since been updated.\r\n\r\nI will investigate a mitigation and apply as appropriate.'"
6891,362645715,"b'renamed the new class ScriptUtilities, restored and marked obsolete the previous implementation'"
6891,362700751,b'updated'
3390,252510049,"b""This wasn't intended to be public. It likely belongs in a utility class."""
3390,252623475,b'I agree. Would `EditorProjectUtilities` be a good place for this?\r\n'
3390,252781863,b'that seems like a reasonable spot'
3573,263004994,b'Why are we wrapping this?\r\nDoes this fix something we were not aware of?'
3573,263029884,"b""Since we're on Android, you don't want IL2CPP to be enforced. Code debugging is only possible on a C++ basis then. I was not sure which way to comment this, I started with !UNITY_ANDROID but was not sure."""
3573,263033933,b'Same for UWP. Please revert this change.'
3573,263038805,"b""I don't understand. If I remove it, IL2CPP will be enforced, which is not good on Android but fine with UWP. Or did I missunderstood something?"""
3573,263086038,"b""It's not enforced. It asks you to update it. Although from what I understand IL2CPP for android is also the recommended setting as well, correct?\r\n\r\nAll of the settings suggested here are optional."""
3573,263128237,"b"">Although from what I understand IL2CPP for android is also the recommended setting as well, correct?\r\n\r\nWe prefer to compile to ~~.NET~~ mono on Android. We'll often prototype / test iOS apps on Android because ~~.NET~~ mono helps with rapid iteration. We actually made the same exact change on our end because we were tired of seeing the warning. Worth opening another PR."""
3573,263152153,"b""> We prefer to compile to .NET on Android.\r\n\r\nIt's mono, not .NET\r\n\r\n![image](https://user-images.githubusercontent.com/13334553/53916500-2a52b680-4017-11e9-9e41-e320b9eef799.png)\r\n"""
3573,263154904,"b""I agree with Railboy. It's mandatory for UWP, most likely the better option on standalone, but not recommended on Android and therefore not worth the popup.\r\nI will go with !UNITY_ANDROID then, ok?"""
3573,263161678,"b'https://unity3d.com/learn/tutorials/topics/best-practices/il2cpp-mono\r\n\r\n> You should use IL2CPP to both develop and ship your Project. If iteration times end up being too slow using IL2CPP, switch temporarily to the Mono Scripting Backend during development to improve iteration speed.\r\n\r\nI can see the benefit for faster iteration times, but even Unity suggests IL2CPP for Android as well.\r\nIsn\'t there a ""don\'t show me this again"" button on the popup to make that dialog disappear forever? I thought I added that.'"
3573,263244330,b'I check it out'
3573,263735811,"b""Agreed, our and Unity's recommendation is to use IL2CPP for all builds.  It's fine using mono for dev / testing, but IL2CPP for release.\r\n\r\nHence the startup prompt is optional and you can choose to ignore it as a dev"""
3991,276630039,b'Is this to inform of deprecated method use in the core toolkit or is this something that app / extension code may hit?'
3991,276699206,"b""app/extension code may potentially hit this, although I don't know how many would or do rely on MixedRealityToolkt_AbsoluteFoldersPath currently.\r\n\r\n---\r\nIn reply to: [276630039](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3991#discussion_r276630039) [](ancestors = 276630039)"""
5631,313577927,"b""I'm going to add a script to make sure we don't have any instances of Boo.Lang anymore.\r\n\r\nAs much as I love Boo:\r\n\r\n![image](https://user-images.githubusercontent.com/5840182/62971853-9e179d00-bdc7-11e9-928c-abf3f6ecc60a.png)\r\n"""
5631,313577972,b'This should probably be System.Collections'
5631,313581163,b'Is this now superseded by `PlayerSettings.SetVirtualRealitySupported`?'
5631,313582928,"b""agreed. i'll fix"""
5631,313583349,b'yes. i am not calling SetVirtualRealitySupported. i am hoping that a SetStereoRenderMode gets added so i can set all supported platforms at once (dont make the customer reopen to see the dialog)'
5631,313597921,b'https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5632'
5715,315447268,"b""Nit: Consider adding a comment or something around here suggesting the user manually add the layer themselves with the given name + ID. At least that way they'd have a workaround if they hit this warning."""
5715,316420176,"b'```suggestion\r\n                builder.Append(""\\nWould you like to make these changes?"");\r\n```'"
5715,316420480,b'We should likely remove this functionality from MixedRealityToolkit (i believe that is were it currently resides)'
5715,316430252,"b""@davidkline-ms oh nice! didn't even know they already existed. I delete redundant code"""
3221,238870536,b'```suggestion\r\n--Version/\r\n\r\n```'
3221,238870936,b'@mr0ng is there any way we can use the built in json serializer for our needs?'
3221,238872044,"b""@mr0ng let's also get rid of this and replace whatever uses it with a `IMixedRealityNetworkingSystem`"""
3223,238889281,"b""Why do we need a foldout for this?\r\n\r\nIt's literally the only thing in this profile. I think it is a bit overboard."""
3223,238891898,"b""I don't understand. None of the other input profiles with a similar list was updated.\r\n\r\n(nor should they)"""
3223,238902191,"b""All there is in the profile is the commands. It's pointless to hide the only thing in it."""
3210,239157645,"b""Don't forget to update the namespaces"""
3148,239180457,"b""We can make them the same layer. We didn't prevent them from being the same, but if users want to make them different they can."""
3228,239222933,b'```suggestion\r\n            public GameObject CurrentPointerTarget => focusDetails.Object;\r\n```'
3228,239223009,b'```suggestion\r\n            public FocusDetails Details => focusDetails;\r\n```'
3148,239237127,b'The nice thing about this change too is that if the layer is already set then it moves it to the next availible layer.'
3148,239237234,"b""I'm not sure if you noticed that."""
3230,239288286,b'Wondering if this should match the global pointer extents'
3223,239291702,"b'```suggestion\r\n            showFloorProperties = EditorGUILayout.Foldout(showFloorProperties, ""Floor Settings"", true);\r\n```'"
3223,239291729,"b'```suggestion\r\n            showPlayAreaProperties = EditorGUILayout.Foldout(showPlayAreaProperties, ""Play Area Settings"", true);\r\n```'"
3223,239291772,"b'```suggestion\r\n            showTrackedAreaProperties = EditorGUILayout.Foldout(showTrackedAreaProperties, ""Tracked Area Settings"", true);\r\n```'"
3223,239291805,"b'```suggestion\r\n            showWallProperties = EditorGUILayout.Foldout(showWallProperties, ""Boundary Wall Settings"", true);\r\n```'"
3223,239291828,"b'```suggestion\r\n            showCeilingProperties = EditorGUILayout.Foldout(showCeilingProperties, ""Boundary Ceiling Settings"", true);\r\n```'"
3223,239291866,"b'```suggestion\r\n            showGlobalProperties = EditorGUILayout.Foldout(showGlobalProperties, ""Global Settings"", true);\r\n```'"
3223,239291893,"b'```suggestion\r\n            showOpaqueProperties = EditorGUILayout.Foldout(showOpaqueProperties, ""Opaque Display Settings"", true);\r\n```'"
3230,239292074,"b'Not worried about the near clip, just the far clip'"
3148,239299750,"b""need to remove this, I don't think we're using it anymore."""
3148,239299894,"b'The very nice benefit of this change is that we can use the same spatial awareness data no matter what kind of spatial objects we might be tracking (i.e meshes, surfaces, points, etc.)'"
3230,239580981,b'Sounds good'
3165,239585671,b'```suggestion\r\n        ///  TODO Uncomment out profile after spatial observer and controller data provider refactor.\r\n```'
3234,239620044,"b'```suggestion\r\n        public MixedRealityDiagnosticsSystem(string name, uint priority, MixedRealityDiagnosticsProfile profile)\r\n            : base(name, priority, profile)\r\n```'"
3234,239620325,"b'```suggestion\r\n        public MixedRealityTeleportSystem(string name, uint priority, BaseMixedRealityProfile profile)\r\n            : base(name, priority, profile) { }\r\n```'"
3223,239984371,"b""Why not just use the `EditorGUI.indentLevel++` and save the allocations with having a new one?\r\n\r\nWe're already in brackets for the foldout anyway, so seems rather wasteful."""
3248,240054689,b'```suggestion\r\n        public int callbackOrder { get { return 0; } }\r\n```'
3251,240298923,b'Debating if I should put this in a seperate file in an editor folder.'
3251,240319843,b'Well I _did_ add him as a reviewer. lol'
3251,240354722,b'```suggestion\r\n  floorPhysicsLayer: 2\r\n```'
3251,240354762,b'```suggestion\r\n  playAreaPhysicsLayer: 2\r\n```'
3251,240354894,b'```suggestion\r\n  trackedAreaPhysicsLayer: 2\r\n```'
3251,240354944,b'```suggestion\r\n  boundaryWallsPhysicsLayer: 2\r\n```'
3251,240354990,b'```suggestion\r\n  ceilingPhysicsLayer: 2\r\n```'
3251,240355063,b'```suggestion\r\n        private int floorPhysicsLayer = 2;\r\n```'
3251,240355141,b'```suggestion\r\n        private int playAreaPhysicsLayer = 2;\r\n```'
3251,240355189,b'```suggestion\r\n        private int trackedAreaPhysicsLayer = 2;\r\n```'
3251,240355238,b'```suggestion\r\n        private int boundaryWallsPhysicsLayer = 2;\r\n```'
3251,240355273,b'```suggestion\r\n        private int ceilingPhysicsLayer = 2;\r\n```'
3251,240355511,b'```suggestion\r\n        public int CeilingPhysicsLayer { get; private set; }\r\n```'
3251,240355557,b'```suggestion\r\n        public int BoundaryWallsPhysicsLayer { get; private set; }\r\n```'
3251,240355613,b'```suggestion\r\n        public int TrackedAreaPhysicsLayer { get; private set; }\r\n```'
3251,240355660,b'```suggestion\r\n        public int PlayAreaPhysicsLayer { get; private set; }\r\n```'
3251,240355718,b'```suggestion\r\n        public int FloorPhysicsLayer { get; private set; }\r\n```'
3251,240363203,b'@davidkline-ms says it was on ignore by default.'
3251,240363441,"b""Play area was on the ignore layer previously. [Let's keep it the same as it was before](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3251/files#r240363203)."""
3251,240410698,"b'They can be changed at runtime, but in the system, not the configuration.'"
3148,240433435,"b'I gotta update this in a different place, but thanks for catching it!'"
3148,240447703,b'```suggestion\r\n  isCustomProfile: 0\r\n```'
3148,240752848,b'We do the same thing in the input system to request a new unique source id for controllers. Same idea applies here.'
3148,240753360,b'This _does_ support multiple forms of spatial data. \r\n\r\nThis is the base class to support those multiple forms. Each type derives from this base class and has its own configuration settings.'
3148,240753463,"b'> Please move this property to the specific observer types as it breaks previously established behavior.\r\n\r\nNo, it belongs here and, in fact, does not break the established behaviour.'"
3148,240753843,"b'It does, in the [base profile](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3148#discussion_r240732385). '"
3148,240754177,"b""It's still there, in the base spatial observer as `PhysicsLayer`"""
3148,240754438,b'This belongs in the base class. As likely all observers will have specific physics layers we need to set for them.'
3148,240754572,"b""Good catch, I'll be sure to implement this asap."""
3148,240754959,"b'If we unplug a hardware sensor like a depth camera, for example.'"
3148,240755106,"b'When the application starts, or when hardware that supports an observer is plugged in.'"
3148,240755266,b'link?'
3148,240761056,"b'Mesh and surface observers should be different data providers, (and was treated as such in the ""current"" definition).\r\n\r\nThe fact that it only reports a single physics layer is intentional as the observer keeps track of its own generated GameObjects.\r\n\r\nSurface observers will create and have their own meshes on physics layers defined by the `IMixedRealitySpatialObserverDataModel`'"
3148,240761360,"b""I think you're missing the point here. Each surface observer is its own entity with its own configuration options."""
3148,240761449,b'No.'
3148,240762136,"b""The default layer is whichever layer is availible for us to set the spatial observer layers on.\r\n\r\nIf the application is already using this layer we'll have problems.\r\n\r\nThe system is smart enough to setup the observer physics layers to the first availible layer and then update the default profile to it."""
3148,240762188,b'No.'
3148,240762928,"b""A 0 or 1 object?\r\n\r\nDidn't seem like that to me. There was at most 5-6 objects in this dictionary when I was testing it earlier."""
3148,240763084,b'Because it added unnecessary complexity to the system.'
3148,240763380,"b'We only add them if there are layers availible.\r\n\r\nIf none are availible, users get a message and from there they can choose their own as their own discretion. '"
3148,240763437,b'No.'
3148,240763480,b'No.'
3148,240763522,b'No.'
3148,240763566,b'No.'
3148,240764058,"b""What's your aversion to making things sealed?\r\n\r\nPeople shouldn't be deriving classes from this anyway."""
3148,240764128,b'No.'
3148,240764204,"b""No. It's staying."""
3148,240764252,b'No.'
3242,240767862,"b""This was moved into a base class. What you're requesting is likely not feasible."""
3242,240768142,"b""It's not depreciated, it was moved into a utility class because not all inspector scripts will inherit from this one, but we needed an easy way to check if the configuration was valid."""
3148,240769248,b'I see why that could be a problem looking back at the summary.'
3148,240790567,"b""That's because they should be different observers."""
3148,240790834,"b""I don't understand. It should be used for custom implementations, which is why it's in the interface."""
3148,240792386,"b""We're not reserving anything. Just setting layers if they are free. users can edit their layers at any time. \r\n\r\nI don't really see any cause for concern here, as typically green field applications won't really care what layers are set.\r\n\r\nNow established applications with layers that are already defined? Yes, I can see cause for concern there, but it's not overwriting anything that's already established, and notifies the developer if a layer is unavailable."""
3148,240796680,"b""This isn't the HTK -.-"""
3148,240804092,"b""Yes, this is true, but I think something trivial as a layer assignment should be considered, esp when that can be changed. It needs to be configured by the user, and defaults set if none exist.\r\n\r\nThere's lots of pain points from HTK that we're trying to avoid as well. This is one of them."""
3148,240804524,b'Sure.'
3251,241102404,"b""Adding setters doesn't do anything (Even in the prev version)\r\n\r\nSo are you saying you want me to add the logic to update the physics layers as well?"""
3148,241107877,b'Done :)'
3251,241116981,b'I think our coding guidelines state to make things private by default and only expose them when needed.'
3251,241117086,"b'In either case, I updated the PR with the setters that also update the generated objects.'"
3254,241136413,"b""I'm half tempted to move this into the interactions changed check instead of adding it everywhere in each of our implementations. @SimonDarksideJ thoughts?"""
3254,241139658,"b'Nah that doesn\'t make sense to me. Then ""Changed"" isn\'t really what  it is'"
3148,241558705,"b""I don't see the difference."""
3148,241558827,"b""I don't understand. Can you open a pr with the suggested edits?"""
3148,241563637,"b""> I don't think it makes sense for them to be different observers for the same reason Windows gestures were combined into the device manager.\r\n\r\nThat def makes sense."""
3188,241617667,"b""Yeah, I think we'll def need to servicily it and likely needs to be part of the core systems."""
3272,241618589,"b""I can see issues with this, if we're not back on the main thread."""
3272,241618647,b'Simulated Latency?'
3272,241618830,"b""If you use the BaseService then you don't have to do all the service stuff.\r\n\r\nThen the class gets a lot smaller with just the `ISimpleState` implementations.\r\n\r\n```suggestion\r\n    public class SimpleStatePlayerPrefs : BaseService, ISimpleState\r\n```"""
3254,241956409,"b""That was my thought as well.\r\n\r\nIt's no worries, that's what unit tests are for! woot!"""
3745,272702590,b'Do we need `Handler` suffix?'
3745,272703033,b'What about `IGameObjectPoolEntity` or `Item` or something along those lines?\r\n\r\nI think the handler suffix might confuse people with its usage as a handler to a service.'
3745,273458511,"b'Yes, or at least, something similar. The interface here is not an interface for a GameObject creator, but rather handles actions taken by the creator on GameObjects, such as when it is preparing to recycle a GameObject or is preparing to use it.'"
3745,273459771,"b'In this way a GameObject that is in the pool can have a script that implements that interface (if needed) to carry out actions when recycling or use preparations are carried out on it. Perhaps ""**IGameObjectCreatorListener**"" or similar would be better as a name?'"
3745,273463525,b'Updated the name to IGameObjectCreatorListener'
3548,261406677,b'Should this be namespace Microsoft.MixedReality **.Toolkit.** Utilities.Gltf.Schema?'
3548,266600478,"b'Can we get an expansion of ""TRS"" to help customers better understand what it is?'"
3548,266605229,"b""This is a direct copy from khronos gltf schema. I'd rather stay consistent with their documentation"""
3548,266600666,b'Same TRS request here.'
3548,266605256,"b""This is a direct copy from khronos gltf schema. I'd rather stay consistent with their documentation"""
3548,261436006,b'There are a lot of public properties with internal setters like this Buffer throughout the schema namespace. Do we want to provide comment summaries for them since they are public?'
3548,261475889,"b'as much as I prefer doc comments, if this is khronos code, adding the summaries may make it harder to integrate updates, thoug'"
3548,262654234,"b""I don't have a strong preference on this one, but would want to aid developers if the worth outweighs the maintenance costs. @StephenHodgson what are your thoughts?"""
3548,262684723,"b'No Khronos code, this is a buffer to ease access to the data.\r\n\r\nIf anything the fields represent the data structure of the glTF standard.'"
3548,262685566,b'Should we add a summary since these items have public getters?'
3548,262686890,"b""The existing summary tagged properties appear to match what's in the Khronos repo, while this undocumented part is new: https://github.com/KhronosGroup/UnityGLTF/blob/master/GLTFSerialization/GLTFSerialization/Schema/BufferView.cs#L44"""
3548,262745939,b'Likely should be the description found in the schema\r\nhttps://github.com/KhronosGroup/glTF/tree/master/specification/2.0/schema'
3548,261435147,"b'Is there any call out for where these values come from? It seems like there are a variety of enum definitions for these schemas. If gltf documentation exists where we are obtaining these values, it may be worth adding in a summary for the enum.'"
3548,262745781,b'Likely the schema info found at https://github.com/KhronosGroup/glTF/tree/master/specification/2.0/schema'
3548,266601119,"b'Can we get summary tags for these enum values? Would help customers know what they should use,'"
3548,266664465,"b""Individual enum declarations didn't exist"""
3548,266601389,"b'These enum values should be capitalized. Also, can we get summary tags for them?'"
3548,266660860,"b""We already call out where these enums are declared. individual enum items don't look to have descriptions from khronos"""
3548,266601559,b'Can we capitalize the field?'
3548,266663933,b'Synced offline: onboard with this naming based on khronos schema declarations'
3548,261435355,"b'for a lot of these enums, if they are default values for gtlf, maybe we should link to documentation?'"
3548,262745833,b'Likely found here:\r\nhttps://github.com/KhronosGroup/glTF/tree/master/specification/2.0/schema'
3548,266601741,b'Can we please get summary tags for these enum values?'
3548,266664512,"b""Individual enum summaries didn't exist"""
3548,266601855,b'Please add summary tags for these enum values'
3548,266664581,"b""individual enum declarations didn't exist"""
3548,266602058,b'The MRTK coding convention captializes public fields.'
3548,266661361,"b""I'm very well aware of the coding conventions. I wrote them.\r\n\r\nWe do not when they're supposed to be serialized by the json serializer."""
3548,266663983,b'Synced offline: onboard with this naming based on khronos schema declarations'
3548,266602319,"b'Can we add summary tags? Also, our coding convention does not use all caps names.'"
3548,266664071,"b""Synced offline: url should be enough, most enums don't have summary stubs from khronos gltf standard schema declaration."""
3548,266602407,b'Can we get summary tags here?'
3548,266664101,"b""Synced offline: url should be enough, most enums don't have summary stubs from khronos gltf standard schema declaration."""
3548,266602551,"b'Per coding conventions, public fields should be capitalized.'"
3548,266664185,b'Synced offline: onboard with this naming based on khronos schema declaration'
7490,388563539,b'Same comment as https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7490#discussion_r388562897.'
7490,388564074,"b""This one feels like it might be easier to deprecate the existing property and create a new one than the other comment, though we wouldn't be able to reuse the name."""
7490,388629900,"b'What would the deprecated property do though? Wouldn\xe2\x80\x99t it be fully broken? Also, what would we name the new property?'"
7490,388635200,"b""Hmm...possibly, if we keep filling both properties in the short term, it'd allow people to migrate if needed? Basically, keep https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7490/files#diff-05951bac84393068d2888d4927ca4b57L202 around, but deprecate this property?\r\n@davidkline-ms, what do you think? Might be more trouble than it's worth perf-wise to deserialize the glTF basically twice to keep this property around."""
7490,388681996,"b'We could change this to an attribute, and return the \xe2\x80\x98 GltfMeshPrimitiveAttributes\xe2\x80\x99 instance hydrated with data from the dictionary. '"
7490,389009341,"b'@keveleigh, is it possible to maintain both without deserializing twice by copying the objects?'"
7490,389012002,"b'@davidkline-ms yeah, it looks like @FreakTheMighty had a good idea on that above'"
3548,266603031,b'Should update capitalization (ex: POSITION -> Position).\r\n'
3548,266662507,"b'Again, this matches the schema per the json serializer constraints. They need to match the casing or it will fail.'"
3548,266664632,"b'synced offline, everyones onboard with this naming.'"
7490,388561978,b'Could these be `const`?'
7490,388562897,"b'Removing these public fields is a [breaking change](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html). I do think this is okay in this case though, since this feels largely like an internal implementation detail for the glTF loader. Interested to get other opinions though.'"
7490,388630880,"b'I could re-think things a little in an effort to keep it backwards compatible. Perhaps I could change these to properties that access an internal dictionary. . .\r\n\r\nJust saying it out loud doesn\xe2\x80\x99t sound quite right. This change certainly could bite someone, but it feel like a reasonable change to make with an appropriate release.'"
7490,388636001,"b""Yeah, agreed. I haven't fully dug in yet, but some of these possibly feel like classes that should have been `internal` to begin with. Not sure how useful this class would be outside the code that's loading the model"""
7490,388682816,"b'Well, custom attributes is one use case that motivates making some of this public. I\xe2\x80\x99m sure more thought could be put into exactly what the public interface should be.'"
7490,388684997,"b'Oh good call, yeah'"
7490,391180968,"b""Nice change! From your other question, I think I'm good with this changing to a `ReadOnlyDictionary`. We can add a note to the changelist about it, but I'm not sure it makes sense for these to need updating after deserialization."""
7490,391182902,"b""~Also, if the worry is people messing with the dictionary when it's returned, could this instead be implemented with a private dictionary in the class instead of the class being a dictionary itself? The constructor could still take one in and save it locally, and `TryGetDefault`'s `TryGetValue` would be called on the private dictionary instead of itself.~ Ha, realized of course not, the point is to make sure the dictionary is readable externally! Duh..."""
3548,266603115,b'Please add summary tags.'
3548,266660402,b'Summary already contains enum definition location. It will be more up to date than comments here.'
3548,266603524,b'please captialize public fields (throughout)'
3548,266665257,b'keeping consistent with khronos schema declarations'
3548,266603719,b'please add summary tags'
3548,266664374,"b""Individual enum summaries didn't exist"""
3548,266603782,b'please add summary tags'
3548,266664307,"b""Wasn't able to find this on khronos declaration."""
3548,261444977,b'nit: add constant calling out what 65535 is. If its a max there should be a type max definition that should be used instead.'
3548,261445291,b'it feels like we could iterate over meshPrimitives.Attributes values and stub out whatever custom items are needed (like vertex count case by case). right now whats going on below is legible but makes this function super long'
3548,261445474,b'may need some sort of dictionary accessor for the later assignment'
3548,261475995,b'UInt16.MaxValue may be a good choice'
3548,262741721,b'picking up this fix'
3548,262745213,"b'Considering that Attributes seems to be a direct deserialized class from the json payload, i can see why this code looks this way/why its a bit harder to change. We may as well keep this this way for now/disregard my suggestions.'"
7490,391177444,b'Is this related to this change?'
7490,391701638,"b'Doh, good catch. That should not be there. '"
3548,261436531,"b""nit: it may make more sense to add this class later so folks don't accidentally see this class name and assume the functionality exists"""
3548,262684922,b'Would you rather throw an unimplemented exception?'
3548,262686735,"b""I would suggest opening an issue/feature request after we get in the bulk gltf importer code. For now, I'd prefer if this class wasn't added so we don't generate any confusion around what we are intending to support. I would appreciate getting a gltf exporter created in the MRTK, but it may be a lower priority than other features/issues."""
3548,262739053,b'Remaining todo items are listed in the description of the pull request.'
3548,262746048,b'Are there any specific todo items that you think need to be completed before we check in this review? Do unchecked todos get translated into issues?'
3548,262754692,"b""Good question. \r\n\r\nTop list items: \r\n- MRTK Standard Shader Support (@Cameron-Micka if you could help guide us here, I'd super appreciate it)\r\n- Async Texture loading\r\n\r\nThe rest could be in a single task or broken up into tasks."""
3548,261436764,"b'Similar to schema enums, this seems like another location where a summary call out for the value could help troubleshoot in any future regressions'"
3548,262746008,b'Defined in the schema https://github.com/KhronosGroup/glTF/tree/master/specification/2.0/schema'
3548,261438527,b'nit: it may be worth adding summaries to these get/sets calling out that a get converts from gltf to unity coordinate space wheras a set converts from unity to gltf'
3673,268346809,"b'>flipFaces [](start = 75, length = 9)\r\n\r\nWhat is flipFaces?'"
3673,268350578,"b""flip faces changes the triangle definitions/indices order. This changes the outward/normal direction which then results in changing which side of the mesh surface is drawn.\r\n\r\nI think that the MRTK standard shader has some different flags that can override/disregard this behavior and draw both sides. But i would also guess this is a direct port from khronos's logic and should be kept"""
7001,364017535,"b'Should this be 3, for a `Vector3`?\r\n\r\n```suggestion\r\n            if (vector3Array != null && vector3Array.Length == 3)\r\n```'"
3548,261417660,b'```suggestion\r\n            if (loadAsynchronously) { await BackgroundThread; }\r\n```'
3548,261440653,"b""may want to make sure that this .gltf extension and the below .glb extension are at the end of the file. I'm not sure if youd ever get handed a .gltf.meta file, but you could have a more robust check here"""
3548,261441203,b'nit: it feels a bit misleading to await a function call if you are attempting to setup true synchronous behavior. I guess in most use cases a developer would want the created gltf object so they will have to await this function call regardless. But it may be worth brainstorming whether theres a friendly synchronous vs asynchronous function definition that we could construct'
3548,261441985,"b""is this a product of the gltf codebase this was based off of? I would prefer not to check in commented out code/we should probably Log warnings here if they aren't supported."""
3548,261442466,"b""nit: I'd prefer if meshPrimitiveAttributes was cleared after looping compared to making these continual remove calls. It's not super intuitive whats going on by just always referencing the 0 index item"""
3548,261442755,"b""we should have some sort of check that we never try and access an item in the meshPrimitiveAttributes that doesn't exist. Even though these items are based on the same logic, some sort of regression could occur where the meshPrimitiveAttributes size isn't equal to the sum of the mesh primitive lengths."""
3548,261442850,"b""if this code isn't used/needed we should remove it"""
3548,261443074,b'its probably worth calling out what chunk0 and chunk1 contain here as well as what influences their sizes in a comment.'
3548,261443387,b'what frequency have you seen this as an issue?'
3548,262685594,b'.EndsWith might be better'
3548,262687242,"b""`LoadAsynchronously` is internal. External consumers will not get this option. It's only there to aid in the scripted asset import"""
3548,262687317,b'yeah that sounds great'
3548,262687368,b'warnings are logged below'
3548,262701029,"b""It's part of the glTF standard. It's how they defined it in the glb data."""
3607,267481811,"b'I agree with @luis-valverde-ms this should be something the UI should be concerned about, not the services.'"
3668,269154277,b'This also works for me as well'
3668,269156521,b'The only thing `SyncSolution` does is trigger the editor to generate the .sln and .csproj files for the docfx generation.'
3668,269157564,b'@jwitter I suggest adding the inner stack trace and message to the where the log error is thrown for better information'
3668,269158744,"b""At first glance I'd be surprised if this line is parsing the scene information correctly.\r\n\r\nI'm not a linq fan but it looks good, but likely there's something missing here to get the correct scene path information"""
3664,269407109,"b""It's generally located as a checkbox in the assembly definition"""
3668,269729975,b'Where was that comment?\r\n\r\nI think my main concern was if the paths defined were relative or absolute.'
3668,269771366,"b'My last question. If I had a json file that defined my scene list, could I use that instead?\r\n\r\nSeems a bit easier than writing it all in the command line arg.'"
3717,269804854,b'missing summary tags?'
3718,269842136,"b""Isn't the usual formatting with the `&&` on the right?"""
3668,270073189,"b'I think providing an scene list file is probably the best way to go here, but does this change add that functionality or is it just a csv string?'"
3668,270073809,b'Because I also had plans of creating a helper menu in the build window to create a scene list that would then spit out a json file at a known location (likely the root of the build folder)'
3668,270092798,b'Looks great!'
3668,270094768,b'```suggestion\r\n                        string path = arguments[++i];\r\n```'
3725,270534946,"b""Could we update the language to match Unity's?\r\n\r\n`HandleGlobalListenerEvent<T>` would be a better name.\r\n\r\n(same for all the other new methods)"""
3725,270541718,b'Why move these?'
3725,270556436,b'is this used anywhere after being assigned?'
3725,270557699,"b""Oh I see, it's a loop. Thanks :)"""
3725,270559157,"b""Since we created methods for all the other dispatch types, doesn't it make sense to also have a `DispatchEventToModalHandlers` too?"""
3738,270604306,b'This line occurs an awful lot'
3750,271068609,b'new file?'
3745,271070077,"b""Wouldn't this make more sense as a service?"""
3748,271072264,b'Should these files be in the project structure?\r\nMight be better in a child folder of the assets folder or something similar.'
3748,271072670,b'Why is this a partial class?'
3750,271101635,b'```suggestion\r\n                        property.stringValue = SystemType.GetReference(repairedTypeOptions[i]);\r\n```'
3750,271101690,b'```suggestion\r\n                                property.stringValue = SystemType.GetReference(repairedTypeOptions[0]);\r\n```'
3750,271107774,"b'Added a nice little error icon next to the try repair button\r\n![image](https://user-images.githubusercontent.com/13334553/55369978-a8d33480-54ad-11e9-8aad-a8ff4bdb99ed.png)\r\n\r\n```suggestion\r\n                        var errorContent = EditorGUIUtility.IconContent(""d_console.erroricon.sml"");\r\n                        GUI.Label(new Rect(position.width, position.y, position.width, position.height), errorContent);\r\n                        \r\n                        Rect dropdownPosition = new Rect(position.x, position.y, position.width - 90, position.height);\r\n```'"
3749,271260332,b'Editor classes should be separated out into their own files and moved into the appropriate editor folders'
3785,271951582,"b'If no default platform is passed in the parameters, what does it default to?'"
3785,272209716,"b""Yup, that's a problem."""
3748,272433485,"b""I think think it'll be better to keep it outside the editor so that it doesn't take as long to import. \r\n\r\nText files always seem to take the longest for whatever reason."""
3744,272556259,"b""Why not just use a render texture? It'll probably be more efficient as well."""
3745,272701877,b'Makes sense to me :)'
3745,272702590,b'Do we need `Handler` suffix?'
3745,272703033,b'What about `IGameObjectPoolEntity` or `Item` or something along those lines?\r\n\r\nI think the handler suffix might confuse people with its usage as a handler to a service.'
3887,273238331,"b'Profiles are only used to store data, any logic should be contained in the service/system.'"
3887,273238947,b'a new interface for this?\r\n\r\nwhat happened to the existing one?'
3887,273239205,"b'Oh I see, it was just moved.'"
3887,273239335,b'Was there any actual changes to this class or was it just moved?'
3887,273239575,b'Why have a profile if no configurable data is stored in it?'
3750,273247725,b'\xf0\x9f\x92\xaf '
3890,273248579,"b""Isn't this dynamically created?\r\n\r\nWhere is that created again, and what would make this null?"""
3890,273248905,"b""`ConfirmInitialized()` is intentionally called here to ensure that the setup phase works correctly. What's the benefit of just bailing if it's not initialized?"""
3890,273249050,b'[Same question here](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3890/files#r273248905).'
3890,273249366,b'should we go ahead and add the `MainCamera` tag here as well?'
3886,273250701,"b'I noted we unsubscribed properly here in disable, but what about `OnEnable`?\r\nDoes this fail after being disabled once?'"
3941,274424744,b'This is a pretty big breaking change that has wide reaching implications.'
3922,274709896,"b""There's a specific reason for that dependency, because the Mixed Reality Settings class needs to be compiled and ran before the core xrtk assemblies, or else some editor settings will not be properly initialized or setup as needed.\r\n\r\nNow not all the classes in that assembly probably belong there, but things have been done for specific reasons and many people seem to be breaking and the effects are spreading though out much of the code base."""
3965,275119346,"b""Shouldn't this be whatever version of the insider preview you guys are forcing people to use for mrtk?"""
3962,275120052,"b'The settings should stay in the preferences window, not be moved to the project settings\r\n\r\n```suggestion\r\n            var provider = new SettingsProvider(""Project/MRTK"", SettingsScope.User)\r\n```'"
3962,275544572,"b'Yeah I accidentally moved it when I updated the preferences window a few weeks back.\r\n\r\nBelieve me, it used to be in preferences when I first wrote it, and these settings have nothing to do with the project build settings.'"
3962,275851791,b'Then it might be better to actually split up this window as there are both project and non project specific settings.'
3982,276195957,b'>removed mouse wheel scrolling that modified mouse cursor position (not needed as spatial cursor is snapping to interactable objects)\r\n\r\nWhy was this completely removed?\r\nWhy not just update the input action that was driving it?\r\nNow the scroll cannot be used by anyone looking to configure it.'
4047,277423378,"b'We should probably check if this has changed, instead of setting it each update.'"
4047,277441003,b'All the public methods and properties should be defined here.'
4047,277442033,b'We should probably move the `IsOpaque` property into the instance.'
4047,277466328,"b""Yes there is: `IsOpaque` It's defined in the profile, but shouldn't be."""
4057,277757351,b'This should be handled in [CameraCache](https://github.com/XRTK/XRTK-Core/pull/94/files?file-filters%5B%5D=.asset&file-filters%5B%5D=No+extension#diff-17eef5d7dd71af91d052c7e5097ab064R23)'
4047,278146624,b'```suggestion\r\n            get { return CameraProfile != null && cameraSystemType != null && cameraSystemType.Type != null && enableCameraSystem; }\r\n```'
4047,278149393,"b""There's a clear cache method where this needs to get added to as well."""
4047,278150153,b'What the heck is going on here?\r\nIs this a product of the new registrar system?'
4047,278155546,b'Pretty sure this also needs to be added to the core system check'
4047,278178012,"b'No, it needs to be here, just like all the rest of the service types.'"
4071,278342561,b'Agreed'
4071,278348403,"b""Mainly I don't want to have the hassle of writing the `Class.EnumType` every time. \r\nBut it's also a legibility issue and part of the coding guidelines."""
4071,278348466,"b""If it were possible to make the enum a bit more generic, that'd be great too"""
4071,278348612,b'This enum _does_ seem rather useful in more than just bounding box activations'
4047,278611016,"b""@luis-valverde-ms\r\n\r\nIt's required to define an interface so to set it up in the configuration profile.\r\n\r\nThis PR effectively uses the camera service via interface."""
4071,278766319,"b""No worries, I understand :)\r\n\r\nJust wanted to keep the project consistent and in line with the established patterns and in line with the coding guidelines. Just have to speak up and have it noted for the record.\r\n\r\nimho it's better to make this change now than to have a breaking change later when we decide to make that kinda change."""
4101,279058287,"b""What's the benefit of moving this block?"""
4101,279060307,b'Just easier to review without as much churn. No worries.'
4110,279220272,"b""I think actually putting this in the `CreateAsset` overload would be a little better as we'd then get undo capabilities for each created profile as well."""
4116,279413081,b'creating a new `Vector2` here will impact performance.'
4116,279415376,"b""How come we're not just updating the `&&` to an `||`? Seems like the only change that needed to happen based on the issue you've opened.\r\n\r\nHard to tell exactly how much this change will impact."""
4116,279444797,"b""> 1. Switch to ||.\r\n\r\n\xf0\x9f\x92\xaf that was also my original suggestion.\r\n\r\n> I would have expected the compiler being able to do something reasonable there\r\n\r\nThat's partly why we're being pretty explicit about how we're handling these value types here.\r\n\r\n> Can you elaborate a bit more on where that performance impact comes from\r\n\r\nThis entire class was written to be highly efficient because it's **_very_** hot code, and we were trying to make sure all the memory was packed in tight. You're creating a `new` value type that will need to be collected later and throws off the tightly packed memory layout. Why waste the time writing to a new memory address, when the one you have works just fine?"""
4110,279445913,"b""I think that's fine :) Your reply makes sense to me.\r\n\r\nI'm not sure it warrants an new issue, as I think it's just a nice to have feature.\r\n\r\nThanks @ForrestTrepte!"""
4116,279457302,"b""Sorry, you're correct. value type. I updated my comment to reflect.\r\n\r\nAll of the input mapping code is hot. Input has and always will be a performance critical area."""
4116,279473116,"b""I mean @SimonDarksideJ went back and forth for weeks testing the perf, and I'm pretty confident there's results in the GitHub history somewhere in here.\r\n\r\nLet's keep it the way it is and make minimal changes to fix the existing code because we know, without a shadow of a doubt it works and is performance tested.\r\n\r\nIMHO The burden of proof falls on the one opening the PR making these kinds of sweeping changes.\r\n\r\nBut then again, it's not like you guys are keen on listening to us anyway, so at this point, I'm not even sure why I bother anymore. Your loss."""
4116,279587307,"b'Look mom, no more allocations!\r\n```suggestion\r\n                Vector2 newValue = value * (Vector2.one * (invertXAxis ? -1f : 1f, invertYAxis ? -1f : 1f));\r\n```'"
4116,279848766,"b'Sure, but not the exact text procedure, which is important. Ask any scientist.'"
4116,279849401,"b""Also posting a picture of the code makes it a lot harder to copy and test locally as well.\r\n\r\nSeems like you're intentionally trying to make it difficult to validate imho."""
4116,279891529,"b""Oh man, I thought Unity was doing the right thing and cashing that value like they do in their other static properties. They do it for `Vector3` so I assumed it also was the same for `Vector2`. I'd like to see the results of one that's using the cached value."""
4116,279891974,"b'Actually, [looking at the source](https://github.com/Unity-Technologies/UnityCsReference/blob/9c7b88327d1b48000ea94dc52a405068a140980f/Runtime/Export/Math/Vector2.cs#L351), they do, in fact use a cached field value:\r\n\r\n```C#\r\n    public static Vector2 one\r\n    {\r\n      get\r\n      {\r\n        return Vector2.oneVector;\r\n      }\r\n    }\r\n```'"
4116,279905315,"b""Haven't had a chance to test definitively and get some results. I'll post my results when I get some time later today."""
4116,279941101,"b'@keveleigh wow! I can\'t believe `new` is faster! I wonder what\'s even the point of using the static accessors, as I always was taught that\'s the benefit of even having them. \xf0\x9f\x98\x86 \r\n\r\nBut I did add one more test to the mix. Caching that `Vector2.one` value locally:\r\n```C#\r\n[Test]\r\npublic void Test_Vector2_One()\r\n{\r\n    var watch = Stopwatch.StartNew();\r\n\r\n    for (int i = 0; i < 10000000; i++)\r\n    {\r\n        var test = Vector2.one;\r\n    }\r\n\r\n    watch.Stop();\r\n    Debug.Log($""Test Vector2.one execution Time: {watch.Elapsed.TotalMilliseconds} ms"");\r\n\r\n    watch = Stopwatch.StartNew();\r\n    var vector2One = new Vector2(1f, 1f);\r\n\r\n    for (int i = 0; i < 10000000; i++)\r\n    {\r\n        var test = vector2One;\r\n    }\r\n\r\n    watch.Stop();\r\n    Debug.Log($""Test cached Vector2 execution Time: {watch.Elapsed.TotalMilliseconds} ms"");\r\n\r\n    watch = Stopwatch.StartNew();\r\n\r\n    for (int i = 0; i < 10000000; i++)\r\n    {\r\n        var test = new Vector2(1f, 1f);\r\n    }\r\n\r\n    watch.Stop();\r\n    Debug.Log($""Test new Vector2 execution Time: {watch.Elapsed.TotalMilliseconds} ms"");\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/13334553/56994083-f09fb700-6b52-11e9-8325-169dd7ba5f91.png)\r\n'"
4116,279946953,"b'I think the tests in https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4116#discussion_r279865650 are a bit biased as they\'re not testing the validity of the `Vector2`, instead the extra equality checks are really what\'s making the difference here.\r\n\r\nI agree the latter is much easier to read and def performs better, but the point here is the `new` vs cached `Vector2` value.\r\n\r\nA better objective test would be:\r\n\r\n```C#\r\n\r\n[Test]\r\npublic void Test_04_01_02_Checks()\r\n{\r\n    var iterations = 10000000;\r\n    var value = new Vector2(1, 1);\r\n    var vector2Data = new Vector2(2, 2);\r\n    var changed = false;\r\n    var invertAxis = true;\r\n\r\n    var cachedVector2 = new Vector2(1f, 1f);\r\n\r\n    var watch = Stopwatch.StartNew();\r\n\r\n    for (int i = 0; i < iterations; i++)\r\n    {\r\n        var invertMultiplier = Vector2.one;\r\n\r\n        if (invertAxis)\r\n        {\r\n            invertMultiplier.x = -1f;\r\n        }\r\n\r\n        if (!invertAxis)\r\n        {\r\n            invertMultiplier.y = -1f;\r\n        }\r\n\r\n        invertAxis = !invertAxis;\r\n        var newValue = value * invertMultiplier;\r\n        changed = vector2Data != newValue;\r\n        // use the internal reading for changed so we don\'t reset it.\r\n        vector2Data = newValue;\r\n    }\r\n\r\n    watch.Stop();\r\n    Debug.Log($""Test Vector2.one execution Time: {watch.Elapsed.TotalMilliseconds} ms"");\r\n\r\n    watch = Stopwatch.StartNew();\r\n\r\n    for (int i = 0; i < iterations; i++)\r\n    {\r\n        var invertMultiplier = cachedVector2;\r\n\r\n        if (invertAxis)\r\n        {\r\n            invertMultiplier.x = -1f;\r\n        }\r\n        else\r\n        {\r\n            invertMultiplier.x = 1f;\r\n        }\r\n\r\n        if (!invertAxis)\r\n        {\r\n            invertMultiplier.y = -1f;\r\n        }\r\n        else\r\n        {\r\n            invertMultiplier.y = 1f;\r\n        }\r\n\r\n        invertAxis = !invertAxis;\r\n        var newValue = value * invertMultiplier;\r\n        changed = vector2Data != newValue;\r\n        vector2Data = newValue;\r\n    }\r\n\r\n    watch.Stop();\r\n    Debug.Log($""Test cached Vector2 execution Time: {watch.Elapsed.TotalMilliseconds} ms"");\r\n\r\n    watch = Stopwatch.StartNew();\r\n\r\n    for (int i = 0; i < iterations; i++)\r\n    {\r\n        var newValue = value * new Vector2(invertAxis ? -1f : 1f, !invertAxis ? -1f : 1f);\r\n        invertAxis = !invertAxis;\r\n        changed = vector2Data != newValue;\r\n        vector2Data = newValue;\r\n    }\r\n\r\n    watch.Stop();\r\n    Debug.Log($""Test new Vector2 execution Time: {watch.Elapsed.TotalMilliseconds} ms"");\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/13334553/56995540-e4b5f400-6b56-11e9-9f15-a4a4fef8a7cf.png)\r\n'"
4116,279966742,"b""Nobody questioned the performance between the two. Mainly the case was made against a smaller change vs a complete rewrite. Personally I agree, less code is better and the updated code likely performs better just from less to do, obviously.\r\n\r\nThe question came up against the `new Vector2` usage, and I think it's pretty clear, using a cached value is preferable for performance. """
4116,279967854,"b""@luis-valverde-ms \r\n> When you talk about impact you mean performance or are you worried about a change in behavior?\r\n\r\nMainly I was just worried about the change in behavior, but that's unclear without first updating the unit tests to confirm the bug."""
4116,280101951,"b""Could we format this test like the others above where we're also testing the return value?\r\n\r\nTypically it's best to also test setting the value with the same value again to ensure that not change has happened as well.\r\n\r\nThanks :)"""
4116,280112161,"b""Sure take a look [here](https://github.com/XRTK/XRTK-Core/pull/138/files)\r\n\r\nI added an additional test case that was specifically designed to test the inverted axis types, and updated the tests to also validate two additional value changes. \r\n\r\nI don't think your tests adequately cover all the use cases.\r\n\r\nWe're testing:\r\n\r\n1. set initial value\r\n2. did value change? `Asset.False`\r\n3. set to value 1\r\n4. did value change? `Assert.True`\r\n5. set value 1 again\r\n6. did value change? `Asset.False`\r\n7. repeat for each additional value change (we used 4 additional values)\r\n8. set initial value\r\n9. did the value change? `Assert.True`\r\n10. set initial value again\r\n11. did the value change? `Assert.False`"""
4116,280469735,b'```suggestion\r\n               var newValue = value;\r\n               \r\n               if (invertXAxis)\r\n               {\r\n                   newValue.x *= -1f;\r\n               }\r\n               \r\n               if (invertYAxis)\r\n               {\r\n                   newValue.y *= -1f;\r\n               }\r\n```'
4240,282374218,"b""Kinda odd that it's passing it's own type to itself."""
4240,282374739,b'This should be `SystemType` as well to match the backing field.'
4240,282374879,b'Likely the same goes for all the usages of this property as well.'
4240,282375209,"b""Agreed, I'm also not sure this dependency is a good one."""
4240,282389234,"b""I'm not sure adding this attribute here was even a good idea. The whole point of the profiles was to hold the data for the implementation, not decorate the implementation with data \xf0\x9f\x98\x85 \r\n\r\nAwe well. `\xc2\xaf\\_(\xe3\x83\x84)_/\xc2\xaf` not part of the scope of this PR"""
4317,285354431,b'Pretty sure this breaks the build'
4317,285359501,"b""Fine, don't take my word for it."""
4353,285360614,"b""might wanna use the escaped xml version of the `&` here so it's rendered properly in the documentation."""
4398,285362500,"b""Why would an xbox controller ever have a spatial pointer?\r\n\r\nShouldn't the pointer just default to the user's gaze, and current selections be wired up properly via UI navigation events?"""
4099,279083150,b'Empty? Lots of empty summaries.'
4099,279085735,b'I like this new class a lot.'
4099,279092520,b'good catch! i can add summaries.'
4099,279097591,b'You can thank @Alexees for most of it! I just did some minor reformatting and tweaking.'
4099,279105768,b'Thanks @Alexees '
4099,279107114,"b""The API surface exposed here feels a bit interesting - there's a public one to add a specific child (i.e. as a consumer I can invoke that to add a specific child) but there's no way for me to remove that child without totally messing up all other callers (i.e. I can't remove just my child, I have to remove everything).\r\n\r\nI'm guessing that maybe this could be cleared up with a comment, or perhaps is coming in the next PR, but this API assymetry should be cleared up."""
4099,279107558,"b""This is based, a bit on Unity's transform API. there is a RemoveChildAt(index), but no RemoveChild(transform).\r\n\r\n@WiWei, can you file an issue to add better symetry?"""
4099,279107901,"b""I guess what I don't understand is, is my question even a problem (i.e. will Detach children ever be called by multiple people, or just a single person managing some greater lifecycle?) I'm trying to understand the calling mechanics of this function.\r\n\r\n---\r\nIn reply to: [279107558](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4099#discussion_r279107558) [](ancestors = 279107558)"""
4099,279109619,b'it >might< be called by multiple people. i will remove for now until more thinking can be applied\r\n'
4498,287354859,b'add comment  #Resolved'
4455,292863935,"b'We should be careful about blanket == null operators like this as Unity ""may"" remove them\r\nhttps://blogs.unity3d.com/2014/05/16/custom-operator-should-we-keep-it/\r\nIt\'s unclear as to what is the best alternative as yet.'"
4455,292993662,"b""I've been taking the (possibly reckless) approach of ignoring this possibility until they actually follow through. Because the consequences would be so far-reaching that I see no point in trying to get ahead of cleaning up the rubble."""
4455,293895676,b'nit: add summary'
4455,293895745,b'nit: add summary'
4455,294378625,"b'@SimonDarksideJ, that Unity blog post was from five years ago. I concur with @Railboy that we should not over index on something that was asked and no related product change for that time span.'"
4455,298278963,"b""What's the benefit of turning this into a `MonoBehaviour` with a scene requirement? It's been working well so far without that requirement."""
4455,298279281,"b""This seems risky. What if I've customized my camera with additional, non-MRTK scripts that the camera service doesn't know about?"""
4455,298280638,"b""Instead of searching for this script, can't we continue making the current assumption about camera parents? Or naming? Both of which seem to still be enforced by this script."""
4455,298318253,"b""That's the point of this PR. Searching by name or parent is no longer reliable when you're dealing with multiple scenes and multiple main cameras."""
4455,298319714,"b""But you're still using the main camera to [ensure](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4455/files#diff-a2a2bab0eb44c8a46d3c07c490881396R231) or [set](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4455/files#diff-a2a2bab0eb44c8a46d3c07c490881396R214) the playspace."""
4455,298322580,"b""Since there could be other playspaces loaded when you destroy the active playspace, you don't want to un-parent the camera and leave it hanging. Because another playspace with another main camera may get activated, and then you've got two main cameras to deal with.\r\n\r\nIt's sort of moot because this destroy method never gets used by any of our services or other scripts. I can revert it if it moves this PR along."""
4455,298324135,"b""It works fine when you're only dealing with one scene and one playspace transform. But once you've got multiple scenes with multiple playspace transforms, a MonoBehaviour makes searching for / switching between active playspace transforms a lot simpler. Plus you can display in-editor documentation with a custom inspector so people understand what's going on."""
4455,298356230,"b""You're right, it shouldn't do that unless the camera system is disabled. I'm pushing a change with cleaner logic."""
6344,338248357,b'Todo later?'
6344,338690728,"b'something unneeded, i believe. wiill confirm'"
7486,387834164,"b""Do you think this should even be a little higher, alongside the `if (Application.isPlaying)` check? I wonder if we should be doing anything at all in this method if the scene isn't actually loaded. @Railboy?\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/81383453589488e2df92d54c3938cab5e57bc424/Assets/MixedRealityToolkit/Utilities/MixedRealityPlayspace.cs#L192"""
7486,388081089,b'Good point. I was just going for a minimum-impact change.'
7486,389023324,"b""I believe @keveleigh is correct here. Let's move the check to line 192.\r\n\r\nNice fix!"""
7486,390748832,"b""Actually, EditorSceneUtils.GetRootGameObjectsInLoadedScenes() iterates over all open scenes but skips those which are not yet loaded. So I'm thinking that maybe the check should stay where it is now (?) In other words - the fact that the scene the event pertains to isn't loaded, won't affect the path where mixedRealityPlayspace is null."""
4099,279105807,"b'Do we want to depend on callers to filter out dataproviders from coming here? i.e. I see MixedRealityToolkit doing things where it filters out data providers, but if this is something we want to prevent from ever happening it would probably be good to enforce at a lower level.'"
4099,279106212,b'Good call!'
4099,279107621,"b""> // todo: is this the data type we want? [](start = 7, length = 40)\r\n\r\nNit: What's the resolution on this TODO?"""
4099,279108011,"b'>regisrar [](start = 82, length = 8)\r\n\r\nregistrar'"
4099,279108227,"b'>pair [](start = 14, length = 4)\r\n\r\nI think this is a list of pairs - TBH it feels like this datastructure is interesting enough to have its own class abstraction. Anytime you start going 3 layers deep (i.e. a hashtable of a list of pairs) it probably means it should be abstracted a little different.'"
4099,279108587,"b'As a caller, why would I need both of these flavors if it looks like the second one does things automatically for me?) Is it just for effiicency (i.e. some callers know the registrar?)'"
4099,279108815,b'Willing to offline chat about your thoughts? We can update here with the result.'
4099,279109073,"b'Correct, the overload that takes a registrar parameter allows the code to bypass the loop.'"
4099,279109153,"b""It's weird seeing outparams being first, instead of last - in other languages that support this type of mechanic most of the coding guidelines I've seen have been to put the input first, output last.\r\n\r\nOther examples of code from warnings/guidelines:\r\n[https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1021-avoid-out-parameters?view=vs-2019](https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1021-avoid-out-parameters?view=vs-2019)\r\n[https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-parameter-modifier](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out-parameter-modifier)\r\n\r\nSeem to list it last as well.\r\n"""
4099,279109159,b'haha! forgot to remove that one :)'
4099,279109382,b'nice catch. thanks!'
4099,279109547,"b""I think this will throw a KeyNotFound exception if this doesn't exist. AFAICT there are public->private paths that don't guard against this."""
4099,279109696,"b""I guess in this case it's interesting because name is optional.\r\n\r\n---\r\nIn reply to: [279109153](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/4099#discussion_r279109153) [](ancestors = 279109153)"""
4099,279110133,"b""you're right! i'll check for that"""
4099,279110337,"b'Can you help me understand a bit about this name concept - it looks like it lets us register multiple services of the same type (i.e. multiple boundary systems?) What are the scenarios that we\'re trying to enable with this? The reason I ask is this name concept appears to add some additional complexity to this code and I""m trying to understand the value/use cases that it enables.\r\n \r\n'"
4099,279110514,"b""If there are two services and no name is passed, shouldn't we log error /return false if there's more than one service? It feels like it's unpredictable otherwise and we don't know what the consumer actually wanted."""
4099,279110567,"b'>i tcan be discarded. [](start = 80, length = 20)\r\n\r\nspelling : ""it can be discarded""'"
4099,279110826,b'fixed. thanks!'
4099,279111160,b'the multiple of the same type support is for extension services where it may be possible to load two of the same type. we should think about this to see if it is the desired behavior'
4099,279111347,b'fixed'
4099,279111595,b'good question. elsewhere in the toolkit a similar pattern is applied. intended to match that behavior. perhaps a name should be required?'
4099,279116065,b'we discussed internally and decided to leave as is'
4099,279116086,b'we discussed internally and decided to leave as is'
4099,279116121,b'we discussed internally and decided to leave as is'
4099,279116272,b'we discussed internally and decided to leave as is'
4099,279127740,"b"">registryIndex = 0; [](start = 16, length = 18)\r\n\r\nCan you still add a Debug.Assert or warn or log or return failure if there are more than two services? This will be an undefined thing that could really bite people in the future (i.e. things could 'just work' luckily because it happens to be that the first dude always asks but the second dude doesn't, but if the second dude ever asks it's gonna be bad)"""
5948,323991218,b'end of remarks is missing? > \r\n\r\nALso what about sortedset? \r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.sortedset-1?view=netframework-4.8'
5948,323992430,"b""Ah, yep missing that >\r\n\r\nI'll switch to sortedset, as it does make more sense"""
5948,323996009,"b""Okay, funny story, I tried switching to SortedSet, and it didn't end up working that well.\r\n\r\nIMixedRealityService doesn't implement IComparable, so the sorting aspect doesn't work unless you pass the sorted set a comparer (which I already had around). HOWEVER, this triggers another side effect of SortedSet, which is that it also uses the comparer to determine the uniqueness of the keys (i.e. if two things have the same comparer results, they end up having the same key for the sorted set). So they are basically sorted on their key (which is their priority), and key == uniqueness, so this path didn't end up working."""
5938,323996213,b'Maybe this should be in MRTK.cs? The whole multiple registrar thing makes TryGetService tricky for what you actually get'
5948,323996226,"b'I suppose this literally makes sense given what a set should be doing, and what a sorted set should be doing (i.e. set = key, sorted = sort by keys)'"
5948,324249410,b'Nit: power the registrar?'
5948,324268184,"b'Well kinda... the comment as-is is more accurate than just ""power the registrar."" It powers that specific function, not the entire registrar.'"
3922,273984368,"b'Note: It would be nicer to have this utility class in the `Microsoft.MixedReality.Toolkit.Core.Utilities.Editor` assembly, which has an explicit Editor dependency. However, the `Microsoft.MixedReality.Toolkit` assembly in turn has a dependency on `Microsoft.MixedReality.Toolkit.Core.Utilities.Editor`, which would create a cycle. That should not be the case IMO, if possible we should try to remove editor code from the core assembly.'"
3922,274033271,b'Nit: Be consistent with the usage of {} around single line ifs (see line 60 vs this line)'
3922,274034043,"b'Moved code, will fix it.'"
3922,274035225,"b"">GUI.enabled = (configurationProfile != null); [](start = 16, length = 45)\r\n\r\nReading the code but without great background knowledge on building unity editor UI, it seems a bit odd that we're first setting the enabled bit here conditionally, and then blowing it away after the if statement by always setting it to true on line 115. This question is more for my own understanding, but is this designed to disable the Yes button conditionally (i.e. it affects anything after it's been changed), but the No button will be left enabled in all cases because GUI.enabled is true after that point?"""
3922,274038836,"b'Correct, this disables the ""Yes"" button unless a profile has been selected (the `GUI.enabled` state applies to all statements after the change). Could be removed if that seems too restrictive, but since the purpose is to end up with a valid MRTK object i think it\'s helpful. I\'ve tried selecting the default profile, but we don\'t actually have any definition for that.'"
3922,274380515,b'@davidkline-ms Do you think this use of `MixedRealityToolkit.Instance` needs to be changed to conform to your own branch?'
3922,274543977,"b'I think this setting should be a settings scriptable object somewhere.\r\n\r\nThat way the variable is persisted in a config object, rather than in an ephemeral session which is cleared on each editor boot.\r\n\r\nMoroever, using EditorPrefs could make it difficult to re-enable if need be. '"
3922,274602153,"b'Never mind, missed your last line.\r\n\r\nI see your point but this seems like a problem we can afford to ignore until someone complains.'"
3922,274708340,"b""@lukastoenneMS, i'll handle the updates as I merge into my branch/fork. that way, this PR stays as targeted as possible"""
3922,274708888,"b""Let's file an issue on that once this is in."""
3922,274709275,"b""I'll handle the update when i merge into my working branch. thanks!"""
3922,274709896,"b""There's a specific reason for that dependency, because the Mixed Reality Settings class needs to be compiled and ran before the core xrtk assemblies, or else some editor settings will not be properly initialized or setup as needed.\r\n\r\nNow not all the classes in that assembly probably belong there, but things have been done for specific reasons and many people seem to be breaking and the effects are spreading though out much of the code base."""
3922,274894207,b'What/where is the Mixed Reality Settings class?'
3922,274903944,"b""I've logged this here for future discussion: https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3952"""
3922,275306978,"b""The MRTK core assembly should have no dependencies, in a perfect world. Let's identify the specific editor assembly classes and methods and investigate moving them into the core assembly, or at least factoring them into an isolated assembly that is safe for the core to reference (and avoid the cycle that @lukastonneMS mentions)."""
4048,277446691,"b""Nit: Could also move into CheckMixedRealityToolkitScene to handle two internet birds with one internet stone, unless the goal here is to explicitly only handle SceneOpened/NewSceneCreated (i.e. I could imagine in Unity 2019 maybe there's some other hook we listen to and then we have to fix it again by adding this check to that hook too).\r\n\r\nCould in this context means you can go either way and this looks good to me as well"""
4048,277464084,b'Done.'
5955,324716609,"b""@wiwei should we move this, `TwoHandRotateLogic` and `TwoHandScaleLogic` to some internal namespace/location? They're not intended for users for normal usage and I've broken the public interface to these classes twice now. It would be nice if we could make it clear that these classes are subject to change."""
5955,324756393,"b""can't we just define those classes internal instead of public?"""
5955,324756550,"b""there's no reason imho to have those public"""
5955,324902933,"b""+1 on having these just be internal as well.\r\n\r\nThis is a breaking change in that we're removing the visibility of this, but this is a case where it should be a fairly obvious implementation detail of the the manipulation handler.\r\n\r\n---\r\nIn reply to: [324756550](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5955#discussion_r324756550) [](ancestors = 324756550)"""
5617,313492090,"b'>bool focusIndividualCompoundCollider [](start = 259, length = 36)\r\n\r\nYou should probably put this param before all of the out params.  Also need a space after the comma.'"
5617,313495141,"b"">hit.transform.gameObject [](start = 50, length = 24)\r\n\r\nI'd use ternary syntax here.\r\n\r\nGameObject targetGameObject = (focusIndividualCompoundCollider) ? hit.collider.gameObject : hit.transform.gameObject;"""
5617,313992237,"b'```suggestion\r\n        public static bool RaycastBoxPhysicsStep(RayStep step, Vector3 extents, Vector3 targetPosition, Matrix4x4 matrix, float maxDistance, LayerMask[] prioritizedLayerMasks, int raysPerEdge, bool isOrthographic, bool focusIndividualCompoundCollider, out Vector3[] points, out Vector3[] normals, out bool[] hits)\r\n```'"
5617,313992294,"b""Per Adam's comment"""
5309,303650099,"b'>public void SetScaleLimits(float min, float max, bool relativeToInitialState = true) [](start = 8, length = 84)\r\n\r\nNit: Missing doccomments - probably just take the comments from:\r\n\r\n/// <summary>\n        /// Sets the minimum/maximum scale for the transform helper.\n        /// </summary>\n        /// <param name=""min"">Minimum scale</param>\n        /// <param name=""max"">Maximum scale</param>\n        /// <param name=""relativeToInitialState"">If true the values will be multiplied by scale of target at startup. If false they will be in absolute local scale.</param>'"
5309,303650321,"b'>public Vector3 ClampScale(Vector3 scale) [](start = 8, length = 40)\r\n\r\nNit: Add a doccomment here as well.'"
5309,304040512,"b""I don't like that we're storing those min max values in two different classes. Would it be an option to remove them here and instead change SetScaleLimits to AdjustScaleLimits(..) which does the initialscale multiplication but returns that value instead of storing it and ClampScale would then take the max scale values as second parameter ? that way you keep the data in one place and it doesn't diverge """
5309,304340897,"b'Ah, there is one issue worth discussing here. If we do things like this, if you have both a `ManipulationHandler` and a `BoundingBox` on an object, the object will have two different min/max scales.\r\n\r\nSay for example someone had MH max scale as 3 and BB max scale as 5. If they scaled to max using the BB scale handles and used MH two hand manipulation, the scale would jump down to three.'"
5309,304341288,"b'Previously there was conflict as to which min/max scale would be taken, but at least there was one authoritative min/max scale.'"
3443,256629103,b'Suggestion: since I could see this opening the door to other cool constraint options an explicit switch might be better:\r\n\r\n```\r\nswitch (movementConstraint) \r\n{\r\n    case MovementConstraintType.FixDistanceFromHead:\r\n        break;\r\n\r\n    case MovementConstraintType.None:\r\n    default:\r\n        // Compute how far away the object should be based on the ratio of the current to original hand distance\r\n        var currentHandDistance = Vector3.Magnitude(newHandPosition - pivotPosition);\r\n        var distanceRatio = currentHandDistance / handRefDistance;\r\n        var distanceOffset = distanceRatio > 0 ? (distanceRatio - 1f) * DistanceScale : 0;\r\n        targetDistance += distanceOffset;\r\n        break;\r\n}\r\n```'
3443,256940876,"b""we can update the code to a switch when we hit critical mass of constraints (it'll have to change anyhow as we add new ones)"""
3443,256993183,"b'Indeed: I already considered a suggestion from Julia to ""Constrain to XY plane"" and quickly gave up because it would have required more restructuring than I was willing to invest at this moment. I doubt that there are any meaningful constraints that could be efficiently addressed simply by more alternative case handlers.'"
5886,321465398,b'nit: simplify to \r\n`pointerPosIndependentOfHead = pointerRefDistance != 0;`'
5976,325477253,"b""It looks like this is doing constrained movement in world space, meaning that if we set constraint to be X, then the object will only move along the world - space x axis. The tricky thing about world-space X is that this is pretty arbitrary on HoloLens. The world-space +X axis points to the right of wherever the user was when she started the app. So, this X axis will change depending on where she is facing when she starts the app. It also is not related to the actual object's x axis, meaning that if the object is rotated a bit and constraint is X, it may appear to be stuck on a relatively arbitrary axis.\r\n\r\nI think the translation constraint should by default be in the object's local space, or at least using the coordinate system that the object had when manipulation started."""
5976,325481191,b'This line caused a compile error for me when I pulled the code. '
5976,325578783,"b'I second this, when I experimented with this for my WIP constraint changes, local space constraints felt better to me than world space constraints. Perhaps we should provide an option to switch between local and global translation constraints, like you mention [here](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5147#issuecomment-532430422) for rotation @wiwei.'"
6727,351766100,b'can you move this into a separate method? i think this is the exact same code as above?'
5341,304686341,b'This was used for the large gem in the Touch interaction example. The change is good for other examples if it is used.'
5389,305916237,b'The second one (.PNG) works for me. .png with lowercase is showing 404 error.'
5412,306925548,b'@Cameron-Micka Made it Required component. Thanks!'
5412,306926206,b'Applied the update!'
5412,306927267,b'It seems like it was automatically updated by Unity.'
5412,306927338,b'Updated'
5421,307456570,"b""Yes, it was missing the text label. Added it back to make it consistent with HoloLens 2 buttons. \r\nI'll check the voice command string!"""
5421,307561661,b'Re-assigned the voice command. '
5443,307892967,"b'oh, this is cropped one with the logo part without the text.\r\n![2019-07-26 13_02_14-Unity 2018 4 2f1 Personal - DefaultManagerScene unity - MRTK-Public-Microsoft - ](https://user-images.githubusercontent.com/13754172/61978262-a38e7e00-afa5-11e9-9c30-e1b7122c878f.png)\r\n'"
5443,307895566,b'Moved it.'
5443,307895631,b'Added comments'
5443,307895667,"b'Actually, I realized that this is no longer used. Deleted the asset.'"
5443,308351033,b'@Railboy could you help with this change?'
5443,309524577,b'Thanks! Looking good!'
5627,313554403,b'Right... it would be better to make this optional. In the Periodic Table app too. The user can grab and manipulate the element while reading through the text panel with ET auto-scroll.\r\n\r\n![2019-08-13 11_42_55-Photos](https://user-images.githubusercontent.com/13754172/62968251-820ffd80-bdbf-11e9-83c7-b9ab63a3fd58.png)\r\n'
5627,313559084,"b""I see. I'll also test with the Periodic Table app"""
5627,313585451,b'@sostel @keveleigh Verified. Eye-tracking scroll works with while manipulating objects with hands.'
5719,315792454,b'I think the image is still helpful to show the hierarchy (child components need to be added to an empty game object that has the collection script). I have updated images to make it clear.'
5868,321861919,"b""Oh, This is not MRTK default speech profile. The profile was customized for the Speech example scene and contains some sample keywords such as 'Open' and 'Close'. Added keyword for better example demonstration."""
5868,321865156,"b'I see, making it more generic so that developers can put any object with TextMesh/UIText/TextMesh Pro.\r\nOr making it more specific to the provided SpeechConfirmationTooltipPrefab.'"
5868,321866306,"b'The tooltip text is in SpeechInputHandler.cs. \r\n \r\n       [SerializeField]\r\n        [Tooltip(""Assign SpeechConfirmationTooltip.prefab here to display confirmation label. Optional."")]\r\n        private GameObject speechConfirmationTooltipPrefab = null;'"
5868,323480196,b'Added SpeechConfirmationTooltip which inherits the ToolTip class and provide generic interface for the SetText and animation trigger. Updated SpeechInputHandler to call these. '
5868,323519319,b'Updated script to instantiate on recognition & destroyed on animation complete'
5941,324307091,b'Great idea!'
5941,324307926,b'Added the link.'
5990,326754621,b'File Removed'
5990,326754662,b'File Removed'
5990,326755370,b'Added '
5990,326755649,b'AutoFollowTransformTarget sounds much better! Updated.'
5990,326755990,b'Updated to use SetToggled(follow). Thanks!'
5990,326756740,"b'@Cameron-Micka Yes, please!'"
5661,326793741,b'@sostel '
5661,326794685,b'@Railboy '
5661,326798006,"b'I think this was the fix for the issue with the Single Pass Instanced rendering, rendering on only one eye.'"
5661,326801388,b'Changed to use CoreServices.Input. Thanks!'
5661,326803504,b'Updated license header.'
5661,326803527,b'Updated license header.'
5661,326803546,b'Updated license header.'
5661,326804035,b'Updated'
5661,326804283,b'Added summaries. '
5661,326804773,"b'Yes, it is a common utility script for using Scene System.\r\n@Railboy This script should work even if the Scene Transition Service is not registered?'"
5661,326804834,b'Updated'
5661,326817146,b'Now it makes sense having this script under SceneTransitionService which uses it.'
5868,326824476,b'@Railboy Oh... it might be better to actually scrape the list of the system reserved keywords dynamically. Might be better to work on it as a separate issue/PR. I am not sure if we have a good way to access the list of system keywords. '
5868,326824873,b'Removed the check.'
5868,326824917,b'Right. Removed the [SerializeField]'
6031,326849494,"b'Right. Tried to think about separating the home button from the ToggleFeaturesPanel or having duplicated ToggleFeaturesPanel for the Examples Hub. The challenge was, there are many example scenes that are using ToggleFeaturesPanel. I wanted to make the example scene work for both as a standalone and as part of the Example Hub.'"
6031,326849547,b'Putting a separate home button for the hub is easy but make it nicely aligned with ToggleFeaturesPanel would be a challenge. '
6031,326849605,"b""I'll duplicate the ToggleFeaturesPanel for the example hub specific version. I'll put this info in the README file. Thanks!"""
6280,340832800,"b'In this profile, I made the mesh invisible to reduce visual noise.'"
6280,340848372,b'Great idea!'
6280,341402649,b'Yes. And adding toggle button for spatial mesh visual.'
6486,343938416,b'Reverted DefaultMixedRealitySpatialAwarenessMeshObserverProfile. Thanks!'
6543,345077525,b'Moved materials to the Experimental folder.'
6654,348743539,"b""@wiwei Acutally, they have the same size but this is a limitation of the GitHub's markdown table :) There is no way to control the width of the table and image width. It is controlled by the amount of the text in each column. """
6943,364913027,"b""- Moved the README file to Experimental folder\r\n- Updated TOC: Added 'Experimental Features' under Feature Overviews and added links to Experimental features (Hand Coach, Scrolling Object Collection, Pulse Shader)\r\nThanks!"""
7045,367022615,b'@keveleigh @Troy-Ferrell Applied feedback! Thanks!'
7176,374344763,b'I moved these prefabs from the Examples folder to SDK and renamed them. It does not break the existing example scene (NearInteractionExamples.unity) since GUIDs are not changed. '
7458,385982854,b'Great suggestions!'
7458,385989056,b'Added missing namespace.'
7458,385989146,"b'Renamed the folder as SceneUnderstanding. Created subfolders per Unity standards, moved files into the folders.'"
7458,385989730,b'Reverted. Thanks!'
7458,385989758,b'Reverted. Thanks!'
7458,385990367,"b""Moved the image location & updated .md file's path information."""
7458,385990378,b'Removed unnecessary .meta files.'
7679,410434999,b'Thanks!'
7679,411584025,"b'Yes, it will be identical.\r\n![2020-04-20 11_05_21-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandMenuExamples unity ](https://user-images.githubusercontent.com/13754172/79784329-ee4fe300-82f6-11ea-8734-5b6f46f14ad4.png)\r\n'"
7176,416759213,b'Sounds great!'
7740,417542408,"b'I started converting some of the images to JPG if it reduces file size a lot. For the images that do not show much difference, I just left them as PNG.'"
7740,417682997,"b""That's a great idea! I'll make the changes."""
7176,417727905,b'@wiwei It makes sense!'
7902,426810001,"b""Originally I turned it off but we have 'Profiles' button in the existing Toggle Features Panel in each scene. Also it is highlighted by default so if we don't activate this, Profiler button won't work and seems broken."""
7902,426810391,"b""This should be applied to only MRTKExamplesHub. I'll revert this change."""
7902,426812536,"b""@keveleigh Originally, in the Build Settings, we had all example scenes except this 'MRTKExamplesHub.unity' which doesn't make sense. (You need to include it to build examples hub)\r\nI just added it.\r\n\r\n![2020-05-18 11_18_53-Build Settings](https://user-images.githubusercontent.com/13754172/82246444-88f11100-98f9-11ea-83e7-ceec937ecfa8.png)\r\n\r\n"""
7902,426826168,"b'@keveleigh Yes, I think this Build Setting is specific to Examples Hub. Can you try opening ExamplesHub or ExamplesHubMainMenu?'"
7902,426828073,"b'@keveleigh Oh, I see it is added through the Scene System profile, not by default.\r\nI will revert the Build Settings file'"
7902,426829907,b'Reverted the Build Settings file'
8175,455185417,"b'Shall we add the description from the dev days page?\r\n""The Introduction to MRTK session will be a tutorial on how to create a simple MRTK app from start to finish. This talk will go over interaction concepts and show MRTK\xe2\x80\x99s multi-platform capabilities.""'"
8307,471927742,b'Added namespace Microsoft.MixedReality.Toolkit.Experimental.SurfacePulse\r\n'
8307,471927895,b'Added doc comment. Added to existing SurfacePulse.cs as well.'
8307,471928013,b'Updated format to use spaces.'
8307,471928119,b'Updated to use if(!Application.isEditor)'
8307,471928895,b'I am not sure (I am not the original author : ) Is it possible to get the parent object of dynamically created spatial mesh and add a script?'
8307,471930280,b'Update applied to both SurfacePulseOnSelect.cs and SurfacePulse.cs script!'
8307,471930582,b'Moved to Examples folder.'
8307,476459252,"b'Thanks @keveleigh @davidkline-ms ! I tried removing the global listener and adding PointerHandler to the parent object of the dynamically generated spatial mesh. Tested on the device and works well. Could you please review the code and see if this is correct use? Pushed this update in **SurfacePulseOnSelect.cs**\r\n\r\n```\r\n            CoreServices.SpatialAwarenessSystem.SpatialAwarenessObjectParent.AddComponent<PointerHandler>();\r\n            CoreServices.SpatialAwarenessSystem.SpatialAwarenessObjectParent.GetComponent<PointerHandler>().OnPointerClicked.AddListener(this.OnPointerClicked);\r\n```\r\n\r\n\r\nFor the example mesh object (this is for in-editor demo), I manually added Pointer Handler and used OnPointerClick event. \r\n![2020-08-25 22_41_13-](https://user-images.githubusercontent.com/13754172/91181919-7a9a6880-e724-11ea-9c74-48ee53dad183.png)\r\n'"
8391,480231348,"b""@wiwei These lines were generating test failure even if updated default values are within the allowed range for the user's custom value through the input field. I thought before and after rotating from 0 to 90 degrees would be enough for this test. I just tested with 35 and 55 degrees and fails the test. It seems like I am misunderstanding something? : ) """
8307,481525350,b'Merged the feature into the original SurfacePulse.cs and deleted SurfacePulseOnSelect.cs\r\n'
8307,481525453,b'Added.'
8307,481525645,b'Removed Debug logs'
191,76683720,"b'Should you remove the OnTrackingChanged event here? If the Anchor is _never_ located and you attempt to TapToPlace again, does the call to DestroyImmediate remove this event handler automatically?\n'"
191,76684025,b'Is it possible to get here before the anchor store is ready?\n'
191,76685452,"b'what does ""if any"" mean here? There\'s no code guarding the DestroyImmediate call if there isn\'t a WorldAnchor on this gameObject. Does DestroyImmediate do its own null-check internally?\n'"
191,76691928,"b""My point was (poorly made) that this event handler won't be removed if the user Taps to Place _before_ this Anchor is located.\n"""
191,76693408,b'wrapping line 86 with if (anchorStore != null) should suffice.\n'
260,81861813,b'seems this should be <= 0.0f to maintain the original logic and align with the comment.\n'
260,82022358,"b'Regarding the comment below about hitting a DivideByZero error later on, looking back in time, it appears that comment is out of date. In an earlier implementation of this class, there was a division by startingDistance made during Update() which is no longer the case.\n\nYes, line 34 needs to be protected against DivideByZero.\n'"
260,82023349,b'need to guard against DivideByZero here too.\n'
301,84539858,"b""Typically, they are set in Unity's designer.\n"""
301,84539884,b'Good point.\n'
301,84540014,"b""I opted to go with enabled = false. That way, the object stays in Unity's preview mode so it can be inspected in the designer.\n"""
354,90525473,"b'readability. under the covers, switch on a string generates the equivalent IL that if/else-if blocks would up to a\xc2\xa0""magic number"" of cases at which time it\xc2\xa0uses a hashtable for better performance.'"
1122,144082805,b'This PR will then address both #1112 and #1113.\r\nNot my original intent.'
1152,144609073,b'Yes.\r\n[SingleInstance.cs.meta](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/Dev_Unity_2017.2.0/Assets/HoloToolkit/Utilities/Scripts/SingleInstance.cs.meta)\r\n> fileFormatVersion: 2\r\n> guid: 5ad8c5e16c3c3c045b63fba07276d0ab\r\n\r\n'
1160,144663334,"b""I've seen other Singleton implementations call `DestroyImmediate(this)` in this case."""
1160,144665179,"b""if we got here, then presumably `.Instance` was called before `base.Awake()`. Maybe a warning to make sure the implementing class is calling `base.Awake()`. You'll only hit it once at runtime."""
1160,144667001,"b'I\'d imagine it would look something like what was removed from the `(instance == null)` block.\r\n> `Debug.LogFormat("".Instance was called before .Awake(); If {0}.Awake() calls base.Awake() you can ignore this message."", typeof(T).Name);`'"
1160,144667231,"b""aren't these two clauses identical?"""
1195,145490844,b'InteractionSourceLost and InteractionSourceDetected handle those cases correctly.'
1518,156798094,"b'nit: spelling ""initializedLock""'"
1526,157037529,"b""If ContainsObject is called on a HoloLens, it will throw a NullRefException (I think)\r\nMight want to safeguard the other public functions  in this class that won't get initialized because of this early return."""
1506,157087101,b'@StephenHodgson look here :)'
1549,157824810,b'Do we need to keep these upgrade notes?'
1549,157826300,"b'Maybe add the comment to the PR description.\r\nEvery time Unity goes and changes their shader syntax, these notes get littered throughout the affected shaders. Over time, they lose their cachet.'"
1846,175703189,"b""I'd love a link to a citation as to why this is a best practice."""
1846,175703369,b'an example of the exception would be useful'
1846,175703549,b'An example of the exception case would be useful here as well.'
1884,177694313,"b'@davidkline-ms , is your question, ""Is [this](https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1884/files/19d353a2614981f4ea38f0846df0957648bfe2f1#diff-b9a3e3ecf7d3a593d26e238633bb56d8) Apple\'s icon and is OK for MRTK to distribute it under the MIT license?""'"
1884,177782026,b'property -> properly'
1884,177782589,b'property -> properly'
1884,177782857,b'No need to have comments on Unity functions (Awake/Start/Update).'
1884,177783128,b'No need for comments on Unity functions (Awake/Start/Update)'
1884,177783449,"b'Is this class required for ARCapture or is it more appropriate for it to live in an example/test folder, outside the HoloToolkit?'"
1884,177785049,b'coding style: add explicit private accessor'
1884,177785870,b'[Vector3.one](https://docs.unity3d.com/ScriptReference/Vector3-one.html)'
1884,177786630,"b'Is there a reason to create yet another Singleton? Has the MRTK Singleton behaviour deviated so far that it would make porting to it problematic? Perhaps this should be renamed to avoid confusion. Or, could you use [SingleInstance](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/master/Assets/HoloToolkit/Common/Scripts/SingleInstance.cs) instead?'"
1884,177786934,b'No need for comments on Unity functions (Awake/Start/Update)'
1884,177787559,b'HoloLens'
1884,177788057,b'sync -> synchronized'
1884,177788314,b'HoloLens'
1884,177793583,b'coding style: add explicit private accessor'
2002,183784019,"b""@StephenHodgson , I don't see anything in the coding standards doc regarding not using Linq. Should there be; perhaps with an actual reason  as to why it shouldn't be used?"""
2002,183785352,"b'Punny. I opened [it](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/MRTK-Version-Next/CodingGuidelines.md) and searched for ""linq"" and came up empty.'"
2002,183787620,b'Maybe that should be called out explicitly in the [MRTK coding standards](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/MRTK-Version-Next/CodingGuidelines.md) document as well. Thoughts? What about the next line regarding lambdas? I guess it comes down to allocations vs heavy allocations.'
2002,183789740,"b""Any time I see a comment like the one at the top of this thread, I'd like to see a reason behind the suggestion. It will help future contributors understand better the logic and thinking behind the guidelines."""
1884,185537390,b'Attributes should each be on their own line.'
1884,185537419,b'Attributes should each be on their own line.'
1884,185537619,b'Attributes should each be on their own line.'
1884,185537665,b'Attributes should each be on their own line.'
1884,185537714,b'Attributes should each be on their own line.'
1884,185537759,b'Attributes should each be on their own line.'
1884,186057685,b'Fixed'
1884,186061039,b'Fixed.'
2077,187638823,b'do you have a better one?'
2077,187643643,"b""yes, but the countdown delay is/can be set in the editor. I can wrap it in an #if UNITY_IOS block like the other updates, but I thought it was more important for the inspector's view of the app to look as close as possible to each other."""
2136,189559217,b'Will this still build on older versions of Unity? 5.6? 2017.1?'
2136,189559553,b'nit: add newline after endif'
2136,189559587,b'nit: add newline after endif'
2136,189560458,b'nit: add newline after endif'
2287,194990636,b'This is still spelled wrong...'
2327,198091907,b'@davidkline-ms Does sample code require the MIT license header?'
2327,198092061,b'tge -> the'
5756,316821305,"b""@Kurtis, I'd say no. """
2497,206020395,"b""In line with the comment I have made above, if we keep the old method, it'll receive null as a parameter when gaze is on the game object with any other implementation of ICursorModifier(e.g., TestCursorModifier) and hence, the new method with the interface implementation will also get null."""
2497,206020402,"b'Following is the OnPointerSpecificFocusChanged method:\r\n![onpointerspecificfocuschanged](https://user-images.githubusercontent.com/14876006/43379037-039d5814-93e8-11e8-8661-d262a0f3b997.PNG)\r\n\r\nHere, if I call the old OnActiveModifier(CursorModifier modifier) method instead of the new one with interface parameter, I need to cast the ICursorModifier object to CursorModifer which will return null in all the cases when newFocusedObject has an implementation of ICursorModifier which is not CursorModifier.\r\nHence, the old OnActiveModifier(CursorModifier modifier) method will receive null as a parameter and pass null to the new implementation of the method.\r\n\r\nIn order to avoid this issue, I am calling the new OnActiveModifier with the interface parameter from OnPointerSpecificFocusChanged since ICursorModifier is the parent here and from inside of this method, I am checking if this implementation of ICursorModifier is CursorModifier, only then I call the old OnActiveModifier.\r\n![new_onactivemodifier](https://user-images.githubusercontent.com/14876006/43379311-61dc2594-93e9-11e8-9b4c-e19ef031c6b1.PNG)\r\n\r\n\r\nThis keeps the old functionality intact and will not give any errors or produce any unexpected behavior for those users who have custom classes inherited from these.'"
2497,206055492,b'This change was made by @keveleigh.'
2497,206194260,b'Yes. I took june18_dev branch as base.'
2497,206202316,b'Sure. Will do that.'
2497,206220047,b'The changes made in #2518 are already there in my branch.'
2497,206389135,b'@StephenHodgson Are we good with this?'
8804,516200784,"b""I'm not sure if I should use a closed MR for this, but I did run into a problem with this script when running Unity on MacOS.  On MacOS `DirectoryInfo.GetFiles` appears to be case-sensitive even if the underlying filesystem is not. The sentinel file is actually named `MRTK.Shaders.sentinel` with a lowercase `s` on `Sentinel`. On MacOS the sentinel file wasn't found, so the exception about not being able to find the source for the shaders is thrown.\r\n\r\nThe simple fix is changing this constant to use the lowercase `s` for `sentinel`."""
8428,485994411,"b""I'm not sure why this is the case, I can see the script in my scene. I'll make sure to do some branch testing on different machines.\r\n![image](https://user-images.githubusercontent.com/15256397/92668017-75135580-f2c2-11ea-97f5-dcc3b438717a.png)\r\n"""
8428,487251936,"b'Built on 2019.4.7f1, tested on 2019.3.9f1, both had the script. Going to be testing on Mac today.'"
3188,237318722,"b""Definitely per app. You don't need it in the scene because it will add itself the first time an audio event is played."""
3188,237320710,"b'This was an internal suggestion, and relic from the previous audio manager to avoid garbage collection on the ActiveEvents that are constantly being created and destroyed as sounds are played.'"
3188,237322636,"b""AudioBanks are edited in a separate window, so the inspector just provides a button for a shortcut to open the editor window using that bank. Having two interfaces for editing banks worries me, but I'm happy to discuss."""
3188,237323032,b'I agree it would be more useful as a generic selection. Would that change where it lives?'
3188,238029395,"b""I would love for it to not have to be in the scene, but something needs to run the update function for the active events. If there's a better way than adding an object with the AudioManager script to the scene, I'm all for it!"""
3188,238029912,"b""Honestly, I never noticed a performance difference, it seemed like a premature optimization, so I'm totally fine with it either way."""
1468,154470647,b'I am using the default VS 2017 formatting. What should I use?\r\n'
1468,154471140,b'Tab size is 4\r\n'
1468,154472276,b'Found it. Tabify is on. '
47,64121912,b'Should we simplify and remove the mouse jumping?\n'
59,66660633,"b""The line before instantiates  DirectionIndicatorObject = InstantiateDirectionIndicator(DirectionIndicatorObject); \nIt's instantiating and setting the instantiated object back to the same variable name.  \nWe could set it to a different variable name.\n"""
227,80546711,"b""Are we creating a different performance issue?  As the number of intractable controls increase the number of unnecessary events being fired also increases.  I suspect that there is a point where the cost of reflection in SendMessage and the cost of sending unnecessary events intersect.  I'm not sure how many objects that is, but...\n\nHave we considered using an interface and having the GazeManager request that interface as the focused object changes?  I suspect that GetComponent<> is also not a trivial cost, but we would be enabled to cache the results of GetComponent<> for a GameObject so we'd only need to do it once.  With this approach we wouldn't have to require people to include code that ensures the event was meant for them.  We could also have the interface return if the operation was handled.\n"""
227,80554348,"b""First, I agree 100% that the SendMessage() call is bad.  It's bad for performance since it uses reflection.  It encourages sloppy coding.   It makes scripts less portable.  Getting rid of SendMessage is a good idea.  \n\nHowever there must be an intersection point N where SendMessage and signaling N events has the same performance.  As N increases SendMessage is cheaper.  As N decreases signaling the events is cheaper.  This number N exists.   I might try to discover 'N' in a simple application.  The article you linked tested up to N=5.  It isn't comparing C# events with SendMessage, so the side by side comparison in the article isn't relevant to my point (I see how it is for the keywordmanager wireup, but this is orthogonal).\n\nIf N turns out to be a relatively small number (less than 100?) then we should look at alternatives and an interface is an alternative (which we should, of course, measure the performance impact). I'm not sure that I consider 'avoid' to be the same as a 'No no'.  :) \n"""
227,80589261,"b""ISWYDT :)  I'm working on getting some measurements.  \n"""
227,80596225,"b""It's worse than I would have predicted.  It appears that switching to events will be worse than SendMessage for N > 5 (N is the number of objects that would care to listen for the event). I'm going to see what the cost is of using an interface. \n\nsome info from my test where n = 10.\nFrame 3960: SendEvent current total 196.3016 ms \nFrame 3960: SendMessage current total 126.7389 ms \n\nand n = 100\nFrame 1560: SendEvent current total 194.5788 ms \nFrame 1560: SendMessage current total 40.0294 ms \n"""
240,80598955,"b""Done.  I've changed a little bit in tap to place along the way.\n"""
240,80598965,b'done\n'
240,80598978,b'done\n'
240,80598995,"b'done and yes, so done.\n'"
240,80599011,b'done.\n'
240,80742235,b'This allows us to not check for spatialMappingManager and worldAnchorManager in update.\n'
240,80743010,"b""I think I pushed changes with the public/private stuff.  What's the norm, should I respond to each individually?\n"""
227,80745455,"b'I really need to make sure that we are comparing the right things.  I\'m not looking at **UnityEvents** at all.   :)  That test method you are using doesn\'t apply.  \n\nHere\'s what I\'m doing:\n\n```\nusing UnityEngine;\nusing System.Collections.Generic;\nusing HoloToolkit.Unity;\nusing System;\n\npublic class SendEventTest : Singleton<SendEventTest> {\n\n    public delegate void OnGazeEnterEvent(GameObject focusedObject);\n    public event OnGazeEnterEvent OnGazeEnter;\n\n    List<GameObject> spawnedObjects = new List<GameObject>();\n    public GameObject listenerPrefab;\n    public int numObjects = 100;\n\n    private double totalms = 0;\n    // Use this for initialization\n    void Start ()\n    {\n        numObjects = 100;\n        for(int index=0;index<numObjects;index++)\n        {\n            spawnedObjects.Add(Instantiate(listenerPrefab));\n        }\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // send the event to a random object\n        DateTime start = DateTime.Now;\n        GameObject rto = spawnedObjects[(int)(spawnedObjects.Count * UnityEngine.Random.value)];\n        if (OnGazeEnter != null)\n        {\n            OnGazeEnter(rto);\n        }\n\n        totalms += (DateTime.Now - start).TotalMilliseconds;\n\n        if (Time.frameCount % 120 == 0)\n        {\n            Debug.LogFormat(""Frame {0}: SendEvent current total {1} ms "",Time.frameCount, totalms);\n        }\n    }\n}\n\n\n```\n\nand\n\n`using UnityEngine;\nusing System.Collections.Generic;\nusing System;\n\npublic class SendMessageTest : MonoBehaviour {\n\n```\nList<GameObject> spawnedObjects = new List<GameObject>();\npublic GameObject listenerPrefab;\npublic int numObjects = 100;\n\nprivate double totalms = 0;\n// Use this for initialization\nvoid Start ()\n{\n    numObjects = 100;\n    for (int index = 0; index < numObjects; index++)\n    {\n        spawnedObjects.Add(Instantiate(listenerPrefab));\n    }\n}\n\n// Update is called once per frame\nvoid Update ()\n{\n    DateTime start = DateTime.Now;\n    GameObject rto = spawnedObjects[(int)(spawnedObjects.Count * UnityEngine.Random.value)];\n    rto.SendMessage(""OnSelect"", SendMessageOptions.DontRequireReceiver);\n    totalms += (DateTime.Now - start).TotalMilliseconds;\n\n    if (Time.frameCount % 120 == 0)\n    {\n        Debug.LogFormat(""Frame {0}: SendMessage current total {1} ms "", Time.frameCount, totalms);\n    }\n\n    if (Time.frameCount % 1200 == 0)\n    {\n        totalms = 0;\n    }\n}\n```\n\n}`\n\nthe prefabs referenced in the scripts have either a script that has an OnSelect() function (I tried it without too) or a script that registers for an event handler.  I measuring how much time is being taken during the call.\n'"
227,80750070,"b'BTW, I can make send message more expensive by making a deeper hierarchy.  \n'"
227,80764858,"b""My scene only has one object (aside from the Main camera and directional light)\n\nIt's this:\n![image](https://cloud.githubusercontent.com/assets/15933792/18886910/d2923dae-84a6-11e6-9962-867ef863ba49.png)\n\nthe listeners all look like:\n![image](https://cloud.githubusercontent.com/assets/15933792/18886929/e893f91c-84a6-11e6-9e7c-c4249db505a4.png)\n\nHere's the scripts, I just added an interface:\n[scriptszippedup.zip](https://github.com/Microsoft/HoloToolkit-Unity/files/496407/scriptszippedup.zip)\n"""
227,80766957,"b""BTW, the interface seems pretty okay so long as the results from GetComponent<> are cached, otherwise the performance is similar to SendMessage.\n\nFrame 1680: SendEvent current total 248.4189 ms \nFrame 1680: SendMessage current total 48.5825 ms \nFrame 1680: SendInterface current total 26.5289 ms \n\noh, and without the 'tapCache' in the interface class:\n\nFrame 1680: SendEvent current total 242.203400000001 ms \nFrame 1680: SendMessage current total 48.6214 ms \nFrame 1680: SendInterface current total 55.1236 ms \n"""
227,80780843,"b'Okay, I ran this test.  There are flaws in the testing approach.\n\nFirst, and critical:\nSendMessage(""SendMessage"") should be changed to SendMessage(""SendAMessage"") or something else that doesn\'t resolve to something that requires parameters.  Most of the time in SendMessage as the script is written is spent in a Debug.LogError that SendMessage requires three parameters.  \n\nAfter this:\n![image](https://cloud.githubusercontent.com/assets/15933792/18889251/093be486-84b1-11e6-96e7-e740a99f5394.png)\n\nSecond:\nMaxListeners should not be 1.  It should be set to some number or UI controls that might be in the scene.  Maybe 20 is a more reasonable starting point (The shell has 13 buttons on the start page.  Add a few windows/holograms to the world and 20 is not an excessive number.  My personal app has closer to 50 individual buttons in the world).  I set the MaxListeners to 20. Now this adds pressure to how long the script takes to run (it seems to hang actually), so I decreased numreps to 100000.  Now I get:\n\n![image](https://cloud.githubusercontent.com/assets/15933792/18889383/9774e752-84b1-11e6-9f32-ebd2accf6685.png)\n'"
227,80785141,"b""The time could be reset when it prints.  It's useful to accumulate multiple samples to reduce the impact of outliers.  It's similar to the test you provided, but my 'reps' are done in successive frames rather than in a loop, so I can't use one sample of time.\n\nTrue, the events won't be called every frame.  They won't be called ten million times, either.  :) It's just a useful way to get a lot of samples in a short amount of time.\n\nThe timer could be moved to after the random value.  All of the classes have the same behavior though, so that is unlikely to change how the results compare with one another. \n"""
227,80968055,"b""The script you have, all you need to do is update the 'MaxListeners' to set the number of callers who register.  FWIW, TimeSpan (the result of DateTime-DateTime) has a ticks property as well.  Using the stop watch is fine of course. :)\n\nI looked at the changes you made to my scripts.  The signal to receive time is interesting, but for the event test the results are going to vary quite a bit, and the debug.log in the callback should make it so that by the time the last object is signaled the time is really large.  With 100 subscribers, I would expect that you get 100 lines of 'SendEvent current total ...' that get progressively longer. \n"""
227,80978200,"b""I'd like to propose that we switch from events/delegates to an interface so we can stop digging in.  I feel like I've generated enough data to have confidence that the cost of the interface is at worst the same perf as send message and provides the code readability benefits of an event.  I also feel like I've generated enough data to show that the event pattern will be overall more expensive on the CPU for most applications.  \n\nIf you continue to dig to try to find data that supports the event handler, do be sure to have your event handler be something like an Action GameObject and have the event handler compare the passed in GameObject to itself and take an action (like incrementing a value that you print out and the end of the program) if they do match.  Also be sure to measure the total cost of raising the event, not just the time spent for one of the event handlers to receive the message.\n"""
244,81190435,"b'Cache the IInteractable like I did in my test bed.  We might need to keep a queue of some sort to keep the cache from getting so large that the cache lookup is expensive, but for now a simple cache should be good enough.\n'"
244,81190807,"b""that's fair.\n"""
244,81191317,b'we should already the focusedInteractable from the last update.\n'
244,81192324,b'how do these get called?\n\nShould we make a class that runs in the editor and looks for scripts with void OnSelect() and warn people that way? \n'
244,81192535,b'Cache GestureManager.Instance.  The .Instance call actually has a small cost that adds up.\n'
244,81193536,"b'It might make more sense to convert the example/test scripts to use the interface or events.\n\nAlso, you could make the class SendMessage(""OnSelect"") in the OnTap() handler.  Lazy...err..busy people could attach the script to their objects when we deprecate OnSelect.\n'"
245,81197431,"b""If it were a monobehavior to avoid the editor looking at it maybe...  otherwise I'm not sure if it matters.\n"""
244,81205824,b'consider renaming to interactableCache.\n'
244,81206671,"b'the IInteractable should have the same lifetime as the FocussedObject (IE, it should be a public property). \n'"
244,81207013,"b'oh, okay, the git review thing confused me, I thought this code was in GestureManager.\n'"
244,81210669,"b""yes, but it would you wouldn't have to look in the cache for the oldInteractable a few lines earlier and during the events from gesture recognizer.  You also won't have to look it up if the focused object doesn't change frame to frame.\n"""
244,81210797,b'Here is a place where we should still have the interactable from the previous frame.\n'
245,81258362,"b'This code:\n// And create a surface object using the mesh.\n                    AddSurfaceObject(meshdata.MeshObject, string.Format(""SurfaceUnderstanding Mesh-{0}"", transform.childCount), transform).AddComponent<WorldAnchor>();\n\nrelies on the meshdata being accessible, and adds the mesh to a list callers can get through the SpatialMappingSource base class, usually via the SpatialMappingManager.\n'"
266,83265945,b'Is there a better namespace to get the ElementAt extension from?\n// Get the next MeshData.\nMeshData meshData = meshSectors.Values.ElementAt(meshSectorsIndex);\n'
250,83740340,b'did you intend to  if (**!**pressedInteractionSource.Contains(state.source.id)) \n'
250,83740626,"b'A bit of a nit, but I usually think that events are raised or set and exceptions are thrown.\n'"
250,83744165,"b'I suspect that the change has a general problem with two hands or one or two hands plus clicker.  This is one place where the problem manifests.  I should be able to grow pressedInteractionSource by showing both hands, pressing both hands, releasing the presses, and repeating.  One of my hands will represent the InteractionSourceState that is not the currentInteractionSourceState, and will not be removed from the pressedInteractionSource list.\n'"
250,83746100,"b""why do we need to check that we are the focused object when we didn't have to check before? \nIf it is necessary, the null check is not actually necessary.\n"""
250,83746411,b'another reversed logic on the if (list.contains(foo)){list.add(foo);} rather than if(!list.contains(foo)...\n'
250,83903769,"b'I took a closer look at how trackedInteractionSource and pressedInteraction source are being used.  As far as I can tell their only usage is for list management.  Maybe you can just get rid of them?\n\nactually, the trackedInteractionSource is used in source_Pressed, but pressedInteractionSource does seem unnecessary.\n'"
250,83920383,b'needs:\ncurrentInteractinSourceState = state;\n'
296,84187692,b'I love comments like this!  So useful to know why a possibly strange looking check is being made.\n'
301,84510273,"b""a consideration when we find these invalid configurations would be to Destroy(this) so the script doesn't run. This would remove the need to do null checks everywhere else.\n"""
301,84510314,b'Why FindObjectOfType instead of GazeManager.Instance?\n'
301,84510426,b'yay! :) \xf0\x9f\x91\x8d \n'
316,86618456,b'could this be in the 0-1 range?\n'
316,86618581,b'check for PointerPrefab being null.\n'
316,86619839,b'Is there a way to avoid creating new planes each frame?\n'
316,86620046,b'please put the [] with the type rather than before the variable name.  (Probably just a typo)\n'
316,86626342,b'if we can cache the results of CalculateFrustrumPlanes so it only needs to be called once per frame (rather than once per frame per direction indicator) there would be a minor perf win.  \n'
316,86626666,b'cache the camera position rather than calling camera.trasform.position each time through the function.  Profiling shows that calls to get the camera transform are adding up.\n\nFunction Name   Total CPU (%)   Self CPU (%)    Total CPU (ms)  Self CPU (ms)   Module\n- HoloToolKit.Unity.HeadsUpDirectionIndicator::UpdatePointerTransform  1.62\xc2\xa0% 0.00\xc2\xa0% 5   0   assembly-csharp.dll\n  - UnityEngineProxy.InternalCalls::Component_Get_Custom_PropTransform 0.65\xc2\xa0% 0.00\xc2\xa0% 2   0   unityengineproxy.dll\n    - Component_Get_Custom_PropTransform   0.65\xc2\xa0% 0.00\xc2\xa0% 2   0   unityenginedelegates.dll\n      Component_Get_Custom_PropTransform 0.65\xc2\xa0% 0.65\xc2\xa0% 2   2   unityplayer.dll\n'
321,86627228,b'why is the bottom of the range 5 instead of... 1 or zero?\n'
321,86628217,b'how does this get undone in removeeffect?\n'
321,86629198,"b'okay, I see.  \n'"
321,86630009,"b'Toolips are nice, but ToolTips are more practical.\n'"
321,86630228,b'Please use float.\n'
324,86828284,b'remove excessive debug print\n'
668,118586473,"b""I wonder if this would be simpler if the paradigm was 'keyBindingsAlways' instead of 'keyBindingsOnly'.  and wrap keyBindingsAlways in #if UNITY_EDITOR to be true and #else to be false."""
701,119909447,"b""This is a great idea!  I'm concerned about all of the hard coded values.  A thought would be to rework this such that the api is float GetUsabilityScaleFactor(Camera camera, float targetPPD) and return the scale factor required to get the targetPPD.  This way you don't need to have any of the hard coded values (aside from the min/max scale factor) and I think you'll get a good result.\r\n\r\n\r\n"""
701,119971433,"b""That's a good question, it might be that we default to 42 (~what HoloLens is), and people can adjust based on their experience.  I think sqrt(targetPPDOf42)/sqrt(cameraPPD) will get you a value that is close to what you've calculated through user testing (1.96 vs 2.18).  \r\n\r\n\r\n\r\n"""
910,137421577,"b'can interactionSource be null?  \r\n\r\nand since interactionSource is public, is the casing right?'"
910,137421873,b'0x1004 should be a constant with a name that tells me what the heck it means. :)'
910,137422069,"b""if the duration isn't specified what does the API do? Buzz forever? If so, perhaps duration in seconds can be defaulted to float.maxvalue so we don't have basically identical functions for basically identical code paths."""
910,137422243,"b""ahh, I see, one has a 'forduration' tacked on.   So maybe float.maxvalue can be special cased to call the non-duration version of the function."""
910,137664744,"b""oh, I see, this isn't a monobehavior.  It has a constructor. :) """
910,137665163,b'noice!'
952,137936470,"b""the touch visualizer needs to be able to clean up the material we've 'created' here for when the controller gets destroyed. Otherwise I suspect we have a small leak when turning controllers off and on."""
924,137952277,b'Done'
1727,170323612,"b""i changed the type of the variable BoundingBoxGizmo. The name of the class didn't change."""
1727,170377471,b'changed search for GlobalBoundingBox in scene to Instatiation of BoundingBox prefab.'
1718,170792686,"b""i think the scaling of a scene object based on HMD type should be handled by a script that could be added to any UI element that differentially scales. There are two scenes (dialog and progress that use them)That way the object is always known by the instance and doesn't have to be searched for."""
1785,172651376,b'will do'
1849,176866934,"b""This  function uses a Dictionary Collection which is most appropriately iterated by means of foreach.\r\nThe collection maps inputSourceIds to their inputSource reference. I suggest this strategy be considered a legitimate exception to the 'no foreach' convention since iterating in other ways introduces more cycles. Any thoughts?\r\n"""
1839,177216566,b'fields moved.'
1849,178658111,"b'these two variables currentRotationConstraint and rotationConstraint are each private, not exposed outside the class and not serialized in the Editor. So keeping them private, non-encapsulated, non-SerializedField variables seems to be the best way for them to be defined.'"
1936,180826263,b'changes to this file are from previous commit(s) by other developers.\r\nIts not part of the Tooltip commit.'
1936,180826445,b'changes to this file are from previous commit(s) by other developers.\r\nIts not part of the Tooltip commit.'
1936,180826468,b'changes to this file are from previous commit(s) by other developers.\r\nIts not part of the Tooltip commit.'
1936,180826670,b'ill make the change anyway because its clear what the effect would be.'
1936,180911228,"b'Actually, ClosestCorner cannot be zero because the first eight enums are fixed as indices into an array.\r\nClosestCorner is one of a collection of runtime-computed enum options so it has to be defined after the initial values of 0-7'"
1936,181890487,"b""the overrides (tooltipBackgroundMesh, tooltipBackgroundBlob, and tooltipBackgroundCorners have such different overrides for this abstract function that it really isn't possible to make a useful virtual function with default implementation. I could change the abstract prototype to a virtual function and have it be empty but that seems like it violates the thinking behind the original design."""
1936,181893687,b'can you verify that you still see this extra line?'
1918,181907990,"b""the public getter/setter isn't used so i just add a range to the serializeField tag"""
1918,181908432,b'so no change then.'
1918,182574594,b'state is accessed from outside and set from a derived class. so going with protected and adding getter-only public State'
1918,182593834,b'yes that must be broken up. yuck.'
1918,182593992,b'these names are hardcoded in the prefab - they are the raw names before they are assigned visibility when the dialog is instantiated.'
2127,189660531,b'oneButtonSet is required when the dialog is going to have only one button.\r\nThe oneButtonSet and twoButtonSet variables do not need to be flagged with SerializeField\r\nsince they are currently not set in the editor in the example ( this is a leftover from the original implementation from which this example was ported).. They can also be defined in the GenerateButtons() function since they are only used within that func. '
2212,192242036,b'corners and midpoints will always have unique values.'
2212,192249329,b'yes- great idea! both the main functions can share a new static function that does the bulk of the calculations.\r\n'
2823,219913900,b'yes'
2823,219917926,b'they all seem specialized except AxisToAffect'
2823,219921984,b'this file has been deleted. '
2823,219922923,b'yes'
2823,219935131,b'sure! where in Core would be the best place?'
2823,220326381,b'I moved this enum file to Core->Definitions->Utilities and renamed CardinalAxisType'
2823,220386375,b'done'
3044,229844963,b'only to be able to receive the event that the controller has released.'
3044,229845113,b'oops this should have been removed. '
3044,229845371,"b""the handles shouldn't show up as a long stream of cubes in the hierarchy"""
3044,229845520,b'maybe not- ill see if they need to be used and remove if not'
3044,229848054,"b""oops i misunderstood the original comment.\r\n\r\n'handle' here isnt a type. if i got a reference to a ball or cornercube, it wouldnt be easily indexed into a list of renderers. it could be a cube primitive or a ball primiitive.\r\n"""
3044,229848488,b'they may be able to be added to a util class if there is one- but i wanted to celebrate the idea of a One-File BB solution for a little while :)\r\n'
3044,230521155,b'\xf0\x9f\x91\x8d  changed to English readable: LeftTopBack etc'
3044,230523484,b'actually i removed two of the three functions. since there in only the pointtoray snap function- ill leave it in rather than create a new file for just one function.'
3044,230527649,b'\xf0\x9f\x91\x8d done'
3044,230527656,b'\xf0\x9f\x91\x8d done'
3044,230527675,b'\xf0\x9f\x91\x8d done'
3044,230527690,b'\xf0\x9f\x91\x8d done'
3044,230527702,b'\xf0\x9f\x91\x8d done'
3323,247660367,b'done'
3323,247660991,"b""removed- wasn't being used"""
3323,247661233,b'done'
3323,247661963,b'\xf0\x9f\x91\x8d '
3737,270978612,b'yes- change made'
3737,270978911,b'agree about redundancy. I removed currentPointer though- because controller seems more useful'
4018,276854215,b'removed'
4018,276854795,b'these are velocities that experimentally represent reasonable bounds. '
4018,276855582,"b""this is a new Script-- HandInteractionPanZoom which adds the zoom functionality without altering the pan-only script HandInteractionPan. So FormerlySerializedAs wouldn't be appropriate since it isn't changing a variable name in an existing script."""
4018,276856016,b'will do'
4018,276858344,b'yup you got it- the UV space is inverted in Y (V)'
4646,289476878,b'ahh some more properties have to be made public.'
4646,289549479,"b'ok ive pushed an update to the PR that sets the default values in the event that there is no corner prefab set. THis way, the defaults in the script are set for the shell parity handle prefabs, and if none are specified (the old style cube and sphere handles) the settings get set on Start(). If the BoundingBoxRuntimeExample scene is retried- the blue boxes start up and appear as illustrated above.'"
4646,289955403,b'I pushed the fix to the memory leak problem. \r\nYes I can put the version at .9f1'
4646,289955552,b'no.'
4646,289956031,b'yup= removed.'
4646,289957159,b'that is a major architecture change. the bb currently centralizes the handle grabbing test in order to avoid a script running on each handle. At this point- with the evolution of the bb from the simple tinkertoy style to the Shell Parity functionality- i think the handle-based script is a great idea but i think its beyond the scope of this bug fix.?'
4646,289957650,b'no it wasnt.'
4646,290021239,b'version changed back to 9f1'
4646,290021316,b'changed back to 5'
4646,290021449,b'cool!'
4735,290973558,"b""I can find a better test. This check is in there because a trigger pull on  a MC Controller fires several InputDown events- the description is 'None' on all but the last one which is the correct event to capture. """
4735,290973718,b'isnt the first pointer in the list the one that is associated with the event?\r\n'
4735,290974666,b'is there a more general generic controller type than WindowsMixedRealityController?'
4735,290975563,b'ill make this switch :)\r\n'
4735,290975608,b'removing'
4735,290975659,b'old- ill remove it'
4735,290975705,b'will do'
4735,290976673,b'where are these types defined?'
4735,291390448,b'got rid of string compares and Pointers[0] convention'
4735,291390536,b'oops missed one\r\n'
4735,291394552,b'oh! youre right!\r\n'
4735,291394927,b'removing OnPositionInputChanged & OnInputPressed'
4735,291394961,b'yup'
4895,295094522,"b'when localScale was zero there was a divide error that caused code to be skipped over when the exception threw. I guess this current code could be replaced with :\r\nlocalScale = Mathf.Max(0.0001f, localScale);'"
4895,295094637,b'sure. '
4895,295094791,b'its just to keep the numbers from getting really small for the user. These could be removed.'
4895,295094869,b'yes'
4895,295094893,b'yes'
4895,297759847,b'youre right- this looks like a copy paste error. removing the formerly line and changing tooltip'
4895,297760374,b'yes I would say its definitely time for that! '
4895,297760478,b'yes'
4895,297771201,b'oops the tooltips were mixed up. fixed.'
4895,297772277,b'good point. if rotation handle is a primitive then it would always have a Renderer- BUT! if its a user-created prefab it might not. Adding check.'
4895,297773258,b'yes'
4895,297780816,b'removed'
4895,297880725,b'removed- divide by zero problem no longer exists.'
4895,297881253,b'removed'
1265,148066246,"b'Yeah, sorry for the slop there. '"
1265,148066557,b'Was in the habit of just commenting out the original HoloToolkit code as a reference. '
1563,158387462,"b""Hmm. It could be an extension but I'd probably still want a monobehaviour to call into that extension method as I tend to just add this behavior to gameObject or prefab that I need to sort.  """
3664,269235341,b'This should update the SignalerStatusLabel instead of (or in addition to) logging.'
454,96471855,"b""It said\xc2\xa0an email response would show up here but\xc2\xa0that seems untrue :P\r\n\r\nI'm potentially OK with it - is this something that couldn't be accomplished through swapping to\xc2\xa0a material with a different diffuse color though?"""
764,126498713,b'Is there some way for me (without write access) to just accept your proposed changes?'
764,126500919,"b""I have write access to repo I forked from this, but the changes requested from here don't show up there I guess?"""
764,126531566,"b""Couldn't figure out an easy automated way to accept them so I just did it manually - seems crazy that it's not an option."""
764,128373019,b'Class headers? Sure thing.'
6310,336096468,"b""Agreed, should've thought of that. Will make relevant changes."""
6310,336099061,"b""Yes I think so! Currently, it _does_ look correct on HL1/HL2 but when VR headsets are used, FOV of course is bigger. On the Odyssey, it doesnt look _too_ big, but definitely bigger. Thought about angular scale vs. percentage-of-viewport scale a lot yesterday evening and for the multi-platform reason alone I think I will switch the logic to be more like what you're describing (combination of fixed measurement at one meter deep and angular scale) which will lead to more platform independence."""
6310,336100263,"b'Should it though? The issue was created so that Unity behavior would match native behavior (which resizes with distance). If it is off by default, the behaviors will not match.'"
6310,337729087,"b""After further thinking/discussion with others: \r\n\r\nMy current feeling is that the cursor bounds being calculated in Start() should establish a baseline rather than a physical measurement. This baseline should remain in perpetuity and not upon cursor visuals (mesh) being updated at runtime. For example, the default reticle has many meshes involved with its lifecycle. These meshes are shown and hidden during various interaction state changes. Let's say a user wants to use a mesh significantly larger than the default resting cursor and swaps it out at runtime. If they incorporate that new mesh into the lifecycle of the cursor, and new bounds are established, that would make all of the other meshes substantially smaller. A user would need to replace every mesh involved with every state of cursor interaction simultaneously for that to be useful. \r\n\r\nI think we should think of various cursors' scaling in relation to the default resting cursor. If a user wishes to make a separate cursor prefab outside of runtime then that is totally possible and the other states will continue to be scaled based on the mesh in the default resting state. Let me know what you think!"""
6366,339178723,"b'By ""can just call directly into this property"" do you mean [Obsolete]CursorAngularScale will get and set cursorAngularSize?'"
6366,339185354,"b'Thanks Kurtis, I just pushed an update. Let me know if what I did checks out. '"
7188,375319125,"b""hello. I want (and expect) this script not to depend on SRat all. When spatial awareness is disabled in MR toolkit, gameobject with taptoplace script on it start to behave weirdly, go back and forth across the scene, start to rotate, jump from one position to another, etc. Still researching the reason. Actually i'm using spatial awareness, but at the moment of placing object i already have mesh of walls and floors and spatial mesh disabled. I hope, that i'll find out the reason of this behaviour, despite this, i found taptoplace script pretty good and useful"""
6834,356621764,"b'Yeah it makes much more sense. I just noticed the test is not actually using the last param, so I guess I could just make the last param optional?'"
6834,356769946,"b'Agree about using strings. I have updated this but had to use an int cast the enum to compare with current state index. Using  ""focus state value > 0"" wouldn\'t ensure current state as focus. '"
6834,356772321,"b'I believe this is being tested on the assert that follows that WaitForInputSystemUpdate(), no?\r\n'"
6834,356772640,b'Agree. '
6834,356773002,b'Makes sense.'
6931,359487642,"b'It returns true in the editor or on HL1, but has same value for both hands. This start from zero brakes scale logic.'"
6931,359849899,"b'This could be an option, but for readability it would put edge case as the first if check? is it better?\r\n```suggestion\r\n               if (data.currentPointer is GGVPointer)\r\n                {\r\n                    data.touchingInitialPt = SnapFingerToQuad(data.currentPointer.Position);\r\n                }\r\n               else if (TryGetHandRayPoint(controller, out Vector3 handRayPt) == true)\r\n```'"
6931,359882721,"b'New Pan Delta is 0.2558216. On device this should remain the same, but on the editor, Hand Controller pointer (around Index Tip) is being used for initialization but Hand Palm position is being used on update, so there is an offset there. No Hand Palm on HL1.'"
7006,364700424,b'Maybe we remove the message from documentation and window and only leave it in the class summary?'
7006,364766652,"b'Yeah, no need for the dictionary, changing to List<Type>. The array of strings needed only for populating menu selection options.'"
7006,364837364,b'will cache the instance'
7006,364838438,b'yeah?'
7006,364839682,b'was my initial thought... looking into it'
7006,364841175,b'Matching popup type name selector  with the actual type list. '
7006,364841460,b'corrected'
7006,364842279,b'agree. adding comment.'
7006,364845911,b'adding comment. Toolbar.Objects refering to Game Objects and Prefabs. (Maybe should change tab title to GameObjects?) '
7006,364847320,b'Changing this.'
7006,364848519,"b""No it doesn't. :)"""
7006,364849672,b'Checking this'
7006,364851119,b'Yeah... This is prob the only way to test and use the migration tool as a button on custom editors of obsolete components'
7006,366474078,b'Changed to GetLoadableTypes as an instance is actually needed.'
7006,366479642,b'removed dependency'
7006,366480361,b'Changed logic'
7006,366536444,b'Adding CheckChange'
7006,366537033,b'this is changing to number of objects selected'
7006,366546372,b'Adding checkchange scope and name of method'
7006,366941696,b'I believe those test are already there no? There is a test where a prefab asset is created from that game object. and then the actual prefab asset is migrated. The same for scene asset.'
7006,366957790,"b'I believe on line 72 is using the ""GetLoadableTypes"" extension, right?``'"
7006,366957983,b'Changing'
7006,366959686,b'Fixing'
7006,366991003,b'Changed'
7006,366991123,b'Fixed'
7006,366991194,b'Nice One'
7006,366991251,b'Changed'
7006,367361300,"b""think I didn't added the new meta, and the old one is still there. I will delete this file, as the meta will be generated auto right?"""
7006,367365640,b'MigrationTypeNames needs an extra item. The first item should be empty so we can have an empty option on the popup selector. Suggestions?'
7006,367490080,"b'For Saving scene, the editor utility is poping window and asking if user wants to modify current scene, both options, Save scene or Do Not Save, return true. enough?'"
7006,367850028,b'Good point'
7006,367851250,"b'Yeah, I was unsure about the approach. also prefere to avoid the extra check.'"
7006,367853092,b'Changed that. It is indeed exactely 10 times faster (30 vs 3 ms)'
7006,369490595,"b'The Inspector of ManipulationHandler  now has a button offering the user the possibility of migration to ObjectManipulator. MigrationTool was in Tools assembly. Moving MigrationTool to SDK.Experimental.Utilities and removing that dependency.   MigrationWindow stays on Tools, but Tools depending on SDK should be fine, right?'"
7128,370767462,b'Changed'
7128,370767514,b'Changed'
7128,370767590,b'Changed'
7128,370768542,"b'Changed all calls to PlayModeTestUtilities.ShowHand, move or hide found in the file to TestHand '"
7162,371382515,"b'Changing this. I made the choice to throw and log on catch but I guess I can just log if null. Apart from getting the benefit of the Extension, would you say it would be bad practice to choose to log in the catch?'"
7246,376508065,"b'TryGetEyeGazeRay is trying to provide eye gaze data even if gaze is not eye based, but if that is the case hit position is not being handled, so all user have is ray direction. \r\n[Documentation](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/EyeTracking/EyeTracking_TargetSelection.html#example-4-use-hand-rays-and-eye-gaze-input-together) says it is possible to use hands and eye gaze at the same time. Should this be achieved through the TryGetEyeGazeRay instead?\r\n '"
7246,377613528,"b'IsEyeGazeValid needs both eye tracking to be available and eye tracking selected as default gaze source. IsEyeTrackingAvailable is there if user wants to query eye tracking ray, even if head gaze is the default. \r\n\r\nPerhaps IsEyeGazeValid should be called something like IsGazeEyeBased ?'"
7246,377613734,b'Answered below.'
7246,377761604,"b'What I meant is that when eye is not selected as default gaze, if eye tracking data is available, the user can query the eye ray but If user wants to get focus information about that ray this is not implemented. \r\n\r\nNow I understand that this should be handled in a separate PR if needed.'"
7246,377761712,b'changed'
2092,188110612,"b'Rofl, they are needed everywhere in these updates.  First Rule of testing, make sure it tests!'"
2092,188025296,b'Rename to DualAxisInputType?'
2092,188025879,b'need doc comments'
2092,188110667,b'Considering'
2092,188110869,b'Like EVERYWHERE :D '
2092,188025802,"b'I\'m nut sure I get this one. Also, a ""better"" name is needed.'"
2092,188025965,b'need doc comments'
2092,188110831,"b""It's taken from the Enum atm, not sure it's needed yet but that will come from actual testing."""
2092,188026239,b'RawInputType?'
2092,188026449,b'need doc comments'
2092,188026624,b'SingleAxisInputType?'
2092,188026695,b'need doc comments'
2092,188027024,"b""SixDegreesOfFreedomInputType?  Abbreviations in type name aren't much cared for in .net"""
2092,188027093,b'need doc comments'
2092,188027166,b'ThreeDegreesOfFreedomInputType?'
2092,188027201,b'need doc comments'
2092,188415820,"b""Should probably use the `UnityEngine.Debug.Assert` if this isn't a Nunit test class"""
2092,188442900,"b'Used the same method as used in other parts of the toolkit. Will review and update.\r\n\r\nI don\'t particularly like this approach, but it will do until ""I can find something better""'"
2092,188443286,b'Werent we going to have Assert wrappers? Then we could have Unity and runtime asserts.... Please.'
2092,188451716,b'I _really_ *really* disagree with wrapping asserts and debug logs.'
2092,188452219,"b'In either case, I was just trying to point out that Simon used the wrong namespace for the asserts. '"
2092,188590028,"b""Will review.  ANd I know you are against Wrappers @StephenHodgson but it's much better to control that from a Single class and use our own implementation, rather than spat Unity stuff everywhere as it leaves us open to issues if Unity introduce a breaking change.  I prefer to be in control, not unity."""
2092,188698690,"b""Well unfortunately that impacts others who use the toolkit.  I don't like when dependencies change the way logs and assertions are handled.  For example, we have tools and things we use that are directly impacted by a change like this."""
2092,188698821,"b""We're using Unity, do it the Unity way. Accept the breaking changes when they come. Not _if_ they come."""
2092,188881879,b'On the namespace thing.  It IS using the UnityEngine.Debug.Assert. in the same way you do in the Input manager :D\r\n\r\nP.S. Wrappers would make this MORE clear :D'
2092,189292602,b'Using wrong namespace for assertions'
2092,189293683,"b""Let's drop the datum suffix on these properties and use data instead. Datum is plural for data and we only have a single item."""
2092,189431147,"b""It's the same as used in the InputSystem, but I'll review again."""
2092,189431160,"b'Fair enough, got to get our connotations right.'"
2092,189439096,b'Should be `UnityEngine.Debug`.\r\n\r\nThat class you have in there is reserved for testing'
2092,189440302,"b""Not sure that I agree with the ID being a string. Let's follow the pattern of the rest of the ids we keep as uints"""
2092,189440449,"b'Agreed, I think it was an oversight'"
2092,189442993,"b""shouldn't this be `!=`?"""
2134,189456859,"b""As discussed, I personally don't like the multiple GET option as it complicates the API.\r\n\r\nWe should have the following allowing the model to store and retrieve the data as it sees fit:\r\n* Set Data\r\n* Get Data\r\n\r\n\r\nWhere as this is now:\r\n\r\n\r\n* Set Data\r\n\r\n* Get Bool\r\n\r\n* Get Float\r\n\r\n* Get....\r\n\r\n\r\nWhich makes the code look very messy.  I'd prefer to keep the original model I laid out and only return to this if we hit issues.\r\n"""
2134,189456863,"b""This isn't used for 6DoF unless I've missed something?  We have the Tuple for that."""
2134,189465388,b'Just wanted to avoid boxing'
2092,189467274,b'Get access only.'
2092,189467283,"b'These could be fields, correct?'"
2134,189470248,b'Can we do both?'
2134,189511315,"b'I suppose that is a compromise, sure.'"
2137,190113895,"b""Yes, I don't see why not after the InputAction changes I've made."""
2173,191055457,b'Should we also include a Pointer action as well?\r\n\r\nOriginally I had these defined in the Input Action Profile itself.'
2173,191056603,"b'Except that Pointer is unique to pointers ONLY, Hold is a held state for any input\r\n'"
2173,191058638,"b'not true, there is/was a global action for all pointers'"
2173,191062653,b'What about pointer actions?'
2092,189467325,"b'I still feel like `InputType == InputAction` because of their enum types.  Maybe we can change `InputAction` to a struct with some data that users can set per interaction, like the action id, a custom name, etc...'"
2092,189549292,b'As discussed above:   I think we resolved this in talk last night:\r\n\r\n* InputType is the Physical Input Type (maybe we should rename it)\r\n* Input Action is the Logical Action that is (should) be sent to the InputSystem\r\n\r\nThe mapping directs a specific input to output the action the dev has configured. Multiple inputs can point to the same action.'
2184,191231579,b'Replace *Note with `<remarks><remarks/>`'
2184,191249943,"b""Isn't this the same as `InteractionDefinition`? Does this replace it?"""
2184,191314023,"b""No, this is a simple DTO for the controller mapping profile, as we don't need the data parts of the InteractionProfile in the serialized configuration.  Unless you think we can do away with it?\r\nFrom this mapping, e create and initialize the interactiondefinitions at runtime."""
2513,205973275,b'Summary Tag'
2513,205973283,"b'Initialise with ""= 0""'"
2513,205973291,"b'Initialise with ""=0""'"
2513,205973315,b'Summary Tag'
2513,205973324,"b'Initialise with ""=0""'"
2513,205973329,"b'Initialise with ""=0""'"
2513,205973340,"b'Initialise with ""=0""'"
1920,179909131,b'focus should be part of the input system.'
1920,179909135,b'controllers should also be part of the input system.'
1920,179909141,b'Actually we do need to use this.'
1920,179912248,b'This was only there as an example as it was separate before.  I expect a LOT of change to happen in this configuration profile as vNext evolves.'
1920,179912252,"b'We may use it later, just not used for now :D '"
1920,179913252,b'Agreed'
1920,179913275,"b""Not sure I agree, as they are part of the active SDK, sure the InputSystem should grab these references, but at the time of SDK discovery, the input system wont exist yet (and we won't know which one we are using)\r\n\r\nThese are set (or will be) by the SDK discovery"""
1920,179913285,"b'Agreed.  But it won\'t ""do"" anything yet until we build a custom editor (the rabbit hole I fell in) to configure this'"
1920,179917600,b'I already updated the usage to serialize and deserialize the managers appropriately.'
1920,179917790,b'Why change this to read-only?'
2002,183780163,b'` initialManagers?.Length > 0`'
2002,183787882,b'or `for (int i = 0; i < initialManagers?.Length; i++)`'
2002,183794586,b'Fair enough'
2092,188415988,b'should the tooltip info and summary match?'
2092,188436548,"b'I\'ll fix those later, with so much change, I want to make it ""work"" (tm) first.'"
2092,188443700,"b'The tooltip should be a subset of the summary tag, up to and including a subset of 100% :)\r\n\r\nThat said, I am fine with Simon doing a doc comment pass as a separate issue, if that works best.'"
2184,191232099,b'I think the controller models should be moved into the controller configuration profiles.'
2204,191666835,b'extra line space'
2204,191666857,b'missing summary'
2204,191667078,b'Can we move this into the device template inspector?'
2204,191676921,b'Removed'
2204,191677904,b'Already moved'
2204,191678467,"b'Grr, that was your property, but my bad for not documenting it when I grabbed it'"
2184,192846657,"b'Yes, please.'"
2184,192846766,b'I prefer GetControllerMapping < T > ()'
2184,192856101,"b""We could make it a static and include this to the Type controller parameter so we don't have to pass in the type as well."""
2184,192896448,"b'in a TODO for a later PR, iterating on what exactly we need'"
2322,197273091,"b'Is `ControllersProfile` guaranteed to never be null here? What if I want to use the configuration profile, but not a controller profile?'"
2322,197283458,b'Yes bc ControllersProfile is a unity engine type that can never be null.'
2322,197283821,"b""It's for the same reason why you can't use the `??` on Unity.Object types."""
2322,197291857,"b'Should we add an `== null` check then instead? If I delete the ControllersProfile from the ConfigurationProfile, Unity crashes on play.'"
2322,197292212,"b""I'll double check in a bit"""
2322,197303891,b'Fixed.'
2322,197304476,"b""It also looks like unchecking `EnableControllerProfiles` doesn't actually do anything except hide the field in the Inspector (if the field is filled in before unchecking, it still runs and works), but that's unrelated to this PR."""
2322,197305074,"b""> It also looks like unchecking EnableControllerProfiles doesn't actually do anything \r\n\r\nDid you save before running in the scene?"""
2322,197305139,b'BC it def disables the profile:\r\n![image](https://user-images.githubusercontent.com/13334553/41750257-cbabe060-756f-11e8-87cd-de3066d8d26d.png)\r\n'
2322,197305665,"b""Also, as far as I'm aware, we're not even using the Controller Profile yet. It's not wired up to anything."""
2322,197306936,"b""It disables the bool, but the bool doesn't seem to be used anywhere except to decide whether to display the field in the Inspector. As long as `controllersProfile` has a value before the field disappears, `GetControllerMapping` still uses it."""
2322,197307550,"b""Right, we haven't wired it up anywhere yet."""
2322,197307619,"b""I'm not even really sure what that GetControllerMapping is for anyway. Gotta ask @SimonDarksideJ """
2322,197450658,"b'yes it was being used., That is until @StephenHodgson deleted the code in my devices branch :P \r\n\r\nBut, as to the Bool, I think that is currently only used by the Editor.  Will have to double check and validate in the controller space, that we test this before loading profiles.\r\n\r\nThis bool would / should also effectively disable controllers.   No config, no controllers :D '"
2337,197655066,b'This is addressed in the next PR.'
2338,197742124,b'How is this fixed by removing it>?'
8487,485137443,b'Change approved on #8091'
8487,485138528,b'Latest changes approved on #8430'
8487,485139198,b'Latest changes approved on #8430'
8487,485139416,b'Latest changes approved on #8430'
8487,485139796,b'Latest changes approved on #8430'
8487,485140483,b'Latest changes approved on #8430 + API change call to BasePlaymodeTests.Setup()'
8487,485141054,b'Latest changes approved on #8424'
8487,485141235,b'Latest changes approved on #8424'
8487,485141333,b'Latest changes approved on #8424'
8503,486472461,b'@keveleigh thanks for spotting this. I will check a change I have made to solve an issue with text mesh pro. '
8503,486478567,b'Opened #8527 to investigate the issue. '
8530,487844531,b'This README is actually going to be deleted. Its the README that comes inside experimental folder in the project for experimental stuff.'
8530,487845872,"b'But for experimental stuff, maybe we should only ask contributors to add READMEs to the actual Documentation folder structure outside the project.'"
8561,488772650,"b'Should we add a msg if assert fail, like the other asserts on the test?'"
8575,489540532,b'Would be a good idea to clamp the uv values before assigning new values. '
8586,490893080,"b'Issue also happens with 1.5.0+. Its independent of Unity version. \r\nApart from dropdown font size, the character spacing on second column is also altered as you can see in the image.'"
8586,490896952,"b""```suggestion\r\nThere's a known issue for newer versions of TextMeshPro (1.5.0+ or 2.1.1+), where the default font size for dropdowns and bold font character spacing has been altered.\r\n```"""
8606,492075818,b'Currently the target is not being marked as dirty by the editor even using PropertyField.'
8593,492864275,b'super nit: remove extra line'
8593,492864575,b'super nit: remove extra line'
8593,492869595,"b'Might be personal choice, but opting for \r\n`using (new EditorGUILayout.HorizontalScope()) {}` and `using (var check = new EditorGUI.ChangeCheckScope()){}`\r\ninstead of   `EditorGUILayout.BeginHorizontal()` and `EditorGUI.BeginChangeCheck()` might improve readability, and avoid forgetting to End the scope, which sometimes does not throw error straight away.'"
8593,492871192,"b'```suggestion\r\n        /// If this flag is enabled, only the selected constraint list will be applied.\r\n```'"
8593,492873187,"b'```suggestion\r\n        [Tooltip(""Per default, constraint manager will apply all to this gameobject attached constraint components."" +\r\n```'"
8593,492873514,"b'```suggestion\r\n        /// Per default, constraint manager will apply all to this gameobject attached constraint components automatically.\r\n```'"
8593,492876386,"b'```suggestion\r\n        /// Enable or disable constraint support of this component. When enabled, transform\r\n```'"
8593,492879635,"b'```suggestion\r\n        [Tooltip(""Enable or disable constraint support of this component. When enabled, transform "" +\r\n```'"
8593,492879802,"b'```suggestion\r\n        /// nable or disable constraint support of this component. When enabled, transform\r\n```'"
8593,492881772,"b'```suggestion\r\n        /// First, auto mode is confirmed by attaching a rotation and scale constraint.\r\n```'"
8593,492881912,"b'```suggestion\r\n        /// Then, manual constraint filtering is activated and only the scale constraint is added.\r\n```'"
8593,492885239,"b'```suggestion\r\nSpecifies which axes to prevent rotation about. By default, these axes will be global rather than local, but this can be changed below. Because this property is a flag, any number of options can be selected.\r\n```'"
8593,492885812,"b'```suggestion\r\nSpecifies which axes to prevent movement on. By default, these axes will be global rather than local, but this can be changed below. Because this property is a flag, any number of options can be selected.\r\n```'"
8593,492888533,"b'```suggestion\r\nIf constraint manager is set to manual mode, only constraints that are linked in the constraint list are processed and applied to the transform. The list displayed will only show the user selected constraints as well as [go to buttons](#go-to-component) or options to remove or add entries.\r\n```'"
8593,492889287,"b'```suggestion\r\nPer default, constraint manager will automatically collect all [constraint components](#transform-constraints) attached to the game object and apply them to processed transforms.\r\n```'"
8593,492894153,"b'Out of curiosity, why do we need this last `yield return null;`?'"
8575,494303681,"b'I have noticed there is already a check for pan limits before applying uv deltas. Could you please try avoiding the duplicates and combine the checking code and its variables.\r\n\r\n`// Test for pan limits\r\n            Vector2 uvDelta = new Vector2(totalUVOffset.x, -totalUVOffset.y);\r\n            if (!unlimitedPan)\r\n            {\r\n                bool xLimited = false;\r\n                bool yLimited = false;\r\n                for (int i = 0; i < uvs.Count; ++i)\r\n                {\r\n                    uvTestValue = uvs[i] - uvDelta;\r\n                    if (uvTestValue.x > tiling.x * maxPanHorizontal || uvTestValue.x < -(tiling.x * maxPanHorizontal))\r\n                    {\r\n                        xLimited = true;\r\n                    }\r\n                    if (uvTestValue.y > tiling.y * maxPanVertical || uvTestValue.y < -(tiling.y * maxPanVertical))\r\n                    {\r\n                        yLimited = true;\r\n                    }\r\n                }`'"
8575,494305103,"b'I believe the default value for ""lockvertical"" and ""lockhorizontal"" is already false. Maybe this is not needed?'"
8575,494307225,"b'PrefabScrollRightLimited, PrefabScrollLeftLimited, PrefabScrollUpLimited and PrefabScrollDownLimited have very similar code. Could you please combine them or put duplicated code into a method?'"
51,64923379,"b'Someone looking at this menu might not quite know what it is for. Suggestion: ""HoloToolkit/Configure/Apply HoloLens Settings to Scene"". Too long? Just an idea.\n'"
51,64923565,b'HoloToolkit/Configure/Apply HoloLens ProjectSettings?\n'
51,64923853,b'This is a well-written error message for the user explaining this situation.\n'
51,64928463,b'Nitpick: Delete this. Or make a nicely-formatted log entry the describes all the changes that were made.\n'
682,117642557,"b""Changing MeshMaterial to meshMaterial is the only intentional change here. I'm guessing the other differences are just due to resaving the file and picking up other changes that affect serialization."""
533,119755483,"b""What would happen if ToggleRecording is called to rapidly turn recording on and off? I'm concerned that StartRecording and StopRecording coroutines would both be running simultaneously--possibly even multiple instances of them. In edge cases, it seems like this could leave the system in an inconsistent state.\r\n\r\nNot sure of the best way to handle this. \r\n\r\nIdeas:\r\n- Each coroutine yields at the beginning to wait for a previous coroutine to exit before starting its work.\r\n- There is only a single coroutine that is always running to handle starting and shutting down. A variable is set telling it the desired state (Running/Stopped) and it appropriately handles transitions whenever it detects that it isn't in the desired state. Usually, when already in the desired state, this coroutine would simply yield and do no work."""
533,119756357,"b""nit: Perhaps add a comment describing under what conditions the buffer will have NaN data or data outside of the expected -1 to +1 range. Is this an error case? Problem with the user's microphone? Unity bug? It seems like the resulting audio buffer will contain glitches or clicks in this case, so should we treat this as an error?"""
533,119917256,"b""In this file, the speech handling seems complicated. I am seeing SpeechInputHandler components on the spheres, but they have no keywords. It looks like there's a SphereKeywords script that does the real work by reacting to keywords with string handling in a switch statement. Would it work to add the keywords to the SpeechInputHandler components, set the object colors directly in the event response, and delete SphereKeywords? I think that would be an easier-to-use technique to demonstrate."""
533,119918863,b'nit: Method name is a little confusing. Usually Toggle would imply that it swaps e.g. isRunning = !isRunning. Consider changing this to a public bool property. IsRunning?'
533,119922626,"b""Should this be isRunning = !pause? If paused is true, MicStream.MicPause() is called so wouldn't that mean that it is no longer running?"""
533,119924972,"b""What is the purpose of the if (isRunning) condition in this and the following methods? Wouldn't you want to set the MicStream state in either case? Or is the idea that this can only cause you to stop running, but recording shouldn't resume when unpaused/reenabled?"""
533,119973761,"b'Should this be in the #### Voice section instead of the #### Microphone section. It seems higher-level, more similar to the other voice code than to the microphone code.'"
533,119973886,"b'Why are these capitalized? I would expect capitalization for public fields, but not private fields.'"
533,119975153,"b'Why are InitialSilenceTimeout, AutoSilenceTimerout, and RecordingTime static? Since DictationInputManager is a singleton, would it be more natural for these to be ordinary public fields referenced via DictationInputManager.Instance.InitialSilenceTimeout? Also, it could be more convenient to specify them on the manager instead of duplicating these fields on items such as DictationRecordButton that have their own local settings that are transferred to the global settings.'"
533,120492158,"b""Although this prevents calling StartRecording twice or StopRecording twice, I'm concerned that both StartRecording and StopRecording could be running at the same time. For example, StartRecording sets IsListening to true and then yields. At this moment, StopRecording is called and starts running simultaneously at the same time that StartRecording is trying to finish its work."""
533,120492234,b'Seems like this is backwards?\r\nIsRunning = !pause;'
533,120500516,"b""Hmm. This is a little tricky because Start/Stop recording in DictationInputManager is a coroutine that takes time to complete, but DictationRecordButton is a button that flips state instantaneously.\r\n\r\nI have two ideas. Maybe you'll find one of these helpful or think of a better idea:\r\n\r\n1) Have DictationInputManager consider it an error to call Stop when Start is running and hasn't yet completed. (Or to call Start when stop hasn't yet completed.) They could set a bool such as isTransitioning when they start their work, clear it when completed, and yield break when they are called if isTransitioning is already set. However, this would make the class more difficult to use. For example, DictationButton would have to track the return value of StartCoroutine and disable additional actions until it has completed.\r\n\r\n2) Have DictationInputManager track its desired state with StartRecording/StopRecording as non-coroutine methods that just set the desired state instantaneously. (StartRecording would set the parameters it wants to use in member variables. StopRecording would just save the fact that it wants recording to be off.) Then, you would need to write an update function that checks the current state, compares it to the desired state, and makes any calls needed to start/stop recording in response. This would be nice, but it seems complicated to write that logic to work correctly in all cases."""
715,121460762,"b'Good idea, but I still get ""Assets/HoloToolkit/Utilities/Scripts/SceneList.cs(23,30): warning CS0414: The private field `HoloToolkit.Unity.SceneList.sceneNamesUpdatedByBuild\' is assigned but its value is never used"". In the editor, this list is assigned to, but we never read from it. The only purpose of writing to it is so that Unity will serialize the value that is then used at runtime.'"
715,121482882,b'Correct.'
695,130713509,"b'When I ran this, I noticed that the cursor passed right through the UI. The buttons lit up and could be tapped, but I found it visually disturbing that the cursor remained far behind the buttons instead of snapping to a collider on the buttons.'"
695,130713968,"b""Personally, I'd prefer if this UI were separated from HoloToolkit.Sharing. I use Unity networking in my applications and would find this control useful if it wasn't tied to the HoloToolkit.Sharing library."""
695,130715794,b'Looks like a good change. The above comments are suggestions.'
695,130718423,"b""The ability to enter an IP address may be useful in other contexts. For example, sometimes an app needs to connect to a server or another HoloLens on the local network at a specific IP address. Often in an enterprise application using the Unity matchmaking service may not be desired.\r\n\r\nBut I see in your later comment that this won't be needed in sharing in the future (Discovery Client) so probably not worth completing this pull request. Although it might be useful to have a UI for entering IP addresses during development, I don't think a finished application should require manually entering IPs."""
747,130727769,b'What is the purpose of this script? Why use this script instead of including the scene launcher game objects in the SceneLauncher scene directly?'
747,130730956,b'What is the purpose for having a special UI and list of scenes in the SceneLauncher? Previously the list of scenes was automatically generated from the list of scenes the user specified via the built-in Unity scene list in Build Settings. With this change there will be two mostly-equivalent lists and UIs.'
747,130731975,b'Nice feature. \xf0\x9f\x91\x8d '
747,130734446,"b""Is the intent to here to keep the Scene Builder list up-to-date with the build settings? It seems like this may miss some cases such as:\r\n* A scene is removed from the build settings and a different one is added. (Lists will have the same length, but different elements.)\r\n* Build settings are updated without opening the SceneLauncher prefab in the inspector, so update doesn't occur.\r\n* Build settings are updated while SceneLauncher prefab is already open in inspector, so OnEnable isn't called again.\r\n* SceneLauncher prefab is modified by this function, but Unity is closed without saving the change to the prefab. (Would editor code be required to mark it dirty or save the prefab?)"""
747,130736256,"b""Wouldn't we want to include all the scenes from HoloToolkit-Unity here so that the SceneLauncher is ready to run for HoloToolkit users who want to browse everything it has to offer?"""
747,130737536,"b""Wouldn't we still want to warn the user if SceneButtonPrefab is null? Without this warning everything will run and they will silently get no buttons."""
747,130931550,"b'It\'s an interesting idea, but I don\'t like the way it is turning out. It adds a lot of complexity to have the code for an editor that is duplicating the build settings functionality, it could be surprising that editing a list in the scene launcher also changes your build settings, and also it is complicated to keep the two lists in sync. Here are some alternatives I would consider:\r\n1) Revert to the previous approach where the user specifies scenes using the build settings via the standard Unity API and using SceneList.cs to persist a list of the scenes when builds are created. Optionally, a custom editor for SceneLauncher could have text informing the user that the scenes that are available can be selected via Build Settings.\r\n1) Maintain a completely different list in SceneLauncher. This isn\'t exactly what HoloToolkit needs, but some projects might want to have a long list of scenes in the build, but only have a subset of those scene launchable from the SceneLauncher menu. For example, a project that uses additive scene loading where some of the scenes can\'t run by themselves wouldn\'t want all of them to be launchable. Giving the SceneLauncher its own list without trying to tie it to the build settings might simplify things. Additionally, it would be nice to have a custom editor for SceneLauncher with a utility buttons for ""Add All Scenes from Build Settings"" so that users who want everything don\'t have to manually add scenes one at a time. Unfortunately, scenes are added to HoloToolkit all the time and people probably wouldn\'t think to go into SceneLauncher and click the button to add their new scene. So SceneLauncher would probably fall out of date and only launch some of the scenes that are available.\r\n\r\nWhat do you think, Stephen?'"
747,130932747,"b""I wasn't aware of that. Can you tell me more about warnings about unassigned references? If you don't attach a game object and SceneButtonPrefab is left as null then where would the warning appear?"""
747,131268561,"b""My impression was that having a field in the inspector referencing a null (none) object is a valid state accepted by Unity. If there's a way to declare that a field must be assigned an object and receive a warning about it I'd love to know how that works."""
832,131700601,b'nit: Would a default setting of true be preferred so that buttons automatically adopt theme changes? When would someone want this to be set to false? Would you want it to be false to save a little bit of performance in the Update method?'
839,131744410,"b""I'm finding this a little harder to follow because some state is implemented in this function related to Light, some is updated in OnCursorStateChange, and some is in ElementVisibility. Which one is used depends on whether we're becoming visible or invisible. If I were modifying this code, I think I'd have a hard time convincing myself that I'm doing it correctly for all the possible cases. Would it be possible to simplify this so that all state updates flow through a single path?"""
747,134817456,"b""I like this idea. Sorry I haven't had a chance to take a look sooner. I intend to do so soon if I can."""
747,135596117,"b'Need to add a step to the instructions:\r\nAfter adding scenes to the build, you can use the Scene Mapping setting in the SceneLauncher prefab to control which scenes are included or not included in the SceneLauncher menu.'"
747,135599664,"b""[fixed in latest]\r\nIs this O(n^3) with three nested loops when it could be O(n^2)?\r\n\r\nThe outside for loop creates a list element for each item in the build settings. The two foreach loops check for matching scenes and assign IsButtonEnabled to the previous setting if they match. But on every check of the outer for loop it's checking all scenes (foreach EditorBuildSettings.scenes).\r\n\r\nShould it just check for the current scene in oldBuildSceneMapping without using the first foreach loop? Or could both foreach loops be moved outside of the for loop?"""
747,135600857,"b""Would it be better to keep this inside the scene instead of using a prefab? When the user wants to modify and test SceneLauncher settings, they are likely to open and the SceneLauncher.unity scene. But you can't change the IsButtonEnabled settings from that scene. Instead you have to go to the SceneLaucher.prefab in order to change them, adding an extra step and a little bit more knowledge needed in order to use SceneLauncher. Ordinarily I'm in favor of breaking settings into prefabs so that scene is easier to manage, but this scene is already pretty simple.\r\n\r\nThat's my thinking, but I can also appreciate the cleanliness of using a prefab, so if you feel strongly about this a prefab is OK with me."""
747,135616531,"b'[fixed in latest]\r\nSince we have the [SerializeField] tag, should this be a private variable? Also, same question for SceneButtonPrefab and MaxRows.'"
747,135617344,"b'Since we no longer have the external ReturnToSceneLauncher component, this could be private. Hooray for being self-contained.'"
747,135618551,"b""[fixed in latest]\r\nWhy was the debug log removed? I'm thinking it's helpful to have a record in the log that a particular scene was launched."""
747,135621740,"b""Oh, I see. Because SceneLauncher has a SpeechInputSource/Handler its game object becomes DontDestroyOnLoad and if it were in the scene then another instance would be created when you return to the scene. The way I have usually handled that is to make the DontDestroyOnLoad object detect that it isn't the singleton during its Awake function and Destroy itself. Like [this](http://answers.unity3d.com/questions/747603/how-does-dontdestroyonload-work-1.html) or [this](https://honkbarkstudios.com/developer-blog/dontdestroyonload-tutorial/).\r\n\r\nPro: This would keep the SceneLauncher more self-contained in a single script that could be embedded directly into the scene.\r\nCon: A bit weird to make an extra copy only to destroy it.\r\n\r\nThis is fine, though, if you like the way SceneLauncherChecker currently works."""
747,135629053,"b'Let\'s make the keyword Scene Launcher. Possibly also include ""Scene Loader"" as an additional alternative, but the main keyword should match the name of the scene.'"
747,135631300,"b""When I open up the build settings, add a scene, and then Run in Unity then a button for the added scene doesn't show up. First I have to select the SceneLauncher prefab in order to display it in the inspector in order to get the list of buttons to update. Can we try including a [PostProcessScene](https://docs.unity3d.com/ScriptReference/Callbacks.PostProcessSceneAttribute.html) attribute that calls CheckBuildScenes so that we ensure that this update has when the app is built or run?"""
747,136389123,"b""My guess is that this wouldn't be significant compared with all the other aspects of reloading the scene. You could try measuring it in the profiler to see the impact of creating and destroying the scene launcher game object. (But this is a small point. Although I would probably try the self-destroying approach, the way the SceneLauncherChecker currently works is OK.)"""
747,137116477,"b""I like how you're using Singleton.IsInitialized to gate destruction of the redundant DontDestoyOnLoad objects."""
747,137118552,"b'In addition to the README.md, the instructions also appear in on-screen in the SceneLauncher prefab. Should add the ""After adding scenes to the build, you can use the Scene Mapping setting in the SceneLauncher prefab to control which scenes are included or not included in the SceneLauncher menu."" step to these instructions as well.'"
747,137121835,b'This needs to be changed to Scene Launcher. Scene Loader is the old input source keyword that no longer fires.'
747,137703526,"b""For me, this text overlaps with the scene launcher buttons. Too many \\n newlines? It seems to line up better if there is just one carriage return after each sentence. Personally, I don't mind having to scroll way over to read lengthy text--I might even prefer that to making the block much taller.\r\n\r\nHere is what I'm currently seeing:\r\n![instructionsoverlap](https://user-images.githubusercontent.com/17389739/30195101-41dc0648-940c-11e7-94db-3a8f8aaafbba.png)\r\n"""
747,137918697,"b""The original reason that I created the Scene Launcher was to make it easier to test all the HoloToolkit scenes on device. From that standpoint, I like @StephenHodgson 's idea of moving it to examples, including all of the HoloToolkit scenes, and automatically enabling the new scene button. (We might also have to do something to tickle SceneLauncher.prefab to update itself. My original implementation automatically updated the list of scenes when hitting Play or making a build but I think this may no longer be the case with this change.) The result of including all scenes would be that when people run the HoloToolkit by default they have the capability to try out and test all the things that HoloToolkit does.\r\n\r\nI do, however, also recognize that something would be lost with this approach. I think @keveleigh may be pointing out that there's an advantage to having no scenes in the build settings. In this case, it seems like Unity picks whatever scene you have open in the editor and automatically includes that one in the build. The result is that you automatically build and run whatever scene you currently have open in the editor, which is more convenient when you're working on a single scene at a time. Also, I suspect that if we include all scenes the build will be slower.\r\n\r\nIf my understanding is correct, we have a choice between:\r\n1) Making the default (most convenient) behavior to run the scene you currently have open, but requiring someone to go to extra effort to run and test all the HoloToolkit scenes.\r\n- or -\r\n2) Making the default (most convenient) behavior to run all the scenes, but requiring someone to go to extra effort to directly run their current scene.\r\n\r\nI'm not sure what the best choice is. Is there a way we could make both behaviors very convenient?"""
747,137919008,"b'Perhaps for now the most expedient approach would be to revert the EditorBuildSettings change and complete this pull request, and then to open a separate issue about changing to include all scenes.'"
3785,271743516,"b""Why does this switch statement exist? It seems like this code is saying:\r\n\r\n````\r\nif (unity platform is UWP)\r\n     build with default options\r\nelse\r\n    parse command line options\r\n    build with options configured by command line\r\n````\r\n\r\nWhy wouldn't we want to use the command-line options for BuildTarget.WSAPlayer? Perhaps there's something I'm not understanding about this? Or could we remove the switch statement and replace it with always doing the code in the default case?"""
3785,271787655,"b""Aha! I hadn't noticed that UwpPlayerBuildTools.BuildPlayer calls its own ParseBuildCommandLine method while UnityPlayerBuildTools.BuildUnityPlayer doesn't call ParseBuildCommandLine so it has to be performed separately in the default case, but shouldn't be called in the WSAPlayer case. Thanks for explaining!"""
4110,279427223,"b'My intent was to cover the assignment to the ActiveProfile field, so I think the Undo.RecordObject needs to be here in the outer function.'"
4110,279427279,"b""@StephenHodgson raises an interesting point about undo and creation of the asset itself. I was just interested in the side-effect of the undo, which is that it tells Unity the MixedRealityToolkit.Instance object is dirty so that it can be saved. But if you actually want to be able to fully undo the whole shebang then I suppose you'd also want to delete the asset that's created. Perhaps that could be accomplished via Undo.RegisterCreatedObjectUndo inside the AssetDatabase.CreateAsset extension method, but I'm not sure if that works with assets and what all the consequences of that could be. I see several calls in MRTK to CreateAsset that don't seem to be creating an Undo record and I'm hesitant to wade into that territory.\r\n\r\nFor now, I'd like to stick with this fix as-is to ensure that the change is saved as described in #4109. @StephenHodgson, if you like you could open a new issue to suggest that calls to AssetDatabase.CreateAsset should be keeping Undo records. But I'm not sure if that's sufficiently important."""
4110,279437530,"b""Resolving the conversation. (Please let me know if that's not the etiquette for PR creator to resolve.)"""
5047,298264877,"b'Thanks for reviewing, @julenka . I will delete the web page that demonstrates interacting with a form of buttons/sliders/etc. and instead launch aka.ms/mrdocs in order to demonstrate that you can launch an arbitrary web site. I will also add a button to launch the settings app and make a comment that any 2D UWP application can also be launched in this fashion as documented at https://docs.microsoft.com/en-us/windows/uwp/launch-resume/launch-default-app.\r\n\r\nHow does that sound?'"
5047,298751957,b'This is implemented in my latest push.'
7615,404274181,"b""Well I'll be. I could swear I couldn't find that setting, but now I see it there plain as day. Thanks @keveleigh !\r\n\r\nI pushed an update, reverting my doc changes related to  IsEyeTrackingEnabled."""
7615,404274571,b'Reverted this change.'
7615,404280495,"b'To be, or not to be, that is the typo.\r\nThanks, now fixed!'"
7615,404283676,"b""Thanks @keveleigh , I didn't know how to do a section link and now I do. I verified that your syntax works on [the page](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/975cca3adc086f24c03f21120588a322897c34a0/Documentation/EyeTracking/EyeTracking_BasicSetup.md#testing-your-unity-app-on-a-hololens-2)."""
7615,404451581,"b'I added a line break and ""as follows"". Information about Unity 2019 would be good to add, but isn\'t part of this pull request. I\'d slip it in, but the PR has already been completed.'"
7615,404454764,"b""Whoops! I intended to remove the section on hand-editing XML, but I missed this spot about needing to meet the prerequisites for using MRTK. Please let me know if you think that's still important and I'll add it back in a new PR."""
7615,404455850,"b""I was just moving this from one place to another. That sounds like a good clarification, but it isn't part of this pull request."""
7615,404457630,"b""Roger that @sostel. Stand by for a new PR. (Not sure if it will be today.) I'll try to incorporate your other feedback as well."""
7615,404468312,b'Addressed in #7621.'
7615,404468355,b'Addressed in #7621.'
7615,404468432,b'Addressed in #7621.'
989,139730097,"b""GetComponentsInChildren gets components from both the current gameObject and its children anyway: https://docs.unity3d.com/ScriptReference/Component.GetComponentsInChildren.html\r\n\r\nAnd isn't it useful to get the midpoint of the object and it's children?\r\n\r\nThanks for the feedback btw \xf0\x9f\x91\x8d """
989,139731747,b'(are you saying use Getcomponents instead of GetComponentsInChildren btw?)'
989,139735777,"b'Ah OK then, fair enough'"
5,58754964,"b""I feel Destroy is more appropriate here. We don't have a need to remove these objects this instant (as in before the end of the frame) and Destroy is generally seen as safer\n"""
5,58755466,"b""I'm sorry, I'm not familiar with that concept. Could you explain more/link to an explanation/post example code?\nThanks\n"""
5,58770576,b'Resolved offline and integrated into latest push\n'
4678,291693557,"b'One more level of configuration that can be helpful is being able to configure our own struct for capturing the RaycastHitResult. Some of our apps also captured the hit type - Hologram, SR, EmptySpace. I am not sure if it makes sense to capture this information in the default MixedRealityRaycastHit struct or just have the option of an interface so that developers creating their custom raycastproviders also have the option of custom raycasthit results.'"
5594,313526407,"b'No. This is meant to support only 1 type of input source,\r\n\r\n---\r\nIn reply to: [313498270](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313498270) [](ancestors = 313498270)'"
5594,313530364,b'Yes you have to focus of and then focus back on the target to trigger a fresh dwell.'
5594,313533269,b'Maybe we can do that when this feature is upgraded to be part of regular namespace.'
5594,313534236,"b""> Should samples be in a samples project/assembly so they don't end up in the core MRTK distribution?\r\n\r\nNot sure. @keveleigh  thoughts?"""
5594,313540257,"b'> > Time.deltaTime [](start = 33, length = 14)\r\n> \r\n> Does this imply that CalculateDwellProgress must be called exactly once per frame? If so, then maybe do the math in Update() instead?\r\n\r\nNot necessarily. It is up to the caller to determine how often to make this call.'"
5594,313542173,"b'> I would recommend making these private classes, nested inside the class they are editing. This way, your `FindProperty` calls can use `nameof` which will make this code much more resilient to field renaming bugs. This would look something like:\r\n> \r\n> ```cs\r\n> partial class DwellHandler\r\n> {\r\n>     [CustomEditor(typeof(DwellHandler), true)]\r\n>     private class DwellHandlerInspector : UnityEditor.Editor\r\n>     {\r\n>         ...\r\n>         this.serializedObject.FindProperty(nameof(DwellHandler.dwellProfile));\r\n>         ...\r\n>     }\r\n> }\r\n> ```\r\n\r\nI have not seen that pattern prevelant in MRTK. @wiwei , @keveleigh How do you folks feel about this ?'"
5594,313542998,"b'> I personally find this `ButtonExecute` method a little confusing. For me it would be easier to understand if we just kept it as `DwellCompleted` and the derived classes just override that method. It threw me off because I thought `ButtonExecute` was going to click a button or something, rather than just drive visuals corresponding to dwell completing.\r\n\r\nyeah ButtonExecute is implementing the ""what actions do i perform when this button is clicked"", not doing anything related to dwell visuals :)\r\nButtonExecute is what will be bound to the unity button\'s onclick event handler.'"
5594,313543778,b'> ```cs\r\n> dwellProfile = ScriptableObject.CreateInstance<DwellProfile>();\r\n> ```\r\n\r\nThat will create compile issue since the  ScriptableObject.CreateInstance returns a scriptable object. '
5594,314460813,"b'The existing UnityPointerEvent is public class PointerUnityEvent : UnityEvent<**MixedRealityPointerEventData**> { } \r\nso it is a different type. i will rename this one, and put it in a separate to follow MRTK coding guidelines.'"
5594,314462512,b'That is a good idea. by documents do you mean in md files or in code comments ?'
5594,314470806,b'The CurrentDwellState  is a protected variable and so the caller does not have access to its value. But i think it is good to invoke the events after state transitions for consistent pattern. '
5594,314472590,b'my oversight. :('
5594,314474828,b'updated the comment with better description'
5594,314491520,"b""Sure. When i move it under Examples, I get build error though. \r\nerror CS0115: 'DwellProfileWithDecayInspector.OnInspectorGUI()': no suitable method found to override\r\n\r\nSeems like i need to  add it to some exclusion list in build steps. Any pointers on where that needs to be done ?"""
5594,314496065,"b'Yes. Depending on the ""Dwell experience"" that people want, they might want to update this based on desired experiences.'"
5594,314878646,b'https://github.com/ritijain/MixedRealityToolkit-Unity/tree/gazeDwellv1'
5594,316857577,"b""Can't use this syntax since some MRTK projects do not use c#7 yet :(\r\n\r\n---\r\nIn reply to: [313156541](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313156541) [](ancestors = 313156541)"""
5594,316874784,"b'Yeah it is ok for the deriving class to ""forget"". In most dwell variations I have seen the DwellCanceled state can transition to None or Started based on conditions. Those conditions can vary based on the profile supplied to the implementation. It can be left up to the developer to decide what state transition they want.'"
5594,316878214,"b'Should i rename ""DwellIntended"" to ""DelayedHover"" ? (i have received similar feedback from other folks in MRW, that DwellIntended is not clear enough terminology)\r\n\r\n---\r\nIn reply to: [314125680](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r314125680) [](ancestors = 314125680)'"
5594,316878876,"b""I feel this is clear enough... marking as Won't Fix unless you have strong feelings about this."""
5781,318718090,"b'Can we do this in Awake instead of OnValidate? When a script which is as  commonly found in the scene as buttons tries to perform OnValidate, it can cause UnityEditor to hang because for every button instance in your scene the editor triggers the OnValidate at compile time. (We had run into this problem in RemoteAssist).\r\nThis comment would also apply to all baseclasses following this pattern.'"
5781,318731542,"b""I agree with part of Ryan's comments. Explicitly calling out the unity ui button may not work for everyone. (especially since a lot of people have their custom implementations of the unity ui selectable). setting up the routing Target as a generic GameObject and then leveraging the ExecuteEvent.Exeute  sounds like a better plan to me.\r\n\r\nI don't really have a preference on using ISubmitHandler vs IPointerClickHandler - but i have rarely seen ISubmitHandler being used /recommended.\r\n\r\n---\r\nIn reply to: [318248395](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318248395) [](ancestors = 318248395)"""
5967,325320638,"b'nit: ""response""'"
5967,325324274,"b'nit: can you also add a link to ""State"" documentation here  - pointing to the blurb in README_Interactable.md please. '"
5967,325324889,b'Love this documentation! It is really comprehensive \r\n'
5967,325329648,b'nit: typo - the'
5967,325336862,"b'```suggestion\r\n""One can create a simple button by simply adding the *Interactable* component to a GameObject that is configured to receive input events. It can have a collider on it or on a child to receive input. If using interactable with a Unity UI based GameObjects it should be under the Canvas GameObject.""\r\n```\r\n\r\nThis is because i have seen a general practice of folks who prefer to use unity ui. The unity ui button does not provide as comprehensive a set of configuration options as the interactable and there is nothing really preventing Interactable from being used on unity ui components.\r\n\r\n'"
5967,325367182,"b""I am a little thrown off by how the InteractableColorTheme is setup. The fact that it inherits from InteractableShaderTheme is only helpful when the target is a Renderer. For other cases where the theme is attempting to change the text color, it does not leverage the InteractableShaderTheme. Can we split this into 2 classes - InteractableColorTheme - addressing Renderers, and InteractableFontColorTheme  - addressing teh text properties? \r\n(You can choose to Won't Fix it for this PR, but i would really like this to get addressed at some point)"""
5967,325448155,"b'For a less disruptive change, instead of removing this method, would it make sense to mark it as Obsolete and redirect this to the new method? '"
5967,325843551,b'nit: typo - rename to SetState '
6004,326309262,"b'>transform = hitInfo.collider.transform; //  [](start = 16, length = 43)\r\n\r\nThis was something that was desired by one of the app teams in mrw a while back, and we had added a profile configuration property to address this - focusIndividualCompoundCollider so that apps could choose which transform they prefer to pick - \r\nCheck out commit - [https://github.com/microsoft/MixedRealityToolkit-Unity/commit/68994887db97a081c0483c2a79db4503fe5b570b#diff-7b0c1b5a3f72bb7ada11d8478aa6fbbb](https://github.com/microsoft/MixedRealityToolkit-Unity/commit/68994887db97a081c0483c2a79db4503fe5b570b#diff-7b0c1b5a3f72bb7ada11d8478aa6fbbb)\r\n\r\nThis change feels redundant to that commit.'"
6049,327378184,b'I also added a requiremecomponent attribute that will prevent people from using it outside of this scope'
6049,327378343,"b'i swapped out all ""Image"" references with Graphic'"
6049,327379330,b'yes. It runs with 59-60 fps\r\ni can change this to leverage the Update Loop instead of using Coroutines if you have perf concerns/ introducing inefficient coding patterns.'
6049,327379445,b'That is a good catch. It will also highlight  what this PR is trying to convey - you can use Interactable on Unity UI components!'
6049,327387840,"b'> Performance question here: do we really need to do this for every child image/graphic? Can we instead do something smart to dynamically create one when we need to set a property on it, then revert back when/if the properties go back to the default?\r\n\r\nI am not a huge fan of this either, but I have not been able to come up with a better approach.  If there was a single script that was modifying material properties it would have been achievable to do what you are recommending. \r\nWe could potentially write some sort of Material extension system (we used to have it in some old codebases) which does ref counting and achieves what you are recommending above. In fact, it could also be written to perform batched operations per frame to boost up performance. It would be a feature in itself though and would need some thinking, with the added expectation from consumers to use the MaterialExetnsion instead of material for perf improvements.\r\n\r\n\r\n\r\n'"
6049,327388434,b'@Troy-Ferrell  - do you have any thoughts around this ? Are there any shader experts in MRTK team who would have thoughts around this?'
6049,327750110,b'Ahh.. That was a side effect of Remote Desktop session :)\r\n\r\n---\r\nIn reply to: [327394090](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6049#discussion_r327394090) [](ancestors = 327394090)'
6049,327865222,b'So i refactored the  MaterialInstancing class  and hooked that up into unity ui targetted shader themes. I also removed the Color property changes fromt he existing InteractableColorTheme to a separate one that works for Graphic object. How does this feel ?'
6049,328395264,"b'i had considered that.. but that would also mean that all ""graphic.material"" calls be replaced by  ""graphic.getuniquematerial()/"" and  people could forget to so that. #WontFix'"
6104,328927237,"b'>if (value > 0 && dimensions != value) [](start = 16, length = 37)\r\n\r\nconsider putting an assert statement or a warning to call out when invalid values are passed in #Resolved'"
6104,328927764,b'why is this check required?'
6104,328928368,"b""this isn't really doing anything .. can be deprecated."""
6104,328929797,"b'>esetBaseStates(); [](start = 25, length = 17)\r\n\r\nglobal listeners should also be unregistered if the interactable is disabled #Resolved'"
6104,328930476,b'is there a use case? #Resolved'
6104,328930968,b'when does this get reset?'
6104,328933179,"b'>     public string VoiceCommand = """"; [](start = 3, length = 37)\r\n\r\nnot required to fix in this PR, but support for multiple voicecommands is useful. Some apps configure shell parity ""Select"" and a global voice command configured to trigger the same interactable '"
6104,328933835,"b""doesn't do anything useful in the script"""
6104,328935641,"b'>protected float globalFeedbackClickTime = 0.3f; [](start = 8, length = 47)\r\n\r\nnit: it should either be editor configurable or a const'"
6104,328938903,b'nit: could be a switch case #WontFix'
6104,328940045,"b'this part can be moved to Awake.\r\nwhen gameobject is checked in disabled, OnEnable can be invoked before Start.'"
6104,328941811,"b'>OldFocusedObject [](start = 31, length = 16)\r\n\r\nnit: null check #Resolved'"
6104,328943252,b'nit: extra line #Resolved'
6104,329284553,b'Yeah. It might be a good idea  to reset it after certain time period ?\r\n\r\n---\r\nIn reply to: [329205597](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104#discussion_r329205597) [](ancestors = 329205597)'
6104,329285643,b'Could you add a comment for what the property is used for? (i have to go skim through code to understand how clickTime and globalFeedbackClickTime are different)\r\n\r\n---\r\nIn reply to: [329207521](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104#discussion_r329207521) [](ancestors = 329207521)'
6104,329287184,"b""it doesn't feel right because the purpose of interactable is provide a state machine by processing all inputs. I don't see why we can't mark this as obsolete. If someone wants this functionality they have always pipe it by creating a click event receiver handler\r\n\r\n\r\n\r\n---\r\nIn reply to: [329202629](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6104#discussion_r329202629) [](ancestors = 329202629)"""
6162,330310109,b'It was marked there. But the inspector script is trying to look for the old property name and is not accounted for here.'
6195,331174543,"b'>Assert.True(wasClicked, ""Toggle button was not clicked""); [](start = 16, length = 57)\r\n\r\nCan you also add validation for CurrentDimension ? (0 on 1st click, 1 on second click and 0 again on 3rd click ) Also assert on the IsToggled property.'"
6195,331175264,"b'>   yield return rightHand.Show(p2); [](start = 9, length = 35)\r\n\r\nshould this result in ""interactable.HasFocus == true"" ? if so, an assert for that would be helpful here.'"
6188,332171967,b'no. this was testing something. Not meant to go in. Good catch. I will remove.'
6188,333161396,b'> This should likely be under StandardAssets/Materials\r\n\r\nI would defer this to @cre8ivepark '
6188,333162109,"b""> Also simplify to UnityUI, Interactable is redundant as it's already a child folder of the path\r\n\r\nJust naming the folder UnityUI feels odd. I think it is okay to call it UnityUIInteractables. Calling it UnityUIButtons could be misleading for some people, since these are using the interactable script to deliver a button like experience instead of Unity UI Button script."""
6361,338298411,b'nit methods should be named as actions or verbs vs nouns - can you rename this to AppendNewLine ?'
6361,338729857,"b'> ThrowIfDoesNotExist(folderPath); [](start = 11, length = 33)\r\n\r\nis there a reason why we cannot have folder creation at runtime as an option?\r\n\r\npublic static async Task Save(string folderPath, bool consolidate = true, bool createFolderIfDoesNotExist = false)'"
6550,344947833,b'nit: only UpdateCollection on value change'
6550,344947946,"b'>                     [](start = 27, length = 20)\r\n\r\nnit: trailing space'"
6550,344948016,"b'>false [](start = 38, length = 5)\r\n\r\naccidentally left here?'"
6550,344948225,"b'>  // protected int Columns; [](start = 6, length = 27)\r\n\r\nnit: leftover code?'"
6642,348736194,b'yep. They are no longer needed. '
6410,354968839,b'missing copyright statement'
6410,354972085,b'missing copyright'
6410,354972199,b'missing copyright'
6410,354973250,b'add braces\r\n\r\nCoding Guidelines - [https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#use-braces](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#use-braces)'
6410,354976343,b'add braces\n\nCoding Guidelines - [https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#use-braces](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#use-braces)'
6410,354982511,"b'>public ButtonIconSet IconSet [](start = 8, length = 28)\r\n\r\nnit: add doccoments'"
6410,354997604,b'missing doccoments for public methods'
87,69357835,b'You might want to consider using a coroutine instead.\n'
433,94510406,"b""nitpick: shouldn't this now be called StartGestureRecognizers (plural)?"""
420,93572835,"b'This should probably be: ""HoloToolkit/Spatial Mapping Tap""'"
420,93627768,"b'`_Center` and `_Radius` are serialized into the shader. So if you stop the game mid-pulse, and then start it again, when the spatial mapping data becomes available, the pulse will reappear in its last position until the taps.  It might be a good idea to initialize `_Center` and `_Radius` in `OnStart` or possibly `Awake`.'"
471,97614452,b'It looks like taking this branch prevents the cursor from going to `CursorStateEnum.Release` from `CursorStateEnum.Select`.  How about instead if we just reset IsInputSourceDown as part of `OnSourceLost` and left `CheckCursorState` the same?\r\n```cs\r\n        public virtual void OnSourceLost(SourceStateEventData eventData)\r\n        {\r\n            visibleHandsCount--;\r\n            if (visibleHandsCount == 0)\r\n            {\r\n                IsHandVisible = false;\r\n                IsInputSourceDown = false;\r\n            }\r\n        }\r\n```'
471,97620073,b'Is this check still needed now?'
476,98031909,b'Was this change intentional?'
476,98032647,b'so much for globally unique :+1: '
541,103600966,b'Just curious if there is a reason to be explicit about the string conversion here? The end result should be functionally the same.'
541,103602058,"b'I have a personal preference here for using the `inputManager` field from the inherited BaseInputSource class instead of `InputManager.Instance` everywhere. Besides being more verbose, its also ever so slightly less efficient to perform property access vs a field... but mainly its about the extra code length. '"
542,103602314,"b""We should definitely add a comment here to clarify this quirk so that someone doesn't accidentally remove the null assignment in the future."""
542,104004662,b'The only comment I have at this point is that I like the idea of this being a property following the behavior of `DrawProcessedMesh` such that setting it to false would disable the `Collider` for all the existing `surfaceObjects`'
542,104010420,"b'At which point ""UseProcessedMeshCollider"" or something else might be more appropriate I guess.'"
547,104186790,"b""The documentation for `SceneManager.LoadScene` isn't clear about what happens if the provided `sceneBuildIndex` is out of range. Do we need to be defensive against the edge-case where the HeadsetAdjustment scene is the only (or last) scene in the build?"""
547,104193412,"b'Sounds good, thanks for verifying.'"
549,104726831,"b""`KeepUpright` previously was used in conjunction with `OrientTowardUser` so that when the user looks up or down, the object continues to be upright instead of pivoting toward the user. By having these settings be mutually exclusive, it seems like the more common usecase for `KeepUpright` is no longer possible. Additionally, I think that the code to handle uprighting needs to be after the `HostTransform.rotation` is set to its new value, or else `HostTransform.up` won't have the correct value.\r\n\r\nI think you will need to have something like this:  \r\n\r\n```cs\r\nif (RotationMode == RotationModeEnum.OrientTowardUser || RotationMode == RotationModeEnum.OrientTowardUserAndKeepUpright) \r\n{\r\n    draggingRotation = Quaternion.LookRotation(HostTransform.position - pivotPosition);\r\n}\r\nelse if (RotationMode = RotationModeEnum.LockRotation)\r\n{\r\n    draggingRotation = HostTransform.rotation;\r\n}\r\nelse // RotationModeEnum.Default\r\n{\r\n    Vector3 objForward = mainCamera.transform.TransformDirection(objRefForward); // in world space\r\n    Vector3 objUp = mainCamera.transform.TransformDirection(objRefUp);   // in world space\r\n    draggingRotation = Quaternion.LookRotation(objForward, objUp);\r\n}\r\n\r\n...\r\n\r\n// Apply Final Rotation\r\nHostTransform.rotation = draggingRotation;\r\nif (RotationMode == RotationModeEnum.OrientTowardUserAndKeepUpright)\t\t\r\n{\t\t\r\n    Quaternion upRotation = Quaternion.FromToRotation(HostTransform.up, Vector3.up);\t\t\r\n    HostTransform.rotation = upRotation * HostTransform.rotation;\t\t\r\n}\r\n```"""
553,104825121,"b""The rest makes sense and looks good to me, but I haven't come across this function before, and its unclear to me if its necessary or not. Presumably it was if you added it, but I'm not sure what the exact purpose is."""
553,104825975,"b'The other shaders appear to be using UNITY_SAMPLE_TEX2D instead of tex2D, maybe that macro this scenario? (speculating)'"
553,104827100,"b""What is a bit confusing is that I think the single-pass rendering that the hololens uses may or may not have the same kinds of requirements. There are two different defines for single-pass:  UNITY_STEREO_INSTANCING_ENABLED and UNITY_SINGLE_PASS_STEREO. \r\n\r\nThe stereo instancing method doesn't use a packed render texture, but instead outputs to a render target array. Those macros and the linked documentation seem to pertain more to scaling and transforming uv's to the left or right eye target position which isn't necessary on the hololens."""
553,104827549,"b'As far as testing, you *should* be able to just set the stereo method to ""Single Pass Instanced"" and throw a 3DTextPrefab onto the scene. That being said, I wasn\'t able to reproduce the problem in my current environment (5.6b10). It was reported earlier this morning in Slack and I was filing the bug on their behalf.  \r\n\r\nI can throw 5.5 back on and try to reproduce there, but I might not be able to get around to that tonight.'"
554,104830498,"b""There was an additional warning here because the output wasn't being fully written in the vertex shader. We only write to uv.xy and uv.z, but uv.w wasn't used."""
542,104914935,"b""That's a good point, and it seems like more trouble than its worth. I'm fine with things as they are right now."""
572,107230718,b'nit: result.Hit = GazeManager.Instance.HitObject != null;'
560,107947776,"b""nit: I'd personally prefer to see an early return here if `observer == null` rather than add a level of indent to the entire function"""
578,107950038,"b'The re-initialization of the bounds every frame seems like something that should be avoided. At the very least, you should be able to avoid searching for child renderers and the allocations.'"
578,107950929,b'You could also use Physics.BoxCast (or BoxCastNonAlloc) for this instead to check if moving the box from the old position to the new position hits anything.'
578,107951883,b'This will fire DragStopped and DragStarted every time there is a collision. There is probably a better way to update the start position that has fewer side-effects.'
591,108320907,"b""I don't think we need to be calling `EnsureComponent` (and by extension `GetComponent`) every frame until `anchor.isLocated` returns `true`. I'd like to see a sort of hybrid between the current code and the version you have here:  \r\n\r\n```cs\r\nif (thisAnchor == null)\r\n{\r\n    thisAnchor = this.EnsureComponent<WorldAnchor>();\r\n}\r\nif (thisAnchor.isLocated)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\nThat way we are still initializing the `WorldAnchor` component on-demand, but we only wind up calling `EnsureComponent` once.\r\n"""
591,108320981,"b'In accordance with the suggested change above, the changes in this function should be able to be reverted.'"
602,110245637,"b'Rather than indent the entire method, it may be cleaner to check the opposite condition and return early.'"
602,110245927,b'nit: project convention is to place opening braces on new lines.'
602,110245957,b'nit: project convention is to place opening braces on new lines.'
602,110246010,b'nit: remove spaces around arguments'
602,110246479,b'Can we rename this `IsNewEditorSession()` or `TrueOncePerEditorSession()` to make it more clear that its not `TrueOnceEver()`'
594,110527971,b'nit: Have any mesh sectors been scanned'
554,110968243,"b""We are only writing to `uv.xy` and `uv.z`. Since uv.w wasn't being written to, this was producing a warning."""
554,110969033,"b'This is the only place where `UnityObjectToViewPos` is called (instead of `UnityObjectToClipPos`). This helper method returns a float3 instead of the float4 returned by `mul(UNITY_MATRIX_MV, vertex)`. Since we are only using the z-value, the semantics of this code should be identical to the original code.'"
619,112823971,"b""Why don't we fade the alpha channel also? Wouldn't fading only the rgb channels result in the object blacking out instead of fading in mixed-reality capture?"""
619,112933872,b'How come we are duplicating this code? HoloToolkitCommon.cginc still exists in Assets/HoloToolkit/Utilities/Shaders'
645,114592595,"b'Would we still want to toggle the ""IsBeingPlaced"" value in this case, or should we just do nothing if the AnchorStore isn\'t available yet?'"
668,116368236,"b'The logic here seems a bit off. If someone calls `StartKeywordRecognizer` twice, keyBindingsOnly will be set to true.'"
668,116368249,b'Same issue here.'
702,119491444,b'Indentation looks off here'
702,119612714,b'should this be a loop over key-values instead (and the clearing the list after)?'
702,119615730,"b""The defaultLayersCache should be a collection of objects that had their layers changed when placement started. If new game objects are added after that, they don't need their values reset either."""
702,119617613,"b'Ah, nevermind. I think I thought the recrusive part was part of the else branch only. I do have one remaining comment here in that the ContainsKey check is unnecessary if using TryGetValue (which itself does the equivalent ContainsKey check).'"
702,119666482,b'No longer uses GestureManager'
697,119678698,"b'Mathf.Clamp(MinQualityLevel, MaxQualityLevel, QualityLevel + delta);'"
697,119679068,"b""maybe just return float from this function so that you don't need to convert at the call-site"""
697,119681350,b'You are using lastFrames like a Queue<float> should it just be a Queue<float>?'
697,119682091,b'Is this intended to be public?'
697,119683111,b'It is strange to me that `MaxQualityLevel` and `MinQualityLevel` are defined here in addition to in `AdaptiveQuality`. Can you expose them as public property getters from `AdaptiveQuality` and reference those properties from within this class instead of re-defining them?'
697,119684253,"b'It might be nice to remove the need for `AdaptiveViewport` to care about `MaxQualityLevel` and `MinQualityLevel` at all. If the public interface (events and properties) of `AdaptiveQuality` returned the quality level as a float from 0 to 1, then it would be easier to consume from this class.'"
1059,142456842,b'nit: I have a preference for naming these function `IsDotNetAvailable` and `IsIl2CppAvailable`'
1059,142458162,"b'This will open a new explorer window every time. If we used `Process.Start(BuildDeployPrefs.AbsoluteBuildDirectory)` instead, I think it would re-use the same explorer window and just bring it to the front.'"
1059,142459391,"b'How about something like this instead here:  \r\n```cs\r\nBuildPlatformEnum buildPlatformOption;\r\nif (!Enum.TryParse(curBuildPlatformString, true /*ignoreCase*/, out buildPlatformOption))\r\n{\r\n    buildPlatformOption = BuildPlatformEnum.AnyCPU;\r\n}\r\n```'"
1059,142465115,"b""Sorry, to clarify the behavior is that it will only reuse the window if one is already open to that exact directory. It won't reuse any windows that are opened to different directories. You can test out the behavior by typing directory names in the Win+R run dialog."""
1059,142465550,"b""But in that case, it will fail the TryParse and then be set inside the if branch. Granted, that behavior isn't spelled out directly."""
1059,142468689,"b'Yeah, looks like it was added in 4.0... bummer.'"
4678,289706551,b'Good that this change is happening. We would also want to extend the struct to add additional hit data apart from the unity hit data. This change would be really helpful.'
4678,290135144,"b'Is there a way that we could provide our own struct similar to raycaster? Changing it to class is going to be bad on GC as the objects are created in Update loop. If the struct is changed to class, then caching and reusing the references need to be done.'"
4678,291027416,"b'Though currently I have written a custom FocusProvider, it would be good if we use raycaster class. But right now, I added a property in FocusProvider for additional hit data. The data that we use is more 3D model specific like triangleId, instanceId etc. We cannot use gameobjects, because we render the game objects by doing mesh combining, whereas our hit happens to individual meshes in the model. \r\nFor now, class could be used. I would update if I could think of a better approach. Thanks!'"
96,69630392,"b""It's part of a system that hasn't been fully integrated into this version of HoloToolkit, it seems. I'll revert the changes to GazeManager and stick with adding in the new Stabilization code separately.\n"""
96,69999799,"b""I'm unsure why GazeManager should have any control over the stabilization plane logic. I understand that it made sense at the time to have it there since it used GazeManager's public facing properties, but seeing as there are several equally useful ways to set the stabilization plane (including the way GazeManager did it) it seems that the stabilization should be fully broken out into its own file.\n\nIf there's something I'm missing about the overall plan for where things should be in HoloToolkit, please let me know!\n"""
96,69999841,b'Sure thing!\n'
96,70137685,b'Deleted.\n'
96,70303348,b'Good catch!\n'
96,70303960,"b'A quick search of ""private const"" shows me several values. CAPS isn\'t being used in any, though I\'m seeing a mix between lowerCamelCase and UpperCamelCase. Is there a preference?\n'"
96,70346367,"b'Based on previous experiences, my team was under the impression that we wanted to pass in a value based on how fast the app should be running or how quickly the stabilization system updates, because otherwise it will be slightly off for the frame when being set.\n\nHowever, I tested it with the Time.deltaTime and found it to work solidly.\n'"
96,70358459,"b'Fixed, though this comment is still visible.\n'"
572,113259577,"b'This breaks cross platform support because the code uses ""InteractionPressKind pressKind"".\r\nThis is not defined in the Windows Runtime 10.0.15063.0 file header Windows.UI.Input.Spatial.h\r\n\r\nThe header has a define ""Windows::UI::Input::Spatial::SpatialInteractionPressKind"" and elsewhere there is the entry ""Windows.UI.Input.Spatial.SpatialInteractionPressKind"".\r\nThe documentation for the API at \r\nhttps://docs.microsoft.com/en-us/uwp/api/windows.ui.input.spatial.spatialinteractionpresskind\r\nreflect this.\r\nWhen trying to replace the code \r\nwith the code ""Windows.UI.Input.Spatial.SpatialInteractionPressKind pressKind""\r\nThe problem is that nothing matches the headers defined in [Windows.UI.Input.Spatial.h](https://github.com/Microsoft/cppwinrt/blob/master/10.0.15063.0/winrt/Windows.UI.Input.Spatial.h) and therefore nobody will be able to write Spatial mapping code in C++ or C# or DirectX, because the old Holographic code for HoloLens, wont match the code for Windows Mixed Reality.\r\nThe Toolkit will ALWAYS require Unity 5.6.* and when we move to the new Unity 2017.1 and Visual Studio 2017 there will be a massive code break.\r\n\r\nThe other problem with this adding of Unity code is that ""InteractionManager.SourceEventArgs ""\r\nmismatches the 15063 runtime documentation\r\nhttps://docs.microsoft.com/en-us/uwp/api/windows.ui.input.spatial.spatialinteractionsourceeventargs\r\n""SpatialInteractionSourceEventArgs Class"", even the design of the name is a conflict,\r\nto reflect the C++ WinRT, ""Interaction.SourceEventArgs""\r\n\r\nWhy doesn\'t all the code work the [Windows.UI.Input.Spatial Namespace \r\n](https://docs.microsoft.com/en-us/uwp/api/windows.ui.input.spatial)\r\n\r\nThe alternative is that developers will write code in 10.0.15063 C++ standalone leaving Unity stranded'"
6731,350477332,"b'These `#ifdef`s look like they will exclude the feature when running on-device, which is ironically the only time it will be relevant. The `Microsoft.Windows` namespace should work fine in both environments, so really there should just be an `#if` for `DOTNETWINRT_PRESENT` with no `#elif`.'"
6731,350477575,"b""I may be mistaken about the meanings of `WINDOWS_UWP` and `UNITY_WSA` so please correct me if I'm wrong."""
6731,350478207,"b""BTW, you can use `Microsoft.Windows` and `global::Windows` side-by-side if needed, though any gap in `Microsoft.Windows` is potentially something we could add so you can use it uniformly (within reason - I don't plan to extend this to include `Windows.Storage` for example)."""
6731,350492998,b'NIT: Comment is inaccurate.'
6731,350493278,"b""We don't need to block on this, but I'm happy to flesh out the necessary adapter methods to remove the `WINDOWS_UWP` restriction here (or you can and I'll approve the PR :))"""
6731,350493642,"b""OK, so `UNITY_WSA` will be true both in the editor, and on device? If so, I think I'm satisfied. Separately, I'm happy for the adapter to be fleshed out to cover the third render scenario as well."""
6731,350500791,b'Pull Request [4059597](https://microsoft.visualstudio.com/DefaultCollection/Analog/_git/internal.mrtk.platformdll/pullrequest/4059597?_a=overview): Rough in HolographicDisplay.TryGetViewConfiguration()'
257,81825058,b'Even in the case of integer division?\n'
257,81851030,"b""Ok, this is strange.\n\nint someInt = 1;\n0.5f \\* someInt;\n\nis ok.\n\nint someInt = 1;\n0.5 \\* someInt;\n\nis not ok.\n\nIsn't ineger division fairly fast?\n"""
257,81870196,"b""Thanks @NeerajW. I was following some recs from other feedback but I think you're right. These should be public. That makes it so the indicator is scriptable. That does mean the null check will have to stay in Update in case targetObject is reassigned.\n"""
257,81870734,"b""I was following what was in Utilities. I'll follow what's done elsewhere and get back to you.\n\nOk, I understand now. Something a bit more technical.\n"""
316,86433420,b'fixed\n'
3111,233533840,b'Fixed'
3111,234296253,b'Hi Simon - I just reverted the material changes'
3111,234413041,"b""Do you know what that is? I'll see if I can change it back"""
3111,234420752,"b'I wish there was a button here that just said ""don\'t keep this change"" and it would change it back.'"
3111,236494048,b'Fixed'
3111,236494431,b'fixed this'
1884,177704387,"b'We will change the namespace to HoloToolkit.ARCapture, simple, descriptive and memorable.'"
1884,177711259,b'We will change the name of the file. The \xe2\x80\x9cApple\xe2\x80\x9d part is unrelated to Apple'
3388,253622161,"b""Because we're adding lots of text and most people are lazy and just skim through docs, I'd recommend adding a title for each step like:\r\n1) Device Discovery\r\n2) Looking for Marker\r\n3) Spatial Syncing\r\n\r\nAlso, does the device discovery still support multiple phones joining 1 HoloLens? From reading step 2) it seems like it doesn't."""
87,69654625,b'You actually can use coroutines you just need to manually tick them in the update function of your editor script:\n\n```\n  public void Update()\n   {\n         // Coroutine is finished if MoveNext() == false;\n          if (!loadingRoutine.MoveNext())\n          {\n               m_bLoaded = true;\n               PostLoadFunction();\n           }\n   }    \n```\n'
319,87039330,"b""Those map into the states any cursor could be in (hand visible / not visible and whether or not you're over a hologram) with the ability for a contextual override.  These should be part of the design learnings shared as part of the shell teams explorations.  The names are the closest approximation to what they reflect.  The comments on the enum states should be pretty straight forward.\n"""
319,87046166,"b'This was from the prior cursor code to prevent registering the delegate twice.  Since I removed the Register call from being in both Start and OnEnable this is redundant.  It would make more sense to have a protected abstract class for registering managers (input, gaze ...etc). \n'"
319,87252719,"b""These are what we used to describe the states.  As long as the comments correctly reflect what the state indicates the word you use for it is purely semantics.  'Ready' is a nebulous term from a cursor and input standpoint IMO.\n"""
319,87260350,b'I want us to be honest.  Keeping deprecated classes can cause confusion and creates a fragmented code base.  We have to move others forward with solid examples that can be built off of rather than having sentimental attachment to prior iterations.  If anyone wants to get older versions they are free to do so.\n'
319,87292659,"b'I polled a couple others and they also said ""Ready"" would be good to swap out for ""Interact"" as well.  My comment was toward other input devices not just gesture and what term is more applicable to cursor and input UX design.  What does ""Ready"" mean when using 3DoF input from the clicker?  Food for thought.  Good feedback, anything that makes more sense from broader perspective I\'m all for.\n'"
765,126568817,"b""What's the best way to revert?  I thought I had but obviously not.  D'oh!\r\n\r\nthanks,\r\n-pat"""
795,128366988,"b'Oh yeah, we wrote that before we branded everything MR.  Or now from the unity standpoint is it XR?'"
795,128367166,b'Since the namespace will be Unity.XR'
1007,140852835,"b""I didn't see anywhere that had motion controller input.  All the other scripts duplicated source delegates rather than using InputSource."""
1007,140860608,"b""Sorry I had the wrong version in there.  That used to filter and send forward the events after filtering that it's coming from and interactible in the list.  Changed this to filter and only fire the protected virtual functions based on the interactible being in the list.  I'd like to clean this up on the InputManager side allowing for external subscriptions to specific objects in the future but wanted to not have any changes to core HTK manager scripts for now.\r\n\r\nShould be resolved in the last commit."""
1007,140862340,"b""Accidentally added the version txt.  I can revert it back unless we're going to be recommending an update soon.  If so I can also update the readme."""
1007,140863616,"b""What am I missing here on formatting? I've updated the code comments for Input down but the other formatting looks valid to me.\r\n\r\nthanks,\r\n-pat"""
1007,140864539,"b""Ah, so InteractionSourceInputSource (that's a lot of source!) is for both HoloLens gesture and motion controller then.  The only things I'd add is the ability to set handedness to filter for on controllers and accessors for linear and angular velocity.\r\n\r\nthoughts?\r\n\r\nthanks,\r\n-pat\r\n"""
1007,140866926,"b""Hmm.. they should all be set to spaces.  Let me double check.  I'm not seeing the usual discrepancies in the GitHub webview I usually do when it's tab/space mangled.  Will double check.\r\n\r\nthanks,\r\n-pat"""
1007,140890404,"b""I just updated it to have accessors for velocities in this fork.  I'll look to merge changes you've already made in as well.\r\n\r\nthanks,\r\n-pat"""
1007,140906135,"b""The basic problem has been with the discoverability of interfaces for what interactions an object can consume.  This would be better solved on the InputManager front by knowing what event's I can consume as oppose to the guess work of going through all the interfaces especially for global listeners.  \r\n\r\nThe InteractibleObject just says I'm an easy base class that takes all interactions and you can easily find what you want to override by simply extending and override the function.  \r\n\r\nCurrently there's not an easy way to filter object interactions and or provide some base functionality for things you interact with that's common across all of them.  I'm open to other alternatives to provide filtering methods and other logic commonly across all interaction objects.  Perhaps this should be refactored in InputManager instead and provide better delegate hooks as opposed to just global listeners?\r\n\r\nThoughts?\r\n\r\nthanks,\r\n-pat\r\n\r\n"""
3254,241956378,"b'The change from 0.1 to 0 would be caught be the first half of the check, because `interactionMapping.Changed` will be true.'"
3254,241956409,"b""That was my thought as well.\r\n\r\nIt's no worries, that's what unit tests are for! woot!"""
2184,193182217,"b""This is the boxing I'm taking about. Not a big deal. """
2184,193195899,"b""I'd like to avoid boxing if at all possible... It can generate enough garbage to force a GC very quickly."""
2184,193199914,"b""I think it's not that big a deal here since we only create a few devices at a time. Generally this won't happen that often."""
2184,193223954,"b""doesn't this cause that crash again?"""
2184,193242363,"b'we can just pass null here, correct?'"
2184,193242398,b'or nothing cause null is default'
2184,193254380,"b'If the RequestNewGenericInputSource returns null, then it will be null.\r\nThat was the pattern we settled on, unless you want to alter it now?'"
2184,193437456,"b""in the constructor it will create a new dictionary buy default is all I'm saying. So you don't have to make a new one here."""
2299,195803882,b'Need TouchpadPress also'
2299,195804943,b'Need ThumbstickPress'
2299,195862956,b'Will check as I thought I had added that.'
2299,195863116,"b'Duplicate comment.  However, I will double check'"
2299,195865832,b'sorry about the duplication :)'
2475,204497251,"b""nit typo: it's -> its"""
2475,204564559,b'#GrammarPolice\r\n'
2533,207281879,b'I should probably also check if the controller supports pointing here.'
2533,207348880,"b'Question, could this be part of the inputSource request?\r\nrather than put this in every device we create, effectively copying the same code.\r\nOr failing that, move this to a static function to return configured pointers for a given controller / type and hand'"
2533,207358228,"b""Possibly I'll see what I can do."""
2533,207365078,"b""Doesn't look like we can embed this into the input source request. There's too many controller specific things that could end up happening while we register our pointers. \\\r\n\r\nFirst being that we need to know the type of controller.\r\n\r\nSecond, in WMR we can query if the input source pose supports pointing or not.\r\n\r\nWe would also need to know the handedness of the controller and check against the list of pointers in our pointer profile that match the handedness of our controllers.\r\n\r\nWe could make all those parameters that the input source request makes, but then I think that breaks the OOP nature of the setup, and makes the request do more than it's responsible for.\r\n\r\nAlso, we need to make the pointers before we create the input source, bc we need to pass that list of pointers when we request a new input source, then after we have our input source, we need to assign the controller to each pointer"""
2533,207372394,"b""I figured something out, I think you'll like the result."""
2533,207625129,"b""Why don't we update the controller data here anymore? Now the data in a `SourceDetected` event will be empty, or is it properly filled in elsewhere?"""
2533,207643513,"b'Update is already called in the GetOrAddCotroller, so this was in effect calling it twice.'"
2533,207643970,b'This _is_ `GetOrAddController`'
2533,207645921,"b""Why change/ remove this.  Had to add this as it caused issues on startup, unless you've resolve them?"""
2533,207646345,"b'Haha, I think he meant after we call GetOrAddCotroller we usually update it too.\r\n\r\nWe were running into issues, and this fixes it.\r\nEssentially we were updating the controller before we raised the source found.\r\n\r\nShouldn\'t be raising input changes for sources that aren\'t ""Found"" yet.'"
2533,207647062,"b""Shouldn't be raising input changes, no.\r\nShould be filling in the state though, in case a dev wants to query it in `SourceDetected`. Is that happening?"""
2533,207647319,b'Yes. after we get the controller.'
2533,207647688,b'In here? [`InteractionManager_InteractionSourceDetected`](https://github.com/StephenHodgson/MixedRealityToolkit-Unity/blob/c2e196261d24ed8774589ba3b073b963e4ab2388/Assets/MixedRealityToolkit/_Core/Devices/MixedReality/WindowsMixedRealityDeviceManager.cs#L149)'
2533,207649156,"b""Let me add an update there and test it out to see if we're still getting that race condition."""
2533,207649437,"b""Doesn't seem to have the race condition, so I added the update after raise detected"""
2533,207649613,b'I resolved them.'
2533,207649752,b'Besides this parameter was not being used.'
2533,207652632,b'It was being used here:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43663204-6a8ca894-971d-11e8-8b86-d28c5af29dcc.png)\r\n'
2533,207654819,"b'Yup, that was the second Update we were talking about that gets called.'"
2533,207654983,"b""Getting the controller shouldn't update it.\r\n\r\nIt should be a discrete step"""
2533,207655282,b'Agreed.'
2568,211327120,"b""feels weird to have default come first, but don't change it because of me :)"""
2568,211339803,"b""I don't mind reverting, or moving this to the bottom, if it makes more sense."""
2705,217515009,"b'Should update the parameter name too, to match the new type.'"
2705,217525995,b'Will do!'
2299,195803425,b'not sure this should be populated yet. Gesture controllers need some more thinking.'
2299,195862813,"b'Scaffold, but I shall remove the copied code'"
2917,225671622,"b'There are a few references to `SurfaceId` in non-`UNITY_WSA` wrapped code, which prevents building for non-UWP platforms.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/47040829-1d9ef600-d13c-11e8-818c-a4e0f71d28e2.png)\r\n'"
2917,225671921,b'```suggestion\r\n            // Apply the initial observer volume settings.\r\n```'
2917,225672109,b'```suggestion\r\n        /// Applies the configured observation extents.\r\n```'
2917,225672212,b'```suggestion\r\n                // Cleanup the outstanding mesh object.\r\n```'
2917,225677309,b'oops. forgot to build for standalone'
3113,234873789,b'```suggestion\r\n  icon: {instanceID: 0}\r\n```'
2396,200180601,b'`MixedRealityPose.ZeroIdentity`?'
2396,200205969,b'Updated. Will need a separate PR to update the WMRcontrollers this was copied from'
2396,200206030,b'I had thought I addressed this already in the WMR class '
2396,200209249,"b'Just checked and we had, I must have simply copied it before that change :D '"
2396,200384480,"b'Not sure about having to do this by Axis. We can get buttons fine, but axes are still something users have to setup by hand, which can be annoying.'"
2396,200404010,"b""This was a rage check-in as the above does not work.  As per the updated descripting, I'm really hating Unity input right now."""
2396,201038378,b'Why make a nested class just for const values?\r\n\r\nWe could probably move this into the main class.'
2396,201042808,b'I made them a sub class to make them easier to refer to :D \r\nAdded note on the class for reference.'
2396,201051659,"b""Added a remark at the top of the class to state it's purpose."""
2475,204267127,"b""I do like this, it's much cleaner!"""
2475,204269168,b'We may want to break this up into Trackpad and Thumbstick only.  Else the device input type will always be wrong for one or the other. (Which is why I had them split up in my PR)'
2475,204269258,b'Touchpad != Thumbstick'
2475,204269313,b'Should we do the same for grip too?'
2475,204269343,b'How are we getting the correct pointer and grip data for WMR in open vr?'
2475,204479259,"b""To OpenVR it does :P  It's just a Dual-Axis controller to OpenVR and it only supports a single input per hand"""
2475,204479466,"b""You don't as OpenVR doesn't support spatial grip"""
2475,204492552,b'But we could fake it by adding a grip position to the controller and just off setting the grip by the controller position.  This might actually be beneficial.'
2475,204492722,"b""A device input type is not the same as another. Sure it's dual axis, but a trackpad is not a thumbstick."""
2475,204501850,"b""Looks like this isn't used anywhere: \r\n![image](https://user-images.githubusercontent.com/3580640/43094659-6dd377f2-8e68-11e8-9acb-5046df67d21f.png)\r\n"""
2475,204507492,b'https://github.com/SimonDarksideJ/MixedRealityToolkit-Unity/pull/16\r\n'
2475,204529848,b'Are these expected to be an exhaustive list? It seems like Menu is missing.'
2475,204529970,"b'What do these id numbers refer to, and why do they jump from 5 to 10?'"
2475,204564290,"b'Lol, Ask Unity \xf0\x9f\x97\xa1 \r\nhttps://docs.unity3d.com/Manual/OpenVRControllers.html'"
2475,204565313,b'Again the `DeviceInputType.Touchpad != DeviceInputType.Thumbstick`'
2475,204565323,"b""So they're the...Unity Axis ID? The values here don't seem to match the values there. 10 is `Trackpad-Thumbstick Position` here but Right Controller Trigger there."""
2475,204565485,b'Menu is just another button.'
2475,204566761,"b""It's also a defined `DeviceInputType` not represented here.\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/43105129-aa8d8d48-8e88-11e8-97f2-1b3050d7e4d1.png)\r\n"""
2475,204566987,"b""Agreed, but as that is not part of the spec, let's review that in beta\r\n"""
2475,204567326,b'These only relate to what the OpenVR standard that Unity implements.\r\n\r\nWe may update this when/if we change to getting input direct from the driver.'
2475,204589953,"b""Still my question from before: what does this ID mean, and is there a reason they aren't sequential? It doesn't match the 10 on the link you provided (https://docs.unity3d.com/Manual/OpenVRControllers.html), nor do any of the others.\r\n\r\n10 here is `Trackpad-Thumbstick Position`; 10 there is Right Controller Trigger.\r\n\r\nIt's also not used at the moment:\r\n![image](https://user-images.githubusercontent.com/3580640/43109235-9714a3a2-8e9a-11e8-882f-d0e0dbd3ba6d.png)\r\n"""
2475,204697351,"b""I'll double check the id's for all the controllers, they are ours and should be sequential"""
2568,208392006,"b'I see the WMR touchpad touch coming through `new MixedRealityInteractionMapping(6, ""Trackpad-Thumbstick Touch"", AxisType.Digital, DeviceInputType.TouchpadTouch, MixedRealityInputAction.None, KeyCode.JoystickButton16)` as expected. Do we need this? '"
2568,208393866,"b""Huh, I'll double check. I might have missed this one."""
2568,208393992,b'https://docs.unity3d.com/Manual/Windows-Mixed-Reality-Input.html\r\n![image](https://user-images.githubusercontent.com/13334553/43804235-2a30d960-9a50-11e8-8733-52aebf01dff1.png)\r\n'
2568,208395631,"b'Well, it is touchpad press for WMR but the other devices have it categorized as touch.'"
2568,208430582,"b""I think these mappings are only valid for UWP. I'm not getting anything anything through these new mappings on Standalone/OpenVR. Are you able to run this?"""
2568,208433725,"b""I tested recently with good results, but I'm going down a different path for this. You'll see in an update soon."""
2568,208770760,"b'With this change, [the line in `UpdateButtonData`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/8e6554e86d8627c13251544af9463de6d0486d50/Assets/MixedRealityToolkit/_Core/Devices/OpenVR/GenericOpenVRController.cs#L358) that allows for converting a `SingleAxis` to an `OnInputDown/Up` event will never be called.'"
2568,208772086,"b""I'll take a look. Trying to get controller registration solid before going in depth on input."""
2568,208784912,b'Fixed.'
2568,209031998,b'`pointerOffsetPosition` being set with the rotation seems odd. Should this be `pointerOffsetRotation`?'
2568,209092702,b'Sounds good. I think having it as a vector3 made me put position for some reason haha.'
2475,204215946,b'Do we need extra braces here?\r\n(same with the switch statements in other places)'
2475,204216674,"b""Shouldn't have braces, will check"""
2475,204224539,b'missing { }'
2475,204243892,"b""Why didn't you take the mappings I gave you?\r\n\r\nThese are all broken, no wonder it doesn't work."""
2299,195803704,b'Does OpenVR support touchpad touch?'
2299,195862833,"b'Scaffold, but I shall remove the copied code'"
2345,197918944,b'Replaced by OpenVRDeviceManager?'
2345,197920988,b'Correct'
6989,388069751,"b""Error:BaseWindowsMixedRealityCameraSettings.cs(54,17): error CS0246: The type or namespace name 'WindowsMixedRealityCameraSettingsProfile' could not be found (are you missing a using directive or an assembly reference?)"""
3011,229096909,"b""The main intention with this (and why it wasn't configurable in the editor) was that it was meant to be a placeholder for indicating that a specific culture could be supported by the OS platform, rather than by the App.  The developer (I believe) has other tools of indicating supported languages through their packaging/deployment rather than runtime.  I'm going to revert this portion of the change for now so that we can have a proper design review."""
3011,229121008,"b""I should replace this with that? While I'm in here should I replace the comments on the other two methods being implemented from the interface as well?"""
3011,229130049,"b""Sorry, what I meant was: Should I also update the StartRecognition and StopRecognition methods while I'm in this file since they were also a copy/paste from the interface documentation"""
3054,231715671,b'I fixed it for this file. Let me know if I should fix it globally for this branch'
3054,231715682,b'fixed'
3054,231715688,"b'I switched it whenever this github project is referenced, but didn\'t change it when it ""Mixed Reality Toolkit"" is a string displayed in the Unity UI.'"
3054,231715696,b'fixed'
3054,231715703,b'Fixed for this file only. I suggest we move the whole github project forward to 2017.4 with a separate PR (tied to a github issue). That would be a good time to enforce version consistency with a simple CI test (ensuring version matches between markdown documentations and ProjectVersion.txt) .'
260,81865199,"b""Good point, thanks. Do you know what the DivideByZero error is? I do not see any division happening elsewhere. So it's just at this spot that we are worried about it? If that's the case, should I move line 34 into this check as well? If starting distance is <= 0, the error will occur there as well. Thanks\n"""
260,82021627,"b'This is meant to be called outside the class. I have a demo that uses it, but it may be a very rare case to need to update this on the fly. I should add a tooltip to it either way.\n'"
250,82080733,"b'I would make keybaordSelectKey public. I use this to test gestures using the keyboard or mouse. I have a singleton, similar to manual Camera Control, that simulates gestures in the unity editor; unless we would want to add that kind of code in the GestureManager as well.\n'"
250,82085005,"b""I'm not a fan of forcing the two buttons on the mouse to be pressed, it's actually really difficult to do it exactly at the same time. If one button is pressed slightly later than the other, the tap does not register. The right button is what is used in the HoloLens Emulator which uses the right mouse button for clicking. Is there a reason why we need two mouse buttons to click?\n"""
250,82085264,b'Both OnTap and OnRecognitionStarted both check if FocusedObject != null. It seems redundant to check before calling a function that also checks.\n'
260,82202207,"b'That sounds good, I just moved the logic from Start into the SetSizeRatio function so we get all the protection without duplicating code.\n'"
832,131703581,"b""Saving performance is one concern, but is it really saving performance? The real reason is the functionality did not exist before within these existing scripts so I wanted to make sure anything new would not break anything. Having it off by default maintains the existing functionality. Your point is well received though, it's an easy change if you feel the its safe."""
832,131704771,"b""I will remove the check for WatchForThemeChange and just make it automatic for now. If anyone feels there's a potential break, let me know."""
839,131755566,"b""Good points. I was over thinking it because it feels counter productive to set the visibility one way if I know for sure the visibility will be set back again in the same frame. I removed all the extra checks so the sequence now works like this.\r\n1. SetVisibility true/false\r\n2. The elements' visibility is set\r\n3. If visibility is true, then set the state change which will set the visibility of the ring or dot depending on state."""
904,136189937,"b'The formatting keeps getting funky, I will fix.'"
904,136190002,"b'Good point, will do.'"
2800,218209560,"b'For me this is still a work in progress until we get all the functionality, like down and up on HoloLens working. I agree with your other comment below about moving the scene to examples. I may end up replacing it at some point or at least repurposing it to contain all the button components.'"
2800,218210282,"b""The UnityEvents are for designers to use in editor, unless we have an event system with a property drawer. I'm happy to change how the events work, but the main point is that designers can hook them up without code."""
2800,218212944,"b""We are still developing the visuals, but need to code to make sure the visuals and functionality work together to provide the right experience. It's kind of a chicken and egg thing. All the different kids of scripts are all used by the Interactable script in some way. Though I think we can break it up by feature like states, events, themes, then pull them all together as the Interactable. The intention is that each feature would be easily extendable on it own. Breaking up the submission could force this, though until I get all the features in, things will change across everything, but it will be incremental. I would like to walk through the approach if possible, we can set up a meeting and get some feedback. Then I can submit the state system first and go from there."""
2800,218214426,"b'Agree with that, there should be no 2D GUI elements in this. Maybe the TextMesh Pro implementation used a canvas element, I thought I cleaned that up. Are you saying the Unity Events are a uGUI thing or is it the way they info is passed around? I defer to your wisdom here :)'"
2800,218221863,"b""For sure, I expose the basic click event because if follows the patterns on button, but there are a ton of other events that the designer can add as needed and they are very specific. In the last version of InteractiveElements I thought this button could be used in 5 ways, so I exposed 5 UnityEvents. That just makes things complicated and quite frankly it was easier to building custom inspectors. Now only one event is shown at default and if the design wants another event, they can add that specific event. The same goes for an engineer that would not like to use the inspector, but stick to code, they can target a pattern that defines an event. This part still needs some work though. I know there's a ton here. Thanks for taking the time."""
2852,221323794,b'Good catch.'
2852,221323960,"b'Will do, so everything is private with [SerializeField] tag?'"
2852,221325270,"b""This is just like the FontShader3D, except with the ability to set culling on the material. I should just update the FontShader3D. Not sure why I didn't use it, maybe it wasn't in yet?"""
2852,221327473,"b'Wait, I think I added the FontShader3D under Features/UX which has the culling option. Did I add that one too? We should only have one, just let me know where to put it. '"
2853,221688202,"b'You are correct, I built it out that way to figure out how many different properties I would need for the enum and if there were any special cases which would require a switch statement. The event was the only thing I found so far that did not work as planned. I thought about condensing it during my clean up last week and feel better about it now after getting your input.'"
2853,221690304,"b'I agree, ButtonSize is probably the base place for this. Everything else is driven from ButtonSize. I had it everywhere as a ""just in case"" plus it was easier to compartmentalize in case a situation required an adjustment. I\'ve used this approach on a few projects and have not needed to adjust it, but It\'s my code :) I tend to expose things because designers like to tweak, but it\'s good to get more input before tightening things up.'"
2853,221692515,"b""This is the code change that fixed the errors building for .NET. The older code felt more robust, especially type.IsSubclassOf(typeof(InteractableStates)). Right now I'm only a level deep so (info.BaseType.Equals(typeof(InteractableStates)) || type.Equals(typeof(InteractableStates))) is working fine, but if things are extended more should I do a for loop until info.BaseType == null? I'm willing to delete it though, just wanted more testing and feedback first."""
2853,221692777,"b""Very good call. I'll get that cleaned up."""
2853,221694086,"b""Events are a weird situation, there was talk on an earlier PR about removing UnityEvents and replace them with a pattern being used in other features of MRTK. I haven't got around to looking at that yet. I can definitely clean this up for now."""
2852,221752148,b'Do we have a set of button materials?'
2853,221821390,"b""Thinking about this further, the component does not have to use a ButtonSize element as an Anchor, so without that requirement there is no way to get a BasePixelScale if it's not set on this object. It should just be 2048, it works best for designers building UI from redlines, but if someone wanted to throw it on something for a quick layout and didn't care about pixels, then they can set it to whatever works for them."""
2853,221821489,b'This code is being updated in PR #2870.'
2853,221821802,"b""I updated this in PR #2870. The type is an enum, so it would not convert like that, but it could be stored as an object. There's no reason to have all the seperate objects (value type variables) when we can cast it based on the Type enum, which is only happens during deserializatioin."""
2855,222152531,"b""We need a way for designers to wire things up in the editor without code. UnityEvents are the only way I know to do this, but I'm open to learning something new :) I looked around the input system and couldn't find anything. Is there something specific I can look at? I could build a better system for handling events for developers that don't need the editor, but only expose UnityEvents in the inspector. If they are not used, will they still cause issues? If they are used, then a designer has used them to wire things up and are opting in."""
2852,222352818,"b""We should use TMPro, it's the new standard now that it ships with Unity, and our team is getting ready to move over, but we have some tools that don't support it yet. This is a stop-gap until we get our tools updated or we can draw a line here to say TMPro only beyond this point."""
2852,222359244,b'removed unused methods'
2852,222365940,"b'@SimonDarksideJ We are using this with TextMesh. The Selawik font is currently in the repo and the materials were using the default Unity Font Shader, which is a bad practice so we added this shader in HTK. I brought in the shader to bring MRTK to HTK parody as far as the materials go. We also need to create TMPro Font assets for these fonts to push TMPro as the new standard. If we remove this shader, we should remove the font materials as well and just have the TMPro Font assets.'"
2853,222374473,"b""#2870 should go in first. I moved the code that was in #2852 (1 of 4) and moved it into #2870 (1.5 of 4), which is probably confusing. Each PR layers on top of the previous PRs because of their dependencies otherwise I can't test any changes in the later branches. I figured once one branch is through I would merge dev into the next branch is probably the cleanest path. It gets dicey though because any code changes (other than added comments) should get merged into my later branches for testing, but I'm worried about conflicts at some point."""
2853,222380367,"b""It's more than just code, it's a workflow. I like the camera settings idea, but it seems too detacted from Interactables. Maybe changing the name of these files would reposition as more than just button related code, which could make more sense in a camera resolution type setting. This layout code is more about 3D layout in general then just button code anyway, with similar functionality to RectTransforms, but in 3D. I just crammed it in here because I use it for buttons and this was the first enty point. It should be rethought. We could call it Layout (ObjectSize, ObjectAlignment, ObjectSizeOffset, ColliderCopy, ObjectBorder)"""
2853,222380833,b'I removed the comments in this section of code. Should I resolve this because there are UnityEvent discussions going on elsewhere?'
2853,222382865,"b""The only pattern I've seen is more of a callback system so developers could extend a class and handle events in their specific code. That's definitely doable and a preferred method for doing this in code. There is another thread about using UnityEvents in the inspector only so designers could wire things up if they need to, which is super important because a lot of this is for designers so they can create nice buttons, but they have to be able to test them as well without code. I'll start looking into that. This code is only about what shows up in the inspector, so I will dig into the developer side soon."""
2855,222383877,b'That is a good point. With all the discussions and PRs it would help with prioritizing.'
2855,222797915,b'Added requirements and acceptance criteria #2607 '
3068,230950443,"b""Thanks for catching that, I'll update shortly."""
3279,242749240,b'Thanks for catching that.'
3279,242749920,"b""Not sure if there's a suggestion here. I deleted a tab from this area."""
3279,242750019,b'Removed unused commented code.'
3563,264355448,"b'The list is created ad-hoc while in the editor which allows for new scripts to be added to the list, but once the app starts running, caching it is the right call. New scripts cannot be added during runtime. This was an oversight on my part.'"
3731,271095269,b'Is it worth adding a diagram?'
3731,271095494,"b'I can see the confusion, maybe we do have an example of a button in four different states to show the visual differences and try to bring the reference back to UI states instead of Unity functionality.'"
3731,271096205,"b'IsGlobal only refers to input like down, up and click. Does the object require focus for it to handle those events. Voice Commands being ""global"" is handled with the Requires Focus value under Voice Commands. Requires Focus only shows up when a valid string is entered into the Voice Commands field. (the two things are similar, but handle different use cases)'"
3731,271096317,b'I have seen this error in the Editor.'
3731,271096478,"b""I'll push up a couple more images tomorrow."""
4143,280580945,b'Removed the TODO notes.'
4145,280893978,b'Thanks for that. Totally thought I tested the link.'
4357,284502038,"b""Thanks for all the great comments and questions, there are a lot of great points here. I'll start implementing the actionable feedback and try to answer what I can.\r\n\r\nThe main purpose of this work was to try to get more feedback options into the Interactable Theme system, like grip (grab) and physical press. The PhysicalPressEventRouter and PressableButton can use Interactable themes for simple feedback, if what we have now is sufficient, then we can reduce the scope of this PR. I was contemplating adding the ability to turn off all interaction handling, so that other components could handle that.\r\n\r\nThe grip/grab functionality is purely visual - to drive themes, it doesn't trigger an OnClick event. Though the event/receiver system is built to look for state patterns and trigger events, like the InteractableGripReceiver. It provides a Unity event for OnGrip and OnRelease (I should change the current naming).\r\n\r\nIn order to figure out if a grip is happening, I needed to add a bunch of code though, so I like the idea of abstracting some of this stuff out, especially to reduce the duplicated code. I'm also really interested in anything we can do to abstract pointer, hand and controller data and make that much easier to pass around and decipher intent. There was an effort to create a base button class that we could extend, the idea was to have Interactable extend that class and focus on the themes and feedback.\r\n\r\nI wasn't thinking about adding pressable button functionality to Interactable as much as trying to make it easy for a button that already works with air tap and controller interaction, to also understand touch. It's a subtle, but the outcome was the same, duplicated code.\r\n\r\n"""
4357,284502512,"b""That's a good idea. Things will change over time or other use cases will popup that will require changes to button tech or new components to be written, I'm all for keeping that stuff condensed."""
4357,284502767,"b'Agreed, if we figure out the above discussions about what functionality needs be here, that will effect which samples we create and what they will be named.'"
4357,284504794,"b""Just old habit, I'll update this. Also, I should the source stuff to it's own PR. It could be self contained and we can discuss if this is needed, because it doesn't work consistently using the source handlers unless the button is set to global. This is part of an older request to support HoloLens interaction states, Interactive, Observation, Observation Targeted and Targeted, where source status is required."""
4357,284505787,"b""I was hoping that's the case, it's really problematic as is. One issue I thought about was users could create their own actions so they could name them anything, so going by name or existing actions could break. On the MR controller side, we would get a mixed reality action for grip, but for HoloLens, we just get Select, but at least we can cast to a near pointer to check intent. I'll reach out to @luis-valverde-ms """
4357,284506519,"b""When the PhysicalPressEventRouter was created, some of this code was added, so I tried to make sure I wasn't breaking any existing patterns. What I got from it was Press was like a fallback state if we weren't supplying feedback for physical touch. So at least something was happen on contact even thought the button doesn't move. Documentation here would help."""
4357,284509729,"b""Early in MRTKv2 I was looking at supporting gestures with hands or controllers. The way the data was structured at the time did not link a MR InputAction to a controller button in the interaction mappings, so there was no way to monitor the controller for the button associated with that action to be released. I believe it's still not as easy as it could be.\r\n\r\nI came up with ActionScore as a temporary fix, it could be outdated. A use case was using grip on a controller to pick up an oil can, then while gripping and moving the can around, using trigger to drop oil. We did not want to drop the can prematurely, so action score would store all the values in the controller interaction mappings, at the beginning of an interaction, then wait till the score dropped below that number to handle the release. It's flawed but worked at the time. I need to do another pass here, but was hoping for some guidance."""
4357,284509833,b'Thanks for the time looking so far.'
4357,286645812,b'Updated the info panel and simplified how grab is being detected. Right now we are detecting NearInteractionGrabbable interaction.'
4357,286646034,b'Added clarification'
4357,286648148,b'removed the press OnClick trigger and detecting touch start and deltas'
4357,286648795,b'removed pressable button examples and prefabs'
4357,286649267,b'removed pressable button code from Interactable'
4357,286649398,b'using hashSet now.'
4357,286651904,"b'These have been updated, or removed.'"
4357,286654403,"b""I'm putting this as a TODO, will research later."""
4357,286654959,"b""I'll update the documentation. Press is a fallback to Physical Press, so we get some feedback if physical press is not being monitored."""
4357,286655039,b'removed'
4357,286655438,b'this class was removed. it was an attempt to capture generic gesture data.'
4357,286655599,b'this class was removed'
4357,286656018,b'yes and removed.'
4357,287044278,"b'The See-it, Say-it label on the Holographic button says, Say ""Button"". So it seemed like a bug for it not to listen for the voice command so I updated this voice command field to make it match the label. This is a discussion we were just having on a project where we have a toolbar with a set of commands that you can use voice to activate. Though it is typical to say select to trigger a button you are gazing or pointing at, if the command is global, then you want to train the users on what to say to trigger the button when they are not looking at it, that case we would want consistency between the two context.'"
4357,287044902,"b""It's been documented. https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Documentation/README_Interactable.md#voice-commands"""
4357,287047832,"b'I was updating the scene to include more info on the panel and looking at documented existing functionality better, we have an audio event that was documented but it was never demoed, now that we have MRTK audio files, I added and audio event to the holographic button, and took a snapshot to replace the one in the docs. This could be a separate PR, it just felt weird to revert it.'"
4357,287053315,b'This should be another PR and definitely failed on the description.'
4357,287055489,"b'There is an OnTouch event. All ReceiverBase classes come with a Unity event which in this case is called OnTouch. OnTouchOff is the second event. Maybe OnTouchStart and OnTouchEnd would be better, or start/complete?'"
4357,287059845,b'This is an effect script that that will fade and scale a gameObject over the Lifespan then destroy itself at the end. I use it to provide interaction feedback. Like OnClick and burst will happen.'
4357,287068928,"b'This was a bug I noticed while adding the grip state, VoiceCommand was added previously to the enum above, but was never added to the states list.'"
4357,287070302,"b""I updated the comments. It's used by the themes to expose properties for additional theme settings. Allows more customization of themes."""
4357,287072197,"b'It was included in the list, but could have been separate. This was something that was stubbed in a few places but never finished and I use them to do the InteractableGrabScaleTheme, plus a couple other themes that have been removed from this PR.'"
4357,287073019,"b'This was a bug fix made as I was working on the themes, every time a new theme is added the properties were closed by default, it was getting annoying.'"
4357,287073182,"b""I'll add to the bug fix section."""
4357,287127716,"b'I can change the see-it-say it label if we want to go back to select, but we would need to make sure the Select keyword is working.'"
4357,287127895,b'removed'
4357,287128005,b'removed'
4357,287128431,"b""This should have been put in the Utilities folder or something, it's a general temporary glow or burst effect. I removed it from this PR."""
4357,287128801,b'Used in the GrabScaleTheme'
4357,287130145,"b'Good call, added some documentation about states that were not previously mentioned.'"
4357,287530973,"b""I would like Grab to reflect near grab or grab on controller, otherwise, we are a far interaction press (unless controller). Having two MixedRealityAction dropdowns on the Interactable could add confusion for what may be a minimal use-case. I was thinking about having another component handle the grab from a controller and routing that in. I'm worried about getting too descriptive of what a grab is and is not, because I could be too limiting. I would love to expose more control over how these states are defined or let people route them in."""
4552,288299637,"b""Good point, not sure why it's reversed."""
4357,288317057,b'This could have been a remnant of testing a keeping it separate until everything worked.'
4357,288320962,"b""I may be looking at this too deeply. The currently implimentation is looking at Grab by testing if a near interaction is in the pressed state. It only works if the NearInteractionGrabbable is present, so this is working as expected.\r\n\r\nDo we really need to differentiate the grab on a controller from any other action or will a press event be enough? As @julenka mentioned, it would have the selected action from the Input Action drop-down. I don't like the idea of trying to detect mulitple input types if we have an input action selector to filter input. In this case we are detected near interactions touch and grab, not buttons on a controller, using the select action. This makes sense to me. Is it OK to say Grab for near Interaction Grab, and not be confused with Grip from a controller? We could say Physical Grab, like Physical Touch? I don't like adding words if they are not needed, just throwing that out there for consistency.\r\n\r\nThanks for all the great feedback, you are definitely asking all the right questions.\r\n\r\n**I'll remove all the controller grip stuff and assume that if someone wants grip they will select it from the input action drop-down and use the press state, like all the other input types. This clears up things for me at least.**"""
4357,288324787,"b""Oh, wait. I'm using the IsGrab value to set the grab state. I'm also using it for handling the event. I could create an out value for grab then combine them."""
4357,288356015,"b""I added an InteractableOnTouchReciever to the NearInteractionSample, the cube with the white faceted sphere inside.\r\n\r\nAs for the voice command stuff, I was totally confused. There used to be voice recognition code in Interactable that was removed, but I didn't know that. The voice command field would enable a voice command directly from Interactable, but now that it's gone the feilds are confusing. Like the Requires Gaze doesn't really do anything now, so it needs to be removed. The Voice Command field does filter the voice commands, but it should be a drop down pulling a list from the speech input profile. I'll open an issue for this."""
4357,288356185,b'The documentation for Voice Commands in Interactable is totally wrong now and needs to point to the Speech Input setup.'
4357,288356642,"b'It is interesting that the Near Interaction Grab sends a Grip Press action though, but I filter this by checking for the NearPointer.'"
4695,290482625,"b'It\'s so we can have something that listens to a global voice command, but not a global click or press. I could have one button for menu on a toolbar, which needs to be focused to click, but a global voice command that I can speak at any time ""menu"" to show the menu. Without these two properties menu would be clicked whenever another button in the scene was clicked.'"
4695,290483204,"b""Requires Focus only applies to Speech Commands, I tried to make up a different property name to avoid confusion, though it is confusing :) I'm hoping the context of the Inspector helps."""
4695,291651455,"b""We set the VoiceCommand property to an empty string. There's code in Interactable and the inspector that checks for an empty string to see if listening for voice commands is active or not."""
4695,291657046,"b'There\'s a slight difference here than Array.IndexOf. This starts at item one in the array because ""None"" was added at item zero. If the speech command is not in the list, I want it to be zero, which is ""None"".\r\n\r\nI was concerned that someone could create a speech command called ""None"" for some scenario, like choosing the amount of something via speech command. In that situation, a created speech command would match the inserted ""None"" value at index zero and turn off  listening for voice commands. It would be weird that there would be two ""None"" values in the list, but that\'s an extreme edge case that would not break anything.\r\n\r\nI wanted an easy way to turn off speech command handling without adding another toggle to enable/disable it. But any value we insert could potentially be a speech command that someone could create. If this is too weird, I can put in the toggle :)\r\n\r\n'"
4695,291657395,b'See above comment.'
4695,291658463,b'Should I follow this pattern?\r\n``` C#\r\nif (!MixedRealityToolkit.ConfirmInitialized() || !MixedRealityToolkit.Instance.HasActiveProfile)\r\n            {\r\n                descriptionsArray = null;\r\n                return false;\r\n            }\r\n\r\n            MixedRealityInputAction[] actions = InputSystem.InputSystemProfile.InputActionsProfile.InputActions;\r\n```'
4695,291658929,b'I updated a ton of single line comments to be summary comments. Hopefully this will help with feature discovery.'
4695,292172068,b'Updated to use similar pattern for getting input actions.'
4695,292186555,"b""Thanks for the suggestions, I don't use LINQ very much and should learn more about it.\r\n\r\nLeaving the first item blank or just spaces does not work in the editor popup, it just ignores the item without valid characters in the drop down so it doesn't should up as an option. I replaced None with -No Selection- as the first item, it's more clear and gives the user the feeling that they can select it as an option to turn the feature off."""
4819,292562702,"b""As far as I know they are only used in Interactable and this is pretty deep. Just make sure it's documented well, in the off chance someone is using it, they can easily update their code to store an int instead of string."""
4695,296316079,"b""That makes more sense. I'll also make sure the tooltip is clear where the speech command list is coming from at least."""
4695,296368078,"b'I disabled some of the settings during play mode, those that should only be edited in edit mode. '"
4695,296857469,b'This should be updated to target the correct input handler types.'
5070,297862168,"b""That's an oversight. I'll update it."""
5069,300809832,"b""I've been thinking about this for a while now, I'll at least make the new stuff follow the guidelines."""
5069,300819107,"b""I moved the enum out to it's own file and added clarification on each value."""
5069,300819128,"b'Great points, made updates as suggested.'"
5069,300819220,"b'Added a log, hopefully this is clear enough. ```Debug.Log(""SetToggled(bool) called, but SelectionMode is set to "" + (SelectionModes)(selectedMode - 1) + "", so DimensionIndex was unchanged."");```'"
5321,303958987,"b""That's the font size of the label, it needs to be a little larger for eye flow. I could grab the default size of label and add to that. \r\n\r\nGUIStyle labelStyle = new GUIStyle(EditorStyles.boldLabel);\r\nint labelSize = labelStyle.fontSize + 2; (assuming labelStyle.fontSize is 10)\r\n\r\nor \r\nInspectorUIUtility.DefaultFontSize + 2."""
5321,305090620,b'DrawSection() no longer exists in InspectorUIUtility but is used in ThemeInspector.'
5321,305092007,"b'If you remove this whole condition, then the variable ""drawerStarted"" should also be removed anywhere it\'s used.'"
5321,305092588,b'Getting this cleared up got everything rendering properly and it looks really good now.\r\n\r\n![image](https://user-images.githubusercontent.com/22085553/61488218-81b94980-a95c-11e9-9d56-28a583c4be08.png)\r\n'
5493,310211938,"b'This works as long as Easing is not checked in the theme. To get easing to work, the theme needs to be updated every frame. Something like this.\r\n\r\n```C#\r\n\r\nInteractableStates.InteractableStateEnum state = InteractableStates.InteractableStateEnum.Default\r\n\r\n        private void UpdateThemes(bool isFocused)\r\n        {\r\n            state = isFocused ? InteractableStates.InteractableStateEnum.Focus : InteractableStates.InteractableStateEnum.Default;\r\n            \r\n        }\r\n\r\n        private void Update()\r\n        {\r\n            foreach (var theme in this.themes)\r\n            {\r\n                theme.OnUpdate((int)state, null, false); // set force to false as well, force is for setting the initiation state without easing or resetting values without easing.\r\n            }\r\n        }\r\n\r\n\r\n```'"
5493,310233070,"b""This is really cool and having a remote profile on other objects is something I've though about doing for a while.\r\n\r\nSome warnings from rendering the inspector for InteractableOnFocus.\r\n`Unexpected top level layout group! Missing GUILayout.EndScrollView/EndVertical/EndHorizontal?\r\nUnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)`\r\n\r\nTwo things to consider,\r\n1. It will be interesting to see any other use cases for this pattern, like InteractableOnPress? Do we want to make a base version of this that is more generic? or am I getting ahead of things?\r\n2. When a theme is created the DefaultInteractableStates are added to the theme, which include Default, Focus, Press and Disabled. In this control we only care about default and focus, do we want to only show the default and focus values instead of all 4? There's a way to filter which states show up and which ones will need to be added if they do not exist already. This could be done later, without breaking anything, if we should wait to get some more feedback.\r\n\r\nFor reference.\r\n\r\n![Example of created theme with state added at the top](https://user-images.githubusercontent.com/22085553/62385647-84926d80-b50a-11e9-96c0-b8923b63b305.png)\r\n\r\nAlso, very cool that the MRTK Standard shader is referenced by default for new themes!\r\n"""
5663,314404036,b'Please add support for TextMeshProUGUI as well to cover all the bases. Thanks for this BTW.'
5967,326403604,"b""The theme should hide the State field when rendered in the Interactable UI. It's part of Themes for the reason you mentioned above, to allow the theme to have something to configure without being placed on an Interactable.\r\n\r\nFrom what I remember, there should be an issue with placing a theme with one States object on an Interactable with another States object containing different states. Or have a single theme applied to two Interactables with different state objects. Haven't tested that though."""
5967,326440047,"b'Good point. \r\n\r\n""If the States objects are different, it renders a warning message."" this is cool.'"
6460,342671327,"b'I vote for relative as well, especially after using the theme recently. Having them work the same is important to the work flow and to avoid frustration. Thanks for doing this. It also creates a more universal theme that can be applied to more objects to get a similar feedback effect.'"
405,93157407,"b""Good catch, we should be checking to make we should either update the `ParentGameObjectToPlace `'s transform position/rotation, or the game object's, this script is attached to."""
405,93157725,"b""Agreed, what if it's nested into a few children?  We should also handle those cases as well.\r\n\r\nI think it might be easier to just assign the parent object in the inspector, but this current implementation overwrites whatever you put in the inspector."""
405,93157814,"b""I think it's meant to be used on lines [118](https://github.com/Microsoft/HoloToolkit-Unity/pull/405/files#diff-f264c3c46b9de1628a050b4e9253ea5dR118) & [124](https://github.com/Microsoft/HoloToolkit-Unity/pull/405/files#diff-f264c3c46b9de1628a050b4e9253ea5dR124), where you've pointed out we still only update the game object the script is attached to."""
403,93159293,"b'No I disabled the regeneration of the materials by the fbxs, even on reimport (unless they get deleted at re added, the fbx meta file holds the flag for importing materials.)\r\n\r\nSee [SRMesh.obj meta](https://github.com/Microsoft/HoloToolkit-Unity/blob/dd450377881d61137d9d72952942df615263e695/Assets/HoloToolkit/SpatialMapping/Tests/Meshes/SRMesh.obj.meta#L23) and [FakeSpatialMapping.fbx meta](https://github.com/Microsoft/HoloToolkit-Unity/blob/dd450377881d61137d9d72952942df615263e695/Assets/HoloToolkit/SpatialMapping/Tests/Meshes/FakeSpatialMappingMesh.fbx.meta#L26)'"
403,93159381,b'The new AsyncCallback is redundant.'
425,93526301,b'Please revert. Should be 0'
496,99446259,"b""This was just a placeholder file I meant to delete.\r\n\r\nBut the purpose of the zip file is so that users have everything they need when they import the asset package the first time. The external binaries are in the zip file and are only unpacked when users opt to use the sharing services in the HoloToolkit/Configure/Apply Project Settings menu.\r\n\r\nThe inclusion of this zip file shouldn't affect compile time, nor make it into a build."""
496,99459869,"b""Everything would compile fine, lol.  This PR _would_ create a duplicate of the External resources but in a zipped format (I would like to discuss exactly how we want to handle that).  Ideally this Externals folder should only live in the [HoloToolkit](https://github.com/Microsoft/HoloToolkit) and not this repo, with this repo only having the bundled external assets that could, in theory, get updated automatically (pretty much what https://github.com/Microsoft/HoloToolkit-Unity/issues/279 talks about).  Currently it would have to be done by hand, but to be honest, the main HoloToolkit doesn't really change all that often.\r\n\r\nI'm thinking about this in a couple of ways:\r\n\r\n1. This project is a simple framework for learning & sharing with the community.\r\n2. This project is for staging and deploying an asset package that people will download, either from here or the Unity Asset Store, and should contain all the resources needed.\r\n3. For advanced developers to download and tailor this project  by exporting an asset package that fits their needs.\r\n\r\nThe main goal of the bundled external resources is to ensure when people import the asset package they have everything they need to get started **all in one place**.  Currently you'd have to go and find the sharing services, download them, then make sure they're in the correct place yourself.\r\n\r\nCurrently if someone was to create a new project and import the current asset package, and try to use any of the menu items related to the sharing service they will get errors:\r\n![image](https://cloud.githubusercontent.com/assets/22268546/22616068/78f1ac84-ea73-11e6-91c8-b649dd9224c7.png)\r\nThe second message talking about manually coping some .exe is rather vague. It doesn't even give you a clue where to obtain it, considering that external folder doesn't exist if you've only downloaded just the asset package and not the whole HTK project."""
4889,298073601,"b""As far as I can tell there is no reason not to enable it.\r\n\r\nI tried to designe it with a minimal amount of possible conflicts in mind.\r\n\r\n\r\nOR \r\nIf you mean rather you would like to always use multicore builds, I'd say that it might be that in some cases, people would like to build in background on only one core.\r\n\r\n\r\nTo be honest I'm not sure what your question really is about, maybe you could elaborate it a little more. \xf0\x9f\x98\x85 """
4889,298137844,"b'I made a new commit, with a merge from current dev.\r\nThere I changed the multicore switch to a commandline argument and a corresponding UWPBuildInfo attribute.\r\nIt should work as UnityArgs, with the pipeline I guess. '"
289,93777845,"b""It's a good idea not to initialize variables to invalid values in C#.  That way, the compiler will catch you at compile-time if you accidentally forget to set it before using it.  I suggest removing the ` = null` here."""
432,93834502,"b'Behavior seems fine even with these as ""in"", but it seems pretty clear these args are ""out"" blocks of memory... anyone a marshalling expert?  Does it matter whether we put in or out for these IntPtr args?'"
432,93834545,"b""Anyone know details on why the pooling was important?  It was a lot of extra complexity I'd like to shed, but if there's a measurable improvement by having it, I'll add some form of pooling back in."""
432,93834553,"b""Anyone know the details on Unity not cleaning up baked collision data?  I want to make sure I know how to measure whether or not I'm regressing anything."""
432,93882143,"b""This room model is Assets\\HoloToolkit\\SpatialMapping\\Tests\\Meshes\\SRMesh.obj .  It's not a very interesting mesh, especially for spatial understanding.  Anyone opposed if I replace SRMesh.obj with one more interesting?"""
432,94356581,"b""I couldn't measure a perf difference, but I went ahead and added it back in out of paranoia."""
432,94356622,b'I added explicit mesh destruction back in and it stopped the meshes from leaking.  Huzzah! :)'
432,94957074,"b""I'm not fully sure what Unity 5.5 is doing here, but anytime I build the WindowsStoreApp with the HoloToolkit build window, it tries to make this change.  Are other people not seeing this when they try to build the WindowsStoreApp?"""
432,94957762,"b""I believe the HoloLens Unity Performance Recommendations said to avoid lambdas, because they implicitly create an extra GC object if the lambda captures any locals, but in this case, the lambda doesn't capture any locals.  I'll see if I can get that recommendation explained more on the page."""
432,94957995,"b""Since it's working, and I'm no marshalling expert, I'm just going to remove the TODOs in the next commit."""
432,94959812,"b""Hmm, I haven't figured out how to convert the obj to an FBX yet.  My web search was kinda noisy on this issue.  Anyone have a good pointer on how to do this?"""
432,94960119,"b""Thanks, @jevertt .  Maybe the In/Outs only matter for more complex marshalling situations (like COM marshalling across processes/machines).  I'm just going to remove the TODOs for now."""
432,94960926,"b""I'm only using it for a ToArray() call, which doesn't involve any more allocations than we actually need.  I suspect the performance guidance is saying to avoid chains of select/where/groupby/etc, since those would involve many GC allocations.  I'll see if I can get that guidance clarified.\r\n\r\nAre people concerned that by adding the System.Linq using, I'm encouraging people to use Linq freely?  If so, I can Explicitly call System.Linq.Enumerable.ToArray() on the object instead."""
432,94961064,b'Sounds good.'
432,94961262,b'Sounds good.'
432,94961463,"b'Sounds good.  Is the idea with the Unity ""Debug.Log*Format"" methods that they are optimized differently at compile-time?  Or are there other benefits?'"
432,94961867,b'Sounds good.'
432,94961892,b'Sounds good.'
432,94962113,b'Sounds good.'
432,94962136,b'Sounds good.'
432,94962172,b'Sounds good.'
432,94962377,"b'This one I\'d like to keep as ""var"".  Especially when the type is elsewhere on the declaring line, I like to avoid specifying it twice.  How do others feel?'"
432,94962402,b'Sounds good.'
432,94962876,"b'This one I\'d like to keep as ""var"".  The type name is long and complex, and the exact type isn\'t important to the algorithm here other than the fact it\'s an event ""handler"" type. How do others feel?'"
432,94963071,"b'This one I\'d like to keep as ""var"".  The the exact type isn\'t important to the algorithm here, since the object is just copied in whole. How do others feel?'"
432,95047300,"b""Since it's protected virtual, I figure there may be child classes overriding it, so I'd leave it in rather than make the breaking change, but I'm open.  Other votes?"""
432,95047412,"b'This one I\'d like to keep as ""var"".  Same rationale as the other ""handlers"" one.'"
432,95047420,b'Sounds good.'
432,95047427,"b'This one I\'d like to keep as ""var"".  Same rationale as the other ""handlers"" one.'"
432,95047465,b'Sounds good.'
432,95047474,b'Sounds good.'
432,95047483,"b'This one I\'d like to keep as ""var"".  Same rationale as the other ""handlers"" one.'"
432,95047509,b'Sounds good.'
432,95047581,b'Will do.  This style is going to take me some getting used to :).'
432,95047601,b'Will do.'
432,95047662,b'Sounds good.'
432,95047801,"b'This is a formatting trick to make all the important cases line up vertically.  The ""false ||"" is essentially compiled out.  Some people love formatting tricks like this, but some people hate them.  I can go either way, so if that is unpalatable to you or others contributing, I\'m happy to remove it, just let me know.'"
432,95047836,b'Sounds good.'
432,95047988,"b""Ahh, I see.  For my education, what's the benefit of FBX?"""
432,95048045,b'Sounds good.'
432,95048201,"b'It does process the parameters using GetMemberName when it calls the other ""this"" constructor, so it can\'t go away, but it doesn\'t do anything in its body.  An old friend got me in the habit of never leaving empty braces, since it\'s hard to tell if they\'re empty on purpose or not, so I adopted his ""// Nothing."" comment when braces are really intended to have nothing in them.  I\'d be fine breaking that habit in this code base, though if folks would like.'"
432,95049079,"b""True.  I think this started happening recently with the Unity 5.5 update, but wasn't happening on Unity 5.4 HTPs."""
432,95060491,"b""Makes sense.  I feel it's more legible with the formatting trick, but a little confusing with the formatting trick for those not used to it.  I'll remove the formatting trick and see if I can do something else to keep the conditions legible."""
432,95060833,b'I pulled the condition out into a helper function and think it works pretty well.  Thanks!  :)'
432,100658980,"b'Looks like ""HoloToolkit\\SpatialMapping\\Tests\\Scenes\\SpatialProcessing.unity"" also uses it.  I\'m fine leaving it in so as not to disturb that scene (or other folks who may have added it to their own private test scenes), but I\'d also be fine removing it and changing SpatialProcessing.unity to also use the new fbx I added.\r\n\r\nThoughts?'"
701,119957515,"b'Thanks for the feedback.  Can you say a bit more about what the caller would pass in for targetPPD and how they would choose that?\r\n\r\nUltimately, we felt we wanted something similar to [""device-independent pixels""](https://en.wikipedia.org/wiki/Device-independent_pixel) in 2D UI frameworks, so that most creators can design for whatever device they physically have access to, and things will ""just work"" on devices they\'ve never physically tested.'"
708,119958057,"b'Rather than disabling the warning, we made the field ""protected"" which has an added benefit that if a child class introduces a new SerializedField with the same name, the compiler will help us catch it, rather than leaving Unity to silently ignore the issue and leave us developers confused.'"
708,119958202,"b""This fixes a bug.  When switching between a 6DoF controller's pointing ray and gaze, if the user is staring at an object, the focus wasn't updated correctly.  This change fixes that case."""
708,119958353,"b'This fixes a bug.  When UnityUI events were flowing, they weren\'t correctly ""pointer-stealing"" between 6DoF pointing ray and gaze.  By attaching InputSource and SourceId to those events, too, ""pointer-stealing"" works correctly.'"
708,119958464,"b""None of these Extensions changes are necessary for input to work, but we found them useful while developing our app.  I'm fine keeping them or removing them.  Anyone feel strongly either way?"""
708,119958708,"b""HashCodes isn't necessary for input to work, but we found it useful while developing our app. I'm fine keeping itor removing it. Anyone feel strongly either way?"""
708,119958764,"b""ReadOnlyHashSet isn't necessary for input to work, but we found it useful while developing our app. I'm fine keeping it or removing it. Anyone feel strongly either way?"""
708,119958993,"b""StartAwareSingleton isn't necessary for input to work, but it is analogous to StartAwareBehaviour which is already in HoloToolkit, so I feel we should take this addition.  It was very useful when making our app.  Anyone feel strongly that we shouldn't?"""
708,119971368,"b'Correct.  FocusManager is a required component just as much as InputManager is, so if we somehow end up with a scene without a FocusManager in it, we want a big loud error just like we get when InputManager is missing so we can fix it.'"
708,119971450,"b""Yeah, the diffs line up kind of funny here, but this whole set of flags was made obsolete in an earlier refactoring of InputManager that someone did.  We removed the flags, since they weren't used anymore."""
708,119971687,"b""Let me know what the verdict is on this, @NeerajW.  Ideally all our prefabs and test scenes have FocusManager setup correctly in them already (I know a couple months back, I made sure they all did in our project, but perhaps those changes didn't get propagated back into all tests scenes in this repo.  Let me know if you want me to check and fix them all."""
708,120226090,b'I was just about to add a message about that :).  I think that should be the default behavior.  Are you OK with me making the main InputManagerTest scene 6DoF-compatible and make the main InputManager prefab include the SimpleSinglePointerSelector and be configured correctly for 6DoF or GGV?'
708,120226736,"b""Ahh, perhaps I misunderstood.  I was under the impression that the OverrideFocusedObject was introduced as a temporary workaround for a pointer selection bug in the past.  My memory is just hazy though.  Did I remember that wrong?\r\n\r\nUsing a global listener or a modal input handler seems like the right way to handle override scenarios, was there some scenario they couldn't satisfy?"""
708,120226788,b'(This thread continued in OverrideFocusedObjectTest.unity)'
708,120226872,b'(This thread continued in OverrideFocusedObjectTest.unity)'
708,120227673,"b""Will do.  It looks like the InputManager prefab wasn't updated to use SimpleSinglePointerSelector, so I figure that could be one of the causes, but I'll dig in."""
701,120532674,"b""I like it!  It's also nice that it's asymptotic, so devices with very high PPDs won't scale content down too fast.  Check out the new changes."""
708,120773290,b'I did this as part of the latest commits.'
708,120773450,"b""Yeah, by adding SimpleSinglePointerSelector to InputManager, that fixed the issues.  There were a few scenes that didn't have a cursor, but still used InputManager, so for those scenes, I disabled SimpleSinglePointerSelector accordingly."""
708,120773498,b'I did this as part of the latest commits.  Thanks for the catch!'
306,86116176,"b""Aren't scene objects loaded before the first Awake call is made?\nIf yes, Singleton<T> already accounts for that by calling FindObjectOfType<T> if the instance doesn't exist. \nOtherwise I could change it to Start, but I'd need to verify that everything still works.\n"""
306,86117070,"b""I've added a statement to unregister that handler in OnDestroy.\n"""
4587,290805228,"b'Hi Lukas,\r\nAt first, I didn\'t know the existence of this script, so I created my own MonoBehaviour.\r\nWhen I found the HandGestureRecorder and tried to attach it to a gameobject, a the pop-up  shows : ""The script is an editor script."".\r\nSo I created my own GestureRecorder'"
4587,290805877,"b'Absolutly, ""Open Sky"" means nothing'"
344,91493319,"b""Yes , it seems that we don't need those lines. We will delete it."""
7225,374862309,"b""Sure, i'll give this a try."""
7225,374865021,b'The research mode function is a bit more complicated / different beyond capabilities so propose leaving this separate'
7225,374871870,"b""Hey @wiwei, it appears that AddCapability() already does a duplication check. I can still make this change, but believe it's redundant. Added tests for safety. Let me know!"""
1623,161125611,b'ok just did.  do i need to do a new pull request or will this new commit just attach itself?'
1623,161227781,b'done'
1854,176306251,"b""Sounds good! There might be a more generic usage but for now it's a good to keep the name explicit, until there is a need."""
1865,176895643,b'@StephenHodgson in fact my initial approach was to put this in InputManager but then I noticed that all existing events implement or need a corresponding IInputSource and I was not sure what to do for the case of the new IPlacementHandler. Any thoughts on that?'
1865,176929184,b'Check out the new iteration and tell me what you think.'
1865,176966878,"b""@StephenHodgson I think this iteration addresses your concerns? \r\n\r\nMy only concern with this version is, the PlacementEventData.selectedObject for OnPlacingCompleted is not the object that is being placed. For example, in the TapToPlace test scene the selectedObject is the 'roommesh' instead of the 'cube' that is being placed. That does not seem the desired behavior of these events?"""
1865,177166482,"b""I believe the reason for this behavior is:\r\n\r\nIn InputManager HandleEvent(), even though modalInput is 'cube', the focusedObject is 'roomMesh' and eventData.selectedObject is always set as the focusedObject. So when the event OnPlacingCompleted handler is invoked for 'cube', the selectedObject is set as 'roommesh'.\r\n\r\nAny suggestions on how to fix? Or is this just by design?"""
1865,177308820,"b""So does it mean the behavior is by design and we should proceed without any modifications?\r\n\r\nSummarizing the issue:\r\n1. the selectedObject when OnPlacingStarted triggers is 'cube' as I would expect.\r\n2. the selectedObject when OnPlacingCompleted triggers is 'roommesh' instead of the 'cube' that is being placed.\r\n\r\nThe events are routed to the registered listeners as expected. It's just the selectedObject when OnPlacingCompleted triggers that makes me wonder whether it's a bug or just by design. Ideally I would like to know what game object is being placed when those events fire ... but maybe I am overthinking the API."""
1865,177518579,"b""Oh that sounds good to me! I wasn't sure passing the GameObject around would be well received since there was no other event doing it,"""
1865,177829405,b'@StephenHodgson I just noticed I had forgot to remove this unused code so I pushed one last commit.'
2187,191953359,"b""This one can't because it has virtual methods."""
2187,191953413,b'Agreed!!'
2187,191953490,"b'Oh, I like it.'"
2187,195885838,"b""@StephenHodgson I tracked down these two bugs in Unity that are preventing MSAL from working on IL2CPP. Once these bugs are fixed, this library works.\r\n\r\nI'd like to wrap-up this PR as soon as possible. Should we proceed with this change with that caveat (this won't work until those bugs are fixed in Unity) or do you have some other suggestion?"""
2187,197595577,b'Friendly nudge :)'
2187,198243927,"b'@StephenHodgson MSAL does not work in the Unity editor because the SDK requires web browser which is not available in Unity.\r\n\r\nThere are two options as workaround to test Graph in the editor:\r\n1. Use network monitor like Fiddler, to sneak peak the Bearer token and copy/paste into GraphConnector inspector as the Test Auth Token\r\n2. Provide custom implementation of IGraphAuthentication instead of using MsalGraphAuthentication. Obviously a real implementation is not trivial (requires OAuth, UI for users to enter credentials, etc).\r\n\r\nFurthermore, in future releases of MSAL this scenario should be unblocked using the device code flow (which enables us to sign-in from a phone for instance), or another device. But Device code flow is not yet implemented in MSAL.Net (this is coming).\r\n\r\nDo you have a particular concern about leaving this as is, knowing these caveats. I guess I can elaborate a bit more in the README.md?'"
2187,198292408,"b""@StephenHodgson I also hate the fact that Unity does not have a nice way to reference NuGet packages, or am I wrong about that? \r\n\r\nOptions I can think of: we make this DLL disabled by default in Unity, so it does not cause any conflicts whatsoever, until users explicitly enable it. Or we don't even include the DLL and we mention in the documentation that developers require MSAL DLL to use MsalGraphAuthentication.cs, provided with the SDK?"""
2187,198649517,b'@StephenHodgson how do I hook to the auto downloader?'
2187,198945155,"b""The reason why it's inheriting from Mono is to allow user to set the Graph settings through the Unity editor, using the inspector to make it Unity friendly. I will be fine to change if you feel strong about it?\r\n\r\nCurrently there are only 3 settings (App Id, Access Scopes, Auth Token) and there might be more to add in the future to support more (uncommon) authentication scenarios (e.g. Authority, RedirectUri, Extra Scopes, etc)."""
2187,198986583,"b""Got it. We really need a system to reference NuGets from Unity. The change you suggest makes totally sense to me but I don't have the cycles to do it. Can we leave the DLL embedded for now and create a separate work item to create a system that allows managing NuGets that everyone can benefit and hook in? Honestly, I hate the fact that Unity does not integrate with NuGet yet.\r\n\r\nBy the way, I stumbled up on https://github.com/GlitchEnzo/NuGetForUnity. Might be interesting to take a look."""
2187,200172410,"b'Yeah, this file should be reverted, my mistake.'"
2187,200245400,"b""Sorry, I meant, Yes - you are right, don't need this :) I should have reverted this file before pushing last changes. I will do that next."""
927,136857575,"b'OK, as this is my first pull request, is this something I should fix?'"
927,136872720,b'Spaces removed and recommited. I see the changes here so I guess I did it. Well it went smooth for the first time :-) \r\nThanks for the help.'
2363,199287368,b'I did it in an update now.'
2363,199287425,b'I fixed it in an update now.'
2914,225131150,"b""Well, I wanted more options on the shader itself, and per-material is a bonus I didn't think of. That's about it I can think of for reasons right now."""
736,124016798,b'Maybe we should add a Tooltip to notify that the transform is the mainCamera by default?'
4317,283935739,"b""yes exactly as @cre8ivepark has shown. It's very frustrating to always change the defaults when most will want the latter photo"""
4343,284445437,b'I know :) I was going to do after all my PRs had merged and just do one pass of making things cleaner/more re-usable across components. But I can add the utility now and then just do a follow PR on other stuff to re-use that'
4343,284449236,"b""Ah damn, sorry, I didn't push last commit. """
4314,284834822,b'This comment is on an outdated version of the file. It has already been removed'
4314,284835172,b'This comment is on an outdated version of the file. It has already been removed'
4314,284835228,b'This comment is on an outdated version of the file. It has already been removed'
4314,284835273,b'This comment is on an outdated version of the file. It has already been removed'
4314,284835357,b'This comment is on an outdated version of the file. It has already been removed'
4314,284836155,b'Removal. I was going to try to be smart in the future and make sure the inspector appears on selection'
4314,284837537,"b""yes this is done on purpose in every file. I try to match the hierarchy grouping of UI content as it's rendered, especially around the BeginHorizontal and BeginVertical groupings such like one would do with bracket scope. """
4314,284837606,b'Done on purpose'
4314,284837641,b'Done on purpose'
4317,285374193,b'@StephenHodgson the build from Unity to VS worked for me and @keveleigh said the automated builds were fine. Can you elaborate what build is broken for you?'
4661,289530730,"b""@davidkline-ms , hmm so what service then contains IsInputSystemEnabled as your commet highlighted(aka what service consumes MixedRealityToolkitConfigurationProfile in it's constructor)? The only method I see for accessing profiles is roughly:\r\n\r\n```\r\nIMixedRealityService service;\r\nMixedRealityServiceRegistry.TryGetService<IMixedRealityService>(out service); \r\n\r\nsvc.profile.blah.dosomething etc\r\n```"""
4661,289530775,"b'@davidkline-ms if there is no MRTK instance in scene, how does one get the list of available inputactions? Looking at the updated Interactable.cs, it still checks if MRTK is initialized. \r\n\r\n       ```\r\n public static bool TryGetInputActions(out string[] descriptionsArray)\r\n        {\r\n            if (!MixedRealityToolkit.ConfirmInitialized() || !MixedRealityToolkit.Instance.HasActiveProfile)\r\n            {\r\n                descriptionsArray = null;\r\n                return false;\r\n            }\r\n\r\n            MixedRealityInputAction[] actions = InputSystem.InputSystemProfile.InputActionsProfile.InputActions;\r\n\r\n            descriptionsArray = new string[actions.Length];\r\n            for (int i = 0; i < actions.Length; i++)\r\n            {\r\n                descriptionsArray[i] = actions[i].Description;\r\n            }\r\n\r\n            return true;\r\n        }\r\n```\r\n'"
4661,289544410,"b""@davidkline-ms , yes it uses a cached input system. The point though is that the input actions list is only grabbed from the MRTK instance currently in scene. If there is no MRTK instance in scene, then you can't get the input actions list. Thus, my CheckMixedRealityToolkit() is still necessary. There is still a dependency"""
4671,289554658,"b'nit: maybe simplify to this\r\n\r\n            var buttonContent = new GUIContent()\r\n            {\r\n                image = MixedRealityEditorUtility.HelpIcon,\r\n                text = "" Documentation"",\r\n                tooltip = docLink.URL,\r\n            };'"
4734,291404869,"b'Did you copy this from the Optimize window helper? If so, can you not just call that utils?'"
4819,294586241,b'Added documentation in code and will add documentation to github page'
4819,294586279,b'Documentation comments added'
4984,295723450,b'```suggestion\r\n  initially but is typically turned off to avoid the visual distraction and the additional performance hit of\r\n```'
4984,295723579,b'```suggestion\r\n  having it on.\r\n```'
4984,295723746,b'difference?'
4991,295875728,"b""Interesting, didn't even know that was a thing. The only thing I'll have to test is if DisableScope also sets GUI.enabled. Because all of the sub-profiles read GUI.enabled if it was already disabled. So lots of code may break if I try to disable via this was but GUI.enabled is still true?"""
4965,295880837,"b'Maybe simpler variable name like LerpPowerPlaneCloser, still a mouthful but a bit shorter. Same with farther below'"
4965,295881877,b'nit: Worth maybe adding get to this? Like what is the current focus point?'
4965,295883062,"b'Since this is not active whole time, add hideflag to hide in hierarchy?\r\nhttps://docs.unity3d.com/ScriptReference/HideFlags.html'"
4965,295883446,b'CameraCache?'
4965,295883901,b'nit: simpler velocity = TrackVelocity ? UpdateVelocity(deltaTime) : Vector3.zero;?'
4965,295886063,"b""Maybe call out SetFocusPointForFrame() api since that is heart of reason for this component. Also re-write this line to Stabilization PlaneModifer can be used in conjunction with DepthLSR which is enabled by Depth Buffer Sharing etc \r\n\r\n Although on HL1 I think the stabilization plane can be set in RS5 via the depth buffer sharing and I'm not sure which one takes precedence..."""
4991,296114517,"b'Great, agreed. Leave that investigation to switch everything over for disablegroup to another PR'"
5000,296115814,"b'Please change this to a Configuration Profile Usage Guide is coming soon or other similar sentence. In particular, please remove the empty link. It suggests that there actually is something even though we say coming soon'"
5000,296117094,"b'Every section has a line like this. Can we simplify the sentence that ""this service is extensible so taht developers can implement their own IDiagnosticService/System interface"" or similiar? At the top of the page, it would be worth calling out in full for all services you can do this and a guide is coming soon. \r\n\r\nBut this block of text is redundant and annoying for every section, especially since the link doesn\'t take you anywhere\r\n\r\n""The MRTK also allows you to write your own diagnostic system and you can use the selection below to switch the system used without rewriting the toolkit. For more information on writing your own systems, please see this guide to building Registered Services (Coming soon)""'"
5000,296117726,"b'nit: The buttons actually say ""Back to input profile"". More importantly I would update all subtext to say something like <Clicking on the ""Back to... Profile"" will take you to this profile\'s parent that is assigned in the currently active Mixed Reality Toolkit instance> etc'"
5000,296118316,"b'with the line <The Mixed Reality Toolkit ""locks"" ...> can you add in this note, that the MRTK configuration is not editable during playmode (see this PR #4991 ). A'"
5000,296118516,"b""I would also remove the point here that can be swapped out at runtime. See Will's comment in PR #4991 . That is the goal and desire but atm we are not there yet. Services aren't reliable enough for teardown or refresh dynamically"""
5000,296118798,"b'Sorry, also same here and all places. This is our goal but not exactly accurate atm'"
4965,296125922,b'We have had so many problems with onvalidate in past'
4775,296174497,"b""Shouldn't this use the new MixedRealityServiceRegistry.TryGetService? @davidkline-ms """
4775,296175993,"b'Instead of polling every update frame, why not add event/delegate to the RecordingService that notifies when recording state has changed? Then if need be, then funnel the C# event to the UnityEvent etc'"
4775,296177372,b'nit: docs like other public methods'
4775,296180300,b'nit: align brackets'
4775,296181000,b'needed?'
4775,296181467,b'remove files'
4993,296446627,"b'@wiwei this is actually the original implementation that I moved to the base class. @Cameron-Micka , assuming you made this, is there any reason not to simplify?'"
4993,296446734,"b""@wiwei yea I am on the fence with this one. I didn't put it in base because it relies on the materialproperty for the given shader (protected MaterialProperty renderingMode;) So I would have to move all of those to the base class for both WireframeGUI and StandardGUI, which is doable....thinking about it more, I think it's worth it. For any shaders in the future, we should be able to define rendering modes, transparency, etc. These kind of properties are fairly universal whether it's a lit or unlit shader or whatever. If for whatever reason we need to create a new shaderGUI that doesn't have these, then we can easily insert that """
4993,296446790,"b""yes, since I am just going to move the materialproperties per my other comment, I'll just move this out as well. Both classes should be able to share this. """
4993,296446840,"b""I didn't even catch this. It is original code. But I don't like the double end with one beginning either, even if it works. I'll fix"""
5030,297029312,b'will do!'
5030,297029366,"b""Good feedback, I was trying to communicate that developers still need to take action during port. Even though it's Billboard and Billboard, they are not the same. """
5030,297036518,"b""@keveleigh  Interesting, that is good to know for movement configuration. I saw your other comments in #4843 to configure RadialView like billboard. The problem still is two-fold though:\r\n1) they can't configure axis-locking for billboarding which is fairly common\r\n2) this kind of parameter setting is non-intuitive\r\n\r\nEven if I list RadialView as an option, developers won't know how to properly change it and then again still they will be blocked by axis locking for those interested in that. \r\n\r\nI feel like there needs to be a separate task to either a) upgrade billboard.cs to be part of the solver system or b) create good documentation and missing functionality to extend radialview for billboarding"""
5026,297147120,b'Good catch! I love deleting code like this'
5026,297147850,b'I can make them all private. I had them protected so that they could be change. The public get/set are there but they could be extended to do other functionality other than just get/set so I thought if someone needed a workaround to change a value without calling the public interfaces that made do other stuff'
5026,297148025,b'yes it is not a breaking change but I am idiot for not knowing how to spell :P'
4993,297167998,"b'No, will do in this PR! I just was following the comment and assuming this shader was only officially supported for HL'"
2204,191665641,b'`managerSearch` can never be null. I fixed this in my housekeeping branch. please revert.'
2204,191676125,b'Already removed from your fix changes'
2204,191676471,"b'odd, still showing up as a change for me.'"
2402,200788590,b'What are we testing?'
2402,200788786,b'We should also add a system type for users so choose which boundary class to use. (Similar to the input system type choice.'
2402,200802421,"b'To be sure I understand this feedback, adding this will let users select from alternative implementations (perhaps their own). Am I thinking right?'"
2402,200807997,"b'Agreed, Like the InputSystem, the property in the Main MRTK Config Profile needs to use a Systemtype bound to the IMixedRealityBoundarySystem interface.  Then anyone can create their own boundary implementation based off out interface and use it.\r\nBase principle of vNext with any Core component'"
2469,203919867,"b""Let's replace this with an into help box. It'll look a bit nicer and conform to the pattern we're using in the other profile inspectors for describing their function."""
2469,203932441,"b""thx for the suggestion. i'll take a look"""
2519,206640418,b'why is this commented out?'
2519,206643941,"b""Cause I didn't add it yet.  (Must have been left over when I ported it over) I'll remove it."""
2204,191682609,"b""we should probably keep this check here seeing as we're asking for the manager a few lines later."""
2437,202105001,b'missing braces'
2437,202105184,b'`GetValue_Implementation`?'
2437,202105228,b'missing braces'
2437,202105255,b'f?'
2437,202105287,b'p?'
2437,202105331,b'missing braces'
2437,202105375,b'missing braces'
2437,202105396,b'enm?'
2437,202108425,b'targetController.Type -> targetController?.Type'
2437,202108490,b'targetController.Type -> targetController?.Type'
2437,202109715,b'nice catch!'
2204,191682765,b'should be a return.'
2963,227969372,b'```suggestion\r\n            var playspace = MixedRealityToolkit.Instance.MixedRealityPlayspace;\r\n```'
2963,227975959,"b'Yeah, thanks for that. Had to rename it to match how it was, now I got to rename it back to how I originally copied it :P '"
2175,191069233,"b'Why remove this error?  The MRManager cannot operate without a config, unless you have now replaced this with the popup you mentioned.\r\nEven with the popup however, it is still a valid error if you try to run the project without one'"
2175,191072968,b'Because I added logic to prevent users from going into play mode if no active profile is set.'
2951,228672766,"b'Minor naming thing. Maybe call it something like ""Assets/MixedRealityToolkit-generated/CustomProfiles""\r\nto be aware where it belongs to in a bigger folder structure and it\'s generated?'"
2951,228673032,"b'```suggestion\r\n                        profile.CreateAsset(""Assets/MixedRealityToolkit-Generated/CustomProfiles"");\r\n```'"
3242,240374094,"b""Is there a repo perspective on how we deprecate existing functionality? What's the incentive of keeping this function with no functionality compared to removing it entirely? Is there any value in keeping the functionality while deprecating so that things still work for others?"""
3242,240375113,"b'nit: if these functions still exist, can we keep them at the same line number so that merges are easier for others working in the same code base?'"
3242,240767862,"b""This was moved into a base class. What you're requesting is likely not feasible."""
3242,240768142,"b""It's not depreciated, it was moved into a utility class because not all inspector scripts will inherit from this one, but we needed an easy way to check if the configuration was valid."""
3242,240772487,b'sounds good'
3242,240773110,"b""The refactoring makes sense, I am more curious on our public facing story for refactoring/moving code. We can either align on the idea that all existing functions should still exist in some form of the code base to provide information on how to migrate code. We can make previously existing functionality work for multiple releases in order to ease this process. Or we can remove things entirely that do not work anymore. Being new to the project, I'm curious what the consensus was. :)"""
2951,228723553,b'```suggestion\r\n```'
2542,207713039,b'we need to also check if the MR Manger is valid here with\r\n\r\n```\r\n            if (!CheckMixedRealityManager())\r\n            {\r\n                return;\r\n            }\r\n```'
2542,207958927,"b""made this change... not sure why GitHub didn't notice."""
3223,239291702,"b'```suggestion\r\n            showFloorProperties = EditorGUILayout.Foldout(showFloorProperties, ""Floor Settings"", true);\r\n```'"
3223,239291729,"b'```suggestion\r\n            showPlayAreaProperties = EditorGUILayout.Foldout(showPlayAreaProperties, ""Play Area Settings"", true);\r\n```'"
3223,239291772,"b'```suggestion\r\n            showTrackedAreaProperties = EditorGUILayout.Foldout(showTrackedAreaProperties, ""Tracked Area Settings"", true);\r\n```'"
3223,239291805,"b'```suggestion\r\n            showWallProperties = EditorGUILayout.Foldout(showWallProperties, ""Boundary Wall Settings"", true);\r\n```'"
3223,239291828,"b'```suggestion\r\n            showCeilingProperties = EditorGUILayout.Foldout(showCeilingProperties, ""Boundary Ceiling Settings"", true);\r\n```'"
3223,239291866,"b'```suggestion\r\n            showGlobalProperties = EditorGUILayout.Foldout(showGlobalProperties, ""Global Settings"", true);\r\n```'"
3223,239291893,"b'```suggestion\r\n            showOpaqueProperties = EditorGUILayout.Foldout(showOpaqueProperties, ""Opaque Display Settings"", true);\r\n```'"
2542,207698715,b'Please change this to use `RenderProfile(boundaryVisualizationProfile);`'
2542,207713062,b'use `RenderProfile(boundaryVisualizationProfile);`'
2542,207713098,b'Why create a gui content for the auto generated content that the inspector will render by default?'
2542,207723171,b'was following the pattern set by other inspector fields.. I can remove'
2691,214746353,"b""Let's keep the field shown and not hide it if it's disabled."""
2691,214746373,b'That way we can assign it and turn on the system at runtime if we wanted.'
2725,216074936,"b""Please remove this so we don't hide it when disabled."""
2725,216091220,b'this is actually the pattern used for all of the systems in the core config profile.'
2725,216091970,b'every system in the core profile behave this way'
2836,220361317,b'Component Registration?'
2836,220361593,"b'maybe, but I wanted to make it super clear that this was a profile for additive features.'"
2951,226856616,"b'```suggestion\r\n                if (GUILayout.Button(""Create a new profile""))\r\n```\r\nbetter title'"
2951,226856723,"b""Don't like start from scratch?"""
2951,226856727,b'Both technically create a new profile.'
2951,226874666,"b'```suggestion\r\n                if (GUILayout.Button(""Create new profiles""))\r\n```'"
2951,226874684,"b'```suggestion\r\n                                        ""You can use the default profiles provided, copy and customize the default profiles, or create your own."", MessageType.Warning);\r\n```'"
2963,227969528,b'```suggestion\r\n                       var playspace = MixedRealityToolkit.Instance.MixedRealityPlayspace;\r\n```'
2963,227969572,b'```suggestion\r\n                       MixedRealityToolkit.Instance.ActiveProfile = configurationProfile;\r\n```'
2620,212518432,"b""I'm not able to actually select anything, possibly because of this line? Anything I select in the invert dropdown stays at `Nothing`."""
2620,212522218,"b""It doesn't look like this value gets used to write the settings back to the properties anywhere. I've opened a PR with some fixes, assuming I'm not misunderstanding how this is being used.\r\n\r\nhttps://github.com/Jarodshow/MixedRealityToolkit-Unity/pull/1"""
2639,212839477,b'Why can controllers without a handedness not have a model?'
2639,212839507,b'Is the controller-specific model override field intentionally no longer displayed for all non-generic controllers?'
2639,212839806,"b""I'm seeing a couple bugs in this inspector, but didn't find the exact line for them.\r\n\r\nRepro steps:\r\n1. Scroll down to the generic Open VR Controllers. Do this on the **Right** Hand Controller, as there's a different bug preventing repro on the Left Hand Controller.\r\n2. Try to change the Generic Type to Unity Controller while there's a Handedness selected. It won't change.\r\n3. Switch the handedness to None, and switch to Unity Controller, successfully.\r\n4. Change handedness to anything other than None, successfully.\r\n\r\nThe bug is either in step 2 or step 4 (or potentially both), depending on whether Unity Controllers support handedness, I suppose."""
2639,212839893,"b""Another bug I didn't find a line for.\r\n\r\nRepro steps:\r\n\r\n1. Scroll down to the generic Open VR Controllers. Do this on the **Left** Hand Controller.\r\n2. Try to change the Generic Type to Unity Controller while there's a Handedness selected. It won't change.\r\n3. Switch the handedness to None, and switch to Unity Controller.\r\n4. Observe that the Right Hand Controller has been changed to Unity Controller instead of the Left Hand Controller."""
2639,212840062,"b""Because they're not spatial controllers, which won't be rendered in the scene."""
2639,212840632,"b'Great catch, fixed.'"
2639,212840635,"b'Great catch, fixed.'"
2639,212840680,"b""Yes, I was planning on moving them to the controller popout windows.\r\nStill trying to figure out where they'd go if they staying in the controller config profile."""
2687,216156487,b'nit sort'
3116,232766508,b'Still needs the ability to Add/Remove controller mapping profiles from the list'
3116,232766933,"b'Need to shorten the displayed names, as they are cut off in the inspector.\r\nOr possibly switch the profile line item to a generic image for the platform maybe?\r\n(I really liked the graphical view, which is now hidden behind these line items)'"
3116,232767244,"b""I don't understand. We no longer have a list."""
3116,232767517,"b'Agreed. I wasn\'t quite sure what to do there for that, as we need to ""select"" the scriptable object profile to get it to display. I\'ll see what I can do here.'"
3116,232775417,"b'Erm, it looks like a ""list"" and we do need one.\r\nAlmost like the Visualization screen, we should be able to add / remove mappings from the list to meet the requirements for projects, so they can only enable those controllers they want to support. (and easily add more)'"
3116,232777851,"b""I got rid of the list as it was a lot harder to manage the it and prevent multiple from being registered, but I'll see what I can do."""
2837,222501014,"b'Not blockers, but:\r\n\r\n1. We should reset this to some default description if `hasValidType` is false\r\n2. There appears to be strange spacing in the name when this is rendered (note the larger spacing between the words in the controller type vs ""Right Hand""\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/46445375-6f528400-c72b-11e8-8757-b9612b12518f.png)\r\n'"
2837,222502711,"b""yeah I also noticed that the spacing was strange, but I'm not sure what's going on because I'm only adding a single space. Maybe Unity is increasing the word spacing in the label somehow?\r\n\r\nDo you have any suggestions on a default description? I'm more than willing to accommodate that.  Maybe `Spatial Controller <handedness> Hand`?"""
2837,222503247,"b""Yeah, that would work. Or, since we're notifying them that a controller type must be defined, even something like `Undefined Controller <handedness> Hand` seems fine. I'll leave it up to you, and it can always be iterated on in the future."""
2837,222505029,"b"">I'm not sure what's going on because I'm only adding a single space\r\n\r\nAh I figured it out! You're calling `ToProperCase()` both when you set the `stringValue` (line 169) and when you turn the `stringValue` into the `LabelField` (line 174). Both calls are adding a space."""
2837,222510971,"b""Yup I just noticed that. I'll be sure to fix it as well."""
2837,222511002,b'Fix incoming'
2837,222775374,"b""Looks like even when the visualization script is successfully added, this still falls through to return `false` at line 275. This causes override model setting to take two steps. The first time adds the script but doesn't fill in the field."""
2837,222781767,"b""I'll be sure to fix. Thanks."""
2867,221748482,b'Typo: vidualizations'
2867,221748659,b'doi. English is hard'
2869,221785575,"b""Should this go in the `MixedRealityBaseConfigurationProfileInspector` so we don't have to add it to each individual inspector?"""
2869,221786826,"b""Depends. We don't want to disable the return to profile button, but I suppose I could make this a simpler flag that is exposed in the base.\r\n\r\nDo you also want me to update all the other inspectors with this PR as well?"""
2869,221788786,"b""Ah, I see what you mean about the profile button. If there's a way to do it in the base, that'd be preferable, but it works as-is and that can be addressed later (and called out in the documentation)."""
2869,221789692,"b""I tried to put it in the base initially, but it's not trivial."""
3223,239984371,"b""Why not just use the `EditorGUI.indentLevel++` and save the allocations with having a new one?\r\n\r\nWe're already in brackets for the foldout anyway, so seems rather wasteful."""
3223,244851114,"b'I originally chose the using pattern to prevent forgetting to unindent (defensive coding). The allocations would only occur in the editor, so should not impact on device performance.'"
2713,215764984,"b""Should return if this check doesn't pass"""
2771,217140807,b'Looking for a better description.  Suggestions welcome.'
3203,238270230,b'This is the correct behavior.'
5524,310823363,b'Add question mark at end? or is that against the doc guidelines?'
5524,310823614,"b'reword: ""interface that defines the interface""'"
5524,310823814,b'either here or maybe else where call out that a service is defined by a IMixedRealityService?'
5524,310823904,b'xref as well? Or do we not xref experimental namespace?'
5526,311129990,b'I have started switching to it because I like the clear scope. It exceedingly more difficult in complicated inspectors otherwise'
5526,311130484,"b""Ah I didn't even know about that! I am happy to switch to that. I still want the custom documentation button as they are more obvious"""
5526,311188878,"b""yea I thought of that too. I wish I could just create one class and say all these objects will use that. But I still have to create an inspector class/file for each item and set [CustomEditor(typeof(Blah))]. \r\n\r\nI didn't go the base class route though because there is only two and inspectors have strong tendency to become specialized/custom during their lifetime. """
5526,311288383,b'Because I want #5493 to go through'
5523,311301426,b'Definitely happy to remove :)'
5533,311323927,b'Yes it should just check for empty '
5533,311324029,b'The checkChange or picker window? They both are still used I believe '
5533,311371559,"b'Ahhh checkChange, I was looking at changed. Yes I\xe2\x80\x99ll update '"
5532,311667097,b'I added TrackedTarget & SurfaceNormal into the original wall test for SurfaceMagnetism\r\n\r\nI also changed the lerptime properties so we can test faster for the solvers'
5493,311673751,"b""No, it was a scriptableobject but I couldn't get the inspector behavior etc I wanted ...fixing"""
5540,311788124,b'add ` marks around MixedRealityCapability to identify as code piece'
5540,311788430,"b'Add ""csharp"" after ticks to get highlighting'"
5541,312108670,b'summary?'
5618,313171518,"b""AT line 2206, it's basically to be like c++ inline keyword\r\n[MethodImpl(MethodImplOptions.AggressiveInlining)]"""
5618,313171874,"b""Because our handle list is\r\n1) small\r\n2) contains reference types\r\n\r\nMaking this a struct would require a copy back of the struct every for loop. With List<> you can't do handles[i].state = blah. \r\n\r\nMaking the handles member a Handle[] array is annoying because it's not filled in one place. So we need an indexCounter to be tracked/incremented everywhere"""
5618,313173496,"b""no it wasn't....I didn't realize it only created getters and not setters"""
5611,313237590,b'We need to avoid using eye or head. Solvers should be able to function with different tracked transforms '
5611,313237909,b'Isn\xe2\x80\x99t this like radial view? Same with the distance properties '
5611,313238318,b'Add explicit private to be consistent with codebase'
5611,313239191,b'Parameter seems unnecessary. Why not just set desiredRot to GoalRotation?'
5611,313241861,"b'Also not clear how MaintainGoal and Unmodified are fully different. Most of the time GoalRotation will just be transform.rotation. In linked transforms, I guess there would be a difference. But this is extremely confusing to a developer who won\xe2\x80\x99t understand how solvers work. '"
5611,313242622,b'I really like the idea of tool tips explaining the mechanism of what happens. MRTK has a lot of tool tips that are just redundant of the parameter name instead of really illuminating and helpful to the developer'
5618,313244251,b'Yea I wrestled with that. It just seems so easy to accidentally select one of the HandJointUtils options that are way less efficient. I mean that was the original bug here. \r\n\r\nBut it is repeated code which needs to be out in a function '
5618,313244641,"b'IsInteractionEnabled isn\xe2\x80\x99t a variable, it\xe2\x80\x99s basically a function. Each call is really testing many variables and levels of inheritance. It\xe2\x80\x99s minor but seemed wasted overhead to do like I believe 5-8 Boolean conditions repeatedly instead of just cashing the results. '"
5618,313245036,"b'@julenka, these were instances of people calling HandJointUtils when they didn\xe2\x80\x99t have to after doing a find all references'"
5618,313245452,b'If so same for balls and links. There\xe2\x80\x99s a deep rabbit hole in this file to fix/change a lot'
5618,313245692,b'Love it!'
5618,313245840,b'Because the comparison later is against sqrMagnitude. Sqrt is very expensive in distance '
5618,313246360,b'Ooo yes good catch!'
5613,313523767,"b'At line 24, can you fix the broken link?\r\nTo access extension services, use [`MixedRealityServiceRegistry.TryGetService<T>`].'"
5613,313524517,b'Should we tell people here how to upgrade? I.e do they delete the old MRTK directories and then import package?'
5613,313524972,"b""The TOC list here also doesn't match up with the actual headers shown on the right hand side"""
5613,313551331,"b'Also adding on to the list in teams, maybe also add ""Review your MRTK profiles in inspector""? Per comment below, DefaultRaycastProvider wasn\'t set'"
5613,313644782,"b""There is that list of internal hyperlinks that describes the sections but it doesn't exactly match up with the list of sections outlined on the right: \r\n\r\n![image](https://user-images.githubusercontent.com/25975362/62982755-1db26580-bde2-11e9-9944-a789a884750c.png)\r\n"""
5633,314047885,"b""Gah, and it's totally wrong reference for the xref"""
5633,314124270,b'Also DefaultControllerPointer is only the prefab which is mentioned earlier on and is mentioned with ShellHandRayPointer'
5633,314399236,b'Move image back up to make sense'
5633,314403973,b'Ah I see what you are talking about now'
5662,314436008,"b""I would actually go a different route.\r\n\r\nThe GetComponents<Solver>() is very dangerous. and as @wiwei said bad performance. Furthermore, the SolverManager is supposed to manage the solvers...but a Solver telling a manager exactly what to manage seems very weird and problematic. It's probably better for a Solver to just say hey! manage me in a sort of auto-registeration\r\n\r\n1) So SolverHandler would be updated to not set a default Solver list \r\n2) In Solver.Start(), have the solver register itself with the SolverHandler\r\n3) In OnDestroy, solver unregisters itself\r\n\r\nWe should keep the Solver property as readonly. There is the SetSolvers() function if a higher order manager system wants to override the list\r\n\r\n```csharp\r\npublic class solver\r\n{\r\n\tStart()\r\n\t{\r\n\t\tif (SolverHandler != null)\r\n\t\t{\r\n\t\t\tSolverHandler.RegisterSolver(this)\r\n\t\t}\r\n\t}\r\n\r\n\tOnDestroy()\r\n\t{\r\n\t\tif (SolverHandler != null)\r\n\t\t{\r\n\t\t\tSolverHandler.UnregisterSolver(this)\r\n\t\t}\r\n\t}\r\n}\r\n\r\npublic class SovlerHandler\r\n{\r\n\tRegisterSolver(Solver s)\r\n\t{\r\n\t\tif s != null & !solvers.Contains(s)\r\n\t\t{\r\n\t\t\tsolvers.Add(s);\r\n\t\t}\r\n\t}\r\n\r\n\tUnregisterSolver(Solver s)\r\n\t{\r\n\t\tif (s != null && solvers.Contains(s))\r\n\t\t{\r\n\t\t\tsolvers.Remove(s);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```"""
5662,314436171,b'Revert this and instead use the RegisterSolver and SetSolvers'
5662,314437445,"b""I'm fine with this change being included but I did DestroyImmediate on purpose for a different reason.\r\n\r\nIn a real application, re-using resources and not wasting cycles on GarbageCollection makes sense. But this is designed to be an example scene to learn from. \r\n\r\nThe solvers already have a crap load of properties to understand. I preferred only showing one solver at a time on the gameobject so it is very clear to the new developer. \r\n\r\nThe idea being is you could select a solver and then in editor select that gameobject and modify the properties to test things out. Even disabled, having possibly 3-5 solvers or more as we grow, clutters up that inspector"""
5659,314448834,b'Yea I was just following the existing paradigm. The main benefit though is we can test getting this interface as well as the base interfaces in all the registrar/registry stuff'
5662,314632907,"b'I\xe2\x80\x99m advocating destroying the components, not the manner in which they are destroyed. \r\n\r\nSwitching between solvers dynamically is an edge case of common developer usage. The larger reason for the example scene is to try the solvers out in scene view and play with each solver\xe2\x80\x99a properties. Honestly, the solver scene description and UX could heavily be improved all up\r\n'"
5662,314635670,b'Yes the docs will need to be updated as well. \r\n\r\nThe GetComponents call by Unity will return components in the order that they appear in the inspector. SolverHandler by default calls GetComponents < Solver >'
5562,314871745,b'This seems like something that should be joined with Features/Input/Handlers\r\nAnd of course renamed to FocusHandler'
5562,314873058,"b""How strongly do you feel about adding the lander model? The problem with adding these FBX assets into Examples it they bloat the UnityPackage file. The textures and mesh data adds like 7-8MB alone in this change. I know that is typical for assets but that's a 15% increase to the existing package. \r\n\r\nI recommended removing because of the size and primarily because it's the feature is not dependent on it. We can still demonstrate the feature with the moon lander rover or other existing FBX"""
5562,314873257,b'I think may want to check for OnFocusEnterEvent?.Invoke()?'
5562,314874265,"b""I don't understand what this is testing? Just no errors thrown? There are no asserts"""
5562,314878168,"b""So I'm still trying to parse this whole PR. But is the outline feature in the scripts or in the MRTK standard shader?\r\n\r\nAll of the Outline*.mat files in this PR are MRTK standard shader. Why not make them simpler as just unlit as this comment suggests?"""
5562,314878542,b'Why use onvalidate instead of a BaseMesh inspector class? This is for the component right?'
5562,314880071,b'This seems more like an editor level utility? What is the benefit of running this at runtime as a MonoBehavior?'
5562,314880387,b'nit: expensive on mobile Mixed Reality devices >>>> Expensive on many Mixed Reality platforms. \r\nJust a better catch all'
5562,314880523,b'Can you actually switch these from [**Blah**] to [ \\` blah \\`  ]  for styling?'
5633,314889807,"b""Because there may still be links out there referencing it. It's a pretty old file. Thus it's basically in a deprecated state and taken off the TOC until the next iteration. Just like all of the [Obsolete] tags"""
5677,315294731,"b""Yes, I chose not to surface the public method. We could make one. I guess it's really pick your poison. They're both ugly cases to handle this one scenario just for the editor. """
5701,315303080,b'Should we link to teleport pointers in the pointers.md? '
5701,315303274,b'update seem unnecessary'
5677,315335943,"b'@AdamMitchell-ms the setter was being used in the original version. The Update() is supposed to copy the object values into the serializedobject and is why I had that originally. \r\n\r\nBut exactly as the purpose for this PR being created, I had a lot of weird behavior using ApplyModifiedProperties & Update(). I tried multiple different iterations and values would just not get saved properly. \r\n\r\nThe EditorGUILayout.PropertyField() is the only thing thus far that seems to cover all the bases correctly for whatever reason.'"
5731,315959544,"b""I don't understand the comment. There is an important tag saying you only receive events when in focus"""
5731,315959612,"b""@julenka to confirm? It's all components on the GameObject?"""
5731,315959746,b'do you mean the .Use()? I have the section later on. I could re-add a note that any point that the process will stop if the event has been marked used'
5731,315959860,"b'There is a section on global registeration.\r\nThis example does say ""When the user says the words ""smaller"" or ""bigger"" while focusing on a GameObject with this `ShowHideSpeechHandler` class,"" and only on the object in focus'"
5731,315959942,"b""I don't believe this is true. @julenka to confirm?"""
5731,315960112,"b""Indeed, I'd say leave it as it at least gives people a direction. There should be work to come back and elaborate here"""
5731,315960336,"b""It is duplicated. One points at the other and the other points back. \r\n\r\nI don't know where would be the consolidated position? It's not worth it's own page and there is no all up input events for both pages to be a child of. """
5731,316280908,"b'ok I see. @wiwei do you think at the very top or with the ""Input events in action"" since that actually explains how to utilize them?'"
5731,316281319,b'Ah yes ok'
5731,316282143,"b""@thalbern What's the change here? I don't see a delta?"""
5731,316405501,"b'So testing global handlers, if one global handler marks the eventData.Use(), other global event handlers will still get callbacks. However, no focused Gameobjects will receive the callback'"
5731,316407248,"b'Testing it out, all components on a focused gameobject will receive the callback even if one of them marks the eventData.use()'"
5715,316430252,"b""@davidkline-ms oh nice! didn't even know they already existed. I delete redundant code"""
5731,316763556,"b'Ah I see. I would rather keep the list. The flow is slightly different in the list so it\xe2\x80\x99s not an exact duplicate and see the entire flow with the key change is more informative to new developers than linking to another page, giving a comment of what\xe2\x80\x99s different roughly, and then have them piece it together between the two pages. '"
5662,316934349,"b""How does Intersect() guarantee order? \r\n\r\nAlso I don't think GetComponents work. this assumes all solvers will want to associate with this particular SolverHandler which is a bit dangerous. Like InBetween is an interesting scenario here. \r\n\r\nIt also makes it difficult for inserting new solvers dynamically. If I can add a new solver dynamically, then it appears this will be put at the end of the list? But how would I insert that solver higher via GetComponents<>? Furthermore, if I was to register a solver with a solverhandler that is not on the sameobject...you could never insert it before other solvers."""
5662,317217682,"b""@julianloehr-kg thanks for the great & detailed response. \r\n\r\nI did look at the Intersect docs but did not note the remarks. Good call out. Thank you.\r\n\r\nI am going to file a bug that defining precedence/order for SolverHandler is a bit nuanced and problematic and will include all the items we discussed above. \r\n\r\nI'd rather get all your good changes here and fix the actual problem this PR was created for initially. We can do a separate PR to fix how priority can be easily defined for Solvers by consumers. """
5771,317313394,b'@Railboy should the SceneTransitionService be able to run in play mode editor?'
5771,317335369,"b""I think I see what you mean but it's more confusing. If I mark something as supported in WindowsEditor, that should be the end all truth. \r\n\r\nI see what you mean in that if I mark a service as WindowsStandalone and WindowsEditor, it will still run in-editor with build target UWP or really any windows build target. But saying we only use BuildTarget in editor is not obvious compared to marking a service that yes I can run in editor"""
5746,317801514,b'Yes exactly'
5811,319226925,b'Reference the wizard https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Tools/ExtensionServiceCreationWizard.html'
5811,319227300,b'Application code can access dataproviders at runtime via the'
5811,319227614,"b'I would also elaborate on ""appropriate service"" at end in this note. Appropriate sevice is the service that actually registered the data provider'"
5811,319229003,b'Extension Service Wizard is also already in here? This and that seem duplicated'
5811,319229501,"b'the input/spatial awareness seems redundant. Maybe ""Creating a Input manager"" and ""Creating a spatial observer data provider""'"
5811,319229647,b'Is this placeholder to still be done?'
5811,319230362,"b'This is redundant with the statement above\r\n""The MRTK foundation includes the [`BaseInputDeviceManager`](xref:Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager)\r\nclass which provides a default implementation of this required functionality.""\r\n\r\nI would just remove the note entirely, notes are cool but also distracting'"
5811,319230608,b'nit: Add () to each to make it very clear this is a list of function'
5811,319230901,b'CoreServices?'
5811,319231082,b'Also slightly confusing where interactionMapping came from?'
5811,319231501,b'maybe auto new line these. The github.io has a narrow body especially for code'
5811,319231633,"b'Same here, new line the extension?'"
5811,319232143,"b""What about how to create a service that can register it's own dataproviders? Like input/spatial awareness"""
5840,319665147,b'What about the IMixedRealityTouchHandler?'
5840,319665360,b'Is there a NearInteractionGrabbableUnityUI?'
5840,319665660,b'nit: to configured your objects => to configure objects\r\nthe comma and listen...also sounds weird. Either better transition or new sentence'
5840,319666082,b'update path *Input* > *Pointers* > *Pointer Options* under the MRTK configuration profile'
5840,319666536,"b'MRTK Docs guide also say to avoid uses of ""You"":\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#writing-style\r\n\r\nAlthough very ironically, the documentation guide is full of uses of ""you""  :$\r\n'"
5840,319666652,b'I would italicize *Ignore raycast*'
5840,319666717,b'add ` ticks around the xrefs'
5840,319666816,b'nit:whitespace'
5840,319666908,b'nit: I think this should be ## since the # is the title? And of course then children need to be indented likewise'
5840,319667487,"b'The cube and material creation seems unnecessary. Can we just assume this is on a GameObject already? or alternatively just make this is a static utils function that takes in a GameObject to make touchable, as well remove the monobehavior class'"
5840,319667735,b'Why remove the xref? Also why remove the xref only on the near pointers header titles?'
5840,319712298,"b'Reading this, one might think if I have to add a especially component for Unity UI for toucheable...I may need to do the same for grabbable.'"
5840,319712337,"b""hmm, I guess I assume anything with the ticks is a clickable xref. Whichever path is selected, all docs should follow it.\r\n\r\nFor example, it's weird in this page the other points headers are links but not near pointers. Whatever is the usage, it should be consistent\r\n"""
5854,320363146,"b'@julenka, no my changes atm are currently all around theme consumption/management in Interactable'"
5854,320363616,b'nit: maybe Public UnityEvent OnFocusOff => onFocusOff for simpler code?'
5854,320363699,b'comments? summary'
5854,320364104,b'Same with others if so'
5854,320364835,b'Why is this Event public set/get but the other specific inherited event types are only public getters?'
5854,320365085,b'why not protected UnityEvent uEvent = new UnityEvent()? Reason for constructor?'
5857,320411406,"b'I am still addressing all TODO: Troy...I just wanted to post PR to get things started. \r\n\r\nAlthough the majority of files in this PR are not code to review, it is still a large change'"
5857,320452507,"b""@julenka, per my PR comments, all TODO: Troys are still to be addressed. I just release the PR already to get things going. I'll update my PR summary to bold this point"""
5857,320453456,"b""Yes there is....but I still need to access them to do the migration. And if I reference them Unity will throw errors:\r\n![image](https://user-images.githubusercontent.com/25975362/64204632-10215600-ce4b-11e9-9f74-9ddf971afbd2.png)\r\n\r\nHmmm, I'm sure there must be a way to disable this obsolete error for the few code references I use it. I'll look into it"""
5857,320455144,"b'yes, the shader info just needs to be migrated to the new properties. Shader information was hidden to developers and weirdly auto-generated by the theme inspector. \r\n\r\nI added the menu item: MRTK > Migration > Update Themes to auto execute the update for all assets. That seemed better than having a developer find and figure out how to run a certain script for their project\r\n\r\nAlso again, if one opens any theme in inspector, it will auto-update the theme. '"
5876,320887868,b'Please remove'
5876,320889753,b'Please move items to the appropriate existing MRTK.* folder. There is a documentation folder that would be great to have a how to setup MRTK project for mobile page :)'
5876,320889986,b'Same here. Please move to the  MRTK.Examples folder'
5876,320890084,b'Please use MRTK namespaces'
5876,320890427,b'Please remove all project asset files'
5876,320890692,b'ARFoundation related items may need to be added but the others should be removed'
5876,320891140,b'please remove _ for private variables. Not consistent with rest of codebase'
5876,320891766,b'I believe this should be Object.Destroy?'
5886,321465398,b'nit: simplify to \r\n`pointerPosIndependentOfHead = pointerRefDistance != 0;`'
5882,321468711,b'I was just thinking about this. So many inspector classes default to MRTK shader. Great to have it in one place!'
5882,321469448,"b'Add comments here for what uv1, uv2, uv3 mean'"
5882,321470294,b'Documentation page?'
5882,321470497,b'Set helpurl? or better yet on BaseMeshEffect if not already there?'
5882,321529727,"b'yea or at least acknowledge that these are uv slots for special components, depending on the feature'"
5882,321529846,"b'I mean for the ScaleMeshEffect, guessing it would go on MRTK page?'"
5889,321804471,"b""Yes that bug is exactly #5652 \r\n\r\nI added functionality to make it work. The one edge case that is not accounted for is you changing any of the property names will be unrecoverable. There is no FormallySerializedAs in this situation. \r\n\r\nRegarding moving the visual themes to a different folder, no it won't affect customers because the guids are still the same, the classes haven't changed (at least the theme engine ones), the namespaces haven't changed, etc. I don't see how they could be impacted.\r\n\r\n![test](https://user-images.githubusercontent.com/25975362/64442682-1438b800-d085-11e9-9c97-cb9235779a07.gif)\r\n"""
5920,322852513,b'out of curiosity why the search instead of just making properties and hooking up in the example scene?'
5920,322853307,b'nit: simplify this\r\n\r\nif (behavior != PointerBehavior.Default)\r\n{\r\nbool isPointerOn = behavior == PointerBehavior.On;\r\nptr.isActive = isPointerOn;\r\nif blah\r\ngenericPtr.IsInteractionEnabled = isPointerOn;\r\n\r\n}'
5920,322853913,b'why is gazepointer unique?'
5920,322854554,b'What is this for?'
5920,322854661,b'nit: no empty space'
5920,322855147,"b""shouldn't this be ShellHandRayPointer?"""
5920,322855323,b'Teleportpointer?'
5920,322857259,b'proposal: Is there value in providing some of these utilities? Like SetPokePointerBehavior seems no different for me as a developer vs SetPointerBehavior<PokePointer>();?'
5920,322859322,"b""This seems troublesome. I feel like a lot of developers are just going to set On/Off but really most will want the scenario of Off vs Default. Having a pointer On seems dangerous because we have all of that custom logic in PointerMediator to do special steps we think are good\r\n\r\nI'm not exactly sure how I would fix this. Maybe at least make Default = 0 since that is the default we want"""
5920,322859657,b'nit: Can you rename to PointerBehaviorTests? Seems more accurate\r\n\r\n'
5920,322861249,b'why use bool? when you have PointerBehavior for the three states?'
5920,322861614,"b'"" which pointers based on"" => ""which pointers are active based..""'"
5920,322861951,b'Should IsInteractionEnabled be protected/private set then?'
5920,322862075,"b'nit: Remove yourself, you etc'"
5920,322862518,"b'I would remove the (on unless...), distracting comment'"
5920,322862657,b'regardless of => regardless if'
5920,322863209,"b""Following up on this, I know it's annoying, but it might also be good to change PointerOnOff example scene content to be like PointerBehaviorExample instead. Again the problem is people will generally not want On/off but Default/Off"""
5920,322863471,"b'Again, emphasize more to control pointer behavior instead of this focus on the duality of on/off. Thus header maybe == ### Control pointer behavior?'"
5920,322863768,"b'Also now seeing the PR and understanding everything, I was an idiot before. These should be AlwaysOn and AlwaysOff enums. Sorry about that'"
5920,322864362,b'I really like that your example shows the typical setup for HL1 vs HL2 vs VR etc. \r\n\r\nEither 1) in this PR we should updated Pointers.md to talk about which pointers are typically valid on which platforms? or 2) file a documentation bug to do something similar later'
5925,323344097,"b'It should still work because of the FormerlySerializedAs attribute. I have migration code but am still working on the process of what makes sense for User experience. \r\n\r\nAlso I have been doing intermittent upgrade paths for each of these PRs. But when I PR the feature branch into MRTK_dev, I am going to create a scene with GA with interactables and themes etc. And then ""upgrade"" that into the feature branch code\r\n\r\nThe idea is all stuff should just run as-is because I added the handler at editor and runtime code paths. But I need a way to run a full sweep through the assetdatabase to just fix everything so the files are correct going forward'"
5925,323344375,"b'Definitions was only used in this feature branch between PRs. Outside of this feature branch, it has always been ""Settings""'"
5925,323344872,"b""I'd actually say this shouldn't be under the interactable folder. The idea is to decouple visual themes from that feature. But good point on tests in MRTK overall could be better organized"""
5948,323991218,b'end of remarks is missing? > \r\n\r\nALso what about sortedset? \r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.sortedset-1?view=netframework-4.8'
5948,323991985,"b""nit: maybe move service creation to it's own function since repeated below"""
5948,323992076,"b""or conversely change order in one of the functions to proof order of registeration doesn't matter"""
5938,323993965,b'Maybe rename to TestPointerHandler...so no one tries to accidentally add this in their scene'
5938,323994283,"b'nit: Maybe rename to EnableDisableServiceTests, Julia added the DisablePointers example so good to be specific\r\n\r\nAlso should this not just be part of InputSystemTests?'"
5938,323994388,b'remove space'
5938,323994484,b'nit: bool instead of Boolean to match codebase'
5938,323994889,b'How do we migrate people over?'
5938,323995379,"b'If this is just rendering all the properties on the profile, I believe you can simplify this with.\r\n        DrawDefaultInspector ();\r\n\r\nhttps://docs.unity3d.com/ScriptReference/Editor.DrawDefaultInspector.html'"
5938,323996213,b'Maybe this should be in MRTK.cs? The whole multiple registrar thing makes TryGetService tricky for what you actually get'
5938,323996532,b'Finally being able to enable/disable services is powerful. We might just want to create a util wrapper class like CoreServices.\r\n\r\nMaybe move enable service to CoreServices?\r\n\r\nThis approach I have to be aware of the registry and then also be aware of what type interface to grab'
5938,323996681,b'nit: feel free to ignore\r\n\r\nshould these be updated like other classes to be condensed\r\nget { return blah; }\r\nset { blah blah blah };'
5938,323996848,"b""I didn't find it in the PR, but point it out if I missed it. But if I created an inputsystem profile scriptable object and then upgrade, how do the gaze values and type get migrated over?"""
5965,325276788,b'maybe convert this todo into a GitHub task'
5965,325276918,b'CoreService.InputSystem?'
5965,325279362,b'@julenka mentioned another todo comment in here.\r\n\r\nI noticed there were no issues referenced on the description page. Does something like this bug https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5459\r\n\r\nexist for this work? \r\n\r\nAll these todo could be added as a checklist'
5965,325279814,b'doccomment'
5965,325280443,b'nit: some of our code has a new line for each brace and others condense it like\r\nget { return blah; }\r\nset { blah = value; }\r\n\r\nI like the condensed version because it reduces the total number of lines but not sure which is offical'
5965,325281363,b'nit: a few files have empty spaces'
5965,325283201,b'This area had pretty bad performance right before GA. This update method is probably worth examining again under the profiler since we get to refactor now'
5965,325285792,b'the scale and position vectors should be saved and then re-used across these tests.'
5965,325286185,b'These kind of asserts should be part of the instatiate setup'
5965,325286429,b'why getcomponent twice?'
5965,325288148,b'It would probably be good to also add a test that changes the bounds and see if the min/max scale adjust accordingly'
5965,325288300,b'Duplicate assert as prior tests and should be in Instantiate helper'
5965,325288496,b'why getcomponent again?'
5965,325288666,b'These numerical values seem like they should be saved as constants?'
5967,325370435,"b'Good catch, I followed existing documentation content a little too closely here'"
5967,325373205,"b""yea....you and me both. \r\n\r\nThe problem is InteractableColorTheme is one of the more common themes. I mean the addition of the text types targeting was added based on user feedback of people wanting to use this theme. \r\n\r\nAnd the problem with creating the new InteractableFontColorTheme is then existing users will need to migrate because their existing set-ups won't work anymore. And that's not something I can necessarily know ahead of time.\r\n\r\nThis is something I left more as-is because I'm already rocking the boat quite a lot with this refactor and this just seemed lower priority\r\n\r\nI created #5971 to track this issue because yes I won't fix for now. I don't want to add more risk for this refactor that has already taken quite a lot of time"""
5944,325795379,b'nit: Maybe use something less generic. InputUtils is a big catch-all bucket. InputStateutils or InputRayUtils or etc'
5944,325797070,b'nit: why not use Vector3.Forward? and -Vector3.Forward below?'
5944,325797784,b'comment is wrong'
5944,325801999,"b""What about if I already have a pointer and I want to get it's ray?\r\nWe're looping through potentially all input sources every function call"""
5944,325803685,"b""I don't know if this really fits in this PR. It just overall feels odd that we have pointers and input sources and a gaze provider and an eye gaze provider. Like pointers have their own `Rays` element. Seems like things are different but a lot of overlap"""
5944,325803761,b'nit: odd spacing?'
5944,325829161,b'Oh lol I read too fast and saw it as duplicated'
5995,325880519,"b""nit: I like using this but the codebase doesn't use this style"""
5995,325881057,"b""nit: while you're here, can you add a doccommunet to the class"""
5995,325904440,"b'@julenka to confirm but something like\r\n""The default implementation for pointer mediation in MRTK which is responsible for determining which pointers are active based on the state of all pointers. For example, one of the key things this class does is disable far pointers when a near pointer is close to an object.""'"
5944,325914562,"b""That's great you tested the example scene!\r\n\r\nI was actually referring to people consuming the API. Sort of like CoreServices or other utils, this could be used by many different features in an app and thus the loop is applied by every call. I meant the only workaround is if they had a reference to the controller/pointer already"""
5967,326306778,"b""yes this is the main thing in event receivers. This was not correctly being set in GA so it should be blank in lots of people's code. That is why I have the new editor/runtime code paths update appropriately and the backcode in the EventType"""
5967,326325066,"b""I've been testing this out, I was wondering, why does interactable have a States field, but then also have a separate States field for each theme? It sounds like it's possible for themes to have a state machine different from interactable. How is the States field in Interactable itself used? Is it used for event receivers?\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/65271312-c33bb180-dad1-11e9-92c0-f3803b4f0684.png)\r\n"""
5967,326325313,"b'I hit a bug when modifying Interactable. To repro:\r\n\r\nUse the following theme:\r\n![image](https://user-images.githubusercontent.com/25975362/65271378-e5cdca80-dad1-11e9-921b-19471750a393.png)\r\n\r\n\r\nHit ""Add Theme Definition"" Twice\r\nTry to delete one of the theme definitions by pressing ""Delete"" button\r\nI get the following call stack:\r\n\r\nArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\nSystem.ThrowHelper.ThrowArgumentOutOfRangeException (System.ExceptionArgument argument, System.ExceptionResource resource) (at :0)\r\nSystem.ThrowHelper.ThrowArgumentOutOfRangeException () (at :0)\r\nSystem.Collections.Generic.List`1[T].RemoveAt (System.Int32 index) (at :0)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.ClearHistoryCache (System.Int32 index) (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:501)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.RenderDeleteButton (System.Int32 index) (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:430)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.RenderThemeDefinitions () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:121)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.RenderTheme () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:70)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.OnInspectorGUI () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:53)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.InteractableInspector.RenderProfileSettings () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/InteractableInspector.cs:173)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.InteractableInspector.RenderCustomInspector () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/InteractableInspector.cs:94)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.InteractableInspector.OnInspectorGUI () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/InteractableInspector.cs:83)\r\nUnityEditor.InspectorWindow.DoOnInspectorGUI (System.Boolean rebuildOptimizedGUIBlock, UnityEditor.Editor editor, System.Boolean wasVisible, UnityEngine.Rect& contentRect) (at C:/buildslave/unity/build/Editor/Mono/Inspector/InspectorWindow.cs:1625)\r\nUnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)\r\n\r\nDeleting the second to last theme definition worked, but deleting the very last theme definition did not work, probably an easy fix then.'"
5967,326325429,"b'Found a bug when adding a new theme via ""create and assign theme"" button. Got the following stack:\r\n\r\nNullReferenceException: Object reference not set to an instance of an object\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.AddThemeDefinition () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:450)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.ThemeInspector.OnEnable () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/VisualThemes/ThemeInspector.cs:42)\r\nUnityEditor.Editor:CreateEditor(Object)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.InteractableInspector:RenderProfileSettings() (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/InteractableInspector.cs:172)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.InteractableInspector:RenderCustomInspector() (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/InteractableInspector.cs:94)\r\nMicrosoft.MixedReality.Toolkit.UI.Editor.InteractableInspector:OnInspectorGUI() (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/InteractableInspector.cs:83)\r\nUnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)\r\n\r\nTo repro:\r\n\r\nAdd second profile\r\nMake the target object a TextMesh object that\'s not a descendant of the cube where interactable is located.\r\nTry to create a new theme definition'"
5967,326325647,"b'So this is part of the original architecture except both States properties were not surfaced.\r\nTheme => Uses it\'s states property to determine how many values a property needs to define (for example, what color to set for each state)\r\nInteractable => Uses States more to determine what kind of State Machine (i.e state model class) to instantiate at runtime inside it\'s class. Then it updates that state machine instance.\r\n\r\nI throw a warning that the States properties need to be the same. Technically they don\'t because the values are accessed just based on index. So if I had a states object with just Default/Focus, it should theoretically work against an object with Default/Focus/Pressed/Disabled.\r\n\r\nStates in general requires a lot of refactoring. This is just something I didn\'t want to untangle and add risk/work to this PR.\r\n\r\nIt\'s weird but short term I don\'t know how to fix it. I can\'t just enforce only ""DefaultInteractableStates"" because we actually use the ""FocusPressTouchGrabStates"" as well as Interactable.'"
5967,326325817,b'This has been fixed. Issue with the if condition not checking >='
5967,326325860,b'This has been fixed'
6001,326400814,b'nit:empty space'
6001,326401015,b'get/set style is different throughout this code. Most of MRTK does the \r\nget { return blah;}\r\nset { blah = value;}'
6001,326403332,b'nit:space'
6001,326406430,b'Use StandardShaderUtility'
6001,326407559,"b'or return Vector3.Dot(delta.normalized, initialDirection.normalized) > 0'"
6001,326407992,b'Or even return int instead\r\nnegative on opposite side\r\nzero on plane\r\npositive on plane side'
6001,326408467,"b""This can also be simplified by using unity's Plane class and Plane.GetSide()"""
5967,326411213,"b'I changed it to not hide. I want it to be obvious to the user. Also, I am trying to veer away from custom render logic. It should just be here is a Theme and render like it you normally would. If the States objects are different, it renders a warning message. \r\n\r\nFurthermore, if I hide it, the user has to double click into the theme to change it anyways which is just more work. '"
6019,326743233,b'Why is reference equals here?'
6019,326743899,b'is the shellhandraypointer different every access?'
6027,326816947,"b'This should be a Debug.LowWarning or Debug.LogError, we already know newCollider is null'"
6027,326817909,"b'hey while here, can you add doccomments to all the public fields in this file? some are here and some are missing.\r\nfor override you can do /// < inheritdoc / >'"
6027,326818803,b'and setLocalUp and pass -Vector3.forward'
6027,326818902,b'and do before calculating size'
6027,326819111,"b'Also @julenka, what do you think of the weird OnValidate in here?'"
6027,326819337,b'Pull these asserts into a helper method that accepts a nearIt and box collider and re-use below'
6026,326841540,b'nit:add comment here to better explain the ?: operation. That if volume build a really long raycast'
6026,326841577,"b'Out of curiosity, what do we want to always be considered a touchdown event?'"
6026,326841599,b'I know it says (it checks distance < 0) but still not clear'
6026,326841654,b'can we get rid of objectScale in the other unit test by using Vector3.one instead?'
6026,326841688,"b'nit: Elaborate a bit more with something like ""Ensure no touch up event fires while moving hand/pokepointer through collider to each corner of volume""'"
6036,327215858,b'nit: class comments'
6036,327216275,"b""Does this only work for .NET core? I don't believe WINDOW_UWP is the right preprocessor\r\n\r\nI think you just want UNITY_WSA if just targeting UWP app platform\r\nhttps://docs.unity3d.com/Manual/PlatformDependentCompilation.html"""
6036,327216531,"b'nit: since these are empty, remove newline space in between to condense space'"
6036,327216813,b'nit: change to IsVisisble'
6036,327217032,"b'curiosity, why not shown?'"
6036,327217606,b'Destroy seems a little aggressive....regardless add console error/warning or something to make it clear to user in logs'
6036,327218339,b'seems weird OnHiding we do state check/change but not on showing?'
6036,327218477,b'nit: tab over to match file'
6036,327219094,b'Not sure what the naming convention is in MRTK for underscore class names but may be an issue'
6036,327220305,"b""why can't we define these for non-UWP builds?"""
6036,327294249,"b'ohhh, actually we should almost never be copying/pasting code. Because of this reason that we would now have duplicated code and if changes need to be made, they have to be made twice.\r\n\r\nUpdate the original MixedRealityKeyboard.cs or create some kind of base class for both\r\n'"
6036,327295368,"b'it\'s short I guess for nit-picking. Generally nit-picking has a negative connotation as someone who is consequently pointing out small flaws that aren\'t that meaningful.\r\n\r\nIn CRs, it\'s used as a, ""Hey I know this is annoying and minor, but we should fix this...yet also don\'t block the PR on this one small thing."" '"
6049,327358450,"b""This is very annoying that unity doesn't support MaterialPropertyBlocks for Unity UI. Can you add a comment explaining that is the reason this class exists"""
6049,327358482,b'inheritdoc'
6049,327358520,b'doccoment for class'
6049,327358895,b'nit: add brackets around body. I know the original shader theme class is wrong as well'
6049,327358934,b'add brackets around body as well'
6049,327359180,"b""Add comments why we need this. Because can't do materialpropertyblock and modification of material properties acts on shared material etc"""
6049,327359374,"b""suggestion: maybe UIMaterialInstancing?\r\n\r\nI just want to really highlight that people shouldn't be using this for Renderer components, only for Unity UI images etc"""
6049,327359515,b'Update summary title of this class'
6049,327360136,"b'1) This should go under VisualThemes/ThemeEngines\r\n2) The VisualTheme doc page should be updated with this in list\r\n3) Please update title to remove ""Interactable"". I know the vast majority of other themes have Interactable in title but that\'s because it would be a breaking change for all saved scriptableobjects that go by classname. I want to start getting away from this so that VisualThemes are distinct from interactable'"
6049,327360503,"b'Have you tried running the example scene on device?\r\nIf so, what was the FPS?'"
6036,327362546,"b'Interesting, never heard of that before'"
6036,327362668,"b'Regardless of removing it, there should be a logging line so people know it has failed'"
6049,327394090,b'No I just noticed it was red in your screenshot and made me curious'
6049,327395217,b'It would probably be better to have a wrapper static class that surfaces get/set color/float shader properties. This class would handle instantiating a new material instance and then set values. At least then instantiation would be lazy loaded on only the things that change. You could also just keep a set of graphic references for whether a new material needs to be created or not. Then have the UGUIShader theme class utilize this'
6067,327930211,b'Why do we need this here if it you doubled it in the moveTo?'
6067,327930285,b'nit: while here add doccomments to public helpers? '
6068,328270239,b'nit: space for if (disabled)'
6068,328270357,b'Why only clear focus instead of all states?'
6049,328293777,b'nit: pull out targetGraphic.GetInstanceID() as variable'
6049,328295343,"b""Should this just be thrown in the constructor? If I am deliberately creating a UIMaterialInstance, I feel like I should automatically get an instanced material. \r\n\r\nSuggestion: Simplify this class as a static helper. Get rid of the get/set color etc. Those aren't doing a lot that I as a consumer can't do myself on the material. Further, there are all of the setvector or other random primitive types not covered here\r\n\r\nInstead of the constructor, I would just call static TryGetMaterialInstance() and then cache that in my theme or other use case"""
6049,328295889,"b""Nit: feel free to ignore. But shouldn't it be ShaderUnityUIColorTheme? with the i capitolized?\r\nhttps://docs.unity3d.com/Manual/UISystem.html"""
6043,328297933,b'Why do we enable the first dataprovider and then check if I the service was destroyed we should stop?'
6043,328297987,b'Same with others below'
6043,328298199,b'nit: are these tabs or spaces?'
6043,328299290,b'This would also be nice to be able to skip the MRTKRegistry.GetAllServices<>() call'
6043,328300074,b'You mention this is a partial fix. Would a test to change MRTK.ActiveProfile possibly succeed?'
6084,328389641,b'Should we add issue number for TODO or at least remove it?'
6084,328389874,"b'Add comment, that this is center of the cube or close to'"
6104,328921601,b'See response to David comment. I was waiting on review approval before posting \r\n\r\nThese are just depreciations. Their code can still run they will just get warnings. The warnings also instruct them on what property to use instead '
6104,328921769,b'The system.obsolete comments has that info. They will see a warning in VS and I believe one in Unity when building '
6104,328921966,b'I don\xe2\x80\x99t understand. There is no way to se selection mode type. It is set via dimensions. \r\n\r\nI guess we could add one...and the. For multi dimension just default to 3?'
6104,328922207,b'This was copied and pasted from original code. \r\n\r\nI can convert to input system update waiting..but then that begs should all tests be updated in that manner? Because this one was left out as the old way'
6115,329190268,b'```suggestion\r\nSometimes tests will only fail occasionally which can be frustrating to debug. \r\n```'
6115,329194701,b'```suggestion\r\nThe [Unity Test Runner](https://docs.unity3d.com/Manual/testing-editortestsrunner.html) can be found under **Window** > **General** > **Test Runner** and will show all available MRTK play and edit mode tests. \r\n```'
6115,329194946,b'```suggestion\r\nOnly after all of the tests have passed successfully can the PR be merged into mrtk_development. \r\n```'
6115,329197452,b'What about updating the powershell script to accept an additional parameter for number of times to run test and also be able to filter by test name?\r\n\r\n-editorTestsCategories\r\n-editorTestsFilter\r\nhttps://docs.unity3d.com/Manual/CommandLineArguments.html'
6104,329202028,"b""Updated comment.\r\n\r\nBasically, if we are disabled (GameObject level), then we will re-register ourselves during OnEnable because we generally unregister ourselves in the OnDisable\r\n\r\nThis is to ensure Interactable doesn't respond to input when disabled"""
6104,329202629,"b""we are not using but someone might be. It's pretty harmless so I'd rather not deprecate now. """
6104,329204032,"b""No, that only occurs in OnDisable. When Interactable.IsEnabled = false but the GameObject is still enabled, we still see the item and can still collide our cursors on it etc.\r\n\r\nWe still accept global input but we just ignore processing it via CanInteract() which is largely powered by IsEnabled.\r\n\r\nI like explicitly controlling global register/unregister in the tight loop of OnEnable/OnDisable. When we start changing that via other code entrance paths then things get more complicated and prone to issues\r\n\r\nGameObject.enable => Means will this thing run at all. More all or nothing\r\nInteractable.enable => means will I ACCEPT input. I'll still update my themes and listen etc, but will I respond #Resolved"""
6104,329205129,"b""No these auxiliary states I don't understand very well. These aren't priority for most users but I don't want to eliminate their access #Resolved"""
6104,329205597,"b""Only via ResetAllStates() which is only called if a new States type is assigned in SetupStates(). \r\n\r\nIn general practice, it should **NOT** be reset because once I visited, it's just true for life. """
6104,329206042,b'That is an interesting point. Definitely not going to do in this PR to mitigate risk but @ritijain open a bug and feel free to link in the description of this PR with the other issues I have found'
6104,329206343,"b'Great catch, thanks #Resolved'"
6104,329207521,"b""I don't want to show it in editor. It'll just confuse people and most don't need access to it. \r\n\r\nI didn't want to make it const because it's protected. Someone may inherit this class and set a new value for the property"""
6104,329208500,"b""I actually don't like switch cases for short lists and it's not part of the coding guidelines #WontFix"""
6104,329210295,b'No it has to be in Start. Interactable does work that happens in Awake and need to occur before this code'
6109,329217170,"b""```suggestion\r\nThe scene works in both Unity's game mode and on device. Run the **MRTKExamplesHub** scene in the Unity editor and use MRTK's input simulation to interact with the scene contents. To build and deploy, simply build **MRTKExamplesHub** scene with other scenes that are included in the Scene System's list. The inspector also makes it easy to add scenes to the Build Settings. In the Building Settings, make sure **MRTKExamplesHub** scene is on the top of the list at index 0.\r\n```"""
6109,329218365,"b""```suggestion\r\nTo return to the main menu scene (MRTKExamplesHubMainMenu scene), you can use the same Scene System `LoadContent()` method. The **ToggleFeaturesPanelExamplesHub.prefab** provides the 'Home' button which contains the **LoadContentScene** script. Use this prefab or provide a custom home button in each scene to allow the user to return to the main scene. One can put the **ToggleFeaturesPanelExamplesHub.prefab** in the **MRTKExamplesHub** scene to make it always visible since **MRTKExamplesHub** is a shared container scene. Make sure to hide/deactivate **ToggleFeaturesPanel.prefab** in each example scene.\r\n```"""
6122,329242901,b'add where T : BaseMixedRealityProfile (or whatever the class)'
6122,329244560,b'switch maybe to switch to new EditorGUILayout.VerticalScope(EditorStyles.HelpBox)\r\nand use ? : operator to pass correct style in?'
6122,329245263,"b'maybe this should use the Type class instead of doing strings, seems like could easily break..especially if class names change etc'"
6122,329245979,b'Why is this deleted?'
6122,329268448,b'That works but then rename argument to be assetType or typeFilter etc not profile type'
6122,329269919,"b""fair enough, but can we at least change it to use types while here. It doesn't need the additional if type.isclass or type.isabstract etc\r\npublic static bool IsConcreteProfileType(Type profileType)\r\n{\r\nreturn profileType != typeof(BaseMRClass);\r\n}"""
6128,329286547,"b'good catch, I had the file named the same'"
6104,329287359,"b""It's already been fixed :)\r\n\r\nI am actually seeing intermittent failures on InputAction locally with the stabilization branch...so It'll probably be good to have the WaitForInputSystem for all of InteractableTests"""
6104,329287520,"b'Sorry I mistyped my original comment. It should NOT be reset. The state tracks whether the button has been every clicked. BY definition, it needs to stay true unless I am changing the state manager.'"
6104,329287859,b'A ClickCount is state information. Yes someone could go recreate the functionality themselves but why make them do that? By deprecating we are more likely to do harm then good.\r\n\r\nWhat is the benefit to deprecating this? What do we gain?'
6122,329679804,"b'nit: return is empty, I believe this will fail the CI check'"
6122,329679992,b'nit: remove use of informal you'
6122,329680455,b'nit: remove comment'
6122,329680648,b'Maybe add comment that we are pulling from cache?'
6122,329681016,b'Add comment (no need for args/returns) since public helper method'
6122,329681157,"b'nit: same here, I think CI will fail because looks for empty doccomments/parameters/returns'"
6122,329682712,"b'Looking online, ""AssetPostprocessor lets you hook into the import pipeline and run scripts prior or after importing assets.""\r\n\r\nWhat about if I change code and then recompile? Will this cache reset?'"
6122,329684121,"b'What about profileTypesForServiceCaches?\r\n\r\nAlso why not just clear everything, and then lazy-load profiles again on future calls? Vs trying to re-fill cache now?'"
6122,329685362,b'Why would profile be set in OnEnable? Not understanding the assert comment?\r\n\r\nAlso should this render a warning/error in the inspector? Because this will likely spam the console no? On every repaint'
6104,329748428,b'Going to leave this out for now since it is covered by Dimensions which creates buttonmode. Add note to #6101 to resolve this setting in inspector and code'
6104,329748741,"b""Going to resolve this as won't fix to adhere to the breaking change guidelines of MRTK\r\n\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/BreakingChanges.html\r\n"""
6104,329752186,"b""yea it's tracked in OnEnable/OnDisable"""
6140,329757488,"b'nit: make Vector3.zero for p1 and p3, can you also fix in other tests that do this'"
6140,329758152,b'Use DefaultRotation from my PR once merged'
6140,329758477,b'Check here that clicked occur. Either Assert.False(Interactable.IsEnable) or add clicked variable like other tests'
6140,329758801,b'Rename to slightly simpler: TestInteractableDisableOnClick\r\nor anything else shorter if you prefer'
6140,329758920,b'Update to IsEnabled property'
6140,329758932,"b'FYI, #6104 will have impacts on this\r\n1) SetDisabled is now deprecated, use IsEnabled = false property\r\n2) There is a somewhat related TestDisableState and TestSelectGlobalInputOnDisabled in that PR but they are both slightly different to this test so we still need this test\r\n\r\n'"
6146,329819377,b'Why do we want to run this if not in editor?'
6146,329819416,b'wrong spaces?'
6146,329819873,b'Does using unityeditor disable running doc generation for this file?'
6115,329821202,b'Exactly they have different benefits. The python script is great to target one test case and get multiple results in editor but you have to run and copy and paste and then delete/cleanup\r\n\r\nWhere a command line of run everything 5-10 times while I go to lunch involves less setup and covers more bases for that need'
6148,329821963,b'Worth adding a check if EyeGazeProvider null and output warning? \r\n\r\nThis seems like a hidden thing that the GazeProvider needs to implement both interfaces'
6146,329822692,"b'That works, I just wanted to confirm understanding'"
6146,329823007,"b""sorry, meant tabs vs spaces. If they're spaces then ignore"""
6146,329823136,"b'I thought when GitHub did this ""bold"" space it meant tabs:\r\n![image](https://user-images.githubusercontent.com/25975362/65923011-2237db00-e39c-11e9-9083-a724f4e90dfc.png)\r\n'"
6115,330168189,b'yay colors!'
6115,330168624,"b""```suggestion\r\nEdit mode tests are executed in Unity's edit mode and can be added under the **MixedRealityToolkit.Tests** > **EditModeTests** folder in the Mixed Reality Toolkit repo.\r\n```"""
6115,330169104,b'nit: should be 1. 1. 1. for lists? I believe we had a teams channel note about this'
6115,330169563,b'I believe this is .\\run_repeat_tests.ps1?'
6115,330169697,"b""Call out that we are using a different script. The command line looks so similar I didn't notice the different script name"""
6158,330299941,b'Because if someone in the web has linked to it. I guess we could also do an automatic redirect. Assumming html/js works in markdown?'
6158,330300315,"b""I don't understand? What is duplicated?"""
6158,330301374,b'@davidkline-ms ?'
6158,330301844,b'They are data providers that surface mesh data by observing the environment for a specific platform. \r\n\r\nI tried better spelling that out in the Getting Started page'
6158,330306478,b'Damn you guys were fast lol. Got that and docfx fixes'
6157,330314764,b'```suggestion\r\n1. Create a branch in your fork (off of the [mrtk_development](https://github.com/microsoft/mixedrealitytoolkit-unity/tree/mrtk_development) branch) to make it easier for you to isolate any changes until ready for submission. For the legacy HoloToolkit use the [htk_development](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/htk_development) branch.\r\n```'
6157,330314823,"b""Shouldn't these all be ##?"""
6157,330314892,b'```suggestion\r\n1. Implement the bug fix or feature. Instructions for building and deploying MRTK are at [BuildAndDeploy](../BuildAndDeploy.md). Remember to follow the [Coding Guidelines](CodingGuidelines.md).\r\n```'
6157,330315088,"b'```suggestion\r\n1. If adding an experimental feature, then writing tests and documentation are not necessary. Instead, follow [experimental feature guidelines](ExperimentalFeatures.md).\r\n```'"
6157,330315201,"b'```suggestion\r\n1. Ensure the code works as intended on all platforms. Please see [Release notes](../ReleaseNotes.md) for the list of supported platforms. For Windows UWP projects, code must be [WACK compliant](https://developer.microsoft.com/en-us/windows/develop/app-certification-kit). To do this, generate a Visual Studio solution, right click on project; **Store** > **Create App Packages**. Follow the prompts and run WACK tests. Make sure they all succeed.\r\n```'"
6157,330315370,b'```suggestion\r\n1. Follow [documented instructions](PullRequests.md) for making a pull request when ready to submit.\r\n```'
6157,330315451,b'```suggestion\r\nThis document outlines coding principles and conventions to follow when contributing to MRTK.\r\n```'
6157,330315544,b'```suggestion\r\n### Be concise and strive for simplicity\r\n```'
6157,330316110,"b'```suggestion\r\nAll your code should work by **BOTH** adding a component to a GameObject in a saved scene, and by instantiating that component in code. Tests should include a test case both for instantiating prefabs and instantiating, configuring the component at runtime. \r\n```'"
6157,330316735,b'```suggestion\r\n## See also\r\n```'
6157,330317111,b'```suggestion\r\n### Provide an example scene that demonstrates how to use the feature\r\n```'
6157,330317379,"b'These titles seem exceeding long. => ""Experimental features should not impact core controls"" Gives same message with much less words, especially since there is a description below'"
6157,330317487,b'informal you and related is used a lot in these changes. Technically documentation guidelines say to not do that.....but of course that will be a lot to go back in change. '
6157,330317550,"b'Highlight ManipulationHandler with bold, italize, or the code ticks'"
6157,330317627,b'nit: space line'
6157,330317696,"b""shouldn't this and the one at bottom be ##"""
6157,330317893,b'```suggestion\r\nAn automatically generated comment in the PR will let you know if you do.\r\n```'
6157,330318006,b'```suggestion\r\nEnsure the pull request meets the guidelines below.\r\n```'
6157,330318119,"b'If any items have been renamed, ensure to search both MRTK code and documentation for impacted references'"
6157,330319286,b'Should we address how tagging PRs or more importantly assigning right people to look at them? '
6157,330319338,b'honestly change to IMPORTANT'
6157,330319401,"b""```suggestion\r\nThese guidelines are based off of [Google's engineering practices](https://google.github.io/eng-practices/review/developer/small-cls.html).\r\n```"""
6157,330319879,"b""I'd actually say, in general, avoid adding media assets to MRTK (e.g fbx, png files) and instead re-use existing content. If it is necessary to add unique assets, make sure any assets are small"""
6157,330320099,"b'nit: emphasis on tests for both features AND bug fixes\r\n```suggestion\r\nTests are the best way to ensure changes do not regress existing code, but it is also easy to forget about tests when submitting pull requests. Requiring that they go in with your PR are a great way to ensure that tests get written.\r\n```'"
6157,330320256,"b'```suggestion\r\nEvery feature and bug fix should have tests associated with it. If you do not have the expertise or time to write a test, create an issue to write the tests, and mark them with label **Consider for Current Iteration**.\r\n```'"
6157,330320770,"b'```suggestion\r\nMost developers look first at documentation, not code, when understanding how to use a feature. Ensuring documentation is up to date makes it much easier for people to consume and rely MRTK.  Documentation should always be bundled with the related pull to ensure items remain up-to-date and consistent.\r\n```'"
6157,330321179,b'Maybe how to use DocFX?'
6165,330322927,b'return Comment probably needs to be updated? why override in sub classes?'
6165,330323189,b'Looks like this may needs to be consolidated with UIMaterialInstantiator from PR #6049 '
6165,330323469,b'Should this maybe be like GameObjectExtensions.DestroyGameObject?'
6165,330324013,b'TOC update?'
6165,330324083,"b'nit: remove .cs, inconsistent with rest of docs'"
6165,330324130,b'for note make  ! [ NOTE ] '
6165,330324173,b'nit: space lines'
6165,330324299,"b'```suggestion\r\nWhen a [MaterialPropertyBlock](https://docs.unity3d.com/ScriptReference/MaterialPropertyBlock.html) can not be used and a material must be instanced, [`MaterialInstance.cs`](xref:Microsoft.MixedReality.Toolkit.Rendering.MaterialInstance) can be used as follows:\r\n```'"
6165,330324440,b'spaces and add ## See also:'
6165,330324827,b'out of curiosity is a light needed?'
6165,330328516,"b'Yea sorry, I meant consolidating the destroy safe and GameObjectExtensions by creating an ObjectExtensions'"
6165,330328671,"b""I figured, feel free to keep it. But add comment that it's just for developer visually inspecting test or something"""
6165,330348024,"b'Mrtk docs at bottom of page have a ## See Also section with a billeted list of links that are related to this, like the standard shader or clipping primitive documentation etc'"
6160,330636632,"b'while here can you add a documentation button?\r\n\r\nexample from InteractableInspector\r\n```csharp\r\n            using (new EditorGUILayout.HorizontalScope())\r\n            {\r\n                InspectorUIUtility.DrawLabel(""General"", InspectorUIUtility.TitleFontSize, InspectorUIUtility.ColorTint10);\r\n\r\n                if (target != null)\r\n                {\r\n                    var helpURL = target.GetType().GetCustomAttribute<HelpURLAttribute>();\r\n                    if (helpURL != null)\r\n                    {\r\n                        InspectorUIUtility.RenderDocumentationButton(helpURL.URL);\r\n                    }\r\n                }\r\n            }\r\n```\r\n\r\nand add to top of PressableButton class\r\n[HelpURL(""https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_Button.html"")]'"
6158,330645740,"b'You must be looking at an oudated piece or github messed up, those lines are spaces'"
6188,331814259,"b""Is this class meant to be here? Not exactly sure what it's purpose is.\r\nIf it is on purpose, can you update\r\nspacing, comments, remove empty update method, name of class casing is off, and no MSFT copyright, etc"""
6188,331814282,"b""Simplify this to UnityUIToggleButton, Interactable isn't needed"""
6188,331814341,"b""Also simplify to UnityUI, Interactable is redundant as it's already a child folder of the path"""
6188,331814451,b'Rename to Circle or CircleIcon.png'
6188,331814463,b'Also move to Textures folder'
6188,331814487,b'This should likely be under StandardAssets/Materials'
6188,331814637,b'There is discrepancies between using UnityUI vs UGUI in files in MRTK. I know UGUI is shorter but I believe Unity UI is the official name. '
6183,332121543,"b""This whole session state and population tracking might honestly be worth it's own helper class"""
6183,332121718,b'SearchConfigPreferences or SearchConfigInspector or some other better name/utility because I am terrible at naming'
6183,332121917,b'Obviously remove based on comments in main PR section. Nice added benefit is this will simplify the code up a lot too'
6183,332122304,"b'Switch to just bolded title/label ""Search Fields"" Or ""Search Keywords"" and if you want to be fancy add a search magnifying glass icon inline with the text box. I think there is InspectorUIUtility or MRStyleUtility?'"
6183,332122543,b'This again could be part of that SearchConfigInspector class utility'
6183,332122724,b'And this with SearchConfigInspector utility above...or again move better name :P'
6183,332122986,b'use => using new EditorGUI.IndentScope'
6183,332123614,"b""Better comment. I know it's internal but each property also doesn't have comments.\r\n\r\nAlso maybe rename Property to Field? For some one new, SerializedProperty Property reads funny"""
6183,332123831,b'Again better comments and comments for related items. How is this data container supposed to be used and what is it for?'
6183,332124438,"b'remove comment, not useful.'"
6183,332124945,b'Good place for Utility function => IsProfile or IsConcreteProfile and then remove comment'
6183,332125576,b'This is a really long function. Break this out into util functions etc. Some of this stuff could also be re-usable in MRInspectorUtility etc'
6183,332125943,b'Probably something useful in the SearchConfigInspector'
6183,332126620,"b'@julenka/@davidkline-ms and other MRTK people, not sure how the team feels about MRSearchUtility.FieldSearchResult as a file name. \r\n\r\nFeels like it should just be under the MRSearchUtility folder with everything else'"
6183,332127857,"b'If we switch to a simpler, render the profile if a match was found. This should be removed I believe?\r\n\r\nThat approach should also be faster since we can bail early if any match was found and just proceed to rendering'"
6133,332627130,"b""Using a single string isn't very flexible.  It's also a 1:1 match between a dataprovider/service and a profile without any extension. There is also a sort of weird redundancy here. Profiles determine what services they are valid for via the MixedRealityServiceProfile attribute. \r\n\r\nSo...dataproviders are pointing at a specific profile and profiles are pointing at a specific service type. Also weirdly one direction is generally using concrete types while the other direction is interfaces. \r\n\r\nThe system in general could be greatly cleaned up. But to reduce complexity, redundancy, and thus potential future errors, let's just stick to a boolean requiresProfile\r\n"""
6133,332630222,b'why pass the string name? Just pass the type'
6133,332631155,"b""This code is repeated over and over. We don't want redundant code when it can be put in a function. \r\n\r\nAlso there should be no need to access the providerAttribute and string of the Type here. \r\n\r\nKeep the original design and just pass the Type to the ApplyDataProviderConfiguration"""
6133,332631565,b'Remove this'
6133,332631702,"b'Great pulling this out to base class, but keep the DataproviderAttribute find here'"
6133,332634644,b'should be able to simplify to if (providerAttribute?.RequiresProfile && ....'
6133,332634715,b'And create re-use function'
6183,333111892,b'needed in change?'
6183,333111947,b'needed?'
6183,333112083,"b""If we aren't using subject tags, we can remove this class/file"""
6183,333112258,b'remove subjectButtons'
6183,333112682,b'Update comments and comments for fields below'
6183,333113108,"b""This doesn't seem to be used?"""
6183,333113483,b'Comments for how to use class and fields etc'
6183,333113614,b'Comments'
6183,333116745,b'Move delegate to MixedRealitySearchUtility'
6183,333116847,b'else if'
6183,333117425,b'set to bool variable for re-use'
6183,333117951,b'what is this? I never see anything when I try searching'
6183,333121461,"b""It's weird that the algorithm SearchProfileFields will auto sort the fields in a profilesearchresult but not the profiles themselves"""
6183,333125934,"b""Don't use ToLower(), just pass StringComparison of ignore case into the Contains()\r\ni.e property.name.Contains(keyword, OrdinalIgnoreCase) or CurrentCultureIgnoreCase etc"""
6183,333125995,b'Same on to lower here'
6183,333126747,b'Probably easier to extract this out to IsProfileField() helper function and can combine if statements'
6183,333127181,"b""This function is assuming it's going to analyze a MRTK profile. Make the profile argument of type BaseMixedRealityProfile to be explicit"""
6183,333128164,b'necessary?'
6183,333128614,"b'again, re-use the isProfileField() helper function here'"
6183,333128749,b'necessary?'
6183,333129580,"b'what are children of a SerializedProperty?\r\n\r\nAlso when searching the children, we are only looking for profiles?'"
6183,333132972,"b""the isempty here is a bit over-complicated. All you really need to track is the MaxFieldMatchStrength and a List<FieldSearchResult>. Why not declare these and then if your list is not empty at the end of the function, you create a ProfileSearchResult, populate, and return? \r\n\r\nThis way you don't need to constantly check if isEmpty and can actually remove the function. You don't actually ever return an empty result so it's not utilized by the consumer of this utility either."""
6183,333136330,b'These should also be tied to the SearchConfigInspector'
6183,333138656,b'No tooltips. Not exaclty clear what child properties and gameobject names are considered'
6188,333186524,"b""Why is it odd? It's already under the Interactables folder, why do we need to mention Interactables again?\r\nLook at Interactable/Prefabs/UnityUI/{my stuff}\r\nvs Interactable/Prefabs/UnityUIInteractables/{my stuff}\r\n\r\nAs a user, I know I am under Interactables, how does UnityUIInteractables vs UnityUI give me more information that I don't already have?"""
6001,334099355,"b""There is no need for the GameObject entry. Can't we just do transform.gameobject?\r\n\r\nCollider isn't used and seems redundant with Colliders\r\n\r\nIsClipped seems specific to just the scrolling collection. That should be in a inherited special class. \r\n\r\nThis node will just balloon if every type of collection adds the properties it additionally wants to save.\r\n\r\nSame with Offset for GridObjectCollection, Radius for ScatterObjectCollection etc"""
6001,334099699,b'```suggestion\r\n        /// Calculates how much scale is required for this Bounds to match another Bounds.\r\n```'
6001,334100494,"b'Rename to something like GetScaleToMatchBounds\r\n\r\nWhen reading myBounds.ScaleFromBounds(b) it gives sense that I am actually changing myBounds directly, not just retrieving a value'"
6001,334100976,"b'```suggestion\r\n        /// <param name=""min"">if pos is less than min, then lerp clamps to this value</param>\r\n```'"
6001,334101129,"b'```suggestion\r\n        /// <param name=""max"">if pos is more than max, lerp clamps to this value</param>\r\n```'"
6001,334101949,b'nit: rename clampLerp?'
6001,334104813,"b'Break up this function into local sub-functions. As someone who has jumped around in a lot of different inspectors, long functions make it difficult to find things and understand relationships. It\'s a lot easier to read/comprehend smaller pieces\r\n\r\ni.e\r\noverride void OnInspectorGUII()\r\n{\r\n..\r\nRenderGeneralProperties()\r\nRenderCollectionProperties()\r\n\r\nif (button (""Set up pressablebuttons"")\r\n{\r\nSetUpPressableButtons();\r\n}\r\n\r\nRenderScrollingProperties();\r\n...\r\n}'"
6001,334105193,"b'Same here, what does this piece of code. Rename to a function here with ValidateCollectionNode() or whatever really informs'"
6001,334106082,b'Seems like a weird place to init MRTKtmp? Especially since we call checkforstandardshader in the other inspectorgui\r\nDoes onEnable work?\r\n\r\nAlso maybe MRTKTextMeshPro var name'
6001,334106713,"b""Honestly, I'd say this is a great moment to create\r\n\r\nStandardShaderUtility.IsUsingMRTKTextMeshProShader(), you shouldn't even have to both to init MRTKtmp then"""
6001,334107115,b'nit: spaces and above'
6001,334107268,b'override buttons in own function '
6001,334107689,"b'```suggestion\r\nThe ScrollingObjectCollection is an Object Collection that natively scrolls 3D objects. It supports scrolling pressable buttons and Interactables as well as non-interactive objects. This collection supports both near and far input. In order to use ScrollingObjectCollection, objects must use the MRTK Standard Shader in order for the clipping effect to work properly.\r\n```'"
6001,334107848,b'```suggestion\r\n## Getting started with Scrolling Object Collection\r\n```'
6001,334107897,b'```suggestion\r\n### Prerequisites\r\n```'
6001,334107963,b'```suggestion\r\n## How it works\r\n```'
6001,334108170,"b'```suggestion\r\nScrollingObjectCollection subscribes itself as a global listener for Touch and Pointer events, filtering for events that correspond to the items in the list. Initially, the Collection doesn\'t do anything and lets events pass through to the child objects, this allows child objects to be poked and selected as expected. Once the ScrollingObjectCollection has deemed an interaction as a ""drag"", the collection begins marking all subsequent eventData as used and begins scrolling the list on the set axis.\r\n```'"
6001,334108437,"b""suggestion: up to you, but I'd honestly get rid of this"""
6001,334109723,b'Update this to how would I use this public field. FirstItemInViewIndex for NodeList etc'
6001,334112670,b'Should this also be in the UseOnPreRender setter?'
6001,334112805,b'should clippingBox.useOnPreRender = false now?'
6001,334113143,b'maybe protect with if (useOnPreRender != value)?'
6001,334113562,"b'Create sub function => SetupScrollContainer or UpdateScrollContainer?\r\n\r\nSame with ClippingObject, clip box and other sections below?'"
6001,334114224,b'nit: space'
6001,334114350,b'TODO?'
6001,334114660,b'```suggestion\r\n                if (TryGetPointerPositionOnPlane(out initialPointerPos))\r\n```'
6001,334115018,b'```suggestion\r\n                if (isDragging)\r\n```'
6001,334116900,b'This is actually problematic. ResetInputTrackingStates I believe is the right function...but that might also fail. Not sure if we need to clear Interactable.focusingPointers and Interactable.pressingInputSources\r\n\r\nProblem is ResetAllStates resets IsEnabled = true along with all of the states such as IsVisited'
6001,334118582,"b'Yea I just tried it out in the Example scene. If I disable an Interactable, which means it should not receive input events but still render, when the scene starts, I can toggle/click them'"
6001,334118751,b'nit: all space lines in here'
6001,334146618,"b'Cool, I second Camerons opinion. It is worrisome and important but should not block this PR.\r\n\r\n@Cameron-micka, can you open up a bug with all relevant details for the MaterialInstance update perf issue since you seem to have a solid grasp of it?\r\n\r\nIf you also find noteworthy details for clipping primitive as well, please file a bug'"
6001,334195456,"b'Ok, well at least file a bug/issue so @thalbern and others can track etc'"
6001,334195523,b'suggestion was on outdated code'
6001,334195567,b'suggestion was on outdated code'
6001,334195712,b'```suggestion\r\n                        if (ixable != null)\r\n```'
6001,334195759,b'```suggestion\r\n            if (testPlane.GetSide(pointToCompare))\r\n```'
6001,334195829,b'```suggestion\r\n                if (isDragging)\r\n```'
6001,334195869,b'Hopefully it does it right now. All the if statements need a space'
6001,334195918,b'```suggestion\r\n            if (isDragging || initialFocusedObject)\r\n```'
6001,334195955,b'```suggestion\r\n                if (TryGetPointerPositionOnPlane(out initialPointerPos))\r\n```'
6001,334196028,b'huh it looks weird but the udpate is for teh space'
6250,334575316,"b'```suggestion\r\n *LinePointer*, a base pointer class, draws lines from the source of the input (i.e. the controller) in the pointer direction. Generally, children classes such as the [`ShellHandRayPointer`](xref:Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer) and the teleport pointers are instantiated and utilized (which also draw lines to indicate where teleportation will end up at) instead of this class which primarily provides common functionality.\r\n```'"
6250,334575490,"b'```suggestion\r\nThe implementation of *ShellHandRayPointer*, which extends from [`LinePointer`](xref:Microsoft.MixedReality.Toolkit.Input.MousePointer), is used as the default for the *MRTK Pointer Profile*. The *DefaultControllerPointer* prefab implements the [`ShellHandRayPointer`](xref:Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer) class.\r\n```'"
6293,335229587,b'I was thinking the same thing going through this code.\r\n\r\nAlthough I feel like there needs to be a separation between user preferences (local to developer) and team preferences (saved via source control)'
6293,335230921,"b""They never actually turned anything off. They only ran in editor and not on device. Any player setting changes were only made in play mode. When you exit play mode, you lose all your changes.\r\n\r\nAlso, we don't want to revert the capabilities. The UWP capabilities are primarily for building. They aren't something we want to turn on/off dynamically\r\n"""
6293,335239281,"b'@keveleigh , @davidkline-ms\r\n\r\nServices do get instantiated/destroyed at edit time...until this PR though, DataProviders did not. So the destroy code originally was pointless. \r\n\r\nThe problem going forward is Service.Destroy/Disable or even the profile inspectors aren\'t a sure way of determination for ""hey I don\'t want this dataprovider/service/capability"" anymore. \r\n\r\nYou could be switching around between example scenes or have different scenes for different apps all in your Unity project. etc etc. \r\n\r\nOf course, this says the same about auto-enabling. If I open an example scene with eye tracking, it will auto-enable the capability even though my shipped scene doesn\'t use it.\r\n\r\nThe sure solution would be to check what profiles/scenes are being built and then update the capabilities according to that....but of course that is exceedingly difficult/possibly impossible.\r\n\r\nThe idea with this change though is more people end up in sucky situations where the capability is not set and they are completely unaware. All they see is the feature not working. Vs the alternative of getting a microphone permission popup once whether they may currently be using it or not.\r\n\r\nAn alternative I considered is to keep all the logic I have now....just don\'t automate any player settings configuration. Instead, I would just log warnings to the console that ""hey users, you should enable this because it looks like you want to use it""\r\n\r\nI\'m fine with that alternative...it just seemed based on comments/feedback in multiple issues filed that people would prefer automation by default. And if someone doesn\'t want that, they can toggle the automation off in preferences'"
6293,335685241,"b'Yes exactly. They were treated equally but then were treated separately with the Registry introduction. However, since their lifecycle was now managed by the services and not the MRTK gameobject and/or Registry, the current services only instantiated on enable, not init()'"
6305,335706142,"b'No actually, the profile type under DataProviderConfigurations is actually BaseMixedRealityProfile\r\n![image](https://user-images.githubusercontent.com/25975362/66958478-18a9a680-f01d-11e9-9841-ee24c34256ce.png)\r\n\r\nWhile the ObserverConfigurations in SA, explicitly use BaseSpatialAwarenessObserverProfile\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/66958523-2d863a00-f01d-11e9-9629-f6f2960a31cc.png)\r\n\r\n'"
6304,335734953,b'```suggestion\r\n* *ControllerRay*: Point of reference is the [`LinePointer`](xref:Microsoft.MixedReality.Toolkit.Input.LinePointer) transform on a controller (i.e pointer origin on a motion controller or hand controller) pointing in the direction of the line ray\r\n```'
6304,336115615,"b'```suggestion\r\nFinally, surfaces farther than the `MaxRaycastDistance` property setting will be ignored by the `SurfaceMagnetism` raycasts.\r\n```'"
6309,336222848,b'You should look at PR #6315 if these are going to be per-project/team settings'
6309,336223460,"b""This isn't deterministic. If you use #6315, then it'll write to one file.\r\n\r\nIf you still want your own ScriptableObject, it should be located in one place. Also look at putting it in the Generated folder"""
6309,336223754,b'Use the scope types for inspectors\r\n\r\nusing (new EditorGUILayout.HorizontalScope())\r\n{\r\n}'
6309,336224030,"b'Please update this to be\r\nblah.Equals(blah2, IgnoreCase)'"
6309,336225884,b'save string for re-use so it is only modified in one place'
6309,336226038,"b'Same here, LiveCubeModel.glb should be a const string'"
6309,336226732,b'Why is width necessary?'
6311,336236409,"b""Yea we need a different solution. Waiting for two frames isn't reliable code.\r\n\r\n@cameron-micka, FYI"""
6311,336589866,"b""I'll talk with @Cameron-Micka . SolverHandler should already be tracking if a hand is lost and can switch hands (with any solver like Surface Magnetism, etc). I think HandConstraint can be simplified but I need to confirm my understanding with Cameron."""
6309,336592747,"b""Not exactly, I literally just created it. I actually didn't include documentation in that PR because\r\n1) It's atm primarily for MRTK preferences\r\n2) I'd rather the feature go through some trials and tribulations before being publicly mentioned\r\n\r\nI'm trying to do more testing and once it's reviewed/approved it can go in. So I guess a few days?\r\n\r\nYou can pull the branch yourself and try it out. See if you find any bugs or issues"""
6328,336682800,b'Comma needed for parenthesis?'
6336,337268983,b'oh really? I thought we had migrated it. Good catch'
6315,337581748,"b'```suggestion\r\n        public static int Get(string key, int defaultValue)\r\n```'"
6315,337593824,"b""The impetus of using a data bag was to be more flexible and extensible. Answering your initial questions:\r\n\r\n1) It actually isn't recreation because the feature does not exist yet. EditorPreferences/EditorPref do not work as project settings. \r\n2) #6309 had to create their own SO and the work of loading/identifying a file. It's actually more files and more coding for everyone to manage their own instance\r\n\r\nI'd say MixedRealityPreferences.cs is the class of known tracked properties. \r\n\r\nWe could create a single SO object with one loading utility that contains all Project Preferences explicitly (i.e one property line for each thing you need) and every new consumer has to go in and add their fields. Basically it would be a one off header file with every definition.\r\n\r\nThe problem with that is \r\n1) People will keep adding to it and eventually it will become disorganized and possibly outdated etc. (Less important)\r\n2) Really only MRTK-internal can utilize the class (more important)\r\n\r\nRegarding inspectors, selecting the SO file and viewing it in inspector is not golden path or expected path at all. We need to consider it and handle it as a possibility but the file should remain mostly hidden. \r\n\r\nI've looked at the SettingsProvider docs and MixedRealityPreference.cs is using it. What is the item of value in there though that you are referencing? It has some example code but I don't see any callouts for best practices or warnings etc. \r\n\r\nThe key is I don't expect all Project Preferences to always fit nicely into that Project Settings > Preferences view. An example of that is the build settings. \r\n\r\nThoughts?\r\n"""
6336,337641859,"b'Very most likely, good call. Excited for that PR. '"
6311,337723415,"b'Following up on this, HandConstraint can be modified to be simpler and let SolverHandler handle the hands tracking.\r\n\r\nHandConstraintPalmUp needs to still do some management because it activates only when palm is up'"
6344,337734038,b'merge issue'
6344,337735055,b'use GameObjectExtensions?'
6344,337735215,"b""nit: shouldn't public properties be at top of file?"""
6344,337735572,b'inheritdoc or summary? same with others'
6344,337737720,b'todo?'
6344,337738353,b'todo?'
6344,337738546,b'while here should we update to latest LTS?'
6355,338192674,"b""Regarding instantiation, yes you just create a copy at runtime.\r\n\r\nRegarding the static functions and passing the instance target, I'd say either way. I don't see any clear advantage of one over the other. The static version is more verbose I guess\r\n\r\nThe bigger issue lies to me in the inspector\r\n1) We need to make sure property manipulations are being done on the config file, not on this one gameobject instance...and more importantly that users understand this\r\n2) When running play mode, we need to either disable the inspector or re-targeting the UI to the copied scriptable objects. Because changes made by the designer/user won't propagate.\r\n\r\n """
6355,338193524,b'nit: add private'
6355,338194155,b'space?'
6355,338236540,"b'Suggestion/Consideration:\r\n\r\nPut all of these into a BoundsControlConfigProfile or BoundsControlProfile etc. \r\n\r\nReasoning:\r\n\r\nBoundsCOntrol is one of those UX where there is a 50/50 chance this is being created via a prefab/scene or being added dynamically to an object. In the later half, I would like to probably add a pre-configured BoundsControl. It would be awesome to be able to do \r\n\r\n```\r\nvar boundsControl = myGameObject.AddComponent<BoundsCOntrol>();\r\nboundsControl.ApplyConfiguration(mySavedProfile);\r\nor\r\nboundsControl.ConfigProfile = mySavedProfile; etc\r\n```'"
6355,338236885,b'Nit: Better comment. What is a bounds control link'
6355,338236991,b'spacing here'
6355,338237665,b'Suggestion:\r\n\r\nShould the link class be smart enough to update itself?'
6355,338237806,b'yay! simpler code'
6355,338237940,"b'```suggestion\r\n                    edgeCenters[i] = BoundsControlVisualUtils.GetLinkPosition(i, ref boundsCorners);\r\n```\r\nnit space'"
6355,338238339,"b'Consideration: \r\n\r\nShould this be Scale Handle Config or Scale Handles Profile?\r\n\r\nThinking if am a new MRTK users, I right click and see create Scale Handles? Would I assume it will create like a prefab and geometry...or a definition file?'"
6355,338238448,b'const?'
6355,338240151,b'I would actually consider writing this as \r\nif (extents.x < extents.y && extents.x < extents.z)\r\nflattenAxis = x;\r\nelse if (extents.y < extents.z)\r\nflattenAxis = y;\r\nelse \r\nflattenAxis = z;\r\n\r\nA few more lines of code but much more readable?'
6355,338240499,b'remove?'
6355,338240635,"b'weird that the others are ""Scale Handles"" and this is ""ProximityEffect"" without space'"
6344,338318689,b'inheritdoc? same with enable etc'
6344,338318813,b'Maybe elaborate what components are being added and why'
6344,338318981,b'GameObjectExtensions.DestroyGameObject? or Object.Destroy to handle the branching?'
6344,338319250,b'why does the Hololens 1/2 want the Unity AR data provider for ios/android?'
6344,338319439,"b'Should we consider making common method of this in each input system, spatial awareness, and now here?'"
6344,338319872,b'summary?'
6344,338320552,b'Another area for creating re-use function. All of the data providers I believe use IMixedRealityServiceConfiguration and could have a base method to fill these properties and then remainder properties filled here by each inspector'
6344,338321488,b'This seems a little dangerous. Automatically tagging a camera on a developer that they intended for something else? And there is no way to turn this auto-functionality off'
6344,338322067,b'Another identical function with input system and spatial?'
6344,338322545,b'Do you have an issue for AR Foundation documentation?'
6364,338325585,b'Does i < null == false?'
6364,338326085,"b'Not exactly sure what kind of tests one would add, but just popping question here...tests? (if applicable) :P'"
6344,338696896,"b""Yea indeed, lots of null exceptions everywhere since we use CameraCache.Main everywhere.\r\n\r\nI'm leaning to the FAIL fast approach and notify user of missing MainCamera tag vs silently create one. \r\n\r\nI know this will be rare but I could see some users trying to create new cameras based on what platform they are on or creating new cameras when changing scenes or something similar.\r\n\r\nIf I am just ignorant or screwed up and forgot to add a camera, I think most users will know how to tag a camera as main and fix the error. That is pretty common in Unity whereas a power user trying to do something hacky/unique, we will be blocking them from whatever they are trying to do\r\n"""
6344,338697853,b'#6372 '
6344,338697956,b'#6372 '
6344,338699243,"b'As a new user, it is exceptionally weird to have unique profiles for HL1 and HL2 devices....but not have a DefaultUnityARConfigurationProfile for iOS/Android\r\n\r\nI think it makes sense to add Unity AR in the DefaultMRTKConfigurationProfile since that is sort of a catch all for all platforms'"
6344,338699479,b'yea sorry that is what I meant by Object.DestroyObject() as an extension in ObjectExtensions.cs'
6344,338712336,"b""Why put it in HL Default profile and not the actual default profile DefaultMRTKConfigurationProfile? \r\n\r\nIsn't there no side-effect really to having the Boundary and Teleport systems enabled in the HL profile...but they are disabled because you won't be using them. Same with this camera profile, why would I use an iOS/android profile in a HL targeted profile?"""
6344,338712812,"b""We also have lots of other profiles to demonstrate eye tracking or some other example scene/feature. Why wouldn't we have a AR Foundation profile?"""
6361,338745634,"b""Yea it would probably be better to be consistent. Especially if you are asking to save something somewhere, there is an intent that I want it created or I wish it existed.\r\n\r\n I don't' want to make it an argument though. Our functions in general in MRTK are already argument bloated. """
6414,340355458,"b'Why show true by default? This is kind of like the ""Use recommended settings"" and then you click expand to actually see the entire change list'"
6414,340356480,"b""We should add remark that this enumeration should not be saved to disk because exact values are subject to change?\r\nBasically if we add more WSA capabilities it'll be weird to append at the end of the list. So either we accept that this is only a runtime interface or we should bucket the platforms like below\r\n\r\n// wsa\r\nSpatialPerceptionCapability = 1000,\r\n//android\r\nAndroidMultiThreadedRendering = 2000,\r\n//ios\r\nIOSMinOSVersion = 3000\r\n"""
6414,340356818,b'We may also want to eventually add a doc page with more explanation of what and why every item is here'
6414,340357375,"b'11 should be constant like other parameters. Also probably just switch it to split(""."") and convert string to int and then compare and shouldn\'t it be version >= minVersion?'"
6414,340357471,"b'same here, minVersion.tostring()?'"
6414,340357624,"b""nit: shouldn't this be RequirediOSArchitecture? etc"""
6414,340361680,"b""I don't understand. I just mean iOS instead of Ios"""
6311,340387598,b'Sorry for the delay. I started the simplification in this branch \r\nhttps://github.com/Troy-Ferrell/MixedRealityToolkit-Unity/tree/users/trferrel/handconstraint-solverhandler'
6355,340747291,b'Should this not be in extensions?'
6355,340749364,"b'suggestion, feel free to ignore.\r\n\r\nWhat if we add Microsoft.MixedReality.Toolkit.UI.Experimental.BoundsCOntrol namespace, in this way we could remove ""BoundsControl"" from all class names?\r\n\r\nNot a big deal either way, just a consideration to make things more readable'"
6355,340749478,"b'nit: remove comment, not helpful'"
6355,340750917,"b""For CreateRig(), is there a work item to optimize that? So that on every call of configurationchanged, we aren't recreating everything? I know there was a todo marker"""
6355,340751452,b'ondestroy => removelistener?'
6355,340778395,b'Awesome stuff'
6280,340807930,"b'Is there anything special here other than turning on SA? If not, I\'d say let\'s just re-use ""DefaultMixedRealityToolkitConfigurationProfile"". \r\n\r\n'"
6355,340817764,"b""ah right, dont' worry about it fornow"""
6280,340841060,"b""I'd say use the default and then add hand menu or toggle menu to switch out between occluded vs visible states in SA system"""
6446,341740776,b'It\xe2\x80\x99s the original format of the file'
6446,341740925,b'Yes Ondisable is called when destroyed '
6315,341863253,"b""No people should not be deleting this folder because they will lose all of their personal assets. I don't believe we have ever recommended upgrading this folder. Generally all of the profiles go here and anything else would be totally lost"""
6315,341863315,"b""hmmm we should be able to do a test fine. ProjectPreferences is ignored in MRTK repo so even if a test somehow fails and doesn't clean up properly, it can't go in. It will still only impact locally"""
6315,341863409,"b'Comments for inspectors will just get a little ridiculous because they will mostly all be ""editor inspector for class blah"" Only a handful of inspectors do dynamic options or updates via the inspector.\r\n\r\n@julenka, possible alternative, assuming this works, make inspector classes internal? So it\'s not a public interface we have to cover/surface'"
6446,342271693,b'DepthBufferRenderer body of code is #IF UNITY_EDITOR so nothing will run in that case'
6446,342272081,"b""ah it's finally been created"""
6460,342315933,"b'I wouldn\'t call it startScale. It\'s very confusing with property.StartValue.Vector3. originalScale is a bit more deliberate. \r\n\r\nAlso RotationTheme does not take into account original rotation either. \r\n\r\nThis change will technically ""break"" people who were expecting the scale value to be direct vs multiplicative....but preserving the original information is more of what people would generally want I imagine. Especially if we eventually get to the work to ""reset"" themes allowing all changes done to be reverted. \r\n\r\nCurious to hear other thoughts on this? @Julenka, @CDiaz-MS , @killerantz  ?'"
6460,342649679,"b'I think I agree. I think relative is better...but not sure what others would expect. More importantly though, as you said, the themes should be consistent'"
6473,342797610,b'ToggleList does not have get/set and backing serialized private field etc'
6473,342797785,b'simplify to ```=> currentIndex```'
6473,342798130,b'You need to save list of actions and then remove this list. The removelistener later is a different anonymous instance'
6473,342798408,"b'nit: I would update this to ""force selection set""'"
6473,342798647,b'case if toggellist is null?'
6473,342799415,b'simplify \r\nToggleList[I].IsToggled = i == index;'
6473,342799932,b'might be safe to check ToggleList[i] is not null'
6473,342800421,b'We actually should start always doing\r\nOnSelectionEvents?.Invoke();\r\n\r\nbecause OnSelectionEvents is public and thus could be set to null by another party'
6473,342800554,b'nit: fix spacing'
6473,342801166,"b'@julenka, what do you want to do with inspector public class comments? Mark internal or just add generic comment ""I am inspector of blah""'"
6473,342801308,b'combine if statement conditions into one if'
6473,342802248,"b""I believe this needs to be inside the if statement body above. If we aren't changing selection, we shouldn't be firing a click? @julenka thoughts?"""
6473,342802401,"b'simplify set => SetSelection(value, false, true);'"
6473,342802685,"b'Like if I call CurrentIndex =2, many times over, seems weird to call onclick?'"
6473,342803461,"b""nit: I'd suggest simplifying this to for (int index = 0; blah blah), foreach purpose is defeated here"""
6473,342805027,"b'simplify to \r\n\r\nassert.areequals(interactableToggleCollection.ToggleList[i].IsToggled, i == interactableToggleCollection.CurrentIndex)\r\nor\r\nbool shouldBeSelected = i == interactableToggleCollection.CurrentIndex;\r\nAssert.AreEquals(shouldBeSelected, interactableToggleCollection.ToggleList[i].IsToggled)\r\n\r\nfor the second assert\r\nbool expectedClickCount = i <= j ? 1 : 0;\r\nAssert.AreEquals(onClickEventCalled[i], expectedClickCount);\r\n'"
6473,342805706,b'use?'
6473,342806302,"b""actually don't believe this will work. If I set CurrentIndex = -1 in the inspector, it will actually set the value. """
6473,342881536,b'Sorry I just meant ToggleSwitchPrefabAssetPath '
6474,343256982,"b'The zwrite covers the fonts, not the unity UI which is covered by this'"
6493,343271787,"b'If I was a user that saw, this how would I know how to recreate the asset?'"
6473,343273238,b'`internal class InteractableToggleCollectionInspector `'
6473,343377727,"b'You need to update the selection on the set. If I change the size of the list, then my current index may be invalid'"
6502,343931562,"b""@keveleigh , hold on until I publish the PR. I just wanted to draft it as FYI it's coming. I'll re-request review when I convert from draft"""
6523,343979515,b'This is redundant code with OnDestroy. Move it to dedicated function'
6523,343979565,b'This is redundant code with the Start(). Move to re-usable function'
6523,343979644,b'merge with if statement below.\r\n\r\n`if (value != null && toggleList != value)`'
6523,343979998,"b""Instead of using listenersAdded, I believe you can just add the init in on Awake(). If people modify the ToggleList in their Start() or some other component, they'll be covered. """
6523,343980918,"b'This is great, if I updated currentIndex in the inspector to like -1, then it won\'t accept the value. \r\n\r\nOther problem though is ToggleList is still exposed. Since it\'s more unlikley someone will change the ToggleList via inspector at runtime, I\'d say it\'s fine to just disable the GUI for that property. \r\n\r\nYou\'ll have to get rid of `base.OnInSpectorGUI()` and do your own rendering\r\n\r\n``\r\n... OnEnable()\r\n{\r\ntoggleListProperty = serializedObject.FindProperty(""toggleList"");\r\n...\r\n}\r\n\r\noninspectorgui()\r\n{\r\n\r\nnew EditorGUI.DisabledGroupScope(Application.isPlaying))\r\n{\r\nEditorGUILayout.PropertyFIeld(toggleListProperty);\r\n}\r\n\r\nEditorGUILayout.PropertyFIeld(currentIndexProperty);\r\n\r\n...\r\n```\r\n'"
6502,343981800,"b""@keveleigh, yes it is being broken up into multiple PRs. See item #6520 for the additional issues to come. \r\n\r\nThis change mainly involves refactoring such as breaking some of the monolithic functions into sub-components and creating re-usable functions for redundant code, etc. Because of that, it'll be hard to compare diffs. I find it's a lot easier looking at the final result of file(s) (i.e the BuildDeployWindow.cs in this case) alone and reading that it makes sense. """
6523,344427532,b'nit: space at end'
6523,344427579,b'Remove leftover'
6523,344427604,"b'Differrent suggestion, to remove listenersAdded, use the equivalent \r\nlistenersAdded == !toggleActions.isempty()\r\nso in start just check if toggleActions.count > 0'"
6523,344427645,"b'see comment about listenersAdded, just check toggleActions if empty or not'"
6460,345853444,b'nit: add comment about test'
6460,345853679,b'nit: extra space'
6460,345853706,b'nit: add comment about test'
6460,345854669,b'Use Vector3.Scale instead? Cleaner and same result'
6460,345855978,b'same here\r\n`Vector3 expectedState0 = hostInitialRotation + state0;`'
6460,345861923,b'while here can you add comments on each public field to be up to date with the coding guidelines. This was missed in the refactor'
6460,345878698,"b""I don't think it's necessary because both Scale and Offset are purely relative in this theme and I was trying to remove obstacles to get the rest of the PR in. Feel free to add it though"""
6309,346043075,"b'@genbod, FYI #6315 was merged into MRKT_Dev'"
6503,346073043,b'Why do we need placeholdericon and placeholdericon_small?'
6503,346073251,b'What are the gradients used for?'
6503,346074658,"b""On CompressableCyldinersVisuals, there is a body, edge, and face gameobjects/meshes. \r\nEdge doesn't seem to really do anything that I can visually see when I toggle on/off\r\nBody/Face also seem like they can be combined into one mesh with same material?"""
6503,346075163,"b'Furthermore, how is this exactly different/needed compared to the prefabs ""PressableButtonhololensCircular_nxn""?'"
6503,346076444,b'Why does the `HolographicBackPlate` material not work here?'
6578,346092013,b'can you fix Geo_Max_Out_Vertices as well? ifndef seems unnecessary?'
6578,346092830,"b'Also while here can you clean up the file?\r\nNot readable spacing/indenting especially at top of file, commented lines such as //bool _Color_Map_Enable_; tags are duplicated. Also some of the defines like No_Depth_Write?\r\n\r\nWas this created via shader graph of something?'"
6460,346968000,b'commented code'
6460,346968070,b'nit: add public specifier'
6599,347039596,"b'hmmm, probably worth while to list out all nearinteraction classes in a list and then put mention here of see sections below'"
6602,347534308,"b""I pulled the IsEnabled out for two reasons\r\n1) I want it to be more deliberate and obvious to readers that we won't do anything unless enabled\r\n2) It matches the rest of the file in that if we are disabled, return immediately"""
6602,347535270,"b'The test was originally written with that line and I just missed it myself, so just an oversight. Fixing now. Good catch!'"
6599,347540769,b'Actually just wrote in links to correct sections to simplify matter'
6647,348239054,"b'Because that is the way it was originally implemented. InputAction, both in Interactable and in MRTK, has a lot of issues. Existing item for here is: https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6105'"
6650,348679504,b'Do we need this if you have EditorApplication.update?'
6650,348679921,b'Looks like you have undo.recordobject twice?'
6650,348686262,"b""I'm surprised OnValidate did not work. Did you also try ExecuteInEditMode? \r\nhttps://docs.unity3d.com/ScriptReference/ExecuteInEditMode.html\r\n\r\nIt's great you unsubscribe from update once done...this all will still execute though every code change and recompile though. And FindObjectsOfType isn't cheap, especially dependent on the scene. This looks like it should work but i'm slightly worried about setting the precedent of adding this kind of editor overhead as we get more components that need to be migrated. Especially since in general we only need to perform the migration once per scene and then never again, so we searching/checking constantly for only one update (generally) in the lifetime of this component\r\n\r\nI'm not exactly sure of a better solution yet. The benefit to mind of ExecuteInEditMode for like Awake() is that you don't need to findobjectsoftype and you can clean the code up a bit"""
6650,348686653,"b""Do we have to UpdateCollection here? As Bernadette said, this seems potentially problematic. If a user wants different values or something changes in the future, we will be forcing update of the sub elements everytime against the user and they can't turn it off"""
6668,348751883,"b'This fixes the one link but the doc page is not truly accurate. Because of all of the issues with Unity, we have a complex usage with MixedRealityKeyboard and MixedRealityKeyboardPreview.\r\n\r\nThis doc should be updated to show how to use the MixedRealitykeyboard class'"
6692,349311178,b'Documentation update?'
6692,349312360,"b'I would add here something to the effect of ""if true, this will ensure holograms such as hand tracking align while capturing a video etc etc"". I don\'t think it\'s clear to any user, except us internally familiar with MRC, that using the PV camera means you will have hologram alignment in your captures'"
6692,349317001,"b'Yea the doc button is great, keep that. But we need something else here, short and sweet, that gives more info to the developer for ""What is this and why do I give a damn?"" \r\nHologram alignment during MRC will catch a lot of people\'s attention & understanding and then they can go learn more.'"
6692,349321100,"b'lol I thought of the same consideration for updating the profile entry member name/profile title label. Words are just hard\r\n\r\nThis is my suggestion but feel free to do whatever. Naming is always so tricky\r\n\r\nMRC Settings => Mixed Reality Capture Settings\r\nRender from PV Camera (Align holograms) [x]       [Documentation button]\r\n\r\nTooltip => something like ""If enabled, will render scene from PV camera projection matrix while MRC is active. This will ensure that during capture holgorams, such as hand meshes, remain visibly aligned in the video output."" '"
6779,353197749,b'error comment seems incorrect. BaseDataProvider can apply to other systems than Input system'
6781,353205705,b'Why is this called createcontroller? '
6781,353206463,b'Can you better emphasize in description that changes here extend from your other PR. Like add **NOTE** just to be extra clear for readers'
6781,353206845,"b""I'd also add that this is dependent on that PR being checked in first....so then it'll be easier for people to review what this PR change really entails"""
6781,353208563,"b'nit: Can you move this line down next to the if statement so they are more local. Also can you change the var to a bool. Generally var is useful for a class or interface type especially for like Dictionary<IMIxedRelaitySErvice, List<IMixedRelaityController>> blah things. But it\'s clearer with it being a bool in this case\r\n\r\nAlso maybe add a comment line like ""If this is a new detected controller, raise source detected event with input system""\r\n\r\nThanks!'"
6781,353209599,b'Maybe UpdateControllerForInteractionSourceState? or UpdateInteractionSourceController?'
6781,353237178,"b'Yes, sorry let me elaborate. I saw the note. My comment here is to just make it stand out more and give more information. like the following. This is a nit thing, it just helps when reviewing\r\n\r\n**IMPORTANT** : This PR extends from changes in PR blah and should be checked in after '"
6781,353238344,"b""Thanks for the comment. This helps a lot. I didn't realize GetController adds to activeCOntrollers"""
6767,353435859,b'This seems a bit dangerous to block on an external process with Unity startup. Maybe split up the work into two stages like the project configurator\r\n\r\nGetter => is setting corect?\r\nsetter => execute change of setting\r\n\r\nand make the execute an async or if sync block add timeout to WaitForExit()'
6767,353438141,"b""@davidkline-ms  is there a way to add files that won't be shipped with the unitypackages/nuget?"""
6783,353465577,"b""Yea I know, we could possibly leave this as a foreach loop. \r\n\r\nI made this a ToArray() because using ElementAt() extension supposedly can run in O(N). I'll switch back as it's more likely we'll GC more as our services list grows vs the fixed 40B\r\n """
6783,353779201,b'Good catch!'
6795,353980936,"b""ah gotcha, that was on purpose but I'll switch back"""
6795,353983453,b'Going to combine with Application.isPlaying. I want to exclude just edit mode'
6790,355692378,"b""No, we don't want to clear. The function will only add to whatever list is given as input. This is more flexible for the consumer. if they want to clear, they can do it themselves since they control the list before calling the function. But if the consumer doesn't want to clear and the function automatically did, then you need to AddRange the results from this function and effectively duplicating work/copying\r\n"""
6834,356211698,"b'Minor thing, can you remove the double line breaks and extra spacing? It breaks away from the rest of the file'"
6834,356212071,"b'Nit: Switch to comparison against InteractableStates.InteractableStateEnum.Pressed, more reliable than name if name changes etc'"
6834,356216437,"b'@wiwei well HasGestureMax is a bit problematic. HasGestureMax has comment ""Currently not controlled by Interactable directly"" but we do reset it in the reset all states or reset input states method. So it\'s not a great scenario but I think we don\'t have to worry about HasGestureMax in this case. We should update the comment though for that one and others\r\n\r\n@vaoliva suggestion, just make it HasPress = false, and HasGesture = false. It\'s weird to check one but not the other and there are only two values for it so setting it to false is fine. We also don\'t save on performance or anything. \r\n\r\n@julenka / @thalbern , I wonder if we can remove the roll off timer? The comments suggest we are delaying firing some lost focus but really we are just delaying setting HasPress to false when we are pressed but lose focus which I currently don\'t understand why we have to delay that setting. It\'s weird to me that we can have HasFocus = false and HasPress = true for 0.25 seconds\r\n\r\n```\r\n        // allows for switching colliders without firing a lose focus immediately\r\n        // for advanced controls like drop-downs\r\n        protected float rollOffTime = 0.25f;\r\n        protected float rollOffTimer = 0.25f;\r\n```'"
6834,356265701,"b""Yea I considered that. It makes sense but it's just a larger change and not sure of the impact. """
6822,356275333,"b""@wiwei no happy for the feedback. I just didn't want nit stuff atm like forgot to add comment etc. \r\n\r\nSo I agree, but I'm not sure how to overcome this. The pointer is a GameObject and anyone with a reference to it could at some point potentially destroy it. So it shouldn't ever be null but we have to check against it."""
6822,356286162,"b'> I assume that some of these could be torn out into a different class which can be individually unit/component tested, which MIGHT help.\r\n\r\n@wiwei  I\'m not exactly understanding you. What are ""these"" that could be torn out?'"
6834,356292995,"b'That\'s my bad. I had ""clean up"" added I believe in other parts of the tests. It was likely copied/pasted\r\n\r\nIt should be removed'"
6842,356392524,b'nit: add url to unity docs for MenuItem? https://docs.unity3d.com/ScriptReference/MenuItem.html'
6880,357288192,b'Can you add comment of what 0169 is and why we disable it?'
6482,357361068,b'No because they all cast to the appropriate profile type. InputSystem is just weird that it does not have a unique BaseInputConfiguration class. ServiceConfiguration is meant to be generic and hence why I obsolete that one'
6887,357362686,"b""Updated. I don't mind either way. I put MRTK Examples Hub because I thought that was the official app name."""
6889,357363533,b'I think without this it actually looks weird'
6889,357368451,"b""I recall seeing after publishing once I could view it on https://microsoft.github.io/\r\n\r\nI'm not sure how you can view a private branch on https://microsoft.github.io/?"""
6889,357368899,"b""Yea I've learned not to trust vs code unfortunately"""
6889,357377550,b'hmm try switching html img tag to markdown'
6870,357386487,"b'```suggestion\r\n            /// Intended to be called once per frame, this method performs a sphere intersection test against\r\n```'"
6870,357386568,b'```suggestion\r\n            /// all colliders in the layers defined by layerMask at the given pointer position.\r\n```'
6870,357387792,b'Use CameraExtensions.IsInFOV here instead'
6870,357387954,b'use CameraCache.Main.IsInFov() instead'
6870,357388933,"b'switch to for (int i = 0.... list should no add garbage collection, but some research shows foreach loop does have additional assembly compared to for (int i. Especially since I believe this is called every frame'"
6870,357389643,b'simplify this to return (xMin <=.....);'
6870,357389865,"b""Make static? don't see any private code\r\n\r\nAlso returns is empty in comments"""
6482,357452192,b'I think they are but the compiler was complaining about it as a warning. Figured safe to add'
6482,357452345,b'Even for protected/private classes? '
6482,357479440,"b""Fair enough. I'm going to cheat here though. I've switched them to internal since this is an inspector class and meant as an internal data container"""
6870,357494900,b'Use the Mathutilities is in fov then?'
6482,357759185,"b""oh I was wondering why this kept getting unresolved lol\r\n\r\nI don't want to change it in InputConfiguration because really there is a separate bug in that there should be an InputDataConfiguration type. InputConfiguration should follow the model of the other dataprovider owners vs removing the property here. \r\n\r\nI could add that in this PR....I am just trying to restraint myself from adding more and more fixes/code in PRs to keep them small lol\r\n\r\nWhile it doesn't make sense to make one for the service since it's supposed to be generic for any extension service\r\n\r\nI'll open a bug to track it"""
6482,357759945,"b""Yea I'll make a pass through for this PR"""
6863,357765095,"b""comparing unity object is more expensive than comparing vector3s. Unity has to cross native/managed threshold and check both native pointer and managed pointer\r\n\r\nIf the first condition fails, the compiler doesn't process the second condition"""
6863,357765871,"b""hmmm, curvepointer can be tested through the teleportpointer implementation...but not sure what tests we have there. \r\n\r\nThe main test I should look into (if it already exists) for LinePointer is the IsFocusLocked code (which was pre-existing logic that was preserved). We set different start/end points based on that if condition which would be good to validate in a test (again if it doesn't already exist). """
6822,357766548,"b""After this PR....I wish there was a #IF MRTK_DEV lol\r\n\r\nI'll consider this more. At a min, I'll open a GitHub issue to track it's removal"""
6482,357839163,b'Bug filed: #6900'
6482,357856611,"b""eh...these aren't exactly the kind of classes we want people to extend or expect to. But I'll switch to public so at least it's possible I guess"""
6863,358394441,b'The AddComponentMenu were added because of bug #6567 \r\n\r\nThey should be on anything that is a MonoBehaviour/C# script and thus can be added into the scene. \r\n\r\nThey are in our guidelines\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#adding-new-monobehaviour-scripts'
6744,358411407,"b'Can you remove these comments per our coding guidelines?\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html\r\n""comments that restate what is obvious provide no extra information and increase the noise to signal ratio.""'"
6744,358415026,b'Same with the items below'
6744,358416969,"b""Looking through the example scene,  I'm not seeing this used anywhere. It's currently throwing a null exception in editor"""
6744,358418099,"b""I don't believe these are all necessary? They aren't exactly accurate as every instance of the component is duplicating these and some are populated while others aren't. """
6744,358418373,b'These can be removed'
6744,358419100,"b""It's also very confusing to read and understand for new users. Some assumptions and types built in here."""
6502,358426442,"b""Replaced with Test Connection button. The PairHololens didn't actually do anything"""
6502,358429320,b'Great find'
6502,358436918,"b""yes it didn't manage the lifecycle of this hardcode addition well. So you could easily break and then it would lock you out. So you would have to delete and re-create. """
6502,358443136,"b'Ahh so that is what it was trying to do. I was wondering what in the world. So it\'s really a ""Discover Device IP"" vs a ""Pair Device"" because pairing a device with a pin is a totally separate process. \r\n\r\nI\'ll look at adding a button for this'"
6502,358444576,"b""Unfortunately I don't remember all of the items I found in detail because I worked on this over a month ago. \r\n\r\nI remember one was if I typed in 127.0.0.1, it would lock it out and I wouldn't be able to edit it anymore. So you would have to remove it and would make it difficult to add port number.\r\n\r\nThere was also some weird stuff I think with machine name possibly. \r\n\r\nBasically the code was trying to lock down UI input when it was a local connection...but it wasn't doing that in all code parts."""
6502,358461432,"b'I was trying to start separating out the UI layer from the model and control layers. Looking at this again, I feel like this should go under MRTK.Tools?'"
6502,358463971,"b""Especially since it's effectively grouped with the others\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/70943004-b19c7400-2004-11ea-8e72-726db432f7c5.png)\r\n"""
6502,358465488,"b'Talked offline with @keveleigh \r\n\r\nGoing to simplify both code and interface to just use a boolean toggle. Sort of like in VS \r\n\r\nUser selects Local target (i.e 127.0.0.1) or Remote target\r\nif Local, then no ips etc found\r\nIf Remote, then list of IPs shown\r\n\r\nNo special handling of 127.0.0.1 checking unless against the toggle boolean flag'"
6915,358527521,b'why not use SlowMoveHand?'
6915,358527575,b'why not use SlowMoveHand?'
6915,358528100,b'I would add note here about PlayModeTestUtilities.HandMoveStepsSentinelValue'
6915,358528129,b'I would add note here about PlayModeTestUtilities.HandMoveStepsSentinelValue'
6915,358528730,"b""This seems a little dangerous if someone forgets to reset (exception thrown etc). Should PlayModeTestUtilities.Setup auto set this to false?\r\n\r\nI'm not sure if PlayModeTestUtilities static variables are reloaded between tests cases?"""
6919,358591060,"b""hmmm is it not better to use StartupBehaviour as the autoResume? \r\n\r\nLike when I re-enable, if I am auto-start, then I should automatically start the feature. This way users could also tune observers to switch between auto-start and manual-start after enables/disables.\r\n\r\nWhereas with autoResume based on last state in disable, StartupBehaviour is use-less after initialize. The user can't change the functionality of autoResume unless they suspend the observer before every disable(). \r\n\r\nCompared to StartupBehaviour  is our indicator from the user if we should auto-resume.\r\n\r\nThoughts?\r\n\r\n """
6919,358591211,b'Although also see #6920 which is somewhat related here'
6919,358644408,b'Good idea. It\xe2\x80\x99s actually accessible via the observer interface I believe '
6925,359040756,b'Can you add a summary comment explaining what the component does and how it operates'
6925,359061720,"b'minor change, can you simplify usage to following format to save space/readability and also add a comment\r\nget => state;\r\nset => state = value;\r\n\r\nThanks!'"
6925,359061838,b'Can you move this guy to be near with his friend?'
6925,359062180,b'Remove returns tag or fill it in. Empty returns will fail automatic PR pipeline validation'
6925,359062340,b'Confused what these are for? or jsut to-be-filled?'
6925,359062513,b'Remove commented'
6925,359063184,b'looks like this will override any references I set in the inspector?'
6925,359063444,b'Can you maybe instead use GetComponentInChildren?'
6925,359063511,b'minor change: empty space'
6935,359983340,"b'```suggestion\r\n1. Inside the *Assets* folder, delete most of the **MixedRealityToolkit** folders, along with their .meta files (the project may not have all listed folders)\r\n```'"
6935,359984045,"b'and add "", or its .meta file.: to ""Do NOT delete the generated folder""'"
6935,359984786,"b'```suggestion\r\n    - Delete **MixedRealityToolkit** and **MixedRealityPlayspace**, if present, from the hierarchy. This will delete the main camera, but it will be re-created in the next step. If any properties of the main camera have been manually changed, these will have to be re-applied manually once the new camera is created.\r\n```'"
6935,359985316,"b'Avoid use of ""you"". I know a lot of MRTK documentation does not entirely follow this (even in this very page), but trying to move away from the informal'"
6935,359985411,"b'```suggestion\r\n1. Inside the *Assets* folder, delete most of the **MixedRealityToolkit** folders, along with their .meta files (the project may not have all listed folders)\r\n```'"
6935,359985867,"b'```suggestion\r\n    - Delete **MixedRealityToolkit** and **MixedRealityPlayspace**, if present, from the hierarchy. This will delete the main camera, but it will be re-created in the next step. If any properties of the main camera have been manually changed, these will have to be re-applied manually once the new camera is created.\r\n```'"
6935,359990276,b'I would suggest removing the hyperlink above and the section header. Instead add a section so it stands out more and simplifies need of hyperlink/section\r\n```\r\n> [!NOTE]\r\n> Instructions to properly migrate to the latest version of the Mixed Reality Toolkit are documented in the [release notes](ReleaseNotes.md) for each version. \r\n```'
6870,360237819,b'Is this not going to be in shared location so touch can take advantage too?'
6870,360238724,b'Can this maybe be simplified to myCollider.bounds.Contains(CameraCache.main.transform.position)?'
6870,360238846,b'Remove?'
6870,360238965,"b""Don't believe this needs to be here?"""
6870,360238993,b'Empty returns in all methods'
6870,360239136,"b'nit: maybe remove ""giant"" from test name. Seems just simple 1m primitive cube yes?'"
6870,360239424,"b'random, why do we sometimes use <img src instead of the [blah](myimage.jpg)?'"
6870,360239860,"b""```suggestion\r\na grabbable but cannot see it. The *Visual FOV* is defined via a cone instead of the the typical frustum for performance reasons. This cone is centered and oriented the same as the camera's frustum with a radius equal to half display height(or vertical FOV). \r\n```"""
6870,360239895,b'```suggestion\r\n```'
6870,360240495,b'Simplify if statments to something maybe like below?\r\n```c#\r\nif (grabbable != null)\r\n{\r\n   if (ignoreCollidersNotInFOV && !isInFOVCone(collider))\r\n   {\r\n        /// comments\r\n       grabbable = null;\r\n   }\r\n   else\r\n   {\r\n       return true;\r\n    }\r\n}\r\n```'
6870,360240680,b'Update method comment?'
6870,360240922,"b""nit: maybe lastCalculatedFrame? just to point out it's a frame number"""
6822,361221990,b'Why would this break input simulation? The hands interaction example scene worked for me in editor which uses this service for the input.'
6822,361222127,"b'Why remove? This is used for the RequestPointersPerfMarker. The markers are conditionally removed for release builds\r\n""They are conditionally compiled away and thus have zero overhead in non-Developmenet (Release) builds.""'"
6822,361222196,"b'yea good idea, adding != check'"
6822,361222224,b'yes see other comment. Markers are conditionally compiled out for release builds'
6822,361222265,"b'Not deleted, just moved to end of file. See full file change'"
6822,361222582,"b'Handedness can equal ""any"" or both etc. The cache works per pointer option which is mostly 1:1 with a pointer prefab (not a hard expectation). \r\n\r\nSo when two hands come up and then disappear, there should be two pointer instances for each option in teh stacks.\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/71424813-403b7180-2653-11ea-8bfc-26d01fdf4c26.png)\r\n'"
6822,361222876,"b""yea just easy way to grab earliest item. I don't want a Pointer[] because of re-allocation and copying. I'm pretty sure List<> will also re-allocate and copy for when head is removed.  LinkedList or stack makes it easy to remove item"""
6822,361223053,"b'Yes these are just the default values in the MRLineRenderer class. At some point they were added but this prefab was never updated. When executed at runtime, Unity just takes the defaults even though there is no entry in the text file. \r\n\r\nBasically no one has opened and saved the prefab asset since these new line renderer fields were added'"
6822,361224818,"b'> EnablePointerCache true, DestroySourceLost true => not sure the behavior\r\n\r\nIf DestroyOnSourceLost is true, the pointer will be destroyed. Whether the pointer is ""added"" to the cache or not, depends on how quickly the pointer destroys itself since it\'s not immediate by Unity. \r\n\r\nTechnically it\'s possible for a pointer to be added when it\'s about to be destroyed is added, or a pointer that is inactive but is destroyed at some future point while in the cache. \r\n\r\nIn these cases, the cache scans itself and clears null entries with CleanActivePointers() or with the stack popping while loop scan'"
6822,361224903,b'Yes look at line 199\r\n` if (option.ControllerType.HasFlag(controllerType) && option.Handedness.HasFlag(controllingHand))`\r\n\r\nWe have to pass this gate before even instantiating or accessing the cache for a pointer'
6863,362646159,b'Test added'
6978,362977874,b'serialized field private blah blah?'
6978,362978071,b'nit: use =>?'
6978,362978364,b'technically supposed to be \r\n```\r\nif (disposed)\r\n{\r\nreturn;\r\n}\r\n```\r\nright?'
6978,362979200,"b""It's not exactly clear the difference between BaseSpatialMeshObserver  and BaseSpatialObserver? Why are they separated?"""
6977,363391984,b'yes updating param comment'
6960,363461803,"b'I think the serialized field can be modified but for the public property make it twice\r\n\r\n```\r\npublic float FacingCameraTrackingThreshold\r\n{\r\n}\r\n[System.Obsolete(""Use FacingCameraTrackingThreshold property instead"")\r\npublic float FacingThreshold\r\n{\r\n}\r\n'"
6960,363462015,b'nit: while here can you switch to using =>\r\ni.e\r\n```\r\nget => facingCameraTrackingThreshold;\r\nset => facingCameraTrackingThreshold = value;\r\n```'
6960,363462622,"b'I think a basic test would be test starting below the threshold, crossing it, and then crossing back below the threshold. And between these changes validate that the solver positions the object at the expected different places (in this case hand vs camera following)'"
6960,363463637,"b'nit: Reminder once you create the public properties, use those here and not the private instances'"
6960,363464556,b'i feel like here and below should be \r\n`else if (rotationBehavior == SolverRotationBehavior.LookAtMainCamera)`\r\n?\r\nnot sure yet what result should be when SolverRotationBehavior.None?'
6977,363493024,"b""@julenka sorry somehow missed this comment. I left the MathUtilities because you don't require a camera with that. I guess I could have tried to re-write the MathUtilities to calculate a projection matrix from the fov and properties and then do the multiplication...but didn't want to mess with that"""
6988,363533559,"b""Should we have documentation or comments on what happens if a profile isn't given but is required?"""
6988,363534072,b'This seems mostly identical to \r\n`BaseDataProviderServiceInspector .ApplyProviderConfiguration`?'
6988,363534119,"b""Also doesn't seem to be used anywhere in this change?"""
6988,363534481,b'Suggestion: move this if check to a dedicated function in the base class inspector?\r\nIsProfileRequired or IsProfileMissing(attribue)?'
6988,363534632,b'Also do we care about enforcing this at runtime?'
6988,363540778,b'Comments concern:\r\nI am thinking more as a person who is reading the documentation and leveraging this attribute. A remark saying what I should do if a profile is null or not provided but I require it would be helpful. Guidance on how should I fail\r\n\r\nEnforcement:\r\nEnforcement at runtime could be done at registration whether by the data provider class itself (which we could maybe put in a base class) or by the service registering the data provider (like the Input System)'
6988,363541257,b'Like SceneTransitionService would just fail it looks like with a null exception\r\n```\r\n/// <inheritdoc />\r\n        public override void Initialize()\r\n        {\r\n            UseFadeColor = sceneTransitionServiceProfile.UseFadeColor;\r\n            FadeColor = sceneTransitionServiceProfile.FadeColor;\r\n            FadeInTime = sceneTransitionServiceProfile.FadeInTime;\r\n            FadeOutTime = sceneTransitionServiceProfile.FadeOutTime;\r\n            FadeTargets = sceneTransitionServiceProfile.FadeTargets;\r\n        }\r\n```\r\n\r\nThus we could add in like the base dataprovider/extension service class a check in the constructor if I require a profile but the one given was null'
6988,363541284,b'Just a thought to consider'
6822,363544104,"b""@keveleigh  True indeed. I know it's every frame, but the two key pieces for me of having minimal impact\r\n1) it's a struct, so on the stack and not on the heap. Thus no GC, basically like allocating some primitives in a function\r\n2) It does not execute begin/end() so computation is does nothing but be allocated on the stack. \r\n\r\nI went with the auto because I like the scoping nature of it. Of course, in the future, probably best practice will be to do the following so get best of both worlds\r\n\r\n```csharp\r\nProfileMarker.Begin();\r\n{\r\n....\r\n}\r\nProfileMarker.End();\r\n```"""
7016,364890269,"b'I agree with Julia, feels more like feature creep for the IMixedRealityPointer interface. \r\n\r\nBut it does seem like this would be good in a base class for PokePointer and SpherePointer'"
7016,364891002,b'This would also be good to simplify with base class shared between the two'
7016,364893793,b'I feel like this is complicated enough to be in a utility class by itself?\r\n\r\nOther thing that comes up is concurrency. I think....we are fine because Unity restricts all calls to the main thread and this is an extension of Camera. So this should force all calls to IsInFOVConeCached to be serialized and thus not possible for two threads to be accessing the static resources concurrently. Thoughts?\r\n'
7016,364894983,"b'Remove ""Sphere pointer query instances""\r\n\r\n// List of corners of bounds box for current collider being processed in IsInFOVConeCached\r\n// Shared and static to avoid allocating additional memory each frame'"
7016,364895167,"b""Suggestion: I'd also rename to boundsCornerPoints to just be explicit and easier reading"""
7016,364895790,"b'minor nit: make else if (colliderCache.Try) \r\nIf we clear the cache, then we know there is no point in trying to test access'"
7016,364904995,b'Seems like left over comment?'
7012,365015099,"b'The existing bug here is that Handedness is both controlled via it\'s setter and via the Controller public property. This is a conflict because it doesn\'t make sense that Handedness is both the value I should synchronize with as well as my current handedness. \r\n\r\nFor example, I could set handedness in inspector to left and then this is completely ignored by setting Controller property to the right one. Furthermore, I could then set Handedness to value Left again....even though I am assigned to the right controller.\r\n\r\nThus, either this becomes \r\na) only a getter saying ""hey I am currently this handedness"" (which is current solution in this PR)\r\nor\r\nb) The Handedness property has a setter which is validated throughout the class (i.e you can\'t assign a Controller that has an invalid handedness)\r\n\r\n@julenka  / @keveleigh thoughts on A vs B?'"
7012,365015870,"b""Doesn't that seem weird to force it on the user? PointerName is at least assigned/controlled by the consumer. """
7012,365016146,b'See other comment'
7012,365016273,"b""It's not removed. It's executed via `base.Controller = value` inside of BaseControllerPointer"""
7012,365016393,"b'Exactly, you have to have pointers if you are using Controller Ray'"
7012,365016868,"b""Furthermore, I could set Handedness to Any and then Controller property sets it to Right. \r\nOriginally, if I set Controller to null (which is done in the input system), then the handedness would still be Right...not Any which is what I had set in the inspector.\r\n\r\nThe lifetime of this property isn't properly managed so we need to go with either A or B above...or if you guys can provide a third option"""
7016,365019829,"b""Very true, base classes impede performance and sometimes code maintainability.\r\n\r\nAlternative suggestion...to just consider...because I myself am not sure it's better/good. Why not create a new interface, like IFOVChecker? \r\n\r\nJust a thought """
7012,365032059,"b""I could mark it as obsolete...but it's a private field so I don't see how people could leverage it?"""
7006,365382062,b'Wrap around\r\nusing (new  EditorGUI.DisabledGroupScope(EditorApplication.isPlaying || EditorApplication.isPaused))\r\n{\r\n...\r\n}'
7006,365382830,b'Also can look at TypeExtensions.GetAllSubClassesOf() option. I think for your purposes that should work here?'
7006,365384190,b'Maybe TryAddSelection or EnsureSelectionInMap etc?\r\nReading this first time through makes it seem like we are adding something every draw update when Selection is not null'
7006,365384313,b'nit: save as const variable'
7006,365384636,b'suggestion: use ScrollViewScope() to mark content that is scrolling\r\nhttps://docs.unity3d.com/ScriptReference/EditorGUILayout.ScrollViewScope-ctor.html'
7006,365384833,"b""nit: horizontal isn't used?"""
7006,365384938,b'Another sue for DisableGroupScope() which ensures cleanup'
7012,365948365,"b'I just deprecated for now, but it at bottom of class'"
7018,365983219,"b'No, one is a right click of the mouse and the other is from the top tab bar'"
7018,365983697,b'hmmm good call. The TryMigrateReference should be attempted/taken care of before the inspector try repair code executes. \r\n\r\nBut I guess we could add a TryMigrateReference there? or vice versa of making a check for the class during serialziation'
7045,365987630,"b'Also maybe even elaborate to ""Say \\""Toggle Profiler\\"" to show/hide""? '"
7018,366031193,"b""I guess it's not necessary but seems severe to remove from this PR and create a whole separate one for it and issue item"""
7018,366032422,"b'hmmm, I mean the original implementation was hardcoded as well. \r\n\r\nBut it is a good point to consider the flexibility of this new design. One could argue that the SimulatedArticulatedHandposes are a custom cache implementation and thus someone could create their own just like it...they would just have to update the other service implementations as well.\r\n\r\nI could look at adding accessors to SimulatedArticulatedHandposes '"
7018,366032931,"b""100. Especially it was annoying for keyboards that aren't US based. You can re-route input keys in Unity I believe and the input simulation profile but I can't recall how extensive it is"""
7016,366998409,b'Just double check this was intentional'
7016,366999194,"b'nit: Feel free to ignore this for now. But should use IgnoreCollidersNotInFOV public property instead of private, to be consistent with access to private variables in case the getter/setter does particular code check etcs'"
7016,367000219,b'Why is the testCamera done twice but not the second camera?'
7016,367000367,b'nit: Test comments explaining what tests do'
7016,367000841,b'Can you rename this? Not understanding viewofview'
7016,367000904,b'maybe meant FieldOfView?'
7016,367001452,"b""Since you arent' creating an interface or base class, maybe add else statement here that throws error saying test helper isn't valid for this type of pointer? To help notify people who might try to use this in future"""
7016,367002272,b'```suggestion\r\n            if (myCollider.bounds.size == Vector3.zero || myCollider.transform.localScale == Vector3.zero)\r\n```'
7016,367002588,"b'btw, should these be floating point margin of error comparison instead of exact comparison to zero?'"
7006,367011658,b'nit: file name should be MigrationToolTest**s**.cs.meta?'
7006,367012332,"b'nit: to keep with convention of docs\r\n\r\n```suggestion\r\nTo open the window, select *Mixed Reality Toolkit* > *Utilities* > *Migration Window*. Once the migration window is open, the selection mode navigation tabs can be enabled by choosing the component specific implementation of the migration handler.  \r\n```'"
7006,367012581,"b""nit: can't this be ../Images/blah? same with others"""
7006,367012912,b'I would also consider adding \r\n\r\n## See also\r\n\r\nsection with maybe links to our upgrade guide or latest mrtk release etc'
7006,367013671,b'```suggestion\r\n        public List<Type> MigrationHandlerTypes => new List<Type>(migrationHandlerTypes);\r\n```'
7006,367013816,b'```suggestion\r\n        public List<Object> MigrationObjects => new List<Object>(migrationObjects);\r\n```'
7006,367014117,b'nit: move private functions below public functions'
7006,367015048,b'REmove?'
1920,179917524,"b""Is rather see ya move away from it because it's caused us too much pain in the past, and the manager system is supposed to be the way forward. It'll reduce confusion and promote adoption of the system when people try to add to it."""
2020,184417856,b'should be 6'
2428,201957066,b'Also ensure to take in the changes to the BillBoard script'
2428,201519804,"b'Editors cannot exist inside a runtime script. They must be broken out in to their own files in the inspectors folder.\r\n""/Assets/MixedRealityToolkit/_Core/Inspectors ""'"
2428,201520570,"b'Is there a reason why we are introducing so many static functions?\r\nIf there is need for a single instance of the script, then it should probably be a runtime component.\r\n\r\nCan we clarify why these need to be static @Cameron-Micka ?'"
2428,201525268,"b'None of these ""need"" to be static. I just like to mark them static to hint to other programmers that these functions will likely only operate on what is passed in, or other static members. It\'s also probably a premature optimization haha.'"
2428,201526654,"b""I can certainly do this but, I probably won't have time until next week."""
2428,201630996,"b'Ok, can we change these back to non-static and we can review as required @keveleigh '"
2428,201631531,"b""It's ok @Cameron-Micka , it's for the vNext PR only.  @keveleigh , I'll send you a PR with the updates. (benefits of being ahead of time :D)"""
2428,201711339,"b""O think it makes sense that they're statics seeing as we only have three lights to work with at any time."""
2428,201727459,"b'Already removed the statics in the PR @StephenHodgson, also note these are private statics.\r\nLets review once this starts getting used, unless you feel the statics should remain?'"
2428,201955899,"b""Change to c# 6 auto property :D (example in the old PR)\r\n```public float Radius => radius;```\r\n\r\nAlso change ordering of fields, Public and then private\r\nSame changes for Color property\r\n(Note, you'll need to change the use of the public properties inside the script to use the private ones)"""
2428,201956480,"b""As PR cancelled, ensure to move the Editor code to it's own class"""
2428,202106931,b'Why did this get reverted?'
2428,202106969,b'Why did this get reverted?'
2428,202107174,"b""Let's make this a const string seeing as we use it in multiple places.\r\n\r\nWe could do the same of for all the keywords."""
2428,202109152,"b""if we are using it externally, let's make it a static readonly string so that the reference is fetched and not the literal constant."""
2428,202109545,"b'This is based on the changes that went into Dev_Working_Branch and back into june18_dev. Part of the gap analysis / keeping things in sync. If this change is incorrect, we should definitely fix it here and in june18_dev.'"
2428,202113679,b'This string is only used by this file at the moment! '
2428,202114662,b'Please remove compiler directive in favor of checking for `Application.isEditor`'
2428,202184430,b'Is an essentially empty Update loop really better than a compiler directive?'
2428,202534569,"b'Personally, considering this is ONLY required in the editor, a compiler directive is better than an if, ensures it is not run and no performance check when running in prod'"
2059,187124360,"b'Same again, should be in definitions.  In a subfolder if need be.'"
2059,187160871,"b""I don't agree with moving these out of the related namespaces"""
2948,228379762,"b'```suggestion\r\n            Debug.Log($""Attempting to uninstall {packageName} on {targetDevice.MachineName}..."");\r\n```'"
4404,285783461,"b'>com.microsoft.mixedrealitytoolkit [](start = 10, length = 33)\r\n\r\nIf we are going with this name pattern\r\n, we should name this ""com.microsoft.mixedreality.toolkit""'"
4404,287060555,"b""I'll change this and update the PR when I get a chance"""
4404,288647482,b'Package.json files updated'
4616,300037108,"b""It would be good to get in sync on keywords, author information and unity versions. Please see my package.json [here](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/feature/virtUnityPack/Assets/package.json). 2018.4 stable is the minimum recommended version in the [Getting Started](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/GettingStartedWithTheMRTK.html) guide. In my file I used the same keywords currently used by the MRTK [Project](https://github.com/microsoft/MixedRealityToolkit-Unity) itself. I'm not saying any set of keywords is better (and in fact they probably don't really matter) but it would be good to have them in sync across PRs. Same with contact information. I wasn't aware that e-mail address is optional. We can probably just leave that off, but it would be good to set the URL."""
5876,320889753,b'Please move items to the appropriate existing MRTK.* folder. There is a documentation folder that would be great to have a how to setup MRTK project for mobile page :)'
5876,320891248,b'```suggestion\r\n# Mobile Devices SDK (Android / iPhone)\r\n```'
5876,320892516,b'We should consider in which folder these components belong. Quite possibly many should be folded into the MixedRealityToolkit.* folders.'
5876,320889986,b'Same here. Please move to the  MRTK.Examples folder'
5876,320890084,b'Please use MRTK namespaces'
5876,320891140,b'please remove _ for private variables. Not consistent with rest of codebase'
5876,320891766,b'I believe this should be Object.Destroy?'
3221,238870936,b'@mr0ng is there any way we can use the built in json serializer for our needs?'
2839,221056643,"b""For now, let's try to keep it just to documentation."""
2839,226834286,"b'We shouldn\'t be using Singleton. Please update this to use a `IMixedRealityNetworkingSystem` that inherits from `IMixedRealityService`. Then register it in the ""Additional Service Providers Profile""'"
2839,226834295,b'Whoa? Send Message?'
2839,226834316,"b""Let's have a `None = 0,` initializer"""
3221,238872044,"b""@mr0ng let's also get rid of this and replace whatever uses it with a `IMixedRealityNetworkingSystem`"""
1884,185677484,b'![image](https://user-images.githubusercontent.com/3580640/39555771-8f21d3ae-4e30-11e8-9933-bbb02f6bf052.png)\r\n'
4840,292658182,b'We should hold off on checkthing this in until asa is also insured to work.'
4035,281065343,b'Reminder to delete this file and everything else under TemporaryTesting before checking in. '
4035,281065413,b'And then put something similar in a unit test so the behavior does not break in the future :-). Can be done in separate PR.'
4035,281832399,b'Removed.'
2513,206291214,"b'Is Text Mesh Pro being checked in as an option (and all our components will also work with Unity text) or as the way the Toolkit does text? Seems like something not everybody needs, and would add dependencies to anybody who wants to use our UI/UX text components when Unity text would suffice. Not a huge fan of that being added.'"
2513,206293766,"b""I very much disagree. The quality different in TMP vs default unity text in VR/AR is quite astonishing. Using SDF should be the industry standard.\r\n\r\nSeeing as TMP is supposed to replace the old text renderers, (It's been depreciated) and TMP is a default asset with Unity now, and its ease to put into projects via the package manager makes it ideal.\r\n\r\nI'm not suggesting we put it in the SDK or Core components, but we should def be using it for our demo, tutorial, and example scenes."""
2513,206297141,"b'We should definitely not be including it in the SDK / Core (we want those as light as possible). \r\n\r\nI can see the value of using it in the examples.\r\n\r\n@StephenHodgson, how is it being included? Are we checking it into the examples tree? If so, does their license allow that?'"
2513,206299425,"b""It's owned by Unity. Not sure if a license is required if you're using the editor to begin with."""
2513,206299625,"b'> Are we checking it into the examples tree? \r\n\r\nAs stated in https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/2513#issuecomment-408679429, I put them in the default download location that the package manager prompts you to place them.'"
2513,206300237,"b""> I put them in the default download location that the package manager prompts you to place them.\r\n\r\nSorry, not sure if I am reading this right... does this mean the files are checked in? Or do they get automatically added somehow.\r\n\r\n> It's owned by Unity. Not sure if a license is required if you're using the editor to begin with.\r\n\r\nI am concerned with the license to redist the package."""
2513,206301353,"b'[A relevant forum thread](https://forum.unity.com/threads/text-mesh-pro-integrated-into-unity-core.518414/). \r\n\r\n> At some point the old Text component and Text Mesh will be deprecated but that will come after the new text system / components are available.\r\n\r\n[Here\'s another](https://forum.unity.com/threads/textmesh-pro-unity-2018-1.511748/).\r\n\r\n>As per the title and assuming all goes well, a new version of TextMesh Pro will be included by default in Unity 2018.1.\r\n\r\n[Later on in the thread](https://forum.unity.com/threads/textmesh-pro-unity-2018-1.511748/page-5#post-3568319) it\'s confirmed that 2018.2 has the TMP assets by default.\r\n\r\n>With Unity 2018.2, the TextMesh Pro UPM package is included by default. However, the TMP Essential Resources are not imported / added to a user project until first use and consent of the user. Alternatively, a user can manually import the TMP Essential Resources via the ""Window - TextMeshPro - Import TMP Essential Resources"" menu.'"
2513,206302957,"b"">I am concerned with the license to redist the package.\r\n\r\nThis is a good point. I suppose it doesn't hurt to remove the TMP assets from the project itself and let users download on their own when prompted. Instead I'll just make the folder ignored in git. Sound good?"""
2513,206307453,"b""Agreed.  Reference and even prompt people to download it, but don't actually include it.\r\nIn 2018.2, we can solve this better by adding it as a dependant package"""
2513,206308268,"b""> In 2018.2, we can solve this better by adding it as a dependent package\r\n\r\nIt's already in the editor in 2018.2, and installed. So no worries there."""
8088,447124247,"b""These removed loader changes should be reverted. I think they're the WMR ones, so it'll break running on that platform."""
5068,297883520,b'Is it possible to pass this via our msbuild scripts instead of adding this file?'
5068,297884291,"b'It is, though this means that people will catch this at PR CI time, rather than in their inner loop.'"
5068,297884862,b'https://www.reddit.com/r/Unity3D/comments/adfxna/unity_developer/'
3452,259065574,"b""What's this file for? Can it live inside any MRTK folder, or does it have to be at the Assets root?"""
3452,259105843,b'i can delete this. its auto generated for android builds if i remember correctly'
5274,302312878,"b""```suggestion\r\n    If your application doesn't use some specific services (for example, if teleportation system is\r\n```"""
6344,338167820,b'Is this still correct?'
6344,338169629,b'it is not. i will remove'
8058,445253531,b'Line endings change or something?'
8058,445682591,"b'i had deleted it in a previous commit, then re-added from the mrtk_development branch. Not sure what GH is flagging here.'"
5179,299725056,"b'```suggestion\r\n  ""description"": ""MRTK virtual package."",\r\n```'"
5179,299725172,b'I wonder if this should be an MRTK team email address?'
5179,299725281,"b'```suggestion\r\n\t""mixedrealitytoolkit-unity"",\r\n```'"
5179,299725783,"b'Is this / should this PR be related to #4616?\r\nCommenting specifically on the name, since there was some discussion either on that or an earlier version on naming conventions'"
5179,299726082,"b""I can't find that discussion at the moment though. Maybe @andreiborodin remembers?"""
5179,300016834,"b""Thanks for catching this @keveleigh. This looks like a great fix and I'm trying to accept it, but I'm getting this error:\r\n\r\n![image](https://user-images.githubusercontent.com/5230670/60603775-ff396300-9d7b-11e9-9b20-7283ab5322c4.png)\r\n\r\nI'm wondering if it's because of where I created the branch? When I went to commit this branch to source control I got an error about needing to do a pull request instead, but all of the files were actually pushed up into the branch. I'm wondering if this error about not being able to apply the suggestion is somehow due to a DevOps rule?"""
5179,300017380,"b""Yes, I agree. I reached out to @wiwei on this yesterday and asked what e-mail to use. He said there wasn't a public one for MRTK but he was going to bring it up in an internal thread. I'd be happy to change this to whatever the team feels it should be."""
5179,300017795,b'Same issue as above. I cannot commit the change.'
5179,300021862,"b'Confirmed. This is because it\'s a ""protected branch"".\r\n\r\n![image](https://user-images.githubusercontent.com/5230670/60604439-4e33c800-9d7d-11e9-880f-bb2df47c3dc2.png)\r\n\r\n@keveleigh or @davidkline-ms any idea why I was able to create this branch and push to it, but now I can\'t update it? I see lots of feature branches. Do I just not have the right permissions as a contributor or how should we move forward?'"
5179,300024209,"b'@keveleigh Good point. This is very very similar to #4616. This PR is intended to allow you to easily bring MRTK pulled down from GitHub into a Unity project. It appears #4616 is about packaging MRTK up as a UPM for distribution, but I _think_ it could work the same way. I will start a question over there and see what comes of it.'"
5179,300062595,b'Turns out e-mail address is optional. I missed that in the schema definition. I just removed the address altogether.'
5179,300063335,"b'I have updated the package name based on my comments on 4616 [here](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4616#issuecomment-508151668). Assuming you guys agee with that approach, I believe this is resolved.'"
8232,465363497,"b'```suggestion\r\n     },\r\n```'"
3159,234750258,b'What is this scene?'
3159,234750920,b'a mistake. sorry'
3159,234751499,b'nice catch! thanks :)'
3090,231515893,"b""If this feature is complete, then shouldn't continue to have a branch. Last I checked it made it back into development."""
3090,231518668,"b'rofl, the old feature was ""complete"" this is a ""new"" feature to complement the ""other"" feature.\r\nBut I can\'t comment on those ""features"" only document them.'"
3089,231639044,b'This branch is not frozen. We are taking key customer fixes and releasing as needed.'
3089,231639581,"b'This list will quickly go out of date. It may be advisable to show an example of how feature branches work here.\r\n\r\nOtherwise, this file will need to be modified whenever a branch is added or deleted -- an easy task to forget.'"
3089,231639789,"b'BTW, the planes branch is attributed to the wrong dev :)'"
3089,231678289,"b""So what is your suggestion exactly?  I simply listed the current branches as examples, doesn't need to be an exhaustive list and we can update this list from time to time with large pieces of work.\r\n\r\nI've added a statement to say these are examples and reduced the number of features listed to just the main ones."""
3089,231681095,"b'Perhaps have one that does not actually exist, but serves as an example of the pattern we use for feature branches. \r\n\r\nNot sure if it needs to list owners. Those may change or be more than one person.\r\n'"
3089,232392610,b'```suggestion\r\n* [feature/sharing_photon_preview](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/feature/sharing_photon_preview) - Photon Based networking / sharing solution\r\n```\r\n\r\nPer our conversation today in the MRTK Sharing Meeting'
3090,232392881,b'```suggestion\r\n* [feature/sharing_photon_preview](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/feature/sharing_photon_preview) - (@Sean0ng) Photon Based networking / sharing solution\r\n```\r\n\r\nPer our MRTK Sharing Meeting'
1193,145522467,"b""How come we moved this?\r\n\r\nAlso, some of these changes haven't happened yet, like the HoloToolkit->MixedRealityToolkit folder rename."""
1193,145523200,"b""In it's own file for now\r\n"""
1193,145523645,b'Can we rename the header to Upcoming Breaking changes to match the section title when it was on the mainpage?'
2896,223880506,"b""This looks like an **awesome** solution for leaving the code inside Unity for development, but still delivering it as DLLs. We've currently been keeping the code outside in a more standard Visual Studio project and then having the DLLs copy to Unity, but that's been a troublesome workflow for debugging the code while testing in Unity.\r\n\r\nYay!"""
2896,223894867,"b""I highly recommend, but there are definitely some caveats we'll have to work through. We can talk in person about some of the shortfalls I've hit, or likely you'll see me having to address them in future PRs :) """
2896,224136781,b'As you brought up in the teams this has an unfortunate issue with asset linking to code by script reference.\r\n\r\nWe may be able to use the workflow where the code lives outside of Unity and built to DLLs and placed in the Unity project if we can get debugging to work more easily.'
2896,225396446,"b""Seems like this scheme is fundamentally broken without fixing the script issue. Is that ok for this PR since you're just moving changes into the feature branch?"""
7275,378039418,b'nit: inheritdoc'
7275,378040211,b'Suggestion: Maybe add another test that loads HandInteractionExampleScene and then switchs the active profile from HL2 to DefaultMRTK or something? Should be simple to write up and will cover over many components'
7275,380888065,"b""@wiwei I don't think this is applicable? The linked cs file you have is the FacadeHandler. \r\n\r\nMRTK.cs uses MixedRealityServiceRegistry which sorts the services on registeration.\r\n\r\nDo we care if the FacadeHandler renders/handles services in any order?"""
7412,384684412,"b'```suggestion\r\nTap to Place is a far interaction component that is used to place a game object on surface. This component is useful for placing objects on a spatial mesh. Tap to Place uses a combination of two clicks and head movement to place an object. A click to start the placement, head movement to control the position of the object and a click to place the object in the scene.\r\n```'"
7412,384684605,b'this should be an xref for the hyperlink [Tap to Place](xref:...)'
7412,384684939,b'xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler\r\nreplace with namespace of taptoplace'
7412,384687387,b'Add IMPORTANT note that TapToPlace requires MRTK input system'
7412,384687626,b'```suggestion\r\n    - Add MRTK to the scene by navigating to the **Mixed Reality Toolkit** > **Add to Scene and Configure**\r\n```'
7412,384688106,b'make this important. Also explain why it has to be standalone. Solvers are generally designed to be chained. But I see this one controls SolverHandler.UpdateSolvers'
7412,384688646,b'```suggestion\r\nTap to Place object selection timing can also be controlled via `StartPlacement()` and `StopPlacement()` instead of requiring a click event. This capability is useful for writing tests and provides an alternative method to place an object in editor without using the MRTK Input system. \r\n```'
7412,384688972,b'see section below for controlling TapToPlace without clicks driven by the MRTK input system'
7412,384689557,b'```suggestion\r\n        private GameObject cube;\r\n```'
7412,384689651,b'```suggestion\r\n        private TapToPlace tapToPlace;\r\n```'
7412,384689854,"b'```suggestion\r\n1. In play mode, press the *U key* to start placing the cube\r\n```'"
7412,384689944,b'```suggestion\r\n1. Press the *I key* to stop the placement\r\n```'
7412,384690330,b'I would also add spatial awareness'
7412,384691260,"b'```suggestion\r\n        - `Auto Start`: If true, the Tap to Place solver will start out controlling the position of the gameobject to be placed.  The object will immediately start following the TrackedTargetType (Head or Controller Ray). This value must be modified before Start() is invoked in order to have any effect.\r\n```'"
7412,384691922,b'and maybe input simulation'
7412,384692785,"b'I am tempted to say remove the WASD keys/controlling head movement. Maybe just reference the input simulation page. If things change or the user has changed their project, this just seems another area that would have to be updated and may be invalidated. '"
7460,386552517,"b""It's primarily utilized via the InteractableThemeBase class"""
7468,386725533,"b'I believe right now, HasFlag will always be true for None. \r\n\r\nI think larger question is if this function/profile should even accept None as a valid input? @keveleigh thoughts?'"
7477,387351395,"b""Not sure understanding why this is necessary? Seems like UpdateGazeProvider() won't be called at all if gazeProviderPointingData or it's pointer is null? See L 542 above"""
7477,387366427,"b""Sure, and I guess I would say two things.\r\n\r\n1) Remove the gazeProviderPointingData null check that is wrapped around the call to UpdateGazeProvider()\r\n\r\n2) Concerning Julia's point, I feel like there are a lot of items that could be null in FocusProvider (as well as of course in almost every component) and adding a null check test for just one doesn't seem like it delivers a lot. It would be better to add test holistically and maybe even for the items we expect likely will be null in some instance"""
7480,387371732,b'Need to flip these'
7458,390028532,"b'Consider making each of the GameObject references, just Interactable references instead?'"
7458,390028764,b'CameraCache?'
7458,390029083,"b""nit: foundGuid doesn't seem necessary, can't you just check closestGuid != empty/default?"""
7458,390029284,b'null check here in case user switches prefab'
7458,390029767,b'Simplify with\r\nCoreServices.GetSpatialAwarenessSystemDataProvider<IMixedRealitySpatialAwarenessSceneUnderstandingObserver>()?'
7458,390029863,b'nit: mark all of these as private or protected to keep with convention of codebase'
7458,390030690,b'@keveleigh / @davidkline-ms should csproj files be commited to MRTK?'
7458,390030837,"b'Can you add a comment to the class name describing what it is and what it does, how it works, etc'"
7458,390031120,"b'Nit: to PR authors and others, @keveleigh @davidkline-ms  @julenka  etc, what do people think about simplifying\r\nWindowsMixedRealitySpatialAwarenessSceneUnderstandingObserver\r\nto\r\nWMRSpatialAwarenessSceneUnderstandingObserver ? \r\n\r\nI know other components outline ""WindowsMixedReality"" but this is a super long class name'"
7458,390031242,b'nit: /// <inheritdoc />'
7458,390031315,b'nit: remove'
7458,390031396,b'nit: remove'
7458,390031567,b'nit: remove'
7458,390031748,b'nit: remove'
7458,390031809,b'nit: remove'
7458,390032113,b'nit: remove'
7458,390032317,b'unnecessary?'
7458,390032351,b'nit: remove'
7458,390032465,b'nit: can you put all of the private variables together near top of class below public properties to match convention of code base?'
7458,390033006,b'This seems like something that could be configured by user in profile?'
7458,390033761,b'Can you add comment here elaborating difference between BaseSpatialObserver and BaseSpatialSceneObserver ?'
7458,390034319,"b""In general, don't paste full links in documentation. Add them as hyperlinks to augment existing explanations such as in your intro"""
7458,390034915,"b""Maybe elaborate further. As an example, the SU observer can provide simplified planes to represent walls, floors, etc identified in an environment at runtime. Or something to that attestment to bring it down to layman's terms. Also, I would recommending making the beginning\r\n\r\nSpatial Understanding will return a semantic...."""
7458,390034955,"b'""SU as a MRTK"" doesn\'t make sense'"
7458,390035456,b'```suggestion\r\nThis example script uses MRTK UI to toggle service features on the Spatial Understanding observer.\r\n```'
7458,390035530,"b'```suggestion\r\nTurning on *Instantiate Prefabs*, will demonstrate creating objects that size to fit themselves to all Scene Objects, gathered neatly under a parent object.\r\n```'"
7458,390035610,"b'unnecessary, re-explained below'"
7458,390036089,b'It would be helpful to add code snippets for someone getting started. The example scene is very useful but what are the simple lines of code to even get basic access to the observer/system. Maybe like Golden path/typical path scenario with code snippets. See following as example\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/SpatialAwareness/UsageGuide.html'
7458,390036253,b'It would also be good to callout the key platform classes to utilize like IMixedRealitySpatialAwarenessSceneUnderstandingObserver  and add an xref so people are linked to the documentation page for the class/interface'
7458,390036581,b'A better place would be to add direct links in a See also section at the bottom of the article. See other MRTK doc pages as an example'
7458,390036854,b'I would remove this as the PR will eventually merge soon. '
7458,390037315,"b'add hyperlink to [device portal](https://docs.microsoft.com/en-us/windows/mixed-reality/using-the-windows-device-portal)\r\n\r\n""accessed through the file explorer under the [device portal] (hyperlink)""\r\n\r\nThese "".bytes"" files can be utilized in editor by specifying them in the scene understanding observer profile in inspector'"
7458,390037609,"b'In general, it is best to avoid informal you, instead say things like One should hear a spatial sound....etc'"
7458,390037813,b'I would also emphasize early on that the current experimental feature only works on HL1/HL2 or just HL2 etc'
7458,390037944,"b""end of sentence doesn't make sense"""
7458,390038038,b'SU observer and Scene Objects => reference classes directly'
7458,390038323,"b'This seems like a dangerous thing to say? @davidkline-ms \r\n\r\nespecially since this is designed for HL2 and not other platforms as well as does not elaborate on how, when or in what what this will replace the existing system'"
7458,390038964,"b""if this isn't used in base implementation, then why is it added to the interface? MRTK has gotten bitten a few times by declaring items in interfaces/public definitions and then not needing it/having to clean it up. \r\nnit: if keeping, add inherit doc as well as simplify. I believe this should work\r\npublic bool UpdateOnLoad\r\n{\r\nget => throw new NotImplementedException();\r\nset => throw new NotImplementedException();\r\n}"""
7458,390039228,"b'These and other items, include inheritdoc so they show up in documentation'"
7458,390039367,b'nit: is this supposed to be IMixedRealityService?'
7458,390039550,b'Can you add comment of what this interface is for?'
7516,390685767,"b'Looks good. I would again recommend updating MRTK documentation and possibly add link to this error message as well. ""For more info see {blah}""'"
7525,391810045,b'I think @davidkline-ms  is saying make a new enum like\r\nMRConfig.OptimalRenderingPath \r\n\r\nand then these get/set would do the appropriate android macro checking\r\nand deprecrate the MRConfig.SingelPassInstancing. which yes you can put obsolete tag under just that item in the enum'
7525,391810890,"b'per comment above, change to \r\n\r\n{ Configurations.OptimalRenderingPath, new CONfigGetter(() =>\r\n{\r\nif Android\r\ndo blah\r\nelse\r\ndo regular\r\nendif\r\n}};'"
7525,391811334,b'I would also change this to \r\nRenderOptimalRenderingSection or DrawOptimalRenderingPathSection etc'
7529,391941298,b'add WindowsMixedRealityDeviceManager and other xref?'
7529,391941616,"b'why remove the ""requires extensions package"" bit?'"
7529,391942496,"b'This actually contradicts with coding guidelines page. Cntrl+F ""AddComponentMenu"" in this PR\r\nOne uses ""MRTK/blah"" while this uses ""Mixed Reality Toolkit/blah""'"
7529,391942843,b'nice find!'
7529,391943411,b'nit: \r\ndefault `GrabPointer` (Assets/MRTK/SDK/Features/UX/Prefabs/Pointers) prefab \r\ndefault `GrabPointer` prefab (Assets/MRTK/SDK/Features/UX/Prefabs/Pointers) \r\n'
7529,391943581,b'nit: \r\n```suggestion\r\nThe `PointerResultExample` scene (Assets/MRTK/Examples/Demos/Input/Scenes/PointerResult/PointerResultExample.unity) shows how to use the pointer [`Result`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer.Result) to spawn an object at the hit location.\r\n```'
7529,391943780,"b'Love that you were using the forward slash for paths everywhere to be consistent and ""cross platform"". Does the forward slash not work in markdown tables?'"
7529,391943929,b'nit: switch to forward slash'
7529,391944525,"b'```suggestion\r\nPerformant plane, sphere, and box shape clipping with the ability to specify which side of the primitive to clip against (inside or outside). You can find a scene that demonstrates advanced usage of clipping primitives in the  **ClippingExamples** scene under `MRTK/Examples/Demos/StandardShader/Scenes`.\r\n```'"
7529,391944849,b'why keep this hyperlink when you just used ( path to folder/file ) format in all others?'
7529,391944900,b'xref?'
7529,391945058,b'```suggestion\r\nOpen-source fonts (Assets/MRTK/Core/StandardAssets/Fonts) included in Mixed Reality Toolkit.\r\n```'
7529,391945091,b'```suggestion\r\n3D Text Mesh prefab (Assets/MRTK/SDK/StandardAssets/Prefabs/Text) with optimized scaling factor at 2-meter distance. (Please read the instructions below)\r\n```'
7529,391945227,"b'nit: while here, can you remove ../Documentation, redundant'"
7529,391945290,b'ToolTipConnector should these be xref?'
7529,391945458,"b'I would actually make this IMPORTANT instead of note, really emphasize it'"
7529,391945622,b'xref instead of file path?'
7529,391945743,b'xref?'
7529,391945849,b'add important note of generated folder stays same'
7531,391947596,b'This may be better suited for future PR but wanted to call out. \r\n\r\nCan you render default inspector but add the documentation button for hoverlight and proximity light to each component. Like this doc button:\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/76574509-c2307f00-6479-11ea-9802-d8d095a4ae08.png)\r\n'
7531,391948083,"b""can you add comment explaining what this should be? Since it's targeted to be extended. Same for others"""
7531,391948374,b'nit: can you remove ../../documentation and simplify to shorter path'
7531,391948588,b'does this show up correctly in VS code markdown? Intuition tells me this has to be !NOTE vs !Note from past experience that I ran into before....maybe?'
7531,391949486,"b""What are your thoughts of proposing this as add a second mechanism vs adding an array mechanism like here:\r\nhttps://stackoverflow.com/questions/59930361/mrtk-multiple-clipping-boxes-for-one-object\r\n\r\nIf someone wants multiple clip primitives, it'll be easier to scale the array then do another re-write from clipBox, clipbox2, to clipbox3."""
7531,391949750,b'nit: Can you try including all of this in the note by adding > to each line'
7540,392538418,b'```suggestion\r\n- [Best practices for converting and optimizing real-time 3D models](https://docs.microsoft.com/en-us/dynamics365/mixed-reality/import-tool/best-practices)\r\n```'
7176,395393479,"b""Hmm, not sure. Maybe project was opened in later 2018 version and just commited. I'll look at reverting"""
7176,395393823,"b""I would say paths are more user friendly and they both achieve the same result. In editor, we don't care about performance as much so there is no gain in looking up the asset faster really. """
7561,395395958,b'nit: this looks like duplicated code. Could this and other be shared in base class?'
7561,395396518,b'nit: can you remove the unnecessary ../Documentation'
7561,395396761,b'Can you actually start with a small section on what progress indicators are and the types auto-included with MRTK. Maybe pull up bits about the IProgressIndicator interface up here'
7561,395396882,b'can you add an xref hyperlink for the interface'
7561,395396927,b'yay! example code'
7561,395397029,b'nit: add hyperlinks to the C# task class for people'
7561,395397105,"b'Other minor note. In general, guidelines are to avoid use of informal you/we'"
7561,395397132,"b""I know this isn't followed everywhere unfortunately for consistency"""
7561,395397392,"b'Out of curiosity, is there a special reason this is in OnEnable vs Start/Awake?'"
1506,156544797,"b'I want to minimize dependencies, as this is just a sample, allowing users to add throwing without needing to dig through the whole input stack'"
1506,156546286,"b""This is introducing an abstract initialization step in singleton to help auto sort out dependencies between singletons.  Say you have three singletons where singleton A depends on singleton B and uses it for something in it's initialization step.  Singleton B, similarly depends on singleton C.  If initialization is done in Awake, since unity doesn't guarantee an order in which Awake is called, this could lead to singleton A being initialized first, and throwing errors, similarly with singleton B and C.  If you instead follow the practice of initializing in this function, initialization is done on demand, allowing Awake to be called in any order and initialization to be auto sorted, as long as there are no cycles in your dependency graph.  It also allows for lazy initialization of singletons."""
1506,156546477,"b'Once again, I feel it is more useful to have fewer dependencies.  I would be fine with removing the voice commands, as they are simply an added utility for HoloLens.'"
1506,156779858,"b""I don't think so.  This scene is just a touch of code showing how one should consume controller information to take advantage of throwing.  Its sample code, not a component to use elsewhere."""
1506,156780031,"b""Ok, I can see that, I'll try to pull it out to its own pull request, and we can resolve that first then finish this one."""
1506,156787046,"b""I'm confused by this.  It seems in order to 'correctly' wrap it, I would need to add a ton of #if-ed code, that is only destined to go out of date, this won't be in a version or MRTK that is intended for <2017.1."""
1506,157086202,b'Thats moved in this PR: https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/1518'
1506,157103933,b'why not!'
1506,157104311,"b'I suppose they would need to modify the script slightly.  This is intended to be used mostly in the prefab it comes in.  I have added the require component, however.'"
1518,160294455,"b'We could, but InitializeInternal is meant to solve a problem with script access ordering, which it will only do if it is used to initialize the object.  Having it be optional to include would render it useless, as certainly nobody would use it.\r\n\r\nI agree that it would be better to have had this from the start so they are used, and not empty.'"
1518,161911109,"b""Looking at this I think we want something a little more then that.  If there is no other reason to have RemoteHeadManager initialize on start then ordering, we should be able to move it's initialization to Initialize internal, as well as SharingStage and just have them both call base.Awake()."""
1518,161913126,"b""CameraCache isn't a singleton method."""
1518,161913770,"b""I've run simple tests in the editor for these changes and it runs with each of the scenes in C:\\Git\\keluecke-holotoolkit-unity\\Assets\\HoloToolkit-Examples\\Sharing\\SharingService\\Scenes"""
1518,162500629,b'I added it to Assets/HoloToolkit/Sharing/Scripts/SharingStage.cs so that it is ensured to be initialized when Assets/HoloToolkit-Examples/Sharing/SharingService/Scripts/RemoteHeadManager.cs  calls it.  Would you like it in FocusManager as well?\r\n'
1518,165482022,"b'with the u has to be a British English version, I think bot hare correct enough, my comment spell checker just flagged it.'"
1518,165496726,b'In case an object is accessed on the main thread and another thread at the same time.  Definitely not common but since we have it might as well keep the protection.'
1518,165498689,"b""It's more useful then either of them."""
1518,165498931,"b'You are welcome to add new functionality in a new PR, that is out of scope of this PR.'"
1518,165501679,"b""Only when you attempt to access the singleton does it attempt to initialize it.  AssertIsInitialized just throws an exception if it hasn't happened to load yet, even if it would once accessed.  This actually tries to Initialize it then tells you if there is one.   Similarly, IsInitialized doesn't tell you if it would be initialized once you try to use it. """
1518,165505158,b'Sounds like a bug report for unity'
1518,165505213,b'fair enough'
4810,292628945,"b""Just a key-frame animator's two cents.  Would be nice if eventually it was sent every frame but for most functionality i think once every second or even every other second would be sufficient.  There will be various forms of Lag anyway.  This issue has been on my mind for weeks and I would hate to see the need for perfect getting in the way of it functioning correctly.  I am assuming very subtle delays will be necessary.  """
4291,283431676,b'Done.'
4443,285190718,"b'One consequence of calling CreateRig again is that it will recalculate minimumScale/maximumScale (in CaptureInitialState). Because by default it is set relative to the current scale, if the scale of the object has changed from when it was initialized or SetScaleLimits is called, this will have an indirect consequence of changing the scale limits which is likely not intentional when showing/hiding elements.'"
4443,285191904,"b'It looks like this may also destroy the bounding box collider override? DestroyRig destroys cachedTargetCollider, which is set from boundsOverride in SetBoundingBoxCollider.'"
4443,287237797,b'Nit: static readonly'
4443,287238232,"b""Can't assume the center of the object is necessarily part of its geometry. You have to start with the first valid bounds and work up from there with Encapsulate."""
3928,274097067,"b""I shortened it to 'Spatial Anchors' - hopefully that fixes it."""
5444,308798301,"b'Yes, if you want to be more general about all the available tutorials then you can point to the tutorials overview page you referenced (https://docs.microsoft.com/en-us/windows/mixed-reality/tutorials). I had just removed the ""learning module"" text from that page past week. '"
697,119689270,"b""Same answer as above:\r\nThe thinking here was that the AdaptiveQuality can report numbers in any range and the AdaptiveViewport can be set to only change on a subset of them. Other systems can pick adapt to values that the AdaptiveViewport is not handling. Say at quality -5, you reduce particle count, but don't change the viewport size.\r\nIll make a better explanation of this in the file!"""
697,119689287,"b""The thinking here was that the AdaptiveQuality can report numbers in any range and the AdaptiveViewport can be set to only change on a subset of them. Other systems can pick adapt to values that the AdaptiveViewport is not handling. Say at quality -5, you reduce particle count, but don't change the viewport size.\r\nIll make a better explanation of this in the file!"""
697,119694781,b'Ill rename the properties to reflect that they are separate from the AdaptiveQuality ones.'
697,119907600,b'Added'
697,119907618,"b'Was asked to preserve the double reported from the system at this level (arguably too much precision), since this can be used for high precision captures at runtime.\r\n'"
697,119907657,b'Added'
697,119907672,b'Added'
697,119907710,b'Fixed'
697,119907761,b'Good idea. Added.'
697,119907801,b'Fixed'
697,119907823,b'Fixed'
697,119908081,"b'Yes. For some reason I thought the Clamp was left out of Mathf!\r\nFixed, thanks.'"
697,119912213,b'Good call. Updated to Queue.'
697,119912251,b'Fixed'
697,119912270,b'Nope. Fixed'
697,119912366,b'Fixed'
7057,366385562,b'Can do'
7057,366417697,b'Done'
8456,492840976,"b'@hferrone, I thought we agreed we would keep the old Getting StartedWithMRTK.md and have it say that the page has been replaced by installation.md'"
8643,493799933,"b""@hferrone, any particular reason you've chosen to use a caution tag here as opposed to an Important tag?"""
8643,493909117,"b'Yes, can you please change it? Thanks!'"
8644,493910135,"b'@hferrone Can you change this from Caution to Important, like in the other branch? '"
4965,299111301,b'SetFocusPoint takes precedence over depth buffer sharing. '
4965,299113362,b'good feedback'
4965,299135882,"b""I think I won't add this for now since ideally applications wouldn't be trying to see the stabilization plane position at runtime"""
4965,299136251,"b""@wiwei Can you clarify the ask here? I'm confused by what you mean"""
4965,299137486,b'I think the code here is more readable '
4965,299138468,b'done'
1326,150687210,"b""This works with both .Net and IL2CPP backends. There is no need for extra dll references. There shouldn't be any need to do extra setup in your project to use this. If you know of a scenario that adding this script will break let me know."""
1326,150696815,b'Updated!'
1326,150696843,b'Updated!'
1326,150696893,b'I added a comment to the class and a link to the Unity documentation.'
1326,150696912,b'Updated!'
1326,150696916,b'Updated!'
1326,150698479,"b""I'm not sure what you mean here. Can you elaborate?"""
1326,150698535,b'A search in all .cs files did not return any other references.'
1326,150699366,"b""I could also make the stub method async, but then I'll get a warning that await is not being used anywhere. If you're fine with an extra warning I can change that."""
1326,150887228,b'Actually this is not a good idea. async/await were introduces with C# 5 and require .Net 4.5+. It would be better it remained this way.'
1326,151807138,"b'Holographic remoting is still playing in the editor, where this script would be no-op. I will remove the remote desktop references from the comments.'"
3781,271551114,"b""LoadNewFile () is only loaded in the Editor mode. So, the way it's written now, the following part should never be called: \r\n`#if WINDOWS_UWP`\r\n`if (!UnityEngine.Windows.File.Exists(filename))`\r\n`...`\r\n\r\nSee UserInput_Playback.Load() -> LoadInEditor() -> LoadNewFile(...). \r\n\r\nIs `!UnityEngine.Windows.File.Exists(filename)` causing the problem?\r\n"""
3807,271946717,"b""The PanZoomBase class is consumed both by the scroll as well as the pan-and-zoom scripts. The scroll scripts don't use zoom though and hence it doesn't make sense to show this parameter in the Unity Editor. """
3807,271947078,b'Good to know . I guess then I have to start a larger cleanup.'
3807,271948097,"b""Nah, this is a valid ask. We were thinking of moving these over to core at some point as they seem to be useful to the community. I'll update it. """
3807,271952025,b'Quick follow up question: Entirely lowercase? Or just the beginning of the name lowercase?'
3986,276028284,"b'Yeah sorry, that snug in :/'"
4032,278348657,b'+1'
4032,278350664,b'I noticed that there were a few incorrect name refs in that doc. Will also check the other ones again!'
4427,284849423,"b'Hm, the order is a bit weird. Maybe we should address the initial things to check in the Unity Editor first, then VS, then the generic hint that the user has to be calibrated. By the way, statement number 3 sounds like that you must calibrate via System Settings, which is incorrect. The calibration should be automatically triggered once a new user puts on the device. Only in case the user skipped that step for some reason, they would need to call it up via System Settings.'"
4427,284876939,"b'Yeah, I understood where you\'re coming from. We could have two sections: 1. Assuming you start out with our default setup. 2. ""Troubleshoot"" section: ""What to check if your Eye Targeting isn\'t working?"" '"
4626,290409896,"b""Hm, weird, yes - I don't remember changing that. Odd. So, which namespace are we using then? Stay with .Input?"""
4626,290410239,b'Good catch - will check!'
4626,290417841,"b'Tested it and yes, this is not required anymore. Move the update to OnLookAt().'"
4626,290422404,"b'If I do this, I get the following error:\r\n![image](https://user-images.githubusercontent.com/32180789/58902387-ddcf5380-86b7-11e9-9b32-2983425a6b4d.png)\r\n\r\n'"
4626,290427049,b'> (Actually for all of the rename/changes below as well)\r\n\r\nWhich other ones? '
4626,290427243,b'Updated!'
4626,290427365,b'Updated!'
4697,290826963,"b'The problem here was that at the startup of the app, the default would be to return false, but that would trigger the event of ""not being calibrated"" to fire. Null allows for us to know whether the variable has been initialized appropriately and has received an actual value from the eye tracking system. '"
4697,290827283,"b'I guess I could have also set the default to ""isEyeCalibrated = true"", but seems a little less clean to me.'"
4697,290915040,b'Done.'
4697,290917132,b'Done.'
4626,291346514,"b'I was testing why the selection didn\'t work and noticed that keyCode: 13 (Enter) was assigned to both ""select"" as well as ""Come to me"". For ""come to me"", it\'s not important though, so I removed it. \r\n![image](https://user-images.githubusercontent.com/32180789/59062336-6f76c680-885a-11e9-86ca-1f0009a3a40c.png)\r\n'"
4626,291736632,b'@keveleigh Updated.'
4697,292599518,b'Sounds reasonable. Added a comment! :)'
4865,293591049,"b'Thanks, Will!'"
4865,293591468,"b""Yeah, I'm still trying to figure out what the best flow for explaining it all is. But yep... we should definitely add some info on how to set up the profiles to make it work as expected."""
4865,293592525,"b""It is supported using the EyeTrackingTarget now as it's not based on the FocusHandler anymore. This means that users could grab two holograms with their hand rays and still scroll through text using their eyes, because the auto scroll script is set up to support this unique instance. However, this should not be a default and this is why we didn't simply enable eyes to be supported when hand rays are active, as this could also be confusing if using voice commands and where to channel them to. \r\nLong story short: Yep, I should explain it better :)"""
4865,294932782,"b""Oh, yeah, I guess that got submitted into the incorrect branch. It was just changing public to SerializedField. I'll add it to a different PR I guess."""
4865,294938233,b'I had to update the screenshots anyways and did it for consistency and smaller file sizes. '
4865,294941821,b'Did you click on the page? It consists of 1 title and 2 paragraphs \xf0\x9f\xa4\xa8'
4865,294944633,"b'Well, alright. I added more titles to the one-pager and added a link here: EyeTracking_EyesAndHands.md#how-to-disable-the-hand-ray'"
4865,294945036,"b'Again - the page is pretty short, but yes, I updated it to the following now: EyeTracking_EyesAndHands.md#how-to-disable-the-hand-ray.'"
4865,294946304,"b""Oh, is it? I don't even know. Good catch then!"""
4865,294947587,"b""Where can I see the toc.yml as a visitor? I'm just wondering how to test if things look correct. """
4865,294949639,"b""This is only required if you build into a new folder. Otherwise, once you've set it, you don't have to do it again. I can add a comment about that, but isn't it now outdated anyways, because it's set automatically? """
4865,294952166,b'I added a note about it.'
4865,294956158,"b""Yep, it's similar to the microphone privacy settings. You would have to go to the settings page where you see which apps got permissions to use your mic or in this case your eye tracker. I added a note to the doc."""
4865,294957257,"b""Yeah, maybe not super necessary, but I also don't like to end up in a dead end when reaching the end of a page. """
4865,294960327,"b""It's not completely unrelated. There have been many questions about the additive loading and I wanted to raise it early on that 1) Yes, we do additive scene loading and 2) If you don't know what that means (because a lot of people didn't) then don't worry, we'll get to it. \r\nBut anyways... I rephrased it for now, but it's already outdated anyways with the new scene loading system. \r\n"""
4865,294961451,"b""It's a good point. I leave it like this for now, mainly because this will probably change with the new changes from Lars anyways. I would like to add the revised docs for his change in a different PR though.\r\n"""
4865,294962474,b'Great catch!'
4865,294966949,"b""Agreed. Can you point me to instructions on how to use the xref and API refs correctly? I'd like to be able to test it before submitting, but not sure how. """
4865,294974453,"b""Yeah, it's a bit tricky, because sometimes it's at the beginning of a sentence and the Eye is uppercase. So, don't want to just blindly replace. Hope I got them all now though. """
4865,294974690,b'Done.'
4919,295561851,"b'Given that the script name is ""LoadAdditiveScene"", it might be nice to either use a completely new script and leave this one as it is. Or to also rename the script itself. '"
4919,295562084,"b'What if the ""SceneToBeLoaded"" has not been assigned? '"
4919,295564806,"b""When first trying out this branch, the 'Scene System' showed me that the linked scenes were missing. After some testing, I found out that this was due to the fileID. When I replaced '3671201678493226958' with '102900000' for all entries, without changing anything else, it would correctly detect all the scenes in the Editor again. """
5432,307828069,"b""No. Somehow these got added automatically \xf0\x9f\x99\x84 What's the best approach for reverting this? Is it from my side or can we cherry pick it somehow?"""
5432,307887294,"b'Oh awesome! Thanks, Kurtis!! \xf0\x9f\x98\x8d'"
5432,308439601,"b'Oh ok, good to know! Updated! :)'"
5432,308440758,b'Sounds better! Updated!'
5432,308441397,b'Updated! :)'
5432,308442008,"b""Yeah, sounds good! I'll keep it in mind. Thanks, Will! There might be some other changes coming up with the integration with the MRTK scene hub anyways."""
5443,308984347,"b""Yeah, agreed. It's really not meant as an end-to-end solution. The problem was just that when switching MRTK configuration profiles at runtime, the local inputSystem variable would never be updated. """
5443,309289083,"b'@SimonDarksideJ Ehm, just to check that we are on the same page: The idea here is indeed that it _will change_ during the lifetime of the project. We have the central hub scene which loads one profile, but which then additively loads other scenes which require different config profiles (different speech commands, different pointer setups, etc.). '"
5443,309333136,"b""Yes, the problem is that it's cached on startup only and then handled by a game object that persists across different scenes that are loaded additively with different profiles, which then leads to non-reacting cursors, voice commands not being recognized, etc. I don't like calling it up frequently, but as long as the event of exchanging profiles during runtime is not broadcasted better, this was the lowest hanging fruit to ensure that the profiles are referenced correctly."""
5443,309795133,"b""@SimonDarksideJ @StephenHodgson Thanks for your feedback on this! Much appreciated! I know that it's possible to simply enable and disable the spatial mesh at runtime. But what about the Input profile? What's a flexible way to turn of hand input for far interaction completely (as this currently overrides eye gaze and head gaze for far targeting the moment the hands are in view), define a list of custom speech commands and gestures for a scene without needing to define that in code? The most convenient way would be to set up the profile that is desired in the Unity Inspector and then reference it somehow, but how? Can you point me to some guidance on how to achieve this? Thanks! :) """
5627,313536123,b'Good catch! Will do ASAP.'
5627,313538031,b'Ehm?'
5627,313552092,"b'In that case, they can use EyeTrackingTarget to support simultaneous use of eye gaze and hand input. https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/EyeTracking/EyeTracking_TargetSelection.html#2-independent-eye-gaze-specific-eyetrackingtarget'"
5627,313552610,"b'Alternatively we could simply hide the cursor, but then buttons would still be highlighted based on eye gaze, which may be confusing with hands highlighting other buttons.'"
5627,313555692,"b'ET auto scroll should already handle this, as this was supposed to work even with hand rays active. I might be wrong. Worth testing it again. '"
5627,313593495,b'Yay! :)'
6738,351489145,b'Oh weird! Good catch!'
6738,351489505,"b""Not accidental. Related to #6735 - my dev console gets filled up with unhelpful and confusing error messages. With switching profiles, it's expected that the ActiveProfile may be briefly null. Hence, showing an error every time the app switches profiles / loads a new scene is not great. I've uncommented it now, but changed it to a warning instead. """
6738,351490802,"b""I think the indentation is correct? I added an if statement at the top checking if the CoreServices.InputSystem.FocusProvider isn't null, because it was blurting out tons of error messages when loading up scenes after switching profiles.\r\nRelated to #6735."""
6738,351491320,"b""It's related to issue #6735. After switching profiles with the LoadProfilesOnStartup script, I get a number of errors. In this particular case, I got some NullReferenceException. I assume that CoreServices.InputSystem is briefly null causing an error when trying to access GetDataProvider. """
6738,351491705,"b'Related to #6735. Please provide more specific feedback here: Why are you calling a Debug.Assert here? What does this mean to developers? Please provide more descriptive debug information. Otherwise the Editor Console is just filled up with ""Assert Failed"" errors that are unhelpful and confusing to developers.\r\n![image](https://user-images.githubusercontent.com/32180789/69758333-16eefa80-1114-11ea-841e-d105128e34e3.png)\r\n\xf0\x9f\x98\x90\r\n\r\nAs requested, I put it back in for now. Still not ideal. '"
7246,378457657,"b'I don\'t like renaming ""IsEyeGazeIsValid"" - Eye gaze is also used for other things than input (heatmaps). It\'s important to know when eye gaze is valid and when not. For example, when a user is blinking, the eye gaze may be invalid, which doesn\'t mean it\'s in general not meant to be used as an input. '"
7246,378641093,"b""Hm, yes, I understand. If I remember correctly, IsEyeGazeValid is not related to whether it is used as input or not. \r\n\r\nHere is some more documentation:\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/EyeTracking/EyeTracking_EyeGazeProvider.html\r\n\r\n_**IsEyeGazeValid**: Indicates whether the current eye tracking data is valid. It may be invalid due to exceeded timeout (should be robust to the user blinking though) or lack of tracking hardware or permissions. Check out our _**Missing eye calibration notification**_ sample that explains how to detect whether a user is eye calibrated and to show an appropriate notification._\r\n\r\nIn addition, even if the interaction doesn't use eye tracking as an input, developers may still want to access eye tracking data for attention analysis. """
7246,378642206,"b'The LogStructureEyeGaze.cs is used as an example for tracking visual attention. Ideally, this should be possible even if eye gaze is not used as an input.'"
7246,378642758,b'Why is this set to true in the code? And why in the Update function? Maybe you want to switch between different head and eye gaze modes at run time?'
7246,378643981,"b""That's a bug with mingling head and eye gaze together in GazeProvider. It would probably be better to handle them as independent input sources. I don't think that this was thoroughly tested and understood when Kurtis originally set it up. Nevertheless, there is a difference between whether the eye tracking data is valid and whether it's used as an input. There could be scenarios in which I want to use the head gaze as a pointer and still be able to access eye tracking data - and in that case it would be great to understand whether the data is valid or not. """
7246,383456672,b'The choice of name is confusing and reflects that whether eye gaze data is available is not the same as setting whether eye gaze is used as an input control.'
7246,383475061,"b'I think this may be confusing to developers. FollowEyeGaze.cs is meant as a simple example for visualizing a game object based on the eye gaze signal (aka a custom eye gaze cursor). If eye gaze input is not available it shouldn\'t just reset the flag. Otherwise this might be confusing to developers if they explicitly set to ""not use eye gaze"" in the GazeProvider attached to the camera. Also, if the user wanted to switch between head and eye gaze, in their scene they would have to remember to remove the script and add it back in.'"
7246,383484441,"b'I find the difference between ""UseEyeTracking"" and ""IsGazeInputEyeBased"" confusing. Shouldn\'t ""UseEyeTracking"" be used as an indicator to whether eye-gaze input is used in contrast to ""IsGazeInputEyeBased""?'"
7246,383485867,"b'I do not understand why this was added. How is ""eyeGazeProvider.GazeOrigin"" and ""...GazeDirection"" different to ""eyeGazeProvider.LatestEyeGaze""?'"
7246,383490042,"b'If I read it correctly, you removed handling automatically hiding the eye gaze cursor when the hand comes near a target. Where or how is this handled now? \r\nAlso, why do you feel that ensuring a correctly returned eye gaze ray even if not set as primary input should be handled in a separate PR? I feel that it would fall under decoupling eye tracking data from eye-based control. '"
7246,383497326,"b'Confusing. Why did you rename ""IsEyeGazeValid"" to ""IsEyeTrackingAvailable""? Eye tracking data may be available, but not valid (e.g., during blinks).'"
7246,383498534,"b""Why did you remove this? This is part of the basic instructions to get eye tracking input working in MRTK. It's meant as a short overview check list before going into more detail below. Especially now that by default Eye Tracking is unchecked in most scenes, it's even more important to point this out so that devs can better understand why eye tracking is not working for them. """
7246,383498984,b'Why did you remove this note?'
7246,383499881,b'Why did you move this section?'
7515,390637842,"b""Why not just set it to false if it's a system that doesn't support eye tracking?"""
7515,390638388,"b""I don't see why this has to be a nullable variable."""
7568,395778295,"b'Should be: ""It is recommended to start by exploring...""'"
7568,395778847,b'Both 2. and 3. are pointing to the same doc?'
7615,404276181,"b'""will need to be manually"" - Add ""be""'"
7615,404323552,"b'Actually, this is only true if you use Unity 2018. The Gaze Input capability is integrated to Unity 2019. '"
7615,404324904,"b'""should stay untouched"" sounds like that devs are not allowed to touch it. Maybe better to say, that the appxmanifest should have saved the previously done changes.'"
7615,404326655,"b'Why did this part get removed about ""not seeing the GazeInput capability""?'"
7615,404456619,"b""We added it after some ISVs that we worked with last year encountered this issue. So, yes, better to have it than not, I'd say."""
2329,197752092,"b""I'm not sure how to fix that, when opening the scripts in VS the code aligns just fine. And 2018.2 is still beta. People might still want to try the toolkit, there's no harm to it due to the directives and the code can be filtered by it when tackling 2018.2 for real."""
3573,263029884,"b""Since we're on Android, you don't want IL2CPP to be enforced. Code debugging is only possible on a C++ basis then. I was not sure which way to comment this, I started with !UNITY_ANDROID but was not sure."""
3573,263030171,"b""That's true. How do I move them over?"""
3573,263030759,b'This class  could very well be empty. I just copied another over so there was a generic version for any fallback to come. Since there is no fallback for Oculus GO I was not sure what a fallback could look like.'
3573,263031520,"b'If not done this way the UnityJoystick will be picked, not the OculusAndroidDeviceManager I created for Android platform conciderations. I did not want to add the Oculus controller into the existing Manager so I added mine in 8th position, but to be reached, this has to be done.'"
3573,263038137,"b""I'm not sure. So far it only detects XBox controllers. the derived OpenVRDeviceManager detects all OpenVR controllers but only works for standalone. WindowsMixedRealityDeviceManager manages the WindowsMixedRealityController. This looks to me as if the UnityJoystickManager would be the best bet, but it does not make real sense either as every SDK (OpenVR, UWP ...kind of) has its manager.\r\nIf it follows a certain logic, why not .)"""
3573,263038805,"b""I don't understand. If I remove it, IL2CPP will be enforced, which is not good on Android but fine with UWP. Or did I missunderstood something?"""
3573,263047520,"b'what is really confusing is, to even get to the OpenVR device manager, the UnityJoystickManager gas to actively handle controllers with OpenVR in their names and revoke those'"
3573,263153576,b'will do tomorrow'
3573,263154904,"b""I agree with Railboy. It's mandatory for UWP, most likely the better option on standalone, but not recommended on Android and therefore not worth the popup.\r\nI will go with !UNITY_ANDROID then, ok?"""
3573,263244330,b'I check it out'
3573,264127691,"b""I think I'm done with that."""
3573,264133155,"b'Referring to the Oculus GO SDK: You need to choose the Oculus Virtual Reality SDK in the XR Settings and have the Oculus (Android) package installed, that\'s true, but except for a specific configuration in the Manifest, that\'s about all you have to do to get it into the store I think.\r\nThe ""Oculus Integration"" Unity package from the store provides more stuff, but the last time I used it, from the input perspective, it wasn\'t nearly as complete as the MRTK (gaze and pointing, cursor, beam...)'"
3607,264871815,"b""The MixedRealityInputSystem's HandleEvent method casts to BaseInputEventData. I routed the focus events through it too, therefore the change."""
3607,264872280,"b'Yes. I head to split OnFocus events off of the regular HandleEvent call, because for the exit FocusProvider?.GetFocusedObject will return null. For this case I passed the focused object along with it through a lamda to this.'"
3607,264980076,"b'the InteractionReceiver could listen to everything that happens to another gameobject, except for these.\r\nthis path uses global listeners while the previous bypassed them.'"
3607,264980247,"b""it's a System.Action parameter. does it apply here too?"""
3607,264995759,b'done'
3624,265608242,b'done'
3624,266360903,"b""I moved it over to Utilities. Left is the name. None of the classes there have MixedReality in their names. But the Playspace, as an instance in the scene is best identified with it.\r\nWhat's your suggestion?"""
3635,266948617,"b""@SimonDarksideJ would you be so kind as to post a link or something confirming using abstract inheritance is slower than normal inheritance? I couldn't find anything about it."""
3607,267001946,"b""that's what @davidkline-ms wasn't sure with, he mentions that further up the discussion."""
3607,267048622,"b""this is about what this does already, with the tiny convenience extra that you don't have to check for yourself, that's what the InputManager does.\r\nIf handler.ReceiveAllFocusChanges is false you just won't receive but the single ones. if it's true you will.\r\nMy feeling is that's cleaner."""
3643,267077076,"b'yes, that was a mistake'"
3643,267078252,"b""It's replaced by HasProfileAndIsInitialized within ExecuteOnAllServices, which first checks for the activeProfile"""
3635,267088438,"b""> Overall this seems sensible but needs a full round of performance validation and testing.\r\n\r\n@SimonDarksideJ I agree here clearly. From what I can tell there are quite a couple of calls that are meant to alter the position of things. This is getting tricky when talking about let's say mouse delta, or scroll delta.\r\nI guess someone would need to go through there and filter by what is relevant for the raycasting phase to be correct for all input devices. If that's even all there is to it."""
3607,267483424,b'@luis-valverde-ms it is enforced by the interface IMixedRealityFocusHandler. you make that Choice when implementing it.'
3607,267517011,"b""@StephenHodgson just to be clear about this. I would say the majority of cases requires just a single enter and exit. And the receivers do require an interface to receive them.\r\nThis means most of the time you write a counter every time you implement this interface if you want just the first and the last call. Or you start with a base class that does it, introducing virtual calls for receiving just single calls.\r\nWith this PR it's merely letting ReceiveAllFocusChanges return false and you're good to go. And it makes it very clear during the implementation what calls will be received, all or one.\r\nMy hand up for the PR."""
6608,347043684,"b'```suggestion\r\n3. If using Unity 2019.x, the assembly definition file for the Unity AR provider needs to be modified to have the **UnityEngine.SpatialTracking** reference added.\r\n```'"
7775,419686738,"b""Nit: Any thoughts on adding a blurb about why you might want to do this? (i.e. if you're experiencing some bad look at feel with the defaults, this lets you use some of the other reprojection techniques to see if they will improve your stuff)"""
7775,419694495,b'Added a bit more info about scenarios when you might want to try alternate methods'
5165,299482891,"b""```suggestion\r\n- The asset in question is in the foundation package (i.e. it's in one of the following folders):\r\n```"""
5165,299483895,b'```suggestion\r\n> Any asset that sits in the examples package (i.e. part of the MixedRealityToolkit.Examples/ folder)\r\n```'
5165,299484038,b'```suggestion\r\n- The asset in question does not belong to the experimental namespace.\r\n```'
5165,299484241,b'```suggestion\r\n> See [Experimental features](../ExperimentalFeatures.md) for more information.\r\n```'
5165,299485055,"b""```suggestion\r\nAs the surface area for breaking changes is very large, it's important to note that having an absolute\r\n```\r\n(there's two times note in that sentence, so i would get rid of the first one)"""
5165,299575655,b'yay'
4055,277695317,"b'```suggestion\r\nFor larger submissions, please refer to the [feature contribution guidelines / process](Feature_Contribution_Process.md) to ensure a smooth process and a good quality of code and documentation.\r\n```'"
4055,277701861,"b'```suggestion\r\nAll changes be they small or large, need to adhere to the [MRTK coding standards](CodingGuidelines.md), so please ensure you are familiar with these while developing to avoid delays when the change is being reviewed.\r\n```'"
5613,315459053,"b"">automatic [](start = 230, length = 9)\r\n\r\nWould it be possible to separate these change out from the rest of these release notes? It feels like the contribution stuff is orthogonal to what we're trying to add here (release notes)"""
5613,315824477,"b'per discussion, leaving these changes here to reduce the number of documentation PRs reqiiored for release'"
6157,330314764,b'```suggestion\r\n1. Create a branch in your fork (off of the [mrtk_development](https://github.com/microsoft/mixedrealitytoolkit-unity/tree/mrtk_development) branch) to make it easier for you to isolate any changes until ready for submission. For the legacy HoloToolkit use the [htk_development](https://github.com/Microsoft/MixedRealityToolkit-Unity/tree/htk_development) branch.\r\n```'
6157,330314823,"b""Shouldn't these all be ##?"""
6157,330314892,b'```suggestion\r\n1. Implement the bug fix or feature. Instructions for building and deploying MRTK are at [BuildAndDeploy](../BuildAndDeploy.md). Remember to follow the [Coding Guidelines](CodingGuidelines.md).\r\n```'
6157,330315088,"b'```suggestion\r\n1. If adding an experimental feature, then writing tests and documentation are not necessary. Instead, follow [experimental feature guidelines](ExperimentalFeatures.md).\r\n```'"
6157,330315201,"b'```suggestion\r\n1. Ensure the code works as intended on all platforms. Please see [Release notes](../ReleaseNotes.md) for the list of supported platforms. For Windows UWP projects, code must be [WACK compliant](https://developer.microsoft.com/en-us/windows/develop/app-certification-kit). To do this, generate a Visual Studio solution, right click on project; **Store** > **Create App Packages**. Follow the prompts and run WACK tests. Make sure they all succeed.\r\n```'"
6157,330315370,b'```suggestion\r\n1. Follow [documented instructions](PullRequests.md) for making a pull request when ready to submit.\r\n```'
4055,277700629,"b""```suggestion\r\nSome of the target platforms of this project require to take performance into consideration. With this in mind always be careful when allocating memory in frequently called code in tight update loops or algorithms.\r\n```\r\n\r\nif we add the comma won't that change the meaning of the sentence? I think it should stay without the comma? """
6157,330315451,b'```suggestion\r\nThis document outlines coding principles and conventions to follow when contributing to MRTK.\r\n```'
6157,330315544,b'```suggestion\r\n### Be concise and strive for simplicity\r\n```'
6157,330316110,"b'```suggestion\r\nAll your code should work by **BOTH** adding a component to a GameObject in a saved scene, and by instantiating that component in code. Tests should include a test case both for instantiating prefabs and instantiating, configuring the component at runtime. \r\n```'"
6157,330316735,b'```suggestion\r\n## See also\r\n```'
6278,334204307,b'```suggestion\r\n## See also\r\n```'
6278,334204362,b'```suggestion\r\n [C# coding conventions from MSDN](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions)\r\n```'
6278,334204835,"b""Weird, I didn't intentionally change these two lines? Thanks for fixing!"""
6659,348645913,b'```suggestion\r\n### Prioritize writing tests \r\n```'
6659,348645992,b'```suggestion\r\n# Coding guidelines\r\n```'
6636,348649552,b'```suggestion\r\n### Prioritize writing tests\r\n```'
6895,357781827,"b'For this one could we even go one step further, or would that muddle the guideline?\r\n\r\n```suggestion\r\npublic int MyVariable => myVariable;\r\n```'"
7015,364499412,b'Do we want to remove the raw URL below in favor of an in-line link?\r\n\r\n```suggestion\r\nA subset of the MRTK codebase uses PowerShell for pipeline infrastructure and various scripts and utilities. New PowerShell code should follow the [PoshCode style](https://poshcode.gitbooks.io/powershell-practice-and-style/).\r\n```'
7015,364499690,b'https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#links\r\n\r\n>Prefer links embedded in a sentence'
7015,364718608,b'Yes please!'
8127,457656202,b'```suggestion\r\n[Diagnostic System settings](../Diagnostics/ConfiguringDiagnostics.md#enable-verbose-logging))\r\n```'
5182,299871253,"b""```suggestion\r\nXref syntax can be difficult to remember - it's possible to enumerate all of the available xref IDs by first running\r\n```\r\n\r\nXref looks weird but it's the beginning of a sentence so it should be uppercase I think?"""
7762,418682907,"b""```suggestion\r\n* The editor UI for screenshots should use light gray theme editor as not all users have access to the dark theme and we'd like to keep things as consistent as possible.\r\n```"""
6157,330300342,"b""I feel like this contradicts line 40:\r\n\r\n> If adding an experimental feature, then writing tests and documentaiton are not necessary. Instead, follow [experimental feature guidelines](ExperimentalFeatures.md).\r\n\r\nI'd explicitly call out how to reconcile experimental features that may have some impact on MRTK code."""
6157,330301003,"b'I personally had trouble here finding a great example of how all folder types mapped. Specifically Experimental inspectors. We should probably just call out the folder structure explicitly like we do on line 6.\r\n\r\n> An example scene demonstrating usage, located under `MixedRealityToolkit.Examples\\Experimental` subfolder'"
6157,330317111,b'```suggestion\r\n### Provide an example scene that demonstrates how to use the feature\r\n```'
6157,330317379,"b'These titles seem exceeding long. => ""Experimental features should not impact core controls"" Gives same message with much less words, especially since there is a description below'"
6157,330317487,b'informal you and related is used a lot in these changes. Technically documentation guidelines say to not do that.....but of course that will be a lot to go back in change. '
6157,330317550,"b'Highlight ManipulationHandler with bold, italize, or the code ticks'"
6157,330317627,b'nit: space line'
6157,330317696,"b""shouldn't this and the one at bottom be ##"""
6157,330324601,"b'Resolved, I hope. Tried to add some examples.'"
6842,356392524,b'nit: add url to unity docs for MenuItem? https://docs.unity3d.com/ScriptReference/MenuItem.html'
6870,356911788,b'Revert this Julia :-)'
6870,360173066,b'```suggestion\r\n```'
7056,366046709,b'```suggestion\r\nFollow these steps to add documentation for your experimental feature:\r\n```'
7056,366046949,b'```suggestion\r\n1. Add a link in the Experimental section at [`../toc.yml`](../toc.yml).\r\n```'
7056,366047279,b'```suggestion\r\n1. Add a link in the Experimental section at [`Documentation/toc.yml`](../toc.yml).\r\n```'
7056,366073315,"b'I don\'t think there\'s actually a section called literally ""Experimental"" in the toc.yml. If we search for \'experimental\' (ctrl+F) on that file there are two locations, one of which doesn\'t adhere to the rules (i.e. UnityAR) and another called ""Experimental Features""\r\n\r\nIf we actually mean \'Experimental Features\' we should be completely literal here (otherwise it can be hard to resolve ambiguities)'"
7056,366265022,b'we should also move existing experimental features into that section. (eg scrolling object collection)'
7056,366473604,"b'Have a look at https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6943/files the toc.yml changes -- Yoon added scrolling object collection and pulse shader to a new experimental section.  But yes, this guidance should go in after #6943 is merged.'"
7529,391942496,"b'This actually contradicts with coding guidelines page. Cntrl+F ""AddComponentMenu"" in this PR\r\nOne uses ""MRTK/blah"" while this uses ""Mixed Reality Toolkit/blah""'"
7529,392309518,b'will restore'
7529,392323670,b'done'
6704,349457684,b'folder names are different now (ex: there is no _Core folder any longer)'
6704,349457885,b'MixedRealityManager -> MixedRealityToolkit and CoreServices'
6704,349458141,"b'Perhaps it is time to refresh / remove this article as it is out of date, and as this comment states, large changes need to be handled carefully.'"
6704,349703911,"b""Oh right! I didn't go through these for content so much as formatting/spelling, but I'll take a quick pass now."""
6704,349710358,b'Updated'
6704,349710784,b'Updated'
6704,349711049,"b""I did a quick pass on refreshing this article. I'm not against replacing it with a new doc in an upcoming iteration"""
6157,330317893,b'```suggestion\r\nAn automatically generated comment in the PR will let you know if you do.\r\n```'
6157,330318006,b'```suggestion\r\nEnsure the pull request meets the guidelines below.\r\n```'
6157,330318119,"b'If any items have been renamed, ensure to search both MRTK code and documentation for impacted references'"
6157,330319286,b'Should we address how tagging PRs or more importantly assigning right people to look at them? '
6157,330319338,b'honestly change to IMPORTANT'
6157,330319401,"b""```suggestion\r\nThese guidelines are based off of [Google's engineering practices](https://google.github.io/eng-practices/review/developer/small-cls.html).\r\n```"""
6157,330319879,"b""I'd actually say, in general, avoid adding media assets to MRTK (e.g fbx, png files) and instead re-use existing content. If it is necessary to add unique assets, make sure any assets are small"""
6157,330320099,"b'nit: emphasis on tests for both features AND bug fixes\r\n```suggestion\r\nTests are the best way to ensure changes do not regress existing code, but it is also easy to forget about tests when submitting pull requests. Requiring that they go in with your PR are a great way to ensure that tests get written.\r\n```'"
6157,330320256,"b'```suggestion\r\nEvery feature and bug fix should have tests associated with it. If you do not have the expertise or time to write a test, create an issue to write the tests, and mark them with label **Consider for Current Iteration**.\r\n```'"
6157,330320770,"b'```suggestion\r\nMost developers look first at documentation, not code, when understanding how to use a feature. Ensuring documentation is up to date makes it much easier for people to consume and rely MRTK.  Documentation should always be bundled with the related pull to ensure items remain up-to-date and consistent.\r\n```'"
6733,350480061,"b'```suggestion\r\nThe version 2.3.0 plan has been finalized. While some details may change as the iteration progresses, the following describes the overall plan for the next MRTK release. For the latest status of the release, please visit the [milestone page]( https://github.com/microsoft/MixedRealityToolkit-Unity/milestone/10).\r\n```'"
6733,350480648,b'```suggestion\r\n- Leap Motion support (Unity 2018 and Unity 2019)\r\n```'
6733,350481138,b'> All new platform support\r\n\r\nThere may be times we spin up support for a platform not supported by XR SDK. Would we surface this as a custom plugin for XR SDK vs MRTK?'
6733,350486362,"b'good question. i\'ll add ""is expected to be""'"
7217,374392434,"b""I don't think there's a lot of value to adding an arbitrary length list of releases without details (i.e. just having 2.4 is fine) along with maybe a mention that releases are roughly bi-monthly"""
7217,374392921,"b'I feel like this is rather small part of it, where a bigger item was actually other platforms (in a maintainable way) - i.e. leap/quest, some of which we go through XR SDK to leverage our new XR SDK work.'"
7217,374393270,"b'Again, I would say anything past 2.5 and I would probably not list them as explicit call outs. We should avoid ipsum lorem type text and strive for content that creates clarity.'"
7217,374393464,"b""What's your bar for things that should be called out here, vs not called out here? It feels like there are things in the UX world (@julenka) that I feel like should be called out at a higher level before this would be there."""
7217,374402355,b'fair enough'
7217,374402413,"b'I believe most of ""hand extensibility"" discussions with Dave and @keveleigh  center around adding support for oculus quest. In that case, if we already mention adding quest support, and in particular quest hand tracking support, I would vote to remove this line as it feels duplicate (we already need to make hands extensible if we are adding quest support for hands).\r\n\r\nRegarding adding more specifics to UX features, could we please first do a planning meeting before adding any more detail? Ping @thalbern  as FYI so she is aware of these points we are adding to public docs.'"
7217,374402495,b'I can add those as work items'
7217,374402534,b'i mean themes\r\n'
7217,374403093,"b'I generally add things that are a significant amount of work that we are committed to deliver.\r\n\r\n@julenka, if you would like more detail under UX, please feel free to commit to this change or mention them here. whatever works best for you.'"
7217,374408283,b'done'
7217,374408439,b'will remove that line. agree it seems redundant'
7217,374408730,"b'have replaced it with ""Platform Expansion: Hands"" and discussion of Leap Motion and Oculus Quest'"
7217,375407762,"b""I think that my previous comment about these additional things not adding value was just resolved, but they're still here - can we just delete the things past 2.4?"""
7217,375408341,"b""Unresolving the conversation because this wasn't done (i.e. the text still exists and should be deleted)"""
7217,375414111,b'just did :smile:'
7217,375448449,b'missed that line. it has been re-done'
7319,379923553,b'It feels slightly off to me to have no reference to the currently in development 2.4 on our roadmap page. Current release says 2.3 but this table jumps right to 2.5.'
8332,473120925,"b'```suggestion\r\n> When Unity releases an LTS (Long Term Support) product, the Mixed Reality Toolkit will update to the LTS release. MRTK will also support the latest non-beta (ex: 2020.1) tech branch version of Unity, at the time at which MRTK was released.\r\n```'"
8332,473121158,b'this is just an example. we want it to demonstrate a non-lts version number'
8862,513829645,"b""small nit: i think there's an extra leading space here?\r\n\r\n```suggestion\r\n**Packaging**\r\n```"""
5067,297727874,"b'```suggestion\r\nTo ensure MRTK being a stable and reliable toolkit, every feature should come with unit tests and sample usage in one of the example scenes.\r\n```'"
6446,341719338,b'Also...add a tool tip :)'
6446,341719877,"b'Random unity question...does OnDisable get called when the component is destoryed?  If not, to be safe you probably want to handle OnDestroy....since theoretically one could destroy this component, while leaving the gameobject intact.  '"
3471,258726192,"b""You probably didn't mean to include this file as part of the PR ?"""
3471,258859889,b'Ok. If we (reasonably) can we should try to separate the commits for the azure pipeline and those for generating documentation.'
3390,252622331,b'typo: should read `Extension`'
3390,252623475,b'I agree. Would `EditorProjectUtilities` be a good place for this?\r\n'
3749,270990630,b'Thanks for pointing this out. I actually forgot to address this'
3749,271225229,b'Extended the comment and created this ticket: https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3758'
3749,271226594,"b""Actually the behavior has changed a bit from the original version, so I added a new comment within the function. We're just processing a final mouse event in case the pointer is currently down and   invalidate the last mouse point."""
3749,271226995,b'This was part of the original MixedRealityInputModule. Will create a ticket.'
3749,271228491,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3759'
3749,271230879,"b'Actually that comment refers to the whole section of setting pointerData,eventDataLeft. Not sure how to better communicate this?'"
3749,271263135,"b""Yes, it's possibly run once every frame per poke pointer. Just profiled a bit in VR and it took < 0.01ms (< 0.1% frame time) on average. Not sure if caching this result makes sense, if we want to allow the game object hierarchy to be able to changed at runtime."""
3761,271264871,"b'Should we assign `isControllerModelLoaded` in any case? \r\ni.e. \r\n`isControllerModelLoaded = (gltfGameObject != null);`\r\n\r\nOtherwise, if `CreateControllerModelFromPlatformSDK` get called a second time the flag may not be set to the correct value if loading fails.'"
3763,271364888,"b""At least for global event handlers, this leads to not propagating the event to the pointers' focused objects. This logic is in `MixedRealityInputSystem.HandleEvent`."""
3763,271368998,"b""But I would really be interested what Unity's use of this property is.\r\n\r\nAnother example: On components on the same game object all events are executed, no matter whether `used` is set or not."""
3794,272213504,b'For now we need at least a transform in order for correctly pushing the button in local space. This way the button can have a parent node that is moving (like a solver).'
3794,272214574,"b'Additionally, I think the idea here is to also make the initial transform configurable in editor.'"
3862,273039967,"b'focus lock already means locked to the target. This is specifically for the target position. So ""locked to the position on the target""?'"
3862,273040408,"b'Should not break anything, as previously we did set back the focus lock on pointer up, So should always be false at this point.'"
3942,274452654,"b""I'm curious to hear if anybody has an idea for a more descriptive name here. What do you think?"""
3942,274488499,b'allow piano keys to be pushed by entering touch from the side'
3933,275735371,b'Can we make only the getter public?'
3933,275736570,b'nit: instead of having this if statement. We can add the following attribute to the method: `[DrawGizmo(GizmoType.Selected)]`'
3933,275738151,"b'`Math.Abs` is redundant here: Since `endPos >= startPos`, `(endPos - startPos) >= 0`'"
3933,275740200,b'`Abs` is redundant'
3933,275742420,"b'In general, would it make more sense to adjust the other distances according to the one being moved? So for example adjust `startPos` and `endPos` here using `pressDistPos`(instead of the other way around).\r\n\r\nThis would also rectify the situation of when the user manually set `startPos` and `endPos`, so that `startPos` > `endPos`, which would let us get rid of the `Math.Abs` below.\r\n\r\nOf course, this would also mean to only adjust all the actual distances (`startDistance`, `endDistance`, `pressDistance`) in the last `if` when calling `Undo.RecordObject`.'"
3933,275743446,b'Use plane[1] for the position here?'
3933,276163803,"b'Indeed `maxPushDistance` is currently in world space. But I thought all the distances in the info are in local space? So this makes sense.\r\n\r\nOn the other hand I just realized that lossyScale.z is the axis scaling in world space direction z, not local space z (press direction). So this only works with uniform scales. \r\n\r\nThe scale along the local z direction can be computed like this:\r\n`scale = transform.TransformVector(Vector3.forward).magnitude;`\r\nUse `TransformVector` here to also apply scaling.'"
3933,276164848,"b'Ok, wanted to hear your opinion on this. Will check myself if the other way feels more intuitive. Leave it like this for now.'"
3570,263460777,b'fixed typo'
3570,263460991,b'included all source folders for now '
3570,263474720,"b'that homepage entry is for the Guides section - so if you click on the guides tab you will have this page as the first page you see . it\'s not the ""main"" homepage of our docs site - that would be the one that index.html is forwarding too which is the README.html in the root folder right now :)'"
3711,269657290,"b""yep - yoyo restructured the docs and in the new layout we won't have conceptual and generated api docs in the same top level category which makes this file obsolete #ByDesign"""
3711,269659199,b'\xc2\xaf\\_(\xe3\x83\x84)_/\xc2\xaf'
3741,270889630,"b""won't this be a compile error if those defines are not set because the braces are not matching anymore?"""
3741,270890317,b'same here'
3761,271265696,"b""good point! I'll change that :)"""
3774,271669717,"b'```suggestion\r\nAn axis aligned cube volume is a rectangular shape that stays aligned with the axes of the world coordinate system, as determined at application startup.\r\n```'"
3774,271670491,"b'```suggestion\r\nThe observation extents define the distance from the observation point that meshes will be observed. When the [Observer Shape](#observer-shape) is set to sphere, the X value of the extents will be used as the radius of the sphere.\r\n```'"
3774,271674984,b'```suggestion\r\nThe Coarse LOD generally places a smaller impact on application performance and are an excellent choice for navigation and plane finding.\r\n```'
3774,271675078,b'```suggestion\r\nThe Fine LOD generally exacts a higher performance impact on application performance and are a great option for occlusion meshes.\r\n```'
3774,271779342,b'```suggestion\r\nThe Custom LOD requires the application to specify the [Triangles / Cubic Meter](#triangles-per-cubic-meter) value and allows applications to tune the accuracy vs. performance impact of the spatial mesh observer.\r\n```'
3774,271779535,b'```suggestion\r\n> Note: It is not guaranteed that all Triangles/Cubic Meter values are honored by all platforms. Experimentation and profiling is highly recommended when using a custom LOD. \r\n```'
3774,271780392,"b'```suggestion\r\nWhen using the custom [Level of Detail](#level-of-detail), specifies the requested value for the triangle density for the spatial mesh.\r\n```'"
3805,272126798,"b""```suggestion\r\nMixed Reality Toolkit's boundary system extends this feature to enable the display of an \r\n```"""
3881,273477283,b'add null check to if - GetInputSimulationProfile() can return null'
3881,273480773,"b'```suggestion\r\n        /// If true then the hand is always visible, regardless of simulating.\r\n```'"
3881,273481353,"b'```suggestion\r\n        /// If true then the hand is always visible, regardless of simulating.\r\n```'"
3982,276199024,"b""yeah, spatial pointer can be reused , i could've removed it altogether bc only the grip is important to make drag work - i'll add the grip to the bottom of the list and leave the old ids"""
3982,276203473,"b""spatial grip is only there because we make assumptions that only controllers having spatial grip available in the mapping can drag objects. We don't need to actually use that input type to interact with objects. In case of the mouse you have up and down and pointer position events for that. The other two events were already there and i didn't want to remove them from the mapping to not break anything, but both of them were basically not working / doing anything. I'm afraid I'm not familiar enough with the input system or what the guideline is on now used mappings. What would I have to  implement for those? Spatial cursor doesn't make any sense with mouse, scroll neither with our current implementation as the mouse cursor is snapping to interactable objects and one could argue you could move the camera with mouse wheel, but that code shouldn't be in the mouse pointer / controller I suppose?!"""
3982,276207393,"b""Disable isn't called necessarily between enable calls. Right now when our services and mrtk get set up we end up in a situation where we're enabling our services twice. I'm not sure what the intend behind this is. \r\n\r\nFirst time calling enable is when we're registering all our services (we're calling initialize and enable in that step) and after that the MRTK main class calls another EnableAllServices in it's OnEnable() method. \r\n"""
3982,276213368,"b""pointing to my comment to luis above who was asking a similar question. The code how it used to be would just modify the x/y position values which was wrong and didn't work. I couldn't figure out what the intent behind this was. So even if you would've modified the controller mapping for this it would have in best case moved the mouse sideways and not perform any actual scroll action. There's no real use case for scroll in the mouse pointer how it's implemented now as we're snapping to all the interactable objects - without this feature it would make sense to move the cursor in depth with the scroll wheel.  Which input event would you recommend to send for the wheel that makes sense? """
3982,276213425,"b""Can you give me more info on this? I'm not quite sure I understand what I'm supposed to do here?"""
4055,277695317,"b'```suggestion\r\nFor larger submissions, please refer to the [feature contribution guidelines / process](Feature_Contribution_Process.md) to ensure a smooth process and a good quality of code and documentation.\r\n```'"
4055,277700629,"b""```suggestion\r\nSome of the target platforms of this project require to take performance into consideration. With this in mind always be careful when allocating memory in frequently called code in tight update loops or algorithms.\r\n```\r\n\r\nif we add the comma won't that change the meaning of the sentence? I think it should stay without the comma? """
4055,277701749,b'```suggestion\r\nYou can download the packaged [Unity asset from here](https://github.com/Microsoft/MixedRealityToolkit-Unity/releases) for importing in to your project.\r\n```'
4055,277701861,"b'```suggestion\r\nAll changes be they small or large, need to adhere to the [MRTK coding standards](CodingGuidelines.md), so please ensure you are familiar with these while developing to avoid delays when the change is being reviewed.\r\n```'"
4055,277702436,b'```suggestion\r\nHow to quickly change a scene and test it in the Unity editor:\r\n```'
4055,277702744,b'```suggestion\r\n- _Drag and drop_ one of the eye tracking test scenes that are described below (or any other scene) into your _hierarchy_ view.\r\n```'
4055,277703234,"b'```suggestion\r\n**Summary**: Fast and effortless target selections using a combination of eyes, voice and hand input.\r\n```'"
4055,277703647,"b'```suggestion\r\n**Summary**: Scroll, pan, zoom, 3D rotation using a combination of eyes, voice and hand input.\r\n```'"
4055,277704182,b'```suggestion\r\nto handle eye tracking events directly in code to trigger the *StartFocusing* and *StopFocusing* methods in _Scroll_RectTransf_.\r\n```'
4055,277704354,"b'```suggestion\r\nFor content rendered to a [texture]( https://docs.unity3d.com/ScriptReference/Texture.html) (e.g., a photo, streamed data), simply add the_PanZoom_Texture_ script.\r\n```'"
4055,277704561,"b""```suggestion\r\nExtending the [auto scroll](#auto-scroll) capability enables to scroll both vertically and horizontally at the same time and to magnify content right around the user's current focus point.\r\n```"""
4055,277704987,"b'```suggestion\r\nTo select focused holograms, use input event listeners to confirm a selection. \r\n```'"
4055,277705370,"b'```suggestion\r\nTo achieve all this, there are a few generic behavior scripts that are not specific to eye tracking at all such as:\r\n```'"
4055,277706526,"b""```suggestion\r\n# What makes a mixed reality feature\r\n```\r\ni would leave this lowercase as it's not a brand name - it should be used like augmented or virtual reality and we wouldn't capitalize that either"""
4055,277707600,"b'```suggestion\r\nTo avoid the performance overheads of the `MonoBehaviour` class, all *services* (systems, features, or modules that require independent operation in a mixed reality solution, e.g. input, boundary, spatial awareness) are required to be discrete plain old c# classes which implement `IMixedRealityService` and to register with the `MixedRealityToolkit`.\r\n```\r\n\r\nnot sure about this one, but i think we just want to list features rather than actual class names in this case '"
4055,277708300,"b'```suggestion\r\n* Multi-scene usage - if a service does need to know about a `transform` position in a scene, it can simply reference, or create, a `GameObject` _rather than be a component attached to it_. This makes it a lot easier to find and use the service when the project spans multiple scenes.\r\n```'"
4055,277708656,"b""```suggestion\r\n* No type dependency - though a method similar to dependency injection, services can be decoupled from their type, this means the concrete implementation can be swapped out at any time without adversely affecting code that consumes it (e.g. replacing the default InputSystem with your custom one, so long as you've fully implemented each interface).\r\n```"""
4055,277708995,b'```suggestion\r\n* Reference-ability - services can be discovered from the `MixedRealityToolkit` a lot faster and easier than searching `GameObjects` in a scene or using `FindObjectsOfType<T>`.\r\n```'
4055,277711928,"b""```suggestion\r\nThe [`BoundingBox.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/BoundingBox/BoundingBox.cs) script provides basic functionality for transforming objects in mixed reality. A bounding box will show a cube around the hologramm to indicate that it can be interacted with. Handles on the corners and edges of the cube allow scaling or rotating the object. The bounding box also reacts to user input. On HoloLens 2 for example the bounding box responds to finger proximity, providing visual feedback to help perceive the distance from the object. All interactions and visuals can be easily customized.\xc2\xa0\r\n```\r\n\r\ni wouldn't use the term windows mixed reality here as we're targeting platforms outside the windows mixed reality spektrum as well with this toolkit """
4055,277764392,b'```suggestion\r\n## Pressable button ##\r\n```'
4055,277764497,b'```suggestion\r\nSee [button](README_Button.md) page for the details.\r\n```'
4055,277764531,b'```suggestion\r\n## Bounding box ##\r\n```'
4055,277764621,b'```suggestion\r\nSee [bounding box](README_BoundingBox.md) page for the details.\r\n```'
4055,277764822,b'```suggestion\r\n## Manipulation handler ##\r\n```'
4055,277764919,b'```suggestion\r\nSee [manipulation handler](README_ManipulationHandler.md) page for the details.\r\n```'
4055,277765061,b'```suggestion\r\nSee [slate](README_Slate.md) page for the details.\r\n```'
4055,277765190,b'```suggestion\r\n## System keyboard ##\r\n```'
4055,277765292,b'```suggestion\r\nSee [system keyboard](README_SystemKeyboard.md) page for the details.\r\n```'
4055,277766894,b'```suggestion\r\n[Periodic table of the elements](https://github.com/Microsoft/MRDesignLabs_Unity_PeriodicTable) is an example app that demonstrates how object collections work. It uses object collection to layout the 3D element boxes in different shapes.\r\n```'
4055,277768005,b'```suggestion\r\nA [pointer](./Input/Pointers.md) is something attached to a controller that gives focus and dispatches [inputs]((./Input/Overview.md)) to the game object it is pointing to. \r\n```'
4055,277768612,"b'```suggestion\r\nPointers are instantiated automatically at runtime when a new controller is detected. The pointers that are created for each controller type are defined in the *pointer options* in the *pointer profile*. You can have more than one pointer attached to a controller; for example, with the default pointer profile, WMR controllers get both a line and a parabolic pointer for normal selection and teleportation respectively. Pointers communicate with each other to decide which one is active.\r\n```'"
4055,277769328,"b'```suggestion\r\nIn the pointer profile you can see that the HoloLens V1 input system is provided for you via the mapping of ""GGVHand"" (V1 HoloLens hand) to the GGVPointer. \r\n```'"
4055,277769478,b'```suggestion\r\n**Grab pointer / sphere pointer**\r\n```'
4055,277769672,"b'```suggestion\r\n* *Debug Mode*: If true, draw the sphere that is used to query for grabbable objects.\r\n```'"
4055,277769938,"b'```suggestion\r\n* *eventsToReceive*: If set to touch, the object will receive _OnTouchDown_ _OnTouchUpdate_ and _OnTouchUp_ events. If set to pointer, the object will receive _OnPointerDown_ and _OnPointerUp_ events.\r\n```'"
4055,277770003,b'```suggestion\r\n* *distBack*: How far input point can go behind surface before release event occurs.\r\n```'
4055,277770044,b'```suggestion\r\n* *distFront*: How far input point needs to be in front of surface before press event occurs.\r\n```'
4055,277770322,"b'```suggestion\r\nMouse pointer is used for interacting with the mouse. This pointer will only be used if the active input is a mouse. By default, the MRTK profile does not provide a mouse as an input provider, as mouse input is instead used to simulate hand input. You may add a mouse in your MRTK profile by modifying the *Registered Service Providers* in your MRTK profile.\r\n```'"
4055,277771286,"b'```suggestion\r\n* **SurfaceMagnetism**, casts rays to surfaces in the world, and align the object to that surface.\r\n```'"
4055,277771720,b'```suggestion\r\n# System keyboard #\r\n```'
4055,277771770,b'```suggestion\r\n![System keyboard](../Documentation/Images/SystemKeyboard/MRTK_SystemKeyboard_Main.png)\r\n```'
4055,277772357,b'```suggestion\r\nThis example scene demonstrates an implementation of the tooltip user interface element. Tooltips are usually used to convey a hint or extra information upon closer inspection of an object. Tooltips can be used to explain button inputs on the motion controllers or to label objects in the physical environment.\r\n```'
4055,277772421,b'```suggestion\r\nThe [example scene](https://gfycat.com/WarmOblongBilby) demonstrates two ways to display a tooltip on an object.\r\n```'
4055,277772466,b'```suggestion\r\n## How to use a tooltip ##\r\n```'
4055,277772525,b'```suggestion\r\nA tooltip can be added directly to the hierarchy and targeted to an object.\r\n```'
4055,277772665,"b""```suggestion\r\nTo use this method simply add a game object and one of the [tooltip prefabs](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Prefabs/Tooltips) to the scene hierarchy. In the prefab's inspector panel, expand the *Tool Tip* (script). Select a tip state and configure the tooltip.  Enter the respective text for the tool tip in the text field. Expand the *ToolTipConnector* (Script) and drag the object that is to have the tooltip from the hierarchy into the field labelled *Target*. This attaches the tooltip to the object. \r\n```"""
4055,277773106,b'```suggestion\r\nThis use assumes a tooltip that is always showing or that is shown / hidden via script by changing the tooltip state property of the tooltip component.\r\n```'
4055,277773188,b'```suggestion\r\n## Dynamically spawning tooltips ##\r\n```'
4055,277773735,b'```suggestion\r\nA tooltip can be dynamically added to an object at runtime as well as pre-set to show and hide on a tap or focus. Simply add the [`ToolTipSpawner`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Tooltips/ToolTipSpawner.cs) script to any game object. Delays for appearing and disappearing can be set in the scripts inspector as well as a lifetime so that the tooltip will disappear after a set duration. Tooltips also feature style properties such as background visuals in the spawner script. By default the tooltip will be anchored to the object with the spawner script. This can be changed by assigning a GameObject to the anchor field.\r\n```'
4055,277773859,b'```suggestion\r\n## Tooltips on motion controllers ##\r\n```'
4055,277774123,"b'```suggestion\r\nTooltips can also be assigned to motion controllers, for example to explain the assigned actions of buttons. The example scene below also includes two tooltip groups on the bottom. These are layed out to match position of the buttons on the motion controllers. When motion controllers are detected, these tooltips will be attached automatically to the controllers, using [`AttachToController`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.AttachToController) script.\r\n```'"
4055,277774373,"b'```suggestion\r\nIn the [example scene files](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.Examples/Demos/UX/Tooltips/Scenes), you will be able to find various examples of tooltips. First group on the left demonstrates the static tooltips examples that are always visible. In the center, you can see the example of using multiple tooltips on a single object. Each tooltip has different child object as a target object which works as an anchor. The group on the right shows the examples of dynamically spawning tooltips.\r\n```'"
4055,278178872,b'```suggestion\r\nA [pointer](../Documentation/Input/Pointers.md) is something attached to a controller that gives focus and dispatches [inputs](../Documentation/Input/Overview.md) to the game object it is pointing to. \r\n```'
4074,278968450,"b""suggestion: the top level navigation already says guides / maybe just call this section How-tos or How to.... and then continue the children with eg setup global voice commands , trigger an action using MRTK button\r\nthat will make them shorter and we don't have the repetition of how to all the time?"""
4074,278968486,b'This is a bit long. Maybe just call it How to setup a scene for Mixed Reality?'
4101,279059026,"b""no benefit. just happened while merging the old with the new commits. if that's an issue I'll move it back? let me know"""
4101,279822379,"b""The problem I have here is that I don't have access to the previous mouse position - I shouldn't query the pointer so I can't provide the position here if we want to keep using the delta"""
4101,282393953,b'the controllerPoseSynchronizer is not calling our method for calculating the rotation - I have to keep this method'
4101,282513603,"b""in the latest update there's a config profile for mouser input for setting the speed - that should solve this issue"""
4101,282534638,b'caching profile now in controller and pointer '
4144,282842629,"b""> Isn't there a bug that this is actually fixing? It's not mentioned in the PR.\r\n\r\nYes there's at least 2 tickets that are fixed with this PR (https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4219, https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4216) - but I just wanted to open this as a draft for  having a discussion about it. If possible I'd like to avoid having the migration step (if we have to keep it in it should be moved out of the class). \r\nLars had a good idea by having a flag that would allow users to switch the mode between world and local space coordinates. that way we wouldn't break anything that is already set up and customers using scaled versions of their buttons can just switch to the new mode where the distances are in local space \r\n\r\n"""
4391,284655381,"b'```suggestion\r\n            Debug.Assert(stateLocations.Length > 0, $""Interactable.LoadStates loading {statesAssetName} but no {statesAssetName}.asset found"");\r\n```'"
4144,286627251,"b""hmm i'm not sure i see the previous change you're referring to. we used to set IsTouching in update which would be fine, but by setting it in the touch completed we can safe the per frame call of the setter. Am I missing something here? """
4527,286848148,"b""I suppose it could be - the reason I added it as a runtime test was that we had some customers scaling their buttons during runtime, so i wanted to simulate that scenario - in the end it shouldn't matter anymore as the calculations are the same now"""
4527,286849845,"b""that was part of the ported code. you're right we can remove that - we can always look it up in git history"""
4527,286850048,b'i need them in the inspector class as well '
4527,286854104,"b""> This looks really promising! I did have some questions in the code, and also I foung a few bugs.\r\n> \r\n> First, the blue push buttons do not move correctly -- they move in Y space when I pulled the change.\r\n> \r\n> ![image](https://user-images.githubusercontent.com/168492/58219631-76310580-7cc0-11e9-897e-efce88f56210.png)\r\n> \r\n> Also, to demonstrate that buttons can work at multiple scales now I added two buttons in PressableButtonExample scene with two scales. I think it would be good to add that so that people can try it out.\r\n> \r\n> When adding that, I noticed another bug: when I scaled my HolographicButton to be size 0.1, the planes were still rendering quite big:\r\n> \r\n> ![image](https://user-images.githubusercontent.com/168492/58219909-77166700-7cc1-11e9-9e74-6feefbf8b52a.png)\r\n> \r\n> The buttons are also not actually pressing. Here is the package for you to test:\r\n> [pressablebuttonexample.zip](https://github.com/microsoft/MixedRealityToolkit-Unity/files/3209978/pressablebuttonexample.zip)\r\n\r\nthanks Julia!\r\nI'll look into the push issues right away.\r\n\r\nThe distance planes only scale in push direction - the scale wouldn't have any effect on the width / height of the planes. I can look into adding that. \r\n"""
4527,286858655,"b""we want to store the value but we don't want it to be visible in the inspector because there's a conversion button for changing the mode.  I wanted it to be more visible that we're actually converting all the distances on switching the mode, that's why i don't directly expose the property and have that button instead."""
4527,286866673,b'that was spotted by daniel :) '
4527,286874419,"b""Ah I see the problem with the rotation that gets lost - fixing that now\r\n\r\nthough i can't see the buttons that don't push in your example scene - for me the scene looks identical to the pressable button example scene that is in the demos and the buttons work fine for me."""
4527,286934616,"b""so i couldn't repro a problem with your scene but i found another problem that causes plane distances to be applied incorrectly and i assume that's the problem you were running into - preparing fix now"""
4527,286984421,"b""just realized I wasn't seeing your scene but my local button demo scene. for some reason i can't import your scene?!"""
4527,287099333,"b""we are exposing IsTouching . there's a public get for that just above the IsPressing"""
4527,287101503,b'that is currently determined in UpdatePressedState which is also invoking the ButtonPressed and Released signals. do we want to move all that into the getter?'
4527,287101635,"b""I'm not a big fan of getter with side effects"""
4527,287102748,"b""I took this over from how this was determined before - we could also just use Vector3.forward instead because that's what nearinteractiontouchable.localforward points to anyways - i'm not sure what the original intent behind this was. I don't want to dig up too many holes at once"""
4527,287102940,b'good point - this is not handled right now'
4527,287103957,"b""we can actually move the content of this function into OnEnable() that should solve the issue - we don't need to do this in Awake()"""
4527,287113188,"b""i copied one of the pressable buttons with back plate from the example and scaled it to 0.1  - i can press it though it's very difficult bc it's so hard to catch xD. i will use a scale of 0.3 in the example scene\r\n\r\n(tested with the new changes I pushed - rotations and debug visualisation offsets should be fixed by this)"""
4527,287114812,b'![image](https://user-images.githubusercontent.com/36998103/58283015-34c35780-7d9f-11e9-8bce-f2920a276a09.png)\r\n'
4527,287115660,b'should be fixed'
4527,287305658,"b""actually nevermind - we don't need this at all anymore . i remove it!"""
4527,287317344,"b""that's caused by hiding/showing ui elements in the OnInspectorGUI method - I've replaced all those checks with disabled groups , so we won't hide the options anymore but instead show them as grayed out (disabled) """
4527,287326371,b'just merged in latest changes and the button example scene has been removed - i guess our button examples are part of the hand interaction scene - not sure where to put the buttons there to not make it look messy - will talk to yoon but would be great if we can still get this change in for the current release even without the example'
4526,287345264,b'please add some documentation to this class '
4498,287354341,"b""please add comment why we're doing this weird gaze provider destroy"""
4498,287354859,b'add comment  #Resolved'
4527,287444084,"b""we're calling it in the inspector class"""
4527,287444191,b'ah ignore me. no it should be private!'
4501,288195521,b'this can be private'
4604,288612062,b'thanks!'
4673,290429474,b'can you add a description to that class - it will show up in the API docs'
4673,290446047,b'I would call StopClickTimer here to avoid duplicated code / makes it easier to refactor later'
4673,290446297,b'is it ok to pass here if we have a pointerCount of 0?'
4673,290446423,"b""I would turn this if around so you do the source id comparison first and if that one returns false it doesn't have to do the cast """
4673,290446649,"b""don't we have to call StopCoroutine before setting it to null?"""
4673,290446869,b'should we check !HasPress here as well?'
4752,291971199,"b'i\'m not particularly fond of this paragraph. It reads a bit weird to me. Also we should avoid using ""you"" and ""your"" in the docs\r\nMy suggestion:\r\n""It is possible to uncheck arbitrary items during the import of the Foundation package. However it\'s not recommended to do this at an early stage of development as it might break functionality. \r\nAfter having figured out the final feature set of the app, pruning unneeded providers and services can be done on the following folders:\r\n""'"
4752,291972999,b'mhh the last sentence probably should be ... unneeded providers and services can be done in the following folders . sry not my native language :D '
4842,293764358,b'I see the same issue as will here - if I understand this correctly you should return true in this method in null case as well when the override was previously set.'
4927,295197762,b'``\r\n```suggestion\r\n### Extending shader themes\r\n```'
4927,295197985,"b'```suggestion\r\nIf creating a custom interactable theme to modify shader properties, it is advised to extend the `InteractableShaderTheme` class. Please see the `InteractableColorTheme` class as an example to extend the `InteractableShaderTheme` class.\r\n```'"
4927,295198626,"b'```suggestion\r\nBoth of these two steps will help with performance. [**MaterialPropertyBlock**](https://docs.unity3d.com/ScriptReference/MaterialPropertyBlock.html) will ensure a new material instance is not created for every object modifying a shader property and integer shader property IDs will eliminate the string-to-int lookup step performed by Unity when using string keys (i.e ""_Color"") on set/get functions.\r\n```'"
4927,295200097,b'i would cross link this with the shader article (add a #See Also section on the bottom linking to https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/README_MRTKStandardShader.html?q=shader - and in the standard shader article link to the extending shader themes of this article)'
4928,295202752,"b""```suggestion\r\n| Slider UI for adjusting values supporting direct hand tracking interaction | MRTK's standard shader supports various fluent design elements with performance | Demonstrates how to use solver to attach objects to the hand joints |\r\n```"""
4893,295239327,"b""can you add the second parameter here and set it to true so in case someone inherits from this class they will have this inspector class per default if they don't implement their own?"""
4893,295245172,"b""you're setting the localForward to the newLocalUp here - cpy paste from SetLocalForward ?"""
4854,296656933,"b""looked into this, but I can't change it easily bc we're not receiving any of the collision events when we're manipulating the object - need to look into how to enable those events in another PR first"""
4895,296765712,"b""is it intentional that we're referring to the same formerly serialized as than the rotationHandleDiameter. Also the tooltip description is the same which is confusing - what's the difference between those two?"""
4895,296767309,"b""I really don't like that we put all the visual stuff into the logical parts of bounding box (we do the same in pressable button) - I think we should do a refactor pass at some point where we split this class up """
4895,296789436,b'can we add tooltips for those grow rates? '
4895,296790533,"b""from the naming those 2 variables (handleMediumProximity, handleCloseProximity) suggest that they do similar things but the tooltips have different explanations - is that intentional? (one time it's a factor the other is a distance) - if that's intentional we might want to rename them? It's a bit confusing that way"""
4895,296791604,b'i assume that scale is related to the handles? I would still add a tooltip here for all 3 scales'
4895,296813258,"b""wouldn't it be less hacky to do a:\r\nif (localScale == 0)\r\n{collider as BoxCollider).size = Vector3.zero;}\r\nelse\r\n{\r\n(collider as BoxCollider).size = new Vector3(0.02f / localScale, 0.02f / localScale, 0.02f / localScale);\r\n}\r\n\r\nor does that cause any other problems to have a collider with size 0? - just thinking if you're dividing by this really small number you might end up with some collider that is huge  - but actually you would want the collider to be 0 if the scale is 0 ?\r\n(0.02 / 0.0001 = 200)"""
4895,296813503,b'does this component always exist? do we need a nullcheck here?'
4895,296813687,b'does this component always exist? do we need a nullcheck here?'
4895,296814437,"b""same issue as mentioned before - if there's a local scale of null we will end up with a huge radius (400) - do we really want this?"""
4895,296815525,b'is there a reason why this is only clamped to 0.01 instead of the 0.0001 you were using before \r\n\r\nalso the same problem as before - using this instead of null might cause the collider size to be huge instead of null which we probably want in case of 0 scale '
4895,296815718,b'does this component always exist? do we need a nullptr check?'
4895,296815898,b'can we add this explanation to the code as a comment?'
4895,296820546,"b""do we really want to increase the box collider size in case of zero scale? - shouldn't the box collider just have zero size in that case? """
4895,296820844,"b""do we really want to increase the radius in case of zero scale? - shouldn't the radius just be zero size in that case?"""
4895,296822155,"b""we don't have to set this here - we're returning anyways"""
5030,296828207,"b'usually we\'re trying to avoid the ""here"" links (doc style guide) . It would be better if we would move those links into the text . you could link to the configuration guide in the first column on the word ""Configuration"" ?  '"
5030,296828382,"b'same as above - would be great if you can link to this from already existing text so we avoid the ""here"" links '"
5031,297114847,"b'thanks, my head was in C++ land yesterday :D '"
5035,297176107,"b'nit:  i would call this ""ToggleObservers"" / ""ToggleObserverActive"" or ""ToggleObserverState""- I wouldn\'t expect an update method to change the state of the observer'"
5036,297184804,b'thanks! I should use that for manipulationhandler as well - doing the manual magnitude compare there as well'
5014,297194948,"b""can you add more description to the tooltip? i don't think it's clear if you don't know the code """
5014,297195173,b'please add a short description to the class '
5014,297196004,"b'```suggestion\r\n            NoVelocitySnapToItem,\r\n```'"
5014,297204296,"b'```suggestion\r\n        /// Toggles whether the <see cref=""ScrollingObjectCollection""/> will use the <see cref=""Camera.onPreRender""/> event to hide items in the list.\r\n```'"
5014,297204741,b'can you add information to the comment what method will be used to hide items in case this option is disabled? '
5014,297210112,"b'```suggestion\r\n        /// The amount of time the <see cref=""PaginationCurve""/> will take to evaluate\r\n```'"
5014,297210263,"b'```suggestion\r\n        [Tooltip(""The amount of time the PaginationCurve will take to evaluate"")]\r\n```'"
5014,297216834,"b""does this mean how many columns / rows are visible inside the viewableArea - scrolldirection horizontal meaning columns, scrolldirection verticla meaning rows? - can we adjust the tooltip / comment so it's clearer to the user what this tier is doing? ViewableArea mentions tiers already before - but i can't figure it out from tooltips / comments"""
5014,297217834,b'is there a reason the default value is 0.001? will it be a problem if someone sets the z value to 0.0f?'
5014,297219698,b'can you define a float minCellSize = 0.00001f; and use that for height and width minimum'
5014,297243325,"b""do we really want users to be able to change this? (it's exposed in the inspector as well)"""
5014,297259437,b'```suggestion\r\n        private void HandleVelocityFalloff()\r\n```'
5014,297259560,b'```suggestion\r\n                case VelocityType.NoVelocitySnapToItem:\r\n```'
5014,297262103,"b""because i've seen this in other reviews: does that minCellSize actually make sense or are we doing this to avoid DIV / ZERO errors? if so we should probably handle that differently? """
5055,297605146,b'this is not very clear to me. can there potentially be another prefab used that has a different hierarchy structure? can that break the behavior? '
5054,297605503,b'```suggestion\r\n# Configuration and profiles\r\n```'
5054,297605963,"b""```suggestion\r\ncalled 'profiles' to accomplish this.\r\n```"""
5054,297611746,"b""why are we using camera service as an example if it's actually a bad example of profile usage? :D - this whole paragraph is a bit odd for me """
5054,297612675,"b'is this sentence referring to the input system profile or to all profiles. which ""new"" classes are we injecting? '"
5054,297613164,"b'that\'s specific to input system profile now, is it? (bc the sentence above says: ""Profiles also affect (and are not limited to) things like:\r\nif this is an example list that should represent all profiles i would add an example from another profile as well '"
5054,297613346,b'```suggestion\r\nProfiles can be tricky to navigate at first because of how deeply nested they can be (especially the Input System).\r\n```'
5054,297617122,"b'can we rephrase this paragraph - i\'m all in for being honest about profiles but we started the article with bad examples of profiles, then we say they\'re tricky because they\'re so nested and then that they\'re confusing. I don\'t think that we need the tricky sentence at all. it doesn\'t add any value for the reader / no additional information. \r\nThe confusing part could be phrased like: \r\n""Profile configurations are initially greyed out because they\'re set up with MRTKs default profiles. They can only be modified after cloning to ensure that customized profiles won\'t be lost after a MRTK version update.""'"
5054,297617709,"b""can we use modify here? we're using update for updating mrtk versions - this might be confusing """
5054,297618196,b'do we need that hint about profiler and profile?i assume architecture docs are read by developers who know the term profiler?'
5054,297620326,"b'previous sentence started with ""The addition"" \r\n\r\nApart form adding the MRTK gameobject to the scene the menu option will also:\r\n- add the MixedRealityPlayspace object, which is used by many other MRTK components to reason over world and local space transformations.\r\n- move the main camera as a child of the MixedRealityPlayspace..........'"
5054,297620455,b'```suggestion\r\n# Framework and runtime\r\n```'
5054,297620505,b'```suggestion\r\n### Scene system\r\n```'
5054,297620549,b'```suggestion\r\n### Spatial mapping\r\n```'
5054,297620608,b'```suggestion\r\n## MixedRealityToolkit object and runtime\r\n```'
5054,297621826,"b""```suggestion\r\nThe MRTK contains a multitude of different services that spin up at runtime and talk with each other (or don't talk\r\n```\r\n\r\ndo we need the comment in parenthesis?"""
5054,297625171,"b'maybe we can just change this to : \r\n\r\nMRTK has a single object that manages life and runtime of its services. \r\nThis entity ensures that:\r\n - when the game starts, discovery and initialization of services happens in a pre-defined order.\r\n- it provides a mechanism for services to register themselves (i.e. \xe2\x80\x9cI support this service!\xe2\x80\x9d) and for other callers to get a hold of those services.\r\n- provides the Update()/LateUpdate() calls and forwards them onto the various services (i.e. via UpdateAllServices/LateUpdateAllServices)\r\n\r\n(the sentence about how it could be done differently is not relevant for the architecture document i think?)'"
5054,297626606,"b'i would move this and the customer feedback into a different area. you\'re describing architecture and that\'s not releveant imho to the current architecture but could be part of a ""Considerations for future architecture improvements"" article'"
5054,297651602,"b""i wouldn't say most interesting bc that's subjective"""
5054,297651774,b'```suggestion\r\n- **Data providers**\r\n```'
5054,297651928,b'```suggestion\r\n    The input settings in the input profile have references to entities known as data providers - another word\r\n```'
5054,297652052,b'```suggestion\r\n    that describes these are device managers. These are components whose job is to extend the MRTK input system\r\n```'
5054,297652314,b'```suggestion\r\n    those APIs into MRTK-specific input concepts below. Another example would be the OpenVR provider (whose job it\r\n```'
5054,297652896,"b""```suggestion\r\n    articulated hand coming into existence).\r\n```\r\n\r\n(there's already ie in the beginning of the sentence)"""
5054,297653101,b'```suggestion\r\n    the hand (which is a controller) is close to objects that advertise themselves as supporting \xe2\x80\x98near interaction\xe2\x80\x99.\r\n```'
5054,297653694,b'```suggestion\r\n    Other examples for pointers are teleportation or far pointers (i.e. the shell hand ray pointer) that use\r\n```'
5054,297653897,"b'```suggestion\r\n    this doesn\xe2\x80\x99t devolve into chaos, there is a pointer mediator which controls which pointers are allowed to be\r\n```'"
5054,297654043,"b'```suggestion\r\n    active (for example, the mediator will disable far interaction pointers when near interaction is detected).\r\n```'"
5054,297654319,"b""i think we already had the definition before where we're saying an arm length away from the user is far interaction - i would remove this sentence?"""
5054,297654813,"b'```suggestion\r\n    delivered (i.e. where IMixedRealityPointerHandler, IMixedRealityFocusHandler, and other input events are delivered).\r\n```'"
5054,297655370,"b'i would not put the text in parenthesis - can be part of ""normal"" text :)'"
5054,297656583,b'```suggestion\r\n# Architecture overview\r\n```'
5054,297657013,"b'```suggestion\r\ncontained within the MRTK. After reading through the architecture documentation, the reader should understand:\r\n```'"
5054,297657454,"b'```suggestion\r\n-  the large pieces of MRTK and how they connect,\r\n```\r\n\r\ni think large pieces sounds a bit odd. maybe main areas? main components?'"
5054,297657662,"b'```suggestion\r\n- the concepts that MRTK introduces that may not exist in vanilla Unity,\r\n```'"
5054,297658021,b'```suggestion\r\n- how some of the larger systems (such as Input) work.\r\n```'
5054,297660092,b'```suggestion\r\ntable of contents to the side to dive into the rest of the architectural overview.\r\n```'
5043,297664938,"b'we should avoid using ""you"" in the documentation:\r\nWhile using the MRTK-provided build tooling for building the AppX, the MRTK build tools can automatically......'"
5067,297740323,"b""i picked a bad example - i'll update this section!"""
5067,297744313,b'added missing comments to textmesh pro and the teardown and added init of mrtk to that template as well '
5067,297745114,"b""agree it's a bit weird - @googlan probably knows why it's done that way"""
5054,297773244,"b""nit: can you use modified here as well? I didn't see that the first time i read through it."""
5054,297773297,"b""Another example for a more complex profile is the [InputSystem](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit/Definitions/InputSystem/MixedRealityInputSystemProfile.cs). \r\n\r\nI wouldn't say more useful in that sentence bc it suggests that the camera profile is not useful :D """
5055,297877221,b'```suggestion\r\n        // Sometimes the actual visual transform for the corner (in case when you use prefabs)\r\n```'
5067,298115935,"b""> Thanks for making this! You should check out Lars's PR and update the setup/teardown methods, but otherwise looks good.\r\n\r\nthanks Julia! had a look at the PR - i've adjusted the template - now i'm doing the init and destroy of mrtk in the setup and teardown methods as well. i think it makes sense to add lars new utility methods there as well after the PR has been merged. - I would also like to add some more guides / snippets in future for creating certain ux elements - so this is not the final guide yet, just a starting point so there's something available for ppl that haven;t written any tests yet. """
5067,298122322,b'xD i have no idea how that got in there :D'
5086,298192079,b'```suggestion\r\n            // by the manipulation handler. Check if these children have contexts that tell\r\n```'
5123,298633123,b'not sure if i should move that into the IMixedRealityNearPointer interface?'
5086,298985022,"b""is there a reason why we don't keep the list instead of the array?"""
4895,298989413,"b""is this a merge error ? I've seen those changes in one of julias PRs last week """
4895,299040178,"b""suggestion: use 1.0f as default value? we don't want users to set this up as 0.0f - so we shouldn't use it as default """
4895,299040548,b'the defaults for these fields are different than the values here - I would prefer we stick with one default setup'
4895,299041141,"b""Questions:\r\ndo we want to support users modifying these values during runtime? if so we wouldn't catch if someone puts a 0 there (moving it to the setter would fix that i suppose)\r\n\r\nwill we have a similar problem with the medium and close scale? \r\n"""
5123,299054373,"b""i didn't see any issues, but you're right I should do that!"""
5154,299477859,b'added comments to the other public fields for pressable button as well'
5165,299482891,"b""```suggestion\r\n- The asset in question is in the foundation package (i.e. it's in one of the following folders):\r\n```"""
5165,299483895,b'```suggestion\r\n> Any asset that sits in the examples package (i.e. part of the MixedRealityToolkit.Examples/ folder)\r\n```'
5165,299484038,b'```suggestion\r\n- The asset in question does not belong to the experimental namespace.\r\n```'
5165,299484241,b'```suggestion\r\n> See [Experimental features](../ExperimentalFeatures.md) for more information.\r\n```'
5165,299485055,"b""```suggestion\r\nAs the surface area for breaking changes is very large, it's important to note that having an absolute\r\n```\r\n(there's two times note in that sentence, so i would get rid of the first one)"""
5182,299871253,"b""```suggestion\r\nXref syntax can be difficult to remember - it's possible to enumerate all of the available xref IDs by first running\r\n```\r\n\r\nXref looks weird but it's the beginning of a sentence so it should be uppercase I think?"""
5177,299892538,"b'```suggestion\r\nhow they get updated, and how they determine the object(s) that are in focus. It will\r\n```\r\n(two sentences in a row starting with This section)'"
5177,299894029,b'```suggestion\r\nThe following are far pointers that come with the MRTK:\r\n```'
5177,299894330,b'```suggestion\r\n[A base pointer class](xref:Microsoft.MixedReality.Toolkit.Input.MousePointer) that draws lines from the source of the input (i.e. the controller) in the pointer direction. This is also used by other things like the Shell Hand Ray Pointer and the teleport pointers (which also draw lines to indicate where teleportation will end up at).\r\n```'
5177,299894606,b'```suggestion\r\nkeys (in the hand interaction examples scene).\r\n```'
5177,299894976,"b""there's no text for this, also in the other cases there was no space between ptr name and the word ptr"""
5177,299895597,b'```suggestion\r\n   only supporting the articulated hand controller type.\r\n```'
5177,299895824,"b'```suggestion\r\nthe articulated hand controller is associated with the PokePointer, GrabPointer, and the\r\n```'"
5177,299896204,"b'```suggestion\r\n- Starting the various device managers (for example, [OpenVR](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Providers/OpenVR/OpenVRDeviceManager.cs),\r\n```'"
5177,299897305,"b""```suggestion\r\nevery single input event that hasn't been handled elsewhere in the scene.\r\n```"""
5177,299900839,"b""```suggestion\r\nor OpenVR APIs) and translating data from those systems into ones that fit the MRTK's higher\r\n```"""
5177,299905027,b'```suggestion\r\n3. It creates controllers that it discovers from the underlying system (for example \r\n```'
5177,299905096,b'```suggestion\r\n   the provider could detect the presence of articulated hands)\r\n```'
5168,299953046,b'MinCompressPercentage  is a public field: please add this tooltip as a /// comment as well so it shows up in the docs '
5168,299959086,"b""I think I'm missing some information here:\r\nSo we're multiplying that scalePercentage that we got from the axis with the smallest scale value with the border but the border could be potentially in all three dimensions? x, y and z axis? So if only the z axis got scaled down won't that blow up borders going along x and y axis? """
5224,301153453,"b'we\'re avoiding ""You"" in the docs'"
5224,301156722,"b""```suggestion\r\nTo handle them the corresponding interface must be implemented. Additionally there's the option to receive the events raised on all game objects instead of just the ones on itself and its children. This requires to register as a global event listener calling [`RegisterHandler`](xref:Microsoft.MixedReality.Toolkit.IMixedRealityEventSystem.RegisterHandler*) on the input system with the corresponding interface(s).\r\n```\r\n\r\navoid you"""
5224,301157156,"b""```suggestion\r\n> [`IMixedRealityFocusChangedHandler`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusChangedHandler) and [`IMixedRealityFocusHandler`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler) should be handled in the objects they are raised on. It is possible to receive focus events globally but, unlike other input events, global event handler won't block receiving events based on focus (the event will be received by both global handler and a corresponding object in focus).\r\n```"""
5224,301162331,"b""```suggestion\r\nAlternatively, there's the possibility to derive the handler script from [`InputSystemGlobalHandlerListener`](xref:Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener) for global registration or from [`BaseInputHandler`](xref:Microsoft.MixedReality.Toolkit.Input.BaseInputHandler) for choosing in the inspector whether to register as global listener or not. In both cases the abstract methods `RegisterHandlers` and `UnregisterHandlers` which specify the interfaces to listen to, need to be implemented.\r\n```"""
5224,301162682,"b""```suggestion\r\n> - (Preferred) Register the script's game object as a global listener via [`MixedRealityToolkit.InputSystem.RegisterHandler`](xref:Microsoft.MixedReality.Toolkit.IMixedRealityEventSystem) in `OnEnable` (`UnregisterHandler` explicitly in `OnDisable`). `RegisterHandler` needs to be called multiple times, for listening to global input events on multiple interfaces.\r\n```"""
5224,301164894,b'```suggestion\r\n> - Derive the script from [`InputSystemGlobalHandlerListener`](xref:Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener). This will add an `inputSystem` property to the component. Also make sure inputSystem is valid before registering handlers. Implement its abstract methods `RegisterHandlers` and `UnregisterHandlers`. In these implementations [`MixedRealityToolkit.InputSystem.RegisterHandler`](xref:Microsoft.MixedReality.Toolkit.IMixedRealityEventSystem) should be used to define the interfaces the global events should be received for.\r\n```'
5224,301165240,b'```suggestion\r\n- The `IMixedRealityEventSystem` old API methods `Register` and `Unregister` have been marked as obsolete. They are preserved for backwards compatibility.\r\n```'
5224,301165621,"b'```suggestion\r\nThe old event system API `Register` and `Unregister` could potentially cause multiple issues in runtime, main being:\r\n```'"
5224,301165829,"b'```suggestion\r\n- If a component registers for global events, it would receive global input events of *all* types.\r\n```\r\n\r\nuse italic for highlighting , not uppercase'"
5224,301166504,"b'```suggestion\r\n- If one of the components on an object registers for global input events, all components on this object will receive global input events of *all* types.\r\n```'"
5224,301166892,"b'```suggestion\r\n- If two components on the same object register to global events, and then one is disabled in runtime, the second one stops receiving global events.\r\n```'"
5224,301166980,b'```suggestion\r\nNew API `RegisterHandler` and `UnregisterHandler`:\r\n```'
5224,301167826,"b'```suggestion\r\n- If you have been inheriting from `InputSystemGlobalListener`, change inheritance to `InputSystemGlobalHandlerListener`. Implement `RegisterHandlers` and `UnregisterHandlers` abstract methods. In the implementation call `inputSystem.RegisterHandler` (`inputSystem.UnregisterHandler`) to register on all handler interfaces you want to listen global events for.\r\n```\r\n\r\ncan you add example code for this? will make migration easier'"
5224,301167881,b'can you add example code for this? will make migration easier'
5224,301168212,b'same: can you add example code for this? will make migration easier'
5233,301530879,b'can you describe a bit further what this class does?'
5233,301537363,"b""what's the purpose of the diagnostics system manager? (add more doc)"""
5233,301537940,b'add more doc'
5233,301538883,b'more doc? '
5233,301682765,"b'what does a base service manager do, what is it for? more doc?'"
5233,301684003,b'would be good to have documentation for all the public methods and properties'
5264,302495828,b'you could use @luis-valverde-ms  hand utility class instead of this (and the other MoveHandFromTo calls)'
5264,302500711,"b'i\'m a bit scared of ""touching"" touchable now - if there\'s no issue for this yet please create one on github referring to this description - we should do a refactor!'"
5242,302541815,b'can you add the toolip as /// comment as well so it shows up in the docs?'
5242,302542770,b'(same for the other configurable values)'
5242,302570627,"b""do you need this override? isn't the behavior the same as in the base class?"""
5242,302571769,b'this should probably be Screen Space Mouse Pointer in case of the 2d one?'
5248,302997272,b'this sentence is already in the above paragraph? is it meant to be in this one as well?'
5242,303391696,"b'nit: it\'s actually a bit weird that we put the comments in question format - this should be a description: ""Movement threshold to reach before un-hiding the mouse cursor""\r\n\r\nsame applies for the other comments and tooltips'"
5242,303393278,b'add description what the class does (eg keeps mouse pointer within screen boundaries)'
5242,303421733,"b""if we do that we loose the option to hide the cursor immediately after movement stops. you'd have to set some value in there to trigger the hide. I wouldn't change the behavior for now, also this would mean another breaking change """
5242,303905493,"b""yeah you're right it's unlikely someone wants it, but i wouldn't remove it for now :) thanks!"""
5242,303908115,"b""i can't find the description. wondering if you didn't push the last commit or if github is just not showing me the change?\r\n\r\nalso if you can add one or two sentences to the spatialmousepointer class description , just what it does (mouse pointer moves around camera in 3d space , not bound to screenspace)"""
5309,304037083,"b""it feels a bit wrong to me that we set the scale min and max here but not retain the info about this being relative to the initial state. so if you would call start() again after setscalelimits has been called with relativeToInitialState is true , the scale would suddenly change because it's interpreting those values as relativeToInitialState the second time this is called. """
5309,304040512,"b""I don't like that we're storing those min max values in two different classes. Would it be an option to remove them here and instead change SetScaleLimits to AdjustScaleLimits(..) which does the initialscale multiplication but returns that value instead of storing it and ClampScale would then take the max scale values as second parameter ? that way you keep the data in one place and it doesn't diverge """
5242,304323336,"b""I know the documentation in most classes is not great - but we're trying to improve that. So whenever a new feature is added or an existing feature gets fixed / refactored we should update / improve documentation as well :)"""
5359,305770513,b'will tune it down a bit for now - final steps will be decided by lukas clean up PR :)'
5359,305787042,"b""I had a look , but the test for 2 hand rotation will be very different from this one - so i'll make a separate PR for that - i'll add it to the manipulation handler test task. Fixing the last GA bug first"""
5309,307810959,b'Please adjust this comment. Its not a helper class anymore. We might want to add this component to the docs of manipulation handler or bounding box as well. And make sure its used in one of the example scenes so ppl see how to use it there as well '
5493,312057027,b'add class description please'
5618,313334487,b'\xe2\x9d\xa4\xef\xb8\x8f '
5618,313336502,b'\xe2\x9d\xa4\xef\xb8\x8f '
5628,313973233,"b""afais it's just taking whatever default is defined in the class - but i'll check again if that's really the case """
5628,313976610,"b""yeah confirmed. it's getting the defaults from the class and this is just overwriting whatever default value is already in there"""
5628,313977930,"b'I vote for ""Interaction Filter""'"
5633,314671900,b'why are we not deleting this file?'
5633,314680013,b'` [!NOTE] Mouse support is not available by default in MRTK and can be enabled by adding a new *Input Data Provider* of type @Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager to the MRTK input profile.`'
5677,315157228,"b""can't we move this code into a public function called ConvertPlaneDistances(SpaceMode toMode) and then call this function here and in the inspector? """
5677,315157371,"b""if you do that you don't have to expose WorldToLocalScale and LocalToWorldScale public """
5705,315163937,"b""nit: after this sentence we explain how to move and use the hand input simulation but we don't mention eye input as well which feels missing now. \r\nThere's a link after the two lists to the input simulation service but there's none referring to eye simulation\r\n\r\n```suggestion\r\nThe in-editor input simulation allows you to test virtual object behavior given a specific type of input such as [hands](InputSimulation/InputSimulationService.md#hand-simulation) or [eyes] (EyeTracking/EyeTracking_BasicSetup.md#simulating-eye-tracking-in-the-unity-editor).\r\n```\r\n"""
5702,315186283,b'```suggestion\r\n[Eye tracking simulation](../EyeTracking/EyeTracking_BasicSetup.md#simulating-eye-tracking-in-the-unity-editor) can be enabled by checking the __Simulate Eye Position__ option in the\r\n```'
5702,315186529,"b""i'd remove this sentence and put the link to the eye tracking simulation in the first sentence ( see suggested change)"""
5699,315188590,b'are you missing a link to the pointer doc here?'
5704,315191728,b'is there a reason we have all those absolute links to our github.io page? can we change that to the relative path to md files so docfx can do the link validation on those as well?'
5701,315194591,"b""do we actually need that image or are we ok with just describing the path of that checkbox / property?\r\n\r\nwe have a docs guideline for images to only include them if absolutely necessary. Someone would have to update them whenever that profile changes\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#images--screenshots\r\n(I know we're already showing profile screenshots in a lot of places)"""
5677,315325952,"b""i'm observing a very strange behavior - I debugged a bit in the inspector because I thought I had used that setter before and seems like you can call the setter from the inspector code - however, for some reason the hololens2 version of the button doesn' t apply the changes properly. So PressableButtons work with calling the setter but Hololens 2 won't - They both however call that setter, so there must be something else interfering afterwards in the hololens 2 version of that button"""
5677,315338202,"b"" it's only in the derived class where this is causing issues for me \xc2\xaf\\_(\xe3\x83\x84)_/\xc2\xaf"""
5720,315668177,"b'```suggestion\r\nTo run an app on device as a standalone app (for HoloLens, Android, iOS, etc.), the build and deploy step needs to be executed in the unity project. Building and deploying an app that uses MRTK is just like building and deploying any other Unity app. There are no MRTK-specific instructions. Read below for detailed steps on how to build and deploy a Unity app for HoloLens.  Learn more about building for other platforms at [Publishing Builds](https://docs.unity3d.com/Manual/PublishingBuilds.html).\r\n```\r\n\r\n(try avoid using you in docs if possible)'"
5720,315668316,b'```suggestion\r\n# Building and deploying MRTK\r\n```'
5720,315668384,b'```suggestion\r\n### Building and deploying MRTK to HoloLens 1 and HoloLens 2 (UWP)\r\n```'
5720,315675425,"b""```suggestion\r\nInstructions on how to build and deploy for Hololens 1 and Hololens 2 (UWP) can be found at [building your application to device](https://docs.microsoft.com/en-us/windows/mixed-reality/mrlearning-base-ch1#build-your-application-to-your-device) .\r\n```\r\n\r\ni don't think we have to refer to the previous paragraph , it doesn't add anything here? what do you think?"""
5720,315676122,"b'```suggestion\r\n**Tip:** When building for WMR, HoloLens 1, or HoloLens 2, it is recommended that the build settings ""Target SDK Version""\r\n```'"
5720,315676538,"b'```suggestion\r\nMake sure that the ""Target SDK Version"" dropdown includes the option ""10.0.18362.0"" - if this is missing,\r\n```'"
5720,315677020,b'```suggestion\r\n[the latest Windows SDK](https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk) needs to be installed.\r\n```'
5720,315677742,"b""is this something we can easily describe in words so we don't have a screenshot in here that might get outdated? """
5719,315682079,"b'```suggestion\r\n- [`GridObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/GridObjectCollection.cs) supports Cylinder, Plane, Sphere, Radial surface types\r\n```'"
5719,315682199,b'```suggestion\r\n- [`ScatterObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/ScatterObjectCollection.cs)  supports scattered style collection  \r\n```'
5719,315682341,b'```suggestion\r\n- [`TileGridObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/TileGridObjectCollection.cs) provides some additional options to GridObjectCollection.\r\n```'
5719,315682899,b'```suggestion\r\n|![Grid Object Collection - Radial](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionRadial.png) Grid Object Collection - Radial | ![Grid Object Collection - Plane](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionPlane.png) Grid Object Collection - Plane |\r\n```'
5719,315683033,b'```suggestion\r\n|![Grid Object Collection - Cylinder](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionCylinder.png) Grid Object Collection - Cylinder | ![Grid Object Collection - Sphere](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionSphere.png) Grid Object Collection - Sphere |\r\n```'
5719,315685260,"b""do we need this screenshot? we're already mentioning the name of the script, so a screenshot of the property inspector shouldn't be necessary? If we want to describe the properties we can do that in text. (trying to avoid having any property grids or editor settings in screenshots because they will be outdated after a while and people tend to forget to update the screenshots - text is easier to maintain)"""
5613,315688393,"b'```suggestion\r\n    - Delete **MixedRealityToolkit** and **MixedRealityPlayspace**, if present, from the hierarchy\r\n```'"
5613,315688711,b'```suggestion\r\n    - Animated handle by proximity\r\n```'
5613,315689320,b'can we add a link to the bounding box example scene here?'
5613,315689649,b'```suggestion\r\n**Dependency window**\r\n```'
5613,315689909,b'```suggestion\r\nA [dependency window](Tools/DependencyWindow.md) has been added which displays how assets reference and depend on each other.\r\n```'
5613,315690028,b'```suggestion\r\n**Extension service creation wizard**\r\n```'
5613,315690358,b'```suggestion\r\nMaking the transition from singletons to services can be difficult. The [extension service creation wizard](Tools/ExtensionServiceCreationWizard.md)\r\n```'
5613,315690496,b'```suggestion\r\n![Default HoloLens (1st gen) configuration profile](./Images/ReleaseNotes/DefaultHoloLens1ConfigurationProfile.png)\r\n```'
5613,315690572,b'```suggestion\r\n**Fingertip cursor**\r\n```'
5613,315690691,b'```suggestion\r\n**Hand menu graduated from experimental**\r\n```'
5613,315690891,b'```suggestion\r\n**HoloLens 2 button**\r\n```'
5613,315691006,b'```suggestion\r\n- HoloLens 2 style round button has been added\r\n```'
5613,315691079,b'```suggestion\r\n**HoloLens 2 shell parity**\r\n```'
5613,315691274,"b'```suggestion\r\nThis release updates the MRTK to better mirror the features, behaviors and visuals of the HoloLens 2 shell experience. This [GitHub](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4200) issue describes the changes.\r\n```'"
5613,315691381,b'```suggestion\r\nThe input system was modified to add a reference to an IMixedRealityRaycastProvider.\r\n```'
5613,315691510,"b""```suggestion\r\nSpecify your desired raycast provider in the input system's configuration profile. \r\n```"""
5613,315691577,b'```suggestion\r\n![Selecting the raycast provider](Images/ReleaseNotes/SelectRaycastProvider.png)\r\n```'
5613,315691687,b'```suggestion\r\n**Input animation recording**\r\n```'
5613,315691885,b'```suggestion\r\nfrom within your Unity application. See the HandInteractionExamples scene in the examples package\r\n```'
5613,315692008,b'```suggestion\r\n**MRTK standard shader**\r\n```'
5613,315692166,"b""```suggestion\r\nThe [MRTK standard shader](README_MRTKStandardShader.md) now supports Unity's lightweight scriptable render pipeline.\r\n```"""
5613,315692233,b'```suggestion\r\nAdditional improvements\r\n```'
5613,315692372,b'```suggestion\r\nsharing enabled and do not write depth.\r\n```'
5613,315692641,b'```suggestion\r\nshadows.\r\n```'
5613,315692756,b'```suggestion\r\nat (player) build time.\r\n```'
5613,315692860,b'```suggestion\r\ncalled \xe2\x80\x9cBlended Clipping Width\xe2\x80\x9d allows developers to set the width of the clip blend region.\r\n```'
5613,315692925,b'```suggestion\r\n- Lighting of back face triangles is now correct.\r\n```'
5613,315692989,b'```suggestion\r\n**Optimize window**\r\n```'
5613,315693422,b'```suggestion\r\nThe MRTK [optimize window](Tools/OptimizeWindow.md) is a utility to help automate and inform in the process of\r\n```'
5613,315693680,b'```suggestion\r\n**Radial solver**\r\n```'
5613,315694011,"b'```suggestion\r\nTo use, drag and drop the desired prefab into your hierarchy and select the configuration\r\n```'"
5613,315694151,b'```suggestion\r\nare subject to change. Please file any and all issues you encounter on GitHub.\r\n```'
5613,315694269,b'```suggestion\r\n    - Usability of slates by adding the shadow based on the finger proximity.\r\n```'
5613,315694331,b'```suggestion\r\n    - Border thickness issue fixed on flattend Bounding Box.\r\n```'
5613,315694527,b'```suggestion\r\n**System keyboard**\r\n```'
5613,315694843,b'```suggestion\r\n**Take screenshot**\r\n```'
5613,315694956,b'```suggestion\r\nA take screenshot utility menu item (Mixed Reality Toolkit > Utilities > Take Screenshot) has been added\r\n```'
5613,315695082,b'```suggestion\r\n**UX controls**\r\n```'
5613,315695267,b'```suggestion\r\n**Updated architecture documentation**\r\n```'
5613,315695510,b'```suggestion\r\n**Extension service wizard**\r\n```'
5613,315695720,"b'```suggestion\r\nWhen using the extension service wizard,  *Generate Inspector* and/or *Generate Profile* are not actually optional. Trying to create an extension service with either of these deselected will result in an error on the following page. Furthermore, the extension service created for the user will create a property for the ScriptableObject profile that was not actually created. This results in a compiler error until the property line is removed. \r\n```'"
5613,315695831,b'```suggestion\r\n1. Ignore error message in extension service wizard\r\n```'
5704,315699891,"b""ok, yes i wasn't thinking about people using this page directly from our github repo site - makes sense that way :)\r\nthanks!"""
5732,316102103,"b""```suggestion\r\n**Improved solvers**\r\n```\r\n\r\nI don't think we should capitalize solvers - https://microsoft.github.io/MixedRealityToolkit-Unity/version/prerelease/2.0.0_stabilization/Documentation/Contributing/DocumentationGuide.html#capitalization"""
5732,316102512,b'```suggestion\r\nPlease review the **solvers** section of [Updating from RC2 to 2.0.0](Updating.md) for additional changes and mitigation details.\r\n```\r\n\r\nshould we instead of mentioning the solvers section here just link to the solvers section directly via an link/anchor?'
5732,316102720,b'```suggestion\r\n**Input animation recording**\r\n```'
5731,316109091,b'```suggestion\r\n# Input events\r\n```'
5731,316109585,b'```suggestion\r\nThe list below outlines all available input event interfaces to be implemented by a custom MonoBehavior component. These interfaces will be called by the MRTK input system to handle custom app logic based on user input interactions. [Pointer input events](pointers.md#pointer-event-interfaces) are handled slightly differently than the standard input event types below.\r\n```'
5731,316110184,b'```suggestion\r\n| [`IMixedRealityInputHandler<T>`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputHandler`1) | Input Changed | Raised on changes to inputs of the given type. **T** can take the following values: <br/> - *float* (e.g returns analog trigger)<br/> - *Vector2* (e.g returns gamepad thumbstick direction) <br/> - *Vector3* (e.g returns position of tracked device) <br/> - *Quaternion* (e.g returns orientation of tracked device)<br/> - [MixedRealityPose](xref:Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) (e.g. returns fully tracked device) |\r\n```'
5731,316110477,b'```suggestion\r\n| [`IMixedRealityGestureHandler<T>`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityGestureHandler`1) | Gesture Updated / Completed | Raised on detection of gestures containing additional data of the given type. See [**gesture events**](Gestures.md#gesture-events) for details on possible values for **T**. |\r\n```'
5731,316110829,b'```suggestion\r\n1. The MRTK input system recognizes that an input event has occurred.\r\n```'
5731,316110883,b'```suggestion\r\n1. The MRTK input system fires the relevant interface function of the input event to all registered global input handlers.\r\n```'
5731,316111058,b'```suggestion\r\n1. For every active pointer registered with the input system:\r\n```'
5731,316111103,b'```suggestion\r\n    1. The input system determines which GameObject is in focus for the current pointer.\r\n```'
5731,316111229,"b""```suggestion\r\n    1. The input system utilizes [Unity's event system](https://docs.unity3d.com/Manual/EventSystem.html) to fire the relevant interface function for all matching components on the focused GameObject.\r\n```"""
5731,316111338,b'```suggestion\r\n        - Example: Components implementing the interface [`IMixedRealitySpeechHandler`](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealitySpeechHandler) will be searched for when a speech command is recognized.\r\n```'
5731,316111439,b'```suggestion\r\n        - Note: The Unity event system will bubble up to search the parent GameObject if no components matching the desired interface are found on the current GameObject.\r\n```'
5731,316118393,"b""Can't you instead of copy pasting say something like:\r\n\r\n```suggestion\r\nPointer input events are recognized and handled by the MRTK input system in a similar way than [regular input events](InputEvents.md#input_events_in_action). The difference being that pointer input events are handled only by the GameObject in focus by the pointer that fired the input event - as well as any global input handlers. Regular input events are handled by GameObjects in focus for all active pointers.\r\n```"""
5722,316123629,b'added section markers '
5731,316731042,"b""I meant we only add the sentence from the top and remove this list as we're linking to the regular input events (in action) anyways"""
5786,318084987,b'```suggestion\r\nAlternatively you can find the eye calibration in the system settings: Settings > System > Calibration > Run eye calibration. \r\n```\r\n\r\nnit: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#mentioning-menu-entries'
5781,318087545,b'please add class description'
5781,318091154,b'add comment for public method'
5781,318117942,"b""can you add a  [UnityEditor.CustomEditor(typeof(BaseNearInteractionTouchable), true)] here so this is the fallback for all the NearInteractionTouchables? Then you also won't have to define the NearInteractionTouchableUnityUI editor further up. """
5781,318118516,b'add documentation to public interface'
5781,318134748,b'we already defined red for the release plane'
5781,318149072,"b""where is this class used? I'm not sure I understand the use case. Can you add some doc and maybe use it somewhere in an example?"""
5781,318158147,"b""i'm not super happy to extend this class because we have to throw it out (or redo) soon.\r\n\r\nThe unity ui button case does not share anything with the interactable, so it looks a bit weird - the class is handling two completely different things - should we create a base class and specialized versions for those two cases?"""
5799,318521880,"b""it says in the comment that the override is set to true, but you're setting it to false?"""
5799,318522092,"b""also shouldn't the asset fail after setting it to false because the gaze cursor should be hidden?"""
5797,318531104,b'```suggestion\r\n## Hand visualization settings\r\n```'
5781,318574484,"b""I like the executeEvents approach.\r\nThough I wouldn't put this into pressablebutton right away. We would have to move that EventBehavior enum over as well and we can't get rid of the router class without taking care of interactable, which I wouldn't want to put on Adam right now. \r\nSo just to avoid having a version where users have to set this up in different locations depending on if it's unity ui or interactable I would say we leave this in the router until I find time to fix this for Interactable as well. We're currently looking into migration scripts, so as soon as that's in place it should hopefully be an easy one to just move those fields from the router into pressablebutton\r\n"""
5781,318577593,"b""if we add this we should adjust the doc comments and InteractableOnClick member as well so it's not only referring to interactable"""
5781,318586572,"b""can we rename this to INearInteractionTouchableDirected? It's not going to be used by the volume near interaction touchable and doesn't make sense to move it into base class. I think renaming would make it easier to understand what it's for."""
5738,318999253,"b""Can we add some tooltip or info msg here as well that explains what's going to happen or link to documentation, just so it's more clear what's going on."""
5738,318999261,"b""I would add some tooltip or info msg that says we're going to remove CanvasUtility and NearInteractionTouchableUnityUI """
5823,319440003,b'should we adjust the comment for docfx as well here? '
5823,319469448,b'```suggestion\r\n- *Poke Layer Masks* - A prioritized array of LayerMasks to determine which possible GameObjects the pointer can interact with and the order of interaction to attempt. Note that a GameObject must also have a `NearInteractionTouchable` component in order to interact with a poke pointer.\r\n```'
5781,319888843,"b""I'm wondering if it might be better to have a clamp in case of the nearInteractionTouchableUnityUI instead of that button. So in case someone modifies the value directly in the field and sets it below zero it gets reset to 0 , in case someone is using the start push distance plane the plane won't move beyond the 0 value. We could give an additional information in the tooltip saying that unity ui will require this to be positive value. I would prefer this over having the warning and the button in the inspector because the pressablebutton won't work with that setup, so it's pointless to allow these values. What are your thoughts on that?"""
5781,319899224,b'```suggestion\r\n        /// The press direction of the button as defined by an INearInteractionTouchableDirected.\r\n```'
5781,319937786,b'should be safe to not destroy this as the play test base class is deleting all the root level gameobjects in the tests scenes on teardown '
5853,320663487,"b'```suggestion\r\n/// <summary>\r\n/// Updates the left and right hand images according to the tracked state\r\n/// </summary>\r\n```\r\nremove inheritdoc tag and add proper doc comment, eg:'"
5853,320665123,b'agree to that - we should add doc comments to all public functions / properties '
5853,320668968,"b'```suggestion\r\nA number of tools exist in the Unity editor for recording and examining input animation. These tools can be accessed in the [input simulation tools window](InputSimulationService.md#input-simulation-tools-window), which can be opened from the _Mixed Reality Toolkit > Utilities > Input Simulation_ menu.\r\n```'"
5853,320669154,b'```suggestion\r\n## Input simulation tools window\r\n```'
5853,320669400,b'```suggestion\r\nEnable the input simulation tools window from the  _Mixed Reality Toolkit > Utilities > Input Simulation_ menu. This window provides access to the state of input simulation during play mode.\r\n```'
5853,320669514,b'```suggestion\r\n## Viewport buttons\r\n```'
5853,320669714,"b'```suggestion\r\nA prefab for in-editor buttons to control basic hand placement can be specified in the input simulation profile under __Indicators Prefab__. This is an optional utility, the same features can be accessed in the [input simulation tools window](#input-simulation-tools-window).\r\n```'"
5853,320670046,b'```suggestion\r\n## Hand simulation mode\r\n```'
5853,320670124,b'```suggestion\r\n# Hand simulation\r\n```'
5853,320670328,b'```suggestion\r\nIn the [input simulation tools window](#input-simulation-tools-window) the __Hand Simulation Mode__ setting switches between two distinct input models. The default mode can also be set in the input simulation profile.\r\n```'
5853,320688601,"b""I don't think we should capitalize things like Hand Simulation Mode  or Left/Right Hand Control Key or Hand Hide Timeout https://microsoft.github.io/MixedRealityToolkit-Unity/version/releases/2.0.0/Documentation/Contributing/DocumentationGuide.html#capitalization"""
5853,320688952,b'```suggestion\r\nHands can be switched on permanently in the [input simulation tools window](#input-simulation-tools-window) or by pressing the __toggle left/right hand key__ (default: T/Y for left/right respectively). Press the toggle key again to hide the hands again.\r\n```'
5853,320689264,"b'```suggestion\r\nTo rotate hands using the mouse, hold both the __left/right hand control key__ (shift/space) _and_ the __hand rotate button__ (default: right mouse button).\r\n```'"
5853,320689402,b'i think we should write all these options lowercase https://microsoft.github.io/MixedRealityToolkit-Unity/version/releases/2.0.0/Documentation/Contributing/DocumentationGuide.html#capitalization'
5853,320718076,b'pls add doc  comment for this class'
5853,320718229,b'pls add doc comment for class'
5853,320723460,b'pls document all public properties / functions'
5853,320725001,b'add doc comment to public function'
5853,320734250,"b""can you add doc comments as well pls , tooltips won't shop up in the doc portal"""
5853,320734649,"b""also some properties don't have tooltip (eg mouseRotationSensitivity)"""
5886,321349781,b'add comment for adjusting the position '
5886,321409958,"b""can you add a movement and verify the position is still valid after grabbing it ? and maybe another verification after you've released it again """
5890,321798429,b'please document all public properties'
5890,321800079,"b""do we need these min / max values here? you already define a range in the profile for users setting it up in the editor and if someone sets this to a ridiculous value in code I would assume they're doing that intentional and we don't need to clamp it to some reasonable range? """
5955,324756393,"b""can't we just define those classes internal instead of public?"""
5955,324756550,"b""there's no reason imho to have those public"""
5965,325130390,b'adjust comments in this file to refer to BoundsControl instead of BoundingBox'
5955,325186743,b'there should be /// comments for all the public fields as well so they show up in github.io'
5955,325187239,b'(if this is still subject to change you can add them in another PR)'
5955,325227406,"b'I think it would be better to move the Migrate function into a MigrationUtility or other public space, so we can use it for a batch conversion as well. \r\nNot part of this PR: might be good to add a Migration Utility Window for MRTK where you can trigger upgrading to the new UX elements in current scene / all scenes / prefabs etc. '"
5965,325273736,"b""I wasn't sure about that. That solves that question. Thanks!"""
5965,325274240,"b""no, theres's a couple of todos in there that i have to take a look at still - i just wanted to get rid of the first big junk for now because the PR kept growing. also wanted to get some feedback on it before i keep on going down that rabbit hole :) """
5965,325286827,"b""i would like to tackle these todos in a follow up PR. I left them there on purpose. I didn't want to move more things around in this PR because it was already getting too big. """
5965,325291481,b'yes there is! (https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5340) linking to description now'
6004,326653398,"b""I wasn't aware of that. Thanks @ritijain!"""
6030,327066180,"b""```suggestion\r\nSee [Examples Hub README page](Documentation/README_ExampleHub.md) to learn about the details on creating multi-scene hub with MRTK's scene system and scene transition service.\r\n```"""
6027,327067843,"b""there's no tooltip for touchableCollider - can you add it please and also describe the default behavior there, so ppl know that if this is not set its own gameobjects BoxCollider will be used."""
6027,327068102,b'(please also add default behavior description to /// comment that will appear in docs'
6027,327068325,"b""tooltips are missing as well :-) . If you're already adding the /// please add tooltips <3 """
6027,327074483,"b""agreeing with Julia, you would want to test the behavior of that touchable when you're interacting with it. I wouldn't do any checks on the pokepointer when the nearinteractionTouchable is attached or not. Testing the IsNearObject shouldn't be part of your test. That can be another test, but this one should focus on testing your new method in the NearInteractionTouchable. \r\nAlso it does make sense to not only test the default behavior you mentioned, but also to manually set a new collider that isn't the own gameobjects one, to verify that the bounds properly adjust by calling your method. \r\n\r\nUse Julias steps for the test scenario and provide two test cases, one for default behavior , one for setting a collider from a different gameobject that has different bounds and make sure that the interaction works and bounds are calculated / set correctly"""
6066,328255234,b'if this is serialized and visible in the editor we should document it (+tooltip)'
6066,328255695,b'does it make sense to have the gameobject this component is attached to set up as default if the objectToScale = null?'
6067,328256531,b'```suggestion\r\n        /// Returns the first pointer of given type that is associated with this hand.\r\n```'
6067,328259420,"b""i had to read this several times to understand what's going on. can we rewrite this a bit like:\r\n\r\nIt seems to be a problem to have only one collider (testObject) in the scene. Unity will occasionally return an empty hit result even if there's an intersection with the testObject collider. To work around this issue we're adding a second gameobject with collider in the background. """
6067,328261225,b'now that i read it after rewriting the old one also works for me - so ignore this if you want :D'
6068,328261832,b'```suggestion\r\n            if (disabled)\r\n```'
6068,328266142,b'```suggestion\r\n            if (!Enabled)\r\n```'
6115,329015641,"b""```suggestion\r\n2. If fixing a bug, write a test to verify the fix and ensure that future code modifications won't break it again.\r\n```"""
6115,329016255,"b'```suggestion\r\nMRTK has a set of tests to ensure that changes to our code do not regress existing behavior. Before submitting a pull request, make sure to :\r\n```\r\n\r\nWe should avoid using ""you""'"
6115,329016782,"b'```suggestion\r\n1. Run the tests locally so your changes don\'t regress existing behavior (completing PRs won\'t be allowed if any tests fail)\r\n```\r\n\r\nwe already have ""make sure to"" in the previous sentence. would remove it here so we\'re not repeating that over and over'"
6115,329018447,"b'```suggestion\r\n2. If writing a feature, write new tests to prevent upcoming code changes breaking this feature.\r\n```'"
6115,329018699,"b'```suggestion\r\nTests can also be run by a [powershell](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-6) script located at `Scripts\\test\\run_playmode_tests.ps1`. This will run the playmode tests exactly as they are executed on github / CI (see below), and print results. Here are some examples of how to run the script\r\n```'"
6115,329019542,"b'```suggestion\r\nTo have multiple test runs locally, modify the according test scripts. The following python script should make this scenario more convenient.\r\n```'"
6115,329019756,b'```suggestion\r\nPrerequisite for running the python script is having [Python 3.X installed](https://www.python.org/downloads/).\r\n```'
6115,329020240,b'```suggestion\r\nFor a single test that needs to me executed multiple times:\r\n```'
6115,329020429,b'```suggestion\r\nRun the following from a command line ([PowerShell](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-6#powershell-core) is recommended)\r\n```'
6115,329020868,b'```suggestion\r\nCopy and paste the output into your test file. The following script is for running multiple tests in sequence:\r\n```'
6115,329020962,b'```suggestion\r\nThe new test file should now contain\r\n```'
6115,329021121,b'```suggestion\r\nOpen the test runner and observe the new tests that can now be called repeatedly.\r\n```'
6115,329021160,b'```suggestion\r\n## Writing tests\r\n```'
6115,329021487,"b""this is explaining our test setup - i would move that to the top of the page bc it's prerequisite for going through your instructions (by then you should already know that we're using unity test runner)"""
6111,329022704,"b'```suggestion\r\nTo change the text of the button, update the *Text* component of the *TextMeshPro* object under *IconAndText*. Changing the icon can be done by replacing the material that is assigned to *UIButtonSquareIcon* object. By default, *HolographicButtonIconFontMaterial* is assigned. \r\n```'"
6111,329022790,"b'```suggestion\r\nTo create a new icon material, duplicate one of the existing icon materials. These can be found under ``MixedRealityToolkit.SDK/Features/UX/Interactable/Materials`` folder. \r\n```'"
5965,333557720,"b""will do after I've got the docs updated -> future PR :)"""
5965,333563116,b'https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6260'
5965,333563535,"b""i'll leave them for now and tackle them in my follow up PR - should be fine as we're still in a feature branch """
5965,333578533,"b""if we want to be consistent i feel like we would have to use the new line version as there's a lot of get / set that have more than one line of code and we wouldn't want to collapse those"""
5965,333579201,b'how about we do the short version for simple get / set like this : public bool DrawTetherWhenManipulating => drawTetherWhenManipulating;\r\n'
5965,333582289,b'https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6261 added ticket and linked to refactor task'
5965,333939035,b'just so i understand this correctly: so your suggestion is testing changing the bounds in code (instead of hand interaction) and checking if the min / max applies to that as well? '
5965,333946918,"b""they're very specific to the tests - i saved the start size / center values but i'd rather keep those local - will put them in local vars"""
5965,333949917,"b""oh ok, didn't know that. this code has been in bounding box for a long time and seemed to work. """
5965,334505226,"b""didn't realize all of them are actually using the same values - moved into util class """
5965,334506886,"b""i just sticked with whatever was there, but you're right, better stay consistent :) removing"""
5965,334514850,"b""i'd actually prefer not having to get the transform scale handler at all into bounding box - i'll do that in a follow up pr"""
5965,334527201,b'created ticket and linked to bb refactor ticket'
5965,334974178,"b""i created a resource folder for bounds control now that has a default material for handles - we fall back to that one if the user hasn't set up anything """
5965,334976658,"b""i don't want anyone else to access those as they're purely for internal bounding box or now bounds control use. there's a lot of methods i had to make public so bounding box could access them but there's no reason to access them from anywhere else. if i make them public we'd have to support all of them / changing them would introduce a breaking change etc. \r\nIn c++ i would've made all of them private and friended boundscontrol. afais making them internal is the closest I can do to that in c#"""
5965,335065992,b'```suggestion\r\n        }\r\n        \r\n```'
5955,335511352,b'nit: add class description comment '
5955,335529016,b'is this a todo for future PR?'
6304,336011408,"b'```suggestion\r\nWhen adding a [`SurfaceMagnetism`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism) component to a GameObject, it is important to consider the layer of the GameObject and it\'s children, if any have colliders. The component works by performing various types of raycasts to determine what surface to ""magnet"" itself against. If the solver GameObject has a collider on one of the layers listed in the `MagneticSurfaces` property of `SurfaceMagnetism`, then the raycast will likely hit itself resulting in the GameObject attaching to it\'s own collider point. This odd behavior can be avoided by setting the main GameObject and all children to the *Ignore Raycast* layer or modifying the `MagneticSurfaces` LayerMask array appropriately.\r\n```'"
6304,336012102,"b'```suggestion\r\nFinally, surfaces farther than the `MaxRaycastDistance` property setting will be ignored by the surface magnetism raycasts.\r\n```'"
6293,336022311,b'```suggestion\r\n                return (capability == MixedRealityCapability.EyeTracking) && EyesPose.IsSupported();\r\n```\r\nI actually liked that one parenthesis - improves readability imo'
6293,336024176,b'```suggestion\r\n                return (capability == MixedRealityCapability.SpatialAwarenessMesh) && WindowsSpatialSurfaces.SpatialSurfaceObserver.IsSupported();\r\n```\r\n\r\nnit: can we leave one of those parenthesis for readability?'
6310,336038183,"b""if someone modifies the pointer appearance during runtime the bounds won't be correct anymore. \r\nI'm just having a scenario in my mind where someone shows context dependent pointer representations - in that case bounds would always refer to the pointer visuals that were used as a initial value"""
6310,336060621,b'update comment'
6310,336066606,"b""I'm not sure if this approach will work as expected with all the platforms we're supporting - we can't rely on them having the same / similar FOVs - Does this work well for both HL1 and HL2? How does this look on mobile?\r\n\r\nUsually we're using cm / m as units for properties in our UX components. I was wondering if we could maybe have a size in cm or fixed scale applied to the cursor in 1m distance - this would be the value we set up and then we calculate the cursor scaling from this reference which should be the same on all the platforms? Would that make sense?"""
6310,336069024,b'default value should be false as that was the original behavior '
6321,337494409,b'public enums need documentation '
6321,337494626,"b""either make this internal or add a comment bc it's public"""
6321,337495973,b'either make internal or add comment'
6321,337496746,b'do we need a scale constraint in the one hand move update?'
6321,337497211,"b'> !smoothingActive || lerpTime == 0f [](start = 45, length = 35)\r\n\r\nnit: put parenthesis around condition to make it easier to read'"
6321,337497300,"b'>!smoothingActive || lerpTime == 0f [](start = 50, length = 34)\r\n\r\nnit: put parenthesis around condition to make it easier to read'"
6321,337499265,b'add a class description for other devs'
6321,337503342,b'should we move those into the rotation constraint? #Resolved'
6321,337504190,"b""should we change this to be ScaleConstraint? would make more sense I suppose / less confusing for users - (for later: we can create a doc chapter about all our constraints and how they're working together with different ux elements)"""
6321,337505215,"b""xD didn't see i'm in manipulationhandler - fine this way :) \r\n\r\n---\r\nIn reply to: [337503342](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6321#discussion_r337503342) [](ancestors = 337503342)"""
6321,337510472,"b'I would rather have this interface just with a pose and have the pose include the scale value - our current MixedRealityPose doesn\'t support that, but maybe we can discuss adding that for a future PR. That would make this interface cleaner and easier to use. Also MixedRealityPose would feel ""more complete"" for me as it\'s our representation of a Unity Transform'"
6321,337515085,"b""nit: didn't we have this issue in another test as well? maybe worth moving into a util method so we can easier remove this hack in case that issue gets fixed?"""
6321,337516835,b'does it work to set all three axis as constraints ? '
6321,338066188,"b""I would've preferred ScaleConstraint - i don't think the minmax is necessary?"""
6321,338067897,"b""I'd add the couple of lines to test this bc the stuff that breaks is usually the unexpected use cases :) . doesn't harm to have it there if it's working and we support it"""
6355,338103002,"b""I should probably not overwrite what we're serializing here, but apart from that I'm not sure if I'm instantiating this right. @Railboy , @Troy-Ferrell any hints?\r\nFrom what I saw is that If I don't manually instantiate the instance of that scriptable will be shared across all the boundcontrols that link to it, which will result in all of them sharing the same gameobjects created for handles / boxdisplay etc. \r\nAm I supposed to instantiate them myself? I tried googling for this, but it seems people are using them purely as data storage?"""
6310,338181731,"b'makes sense, thanks for looking into it!'"
6355,338205696,"b""I'd prefer not putting the local variables of each visual back into bounds control if anyhow avoidable. \r\n\r\n> We need to make sure property manipulations are being done on the config file, not on this one gameobject instance...and more importantly that users understand this\r\n\r\nAgree on that. It might not be clear to people these are shared, especially if we're integrating them directly into the boundscontrol inspector gui\r\nApart from tooltips I can style that section different in the inspector so it's more visible it's not part of that object\r\n\r\n> When running play mode, we need to either disable the inspector or re-targeting the UI to the copied scriptable objects. Because changes made by the designer/user won't propagate\r\n\r\nI wonder if that already works as I'm already replacing the serialized field with the runtime instance in bounds control - not sure if the inspector would fetch the new value during runtime. I'll look into it!\r\n\r\n"""
6355,338504093,"b'hmm just realizing ScriptableObjectExtension is part of the Editor namespace - which would suggest those are methods that should only be used in editor mode, not runtime. '"
6355,338511421,"b""I was looking into that - the problem is that it needs the extents from the bounding box / bounds control. So we have to pass those in somehow. I can update the bounds in a different method and cache them and then have the update on it's own but that would just move the problem.\r\nI was also thinking about calculating the extents in the class, but that would require further params from bounds control (flattenaxis) and if someone changes the bounds calculation in the control it might not match up anymore. So I don't really want to go that route. \r\nThis applies to all other visual elements in bounds control as well. The extents are the only thing i couldn't really get rid of so far in an easy way. """
6355,338519277,"b""yep, this is a bit weird - i'll change it"""
6355,338585171,"b""i was thinking about having another layer / class for keeping all the visuals / visual configurations there but that was before the scriptableObject change and wasn't sure if it actually benefits anyone - with scriptableObjects this makes a lot more sense :) """
6355,338650717,"b""hmm the more i move stuff around the more i think I designed this wrong (ScriptableObject learning experience)- \r\nSo I think it would be good to have both - a scriptable object as a shareable data container for all visuals AND a runtime created object that holds logic and instance relevant data members. \r\nSo there's eg: BoundingBoxLinks which can be a simple c sharp class and BoundingBoxLinkConfiguration which is a Scriptable and holds all the immutable data. \r\nBounding Box Setup for the user would be like this: \r\n![image](https://user-images.githubusercontent.com/36998103/67501639-8ccaf680-f67c-11e9-9dc7-a4e770f587ec.png)\r\nSo they can plug in and out their data sets for either the whole config or parts of the visual config. \r\nBut those configs all stay separated, we just pass the data set to the logic classes but they won't modify anything.\r\nIt's similar to what Lars suggested with the static methods, just that we can still keep BoundsControl clean. \r\n\r\nDoes that make sense?"""
6344,339216613,"b""should we add a class description for API docs? It's public so we probably should even though it's just an inspector?"""
6344,339219877,"b""i'm wondering if we should put that order number into a file somewhere. i'm just creating a couple of scriptable objects for bounds control and while looking at other scriptable objects we have already in mrtk I saw these order magic numbers. putting those numbers directly into the scriptable object file makes it really hard to keep track. What do you think?"""
6344,339221527,"b""comment because it's public"""
6344,339222201,b'please comment all public fields here so it shows up in the api docs :)'
6344,339269982,b'https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6387 :) '
6355,340255946,"b""I've pushed a new version where the scriptable objects are just data containers and can be shared that way without the need of actually creating a new instance\r\nfurther I moved the logic and runtime created objects into a separate class that is not part of the scriptable object and just reads the data from whatever is linked as scriptable configuration\r\nHowever I didn't add a another configuration layer as scriptable to combine all the separate visual configs as sharing a whole configuration can also be achieved by using and inheriting from a prefab. In that case it's just making it more complicated for the user if I add another layer. Let me know what you think!"""
6355,340258062,"b""I'm not sure if we really want to do that - it would add another layer on top of the other visuals - if we combine them into one config then you'll lose the ability to share single visual elements - if i leave them apart and add the layer on top it's more cumbersome to set up. I'd rather not have the user create and link 2 assets to be able to change one property in a eg rotation handle :-/"""
6355,340636644,b'renamed all of them to configuration for now :) '
6355,340762390,"b""yeah it's part of cleaning up - I'm trying not to open up not too many holes at once - ticket for rig changes is here https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6260 """
6355,340792827,b'ah! good catch! thanks \xf0\x9f\x91\x8d '
6355,340804110,"b""it's a good suggestion. i had this a while ago when i had fewer classes but thought it's harder to find them that way in the asset explorer. now that the number of classes has grown i think it makes sense to do that. """
6355,340804913,"b""i don't really want to put it into that extensions util as it's in the editor namespace and is just edit mode utils in there. this method is used during runtime. i could create a util class for runtime utils?"""
6650,348555595,"b""I'm probably missing something here but if I understand this correctly you're determining if we have to upgrade this asset purely by checking if those values are set to the wrong defaults, which could be problematic in future. After version 2.2 there might be grid object collections that have those values set up on purpose by the user and then we're upgrading those assets and changing the setup the user wanted to have on every scene load. """
6647,348642083,"b'```suggestion\r\n        private static readonly GUIContent selectionModeLabel = new GUIContent(""Selection Mode"", ""The selection mode of the Interactable is based on the number of dimensions available."");\r\n```'"
6647,348642461,"b'```suggestion\r\n        ""This is different than the enabled property at the GameObject/Component level."" +\r\n```'"
6659,348645913,b'```suggestion\r\n### Prioritize writing tests \r\n```'
6659,348645992,b'```suggestion\r\n# Coding guidelines\r\n```'
6636,348648615,b'same here'
6636,348648726,"b""maybe lets not expose this if it's not supported anymore?"""
6636,348649552,b'```suggestion\r\n### Prioritize writing tests\r\n```'
6636,348650096,"b""don't expose because obsolete?"""
6636,348650235,b'same here?'
6636,348650339,b'same here?'
6636,348650418,b'same here?'
6636,348650513,b'same here?'
6636,348650595,b'same here?'
6636,348650679,b'same here?'
6636,348650745,b'same here'
6636,348650851,b'obsolete - remove from menu?'
6636,348651024,b'same here'
6636,348653430,b'same here'
6573,349005199,b'```suggestion\r\n    /// Writes collider trigger from articulated hands events to a TextMeshPro object\r\n```'
6573,349008373,b'```suggestion\r\n# Hand physics extension service\r\n```'
6573,349008429,b'```suggestion\r\nThe hand physics service enables rigid body collision events and interactions with articulated hands.\r\n```'
6573,349008600,b'```suggestion\r\n## Getting started with hand physics extension service\r\n```'
6573,349009554,b'```suggestion\r\nAdd the hand physics service to the list of extension services and use the default profile.\r\n```'
6573,349010294,b'```suggestion\r\n# Hand physics extension service\r\n```'
6573,349010388,b'```suggestion\r\nThe hand physics service enables rigid body collision events and interactions with articulated hands.\r\n```'
6573,349010933,"b'```suggestion\r\nTo enable the extension, open your RegisteredServiceProvider profile. Click `Register a new Service Provider` to add a new configuration. In the component type field, select HandPhysicsService. In the configuration profile field, select the default hand physics profile included with the extension.\r\n```'"
6573,349010995,b'```suggestion\r\n## Profile options\r\n```'
6573,349011069,b'```suggestion\r\n### Hand physics layer\r\n```'
6573,349011170,"b'```suggestion\r\nWhile the service defaults to the ""default"" layer (0), it is recommended to use a separate layer for hand physics objects. Otherwise there may be unwanted collisions and/or inaccurate raycasts.\r\n```'"
6573,349011316,b'```suggestion\r\n### Finger tip kinematic body prefab\r\n```'
6573,349016283,b'```suggestion\r\n### Use palm kinematic body\r\n```'
6573,349016468,b'```suggestion\r\n### Palm kinematic body prefab\r\n```'
6573,349017194,b'```suggestion\r\n        /// The prefab to represent the palm PhysicsJoint\r\n```'
6573,349017789,b'```suggestion\r\n        /// What hand this component lives on.\r\n```'
6573,349018864,"b'```suggestion\r\n    /// Configuration profile for <see cref=""HandPhysicsService""/> extension service.\r\n```'"
6573,349020350,b'can you add the tooltip descriptions as /// comments to the public fields so it shows up in documentation? '
6573,349021151,b'```suggestion\r\n        /// The parent GameObject that contains all the PhysicsJoints\r\n```'
6573,349021273,b'```suggestion\r\n        /// Whether to make the palm a PhysicsJoint\r\n```'
6573,349021504,b'```suggestion\r\n    /// Updates a rigidbody transform against another transform.\r\n```'
6573,349027462,b'please add a doc comment to all the public fields'
6573,349035676,b'should we destroy the relevant kinematic bodies in case of value == null? (same goes for palm )'
6573,349036572,"b'```suggestion\r\n        /// <param name=""rigidBodyPrefab"">The prefab to instantiate.</param>\r\n```'"
6573,349036674,"b'```suggestion\r\n        /// <param name=""jointType"">the specified <see cref=""TrackedHandJoint""/> to instantiate against.</param>\r\n```'"
6573,349037649,"b'```suggestion\r\n            textField.text = text + ""<br>"";\r\n```'"
6492,349098002,"b""```suggestion\r\n        /// Reference to the GameObject's button component.\r\n```"""
6492,349099078,b'adjust comment'
6492,349105892,b'```suggestion\r\n        /// Fired every time the close button is pressed.\r\n```'
6492,349110280,"b'```suggestion\r\n        /// <param name=""startText"">The initial text to show in the keyboard\'s input field.</param>\r\n```'"
6492,349110531,"b'```suggestion\r\n        /// <param name=""startText"">The initial text to show in the keyboard\'s input field.</param>\r\n```'"
6492,349110726,b'```suggestion\r\n        /// Function to reposition the keyboard based on target transform and collider information \r\n```'
6738,351727583,"b'```suggestion\r\ninstead provides a way to identify specific capabilities of the system (for example, if the system has the articulated\r\n```'"
6738,351727798,b'```suggestion\r\n### Input system capabilities\r\n```'
6738,351727953,b'```suggestion\r\n### Spatial awareness capabilities\r\n```'
6738,351728088,b'```suggestion\r\n# The spatial object mesh observer\r\n```'
6738,351728463,b'```suggestion\r\n3. Select the desired spatial mesh object  \r\n```'
6738,351728641,b'```suggestion\r\n1. Update the surface reconstruction\r\n```'
6738,351728717,b'```suggestion\r\n### Windows device portal\r\n```'
6738,351728833,"b'```suggestion\r\nThe [Windows device portal](https://docs.microsoft.com/en-us/windows/mixed-reality/using-the-windows-device-portal) can be used to download the spatial mesh, as a .obj file, from a Microsoft HoloLens device.\r\n```'"
6738,351728931,b'```suggestion\r\n1. Navigate to the 3D view page\r\n```'
6738,351728988,b'```suggestion\r\n1. Connect to your HoloLens using the Windows device portal\r\n```'
6738,351729133,b'```suggestion\r\nSpatial mesh objects in the observer.\r\n```'
6738,351729301,b'```suggestion\r\n### Update interval\r\n```'
6738,351729491,b'```suggestion\r\n### Observer shape and extents\r\n```'
6738,351729578,b'```suggestion\r\nThe spatial object mesh observer sends the entire 3D mesh to the application. Observer shape and extents are not considered.\r\n```'
6738,351729673,b'```suggestion\r\n## Level of detail and triangles / cubic meter\r\n```'
6738,351734571,"b""this seems a bit hacky to me - what magic is happening when manually focusing the speech input handler on start? is there a better way to solve this? and if we have to go with the hack can we comment why we're doing this? """
6738,351736455,"b'i\'m not sure this needs to be an assertion? it could also be a warning imho.\r\nalso i would give more information to the user if we decide to keep this - the current assert log is not providing any information. maybe like: ""Trying to remove a pointer in that wasn\'t registered"".\r\nsame goes for assert a few lines below: ""Trying to remove a pointer that has already been removed""'"
6744,351743531,b'can you provide a class description of what this button class does?\r\n\r\n'
6744,351743726,b'please add a comment describing the public fields of your class'
6744,351743839,b'remove excess whitespace '
6744,351744212,b'please provide a class description with /// comment so users can read up on it in the API documentation'
6744,351744490,b'add /// comment documentation to all public fields and methods for API documentation'
6744,351744699,b'typo: hoverBlue'
6744,351745006,b'remove whitespace and fix wrong intendation '
6744,351745160,b'remove whitespace'
6744,351746212,b'I think this should be: if (textList.Count >= 8) \r\nelse you might access an element out of the list bounds'
6744,351746997,"b'why is it *30 +2f , can you explain the magic numbers with a comment?'"
6744,351747208,b'please explain why *1.56f - 0.78f in a comment'
6727,351766100,b'can you move this into a separate method? i think this is the exact same code as above?'
6727,351791174,b'add a comment for this part of the code please :)'
6738,352699570,"b""no, they should be lower case - it's ms docs styleguide - don't do random capitalization  - only names should be uppercase"""
6738,352707042,"b""i wasn't sure about that one - if official ms docs are putting it in uppercase we have to as well :) thanks for checking kurtis!"""
6781,353230560,b'would also prefer UpdateController or any variation of that - CreateController is misleading '
6783,353671226,b'nit: add comment for api docs: resets deltas to zero '
6492,355622815,"b""good catch - we'll adjust in follow up PR"""
6492,355772818,"b""yeah i didn't have permission. - fixed the entry now in https://github.com/HoloSpaces/MixedRealityToolkit-Unity/pull/2 - we can merge that PR into this one"""
6834,356216006,"b""I agree that this should be reset too , but having a look at the code (get/set for property, deprecated set method, setting flag directly) I don't see anywhere in MRTK where we would actually set that flag. Is this wired up in the inspector somehow? """
6834,356254004,"b""@Troy-Ferrell wouldn't it be better to call ResetInputTrackingStates() at that spot to make sure all the interaction states are reset?"""
6820,356256855,"b""shouldn't max and min value be float - if you have a slider that is based on float values you might not want to be limited by integer / whole numbers"""
6820,356257333,b'agree - maybe you can find a better names - like sliderValue and sliderDistance instead of myValue and value'
6838,356269349,b'```suggestion\r\n### Unity UI raycast analysis\r\n```'
6838,356270335,"b'```suggestion\r\nGraphics raycast operations are performed per pointer in MRTK to determine if any Unity UI elements are in focus. These raycasts can be quite expensive and to help improve performance, UI elements that do not need to be returned in the results should be disabled as raycast targets. Every [Graphic](https://docs.unity3d.com/2018.4/Documentation/ScriptReference/UI.Graphic.html) element has a [`Graphic.raycastTarget`](https://docs.unity3d.com/2018.4/Documentation/ScriptReference/UI.Graphic-raycastTarget.html) property. This tool will search for text UI elements that have this property enabled and thus are likely candidates to be disabled.\r\n```'"
6872,357333629,b'```suggestion\r\n### Oculus hands (provided via the Oculus open source project)\r\n```'
6872,357333843,"b'```suggestion\r\nDetailed settings for hand simulation can be found in the SimulatedHandAPI prefab, which is instantiated through the hand tracking profile. This includes key bindings for hand movement and mouse button bindings for gestures.\r\n```'"
6870,357339387,b'that comment is a bit off. maybe:\r\nTests that sphere pointer behaves correctly when hand is near grabbable and grabbable is in or outside camera FOV'
6870,357349578,b'+1'
6870,357350997,"b""at the cube no longer visible test we're moving past the object, so it's not in FOV anymore. The edge case is if you have an object that is so big that it spans the entire FOV, so a cube in front of you that takes up the entire screenspace. We could add a test for that by just spawning a huge cube and checking if the pointer is active?"""
6870,357352871,"b""sry in front of you is wrong - it has to surround you as well.\r\n\r\nthough now thinking about this - if we have that scenario, do we really want to leave that pointer enabled? like if there is a gigantic cube surrounding us like a room and we're close to the back wall of that room and there's objects to manipulate inside of that cube that might be able to trigger far interaction? \r\n\r\nOn the other hand , not sure if you would want to define a thing like that as a grabbable then..... probably not"""
6875,358210506,b'those three methods are the same except the transform flag check - wondering if we should put the content into a common private function where we just pass the constraint '
6875,358215707,"b""I'm not sure if this works, but you could try with AssetDatabase.FindAssets ? not sure it works on components, but we're using it on scriptables"""
6875,358219737,"b""nit: i'm not a big fan of the name of this test - it's not really clear to me what it does from reading the name - CombinedConstraintFarNear? """
6863,358276239,"b""yes it's probably a good idea to add them to our guidelines - we should have all ux components there, else it's inconsistent and users of the component menu won't realize a component is available if the entry is missing."""
6863,358278990,b'do we need to write some sort of migration for this? breaking change?'
6863,358283717,b'oh god - thanks for changing this!!!!! '
6863,358286977,"b""Oh wow! I didn't know that. Thanks!"""
6870,358322313,"b""yes, i didn't realize the cube was surrounding us in that case - all good :)"""
6924,358941995,"b""this is not used right now - we removed the migration buttons for now because we don't want ppl to upgrade yet - this will be used again once we are ready for graduating the feature. """
6924,358943733,"b""that is fine - it's just a rename - we don't need a migration for that - unity is smart enough to figure that out"""
6924,358948281,"b""https://github.com/microsoft/MixedRealityToolkit-Unity/issues/6926 added ticket for cleaning up this class and added to bounding box refactor task - i don't want to clean it up for now because I might rewrite it several times until we reach the final version. Just copied this over so we don't miss any of the tests we already had in place for the old bounding box"""
6924,358954670,b'will this still work if you have a monobehavior link instead of gameobject @MenelvagorMilsom ? that way you might be able to avoid the breaking change?'
6924,359293723,"b""We tried looking into the mentioned attribute MovedFrom but couldn't find any documentation about it. What does this attribute do? \r\nUnity handles renames automatically - there's no need to do any migration. All references to renamed scripts are still working. I'm not sure I'm understanding the concern about the rename."""
6963,362236171,"b'```suggestion\r\n        [Tooltip(""The gameObject that contains the thumb visuals.  This will get rotated to match the slider axis"")]\r\n```'"
6963,362236268,"b'```suggestion\r\n        /// Property accessor of thumbVisuals, it contains the desired tick marks.  This will get rotated to match the slider axis.\r\n```'"
6963,362236488,b'nit:\r\n\r\nif (thumbVisuals != value)\r\n{\r\nthumbVisuals = value;\r\n..........'
6982,363388570,"b""yes exactly that! I'm expanding the existing bounds by the medium proximity value. i'll add a comment"""
6982,363715225,"b'```suggestion\r\n            // Get the max radius possible of our current bounds and extent the range to include proximity scaled objects. This is done by adjusting the original bounds to include the ObjectMediumProximity range in x, y and z axis\r\n```'"
6981,363715642,"b""```suggestion\r\n    /// The element can be loosely constrained (a.k.a. tag-along) so that it doesn't follow until it is too far.\r\n```"""
6981,363725100,"b'```suggestion\r\n        /// The division of steps this object can tether to. Higher the number, the more snapping steps.\r\n```\r\nsnapple steps <3 '"
6981,363727981,b'private'
6981,363728014,b'private'
6981,363728045,b'private'
6981,363728888,b'private'
6981,363733061,"b'you could add it to the components menu as well   [AddComponentMenu(""Scripts/MRTK/Experimental/Solver/Follow"")]'"
6987,363801234,b'why not use test hand instead of PlayModeTestUtilities'
6943,364187090,b'class needs description '
6943,364187367,"b""please document public properties with /// comments - tooltips won't shop up in the api docs """
6943,364190530,"b""it might be confusing for people using this as we're using two different ways for expressing the same thing: min/max timer, min/max delay. can we stick to one terminology? \r\n\r\nAlso I'm wondering if it might be better to keep min max delay separate properties? there's a pretty long explanation for that field and it might be easier to understand if those are their own settings\r\neg: showVisualsDelayNoHands, showVisualsDelayHandsTracked ?"""
6943,364192581,b'is this in seconds?'
6943,364193415,"b""change to /// comment - else it won't show up in docs"""
6943,364195488,"b""i assume this means that the hand visuals always need to be the first child of the gameobject this script is assigned to? If so  this should be documented in the class description.\r\n\r\nWould it make sense to have the user assign the visualsroot in one of the properties? Have a gameobject property that you can just link to the hand visual in the editor - that way there's no guessing where in the hierarchy the visuals are. """
6943,364195576,"b""this won't work if visualsroot is null -> move into if """
6943,364196403,b'can this fail if visualsroot is null?'
6943,364196543,b'please add /// comments so it will show up in the API docs'
6943,364197460,b'/// docs'
6943,364197762,b'/// docs \r\nalso this should be private '
6943,364199045,b'does this fail if VisualsRoot == null?'
6943,364199123,b'change to /// comment'
6943,364199187,b'private'
6943,364199537,b'is this intentional?'
6943,364199583,b'private?'
6943,364199614,b'/// comment'
6943,364199654,b'/// comment'
6943,364199820,"b'```suggestion\r\n            // Check hand tracking, if configured to do so\r\n```'"
6943,364200322,b'public methods need /// documentation for api docs'
6943,364200613,b'this will fail if m_animator is null'
6943,364200657,b'private'
6943,364200759,b'fails if m_animator is null'
6943,364202625,b'might be null?'
6943,364204314,b'add class description'
6943,364204405,b'should be in experimental namespace'
6943,364204472,b'should be in experimental namespace'
6943,364205595,b'please add /// comments for all public fields (or fields configurable in the editor)'
6943,364213695,"b""can't you use Transform.localPosition for this?"""
6943,364214803,b'if tracking offset is always zero we can remove it \r\n\r\n'
6943,364215519,b'why are we modifying the local position of the parent of this gameobject? '
6943,364218313,b'a struct can never be null - did you mean to check for Vector3.zero?'
6943,364219628,b'needs /// comment'
6943,364219677,b'needs /// comment'
6943,364220847,"b""couldn't you just do input.transform.position - root.transform.position\r\nif you substract world pos of root from the input world pos you should end up with the relative position of the input gameobject to the root gameobject"""
6943,364221578,b'now after reading further through this I realized what local position this is referring to \r\n\r\ncan we change this name to something like : relativePositionTrackingToRoot ?  and adjust the comment that describes what this actually refers to - local position usually just defines the position to the immediate parent '
6943,364222536,"b""same as m_position: this should be more descriptive (the comment as well) - i thought this is actually a local position to the parent but it's a relative position to the root gameobject """
6943,364225853,b'should be in Experimental namespace'
6943,364226149,b'add class description'
6943,364226299,b'add /// comments to all the public fields'
6943,364228178,b'/// for public method'
6943,364228740,b'remove?'
6943,364229407,b'```suggestion\r\n# Hand coach\r\n```'
6943,364229708,"b""not sure about this one - our guidelines would suggest this should be lower case if we're not aiming to make this a brand name\r\n(this would apply to all other occurrences in this doc as well)"""
6943,364230493,b'```suggestion\r\n- Far select- Used for objects that are far away\r\n```'
6943,364230848,b'```suggestion\r\n### Interaction hint \r\n```'
7014,364675902,"b'```suggestion\r\n    - At the bottom, press the **Save** button.\r\n```'"
7015,364718608,b'Yes please!'
7018,364744331,b'i think you forgot your todo :)'
7016,364781940,"b""i'm wondering if we should integrate this somehow into the IMixedRealityNearPointer interface """
7006,365284985,b'agree on that - having it in the class description is enough :) '
7006,365291946,b'i thought it is :O '
7006,365292101,b'```suggestion\r\n# Migration window\r\n```'
6943,365294192,"b""no it's only for mentioning the feature in the docs - if you're directly using the class name HandCoach with a link to the api you can also stick to upper case, but just for describing the feature in the docs we should stick to lower case as it's not a brand or name\r\n\r\nyou can find guidance on doc styleguide here: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#capitalization"""
7006,365299665,"b""```suggestion\r\nThe migration window allows the user to select scene objects, entire scenes or the whole project for migration of specific obsolete components. \r\n```\r\ni removed the link to code - i don't it really gives value to the article and it will just be outdated / also it's pointing to dev branch and we're recommending using release versions, not dev branch\r\n\r\nnit: don't use random capitalization https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#capitalization"""
7006,365299998,"b'```suggestion\r\nTo open the window, select *Mixed Reality Toolkit->Utilities->Migration Window*. Once the migration window is open, the selection mode navigation tabs can be enabled by choosing the component specific implementation of the migration handler.  \r\n```'"
7006,365300085,b'```suggestion\r\n### Object mode\r\n```'
7006,365301119,b'```suggestion\r\nSelecting the objects tab enables the object field where the user can drag and drop any game object from the currently open scene or prefab from the project folder to be migrated.\r\n```'
7006,365304025,b'```suggestion\r\nPressing the remove *(-)* button displayed at the right side of the listed object removes the object from the selection list.\r\n```'
7006,365304251,"b'```suggestion\r\nOnce all the desired objects are in the list, pressing the *Migrate* button will apply the changes required by the chosen migration handler implementation to all components in the selection that match the implementation.\r\n```'"
7006,365304303,b'```suggestion\r\n### Scene mode\r\n```'
7006,365304430,b'```suggestion\r\nAllows user to drag and drop scene assets containing objects to be migrated.\r\n```'
7006,365304536,b'```suggestion\r\n![Selection migration](../../Documentation/Images/MigrationWindow/MRTK_Object_Migration.png)\r\n```'
7006,365304634,b'```suggestion\r\n![Selecting scenes for migration](../../Documentation/Images/MigrationWindow/MRTK_Scene_Selection.png)\r\n```'
7006,365305074,b'```suggestion\r\n### Project mode\r\n```'
7006,365305298,b'```suggestion\r\nPressing the *Migrate* button will update the component targeted by the migration handler implementation for all prefabs and scenes in the project.\r\n```'
7006,365317615,b'```suggestion\r\n![Migrating a complete project](../../Documentation/Images/MigrationWindow/MRTK_Project_Migration.png)\r\n```'
7006,365318904,"b""agreeing with Will. if you want to mention this you can create a section how to write migration for your scripts - but I don't think we will need it for now :)"""
7006,365322133,b'```suggestion\r\n    /// Components require to implement the IMigrationHandler in order to be processed by the migration window\r\n```'
7032,365769791,"b""we're not including the source files in the nuget package anymore? """
7006,365784085,"b""hmmm now that you're mentioning it - we might need that for other asset files as well - like scriptable objects that are not components / directly associated to gameobjects"""
7006,365790147,"b""though it's probably alright to add that functionality once we have something to upgrade in those areas - i don't want to invest too much time now for something we might not use in the end :) """
6943,365791673,"b""I would say that depends on the comment / intention - In general, yes, I'm voting for using /// comments whenever we document a private method as it will be shown in the api docs as well that way - however if you have reason to add a comment which you might not find to be fitting for api docs you can use // comments so it won't show up there :) """
6943,365825952,b'would you mind adding a comment to this just in case someone else gets confused by this'
7056,366265022,b'we should also move existing experimental features into that section. (eg scrolling object collection)'
7057,366267432,"b""could you add /// comments and tooltips to all those properties please? I know this was already missing before but it would be great to get this file up to our coding/doc guideline/standards when you're already changing those properties"""
7059,366425427,"b""I set this to false for now because I can't populate all the fields in case of the graphics raycast - I wanted to communicate in some way that the data is not complete. (todo: add comment)\r\n\r\nin the case of the physics raycast the fields are already all populated by the scene query - we pass the mixedrealityraycasthit we've received from the scene query into the set method above. \r\n\r\nTo give more context on this:\r\nthere's two ways I can fix this bug - one of them is I change the interface of the gaze provider to take a PointerHitResult instead of a MixedRealityRaycastHit to be able to pass in all the info I need to handle both the graphics and physics hit.\r\nOr the second solution is to fill out the MixedRealityRaycastHit entry for a graphicsraycast manually and that way pass the info along.\r\nThe first one implies a breaking change the second one doesn't require any release notes / migration instructions but is not as clean as the interface change.\r\nI discussed this yesterday with @keveleigh and wanted to give the solution without breaking change a go - if people thing we should rather go with the interface change that's fine as well :) \r\n"""
7059,366426702,"b""```suggestion\r\n                raycastHit.raycastValid = false; //we can't populate all fields of MixedRealityRaycastHit in case of a GraphicsRaycast so we flag the hit data as invalid \r\n```"""
7059,366830529,"b""i thought it didn't but just saw that this flag is used in the StabilizationPlaneModifier. And actually there's all data available for this raycast to be valid. what's missing is the extra information: texcoords, triangleindex, barycentricCoordinate, lightmapcoord\r\nI will change that flag to true, because those values are actually not used in the entire mrtk code base - i tested by removing them entirely """
7070,367034163,"b""hmmm this is weird - i removed that component from the prefab as well - but might be related to the order i did it? - so it's definitely gone from the prefab (it's the touchhandler)\r\nI'll revert that change and see if it just poofs away"""
7070,367038560,"b""had to manually remove it from file - i think unity got confused because I deleted it in the derived prefab first and then in the base prefab - i didn't see at first that there was another hierarchy level"""
7006,367386823,"b""Should we let the user know at this point that we couldn't save the modified scenes? - else they might not know why we're aborting migration - maybe just change the log message to something that makes sense to the user"""
7006,367387917,"b'```suggestion\r\n                    Debug.LogError($""{e.Message}: GameObject {parent.name} could not be migrated"");\r\n```'"
7006,367388378,b'```suggestion\r\n        /// Adds all prefabs and scene assets found on the assets folder to the list of objects to be migrated\r\n```'
7006,367388955,"b'```suggestion\r\n        /// Adds selectedObject to the list of objects to be migrated. Return false if the object is not of type GameObject,  Prefab or Scene.\r\n```'"
7006,367389553,"b'```suggestion\r\n        /// Returns a copy of all GameObjects, Prefabs and Scene assets selected for migration\r\n```'"
7006,367389936,b'(either use class name or if you want to just write game object use lower case :)  - applying doc styleguide as these comments show up in the API docs )'
7006,367390305,b'```suggestion\r\n    /// This is an utility window for the migration tool. \r\n```'
7006,367390483,b'you could add the link to the doc here that describes the window '
7006,367391471,b'+1 on that! great idea '
7096,370029575,"b""i think in case of bounding box we don't need it as it's going to be deprecated soon - however i need the get for the upcoming migration to read out the values"""
7096,370044713,"b""i usually prefer this way for default get / set bc it doesn't take up so much space :D """
7096,370048969,"b""but you're right - actually annoys me sometimes as well that i have to scroll to the right :D - fixed """
7096,370551773,"b""yes they do :) - for some reason though i couldn't change the field name without loosing the reference (with the formerly serialized as). this seems to not work in combination with the component type change. I postpone that until we finally remove bounding box """
7096,370553907,"b""i can add them, but they would only need them in case they want to code configure existing bounding boxes. I'd rather not add anything because I don't want to invest time to write up tests for those runtime config changes - if someone requests this I can do it, but i wouldn't just for the sake of having setters there. The getters are also only there because i  need them for migration :)"""
7096,370554865,b'i have to stop creating scripts via unity editor :D'
7096,370576021,b'checked the other bounds control files as well and added header where it was missing'
7137,370606482,b'Agree - we can do a EnsureInitialized() in case those get / sets are called :)'
7137,370606669,b'```suggestion\r\n        /// Test if button state is reset when it goes out of focus from a pressed state\r\n```'
7137,370608017,b'reading through the test I think you should adjust the test description :) '
7137,370608771,b'we have a test hand class that has simplified versions of move / show / etc - do we still need this util method?'
7137,370609046,"b""```suggestion\r\n> Most of the public properties and states on [`Interactable`](xref:Microsoft.MixedReality.Toolkit.UI.Interactable) require that the component is initialized before use. An example of this includes the `Interactable.IsToggled` property. *Interactable* is generally initialized via it's `Awake()`. However, `Awake()` will not be called for GameObject's that are disabled on start in a scene even though the GameObject is in the scene hierarchy.\r\n```"""
7128,370672214,"b""I would change this comment to something more generic as it doesn't only apply to when you get close to another near interaction touchable:\r\nHow about:\r\n// Giving last chance to check if a press has occurred before loosing focus"""
7128,370673121,b'can you use TestHand instead of this util method? would be easier to use and easier to read '
7128,371174627,"b""@keveleigh - I think this is more a copy paste thing - we never unified the tests to stick with the one or the other - it's ok to use either of them but imho the wrapper is just easier to read / nicer to use - I'll open a ticket to go over the tests and replace the utility calls with the test hand"""
7127,371178625,"b""Tbh I wasn't sure about that, I kept on removing / readding that line while I was patching up things :D - I think we shouldn't encourage ppl to create this via the component menu but the old demo for bounding box had the entry, so that's why i in the end went for leaving it in. Now that you think this is odd as well I will remove it. Thanks!"""
7176,372312863,b'```suggestion\r\n    /// Inspector class that renders the MRTK toolbox for easy access to creating out-of-box UX prefabs in the current scene\r\n```'
7185,373042590,"b'```suggestion\r\n> Most solvers use the forward vector of the tracked transform target supplied by the `SolverHandler`. When using a *Hand Joint* tracked target type, the forward vector of the palm joint may point through the fingers and not through the palm. This depends on the platform supplying the hand joint data. For input simulation and Windows Mixed Reality, it is the *up vector* that points up through the palm (i.e green vector is up, blue vector is forward).\r\n```'"
7185,373042773,"b'```suggestion\r\n> To overcome this, update the *Additional Rotation* property on the `SolverHandler` to **<90, 0, 0>**. This will ensure the forward vector supplied to solvers is pointing through the palm and outward away from the hand.\r\n```'"
7185,373042966,"b'```suggestion\r\n> Alternatively, use the *Controller Ray* tracked target type to get similar behavior for pointing with hands.\r\n```'"
7263,377169932,b'```suggestion\r\n| [![Getting Started and Documentation](Documentation/Images/MRTK_Icon_GettingStarted.png)](Documentation/GettingStartedWithTheMRTK.md)<br/>[Getting Started](Documentation/GettingStartedWithTheMRTK.md)| [![Getting Started](Documentation/Images/MRTK_Icon_ArchitectureOverview.png)](Documentation/Architecture/Overview.md)<br/>[MRTK Overview](Documentation/Architecture/Overview.md)| [![Feature Guides](Documentation/Images/MRTK_Icon_FeatureGuides.png)](Documentation/README_Button.md)<br/>[Feature Guides](Documentation/README_Button.md)| [![API Reference](Documentation/Images/MRTK_Icon_APIReference.png)](xref:Microsoft.MixedReality.Toolkit)<br/>[API Reference](xref:Microsoft.MixedReality.Toolkit)|\r\n```'
7263,377184406,"b""i'm not sure - if you do that you will point to the mrtk_development doc version - when keeping them relative we point to the version specific ones"""
7288,377705404,"b""shouldn't the default be true as this was the original behavior?"""
7301,378272700,b'nit: why are you not using the same way to return / early out?'
7172,378877390,"b""that was just a byproduct of saving the scene - i only changed the label text and didn't touch anything else - it's also removing the boundary system / spatial awareness etc."""
7099,379352060,"b""that comes from the scriptable object change - there was a request a while ago to make bounds control configurations into scriptable objects to make them shareable, similar than the interactable themes. So the configurations we're creating when migrating are the shareable scriptable objects you can plug into bounds control. When doing the automatic migration i have to create individual configs because i don't know which properties the users might have changed. """
7345,381396020,"b'apart from not being a huge fan of using ""you"" in docs , we\'re trying to keep the microsoft docs style guide in case this ever gets moved over to the official docs. I would point it out whenever it comes up.'"
7375,383989071,"b""is this still experimental? if so we don't have to mark it as obsolete i think"""
7442,385663682,b'```suggestion\r\n1. Close Unity and delete the **Library** folder. This step is necessary to force Unity to refresh its\r\n```'
7442,385663972,"b'```suggestion\r\n            - This will update any custom controller mapping profiles with updated axes and data, while leaving your custom-assigned input actions intact\r\n```'"
7442,386317498,"b""that makes sense, though might be something we always have to be aware of when merging between release / dev.  we could also change the release notes menu item into a folder ref and have each release in a separate file - that way we wouldn't have a problem merging and still have all the data available without overwhelming the users"""
7460,386350338,b'```suggestion\r\nDirects the theme to reset any modified properties back to their original values that were set on the host GameObject when this theme engine was initialized.  \r\n```'
7413,386375369,"b'```suggestion\r\n        /// <param name=""ignoreLayers"">A LayerMask to restrict the colliders selected.</param>\r\n```'"
7413,386375431,b'```suggestion\r\n        /// Method to get bounds using collider method.\r\n```'
7413,386376161,b'```suggestion\r\n        /// Method to get bounds using renderer method.\r\n```'
7413,386376288,"b'```suggestion\r\n        /// <param name=""ignoreLayers"">A LayerMask to restrict the colliders selected.</param>\r\n```'"
7413,386376552,b'```suggestion\r\n        /// Method to get bounds using mesh filters method.\r\n```'
7413,386376734,"b'```suggestion\r\n        /// <param name=""bounds"">An AABB in world space around all the mesh filters in a GameObject hierarchy.</param>\r\n```'"
7413,386376982,"b'```suggestion\r\n        /// <param name=""ignoreLayers"">A LayerMask to restrict the colliders selected.</param>\r\n```'"
7413,386377131,"b'```suggestion\r\n        /// <returns>True if bounds were calculated, if zero mesh filters are present bounds will not be calculated.</returns>\r\n```'"
7246,387064064,"b'so for some reason the eyeGazeProvider was overriding this flag, changed the meaning, but at the same time introduced their own property (IsEyeTrackingAvailable) to describe the lack of valid eye tracking data.\r\n\r\nNow afaik @vaoliva  just cleaned that up and now we\'re using a consistent name. However I agree with @sostel  that IsEyeTrackingAvailable is not great for describing invalid data.\r\n\r\nI think we should still remain with the term ""IsValid"", don\'t care if IsEyeGazeDataValid or IsEyeTrackingDataValid() - just so it\'s clear that we didn\'t receive proper data from the device. Available for me could also be that someone disabled the functionality - we want to make sure this is clearly a lack of sensor information'"
7246,387109559,"b""soooo about this:\r\n1. the logic is correct -> what @vaoliva  did is to ensure that we're going to get the eye gaze data even if head gaze is set as our input source - so you can use this util method to get to the eye gaze data no matter which eye mode you're currently using (have a look at OnPreSceneQuery of the gaze pointer to see how we're setting the ray in the eye and head case, that should make it clear(er) )\r\n2. I'm not sure if i like exposing LatestEyeGaze , but if we do:\r\n3. Why are we not always just returning the LatestEyeGaze in that case, because that should always provide us with that data, no? ( might be missing something again here)"""
7246,387120963,"b""This looks correct to me - We would want the same cursor behavior for eye gaze and head gaze, no? \r\nAlso the data for querying the eye ray is available (InputRayUtils.TryGetEyeGaze) - the only thing that's missing is that the focus provider won't be able the tell you which object is focused with the eye ray in case the head gaze is active as we only have the target from the gaze pointer - we can add a follow up task for being able to query the object that is hit with the eye tracking ray in case we're in head gaze mode to have both of them available - but it's not something you would need eg for creating a heat map - for that the ray should be enough"""
7246,387130320,"b""@sostel this was only a rename to fix the confusion that happened in gaze provider with overriding the IsEyeGazeValid flag but actually turning it into something else. What that flag actually did was combining if we have valid eye gaze data and eye tracking was enabled by the user as active input source. \r\nIf the demo visualizer should work as you've described there's a bug in the implementation, this code shouldn't have worked with eye tracking not being set as input source. I'm with @vaoliva  on that one - if we want this example to be fixed let's file a follow up issue and someone should thoroughly test this when doing the changes - we shouldn't mix this into this PR :) """
7246,387133504,"b""@vaoliva  instead of forcefully activating that flag - maybe we just want to take advantage of your patched up util function for getting the eye tracking data (InputRayUtils) and use that for determining the gameobject position - that way you don't have to interfer with what the user has set up """
7246,387138077,b'IsGazeInputEyeBased is a combination of UseEyeTracking which is the user enabled setting for having eye tracking as input method and IsEyeTrackingAvailable (which i want to rename to IsEyeTrackingDataValid) which is the flag for indicating if we did receive / could process eye tracking data from the hardware.\r\n\r\nSo basically IsGazeInputEyeBased is like a IsEyeTrackingEnabledAndValid flag (maybe we should rename it to that?)'
7246,387562104,"b""ah, i didn't see they're using the focus target as well - but then we should probably just not set that flag at all here - and just refer to the documentation - we could prompt a warning telling the user that this flag isnt' enabled but not set it ourselves. We're not doing that in any other example, so wouldn't do it in just one of our scripts."""
7479,387605165,"b""do we really need those additional steps that describe how to add a component to a gameobject ? i think users should know that or look that up in the unity docs if they don't know - else we would have to put this in all our doc pages to stay consistent """
7479,387605508,b'same thing here - do we really need to explain how to add a component? '
7477,387607634,"b""please describe what you're testing in the summary"""
7477,387608629,"b""wouldn't we have to check for gazeProviderPointingData.Pointer != null as well?"""
7504,389797836,"b""i assume that's on purpose not renamed to MRTK?"""
7246,394249700,b'nit: can you add a comment that translates that guid to the path - when kurtis replaced our hard coded paths to guids he left the paths as comments so ppl could still figure out where those assets are '
7246,394252605,"b""nit: i know this screenshot was already there and you just adjusted it - but I would really like us to avoid having screenshots of property inspectors here - it's also mentioned in the docs guidelines - they tend to get outdated rather quickly and we can easily describe it in the text without the need to actually show it on the screenshot. """
7246,394255267,b'if this used to be serialized here we should add an entry to the release notes for the next version and mark this as a breaking change so users know that they now have to change this in their profile rather than the gaze provider itself.'
7550,394519961,b'typo: TrickleDown'
7550,394523963,"b""why do we still propagate the events if they've been marked as used? should we not stick to only marking an event as used if we want the event to end?"""
7550,400382448,b'i would rename the status flag to PropagationStoppedImmediately else it suggests we have a immediate propagation and a default one instead of a stop and immediate stop'
7550,403037055,b'<3 '
7550,403039660,b'is this still something that needs to be done in this PR?'
7550,404310379,"b""default parameter for register is PropagationPhase.BubbleUp - i didn't realize there's no default for unregister - we probably would want to add the same default or remove default entirely. """
7688,411560070,b'object manipulator might add several components because of the new constraint logic'
7688,411565241,"b""this is something that happens automatically when i resave this scene - we're opening all scenes / prefabs / assets that have a manipulationhandler in them , replace the component and then save the asset again, I can't really influence what unity does on re saving those files - Looking into this specific file to figure out why this info got lost"""
7688,411567033,b'\xf0\x9f\xa4\xa6 i have no idea how that got into the list - removing '
7688,412205185,"b""hmm i had this profile added again after rerunning the migration tool - seems like one of the scenes we're opening for migration is saving that profile - I kicked it out again of this change, but probably will pop up again once someone is changing anything in example hub scenes :)"""
7693,412300770,"b""there's two things about this:\r\n1. we're trying to get away from bounding box and use bounds control instead - fixes made in boundingbox should also be made in boundscontrol (in non critical cases I would even recommend doing the changes only in bounds control to avoid having to fix them in two spots)\r\n2. I'm very certain that this will break a lot of the boundscontrol behavior on reloading visuals on config changes - i don't have all these changes published yet but this definitely will have consequences on all the rig reloading :-/ """
7693,413160542,"b""so had a second look now and I'm not sure I understand why you had to change to the visuals here instead of sticking to the handle object itself? The handle object is a parent of the visual, so it should be fine to use it's transforms and it's also making these checks less error prone as you're comparing the object and not just some arbitrary position / rotation values """
7693,413161177,b'resolving this as we had a offline chat about this - boundscontrol behavior will be checked separately'
7693,413164915,b'if i remember correctly a performance issue was why troy put this in place - bounding box is heavily used and there can be a lot of handles accumulated in a scene - so removing this check might hit us at a later point '
7693,413165392,"b""can you verify that this doesn't have any performance implications on scenes with many bounding box / bounds control added ?"""
7707,413740210,b'i think this could be a warning'
7693,413907817,b'can you explain why this is now squared length and triple medium proximity  added? '
7693,413909844,"b""i might be missing some important detail here: I can't spot you're using this anywhere in your fix. why are you adding those visuals and also exposing them to public API? If this is because of the tests you shouldn't add things to the public API of a sdk component just for test reasons - you can access these gameobjects as well by their name for testing purposes :)"""
7693,413915573,b'is targetbounds center relative to the transform of the component? or is this returning world space coordinates? '
7693,413916867,"b""if you modify the CloseGrowRate / FarGrowRate / MediumGrowRate and set them to 1.0f in test scenario you don't have to wait for the animation to finish and the scaling changes should be applied immediately"""
7693,413919370,"b'getting a scale handle can be achieved by calling for example: transform.Find(""rigRoot/corner_0"") and it\'s visual by calling transform.Find(""rigRoot/corner_0/visualsScale/visuals"") on the boundingbox gameobject\r\nif you want to have the front right corner that would be corner_3 . hope that helps :)'"
7693,413919858,b'without a comment this seems pretty arbitrary just to make it work? '
7693,413937040,"b""I wasn't sure if the center of those bounds is in world or local space - makes sense in local space, closing this issue"""
7693,413939690,"b""ha! i'm glad i left that comment there - could you please copy over the comment from bounds control two lines above so it's more clear what this does :D """
7735,416541903,b'```suggestion\r\n            else if (migrationState == MigrationState.PostMigration)\r\n```'
7735,416541981,b'```suggestion\r\n            if (migrationState == MigrationState.Migrating)\r\n```'
7735,416545167,"b'I would display a ""Migration completed with some errors."" in case there was something not migrated properly - you should have that information in the status (failures != 0)'"
7700,417339560,"b""BoxDisplay is not a unity component, just a regular class - there was no reason so far to make it a component, so i'm subscribing to the events in the ctor and unsubscribing in dtor for consistency. hope that makes sense :)"""
7700,417342595,"b""because we don't have a lot of classes that are not components - usually people plan everything as component - this one though should just ecapsulate certain functionality that is internal to bounds control and should not be used as a standalone component - hence i've kept it as a regular class """
7700,417344083,"b""not really any reason - I just want to get rid of the collider - i just checked the api docs for unities gameobject and component class and i can't find RemoveComponent there. """
7700,417344455,b'sry my bad! (my head is in c++ land) - fixing '
7700,417344865,"b""it's the same as box display - link class is just a regular class and no component, that's why i'm making use of ctor / dtor here """
7700,417371054,b'made sure this is fixed in rotation handles as well. thanks for pointing this out!'
7700,417788113,"b""No they shouldn't need a check - i'm initializing this event on declaration so afaik there's no way this class can live without the event being initialized"""
7839,423165016,b'changed :)'
7886,426642338,"b""migration handler for buttonconfighelper should be outside of experimental section - button config helper is not an experimental feature \r\n(namespace suggests it's outside experimental, but file is part of experimental folder and will only be available from experimental package that way)"""
7869,426754460,"b""it's intentional that it has the same menu item - the validation method will just make sure that menu item is grayed out - (you flag a validation method by the bool in the menuitem attribute)"""
7869,426755134,"b""ahhh but now i just realize that this one has the wrong priority - which didn't seem to bother unity for some reason - but i'll patch it up anyways :D , should be 40, not 41"""
7968,430575136,b'\xe2\x9d\xa4\xef\xb8\x8f '
8020,436632641,b'nit: can we initialize this explicitly to false?'
8035,438167578,b'``\r\n```suggestion\r\n            if (boundsOverride != null)\r\n            {\r\n```'
8035,438167722,b'```suggestion\r\n                if (initialBoundsOverrideSize.HasValue)\r\n                {\r\n```'
8091,446996263,b'nit: because I just read this https://docs.unity3d.com/ScriptReference/Component.TryGetComponent.html - we could use:\r\nif (!TryGetComponent(scrollingBackground))'
8154,452231317,"b""i'm wondering if it would make sense to have a AddItem with a list of gameobjects as well - just so if several elemetns were added (or removed) we wouldn't call Reset all the time. """
8198,458428116,b'i left one of them intentional to separate the smoothing section. now thinking about it i should probably remove that header definition in the bounds control file and add it in the inspector instead'
8200,460941429,b'public classes should have class description for api docs'
8200,460944709,b'potential div / 0 ?'
8200,460949511,"b""why are we initializing on awake if we're already doing initialize on manipulation start (pointer down). is this in case we add the component during runtime while already interacting with the object? If so would we want to support plugging in configurations / enabling elastics while manipulating as well? """
8200,460951711,b'waaait :O. can i access private data members in the test with this?'
8200,460951966,b'add a class description to public class'
8200,460966653,b'potential div / 0 ?'
8200,460967804,b'potential div / 0 ?'
8200,460968213,"b""should we make sure users can't set these values to 0 in the elasticproperties?"""
8200,460968735,b'class description necessary for public classes for api docs'
8209,460996256,b'nit: all those draw plane functions seem like something that could be done in one function that can be fed some params for rotation or sizing :D '
8209,461026367,b'nit: would use word row instead of line'
8209,461026483,b'nit: would use word row instead of line'
8209,461028498,"b""wondering if we should put this into a method and just pass -cellWidth (and in case of maxY pass CellHeight) into it. if i see correctly apart from that it's the same logic in minX and maxY"""
8209,461035487,b'can you add a comment what the callback does in this case? '
8209,461036324,b'but nevermind if that makes things complicated'
8209,461039255,b'why are we checking for smaller than handleSize * 10?'
8218,462428853,"b'>[Header(""Visuals"")] [](start = 8, length = 19)\r\n\r\nremoved this as we\'re defining the headings anyways in the inspector '"
8204,462964299,"b""i'm wondering if we should change to have this as a enum flag instead of the separate bools - we already have the enum for enabling interaction and it could be reused to set the forces behavior and the smoothing - would be cleaner than keeping all those bools around. What do you think?"""
8204,463066834,"b""jared pointed out this will be a breaking change - so let's not do this for now :)"""
8236,463563110,b'should be translateStarted ?'
8236,463563192,b'should be translateStopped?'
8236,463564143,"b""suggestion: it's sometimes confusing for users if elements in the inspector ui pop up after changing settings - a different approach would be to disable the ui / show it greyed out - with a tooltip indicating that this is deactivated because of the visibility flags - that way it's clear to the user which functionality is available and also how they can access those settings and they won't magically appear on switching the enum :)"""
8236,463565961,b'can there be a case where you still would want to reset the links while no rotation handles are displayed? '
8236,463567008,"b""i think we should still create the handles atm - else we'll break functionality  - the links should still work without having the rotation handles displayed"""
8236,463567710,"b""we definitely need tests to verify that switching those flags on during runtime will not break the handle behavior. there was a lot of time invested to get bounds control to a state where you could runtime reconfigure and the right parts were reloaded / recalculated. we won't want to go a step back now again.\r\n"""
8236,463568123,"b""is there a way we could've reused the existing HandleType? """
8236,463575834,"b""i'm wondering if we should expose this as flags as well - i can take care of doing the same for rotation handles - what do you think?"""
8236,463576745,b'should we move those to the top of the file?'
8274,468651604,"b'do you think we should make this clearer by writing adding something like: When importing the examples UPM package, sample scenes are not imported by default and need to be explicitely enabled in the import dialog.\r\n\r\njust to avoid confusion that scenes might not be part of the package in UPM? '"
8274,468654194,b'should we mention the migration window as well? '
8274,468657030,"b'```suggestion\r\nThe [Unity Package Manager](Packaging/MRTK_Packages.md#unity-package-manager) section of the [Mixed Reality Toolkit package](Packaging/MRTK_Packages.md) article describes the avaiable MRTK packages, their contents and the scenarios for their use.\r\n```'"
8274,468658121,"b""there's a dot too much at the end of the sentence (and for some reason i can't remove via suggestion button :-/)"""
8274,468658687,"b""adding comment here so we won't forget to add this picture :)"""
8274,468659351,b'should we highlight the fact that example scenes out of the upm package can not be deployed to device?'
8293,470508429,"b""i wasn't sure about the naming - i can change it to non-uniform. by saying precise is a different mode are you referring to the precision tools from finn? """
5389,305534904,b'Did you need to commit this image too?'
5389,305534965,b'Did you need to commit this image too?'
5389,305543332,"b'Yes, it is already there under the performance page'"
5389,305543340,"b'Yes, it is already there under the performance page'"
5389,305544609,"b'Weird, GitHub is failing to render the image for me.\r\n\r\n![image](https://user-images.githubusercontent.com/13305729/61569181-05496800-aa3b-11e9-9b97-2c869140d0a1.png)\r\n\r\nLooks like the only difference is the case in the extension? .PNG vs .png'"
5389,305545585,b'It also fails on the performance page....you have to go to github.io for it to work:\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Performance/PerfGettingStarted.html\r\n\r\n![image](https://user-images.githubusercontent.com/25975362/61569376-e8616480-aa3b-11e9-8396-13964ca627ad.png)\r\n'
5389,305546386,b'This lead me down [a rabbit hole](https://stackoverflow.com/questions/7996919/should-url-be-case-sensitive) haha.\r\n\r\nDo both of these links work for you?\r\n\r\n1) https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Documentation/Images/Performance/UnityStandardShader-Stats.png\r\n\r\n2) https://github.com/microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Documentation/Images/Performance/UnityStandardShader-Stats.PNG'
5389,305916237,b'The second one (.PNG) works for me. .png with lowercase is showing 404 error.'
5389,305917230,"b'@cre8ivepark thank you for testing! @Troy-Ferrell I would recommend switching to the case on disk, so .PNG'"
5389,306005040,"b""interesting, it must not matter with markdown on github.io but on github.com it matters. I'll just change it to be holistic. Thanks guys!"""
5389,306030621,b'```suggestion\r\n![Unity Standard Shader Statistics](../Documentation/Images/Performance/UnityStandardShader-Stats.PNG)\r\n```'
5389,306030726,b'```suggestion\r\n![MRTK Standard Shader Statistics](../Documentation/Images/Performance/MRTKStandardShader-Stats.PNG)\r\n```'
5562,314880387,b'nit: expensive on mobile Mixed Reality devices >>>> Expensive on many Mixed Reality platforms. \r\nJust a better catch all'
5562,314880523,b'Can you actually switch these from [**Blah**] to [ \\` blah \\`  ]  for styling?'
5562,314896397,b'Good idea!'
5562,314896445,b'Certainly! '
7529,391944525,"b'```suggestion\r\nPerformant plane, sphere, and box shape clipping with the ability to specify which side of the primitive to clip against (inside or outside). You can find a scene that demonstrates advanced usage of clipping primitives in the  **ClippingExamples** scene under `MRTK/Examples/Demos/StandardShader/Scenes`.\r\n```'"
8812,512237867,"b'It looks like the text in this image still says `Upgrade MRTK Standard Shader for Lightweight Render Pipeline`, could you update it?'"
8812,512491367,"b'Right, missed this. Thanks, will fix it.'"
5976,325476300,"b'If we are only setting this  value when constraints on movement is set, can we have a custom inspector that only shows these properties when that checkbox is checked? Niall has some great examples of how this has helped to simplify the new ObjectManipulator in his PR.'"
5976,325476735,"b'It would be good to specify here, and in comments, if this axis is in the object\'s space ""local space"", or the world space. It looks like the constraint is in world space, since if the constraint is set to just be X, then the object will have only its x value changing, which is a world space value.'"
7479,387340658,b'```suggestion\r\nAdd the `ManipulationHandler` script component to a GameObject:\r\n```'
7479,387605508,b'same thing here - do we really need to explain how to add a component? '
7479,387850467,b'removed'
3731,270521300,b'Neat.'
4055,277766894,b'```suggestion\r\n[Periodic table of the elements](https://github.com/Microsoft/MRDesignLabs_Unity_PeriodicTable) is an example app that demonstrates how object collections work. It uses object collection to layout the 3D element boxes in different shapes.\r\n```'
5719,315682079,"b'```suggestion\r\n- [`GridObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/GridObjectCollection.cs) supports Cylinder, Plane, Sphere, Radial surface types\r\n```'"
5719,315682199,b'```suggestion\r\n- [`ScatterObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/ScatterObjectCollection.cs)  supports scattered style collection  \r\n```'
5719,315682341,b'```suggestion\r\n- [`TileGridObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/TileGridObjectCollection.cs) provides some additional options to GridObjectCollection.\r\n```'
5719,315682899,b'```suggestion\r\n|![Grid Object Collection - Radial](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionRadial.png) Grid Object Collection - Radial | ![Grid Object Collection - Plane](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionPlane.png) Grid Object Collection - Plane |\r\n```'
5719,315683033,b'```suggestion\r\n|![Grid Object Collection - Cylinder](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionCylinder.png) Grid Object Collection - Cylinder | ![Grid Object Collection - Sphere](../Documentation/Images/ObjectCollection/MRTK_ObjectCollectionSphere.png) Grid Object Collection - Sphere |\r\n```'
5719,315685260,"b""do we need this screenshot? we're already mentioning the name of the script, so a screenshot of the property inspector shouldn't be necessary? If we want to describe the properties we can do that in text. (trying to avoid having any property grids or editor settings in screenshots because they will be outdated after a while and people tend to forget to update the screenshots - text is easier to maintain)"""
5719,315763661,b'```suggestion\r\n- [`ScatterObjectCollection.cs`](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_release/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Collections/ScatterObjectCollection.cs) supports scattered style collection  \r\n```'
5719,315792454,b'I think the image is still helpful to show the hierarchy (child components need to be added to an empty game object that has the collection script). I have updated images to make it clear.'
7345,380858459,"b'""future manipulation features and bug fixes will be made for this component, whereas the manipulation handler will be deprecated."" -> ""this component is a replacement for ManipulationHandler""\r\n\r\nMainly a nit around the language here, since ""future manipulation features and bug fixes will be made for this component"" -> can lead to question of ""what features and bug fixes"" but I think the intent is just that this is the new hotness and don\'t use the old not hotness'"
7345,380860847,b'Nit: Is it also worth covering the event fire order (i.e.HoOverStarted->ManipulationStarted->ManipulationEnded->HoverEnded?)'
7345,380862997,"b'Given that the manipulation type earlier is a filter on what will happen, I assume that if you specify manipulation type == one handed, but then add a constraint that is two handed, it is basically going to be a no-op right?'"
7345,380864706,"b""It might be helpful to also specify the default axis space (i.e. is it global space, or local space) - obviously configurable using the property that's below"""
7345,380865036,"b""paging  @thalbern - How much do we want to enforce the removal of 'you' from our docs?"""
7345,380865229,b'```suggestion\r\n#### Constraint on rotation\r\n```'
7345,381251743,"b""Yeah, at the moment there's no warning or anything for that. We can create an issue if you think it's worthwhile."""
7345,381396020,"b'apart from not being a huge fan of using ""you"" in docs , we\'re trying to keep the microsoft docs style guide in case this ever gets moved over to the official docs. I would point it out whenever it comes up.'"
7479,387605165,"b""do we really need those additional steps that describe how to add a component to a gameobject ? i think users should know that or look that up in the unity docs if they don't know - else we would have to put this in all our doc pages to stay consistent """
7479,387784233,b'This was a targeted update added to address the rename of the services folder. I was planning on putting similar instructions to other docs as I rename other folders.\r\n\r\nI am happy to remove these or leave as is.'
7479,387850403,b'removed the additional steps.'
4055,277768005,b'```suggestion\r\nA [pointer](./Input/Pointers.md) is something attached to a controller that gives focus and dispatches [inputs]((./Input/Overview.md)) to the game object it is pointing to. \r\n```'
4055,277768612,"b'```suggestion\r\nPointers are instantiated automatically at runtime when a new controller is detected. The pointers that are created for each controller type are defined in the *pointer options* in the *pointer profile*. You can have more than one pointer attached to a controller; for example, with the default pointer profile, WMR controllers get both a line and a parabolic pointer for normal selection and teleportation respectively. Pointers communicate with each other to decide which one is active.\r\n```'"
4055,277769328,"b'```suggestion\r\nIn the pointer profile you can see that the HoloLens V1 input system is provided for you via the mapping of ""GGVHand"" (V1 HoloLens hand) to the GGVPointer. \r\n```'"
4055,277769478,b'```suggestion\r\n**Grab pointer / sphere pointer**\r\n```'
4055,277769672,"b'```suggestion\r\n* *Debug Mode*: If true, draw the sphere that is used to query for grabbable objects.\r\n```'"
4055,277769938,"b'```suggestion\r\n* *eventsToReceive*: If set to touch, the object will receive _OnTouchDown_ _OnTouchUpdate_ and _OnTouchUp_ events. If set to pointer, the object will receive _OnPointerDown_ and _OnPointerUp_ events.\r\n```'"
4055,277770003,b'```suggestion\r\n* *distBack*: How far input point can go behind surface before release event occurs.\r\n```'
4055,277770044,b'```suggestion\r\n* *distFront*: How far input point needs to be in front of surface before press event occurs.\r\n```'
4055,277770322,"b'```suggestion\r\nMouse pointer is used for interacting with the mouse. This pointer will only be used if the active input is a mouse. By default, the MRTK profile does not provide a mouse as an input provider, as mouse input is instead used to simulate hand input. You may add a mouse in your MRTK profile by modifying the *Registered Service Providers* in your MRTK profile.\r\n```'"
4055,278178872,b'```suggestion\r\nA [pointer](../Documentation/Input/Pointers.md) is something attached to a controller that gives focus and dispatches [inputs](../Documentation/Input/Overview.md) to the game object it is pointing to. \r\n```'
5633,314671900,b'why are we not deleting this file?'
5633,314889807,"b""Because there may still be links out there referencing it. It's a pretty old file. Thus it's basically in a deprecated state and taken off the TOC until the next iteration. Just like all of the [Obsolete] tags"""
7561,395396518,b'nit: can you remove the unnecessary ../Documentation'
7561,395396761,b'Can you actually start with a small section on what progress indicators are and the types auto-included with MRTK. Maybe pull up bits about the IProgressIndicator interface up here'
7561,395396882,b'can you add an xref hyperlink for the interface'
7561,395396927,b'yay! example code'
7561,395397029,b'nit: add hyperlinks to the C# task class for people'
7561,395397105,"b'Other minor note. In general, guidelines are to avoid use of informal you/we'"
7561,395397132,"b""I know this isn't followed everywhere unfortunately for consistency"""
7561,395829295,"b""I left out the number of indicators we include / any details about specific indicators purposefully so when we add more we won't have to update the docs. The demo scene does a better job of documenting them IMO."""
8965,527222001,"b'It would be awesome if we could make this documentation more tutorial-esque, with screen shots of the inspector and property descriptions, but that would probably be a different PR. '"
5237,301747594,"b""This relative path won't work on the github.io page, I believe."""
7740,417506668,"b'Oh interesting, any reason why we use png for most of our images, but jpg for a few here?'"
7740,417542408,"b'I started converting some of the images to JPG if it reduces file size a lot. For the images that do not show much difference, I just left them as PNG.'"
4055,277771286,"b'```suggestion\r\n* **SurfaceMagnetism**, casts rays to surfaces in the world, and align the object to that surface.\r\n```'"
5500,310291917,"b""Contrains object to follow hands in a region that doesn't intersect the GameObject with the hands. Useful for hand constrained interactive content such as menus etc.\r\n\r\nregion safe is a big question mark until I read the section below"""
5500,310292030,b'nit: Derives from HandConstraint but includes logic...'
5500,310292739,"b'Please xref HandConstraint & HandConstraintPalmUp.\r\n\r\nFYI, @Cameron-Micka  I am working on a change that will update the SolverExample scenes and this documentation. The change are all for the above general solver information'"
5500,310293127,b'maybe just breakout each event with description instead of one long paragraph\r\n\r\n* **ActivationEvents**\r\n- OnHandActivate: bla blah blah\r\n- OnHandDeactivate: blah blah blah'
5500,310295756,"b""Nit: Do you think we should mention the requirement of HandsBounds? or just leave it be since ideally developers don't even need to reference it or mess with it"""
5500,310309988,"b""I could go either way, they kind of exist behind the scenes aren't dependent on the Solver system. So maybe they could be documented elsewhere?"""
5514,310721363,"b'Nit: ""property to affect the handedness preferences (left, right, either)""\r\n\r\nI think details seems interesting, and I think with not too many more words we could say what they are (i.e. left/right/both)'"
5514,310722099,"b""You're right. I got lazy. Docs can just....keep going on forever :P"""
5514,310723229,"b'I wonder if this property should have been named ""allow multiple solvers"" or something similar to that - I guess this is probably a discussion for a future day, but it\'s interesting in that, from a user-API perspective, it feels like the property should be named according to intent for what the user is trying to do, but it\'s more named from an implementation perspective (i.e. it does what it says, but missing is the overall intent)'"
5514,310724831,"b'I agree. Even ""Is Chained Solver"" maybe? On the fence about renaming. We could also just update name in inspector but not code. It\'s also odd because you need the last solver to not be IsChained most of the time. or you need one at least ot update the actual transform'"
5514,310725396,"b'Consider linking to the text sections below, which provide I think more helpful resources for folks getting started in this area. Down below there are xrefs anyway, so nothing is really lost I think, but you gain from pointing to the most helpful getting started/usage docs'"
5500,312195569,b'It would be good to mention that handconstraint will also work with motion controllers.'
5500,312195687,b'It would be good to mention that this only works with hands.'
5500,312287702,"b'```suggestion\r\n* [`HandConstraintPalmUp`](#handconstraint-and-handconstraintpalmup): Derives from HandConstraint but includes logic to test if the palm is facing the user before activation. This solver only works with [IMixedRealityHand](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand) controllers, with other controller types this solver will behave just like its base class.\r\n```'"
5560,312537542,"b""Based on the description of what this event represents, shouldn't this instead be called **OnLastHandLost**?"""
5560,312538180,"b""Also, is there a reason why we used both Activate and Detected? I understand there's a difference here between first and secondary, but should that change the verb? Whether it's the First hand or additional hands, I would think Activate / Deactivate or Found / Lost could apply to both?"""
5560,312539251,"b""This heading lists both **HandConstraint** and **HandConstraintPalmUp**. The section does mention **HandConstraintPalmUp** but doesn't document it. I know it references a sample scene, but could it be documented here as well? If **HandConstraintPalmUp** inherits directly from **HandConstraint** and simply adds a few more properties, that delta could simply be added to the bottom of this section."""
5560,312562949,b'Good catch on the LastHandLost....'
5560,312563413,"b'```suggestion\r\n    * OnLastHandLost: occurs when the hand tracking state changes from at least one hand in view, to no hands in view.\r\n```'"
5560,312566696,"b'Hi, the paragraph does mention ""A derived class of [`HandConstraint`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraint) called [`HandConstraintPalmUp`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.HandConstraintPalmUp) is also included to demonstrate a common behavior of activating the solver tracked object when the palm is facing the user. ""\r\n\r\nWere you looking for something else? If so, please feel free to open a PR against mrtk_development. This PR is meant to be just a cherry pick of an existing PR into our stabilization branch, so would like to keep extra changes to a minimum, if possible, to avoid confusion between branches.'"
5959,324883275,"b'```suggestion\r\n* [`HandConstraintPalmUp`](#hand-menu-with-handconstraint-and-handconstraintpalmup): Derives from HandConstraint but includes logic to test if the palm is facing the user before activation. This solver only works with [IMixedRealityHand](xref:Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand) controllers, with other controller types this solver will behave just like its base class.\r\n```'"
6304,335728029,"b'Nit: I\'m not quite sure if this is the beginning or end of a ""line pointer"" or what a ""line pointer"" is on a hand?'"
6304,335734953,b'```suggestion\r\n* *ControllerRay*: Point of reference is the [`LinePointer`](xref:Microsoft.MixedReality.Toolkit.Input.LinePointer) transform on a controller (i.e pointer origin on a motion controller or hand controller) pointing in the direction of the line ray\r\n```'
6304,336011408,"b'```suggestion\r\nWhen adding a [`SurfaceMagnetism`](xref:Microsoft.MixedReality.Toolkit.Utilities.Solvers.SurfaceMagnetism) component to a GameObject, it is important to consider the layer of the GameObject and it\'s children, if any have colliders. The component works by performing various types of raycasts to determine what surface to ""magnet"" itself against. If the solver GameObject has a collider on one of the layers listed in the `MagneticSurfaces` property of `SurfaceMagnetism`, then the raycast will likely hit itself resulting in the GameObject attaching to it\'s own collider point. This odd behavior can be avoided by setting the main GameObject and all children to the *Ignore Raycast* layer or modifying the `MagneticSurfaces` LayerMask array appropriately.\r\n```'"
6304,336012102,"b'```suggestion\r\nFinally, surfaces farther than the `MaxRaycastDistance` property setting will be ignored by the surface magnetism raycasts.\r\n```'"
6304,336115615,"b'```suggestion\r\nFinally, surfaces farther than the `MaxRaycastDistance` property setting will be ignored by the `SurfaceMagnetism` raycasts.\r\n```'"
7185,373042590,"b'```suggestion\r\n> Most solvers use the forward vector of the tracked transform target supplied by the `SolverHandler`. When using a *Hand Joint* tracked target type, the forward vector of the palm joint may point through the fingers and not through the palm. This depends on the platform supplying the hand joint data. For input simulation and Windows Mixed Reality, it is the *up vector* that points up through the palm (i.e green vector is up, blue vector is forward).\r\n```'"
7185,373042773,"b'```suggestion\r\n> To overcome this, update the *Additional Rotation* property on the `SolverHandler` to **<90, 0, 0>**. This will ensure the forward vector supplied to solvers is pointing through the palm and outward away from the hand.\r\n```'"
7185,373042966,"b'```suggestion\r\n> Alternatively, use the *Controller Ray* tracked target type to get similar behavior for pointing with hands.\r\n```'"
7529,391944849,b'why keep this hyperlink when you just used ( path to folder/file ) format in all others?'
6503,346481543,"b""Removed! I applied the backing material from the hand menus instead. The reasoning was that I wanted to tweak some of the material's parameters without breaking HoloGraphicBackPlate across the rest of the project."""
5051,297429222,"b""This is a good point and just something I probably didn't think through enough. My immediate feeling is that using Select is more sensible, but I will look into that a bit more."""
5051,297433326,"b'Yeah, this makes sense.\r\n\r\nI think your point in 2.a. about having a ""better defined click"" is particularly compelling to me - as my work is focused on WMR, ""native"" behavior is preferable to ""consistent cross-platform"" behavior. I appreciate that the latter is important for MRTK and I think that has to be the first priority, but I\'d like to get both if we can.\r\n\r\n\r\nRegarding 2.b. - that seems totally plausible and I can imagine it causing problems. I assume if we are just making up the events ourselves (as in UnityTouchController) we can make it match, but I wouldn\'t be that surprised if other platforms have defined ""clicks"" that don\'t fully agree with WMR.'"
5051,297434212,"b""given that the Select action is already used for PointerUp/PointerDown/PointerClicked, I feel satisfied it's the right choice for this"""
5051,297440502,"b'I\'ve updated to using select in almost all places (some I felt it still made sense to keep the ""tap"" name as that\'s what the gesture recognizer calls it, but it uses the ""select"" input action and I called the new gesture type ""select"" as well) - let me know what you think.'"
5051,298779749,"b'@keveleigh I guess in the end all I really care about is that there is some event (click/tap/select) on input up that is mutually exclusive with hold/manipulate. I don\'t think there\'s any particular reason it needs to come from the gesture recognizer - e.g. I\'d also be ok with having the pointer decide what constitutes a click vs hold vs drag (as in UnityTouchController).\r\n\r\nAt the same time, I also kind of feel like maybe it\'s ok to use the platform implementations as long as it is understood that the exact ordering is not well-defined. I don\'t recall offhand which of tap or input up comes first (or even if it is necessarily consistent), and as it logically seems like they should happen at the same time I would try to avoid writing code that assumes a certain ordering. I also appreciate that such assumptions often happen unintentionally - but that seems unavoidable to some extent when dealing with heterogeneous controllers. E.g. does MRTK make any guarantees about the timing of the hold/manipulate gestures? Or just assume that they are ""close enough""?'"
5374,306119172,"b""yeah, the indentation is wrong (probably a merge artifact) - I'll fix it"""
5374,306120032,"b'I agree that it is problematic - is there an existing MRTK convention for handling this case? We have a have a pretty simple NullIfDestroyed extension in our codebase for this situation (it just tries casting to a MonoBehaviour or Unity.Object and then does the overloaded null check on the casted version), and I could bring that into MRTK if it would help.'"
5373,306125804,"b""I did it this way as I'm not really familiar with InteractiveMeshCursor (we don't use it), and so I wanted to just keep the behavior the same (while also wanting to minimize the amount of code changed). If I used the base version instead of hiding, I think it would potentially do a double-lerp of the scale (InteractiveMeshCursor.UpdateCursorTransform calls base.UpdateCursorTransform, and both do lerps, and not quite in the same way).\r\nI'd be happy to rename the variable if you think that would be better, but I'd be hesitant to make any more substantial changes myself due to lack of familiarity."""
5374,306127243,"b'well, it looks good locally now, but still looks bad here :/ hopefully it is just GitHub formatting at this point.'"
5374,306127504,b'added'
5374,306127752,b'Either way works for me too - just let me know what is preferred.'
5374,307529432,"b'That works if you\'re doing the null check through a class type, but not through an interface type. The interface ==/!= is still just doing a reference (in)equality check, without the extra ""is destroyed"" check that the Unity.Object ==/!= null will do (https://stackoverflow.com/questions/1881459/how-do-i-override-the-equals-operator-for-an-interface-in-c).'"
5373,307548480,"b""It being private doesn't really matter to this change. I meant that I could have just removed this targetScale and used the now accessible (protected) base class targetScale instead, but then I would be worried about it doing two lerps.\r\nWould you prefer if I changed this to be protected also?"""
5051,307837036,"b""I think that's reasonable. On a related note, it wasn't really clear to me why it's using separate gesture recognizers and switching between them vs having a single gesture recognizer and switching between manipulation/navigation settings using UpdateAndResetGestures. IIRC, going into navigation mode also turns off hold (and now tap), which seems kind of weird - I understand why manipulate and navigate would be mutually exclusive, but it seems like hold/tap are useful in both cases.\r\nI could make changes to address either/both of those too if you think that would be helpful.\r\n[edit: I meant UpdateAndResetGestures not SetRecognizableGestures]"""
5051,309486212,"b""Admittedly, I haven't tested it on device - it does work the way you describe in input sim, but input sim doesn't really work the same way as WMRDeviceManager.\r\nBut from looking at the code, WMRDeviceManager enforces that NavigationRecognizerEnabled and GestureRecognizerEnabled are mutually exclusive, and their corresponding gesture recognizers are started/canceled accordingly. In the default gesture profile, Manipulation Gestures includes tap and hold:\r\n![image](https://user-images.githubusercontent.com/38891743/62257602-0b383500-b3bb-11e9-8f49-f6f3b1f40a4d.png)\r\nbut Navigation Gestures doesn't:\r\n![image](https://user-images.githubusercontent.com/38891743/62257621-1b501480-b3bb-11e9-9e26-449ceedb9038.png)\r\nThat said, I don't seen anywhere that actually switches to navigation mode (and we don't use it for our app) so I don't know how important it is."""
5051,309486787,"b""The navigation gesture recognizer also doesn't register handlers for the tap/hold events, so I don't really see how it could be sending those events (unless the gesture recognizers just ignore CancelGestures and keep firing the events)."""
5051,309492777,"b""I just tried enabling the navigation gesture recognizer (with default WMR gesture settings) using a WMR headset, and didn't get tap/hold events."""
5051,309492943,"b'also, I went ahead and added the check you requested initially (and fixed the merge conflict) - so hopefully this change is ready to go'"
5373,309889947,"b""ok - I've removed the hiding and tried to keep the functionality the same."""
7606,401979759,"b""By default the variable value is set to true in the base pointer, so we don't need to explicitly initialize it for any of the other pointers"""
7606,401985718,b'Yeah I looked at this instance and saw it was an experimental feature. I changed its behavior to more closely mimic the HandInteractionPanZoom and the CanvasUtility and cache the previous set value.'
7609,402549054,"b'The documentation mentioned .1f1 in a later section so I put it as 1f1 on top for consistency, should we change it to 2018.4 in both areas then?'"
7606,402640497,"b""Will add a test for the old behavior. Otherwise following keveleigh's above comment"""
7625,405265691,"b""that sounds like a good idea. I think the layer masks for pointers might need a retooling in general, but I'd rather tackle that in its own PR"""
7625,405710191,b'Being tracked by #7629 now'
7625,405710989,b'Tracked by #7629 now'
7625,405715362,b'Confirmed!'
7625,405733239,b'Updated to deprecate out GrabLayerMasks'
7625,405743323,"b""I think we can push back the deprecation for a later more dedicated re-write, I'll follow through with Kurtis's OnPreSceneQuery suggestion for now and make an item to rewrite the PioritizedLayerMask stuff"""
7625,405813131,"b""There doesn't seem to be a good way to extract that exact pointer implementation from the interface so shelving this for now."""
7625,405814281,b'I think this should be fine unless the user manages to set PrioritizedLayerMasksOverride to null between OnPreSceneQuery and the QueryScene calls'
7631,405883360,b'Sounds good! '
7631,405892373,"b""So I'm noticing some actions like dragging around objects don't seem to work out of the box using the gaze provider and the select action. Will be looking more into it tomorrow. \r\n\r\nAlso I'm noticing that our HandInteractionExamples.unity scene is really small, as in, the objects are all really tiny and bundled close together. Is there a reason it's like this, as there's a bit of whiplash when trying to pan the camera around in that scene due to how _relatively_ fast you go"""
7625,405894811,"b""the totalNumColliders is mainly used to allow us to track and potentially issue the warning on lines 1243 through 1246. It's to ensure we have the same behavior as before when we only did 1 spherecast on  the one hardcoded layermask, but generalized to potentially multiple sphere casts on multiple different layermasks"""
7625,406549899,"b""given that the numColliders queried per raycast is what we care to check, the counter for tracking the total number of colliders is a bit misleading. I'll clean this up """
7631,407615464,"b""Yeah the main purpose of this was to remove the dependency of the IsPinching flag to the gesture animation. There shouldn't be any other side effects based on the unit testing"""
7631,407726400,"b'This change ended up being extraneous, discarding'"
7631,407729309,"b""Yeah I've modified these hacks to properly use a new controller input profile definition."""
7631,407730005,b'Modified to properly use input profiles'
7631,407761150,"b""Looking through posts about how other developers have handled simulating input I think a larger scale rewrite would have to be done to properly test an end user's experience\r\n\r\nhttps://answers.unity.com/questions/28473/simulating-key-presses.html\r\nhttps://answers.unity.com/questions/588786/is-it-possible-to-simulate-a-keypressinput-in-code.html\r\n\r\nFor now I'll write a set of tests explicitly checking the new hands-free ggv feature and log a broader work item for later"""
7631,407794950,"b'I actually found that we have a KeyInputSystem class that we can leverage to do input simulation, going to modify that class to allow for simulated inputs'"
7664,409131643,"b""The bit of research I did seems to suggest that the content hosted on githubusercontent doesn't have an expiration time, so it seems like a good solution"""
7631,409200111,"b""I added some tests making sure that the pinch gesture is properly simulated with the left and right hand, but will forgo testing articulated hand object interaction with input simulation for now. This is because the code for moving the hands tied with the code that detects for user input, and we currently can't manually position the hands while user input also affects where the hands are positioned."""
7664,409201249,b'it was real fresh copy pasta \xf0\x9f\x8d\x9d'
7664,409202122,"b'Because the grid is filled from left to right and then top to bottom, the alignment behavior will only ever be visible on the last row/column. I think we\'d need to address a different set of needs if we wanted to let users define a different ""order"" or how objects should be laid out. As far as the scope of addressing the initial issue is concerned, I think this covers what they were looking for.'"
7676,409897544,"b'I\'ll change it to ""anchor along axis"" since that succinctly describes its behavior. When the anchor position is set to ""Middle Center"" I\'ll remove the checkbox from the editor to avoid any confusion'"
7631,409932344,"b""Yeah this didn't break locally and in the initial set of /azp runs. I'll make a PR for this to see if it can fix it. """
7679,410412515,b'typo?\r\n```suggestion\r\n        /// Tests tap to place object placement if there is a surface hit on another collider through Start/StopPlacement calls\r\n```'
7693,411762862,"b'The one issue I see with removing this check is that we end up calculating the distance of a point to each of the scale handlers, whereas before we could potentially avoid this by only calculating the distance if it was near the bounding box object. However, since we don\'t actually know the scale of the object that is being manipulated, determining when the pointer is ""near"" the object becomes kind of tricky. There shouldn\'t be a large performance impact unless there are a lot of objects with their handlers visible at all the same time.'"
7693,412370744,"b""I'll look into ways to avoid changing the behavior of the corners variable then"""
7693,413192825,"b'The main reason for this change was for testing purposes, as the only public way to access handlers was through the ScaleCorners and RotateMidpoints objects, which refer to the corners and balls objects. I can rework ScaleCorners and RotateMidpoints to directly refer to the handler objects themselves though'"
7693,413211755,b'With 128~ bounding boxes in the scene I go from 29 to around 24 fps\r\n\r\nWith 65~ ish bounding boxes I go from 35-37 fps to around 33\r\n\r\nWith 32~ ish bounding boxes its 102 with the check and 99 without\r\n\r\n'
7693,413926459,"b""Targetbounds.center gets the center of the box collider associated with the bounding box, before we relied on transform.position being the center of the gameobject, but this didn't account for the fact that box collider could be offset manually in editor"""
7693,413926849,b'I was copying what we did in bounds control \r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/18fe32fd8d627216754885c7fecf4cf2434aa07d/Assets/MRTK/SDK/Experimental/Features/UX/BoundsControl/Visuals/ProximityEffect/ProximityEffect.cs#L153'
7693,413928638,"b""I didn't really want to access by name (searching for corners_i and then searching for the visuals game object under that object's children seems less ideal and more prone to breakage)"""
7693,414068272,"b""Those variables aren't publicly modifiable so will be leaving this."""
7736,416945007,b'My concern with making hard changes to the gaze pointer is that it might modify old HoloLens 1 behavior (since making changes to the gaze pointer seems to get surfaced when I use the gestures input simulation mode)'
7712,418202968,b'Based on the implementation in the HoloLens shell I thought this was the same as the pullback distance. You can see a minimum distance check inside the `TryUpdateQueryBufferForLayerMask` function'
7712,418203534,"b""You're right I'll update the comment"""
7755,418362570,b'```suggestion\r\n  ![Gizmos](https://user-images.githubusercontent.com/39840334/80771381-2978c000-8b08-11ea-8fd0-149b0c06fc6a.png)\r\n```\r\n'
7755,418363659,b'```suggestion\r\n     ![Gizmos](https://user-images.githubusercontent.com/39840334/80771381-2978c000-8b08-11ea-8fd0-149b0c06fc6a.png)\r\n```'
7712,418690706,b'Yeah I think the comment is accurate'
7712,418740025,b'yeah I messed up and updated the comment'
7712,418749952,b'if the Cos(angle) is larger that means the angle itself is smaller so its the right check here. '
7768,419759277,b'```suggestion\r\n```'
7768,419775739,"b""the near pointer's we have are the sphere pointer and the poke pointer. IsNearObject is used to toggle between near and far interactions, which is slightly different from IsInteractionEnabled. As such, the NumNearPointersActive count should go up if the IsNearObject flag is true. \r\n\r\nThe bug this addresses is when an articulated hand spawns near an object, but not quite in the range to trigger IsInteractionEnabled. In these instances, the gazecursor would remain on the screen, even though the cursor won't be on the screen if you spawn the hand far away from the object and then move closer to it"""
7814,421134918,b'```suggestion\r\n  isHandsFreeInputEnabled: 1\r\n```'
7886,426930091,"b""Trying to write unit tests, and this check seems unnecessary because of this line 447\r\n\r\n`if (iconSet != defaultIconSet)`\r\n\r\nIt's a bit hard to test this case since this tool ends up creating or modifying the custom icon set if its successful. Thoughts?"""
7906,426941713,"b""The check for ` iconSet == defaultIconSet` seems unnecessary here since in line 447 we have the following\r\n\r\n`if (iconSet != defaultIconSet) \r\n{   // This button is using a custom icon set, so we can't assume material differences mean it needs an upgrade.`\r\n\r\nIn addition, we should have a field for specifying the customIconSetsFolder for the sake of testing/preventing all migrated icons from being funneled into a singular monolith icon set."""
7915,427562216,"b""Good point I'll add a check for file existance"""
7712,428865561,"b""It's only used in sphere pointer right now, but I believe it is the same general category of function as TryGetNearGraspPoint, so it can be useful if we need to implement a visual direction indicator or something similar"""
7978,434070400,"b'```suggestion\r\n        [SerializeField]\r\n        [Tooltip(""Small description for the serialized fiends to better understand what this value represents"")]\r\n```'"
7978,434070715,"b'```suggestion\r\n        [SerializeField]\r\n        [Tooltip(""Small description for the serialized fiends to better understand what this value represents"")]\r\n```'"
7978,434074721,"b'```suggestion\r\n        [Tooltip(""Small description for the serialized fiends to better understand what this value represents"")]\r\n        bool ShowGrabberVisual = true;\r\n```'"
7978,434075035,"b'```suggestion\r\n        [Tooltip(""Small description for the serialized fiends to better understand what this value represents"")]\r\n        int ReboundSpeed = 5;\r\n```'"
7978,434075250,"b'```suggestion\r\n        [Tooltip(""Small description for the serialized fiends to better understand what this value represents"")]\r\n        [Range(50, 300)]\r\n```'"
7978,434075378,"b'```suggestion\r\n        [Tooltip(""Small description for the serialized fiends to better understand what this value represents"")]\r\n        [Range(50, 300)]\r\n```'"
7978,434083438,b'The build is failing here. We need a space after all // comments :T\r\n```suggestion\r\n                    // TODO: Clamp above zero\r\n```'
8020,436074627,b'it was mostly for debug woops'
8054,440291357,"b'There was an edge case we could get where when the application was paused and then resumed, the gaze cursor would stay active on the screen even when new hands were brought up (this is because we now disable and then enable all services on application pause) '"
8088,443870939,"b""The Oculus XR2018 is currently in the OpenVR folder, I'm not sure we want to move it out given that the Oculus XR2018 implementation is built on top of that"""
8088,443871494,b'Actually its probably fine since we already separated WindowsMixedRealityXRSDK from the XRSDK folder'
8088,443875030,"b""They're actually too entangled ._. gonna leave it as is for now and have a XRSDK folder but no XR2018 folder"""
8088,444413096,"b""fixed! though any idea why we're measuring float data for a digital axis type? (assuming is a WMR thing)\r\n\r\nif (interactionMapping.InputType == DeviceInputType.TriggerTouch\r\n                    && inputDevice.TryGetFeatureValue(CommonUsages.trigger, out float triggerData))\r\n{\r\n    interactionMapping.BoolData = !Mathf.Approximately(triggerData, 0.0f);\r\n}"""
8088,444517805,b'these mappings were copied over from the XR2018 controller definition. I think we  might need to realign some definitions for GenericXRSDKController so it can properly differentiate things like Button.One Press and Button.Two Press'
8088,444554874,"b'Because GetDevicesWithCharacteristics fetches devices that exactly match the bitmask passed through, I altered the code so that we get devices that are either controllers, handtracking, or both'"
8088,445032265,"b'Yeah on the right side the oculus button acts as a sort of ""home button"" which brings you back to oculus hub'"
8088,445032641,b'it was some fresh pasta \xf0\x9f\x8d\x9d '
8088,445034386,"b'Characteristics is an unity.xr-side inputdevice property which is separate from our own SupportedControllerType definition. Characteristics is a bitmask that defines several properties that a input device can take on (controll, handtracking, headmounted, etc)'"
8088,445037746,b'Part of the enum refactor work hopefully fixed this issue!'
8088,445041941,"b""The GetDevicesWithCharacteristics function is an exact match, so we need to do it this way to get devices that have handtracking, controller or both properties (I think, I'm not sure what the previous case was we could test this one)"""
8088,445043786,"b""If GetDevicesWithCharacteristics works like I believe it works (only does an exact match) I don't think we should get the redirected/reupdated case"""
8088,445046481,b'this should be singleaxis since we still wanted the float data'
8088,445065187,b'fixed things up!'
8088,445074590,"b'ohhh I see, will adjust'"
8088,445869977,"b""Yeah I also see the loaders. Didn't include them initially but now I see we have ARCore and WMR loaders already in the project, so added these in as well\r\n"""
8108,446323680,"b""I'm trying to add it to the target branch is the thing... trying to add it directly didn't work so I opened a PR for it"""
8127,448010346,b'Rename to LogInfo for consistent naming as Log+Logging Level'
8127,448011592,"b'Is there a functional difference between LogInfo and LogVerbose? Both call Debug.Log, but LogVerbose explicitly sets it so no stack trace will be outputed to log, which seems like a strict subset of LogInfo'"
8127,448012623,"b'Based on comments in your docmentation\r\n\r\n> ### Enable verbose logging\r\n> \r\n> Indicates whether or not verbose MRTK logging will be enabled. This defaults to false, but can be\r\n> turned on to take detailed traces that allow the MRTK team to debug/dig into issues.\r\n\r\n it seems like the StackTraceLogType should be set to `StackTraceLogType.Full` here and not StackTraceLogType.None?'"
8118,448017024,b'TIL c# has this kind of lazy evaluation\r\n\r\nso cool'
8088,449259807,"b""I don't think we have anything currently scoped out or planned, though I believe the PR has most of the button components mapped, hence why I added primary and secondary button device input types"""
8156,451873136,b'Yeah testing it locally it works! That original change might not have been completely necessary \xf0\x9f\x98\x86 '
8164,454576004,"b'Oh this is actually used in lines 171\r\n\r\npublic bool IsNearObject => queryBufferNearObjectRadius.ContainsGrabbable || queryBufferInteractionRadius.NearObjectDetected;\r\n\r\nIts basically here to turn off near object interaction if the object is in the grabbable sphere cast range, since that edge case can occur when the near object detection is a sector. It also ignores bound handlers to avoid the bug we had experienced before with flickering handlers.'"
8164,454576702,b'Just a refactor because the clicking on the play mode boundscontroltests to open it would open up the edit mode boundscontroltests file instead.'
8164,454576903,b'Will do'
8171,454678268,"b""it seems wrong to override a bunch of code around setting and getting the `gestureBlending` variable to ensure that it stays fixed at 1.0f when we're using the hands free input simulation. I think its better to let `gestureBlending` be set and managed as usual and just target how isPinching specifically behaves."""
8180,455970934,b'Just trying to simplify the eye simulation things from 2 boolean variables to a single enum'
8183,456025801,"b""Don't include this file"""
8183,456025883,b'this one too'
8180,456063578,"b""didn't mean to change the default reverting this change."""
8196,458374858,"b""Not super familiar with this piece of code, any reason we're removing this test?"""
8200,460202340,b'Why not make this an interface at this point rather than an abstract class? '
8200,460204132,"b'I\'ve only ever seen !var and var == false was always called ""bad style"" in college and on my previous teams for what it\'s worth.'"
8259,471668018,"b""Though I think it makes sense consumer from a consumer standpoint, I don't feel entirely comfortable with making cosmetic changes to the MRTK-Quest code without getting @provencher 's impression."""
8259,471669827,"b""Its mostly due to namespace/dependency concerns/not wanting to make changes to MRTK-Quest that aren't reflected in their base repository as well. @provencher is it ok if we make the alterations needed here to reflect this being a subset of mainline MRTK?"""
8259,471676653,b'yep'
8259,471700019,"b""Yeah I'll move forward with moving namespaces"""
8259,471795368,"b""I think people who import the original extension will end up having to deal with issues since we still rely on the underlying OculusQuestHand class. Keeping it in a ThirdParty folder I think better helps highlight the idea that this module was largely built upon one of our community members, though I guess it still doesn't fix the issue that MRTK-Quest users will face in trying to import that library."""
8259,471801835,b'For now going to move it under Assets/Providers/Oculus/XRSDK/MRTK.ThirdParty to align with our name space adjustments'
8259,471811765,"b'Also saw your earlier comment about namespaces, so it should work out fine \xf0\x9f\x91\x8d '"
8259,473265462,"b""I didn't know how those debug scripts related to our current suite of scripts. I don't think we need them just didn't want to exclude anything that might have been useful by default"""
8259,473265642,b'How do you regenerate guids?'
8259,473266044,"b""We don't need this profile I'll remove it so that we don't end up getting duplicates for people importing MRTK-Quest still"""
8259,473386841,"b""Yeah I think I need to rewrite this section a bit now that we're pulling in MRTK-Quest directly into our project"""
8259,474996264,"b'yikes, it was used in an example scene, so its not essential and I can remove it'"
8259,474996819,"b'yeah Oculus.VR is in the included Oculus package, when the package is not available its just greyed out (I think leap motion does a similar thing)'"
8259,474999244,"b""Its a MRTK-Quest specific configuration profile. I don't think it matches any of our own profiles."""
8259,475010389,"b'the references to the prefab end up calling some OVRCameraRig functions, is it ok to do a GetComponent on the gameobject afterwards?'"
8259,475010511,"b'I think we want to add it back in after this first round of PRs, I was going to leave it in to make it easier to test/vet when we get to that point'"
8259,475011995,b'The local avatar prefab is just used to show some kind of hand model when using the quest controllers.\r\n\r\nHow things look when using the quest controllers\r\nWithout MRTK Quest\r\njust the standard 3 axis XRSDK controllers\r\n\r\nWith MRTK Quest\r\nWhen Render Avatar Hands checked you get 3d hand meshes thanks so the LocalAvatarPrefab\r\n![image](https://user-images.githubusercontent.com/39840334/90943021-edc27880-e3cc-11ea-84b8-2dcb6ea0ec00.png)\r\n\r\nIf Render Avatar Hands is unchecked you get generic oculus quest controllers visualized\r\n'
8259,475869476,"b""yes I'll change the definition to be android quest only"""
8259,475920290,"b""It will be uncommented in a followup PR to add teleporter pointer features. I'll delete the commented out sections for now since it seems to be confusing and be careful when adding it back in."""
8259,475921439,"b'I think it works on quest and rift based on the online documentation for the integration package and the xrsdk pipeline, but not completely sure how some components like handtracking work on the rift.'"
8259,475969397,b'Updated with clear #if LATER markers'
8386,476932209,"b""Yeah reading over eric's comments on the custom teleporter pointer class I'll be looking to see if we can tear it off of it's mrtk quest dependency and make it more general to the ArticulatedHand controller type."""
8386,482200833,"b""Hey Eric, we're talking to some other folks on our team for making some in house versions of the audio to reduce the organizational+license jumble of dependencies, so even if not for this PR, we'll definitely be updating our soundscape in line with the improvements you've made!"""
8386,482619827,b'I think the prefabs are preconfigured with the appropriate material so I can just remove it'
8386,482621838,"b""Actually passing on this since we're using a custom material here to have them react to the pinch strength, removing this makes it harder to ensure the pinch strength property exists on the hand material and can result in shader errors, so will leave it be for this round."""
8386,482622896,b'We set the teleport action to None when we start Update Teleport\r\n\r\n283            MixedRealityInputAction teleportAction = MixedRealityInputAction.None;\r\n\r\nSo we only raise input changed events if the teleport action has changed away from that default value.'
8259,483879186,"b""We ended up keeping the dependency on the Oculus package for the time being, I'll make an issue to track this improvement in a future PR."""
8386,485212643,b'will clean'
8386,485258375,b'finished the big rebase \xf0\x9f\x92\xa6 '
8386,485263533,b'oops  I reverted the pascal case when rebasing \xf0\x9f\xa6\x96 \r\ndone!'
8386,485266067,b'the change feels great I promise!'
8522,486534629,b'are streamable links fine like this one? https://streamable.com/ta4bhv'
8557,489060562,"b'I think we had it sequestered off initially because it used some Oculus package specific code before, removing this asmdef once ensuring its no longer needed.'"
8590,490634342,b'oh my mistake in checking this in I thought it was needed to fix a break with the oculus xrsdk device manager'
8590,490634647,b'Does Initialize() run when the user tries to build the project? Something I noticed when trying to deploy/when helping alex deploy is that its easy for users to get to a step where they are trying to deploy to device and up until that point they experience no errors and end up confused at the vague deployment messages.'
8590,490635353,"b""I'm not sure since the initial code was derived from the leap motion process, I can double check to make sure that nothing crashes/make the appropriate adjustments"""
8590,490636614,"b""The problem is that the integration tool has no mechanism to remove/bring back the unity.xr.oculus package when the user tries to clean up the repository after removing oculus references. They has also been some CI issues regarding leaving a reference to Unity.XR.Oculus in the asmdef references, as by default the project doesn't import that package. Given that a large part of our focus for this project is to let users play with articulated hands tools with quest, I think it's alright to overall tie our Oculus story to the Integration Package asset."""
8590,490638891,"b'The state works as expected, I can try isolating controllers/hands a bit more, but the potential issue I highlighted regarding a reference to an unloaded Unity.XR.Oculus assembly still stands (I think it broke CI once). We can try again since that PR ended up fixing several issues if you think we can get away with it?'"
8590,491182367,b'Checked up with that PR and only one asmdef update should be redundant. We can merge in with whichever PR gets in first.'
8590,491220751,"b""Yeah you're right making this silent should reduce the confusion for people importing our package."""
8620,492401946,"b""Any reason we're changing the input simulation language from hands to controllers? Seeing Controller simulation mode to me feels like the main focus is on simulating controller inputs (ie, the joystick, 6dof movement, triggers and buttons) rather than what the hands currently do, which is focused on pinching, poking, grasping objects in the world. Calling the articulated hands a controller device feels kind of off to me, as a more general term like input device makes more sense to me as a user reading the documentation."""
8620,492402509,"b'As a general comment it gets kind of confusing to parse the docs when controller is repeated so often. For this part in particular, maybe something like Left/Right Controller activation key might be better? '"
8620,492413486,b'```suggestion\r\n### Simulating controller movement\r\n```'
8668,494650501,"b""This naming seems a bit risky since I can imagine it colliding with another .asmdef at some point, though you've said you've said you'll be prepending these with MRTK so it should be good!"""
8668,494672472,"b""yeah we can remove these I'll make a PR\r\n"""
8739,499913946,"b""Yeah there's some more work I want to do to verify the quality of the implementation, I'll keep you posted :)"""
8766,501192079,b'We can just omit the file path then'
8766,501268105,"b'It\'ll only hit the first instance of AssetDatabase.FindAssets(""t:OculusXRSDKDeviceManagerProfile""); at the moment, I didn\'t consider people making their own OculusXRSDKDeviceManagerProfile\'s when writing this up :('"
8766,501270704,b'tracking issue here https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8767'
7440,501986788,b'fixed!'
7440,502041372,"b""to be honest I'm not super familiar with what all of the properties do so i was a bit hesitant to add more things to the CBUFFER than what was necessary to make it compatible. Can you give me some guidance on what kinds of additional properties we'd want to include there and also how to trace the number of build calls"""
7440,502202722,b'Last commit should be all of them now \xf0\x9f\xa5\x87 '
7440,502573807,b'woops '
8777,503441816,"b""nope the underlying `base.SetVisibility` is what caused a bug where the teleport cursor would suddenly disappear/reappear when using hand constraints. This is because the base class's implementation would deactivate the gameobject with the animator, causing the animation state to get reset and for the disappearing animation to play unnecessarily. """
8794,506081794,"b'So a `MotionControllerState` needs a corresponding `MotionController` to actively fetch data from which from my knowledge is only accessible via the events fired by  `MotionControllerWatcher`. which is why we have the following\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/cfa683f472c774964c48eb2d4194f36a0aee5458/Assets/MRTK/Providers/WindowsMixedReality/XR2018/WindowsMixedRealityDeviceManager.cs#L362-L365\r\n\r\nI guess we can condition on the creation of an HPMotionController based primarily on the existence of the corresponding key in `trackedMotionControllers` (presuming that event got fired first), and then the lack of touchpad second. '"
8794,506096124,b'Updated with the proper mappings (I think!)'
8794,510344317,"b""Ah I see. I was slightly confused about what to do about the Trigger Touch interaction mapping since it seems like the HP controllers don't have capacitive sensors: https://www.windowscentral.com/hp-reverb-g2-controllers"""
8794,512928566,"b""Wrapped around the if else logic in a version define, so the extra check isn't done if HP_CONTROLLER_ENABLED isn't defined. The check still exists otherwise, since it's possible for the MotionControllerState to not be immediately available when instantiating a HPMotionController"""
8847,512929398,"b""That sounds like the right method to use I'll change it\r\n"""
8847,512957802,"b'Just missed this, will update message in a followup PR'"
8847,512959767,b'https://github.com/microsoft/MixedRealityToolkit-Unity/pull/8851 here we go.'
8853,513707148,"b""Might be better to check the class of the pointer here rather than it's presence in the farInteractPointers collection, since any pointer that isn't a TeleportPointer or NearPointer seems to get added to this collection. This would also match the pattern when managing the near pointers in the code above.\r\n\r\n```suggestion\r\n                                if (!unassignedPointers.Contains(otherPointer))\r\n                                {\r\n                                    continue;\r\n                                }\r\n                                if (otherPointer is IMixedRealityFarPointer)\r\n                                {\r\n                                    continue;\r\n                                }\r\n```"""
8794,514466534,"b""Sounds good, I didn't want to override the accidentally underlying behavior (many of which use the !Enabled check too)."""
8794,514621737,b'Done'
8794,515295766,"b""ohhhhh I see why the original design was that way, I'll revert it and add comments explaining why"""
8794,515328613,"b'Yeah I think I made a mistake with raising trigger/grip InputDown and InputUp events here. This is the final break down based on my understanding.\r\n\r\nUpdateButton:\r\nRaise Touch/NearTouch events when float > 0.0f, raise Press/GripPress events when float == 1.0f\r\n\r\nUpdate Single Axis \r\nraise TriggerPress/GripPress events when float == 1.0f (based on the GenericJoystickController implementation, check is done here as well as Update Button for comprehensiveness)\r\n\r\nRaise Trigger/Grip float change events whenever the float changes.'"
8794,515421419,"b'I thought it was more of a catch all ""if the code we are using anticipates handling a grip touch event, we want the controller to be firing it"" kind of situation. I noticed that the GenericXRSDKController has a case of it in it\'s UpdateButton Data\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/4e1c3976b0f8403098bf6a291044c4eb873b5bd2/Assets/MRTK/Providers/XRSDK/Controllers/GenericXRSDKController.cs#L148-L151'"
8906,518428828,"b""I think these additional changes to reset are what's causing the PR check to fail"""
8906,518429923,"b""Not entirely sure why we don't call base.Initiliaze() here vs. setting the bool. """
8906,518430064,"b""Not entirely sure why we don't call base.Enable() here vs. setting the bool. """
8906,518442327,"b""There's a few other places in this commit where this occurs so just want to ensure consistency between manually setting vs. relying on the base class function."""
8906,518442356,"b""There's a few other places in this commit where this occurs so just want to ensure consistency between manually setting vs. relying on the base class function."""
8906,518451437,"b""So long there's consistency through the PR I'm happy with it, since it'll make it easier when writing new service classes in the future """
8942,524800238,"b""Is there a reason we don't want to show values if they're false? It's helpful I think to have it explicitly told that a value is reading out to false/zero etc."""
8942,524803001,"b'Might also be helpful to color code true/false values to make things a bit eaiser to read. for example false values can be\r\n\r\n$"": <color=red> {interaction.BoolData} </color>""'"
8942,524803712,"b'Is it possible to order these interactions by groups (bool, float, vector, quaternion) and then make sure to display them in order to make things a bit easier to read?'"
8714,525418399,b'nope will remove it'
8714,525419277,b'Was thinking of checking in first and then moving in a different PR so as to not obfuscate changes'
8714,525419774,"b'Lingering changes from testing, will revert'"
8714,525420716,"b'> Works great with Leap:\r\n> ![LeapRiggedHands](https://user-images.githubusercontent.com/53493796/99434281-71540e80-28c3-11eb-9abe-9a5a9bc48471.gif)\r\n> \r\n> It would be helpful to add a scene description panel to the RiggedHandsVisualizer example scene, like our other example scenes:\r\n> ![image](https://user-images.githubusercontent.com/53493796/99434651-e1629480-28c3-11eb-8043-62969fe82462.png)\r\n> \r\n> Also since this is a graduation PR, we would need to move the feature out of the experimental folders, and make sure the namespaces do not include experimental.\r\n\r\n@grayclee Do these look ok to you? The thumb sticks out kind of oddly and is more noticeable here than on the quest.'"
8714,525431897,b'Leaving the joint visualization in the editor because it shows the origin of the grab/hand pointer and is generally useful.'
8714,526443902,b'I thought I managed to remove it qq...\r\nreverting'
8714,527139294,"b'The hand mesh only cares/tracks a subset of joints defined in the Start() function, whereas the skeletonJoints track the positions of all joints received from the event data so it can render one of the tracking cubes. The two remain separated code style-wise in order to make the separation clearer.'"
8965,527285884,"b'Our BaseHandVisualizer is in the .Input namespace, so I thought it would make sense to have this be in there too.'"
8965,527286035,"b'need to refactor out a bunch of stuff that popped up from the version diffs, processing now'"
8977,528913489,b'Yeah this design pattern seemed a bit weird to me too. Where in the profile have we handled this similarly?'
8977,528915152,"b""Is there a reason that the WMRArticulatedHand doesn't derive from BaseHand? I'm ok with making the OculusHand use the ArticulatedHandDefinition, I just want to understand the broader design considerations."""
8794,530674144,"b""We can do that, the guard was here mostly because the pipeline doesn't correctly report the touchpad status at the moment, so all WMR controllers will end up being HP controllers was the main issue."""
8794,530676733,"b""yeah it probably makes more sense to leave it on the existing path, given we don't add currently through this path. I'll double check my code to make sure that we don't leave room for other issues to crop up."""
2488,205181065,"b""I had done no changes regarding the coding as I only added some comments in the coding part. Besides, some of the coding are out of what I had learned so I won't touch those coding, sorry for making any inconvenience."""
2488,205181670,"b""I agreed that some of the comments are too redundant but I can't really understand the whole part of code, that is why I could only managed to add some of the minor and comments which seems to be meaningless haha."""
2488,205181925,b'What I did was what we usually did in our school project. Thanks for letting me know to be more efficient!!'
2488,205182396,"b'Maybe I done some changes accidentally, this part of coding I made no changes too.'"
2488,205183604,"b""I didn't change this part as well, maybe I'll help you to change the code and upload again."""
2488,205183872,"b""Sorry that I just followed the declaration of the variables earlier in the code, I'll try my best to modify it again. Thanks a lot!"""
2488,205184004,"b'I just followed what I understand from the part of coding and my purpose is to provide convenience for the readers so that they can understand this easily, sorry for putting those redundant comments.'"
2488,205185507,"b'I remembered that I had added {} to those loops, is it ok?\r\n'"
2488,205193010,"b""I don't know why there will be changes in these documents and I never opened up these documents. But I'll try my best to revert every similar error."""
2488,205204392,"b'Because what you had planned should be done before your action, am I right? Haha'"
2488,205211073,"b""So this won't need to be revert right haha, hope that everything will be approved and just let me know if there's anything that I need to change."""
2488,205320516,"b""This wasn't me as well. I can remove it."""
2488,205325323,b'So can this be approve?'
2488,205325403,b'So I done this correctly right?'
3676,269668385,b'Done'
4004,276375558,b'yes\r\n'
4074,279177970,b'good idea this is long for a place holder. '
4074,279178046,b'done'
4606,288963778,"b'yes. We have found issue with 2018.3.14 that blocks deployment at two hack event, and seems to have no issue with 2018.3.7. \r\n'"
5328,304126251,b'Checking.. '
5328,304126289,b'fixed '
5617,313492090,"b'>bool focusIndividualCompoundCollider [](start = 259, length = 36)\r\n\r\nYou should probably put this param before all of the out params.  Also need a space after the comma.'"
5617,313495141,"b"">hit.transform.gameObject [](start = 50, length = 24)\r\n\r\nI'd use ternary syntax here.\r\n\r\nGameObject targetGameObject = (focusIndividualCompoundCollider) ? hit.collider.gameObject : hit.transform.gameObject;"""
5594,313498270,"b'>dwellTriggerPointerType [](start = 32, length = 23)\r\n\r\nDo you think users of this feature may ever want to allow dwells with more than one input source type?  If so, then consider making this an array. #Resolved'"
5594,313499062,"b'>focusTime [](start = 23, length = 9)\r\n\r\nnit: rename focusTime to focusDuration (or dwellDuration?) for clarity #Resolved'"
5594,313500718,b'This parameter is not needed.  You can just set timeToAllowDwellResume to 0. #Resolved'
5594,313508736,b'Do you mean trailing comma?\r\n\r\n---\r\nIn reply to: [313146037](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5594#discussion_r313146037) [](ancestors = 313146037)'
5594,313512002,"b'super nit: I\'d do the state check prior to the math in this if clause.  And consider refactoring the math slightly to add the delays right of the "">="" sign instead of subtracting some of them\r\n(currentState == DwellIntended && (focusTime >= DwellIntendDelay + DwellStartDelay) #Resolved'"
5594,313512210,"b'>pointerRef [](start = 37, length = 10)\r\n\r\nnit: rename to just ""pointer"" #Resolved'"
5594,313513098,"b'>Time.deltaTime [](start = 33, length = 14)\r\n\r\nDoes this imply that CalculateDwellProgress must be called exactly once per frame?  If so, then maybe do the math in Update() instead? #Resolved'"
5594,313522746,"b""It seems like you're doing a lot of this logic twice, once in the if clause and again here in reverse.  Consider refactoring to something like this:\r\n\r\nif (resume criteria)\r\n{\r\n   // do resume actions here\r\n}\r\nelse //maybe restart in all other cases?  Not sure if you need to check anything in this case.\r\n{\r\n   // do restart actions here\r\n} #Resolved"""
5594,313529862,"b""I think there should be a period of time after dwell completion where new dwells are not allowed on the same item.  Is this accounted for anywhere?  Or maybe it's just that as currently coded, you have to focus off then back on again to start a new dwell after completing one?  Maybe that's fine. #Resolved"""
5594,313530551,"b'>dwellVisualCancelDurationInFPS [](start = 22, length = 30)\r\n\r\nDo you mean in frames? #Resolved'"
5677,315333654,"b""What about doing something like this?\r\n\r\n                var pressableButton = (PressableButton)serializedObject.targetObject;\r\n                pressableButton.DistanceSpaceMode = (PressableButton.SpaceMode)distanceSpaceMode.enumValueIndex;\r\n\r\nThen the setter logic can stay in one location.  The thing I'm unsure of is how to make sure that the values don't get overwritten by a later call to serializedObject.ApplyModifiedProperties.  Is that what serializedObject.Update() does?  Copy the values from the real object onto the serialized representation?"""
5781,317820547,b'Add class comment #Resolved'
5781,318328839,b'Added a comment and simplified for the specific use case here. #Resolved'
5781,318727627,"b""I'll give this a try.  It just needs to occur before any attempt to use rectTransform.\r\n\r\n---\r\nIn reply to: [318718090](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318718090) [](ancestors = 318718090)"""
5781,318728324,"b'If desired, I can revert these changes.  They are not required for my change.\r\nIt just seemed odd to me to have them all protected rather than private.  Is there a reason that these are all protected in the first place?\r\n\r\n---\r\nIn reply to: [318712590](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318712590) [](ancestors = 318712590)'"
5781,318751440,"b""The inspectors for PressableButton and NearInteractionTouchable both use all of these and currently do the math in local.  But I see they then transform it to world later anyway.  So I think what you're proposing will work.\r\n\r\nRegarding NearInteractionTouchableVolume, are you proposing that there should be a separate interface for that class?  Or are you saying that NearInteractionTouchableVolume should implement this interface?\r\nIf it's the former, I'm not sure that there is much value in the interface.  If it's the latter, then I'm not sure that these values are applicable.  But if you do want me to go forward with it, then I'd just remove this interface and move all of it into NearInteractionTouchableBase.\r\n\r\n---\r\nIn reply to: [318716288](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318716288) [](ancestors = 318716288)"""
5781,318756679,"b""Actually looking into it further, do we really even need Forward at all?  For both UnityUI and the existing collider-based buttons, the local forward is set to -Vector3.forward.  Should we just remove this concept entirely and just use the transform alone to determine the forward direction?  It's an existing protected serializeField for NearInteractionTouchable, so it would definitely be a breaking change.  Do we know if anyone was using it for any other values?\r\n\r\n---\r\nIn reply to: [318751440](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318751440) [](ancestors = 318751440,318716288)"""
5781,318776865,"b'Per conversation, not going to do this because this inspector is not applicable for all derivations of NearInteractionTouchableBase.'"
5781,319142407,"b""Per this policy, this breaking change does not meet the bar.  I'll revert it.\r\n[https://cognitionwiki.com/pages/viewpage.action?spaceKey=MRTK&title=Breaking+Changes](https://cognitionwiki.com/pages/viewpage.action?spaceKey=MRTK&title=Breaking+Changes)\r\n\r\n---\r\nIn reply to: [319128959](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r319128959) [](ancestors = 319128959)"""
5781,319163615,"b'Awake works in app but fails because the inspector queries the Bounds property before Awake occurs.  I switched it to a Lazy and that seems to work in both places.\r\n\r\n---\r\nIn reply to: [318727627](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318727627) [](ancestors = 318727627,318718090)'"
5781,319187193,"b""Ok, trying to implement your suggestion of WorldCenter and WorldForward only, I ran in to some issues.  There is some math in PressableButtonInspector which is done in local space.  We'd need to convert back to local space to do all of that math, then convert back to world space again.  So I think I'll keep these as-is for now, even though it's not ideal.\r\n\r\n---\r\nIn reply to: [318756679](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r318756679) [](ancestors = 318756679,318751440,318716288)"""
5781,319224449,"b""I ended up going partway.  I reduced the number of properties in this interface to close to what we'd want after we deprecate and remove the forward/up/right vectors.  They're all still in local space.\r\n\r\n---\r\nIn reply to: [319187193](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5781#discussion_r319187193) [](ancestors = 319187193,318756679,318751440,318716288)"""
5781,319224997,b'Done.'
5781,319274811,"b""Pulled out into a separate class now.  It's much simpler now; just a single function with a single line."""
5781,319275332,b'Reverted these breaking changes.'
5781,320477137,b'Thanks.  Yes I ran all of the tests with my latest changes.  They all pass and none leave any gameobjects behind.'
5781,320477209,b'Updated with the latest naming.'
5781,320517775,b'Sounds good.  Done now.'
5781,320865180,"b'Per request from @julenka, I refactored the class hierarchy.  ColliderNearInteractionTouchable has been deleted.  See this whiteboard drawing of the old vs new hierarchy.  (NIT = NearInteractionTouchable)\r\n\r\n![mrtk_nearinteraction_class_hierarchy (2)](https://user-images.githubusercontent.com/41760870/64274755-e3c41300-cef8-11e9-9295-4f773f41482c.jpg)\r\n\r\nThe red INIT was an interface I had created in an earlier iteration of this PR to let PressableButton talk with NearInteractionTouchable AND NearInteractionTouchableUnityUI.  Now it talks with them both via NearInteractionTouchableSurface.'"
5781,320866585,"b""Good callout.  I've now reverted all changes to this file."""
5781,320869958,"b""I use it in a prefab.  Specifically, I needed it for [PressableButtonHololens2UnityUI.prefab](https://github.com/AdamMitchell-ms/MixedRealityToolkit-Unity/blob/unityui-nearfield-improvements2/Assets/MixedRealityToolkit.SDK/Features/UX/Interactable/Prefabs/PressableButtonHololens2UnityUI.prefab).\r\n\r\n![image](https://user-images.githubusercontent.com/41760870/64275608-d3149c80-cefa-11e9-86c5-f67c3e107782.png)\r\n\r\nPressableButtonHololens2 needs a cube for the compressable visual.  But in Unity, a cube ignores a RectTransform's Width/Height.  So to get it to fit into the bounds specified by the size, I created this little script.\r\n\r\nTo see this for yourself, create a canvas in Unity.  Then place an image in it and change the Width/Height of the rect transform.  The image will be resized to fit inside that size.  Now create a cube and give it a rect transform.  Changing the width/height has no effect on the cube.  The cube's size is determined only by the Scale of the transform hierarchy.  So this script takes the rect transform's width/height and applies a scale which will cause a 1x1x1 sized object to fit within the bounds."""
5781,320870779,"b""Yes, it's available as of C# 7.  This actually reminds me...\r\n@julenka, does MRTK target .NET 4.7 and above?\r\n\r\nIf you target .NET 4.6 or below, then I should remove the use of this syntax."""
5781,320873892,"b'NearInteractionTouchableSurface has no LocalUp property.  It only has LocalCenter, LocalPressDirection, and Bounds.'"
5781,320876069,"b'For existing NearInteractionTouchables, this should still work.  No migration plan should be required.\r\n\r\nWhatever they have set as their local forward direction on their own prefabs (or prefab variants of MRTK buttons) will be negated into LocalPressDirection.  So the value produced by this line will be identical now as it was prior to my change.  The existing button prefabs in MRTK already have non-default localForward, and they function correctly.  Therefore the MRTK buttons are equivalent to the upgrade scenario, so I think this should satisfy testing.'"
5781,320877550,"b'@julenka , I thought your ideal was what I\'ve now done (other than the fact that ""NearInteractionTouchable"" should ideally be called something like ""NearInteractionTouchableCollider"" or something like that.  For reference, here\'s the whiteboard drawing we came up with of what I had done in an earlier iteration of this PR vs what is now done.\r\n\r\n![mrtk_nearinteraction_class_hierarchy (2)](https://user-images.githubusercontent.com/41760870/64276615-43bcb880-cefd-11e9-8fca-b438fc91ed26.jpg)'"
5781,320878565,"b""I know.  It's kind of like magic.  I learned about this relatively recently when working on [UnityGLTF](https://github.com/KhronosGroup/UnityGLTF).  Unity knows how to parse this in its test window and it shows up like this.\r\n\r\n![image](https://user-images.githubusercontent.com/41760870/64276738-7d8dbf00-cefd-11e9-97fb-8a8915bc845f.png)"""
5781,320887464,"b""Ok, I've clarified that a bit and put it in a separate section."""
5781,320890876,"b'Regarding PressableButtonsTestCanvas.prefab, it is an example prefab.  I named it that because it lives right next to the existing ""TestCanvas.prefab"" which is all of the pre-existing UnityUI stuff in the HandInteractionExamples scene.  I was trying to be consistent with the existing naming scheme.\r\n\r\n[Hand tracking prefabs](https://github.com/AdamMitchell-ms/MixedRealityToolkit-Unity/tree/unityui-nearfield-improvements2/Assets/MixedRealityToolkit.Examples/Demos/HandTracking/Prefabs)'"
5882,321024131,"b"">3.x [](start = 37, length = 3)\r\n\r\nDid you mean for this to be uv3?  And X?  Not sure if this is a copy/paste error or intentional because Z is a special case for UGUI.\r\n\r\nIf it's intentional, add a comment explaining why."""
5882,321025867,"b""I see.  Here's where you're setting it to the -1 you mentioned in the shader.  Maybe add a comment here saying that that's why you're setting it to -1 here."""
5882,321026753,"b'>localScale [](start = 77, length = 10)\r\n\r\nWill this work for nested rectTransforms with non-1 localScale?\r\n\r\nEx:\r\n\r\n    Canvas\r\n      > Parent (scale not 1.0)\r\n          > ImageWithScaleMeshEffect\r\n\r\nYou might need to iterate through the hierarchy accumulating localScales.  Or alternately, use rectTransform.scale / canvas.scale maybe?'"
5882,321028562,"b'just for fun, you could consider implementing this using LINQ.\r\n\r\nusing System.Linq;\r\n\r\ntargets.SelectMany(target => (target as Canvas).GetComponentsInChildren<Graphic>())\r\n.Where(graphic =>StandardShaderUtility.IsUsingMrtkStandardShader(graphic.material) && graphic.GetComponent<ScaleMeshEffect>() == null);'"
5882,321401293,"b'PS.  If you do that, then this function could return IEnumerable<Graphic> instead of List<Graphic>\r\n\r\n---\r\nIn reply to: [321028562](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5882#discussion_r321028562) [](ancestors = 321028562)'"
5949,325874488,"b'Ok, moved it next to the other extension classes and updated the namespace.'"
5949,325874830,"b'@wiwei , addressed your comment.\r\nCan you `/azp run` for me?'"
5995,325901305,"b""I don't know this class well enough to describe it in a sentence.  I just hit an issue when getting latest mrtk_development and made a change to get the old behavior back.  If you tell me what to write here, I'll be happy to add it while I'm here."""
5995,325917757,b'done'
5995,325918547,"b'ok, removed it'"
6048,327344882,"b'New in this iteration, I get the zero point after scaling and use it when computing distances.'"
6048,327345158,"b'New in this iteration, I get the zero point in ScaleWorldDistances in addition to ScaleLocalDistances.'"
6049,327362446,"b"">colour [](start = 18, length = 6)\r\n\r\nRename or remove this variable.  It's odd for it to have the British spelling right next to a param with the American spelling.\r\n\r\nI'd probably just remove it and use Color.white below where this is used.  Or you could rename it to defaultColor."""
6049,327362618,"b'>, [](start = 46, length = 1)\r\n\r\nnit: space after the comma'"
6049,327362793,"b'>colour [](start = 53, length = 6)\r\n\r\nBritish spelling again here.  And actually I see that the file is already inconsistent.  Maybe while you\'re here, change all of the vars/params named ""colour"" to ""color"" for consistency.'"
6049,327363453,"b'>ButtonHololens1UnityUI [](start = 4, length = 22)\r\n\r\nDon\'t call this ""Hololens1"".  I already think that the existing ""Hololens2"" naming is wildly misleading.  It leads people to believe that the HL2 ones only work on HL2.  This would perpetuate that.\r\n\r\nMaybe ""InteractableButtonUnityUI""?  I don\'t love that either TBH.  Not sure what best to call it.'"
6049,327364961,"b"">Image [](start = 12, length = 5)\r\n\r\nInstead of Image, you should use Graphic (Image's base class)."""
6049,327365151,"b'>Image [](start = 61, length = 5)\r\n\r\nUse Graphic instead of Image.'"
6049,327365405,"b'Performance question here: do we really need to do this for every child image/graphic?  Can we instead do something smart to dynamically create one when we need to set a property on it, then revert back when/if the properties go back to the default?'"
6049,327867131,"b'>Vector [](start = 24, length = 6)\r\n\r\nAssuming you meant to say GetColor here?'"
6066,328264988,"b""Good point.  I'll add a comment & tooltip here."""
6066,328265301,"b""I thought about that, but decided against it.  Doing that is what caused the in-editor clickable region to be so large in the first place, so I don't think it's a good default behavior."""
6049,328383701,b'doccomments for the class a public function'
6049,328383830,"b'>Instiator [](start = 27, length = 9)\r\n\r\nspelling/typo: Instantiator'"
6049,328387357,"b"">private Material material; [](start = 8, length = 26)\r\n\r\nI don't think you should store this material.  You can just access it from the graphic every time.  The current code checks for graphic being non null then assumes that material is also non-null, which is harder to read."""
6049,328388075,"b"">TryCreateMaterialCopy [](start = 27, length = 21)\r\n\r\nInstead of a void function, you could have this return the material and then just make it an extension method of Graphic.\r\n\r\npublic static Material GetNonSharedMaterial(this Graphic @this) {}\r\n   or GetUniqueMaterial() ?  I'm up for better name suggestions.\r\n\r\nThen usage would be like this:\r\n\r\nGraphic myGraphic = whatever();\r\nmyGraphic.GetNonSharedMaterial().SetColor(propId, newColor);\r\n"""
6084,328388740,b'Is this comment still accurate with your changes?'
6084,328389067,"b"">WaitForInputSystemUpdate [](start = 51, length = 24)\r\n\r\nWhere is this function?  I don't see it on PlayModeTestUtilities in my branch."""
6049,328716588,"b"">ref [](start = 49, length = 3)\r\n\r\nWhy ref?  I don't think it's needed."""
6043,328871014,"b'Yeah, the documentation makes it sound really scary to use DestroyImmediate.  But if you have something where you need to be deterministic about when it occurs, then you need to use DestroyImmediate.'"
6066,329768652,b'Added a tooltip.  I think it explains the correct usage.'
6160,330307952,"b""I haven't attempted to add one in code.  I don't think it would be very straightforward, but I think it would be possible.\r\n\r\nRegarding the EventRouter (PhysicalPressEventRouter or SubmitEventRouter), I don't think we should warn for it.  It's not strictly required and users of custom button classes won't want to use one."""
6160,330750225,"b""Ok, added the documentation button.  I didn't end up putting the General label because there's only one option before the next label and it looked odd.  But before I decided on that, I ended up adding pro theme color support, so I decided to go ahead and get that in."""
6858,358715978,b'Done'
6858,358716299,b'I ve changed it to private.'
6858,358716863,"b""Not sure what's the recommended change is?"""
6858,359244010,"b'ok, I made this change as well :)'"
6963,362760029,"b""Not sure about this one. I didn't change the end sliderEndDistance in the editor.\r\nI guess it happened through the script as sliderEndDistance  is being set in PinchSlider.cs as well : \r\nsliderEndDistance = Vector3.Dot(transform.InverseTransformPoint(value), GetSliderAxis());"""
2599,210835027,"b""It's not redundant, because in general the target's local scale is not the same as the local scale of the bounding box.\r\n\r\nPlease look where variable targetBoundsLocalScale is used:\r\nIt is calculated (each Update()) in RefreshTargetBounds(), as the target's local size.\r\nAfterwards it is needed in UpdateScaleTransform(), where it has to be assigned to scaleTransform.localScale.\r\nSince scaleTransform is a child of BoundingBox (see BoundingBox.CreateTransforms(), last line),\r\ntargetBoundsLocalScale has to be transformed to the local scale of the BoundingBox.\r\n\r\nIn my project, I want to apply the BoundingBox/BoundingBoxRig dynamically to GameObjects that are within a complex hierarchy of objects where parents and childs have different scales.\r\nThe original code in BoundingBox.cs does not work correctly, it calculates the bounding box about 5 or 10 times too large. (Depending on the scale differences between parents/childs in my GameObject hierarchy.)\r\nBut with my changes in BoundingBox.cs, the code works perfectly.\r\n"""
2639,213050549,b'I need to resolve licencing'
2814,219362196,"b'Input and spatial understanding I would promote as coming with a promise of stability and support, which includes from Microsoft and community contributions.\r\n\r\nSimilarly, Microsoft will contribute some packages which may be more experimental in nature and would not come with long term support. \r\n\r\nSince our grouping of packages together is the contract that MRTK has with an app developer, I think we would name them differently than which organization authored them.\r\n\r\nSome ideas:\r\nProduction, Supported, Core, Retail, Release\r\nvs\r\nExperimental, Beta, Explorational, Prototype, Community (may still work here)\r\n\r\n\r\n'"
2814,219982082,"b'How about ""Release"" and ""Preview""?\r\n\r\nHere\'s why: ""Core"" can also refer to the implementations of the base level components for MRTK. Input and Spatial Understanding are part of ""MRTK Core"".\r\n\r\n""Community"" I feel is overloaded to be both authorship and support level.\r\n\r\n""Release"" are components/platforms that we will have a strong contract with an app developer stating we\'ll fix bugs, respond to issues, service requests.\r\n\r\n""Preview"" are components/platforms that we offer to developers but are ""at your own risk"" to take a dependency on. This category has flexibility to attract new ideas and find signal. With enough feedback we can promote ""Preview"" work into the next ""Release"". But components can also remain ""Preview"" indefinitely.'"
3676,269506147,b'Can we list HoloLens and HoloLens 2 as separate lines?'
7978,436974117,b'Fantastic suggestion... working on it now'
7978,437058406,"b'Underscore(s) removed. I tried the suggestion of combining them into one method, however, all three need to be exposed explicitly for Unity editor button click events. Example: use one joystick control and add 3 buttons that set the mode from Move / Scale / Rotate without creating a new script\r\n![Untitled](https://user-images.githubusercontent.com/43013191/84090395-83419500-a9a6-11ea-9da4-b72d91d4cb9b.png)\r\n.'"
7978,439535002,"b'You are correct. Per the summary, the UI for changing modes with buttons requires explicit functions. For example, on Acme, we have one joystick and 3 buttons that change the mode.\r\n![alignment](https://user-images.githubusercontent.com/43013191/84526668-a31cd580-ac92-11ea-9cd9-5d40c9115343.png)\r\n'"
8115,447230543,b'Great idea! Fixed'
8095,447232104,b'added'
8095,447232338,"b'Good catch! It was a dupe, and now has been removed.'"
8095,447232456,b'added'
8095,447232553,b'removed'
8095,447232915,b'Those were placeholders because I wanted to get the functionality dialed in before writing the tooltip. Fixed'
8119,448653364,"b'This was my quick and dirty 2D math, and I could use some engineering help to convert this to 3D math and / or use the axis of the pinch slider.'"
3318,246668216,"b'Ok, I just changed the typo to ""Profile"". I am sorry, my french has taken over. :)'"
3318,246669890,"b""But I didn't get the point of the other comment.\r\nThe configuration profile is now a part of the BaseExtensionService but not a part of the BaseService class.\r\nActually on the MRTK, the profile is the only parameter that is on the configuration but not used at all on the services.\r\nDo you have any concern about connecting this parameter. For me it make sens to have it on the BaseExtensionService as it's also a parameter that can define the service itself.\r\nYou didn't use it on your extension services but for me it's very useful to configure mine.\r\nCan you detail more your concern about it? we should find a solution to that.\r\nBest regards,"""
2815,219673998,b'Done'
6935,360603459,"b""The link works when editing in VSCode - my only guess is that it's too long.  I'll try shortening."""
6935,360605107,"b'TBH, while I agree with being formal, I disagree that ""you"" is informal.  I think it is important to avoid passive voice, too.  However I\'ll do as you\'ve asked.'"
6935,360607390,"b""It looks like the link was broken because it was too long - my shortened link passed validation.  But I'll remove it as you suggest, and replace with this note."""
2872,222358512,b'This API is do nothing for non UWP and Editor. Unity links against this dll for that purpose.'
2872,222359045,b'This dll will be copied from windows latest builds ( they are built in RS6 windows builds) to the MRTK on very slow cadence ( any bugs).'
2872,222372078,b'It is templated used for events.'
2872,222374528,b'This class is do-nothing for non UWP. Let me know if we have a better way to achieve that..'
2872,222413958,b'This script is example visualization just for a particular prefab. Not intended to be used for any other objects.'
2872,222416155,b'This script is usually added to the object that needs to be attached to the QR code. Sometimes a parent object/some other object needs to be adjusted instead then it is modified in the editor.'
2872,222416628,b'when it is detected again it updates its estimates.'
2872,222446561,b'qrCode properties change when new detection happens'
5662,314607902,"b""I can't follow, the following code also just takes the assumption that `handler` is still referencing the correct handler, and does not gather the correct handler reference every time.\r\nThis is for (a) it is the first call and the SolverHandler component has just been added to the GameObject, (b) someone/something has removed the SolverHandler component, causing a new component to be added.\r\n\r\nIf the handler has been changed programatically, the `handler` reference wouldn't be `null` therefore this is skipped."""
5662,314610750,"b'> But this is designed to be an example scene to learn from.\r\n\r\nThough Unity Docs clearly state that they recommend to use `Destroy` instead of `DestroyImmediate`, as `DestroyImmediate` is intended for Editor Scripts only. So this would show learners a wrong use of Unity API.\r\n\r\nThe learning argument could also be used, to show them how they can simply switch between different Solvers, without doing complicated component destroy and rebuild procedures. But instead going the natural Unity was of simply disabling components that are temporarily not used.'"
5662,314612838,"b'That was my thought as well, but the fact that `SolverHandler.Solvers` is not readonly, but others can programatically change the list, and the Docs state that the update order shall be the order of components in the Inspector confused me. I will change this as it is indeed less error prone.'"
5662,314613784,"b'`IReadOnlyCollection` unfortunately does not have the `Contains` method, that was the reason for the change. Further the property still exposes a `set` method, that allows changing the list, so why offering the list as ReadOnly in the first place?'"
5662,317034009,"b""`solvers` will always be a list of only the solver that have registered, or have been set programmatically by something that wants to override the managed solvers.\r\n\r\n`GetComponents` returns the list of all solvers in Insepctor order attached to this Gameobject. Interset() takes two lists and returns a list of elements that are in both lists, but keeping the order of the first list. See [Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.intersect?view=netframework-4.8#System_Linq_Enumerable_Intersect__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__), specifically the example and remarks section:\r\n\r\n> When the object returned by this method is enumerated, `Intersect` yields distinct elements occurring in both sequences in the order in which they appear in first.\r\n\r\nSo `inspectorOrderedSolvers` is the list of solvers attached to this gameobject in Inspector order, but only those in the `solvers` list.  Finally using `Union` we add the remaining solvers, that are not attached to this Gameobject, but are in the `solvers` list.\r\n\r\nSo the order will always be: Insepctor order of Solvers attached to this Gameobject that have been registered, then remaining Solvers not attached to this Gameobject, in the order of their appearance in `solvers` (By default order of `Register` calls).\r\n\r\nIf you dynamically add a Solver, `AddComponent` will add them at the end of the list of components. Though you can mix up the order and manually place it at another position. Currently this change will only take effect, when you do it right away when adding the solver, before LateUpdate runs during that frame. So maybe there should be a public API to trigger the Solver List Update. Also the `Solvers` setter maybe should trigger Solver List Update, so the Insepctor Order is guaranteed.\r\n\r\nI think the underlying problem is, what shall the ordering of solver updates be? Inspector Order, Order of register call or programatically set order?  And further how to resolve conflicts due to the different ways to add solvers and manipulate the solver list. Like, default is Inspector Order, but what happens when I override the solver list? Does the list order take precedence, is that reflected back to the Inspector, as in the component order is changed? Or does the inspector takes precedence and the list order is changed internally to reflect the current Inspector, like it is now? \r\n\r\nRegarding Solvers that are not attached to the SolverHandler Gameobject, that is an edge case. That edge case didn't work with the previous implementation. Now it does, but the Inspector Ordering is hard to apply, like which Inspector takes precedence. I'm open for discussion as to how the ordering shall apply there. To create such edge case, registering the solver has to be done manually in code by the developer, though."""
8017,436490155,"b""That was my thinking as well. Someone that uses `Rest` to implement another REST API, may stumble upon `UseSSL`. Changing it wouldn't actually have any effect on their REST calls, though as side effect changes the behavior of the `DevicePortal`. """
8017,436491076,"b""I just noticed, I haven't updated the in-code XML documentation with the new parameter."""
8017,436508805,b'Done & updated XML documentation'
8017,436509092,b'Done by adding optional `disposeCertificateHandlerOnDispose` parameter. '
8017,436509204,b'Done'
8017,436509359,b'Done'
8017,436509443,b'Done'
8017,436509956,"b'Done, added section to `Documentation/ReleaseNotes.md`'"
4404,287060422,b'Is this resolved? Or do I need to change this to have everything in one UPM package and then go into the individual folders? I tried to match the Nuget Package model that seems to be in the repo right now'
4404,287060555,"b""I'll change this and update the PR when I get a chance"""
4404,288647482,b'Package.json files updated'
4404,288647756,b'Looks like a bunch more stuff was added to mixedrealitytoolkitfiles to support Core and other folders. I merged my change with this and am testing it right now'
4616,289858344,b'I have tested these changes with 2018.4 as well so we can safely update these 2018.4 if necessary'
6943,364534286,b'going through and changing to Lower case. Is this the case for the asset files? for ex:  MixedRealityToolkit.SDK/Experimental/HandCoach'
6943,364534523,b'updated'
6943,364534706,b'fixed'
6943,364534754,b'fixed'
6943,364535268,b'fixed'
6943,364535292,b'fixed'
6943,364535460,"b'The material applied to the coffee cup was wrong so I reapplied the correct texture. \r\nThe material that was applied looked like a comment box, so I replaced with the coffee foam'"
6943,364535843,b'updated'
3443,256993183,"b'Indeed: I already considered a suggestion from Julia to ""Constrain to XY plane"" and quickly gave up because it would have required more restructuring than I was willing to invest at this moment. I doubt that there are any meaningful constraints that could be efficiently addressed simply by more alternative case handlers.'"
3496,259251010,"b'The question inspires me to an alternative logic: instead of checking for HolographicRemoting we could simply check of Hand - assuming that the only supported ""pressed"" gesture of a hand is the air-tap, we can then safely assume that it should be anyPressed==selectPressed and correct accordingly. I\'ll change the patch, keeping a similar set of asserts for all the assumptions.'"
3496,259270018,"b'Just pushed a generalization that should cover Simulation, only assuming that Hand can never emulate any buttons except select.'"
3743,271209892,"b'The InputSim service was moved to the Input System profile, but the profile for Input Simulation Service is still not type-specific, so the warning is still valid IMO. You can select any of the 20-30 existing default profiles to link here. The service has an internal check, so it will simply not activate, but the asset selection is not filtering profiles by type.\r\nI will have to update the images and paths for accessing the profile though.'"
3760,271816957,"b'Luis is correct, the event functions exist but will never get called atm, because there is no device device that actually raises them. Feel free to reword it.'"
3881,273395631,"b'The purpose of this is to get the necessary array size, so we can use `(int)TrackedHandJoint` as an index. The `None` item is pretty much unused, so not a problem (apart from minor size overhead, not worth optimizing at this point).'"
3881,273398552,"b""Legacy code, but good point anyway. Right now the timestamp is only used to detect if data has been changed in the same frame. I believe it's supposed to prevent multiple hand data updates in the same frame.\r\n\r\nI would leave it as is for now, since it works alright. Will have to revisit timestamps anyway when looking into support for simulated update frequency, i.e. simulate 45fps hand updates of the Hololens instead of 60fps Unity updates. I'll add a comment to change this in future."""
3881,273454002,"b'I see, will clarify the comment.'"
3881,273500463,b'GetInputSimulationProfile() throws an error if the profile is null (or of the wrong type). So null check is redundant i would say.'
3922,273984368,"b'Note: It would be nicer to have this utility class in the `Microsoft.MixedReality.Toolkit.Core.Utilities.Editor` assembly, which has an explicit Editor dependency. However, the `Microsoft.MixedReality.Toolkit` assembly in turn has a dependency on `Microsoft.MixedReality.Toolkit.Core.Utilities.Editor`, which would create a cycle. That should not be the case IMO, if possible we should try to remove editor code from the core assembly.'"
3916,273993108,b'Done.'
3922,274034043,"b'Moved code, will fix it.'"
3922,274038836,"b'Correct, this disables the ""Yes"" button unless a profile has been selected (the `GUI.enabled` state applies to all statements after the change). Could be removed if that seems too restrictive, but since the purpose is to end up with a valid MRTK object i think it\'s helpful. I\'ve tried selecting the default profile, but we don\'t actually have any definition for that.'"
3922,274380515,b'@davidkline-ms Do you think this use of `MixedRealityToolkit.Instance` needs to be changed to conform to your own branch?'
3922,274894207,b'What/where is the Mixed Reality Settings class?'
3922,274896433,"b'Fixed, thanks for spotting this.'"
3922,274903944,"b""I've logged this here for future discussion: https://github.com/Microsoft/MixedRealityToolkit-Unity/issues/3952"""
3982,276139225,b'You can use transform.forward here as a shortcut.'
4181,281532614,"b""I think running on the same scene for these particular tests is fine.\r\n\r\nOnce we actually make runtime modifications to scenes it becomes more difficult, because to reliably run the tests we'd want to start from a clean slate and (re)load a new scene."""
4211,281623574,b'Do we have any better way of addressing file paths?'
4211,281645210,"b""I'm going to remove this function. It's quite specific to how hand simulation animation works and doesn't make much sense as a generic function (it's just computing lerp factor based on previous value). Saves me the hassle of trying to explain what it does ;)"""
4211,281971260,"b""Yes, timestamps should be simple. That would also avoid having to delete the file every time, because this method doesn't overwrite them ...\r\n\r\nInitially i tried to make it really nice and open a file selection dialog with the UWP methods, but that didn;t work at all. I just needed a quick and dirty solution to record poses for the hand sim, and put the recorder in here for future improvement. It's not polished enough to be a user-facing tool at this point, on top of the fact that the list of supported poses is hardcoded atm."""
4211,281972738,"b""Oh, this isn't the input animation recording feature yet. Here's the input animation branch:\r\nhttps://github.com/lukastoenneMS/MixedRealityToolkit-Unity/tree/hand_sim_playables\r\n\r\nI'll try to wrap the input animation branch up asap."""
4211,281974121,"b'Joint poses in ArticulatedHandPose are stored\r\n\r\n- in camera space\r\n- for the right hand\r\n\r\nFor the left hand they simply get mirrored. I added comments on the ArticulatedHandPose class yesterday to clarify, let me know if i should add something there.'"
4211,281975590,"b""Previously the poses were all hardcoded in SimulatedHandPose.cs as static fields with initializers. Right now we still have a fixed set of supported gestures in ArticulatedHandPose.GestureId, but we could perhaps make that configurable at some point (not sure how that might work, i'd rather not do that now)."""
4211,281976961,"b'A point of interest: JSON would be a bad choice for storing animation due to file size. Even with the somewhat less verbose Unity asset format the file size for hand animation is on the order of megabytes for just a few seconds of animation. This would add up quickly if we use it for test resources, so a binary format is highly desirable.'"
4211,282029199,"b""Just because i was implementing it for the Hololens in the first place. And also because i'm not sure how to pick a good output path for these in the non-uwp case. See also the discussion about how to specify resource paths for loading the json files for input sim."""
4211,282029277,b'Added timestamps.'
4211,282029424,b'Done.'
4211,282029747,b'Done.'
4211,282029822,b'Done.'
4211,282034984,"b'This seems to be an artifact from docfx generation: For some reason the doc generation creates cache folder ""obj"", and the Audio directory is simply the first one it hits (because alphabet). Unity then creates a meta file for that folder. I still had this this cache folder lying around and it is ignored by git, while the meta file is not. Will remove the file. Logged an issue: #4237'"
4211,282055250,b'Done.'
4101,282520556,"b'GetService is surprisingly expensive, it does a whole bunch of allocations and linear string search. Typical usage is to have an internal ref and lazy-initialize it once, e.g.: [https://github.com/microsoft/MixedRealityToolkit-Unity/blob/acee452b82ffbfe6f48c0c4b1086058496d94161/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/SolverHandler.cs#L145](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/acee452b82ffbfe6f48c0c4b1086058496d94161/Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/SolverHandler.cs#L145)'"
4211,282556045,"b'_Technically_ yes since it was/is a public class, but highly unlikely that any external developer actually used it.'"
4685,290385987,"b""Yes, the way we determine if simulated hands are pinching/grabbing is not great atm (see also [SimulatedHandState.GestureBlending](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/ae0b1467b564c5b647c5190c84fe725b8ffd6f6a/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs#L64). I'm not sure of the best way to tag hand poses for these actions, perhaps add a code comment so we improve it in both places."""
4587,290648065,"b'The smoothTime should be configurable, not least because we want to be able to disable it for testing purposes. The value should go into the input simulation profile, with a matching entry in the inspector, like so:\r\n\r\n```diff\r\ndiff --git a/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs b/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs\r\nindex 60001148d..17b62a8f3 100644\r\n--- a/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs\r\n+++ b/Assets/MixedRealityToolkit.Services/InputSimulation/Editor/MixedRealityInputSimulationProfileInspector.cs\r\n@@ -47,6 +47,7 @@ public class MixedRealityInputSimulationProfileInspector : BaseMixedRealityToolk\r\n         private SerializedProperty defaultHandDistance;\r\n         private SerializedProperty handDepthMultiplier;\r\n         private SerializedProperty handJitterAmount;\r\n+        private SerializedProperty handSmoothTime;\r\n\r\n         private SerializedProperty yawHandCWKey;\r\n         private SerializedProperty yawHandCCWKey;\r\n@@ -104,6 +105,7 @@ protected override void OnEnable()\r\n             defaultHandDistance = serializedObject.FindProperty(""defaultHandDistance"");\r\n             handDepthMultiplier = serializedObject.FindProperty(""handDepthMultiplier"");\r\n             handJitterAmount = serializedObject.FindProperty(""handJitterAmount"");\r\n+            handSmoothTime = serializedObject.FindProperty(""handSmoothTime"");\r\n\r\n             yawHandCWKey = serializedObject.FindProperty(""yawHandCWKey"");\r\n             yawHandCCWKey = serializedObject.FindProperty(""yawHandCCWKey"");\r\n@@ -190,6 +192,7 @@ public override void OnInspectorGUI()\r\n                 EditorGUILayout.PropertyField(defaultHandDistance);\r\n                 EditorGUILayout.PropertyField(handDepthMultiplier);\r\n                 EditorGUILayout.PropertyField(handJitterAmount);\r\n+                EditorGUILayout.PropertyField(handSmoothTime);\r\n                 EditorGUILayout.Space();\r\n\r\n                 EditorGUILayout.PropertyField(yawHandCWKey);\r\ndiff --git a/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs b/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs\r\nindex 6a4d7564b..b441fb7f1 100644\r\n--- a/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs\r\n+++ b/Assets/MixedRealityToolkit.Services/InputSimulation/MixedRealityInputSimulationProfile.cs\r\n@@ -151,6 +151,10 @@ public class MixedRealityInputSimulationProfile : BaseMixedRealityProfile\r\n         [Tooltip(""Apply random offset to the hand position"")]\r\n         private float handJitterAmount = 0.0f;\r\n         public float HandJitterAmount => handJitterAmount;\r\n+        [SerializeField]\r\n+        [Tooltip(""Time it takes hands to reach the target mouse position"")]\r\n+        private float handSmoothTime = 0.15f;\r\n+        public float HandSmoothTime => handSmoothTime;\r\n\r\n         [Header(""Hand Rotation Settings"")]\r\n         [SerializeField]\r\n```'"
4587,290654629,"b'I would like to restrict the smoothing to just the mouse movement, which seems to be it\'s intended purpose. The gesture animation of the actual joints is already animated smoothly, so the damping just makes it feel too ""squishy"" IMO and isn\'t necessary to avoid fast motion.\r\n\r\nDoing this in the `SimulatedHandDataProvider` instead has the added advantage that smoothing is not applied when hands are simply animated. This is important for the upcoming input recording feature, which will be used for testing and should reproduce the recorded animation as accurately as possible, without additional smoothing.\r\n\r\n```diff\r\ndiff --git a/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs b/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs\r\nindex d348e3dec..53b355145 100644\r\n--- a/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs\r\n+++ b/Assets/MixedRealityToolkit.Services/InputSimulation/SimulatedHandDataProvider.cs\r\n@@ -31,6 +31,7 @@ internal class SimulatedHandState\r\n         public bool IsPinching { get; private set; }\r\n\r\n         public Vector3 ScreenPosition;\r\n+        private Vector3 velocity = Vector3.zero;\r\n         // Rotation of the hand\r\n         public Vector3 HandRotateEulerAngles = Vector3.zero;\r\n         // Random offset to simulate tracking inaccuracy\r\n@@ -90,17 +91,21 @@ public void SetViewportPosition(Vector3 point)\r\n             ScreenPosition = CameraCache.Main.ViewportToScreenPoint(point);\r\n         }\r\n\r\n-        public void SimulateInput(Vector3 mouseDelta, float noiseAmount, Vector3 rotationDeltaEulerAngles)\r\n+        public void SimulateInput(Vector3 mouseDelta, float noiseAmount, Vector3 rotationDeltaEulerAngles, float smoothTime)\r\n         {\r\n+            Vector3 worldPoint = CameraCache.Main.ScreenToWorldPoint(ScreenPosition);\r\n+            Vector3 newScreenPosition = ScreenPosition;\r\n             // Apply mouse delta x/y in screen space, but depth offset in world space\r\n-            ScreenPosition.x += mouseDelta.x;\r\n-            ScreenPosition.y += mouseDelta.y;\r\n-            Vector3 newWorldPoint = CameraCache.Main.ScreenToWorldPoint(ScreenPosition);\r\n+            newScreenPosition.x += mouseDelta.x;\r\n+            newScreenPosition.y += mouseDelta.y;\r\n+            Vector3 newWorldPoint = CameraCache.Main.ScreenToWorldPoint(newScreenPosition);\r\n             newWorldPoint += CameraCache.Main.transform.forward * mouseDelta.z;\r\n-            ScreenPosition = CameraCache.Main.WorldToScreenPoint(newWorldPoint);\r\n\r\n-            HandRotateEulerAngles += rotationDeltaEulerAngles;\r\n+            // Apply damping to the hand movement\r\n+            newWorldPoint = Vector3.SmoothDamp(worldPoint, newWorldPoint, ref velocity, smoothTime);\r\n\r\n+            ScreenPosition = CameraCache.Main.WorldToScreenPoint(newWorldPoint);\r\n+            HandRotateEulerAngles += rotationDeltaEulerAngles;\r\n             JitterOffset = UnityEngine.Random.insideUnitSphere * noiseAmount;\r\n         }\r\n\r\n@@ -295,7 +300,7 @@ private void SimulateUserInput()\r\n\r\n             if (isSimulating)\r\n             {\r\n-                state.SimulateInput(mouseDelta, profile.HandJitterAmount, rotationDeltaEulerAngles);\r\n+                state.SimulateInput(mouseDelta, profile.HandJitterAmount, rotationDeltaEulerAngles, profile.HandSmoothTime);\r\n\r\n                 if (isAlwaysVisible)\r\n                 {\r\n\r\n```'"
4587,290656686,b'Out of curiosity: did you use the HandGestureRecorder tool to record this gesture?'
4587,290657187,"b'Better description needed, e.g. ""Open hand with palm facing up and fingers spread out"".'"
4844,292864711,"b'Correct, i added register/unregister functions for the common code here.'"
6738,351728463,b'```suggestion\r\n3. Select the desired spatial mesh object  \r\n```'
6738,351728641,b'```suggestion\r\n1. Update the surface reconstruction\r\n```'
6738,351728717,b'```suggestion\r\n### Windows device portal\r\n```'
6738,351728833,"b'```suggestion\r\nThe [Windows device portal](https://docs.microsoft.com/en-us/windows/mixed-reality/using-the-windows-device-portal) can be used to download the spatial mesh, as a .obj file, from a Microsoft HoloLens device.\r\n```'"
6738,351728931,b'```suggestion\r\n1. Navigate to the 3D view page\r\n```'
6738,351728988,b'```suggestion\r\n1. Connect to your HoloLens using the Windows device portal\r\n```'
6738,351729133,b'```suggestion\r\nSpatial mesh objects in the observer.\r\n```'
6738,351729301,b'```suggestion\r\n### Update interval\r\n```'
6738,351729491,b'```suggestion\r\n### Observer shape and extents\r\n```'
6738,351729578,b'```suggestion\r\nThe spatial object mesh observer sends the entire 3D mesh to the application. Observer shape and extents are not considered.\r\n```'
6738,351729673,b'```suggestion\r\n## Level of detail and triangles / cubic meter\r\n```'
6738,352421474,b'@thalbern Should headers / titles for the entire page stay in caps?'
6738,352421729,b'I think Windows Device Portal is considered branding maybe and is capitalized as-is in our platform docs:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/69931962-1b9e1080-147e-11ea-85c0-62e27a9e3b27.png)\r\n'
6738,352699570,"b""no, they should be lower case - it's ms docs styleguide - don't do random capitalization  - only names should be uppercase"""
6738,352707042,"b""i wasn't sure about that one - if official ms docs are putting it in uppercase we have to as well :) thanks for checking kurtis!"""
4721,292573899,b'```suggestion\r\nmeshes known to that observer.\r\n```'
4721,292807453,"b""Thanks, for future reference I don't think we need to put ourselves as waiting for a single grammar fix (of which the solution was provided here)."""
7529,391945622,b'xref instead of file path?'
7529,392354331,b'there isnt an api doc for the DemoSpatialMeshHandler class'
5701,315194591,"b""do we actually need that image or are we ok with just describing the path of that checkbox / property?\r\n\r\nwe have a docs guideline for images to only include them if absolutely necessary. Someone would have to update them whenever that profile changes\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#images--screenshots\r\n(I know we're already showing profile screenshots in a lot of places)"""
5701,315295465,"b""That's fair - I think in this case the profile is simple enough that text is sufficient. I've gotten rid of the image."""
5701,315303080,b'Should we link to teleport pointers in the pointers.md? '
5701,315303274,b'update seem unnecessary'
5701,315388874,"b""I think there's some value to this, I haven't quite figured out the content yet, so I'll probably proceed with this change first and we can add the other parts as it comes to me."""
5701,315388935,"b'Yep, removed'"
6063,327860135,b'```suggestion\r\nThis tool is very useful when developing support for a new hardware controller. It can also help to confirm a suspected control mapping issue in the support class for an existing controller.\r\n```'
5370,306936773,"b"">/Assets/MixedRealityToolkit.Tools/DependencyWindow\r\n\r\nLooks like this was added before your PR, but I don't think a relative link like this resolves to anything in our generated docs."""
5370,306940330,"b'```suggestion\r\nOften in Unity it is difficult to gleam which assets are being used, and what is referencing them. The ""Find References in Scene"" option works great when you are only concerned with the current scene, but what about your entire Unity project? This is where the [Dependency Window]((https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Tools/DependencyWindow) can be useful.\r\n```'"
6824,355700696,"b'Do we need to instead say ""ensure version 2.10 of holographic remoting is installed, per #6811 ?'"
6824,355729825,b'I think it would be useful to add that you need to switch to UWP to use remoting since Standalone is the default:\r\n```suggestion\r\n1. Ensure the platform has been switched to **Univeral Windows Platform (UWP)** in the Build Settings\r\n1. Open **Window > Package Manager**\r\n```'
6824,355732298,"b'Actually, i was able to successfully use the latest build this morning\r\n'"
6824,355732563,b'i made your recommended change in a different spot (in the connecting instructions)'
6824,355741187,b'Nit: Be consistent with using 1.2.3.4 or 1.1.1.1 (1.1.1.1 is used everywhere else here)'
6824,355888787,b'oops. this was a copy paste error from a different version of this doc.'
6824,356181419,b'fixed'
6824,356194490,"b""Are we required to write this due to something above?\r\n\r\nThis doesn't really seem to help developers do anything."""
6824,356195415,"b'```suggestion\r\n1. In Unity, open **Window > Package Manager**\r\n```'"
6824,356195578,"b'In order to start a new remoting session, do I need to do this ""close->reopen""?\r\n\r\nOr is this primarily for when I\'m exiting Unity?'"
6824,356201436,b'These links are FYI and are there to link customers to the core documentation if they experience issues or have further questions on remoting.'
6824,356202043,b'You do not need to go through them each time. I will make a reminder note that this is for when you close the project / Unity.'
6824,356204354,b'updated'
7142,370721912,b'```suggestion\r\n    ![Enter IP Address](../Images/Tools/Remoting/EnterIPAddress.png)\r\n```'
7234,375413084,"b""As a person hitting who is potentially these issues, a few comments:\r\n\r\n1. It might be helpful to have each of the common pitfalls next to their descriptions:\r\n\r\n\r\n#### MSBuildForUnity package import via writing into the package.manifest\r\n\r\nFor the first, the best way to check is to open Window -> Package Manager and make sure MSBuild for Unity shows up in the packages list. If it's there, you can assume this step succeeded. If it's not there, try running Mixed Reality Toolkit -> Utilities -> Configure Unity repeat the stops above for running the MRTK Configurator.\r\n\r\n#### DotNetWinRT NuGet package resolution\r\n\r\n\r\n- `DOTNETWINRT_PRESENT` #define written into player settings\r\n\r\n\r\n \r\n\r\n #### MSBuildForUnity package import via writing into the package.manifest\r\nFor the second, the best way to check is to search your Assets for DotNetWinRT.dll. If this doesn't exist, you'll want to navigate to MixedRealityToolkit.Providers / WindowsMixedReality / Shared / DotNetAdapter in your Project view and select DotNetAdapter.csproj. Assuming part 1 did succeed, you should see a custom inspector with Build, Rebuild, and Clean buttons. Try clicking Build or Rebuild, and then re-search for DotNetWinRT.dll. If that DLL now exists, this step succeeded.\r\n\r\n\r\n#### `DOTNETWINRT_PRESENT` #define written into player settings\r\nFor the third, you'll want to navigate to your Unity Player Settings. From there, under the UWP tab, check under Other Settings for the Scripting Define Symbols. You'll want to make sure DOTNETWINRT_PRESENT is properly written in that list. If that's there, this step succeeded.\r\n"""
7234,375418824,"b""That's much better, thanks! Updated"""
7234,375422084,"b""Ah, second thing! It might be helpful to have text (i.e. error messages, error logs) that can help a person understand what errors they're seeing - i.e. how do I know that I'm hitting a DotNetWinRt NuGet package resolution issue?"""
7234,375422230,"b""```suggestion\r\nFor the first point, the best way to check is to open Window -> Package Manager and make sure MSBuild for Unity shows up in the packages list. If it's there, you can assume this step succeeded. If it's not there, try running Mixed Reality Toolkit -> Utilities -> Configure Unity repeat the steps above for running the MRTK Configurator.\r\n```"""
7234,375422777,"b'For steps above, consider adding a link to the steps (because ""above"" can change as this document gets updated in the future)'"
7234,375422809,b'Sounds good! I can add some images too'
7234,375423041,"b""It's like when you number highway exits A, B, C, and then you want to add another exit between A B and you're out of letters."""
7234,375428276,"b'Nit: for question on stackoverflow and isue on github, I think that providing links would definitely help (i.e. otherwise the question is ""where do I ask/how?""\r\n\r\nI know that we have other links as well (you added them elsewhere in this PR), so it\'s also reasonable to just link to those if you don\'t want to repeat yourself.'"
7234,375428933,b'Wait actually you do this below.'
7234,375520384,b'Updated to use the same link here'
7269,377262658,"b'Should this go alongside the first list, as a fourth source of potential issues?'"
7269,377296353,"b'Yes, thanks for calling this out! I intended to put it in the list but misplaced it.'"
7269,377306241,b'```suggestion\r\nto force all apps to get a refreshed system path.\r\n```'
7756,418763010,"b""```suggestion\r\nUSB cable connection gives better rendering quality and stability. To use USB cable connection, disconnect from the HoloLens from Wi-Fi in HoloLens's Settings and launch Holographic Remoting Player app. It will display an IP address that starts with 169. Use this IP address in Unity's Holographic Emulation setting to connect. Once the IP address for USB cable has been identified, it is safe to connect the HoloLens to Wi-Fi again. \r\n```"""
7756,418763168,"b""Reasons being, as long as we're talking about disconnecting and connecting things from wifi, we should be clear about what device is getting connected/disconnected (in case someone reads quickly and thinks it refers to their laptop, etc)"""
7848,423873402,b'```suggestion\r\n1. Set the target platform in **File > Build Settings** to **Universal Windows Platform**\r\n```'
7848,423875455,"b""We might want to clarify that this step is only if you want to run on the legacy XR pipeline.\r\n\r\n```suggestion\r\n    - Ensure that the **Windows XR Plugin** is not installed if the project isn't using [XR SDK](../GettingStartedWithMRTKAndXRSDK.md), as the legacy **Windows Mixed Reality** package will not function alongside it\r\n```"""
8033,439090767,"b'```suggestion\r\nSome versions of Unity 2019 have encountered issues when using MSBuild for Unity. If the **Use MSBuild for Unity dependency resolution** option fails, please use the following steps to enable holographic remoting.\r\n```'"
8033,439090940,b'Might be worth running a vscode spell checker on the rest as well'
8033,439091762,"b'Should this just be ""on Unity 2019"" (i.e. we expect that people on the latest versions to be affected by this, and shoudl be upfront and maybe not give people hope that later versions would be resolved because usually I would expect later versions to have fixed issues rather than be experiencing them)'"
8033,439095611,b'it has failed on earlier versions and has been stable on current versions. not sure the best wording here.'
8387,477613225,"b""I think that we'll also want to actually add steps to the HoloLens 2 section (i.e. this is now a required step right?)"""
8387,477652333,b'Correct. Will do'
8387,478218221,b'thanks for pointing this line out.... it is out of date!\r\n'
8717,497661000,"b'The XR SDK package has a slightly different name: ""Windows XR Plugin""'"
8717,497662486,"b""We might want to make it clear that DotNetWinRT isn't required for HL2 features on XR SDK. I'm not sure this step is needed"""
8717,497663245,b'Do we want to move this next to the legacy header? or maybe decrement the level of the above couple headers to make it clear that they correspond to the legacy path?'
7006,364397247,"b'```suggestion\r\nWhen SDK components get obsolete and need upgrading, some projects might require an upgrade tool to allow user controlled migration.\r\n```'"
7006,364397844,"b'I may also think about rewording this more along the line of:\r\n\r\nAs the MRTK undergoes changes, some components may be deprecated and replacements will get introduced. Consumers may will need to migrate to those new replacements, and the Migration Window is a tool that helps to automatically migrate a subset of those changes.'"
7006,364397915,"b""Or something else I dunno English isn't my first language."""
7006,364399151,"b'Similar comment for the code part - if this is intended for the a user of the migration window, consider what the user will actually do with this - do we want them to build an IMigrationHandler interface?\r\n\r\nOr do we want to just tell them that this is how it works, and then only the things that have migration handlers will be migrated.'"
7006,365291946,b'i thought it is :O '
7006,365292101,b'```suggestion\r\n# Migration window\r\n```'
7006,365299665,"b""```suggestion\r\nThe migration window allows the user to select scene objects, entire scenes or the whole project for migration of specific obsolete components. \r\n```\r\ni removed the link to code - i don't it really gives value to the article and it will just be outdated / also it's pointing to dev branch and we're recommending using release versions, not dev branch\r\n\r\nnit: don't use random capitalization https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#capitalization"""
7006,365299998,"b'```suggestion\r\nTo open the window, select *Mixed Reality Toolkit->Utilities->Migration Window*. Once the migration window is open, the selection mode navigation tabs can be enabled by choosing the component specific implementation of the migration handler.  \r\n```'"
7006,365300085,b'```suggestion\r\n### Object mode\r\n```'
7006,365301119,b'```suggestion\r\nSelecting the objects tab enables the object field where the user can drag and drop any game object from the currently open scene or prefab from the project folder to be migrated.\r\n```'
7006,365304025,b'```suggestion\r\nPressing the remove *(-)* button displayed at the right side of the listed object removes the object from the selection list.\r\n```'
7006,365304251,"b'```suggestion\r\nOnce all the desired objects are in the list, pressing the *Migrate* button will apply the changes required by the chosen migration handler implementation to all components in the selection that match the implementation.\r\n```'"
7006,365304303,b'```suggestion\r\n### Scene mode\r\n```'
7006,365304430,b'```suggestion\r\nAllows user to drag and drop scene assets containing objects to be migrated.\r\n```'
7006,365304536,b'```suggestion\r\n![Selection migration](../../Documentation/Images/MigrationWindow/MRTK_Object_Migration.png)\r\n```'
7006,365304634,b'```suggestion\r\n![Selecting scenes for migration](../../Documentation/Images/MigrationWindow/MRTK_Scene_Selection.png)\r\n```'
7006,365305074,b'```suggestion\r\n### Project mode\r\n```'
7006,365305298,b'```suggestion\r\nPressing the *Migrate* button will update the component targeted by the migration handler implementation for all prefabs and scenes in the project.\r\n```'
7006,365317615,b'```suggestion\r\n![Migrating a complete project](../../Documentation/Images/MigrationWindow/MRTK_Project_Migration.png)\r\n```'
7006,365318904,"b""agreeing with Will. if you want to mention this you can create a section how to write migration for your scripts - but I don't think we will need it for now :)"""
7006,367012332,"b'nit: to keep with convention of docs\r\n\r\n```suggestion\r\nTo open the window, select *Mixed Reality Toolkit* > *Utilities* > *Migration Window*. Once the migration window is open, the selection mode navigation tabs can be enabled by choosing the component specific implementation of the migration handler.  \r\n```'"
7006,367012581,"b""nit: can't this be ../Images/blah? same with others"""
7006,367012912,b'I would also consider adding \r\n\r\n## See also\r\n\r\nsection with maybe links to our upgrade guide or latest mrtk release etc'
6838,356269349,b'```suggestion\r\n### Unity UI raycast analysis\r\n```'
6838,356270335,"b'```suggestion\r\nGraphics raycast operations are performed per pointer in MRTK to determine if any Unity UI elements are in focus. These raycasts can be quite expensive and to help improve performance, UI elements that do not need to be returned in the results should be disabled as raycast targets. Every [Graphic](https://docs.unity3d.com/2018.4/Documentation/ScriptReference/UI.Graphic.html) element has a [`Graphic.raycastTarget`](https://docs.unity3d.com/2018.4/Documentation/ScriptReference/UI.Graphic-raycastTarget.html) property. This tool will search for text UI elements that have this property enabled and thus are likely candidates to be disabled.\r\n```'"
5370,306943745,b'```suggestion\r\nOften taking screenshots in Unity for documentation and promotional imagery can be burdensome and the output often looks less than desirable. This is where the [ScreenshotUtility](https://github.com/Microsoft/MixedRealityToolkit-Unity/blob/mrtk_development/Assets/MixedRealityToolkit.Tools/ScreenshotUtility) class comes into play.\r\n```'
5370,306943862,b'```suggestion\r\nThe ScreenshotUtility class aides in taking screenshots via menu items and public APIs within the Unity editor. Screenshots can be captured at various resolutions and with transparent clear colors for use in easy post compositing of images. Taking screenshots from a standalone build is not supported by this tool. \r\n```'
7529,391945743,b'xref?'
7529,392360188,b'done'
5613,313143041,b'Find and replace `ga` :P\r\n\r\n```suggestion\r\n        InputSystem?.Register(gameObject);\r\n```'
5613,313143066,b'```suggestion\r\n        InputSystem?.Unregister(gameObject);\r\n```'
5613,313143124,b'```suggestion\r\n- `KeepOrientationVertical` public property has been added to control whether orientation of associated GameObject remains vertical\r\n```'
5613,313143698,b'search / replace bit me.... :)'
5613,313145148,b'yep :)'
5613,313523767,"b'At line 24, can you fix the broken link?\r\nTo access extension services, use [`MixedRealityServiceRegistry.TryGetService<T>`].'"
5613,313524517,b'Should we tell people here how to upgrade? I.e do they delete the old MRTK directories and then import package?'
5613,313524972,"b""The TOC list here also doesn't match up with the actual headers shown on the right hand side"""
5613,313551331,"b'Also adding on to the list in teams, maybe also add ""Review your MRTK profiles in inspector""? Per comment below, DefaultRaycastProvider wasn\'t set'"
5613,313587677,"b'In our RC2.1 release notes, we learned to provide upgrade instructions going forward. Definitely should add'"
5613,313588184,"b'Here is my suggested upgrade instructions. I took our RC2.1 instructions, followed them, and added instructions that were missing:\r\n\r\n1. Close Unity\r\n2. Delete all MixedRealityToolkit folders from RC1: MixedRealityToolkit, MixedRealityToolkit.Examples, MixedRealityToolkit.Providers, MixedRealityToolkit.SDK, MixedRealityToolkit.Services\r\n3. Delete your Library folder\r\n4. Import the new unity packages (Foundation is required, tools, extensions, and examples are optional). Import Foundation first.\r\n5. In your scenes, delete the\xc2\xa0MixedRealityToolkit\xc2\xa0and\xc2\xa0MixedRealityPlaySpace\xc2\xa0objects\r\n6. MixedRealityToolkit -> Add to Scene and Configure\xe2\x80\xa6'"
5613,313633216,b'added'
5613,313633379,"b'@Troy-Ferrell, not sure what you mean here, can you give an example? thanks!'"
5613,313644782,"b""There is that list of internal hyperlinks that describes the sections but it doesn't exactly match up with the list of sections outlined on the right: \r\n\r\n![image](https://user-images.githubusercontent.com/25975362/62982755-1db26580-bde2-11e9-9944-a789a884750c.png)\r\n"""
5613,314424206,b'done'
5613,314424758,b'i see what you mean now... thanks!'
5613,314460535,b'added missing headings'
6891,358376840,"b""I think that the purpose of this file is telling people prescriptively what to do, not just what happened - i.e. it's pretty obvious that it no longer takes a fileName argument, which folks would see when they get a compile break.\r\n\r\nWhat would be useful here is a code snippet saying how to accomplish what they did before - i.e. if you passed a filename, you should do something like:\r\n\r\n```c#\r\nif (FileUtilities.CheckThatThingExistsYeah())\r\n{\r\n    AppendScriptingDefinitions(oh, yeah, wooooo);\r\n}\r\n```\r\n\r\nAnd if you didn't pass a filename, it would just be:\r\n```c#\r\nAppendScriptingDefinitions(oh, yeah, wooooo);\r\n```"""
6935,359641231,b'It looks like this link is broken which caused the docs warning.'
6935,359990276,b'I would suggest removing the hyperlink above and the section header. Instead add a section so it stands out more and simplifies need of hyperlink/section\r\n```\r\n> [!NOTE]\r\n> Instructions to properly migrate to the latest version of the Mixed Reality Toolkit are documented in the [release notes](ReleaseNotes.md) for each version. \r\n```'
6935,360603459,"b""The link works when editing in VSCode - my only guess is that it's too long.  I'll try shortening."""
6935,360607390,"b""It looks like the link was broken because it was too long - my shortened link passed validation.  But I'll remove it as you suggest, and replace with this note."""
6891,362928200,b'Previous implementation restored and marked as obsolete.'
7529,391945849,b'add important note of generated folder stays same'
7529,392361019,b'done (and flipped the \\ to /)'
7840,423173276,b'From other comment:\r\n\r\n```suggestion\r\nif (CoreServices.InputSystem.GazeProvider is GazeProvider gazeProvider)\r\n{\r\n    gazeProvider.IsEyeTrackingEnabled = true;\r\n}\r\n```'
7840,423173338,b'From other comment:\r\n\r\n```suggestion\r\nif (CoreServices.InputSystem.GazeProvider is GazeProvider gazeProvider)\r\n{\r\n    gazeProvider.UseEyeTracking = true;\r\n}\r\n```'
7899,426744433,"b'```suggestion\r\nTo upgrade the assets on all buttons in the project to the new recommended format, use the ButtonConfigHelperMigrationHandler. \r\n```'"
7899,426744905,"b'```suggestion\r\nIf an icon is not found in the default icon set during migration, a custom icon set will be created in MixedRealityToolkit.Generated/CustomIconSets. A dialog will indicate that this has taken place.\r\n```'"
7968,430575036,"b""Mention that it's part of tools package?"""
7968,430575136,b'\xe2\x9d\xa4\xef\xb8\x8f '
7968,430577187,b'```suggestion\r\nbreaking changes. The migration tool is part of the **Tools** package.\r\n```'
8263,466656542,"b""Nit: If you think it would be helpful, having a direct link to the section (#how-to-keep-gaze-pointer-always-on) would bring folks directly back to the previous behavior that they had.\r\n\r\nIf the idea is to get folks to read the entire thing though then it's fine as-is."""
8263,466667939,"b'```suggestion\r\nThe eye gaze default pointer behavior have been modified to match the head gaze default pointer behavior. An eye gaze pointer will automatically be suppressed once a hand is detected. The eye gaze pointer will become visible again after saying ""Select"".\r\n```'"
8546,488224854,b'```suggestion\r\n## Upgrading to a new version of MRTK\r\n```'
5045,297356220,b'Misspelled: MixeddRealityToolkit -> MixedRealityToolkit\r\n\r\nHere and below.'
5045,297356420,b'Nit: Add a link to the xref here (or code)'
5045,297356818,"b'I think that by definition, all of these changes in this document are breaking changes. It\'s not just the API stuff that\'s breaking.\r\n\r\nI would just delete the ""breaking changes"" line and header down below, as it seems to suggest the others AREN\'T breaking (not true)'"
5045,297359954,"b'removing these as the doc tool apparently is not fond of bookmarks with a \'.\' in them. (this was the failure in doc generation: ""illegal link"")'"
5224,301165240,b'```suggestion\r\n- The `IMixedRealityEventSystem` old API methods `Register` and `Unregister` have been marked as obsolete. They are preserved for backwards compatibility.\r\n```'
5224,301165621,"b'```suggestion\r\nThe old event system API `Register` and `Unregister` could potentially cause multiple issues in runtime, main being:\r\n```'"
5224,301165829,"b'```suggestion\r\n- If a component registers for global events, it would receive global input events of *all* types.\r\n```\r\n\r\nuse italic for highlighting , not uppercase'"
5224,301166504,"b'```suggestion\r\n- If one of the components on an object registers for global input events, all components on this object will receive global input events of *all* types.\r\n```'"
5224,301166892,"b'```suggestion\r\n- If two components on the same object register to global events, and then one is disabled in runtime, the second one stops receiving global events.\r\n```'"
5224,301166980,b'```suggestion\r\nNew API `RegisterHandler` and `UnregisterHandler`:\r\n```'
5224,301167826,"b'```suggestion\r\n- If you have been inheriting from `InputSystemGlobalListener`, change inheritance to `InputSystemGlobalHandlerListener`. Implement `RegisterHandlers` and `UnregisterHandlers` abstract methods. In the implementation call `inputSystem.RegisterHandler` (`inputSystem.UnregisterHandler`) to register on all handler interfaces you want to listen global events for.\r\n```\r\n\r\ncan you add example code for this? will make migration easier'"
5224,301167881,b'can you add example code for this? will make migration easier'
5224,301168212,b'same: can you add example code for this? will make migration easier'
5224,301316897,b'Consider using ```csharp instead of `<pre><code>`'
5224,301503929,b'I used it to use **bold** highlight in the snippet for parts which have changes. Does it work with ``` ?'
5224,301509833,b'Probably a bad idea though.'
5402,306906139,"b"">Please open your custom profile, if one exists, at least once after upgrading to GA [](start = 458, length = 83)\r\n\r\nNit: It might be worth adding why (i.e. please open your custom profile, which will trigger a one-time migration step).\r\n\r\nIf they don't do this step, do you know if they'll still hit the null exception (i.e. in which case, can we copy that error stack or text here so that if people do forget to hit that, they might have a chance of searching for that exception here?)"""
5402,306912891,"b"">do you know if they'll still hit the null exception\r\n\r\nThey won't. The only thing they'll experience is the clicker and voice sending events without mapped actions."""
5507,312138478,b' Use [`IMixedRealityServiceRegistrar.GetDataProvider<T>()`]\r\n\r\nshould no longer be valid.'
5967,325320638,"b'nit: ""response""'"
5967,325324274,"b'nit: can you also add a link to ""State"" documentation here  - pointing to the blurb in README_Interactable.md please. '"
5967,325324889,b'Love this documentation! It is really comprehensive \r\n'
5967,325329648,b'nit: typo - the'
5967,325344520,"b""```suggestion\r\nThemes allow for flexible control of UX assets in response to various states transitions. This may involve changing a button's color, resizing an element in response to focus, etc. The Visual Themes framework is made up of two key pieces: 1) configuration and 2) runtime engines.\r\n```"""
5967,325348451,"b'```suggestion\r\nFor the given property, which can be identified by `ThemeStateProperty.Name`, return the current value set on the targeted Host  GameObject (i.e the current material color, the current local position offset, etc). This is primarily used for caching the start value when easing between states.\r\n```'"
7460,386350338,b'```suggestion\r\nDirects the theme to reset any modified properties back to their original values that were set on the host GameObject when this theme engine was initialized.  \r\n```'
7460,386552517,"b""It's primarily utilized via the InteractableThemeBase class"""
8512,486550154,b'```suggestion\r\n## Documentation versioning\r\n```'
8512,487340343,"b""We should probably recommend Unity 2019.4 over 2019.3.\r\n\r\n```suggestion\r\n> The Unity development journey currently uses **MRTK version 2.4.0** and **Unity 2019.4**. If you're working with other configurations it's still recommended that you start there, but you can also refer to the [installation instructions](Installation.md).\r\n```"""
8512,487340383,"b""Do we also want to reference 2.5?\r\n\r\n```suggestion\r\n> The Unity development journey currently uses **MRTK version 2.5.0** and **Unity 2019.4**. If you're working with other configurations it's still recommended that you start there, but you can also refer to the [installation instructions](Installation.md).\r\n```"""
3812,272106225,b'The docs build is failing due to an invalid link.\r\n\r\n```suggestion\r\n      href: Performance/PerfGettingStarted.md\r\n```'
4060,278193524,b'looks like the issue is actually a missing href line.\r\n\r\nplease add:\r\nhref: SpatialAwareness/ConfiguringSpatialAwarenessMeshObserver.md'
4060,278210049,b'Done.'
4074,278968450,"b""suggestion: the top level navigation already says guides / maybe just call this section How-tos or How to.... and then continue the children with eg setup global voice commands , trigger an action using MRTK button\r\nthat will make them shorter and we don't have the repetition of how to all the time?"""
4074,278968486,b'This is a bit long. Maybe just call it How to setup a scene for Mixed Reality?'
4074,279177970,b'good idea this is long for a place holder. '
4074,279178046,b'done'
4074,279567577,"b'Unless someone is actually going to do this in the next few days, I recommend not adding new TODOs.\r\n\r\nThese are very frustrating to read (as a consumer) and are easy to forget about (as a producer)'"
4074,280937040,"b""I'm going to go ahead and merge this PR as-is to get it in, then add this to my incoming docs PR."""
3961,303172036,b'I think you changed the line-ending style here right -was it that it was inconsistent with the rest of the stuff?'
3961,303550467,"b""I'm not sure - it was part of a mostly-automated merge to resolve a merge conflict."""
5328,304123872,"b'I\'m not too familiar with the ""toc"" file. Does this line need to be in the utilities namespace?\r\n  \r\n`href: Utilities/DependencyWindow.md`'"
5328,304125276,b'Should this be?\r\n\r\n`- name: Dependency Window`'
5328,304126251,b'Checking.. '
5328,304126289,b'fixed '
5248,304591513,"b'FYI, I just opened a PR #5347 that moves input recording docs with the rest of Utilities/Tools section'"
5524,311126923,"b'Consider moving this content to the Architecture section above, as this does feel like Architecture-y sort of stuff (i.e. it explains system creation/setup/destruction stuff)'"
5524,311178644,"b'i believe it is less discoverable there,'"
5613,313499587,"b"">RC releases [](start = 24, length = 11)\r\n\r\nWe're specifically covering upgrading from RC2 to 2.0.0, not any arbitrary version to 2.0.0 - we should be honest about what this guidance is (so people don't try to go from RC1 and expect these instructions will necessarily work)"""
5613,313504505,"b""sounds good. i'll add the 2 back :)"""
5613,314423794,b'fixed'
5811,319145156,"b""This should probably be a sub-item in Architecture, not it's own top level thing - I think this needs to be spaced over a few more.\r\n\r\nIt's already in the architecture folder and is about architecture stuff."""
5811,319148174,"b"">Creating a data provider [](start = 12, length = 24)\r\n\r\nIt's weird to me that there are two different entries that have the same name (i.e. create a data provider) - I know that they are placed within the context of the spatial/input sections... but maybe it's fine? I'm curious what others' thoughts are here."""
5811,319152917,b'nice catch. thanks!'
5811,319153308,"b'i\'m happy to add ""input"" and ""spatial awareness"" to the toc, also interested in other folks\' thoughts'"
5811,319229003,b'Extension Service Wizard is also already in here? This and that seem duplicated'
5811,319229501,"b'the input/spatial awareness seems redundant. Maybe ""Creating a Input manager"" and ""Creating a spatial observer data provider""'"
5811,319252215,"b'This is a high level overview, the highlighted doc is the details of creating one.'"
5811,319309016,b'in latest commit'
6157,330321179,b'Maybe how to use DocFX?'
6559,345439482,"b'It feels like ""Utility"" is a bit too general and isn\'t descriptive enough for what\'s actually contained there - if someone wanted to find detecting platform capabilities, I don\'t see how they would know to drill into a somewhat vaguely named ""Utilities"" dropdown.\r\n\r\nAlso in general, I know that this change will folder-ize things that were top-level before in order to create some consistency with other folder things. I feel like in general we should aim to get users to the thing in the fewest number of clicks possible (or rather, when there are two solutions, one of which involves fewer clicks, we should favor those). Given this, it feels like maybe we should keep those current top-level non folder things as non-folder things (i.e. Teleport System only has an overview, no need to have it expand and require another click to get to what\'s interesting).\r\n\r\nThe alphabetical order makes a ton of sense and I think think creates clarity on expectations (for both readers and contributors).\r\n'"
6559,345439936,b'i can make that change. thanks!'
6559,345442406,b'One note on single entry folders... I am going to keep the Extension services folder as there are a couple of new ones in 2.2.0 that need to be documented\r\n'
6559,345443508,"b""as part of the extension folder, i am going to duplicate the extension tool wizard to help elevate it's visibility"""
6887,357345698,"b'Is it odd that this is MRTK Examples Hub (instead of just, Examples Hub?) i.e. this is within the MRTK itself, so it would by default be the MRTK examples hub'"
6887,357362686,"b""Updated. I don't mind either way. I put MRTK Examples Hub because I thought that was the official app name."""
7740,417652011,"b""Do we want to leave this in our toc, in case anybody hasn't updated for whatever reason? We could add an `[Obsolete]` tag to it like your `[Experimental]` tags below"""
5215,302133283,"b'Nit: typo\r\n```suggestion\r\n        /// Exports the project info into a solution file, and the CSProject files.\r\n``` #Resolved'"
5215,302139392,b'Nit: typo\r\n```suggestion\r\n        /// Gets a relative path between two known relative paths (inside Assets or Packages)\r\n``` #Resolved'
5264,302454375,b'Remove commented code'
5264,302458354,"b'Ah I see, no worries'"
5309,303771893,b'Setting the min/max values after the fact is still possible using `SetScaleLimits`.'
5309,303772049,"b""Oops, I'll add that back."""
5247,304269911,"b""> Or, is the problem that the GGVPointer gets locked, but not the gaze pointer?\r\n\r\nYeah, exactly this. I'll add a comment.\r\n"""
5309,304340897,"b'Ah, there is one issue worth discussing here. If we do things like this, if you have both a `ManipulationHandler` and a `BoundingBox` on an object, the object will have two different min/max scales.\r\n\r\nSay for example someone had MH max scale as 3 and BB max scale as 5. If they scaled to max using the BB scale handles and used MH two hand manipulation, the scale would jump down to three.'"
5309,304341288,"b'Previously there was conflict as to which min/max scale would be taken, but at least there was one authoritative min/max scale.'"
5379,305733197,"b""I have this marked as WIP. For one, it's doesn't work with 6dof controllers as it doesn't take the controllers rotation into account. Additionally, relying on the `rotateLogic` isn't ideal, as I'm pretty sure there are circumstances where this object will not be Setup with the correct values for the current rotation."""
5379,305833867,b'This should also include the calculation of `right` above.'
5379,306809840,"b""Oops, forgot to remove the WIP stuff. I'll do that now."""
5379,307201251,"b""Yeah, my changes require a distinction between the pointer position, the grab position and the object position:\r\n\r\n- pointer position: A point on the hand/controller defined by the type of pointer you're using\r\n- grab position: A point on the object where the pointer grabbed the object\r\n- object position: The origin point of the object\r\n\r\nThe way this was before, for near interaction the pointer position and the grab position would be equal. In fact, for near interaction pointer.Position returns the palm position. Now, the grab position is where you grabbed the object."""
5379,307210408,"b""It's already removed:\r\n![image](https://user-images.githubusercontent.com/47415945/61864739-dc592500-aec9-11e9-95e2-a22f7bb3f270.png)\r\n"""
5379,307214698,"b""Oh, this hung around from when I was trying something. I've tried removing this and the tests still pass."""
5379,307366738,b'### Difference in old(![#ff00ff](https://placehold.it/15/ff00ff/000000?text=+))  vs. new (![#00ffff](https://placehold.it/15/00ffff/000000?text=+)) grab points:\r\n![image](https://user-images.githubusercontent.com/47415945/61887774-2c4fe000-aefa-11e9-9844-3ad39be626ae.png)\r\n'
5379,307739117,"b""Both `ShellHandRayPointer` and `SpherePointer` use the `BaseControllerPointer` implementation of `Position`:\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/blob/6081dcbb5f2eb1e89e26d2064e61920809bdbbb6/Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/BaseControllerPointer.cs#L374\r\n\r\nNeither pointers define a value for raycastOrigin in their prefabs, so this just returns the pointers transform.\r\n\r\nThe transform appears to be controlled by ControllerPoseSynchronizer (from which `BaseControllerPointer` inherits). The [`poseAction`](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/6081dcbb5f2eb1e89e26d2064e61920809bdbbb6/Assets/MixedRealityToolkit.SDK/Features/Input/Handlers/ControllerPoseSynchronizer.cs#L83) inspector option seems to determine where on the controller this ends up being.\r\n\r\nI guess if we were to use the pointer's `Rays` property, we could access this `pointerPosition` value here, but will it work for all pointers? Currently what we're doing here works grand. """
5379,308130387,b'Created #5450 and will look into it soon.'
5480,309567111,"b'Agreed, I think an additional parameter is preferable if possible. '"
5632,313783719,b'Could you not make this a mandatory parameter?\r\n``` PowerShell\r\n[Parameter(Mandatory=$true)]\r\n[string]$Directory\r\n```'
5645,313977122,b'Can do'
5645,313989258,"b""I had to add a 0.25\xc2\xb0 tolerance for the test to pass. I figured that's an acceptable level of error."""
5736,316141365,"b"">It's a pity that it is necessary to patch existing project files instead of handling that during project generation.\r\n\r\nYeah, as far as I can tell this is a known issue. I'm not sure there's anything we can do for the time being.\r\n\r\n> Do we also need to modify any templates for the MSBuild process?\r\n\r\nI'm not sure, I didn't try it. I'm not sure if the MSBuild stuff works at all for Unity2019 or arm64"""
5736,316141380,b'Sounds good to me.'
5736,316141400,"b'Yeah, sounds reasonable.'"
5736,316142839,"b""I guess we can run tests on 2019 too, wouldn't do any harm."""
5955,324716609,"b""@wiwei should we move this, `TwoHandRotateLogic` and `TwoHandScaleLogic` to some internal namespace/location? They're not intended for users for normal usage and I've broken the public interface to these classes twice now. It would be nice if we could make it clear that these classes are subject to change."""
5955,325032967,"b""Oops, myself and @thalbern were unsure if we should add an experimental directory to the Examples package, but it looks like it already exists. I'll move this."""
5955,325034272,"b""Ah ok, I removed because I had only observed the broken behaviour. I'll fix and add this option back. """
5955,325034658,"b""I did think this, but it may be a bit excessive when generally we're talking about no more than two points, haha."""
5955,325037331,"b""Yeah, there isn't a huge amount of difference yet. I separated out a lot of WIP changes so that I'm not pushing everything into one monolithic PR. I figured that it's better to separate these classes now so that we can make the changes we wanted to make in the next couple of iterations without having to worry about breaking changes.\r\n\r\nI was going to look at constraints next, and making them consistent with BoundingBox. I already have most of the changes locally."""
5976,325572360,"b'Could use [`TestUtilities.AssertAboutEqual`](https://github.com/microsoft/MixedRealityToolkit-Unity/blob/ac2b8108f85aaef32b7f1d6022c1af1d19b154b2/Assets/MixedRealityToolkit.Tests/TestUtilities.cs#L192)? Unless the distinction between the vectors differing by their components vs by distance is important for these tests? In either case, it may be nice to move `TestUtilities.AssertAboutEqual` into this new `AssertHelpers` class.'"
5976,325578783,"b'I second this, when I experimented with this for my WIP constraint changes, local space constraints felt better to me than world space constraints. Perhaps we should provide an option to switch between local and global translation constraints, like you mention [here](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5147#issuecomment-532430422) for rotation @wiwei.'"
5965,325608019,b'nit: typo\r\n```suggestion\r\n        private bool speechTriggeredFlag;\r\n```'
5965,325624114,"b""I'm not sure if we want to add a scaleHandler with default scale values if the user hasn't added one explicitly. In `ManipulationHandler` we only apply scale limits if the user has added this component themselves."""
5965,325630601,"b'nit: use component properties\r\n```suggestion\r\n                Vector3 invRootScale = new Vector3(1.0f / rootScale.x, 1.0f / rootScale.y, 1.0f / rootScale.z);\r\n```'"
6006,326205957,"b'```suggestion\r\n        /// Event that gets fired when interaction with a rotation handle stops.\r\n```\r\nUsed _stops_ below, so we should probably use _stops_ here to be consistent with the event names.'"
6019,326863285,"b""`GameObjects` have overloaded equality, so that they return true for `gameObject == null` once the object is destroyed. However, the object hasn't been cleaned up yet, so destroyed objects will not reference equal null:\r\nhttp://answers.unity.com/answers/1001265/view.html"""
6019,326865703,"b""If we only checked `gameObject == null` then this would also be true if the pointer no longer points at the focus object. If we're focus locking, no longer pointing at the focus object shouldn't end focus lock"""
5965,334977353,"b'nit: typo\r\n```suggestion\r\n        /// <param name=""transformScaleHandler"">scale handler you want to switch to - can be null if scaling shouldn\'t be constrained</param>\r\n```'"
5955,335535313,"b'Yes, already have it running and passing alongside the constraint changes.'"
6321,337501575,"b""Yeah, some scale constraints may affect an object's scale without the user explicitly scaling the object themselves. For example, MaintainApparentSizeConstraint (which I added to demonstrate and test this) scales an object based on distance from the camera."""
6321,337519003,"b""Oh, it's actually the same test, but for `ObjectManipulator`. The other test that needs to do this is  `ManipulationHandlerOriginOffset`. I thought I had added this commit to my earlier PR into `ux_refactor`, but I must have made a mistake when reordering commits. \r\nThis commit just ensures parity between `ManipulationHandler` and `ObjectManipulator` tests"""
6321,337519135,"b'I changed it to ScaleConstraint initially, but it broke references to it in the example scenes. Is there a way to rename a component without breaking references?'"
6321,337524081,"b""Yeah, you won't be able to move the object. I figured that this generally isn't behaviour we expect people to use, so testing it seemed unnecessary."""
6321,337554911,"b""It looks like it's worked now. I may have tried to move it as well last time and that's why it didn't work. I've gone with `MinMaxScaleConstraint`."""
6424,340753076,"b""The way I see it, this beahviour was already opt-in upon attaching a rigidbody. It just wasn't working as intended.\r\n\r\nWe can make it opt-in if that's preferable."""
6424,340756499,b'Is this required even for demo scripts?'
6424,341040035,"b'Cool, sounds good to me'"
6544,345320131,"b""Good point. They do appear to have the Android NDK, but I can't see anything about iOS in any of the agent capabilities. """
6321,349500800,"b'This only constrains in what way we can manipulate an object, whereas if I understand it, a solver continuously updates an object\'s transforms in some way relative to another transform.\r\n\r\nFor example, if we had a ""fixed distance from head"" constraint, that limits a transforms position so that while manipulating, the object remains at a fixed distance from the head, but once we stop manipulating we can move away from the object and it will stay in place.\r\n\r\nWhereas, if we had a ""fixed distance from head"" solver for example, that would continuously update the position of the object. When we move, the object will always move with us, remaining at a fixed distance from the head. \r\n\r\nThe solver also needs to make some decisions as to where to move the object to, whereas with constraints this is managed by manipulation.'"
6834,356181418,"b""There's a lot of similarity here between `InstantiatePressableButtonHoloLens2Toggle`, `InstantiatePressButtonPrefab` and `InstantiatePressableButtonHoloLens2`. Perhaps we could unify them into a single method and pass `prefabPath` and `transformPath` as arguments.\r\n"""
6834,356182305,"b'Something like\r\n```suggestion\r\n        private void InstatiateButton(Vector3 position, Quaternion rotation, string prefabPath, string transformPath, out Interactable interactable, out Transform interactableTransform)\r\n\r\n```'"
6834,356182856,"b""I'm happy either way though, just a suggestion"""
6875,357281350,"b""Not quite. It would produce the same behaviour, but it could potentially add two constraint components of the same type where one constraints near and the other constrains far. I think it's preferable to only add one constraint component in this case."""
6875,357564213,"b""Yeah, I agree from a readability perspective, using the flags would be nicer. Also, we immediately convert the bools back  to `ManipulationHandFlags` and `ManipulationProximityFlags`, which we wouldn't have to do if they were parameters already. \r\n\r\nBut the fact that passing `OneHanded | TwoHanded` or `Near | Far` doesn't make sense here is why I chose bools. I'm just not certain what the function should do in these cases where invalid flags are passed. Open to suggestions."""
6875,357571073,"b'Nope, these represent the type of manipulation, so they should all be called with the same values for `isOneHanded` and `isNear`.\r\n\r\nIn fact, `transform` should be a reference to the same `MixedRealityTransform` for all three calls.'"
6875,357590831,"b""Oh thanks for catching this. I actually noticed that the logic in `ManipulationHandler` was incorrect but I didn't fix it properly for this constraint and forgot to fix for `ManipulationHandler`.\r\n\r\nI've confirmed that `ManipulationHandler` options do the opposite of what you'd expect. Here are the options I used for `ManipulationHandler`:\r\n![image](https://user-images.githubusercontent.com/47415945/70794742-4b121e80-1d96-11ea-9f88-b1107978a887.png)\r\n\r\nAnd here's the behaviour:\r\n![face_user_wrong](https://user-images.githubusercontent.com/47415945/70795071-ed320680-1d96-11ea-8cf7-ab2554f7eebd.gif)\r\n\r\nI'll fix this for both this constraint and `ManipulationHandler`"""
6875,357596714,"b""Should I use `AssemblyExtensions` instead? To be honest, I wasn't entirely happy with this as a solution to discoverability. Constraints are certainly easier to find and reason about, but it feels a bit clunky using reflection and the highlight system (which sometimes does some weird stuff). Again, open to suggestions."""
6875,357727026,"b'On a second look, this isn\'t actually incorrect, it just so happens that most objects in the HandInteractionExample scene have a ""front"" on the ""back"" side of the object:\r\n![image](https://user-images.githubusercontent.com/47415945/70814953-7f043880-1dc4-11ea-937a-980e5eac67c2.png)\r\nWhen we do `FaceUser`/`FaceAwayFromUser` it\'s the blue axis that we\'re pointing towards/away from the user. That\'s why in `ManipulationHandler` the behaviour looks backwards while the logic looks more correct.\r\n\r\nI\'m not familiar with which axes generally point where on object models, so I\'m not sure whether we should fix this for correct looking behaviour or for correct logic.'"
6875,358269893,"b""Just tried `AssetDatabase.FindAssets` now. I can use it to get the `TransformConstraint` script asset, but it doesn't get derived types, so I'm not sure we can use it."""
6924,358944525,"b""I was using this for testing (I had a button in manipulation handler inspector that migrated to object manipulator). We didn't want to keep this button around in development, but we can use this Migration stuff in future (see #6911)."""
6924,359233265,"b'Maybe, will there not still have to be a cast to either `ManipulationHandler` or `ObjectManipulator`?'"
6924,359233669,"b""Yeah, I can investigate similar enums and make sure we're reusing as much as possible."""
6924,359233862,b'Can do'
6924,359277611,"b'So I was going to have two separate enums for axes, one for flags (`AxisFlags`) and another as just a normal enum (`Axis` or something similar). One problem with changing the type of all of these enums is that in a lot of cases these are public properties, so it would be breaking for anyone who is setting these values in code.\r\n\r\nI agree that deduplicating these enums (I found a few more than those you mentioned) is definitely something we want to do, but should we do so now if it may be breaking?'"
6924,359290224,b'The `TransformScaleHandlers` in HandInteractionExamples have been updated to `MinMaxScaleConstraints` without any changes to that scene in this PR. '
6931,359403046,"b'Just for context, does `TryGetHandRayPoint` return false for the `WindowsMixedRealityGGVHand` controller on HoloLens 1?'"
6931,359404414,b'nit: Missing new line'
6931,359893738,"b""I think since we're going to be checking this case whether it's first or second, it's neater to check it first if it allows us to use an else if."""
6931,359934262,b'nit: trailing whitespace'
6982,363379250,b'Where does this 3 come from? Is it that `(3 * config.ObjectMediumProximity * config.ObjectMediumProximity)` is equivalent to the square magnitude of a vector where xyz are all `config.ObjectMediumProximity`?'
6981,363692620,"b'I spent way to long just now trying to work out this double negative, haha. I would say, the least close thing, is the furthest thing away. So ""at least this close"" means the same as ""no further than this"" (at least I think it does \xc2\xaf\\\\\\_(\xe3\x83\x84)_/\xc2\xaf).\r\n\r\nI think this is worth changing anyway, haha, it took me long enough to justify the wording so it could definitely be clearer.'"
6981,363697837,"b'Sure, this sounds better to me. '"
6943,364259867,"b'You could use `[RequireComponent(typeof(Animator))]` on this class, as it seems required for the behaviour to work.'"
6943,364279085,b'If the returned vector needs to be in local space you can use `root.transform.InverseTransformPoint(input.transform.position)`'
6943,364290800,"b'I could be misunderstanding, but does this mean that we only do rotation about the y-axis? Are there possible use cases for rotating about other axes? Perhaps even aribrary user defined axes?'"
6943,364293939,b'```suggestion\r\nYou can find examples in the **HandCoachExample** scene under:\r\n```\r\n\r\nTypo'
6943,364297206,"b'Near Tap, Palm up and Scroll all appear to be using "" \xe2\x80\x93 "" between title and discription, whereas the rest of the list is using ""- "". We should probably pick one style and be consistent in this list. I think space/en dash/space looks neater than dash/space.'"
6943,364299421,"b'```suggestion\r\n- **MinMaxDelay** This property specifies the minimum and maximum delays for showing the visuals. By default, the visuals for the hand will appear after min seconds if the user\xe2\x80\x99s hands are not in view \r\n```\r\nTypo'"
6943,364302159,"b'```suggestion\r\n- **AutoActivate** When this boolean is set to true, the hint will automatically run through the MinMaxDelay timer logic when the GameObject of the script is active in the hierarchy and the script is enabled. This should only be set to false if you intend to manually control the hint appearance and disappearance via code. \r\n```\r\nTypo'"
7007,364344967,"b""It appears to actually be calling [GUIUtility.ExitGUI](https://docs.unity3d.com/ScriptReference/GUIUtility.ExitGUI.html). I'm not entirely sure what it does in this context, but it certainly doesn't hide or disable the GUI code after it."""
7006,364682795,b'```suggestion\r\n        {\r\n```\r\nnit: tabs'
7006,364684626,"b'```suggestion\r\n        private const string MigrationWindowURL = ""https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Tools/MigrationWindow.html"";\r\n```\r\nnit: variable name'"
7006,364691186,"b""I think there may be value in separating the migration logic here from the gui logic and put it in its own class. A class of static migration helper functions may be useful. Not only would it be easier to write a test for an asset migration, but it would be possible in future to create command line functionality around migration that people could use in automatic migration scripts.\r\n\r\nI'm thinking along similar lines to the MRTK Build Window, which has separated build logic from the GUI so that we can do command line builds."""
7006,364692112,"b""To be clear, I'm thinking of the following functions:\r\n- MigrateAllScenes\r\n- MigrateScene\r\n- MigrateAllPrefabs\r\n- MigrateSelection (repurposed and renamed as MigrateListOfObjects or something)\r\n- MigrateGameObjectHierarchy"""
7006,365155968,"b'I thought this was happening too? In Will\'s example, does `previousScenePath` not point to _Scene 1_ while we open and migrate `currentScene`. Then wouldn\'t the following line of code reopen _Scene 1_?\r\n```csharp\r\nEditorSceneManager.OpenScene(Directory.GetCurrentDirectory() + ""/"" + previousScenePath);\r\n```\r\nThis would make sense when migrating a single scene, but we call this in `MigrateAllScenes` too, so this line of code must be called for as many paths as there are in `scenePaths`. Let me know if I\'ve misunderstood.'"
7027,365250392,"b'```suggestion\r\n    Write-Warning ""PullRequestId or TargetBranch aren\'t specified, skipping.""\r\n```\r\nI guess we should be consistent with the logic in this warning'"
7027,365255224,"b""Couldn't we just write the full path when writing the file in githubchanges.ps1? The root path is already being joined to the file path there when we check if the changed file still exist:\r\n```powershell\r\n$joinedPath = Join-Path -Path $RepoRoot -ChildPath $changedFile\r\n```"""
7035,365749412,"b'Looks like PR validation already caught this, but we can remove these _returns_ tags'"
7059,366410307,"b'Should these variables also be set for a physics raycast above? Also, out of interest, why `raycastHit.raycastValid = false;`?'"
7006,366810390,"b""I believe we've had issues with `GetAssemblies` before. I believe it's safer to use `AssemblyExtensions.GetLoadableTypes`. See [this comment](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6875/files#r357288162)"""
7006,366832942,b'Should this be `types == null`? At the moment does this function return if types is initialized?'
7006,366836366,b'```suggestion\r\n    public class MigrationToolTests\r\n```\r\nI think this is the standard. Same for the file name.'
7006,366837687,"b""It would be great if there was a way we could add some tests that migrate a prefab, or a scene too. Is this something that's possible to test here?"""
7006,366949866,"b""omg, sorry. You're totally right, haha. Somehow totally missed the other tests in my first review. Apologies for that."""
7006,366962090,"b""Oh apologies, didn't see that there was already a comment for this. """
7096,370074024,"b""Couldn't we have this as a private property?"""
7096,370074710,"b'Out of interest, is this a breaking change? Do object references still work if you change to a parent type?'"
7096,370078123,"b""We expect `BoundingBox` to hang around for a few versions after we depreciate right? Maybe it's worth having the setters in case people are still using it?"""
7096,370553267,"b'Cool, good to know!'"
7345,381251743,"b""Yeah, at the moment there's no warning or anything for that. We can create an issue if you think it's worthwhile."""
7413,384665093,"b""Can't we do this the same way as it's done above? There are issues with using AngleBetweenOnAxis, and we can avoid rotating and constructing new vectors and instead just measure the angle once. See lines 484-496."""
7413,384666480,b'You can use `AngleBetweenOnPlane` and give the plane normal argument. `Vector3.forward` for xy-plane and `Vector3.up` for xz-plane.'
7413,384667725,b'This function does the same job as `AngleBetweenOnPlane`.'
7413,384670014,"b'Again, we should measure the angle once, and avoid rotating and constructing two new vectors. We should also be using `AngleBetweenVectorAndPlane` as this fixes a bug where objects could get stuck behind you. See lines 529-542.\r\n'"
7413,384673970,b'These functions can be removed'
7413,386427501,"b""Is it possible that this call causes slowdown when using `ColliderBounds` and a complex `MeshCollider`? Might we be able to cache the results of `GetBounds` so we're not calling it every time we call `AngularClamp`. There's no need if this has already been tested and you don't think it's a significant problem."""
3607,266967588,b'Could we just keep the count of pointers over each object instead?'
3607,266986398,"b""I feel like this logic doesn't belong here. We have three classes (FocusManager, InputSystem and FocusHander) cooperating to decide if the event should be raised. We should instead raise the event always and leave it to the FocusHandler to decide what to do with it."""
3607,267037409,"b""> Changing to send FocusEnter and FocusExit for each pointe, while giving controls that wish to track each pointer individually more information, it would require all controls to have their own tracking logic to avoid potential odd UX and state behaviors.\r\n\r\nI think that's the relevant bit. Correct me if I'm wrong but I think the logic needed to implement the current behavior is something like this:\r\n\r\n```\r\nint count = 0;\r\nPointer pointer;\r\n\r\nOnFocusEnter(event)\r\n{\r\n\tcount++;\r\n\tif (count == 1)\r\n\t{\r\n\t\tpointer = event.pointer;\r\n\t}\r\n}\r\n\r\nOnFocusExit(event)\r\n{\r\n\tcount--;\r\n\tif (event.pointer == pointer)\r\n\t{\r\n\t\tpointer = null;\r\n\t}\t\t\r\n} \r\n```\r\nIt doesn't seem too bad but we could have that in BaseFocusHandler, something like:\r\n```\r\nclass BaseFocusHandler\r\n{\r\n\tbool receiveAllFocusEvents = false;\r\n\t\r\n\tabstract HandleFocusEnter();\r\n\t\r\n\tsealed OnFocusEnter(event)\r\n\t{\r\n\t\tif (receiveAllFocusEvents)\r\n\t\t{\r\n\t\t\tHandleFocusEnter(event);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tcount++;\r\n\t\t\tif (count == 1)\r\n\t\t\t{\r\n\t\t\t\tHandleFocusEnter(event);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t// ...\t\r\n}\r\n```\r\nWhat do you think?\r\n"""
3607,267438586,"b'I have to disagree with you there. Making this a pure UI concern, i.e. private to the component handling focus, provides better encapsulation which makes the system as a whole easier to understand, use and change. \r\n\r\nWith the current solution in this PR, we rely on implementations of the input system interface checking the property in the focus handler before raising focus enter/left events. This is not enforced in any way by the interface definitions, so you will only realize you got it wrong when it fails at runtime instead of at compile time. If UI components take responsability for it instead, it is more likely they will work fine with a different input system implementation.'"
3607,267780774,"b""@Alexees, totally agree with you in that we should make the most common use case as easy as possible to implement. Not at the cost of introducing that dependency in the Input System though. \r\n\r\nI feel that we already have the mechanism to allow UI implementers to choose between first/all focus events in the shape of the Focus and FocusChanged handler interfaces. If there are no strong objections, I'm going to go ahead and change Interactable to keep track of the pointers using FocusChanged so we can close #3577."""
3607,267839599,b'PR ready: #3670 '
3607,268231287,b'Is this no longer a valid concern?'
3607,268233976,"b'>MixedRealityToolkit.InputSystem.RaiseFocusEnter(currentPointer, pendingFocusObject); [](start = 24, length = 84)\r\n\r\nRaising focus enter/left for all pointers will break all focus handlers relying on the existing behavior. We already have focus changed events to detect multiple pointers, '"
3607,268234387,"b'>IMixedRealityFocusChangedHandler [](start = 87, length = 32)\r\n\r\nGood catch. I would gladly take the changes to this file as a separate change.'"
3607,268235276,"b"">virtual [](start = 15, length = 7)\r\n\r\nThis is the reason we got in trouble to begin with. Can we have this and all other 'virtual' in focus handler methods replaced by override, so we get a build error if the interface we're implementing changes?"""
3607,268272547,"b""This changes the current behavior with consequences I find difficult to predict.\r\n\r\nYou were saying this change is motivated by InteractionRecevier not receiving focus events for its interactables. Were those interactables under the receiver in the hierarchy? I'm not sure it is meant to receive them otherwise. If they were under the interactable or you think the behavior should be different, could you open an issue for it? \r\n\r\nIn general we should try to narrow down the scope of PRs as much as possible and have an issue backing them, to make it easier for reviewers to understand and approve them quickly."""
3607,268608827,"b'My point about InteractionReceiver was that if it is meant to have its interactables below it in the hierarchy it would receive those focus events when they bubble up. There is nothing in code enforcing interactables to be below the InteractionReceiver though. @radicalad , do you know if InteractionReceiver is meant to have its interactables as siblings/descendants?'"
3607,269027889,"b'Thanks for the info @radicalad . So, just to be clear, does InteractionReceiver require the objects it is keeping track of to be descendants of its game object?'"
3607,269030609,"b""I'm no Interactable expert but it seems that it is meant to keep a list of all the pointers focusing it and expose it via the `Focusers` property."""
3738,270827400,"b'>Generic interface for all Mixed Reality Data providers [](start = 8, length = 54)\r\n\r\nA brief explanation here on when a type should be a data provider instead of just a service could be useful.'"
3764,271639350,b'The second. It must have been lost when refactoring. Thanks for the catch!'
3760,271814587,"b'I think they\'re there so users are aware that the input system can raise gesture events with Quaternion or Poses even thought currently there are no input sources that produce them. We could rephrase ""currently supported"" to something like ""current produced by"". Including @lukastoenneMS , who wrote that bit.'"
3760,271817510,"b""I see what you mean. I had been editing the files in Visual Studio Code that wraps thing around nicely so I didn't realize how horrible they are when seen here. I see that it is possible to break the lines while still having them display as a single paragraph when renderered. I don't know if it is worth the additional effort though."""
3760,271820115,"b""Up/down is great, I just wanted to emphasize the fact the inputs that trigger these events are of the true/false type. I'm going to rephrase it as 'binary' inputs, but I'm totally open to suggestions."""
3787,271834979,b'The architecture is so generic that it is very difficult to make any assertions on what this value may represent. I think all we can say is: _this is a float value reported by an input source_. '
3743,272106436,"b'>based  [](start = 25, length = 6)\r\n\r\nbased on'"
3881,272981146,"b'>control [](start = 34, length = 7)\r\n\r\ncontrolled'"
3881,272983735,"b"">DateTime currentTime = DateTime.UtcNow [](start = 12, length = 38)\r\n\r\nApparently this can be quite unprecise (~50ms intervals): [https://stackoverflow.com/questions/2143140/c-sharp-datetime-now-precision](https://stackoverflow.com/questions/2143140/c-sharp-datetime-now-precision). I'd say that for timestamps in general it's better to use Stopwatch.GetTimestamp: [https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch.gettimestamp?view=netframework-4.7.2](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch.gettimestamp?view=netframework-4.7.2)\r\n\r\nIt may be unnecessary here, seeing how the timeout is probably expressed in seconds. Up to you."""
3881,272985128,"b"">Enum.GetNames(typeof(TrackedHandJoint)).Length [](start = 49, length = 46)\r\n\r\nThis will include the 'None' enum value, in case that's an issue."""
3862,273037009,"b"">locked [](start = 72, length = 6)\r\n\r\nMaybe add locked 'to the target'? I didn't realize what it meant on first read."""
3862,273038767,"b"">pointer.IsFocusLocked = (pointer.Result?.Details.Object != null); [](start = 12, length = 65)\r\n\r\nThis seems like a breaking change. I'm fine with it if it doesn't break our current UI but why is it necessary?"""
3862,273042138,"b'>Debug.Log [](start = 12, length = 9)\r\n\r\nRemove?'"
3881,273448058,"b'Nit: I believe DateTime has quite high internal resolution, what can be imprecise is the value returned by UtcNow'"
3916,273894616,b'Document the difference here?'
3941,274444821,b'Yep. Hence the review request. As it stands support for scene switching is completely broken.'
3982,276185209,"b'>cachedWorldSpacePosition [](start = 12, length = 24)\r\n\r\nThe mouse pointer is a controller pose synchronizer, meaning that it should synchronize the transform of its game object to its own position.'"
3982,276187023,"b'>0 [](start = 47, length = 1)\r\n\r\nChanging the ID of interactions will break mouse controller mappings serialized with the old ones. '"
3982,276187916,"b'Maybe we could instead reuse entry 0 for ""Spatial Pointer""'"
3982,276190054,"b""We don't seem to be raising events for the Mouse Scroll, Spatial Pointer and Spatial Grip inputs."""
3982,276190880,"b"">Controller != null [](start = 16, length = 18)\r\n\r\nWhat causes Enable() being called with a non-null controller? It seems that if Disable() is being called correctly this shouldn't happen."""
3983,276727104,"b""The issues I see with using focus are that:\r\n- You don't have a primary pointer until you actually point at something that can receive focus\r\n- The primary pointer could change while you're actively using it. E.g. you're dragging something with your right hand and accidentally point at a focusable object with your left.\r\n\r\nI'm currently prototyping something along the lines of using the first active pointer in the last controller detected or gaze if none.\r\n\r\nThe difficulties we're having an coming up with a good criteria for primary pointer makes me think that, besides having some sort of default, we need to make sure that that logic can be customized easily."""
4013,276743695,"b""I would like to add it to IMixedRealityPointerHandler (OnPointerDragged?) but it is a breaking change and I don't know how much wiggle room we have there. It is the best type of breaking change though, in the sense that it produces a build time error (missing implementation) that is very straightforward to fix. @wiwei , any thoughts on that?"""
4013,276744951,b'Mindless copy-paste. Good catch!'
4013,276961142,b'For consistency with the way we raise the down and up events in OnInputDown/Up(). Maybe @julenka can give background on why it is done that way.'
4013,276962006,b'#4025 '
4013,276977295,"b'Add <inheritdoc />. Same anywhere else, matching what is already in the file.'"
4022,277007957,"b'I was a bit confused by this because I took _slider_ to be the whole thing not just the bit that moves. I think you are calling it thumb above, would it make more sense to call this member thumbRoot?'"
4022,277010260,"b'Looks like we will be able to use OnPointerDragged here, yeih!'"
4022,277011416,b'Could we simplify slider start and end positions to just a radius value (implicitly along the axis) or do you think we need the flexibility?'
4022,277018747,b'What about raising a value updated event on start instead of having a start running one? '
4013,277029015,b'It was fine because the base implementation was empty.'
3983,277721674,"b'@jbienzms, good idea. I would be most interested in what _primary pointer_ means for people, the use cases they have in mind for it and how they would like the API to get access to it to look like. What would be the right place to schedule that call?'"
4056,278020433,"b""I believe it shouldn't matter because we're only interested in how the rotation changes over time, not the absolute value. In practice, it seems to work fine for 6 DOF controllers and near interaction but hand rays don't produce any rotation."""
4056,278022639,b'It seems that it was already using it:\r\n\r\n            // Calculate relative transform from object to hand.\r\n            Quaternion worldToPalmRotation = Quaternion.Inverse(pointer.Rotation);\r\n            objectToHandRotation = worldToPalmRotation * hostTransform.rotation;'
4063,278120895,"b""Looks good. Should we mark this one as deprecated so users don't take dependencies on it?"""
4047,278124363,"b'>cameraSystemType [](start = 27, length = 16)\r\n\r\nWill this not be better placed in the camera profile? The way I see it, the less information about the camera that leaks into the general MRTK profile the better.'"
4047,278211182,"b""I'm not sure we should be using an interface here. Nothing is calling IsOpaque via the interface and I don't think it sufficiently describes what a type must implement to be a camera system."""
4047,278455951,"b""I'd say let's make it an interface when/if we actually use the camera system through its interface and if the interface defines well what is expected of a camera system. I.e. by implementing the interface I should have a reasonable chance of creating a type that can work well in place of MixedRealityCameraSystem."""
3983,278466224,"b""Thanks @provencher , do you mind opening a bug with repro instructions for that issue with the gaze pointer?\r\n\r\nIt sounds like a method based on the pointer angle with the forward camera direction could be a useful option for some use cases. I'm concerned about two handed manipulation scenarios where you can potentially switch main pointer in the middle of a manipulation, but I think we could/should support the forward method as an option depending on your findings.\r\n\r\nLet me know how it goes in your use case and if you find any more caveats.\r\n"""
4071,278498256,"b""> Regarding the re-usability of the enum however, I think we could move it out once it's needed elsewhere. As in, if someone PR's a change that makes use of it elsewhere, then it should be moved to another time. Until then, I think the way it currently is setup is sufficient.\r\n\r\n+1"""
4077,278555150,b'Agreed. If it breaks something at least we will understand the use case that is meant to cover.'
4116,279439798,"b""I'm quite ignorant about the life-cycle of temporary value-type objects in C#, but I would have expected the compiler being able to do something reasonable there. Can you elaborate a bit more on where that performance impact comes from? """
4116,279443012,"b'The simpler the code, the better. When you talk about impact you mean performance or are you worried about a change in behavior?'"
4116,279444878,"b""This makes me think that the Vector2 creation is not that expensive, but I'd be super happy if someone has some more info about what code ends up being generated.\r\n\r\n> Both value-type objects such as structs and reference-type objects such as classes are destroyed automatically, but value-type objects are destroyed when their containing context is destroyed, whereas reference-type objects are destroyed by the garbage collector at an unspecified time after the last reference to them is removed\r\n\r\nFrom https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/new-operator."""
4116,279455698,"b""> You're creating a new reference type\r\n\r\nAs far as I can tell Vector2 is a value type. Are you refering to a different type or am I missing something?\r\n\r\nRoughly, how many times per frame do you expect this setter to be called? Do you have a use case in mind where this code path would be specially hot?"""
4101,279697429,"b'>Interactions[i].PoseData = controllerPose [](start = 20, length = 41)\r\n\r\nWe seem to be storing just a rotation delta here. It should be a proper world space pose instead. The idea is to use that directly in the mouse pointer as ray cast origin.'"
4101,279698211,"b"">IMixedRealityMousePointer mousePointer = (IMixedRealityMousePointer)InputSource.Pointers[0]; [](start = 20, length = 92)\r\n\r\nControllers shouldn't know about pointers. We can configure mouse speed either through a profile for the mouse device manager or by consuming just mouse deltas in the mouse pointer and applying it there."""
4101,279700461,"b'>OnInputChanged [](start = 29, length = 14)\r\n\r\nControllerPoseSynchronizer is already doing this for us. '"
4101,279701134,"b'>Ray ray = new Ray(transform.position, transform.forward); [](start = 12, length = 57)\r\n\r\nAs far as I understand, the idea for pointers derived from controller pose synchronizer is that they will take the origin and direction from the pose reported by the controller. In that sense, here we should be using directly Position and Rotation * Vector3.forward for the ray.'"
4101,279702175,"b'>gameObject.transform.position [](start = 23, length = 29)\r\n\r\nBy overriding the base implementation here we are ignoring raycastOrigin. I think we could be better off having mouse pointer not derive from BaseControllerPointer / ControllerPoseSynchronizer.'"
4070,279788324,b'We should raise pre focus changed/focus changed regardless of the value of objectIsStillFocusedByOtherPointer'
4116,280109730,"b""> Could we format this test like the others above where we're also testing the return value?\r\n\r\nI find this formatting quite natural and clear. Can you paste the test formatted as you'd like to see it?\r\n\r\n"""
4136,281548790,b'It is. I found out the hard way: Dictionary will throw an exception if you try to remove a null key.'
4116,281593783,"b""What's the reasoning behid the proposed change?"""
4211,281636418,"b'>localJointPoses [](start = 35, length = 15)\r\n\r\nDocument what the local reference frame is'"
4211,281639213,"b'>for (int i = 0; i < jointCount; i++) [](start = 12, length = 36)\r\n\r\nCan we call InterpolateOffsets() instead?'"
4211,281654426,"b'>""ArticulatedHandPose.json"" [](start = 71, length = 26)\r\n\r\nExpose this as a public member so it can be configured?'"
4211,281655688,"b'>ReferenceJoint [](start = 32, length = 14)\r\n\r\nDocument what this is used for'"
4211,281658292,"b'>get { return (TrackedHandJoint)Array.FindIndex(jointNames, IsJointName); } [](start = 16, length = 74)\r\n\r\nTo help debugging versioning issues, log an error if FindIndex returns -1'"
4211,281659978,"b'I can\'t find anything better looking for ""Assets/""\r\n\r\n---\r\nIn reply to: [281623574](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/4211#discussion_r281623574) [](ancestors = 281623574)'"
4270,283752108,"b'>if (!Application.isPlaying) [](start = 20, length = 27)\r\n\r\nNo biggie and thanks for spotting it but this seems to fix a different bug. If that is the case I would have rather seeing this change in a separate PR and linking to its own bug.'"
4270,283755550,"b'>activateGazeKeywordIsSet = true [](start = 16, length = 31)\r\n\r\nWhat happens if we say select while the gaze pointer is active, does this not remain set and re-activates the pointer immediately after the next deactivation? We may want to set this only if the current state is inactive. '"
4270,283758830,"b'>FocusProvider?.OnSpeechKeywordRecognized(speechEventData); [](start = 12, length = 58)\r\n\r\nIt would be cleaner if our FocusProvider implementation received speech events registering as a global listener instead.'"
4360,284635236,"b""I don't have additional information there but I'd be very surprised if floating point operations in C# were implemented differently to C/C++ in this regard. If `value` is exactly zero, `newValue` should be too and compare as equal against `0f`. Does that address your concern?"""
4398,285649317,"b""The idea was that by making the gamepad emulate a six DOF controller we would get interaction with our UI components for free, as they already consume the pointer position and rotation. The alternative is to add logic where required to explicitly handle actions like rotate, scale or move based on deltas. That being said, the more I look at it the more I like the second option.\r\n\r\nThe PR doesn't seem ready for check in and I can't spend more time on it so I'll close it. Anyone is welcome to take over either resurrecting this or starting anew."""
4538,287286948,"b""Because I'm silly. Thanks!"""
4538,287287411,"b'That would be PR #4536 , which is not in yet.'"
4538,287296850,"b""A null check should be fine here as we know we're only dealing with pointers that are valid, i.e. registered with the focus provider."""
4538,287297190,b'Same point as above.'
4538,287298983,"b""Ideally, I would like to have a profile for the default selector with common configuration options. I have very limited time to work on this though, so for the time being I'm going to make DefaultPrimaryPointerSelector.Update virtual so you can implement that behavior easily yourself."""
4538,287299904,b'Added a bit more detail. Does that look good?'
4538,287300415,"b""It would be nice but I think we would get more value out of a play mode test. I'm quite pressed on time though so I'll leave that out of this PR if you don't mind."""
4475,287311199,"b""`MixedRealityInputAction` is a value type so we're safe there."""
4475,287314247,b'Good idea. Changes coming.'
4538,287393693,"b""We're caching pointers for more than one frame. We add them to the pointerInfo dictionary when they're registered with the focus provider and remove them when they're unregistered. """
4475,287995092,b'Have a look at the documentation of IMixedRealityBaseInputHandler and the implementation of OnGestureStartedWithAction() in MixedRealityInputSystem and let me know if that leaves you with any doubts.'
4592,288476178,"b'>UpdateRig [](start = 20, length = 9)\r\n\r\nFor simplicity, I would have just one method instead of having UpdateRig() being a public wrapper around CreateRig(). '"
4536,288518745,"b""Thanks for that feedback! I've created a new PR for an alternative approach where we have methods in the input system to subscribe and unsubscribe pointer handlers as global listeners: #4605 """
4604,288595386,"b'>PushSpaceSourceTransform.localPosition [](start = 41, length = 38)\r\n\r\nThis transform may come from another game object that has not awaken yet and that may modify its transform on Awake(). To make sure there are no initialization order issues, I think it is better to do this in Start(). There is a good write up about Awake vs Start here: [https://www.tangledrealitystudios.com/development-tips/awake-vs-start-vs-onenable-and-when-to-use-them/](https://www.tangledrealitystudios.com/development-tips/awake-vs-start-vs-onenable-and-when-to-use-them/). The general rule is: things that rely on other game objects are better done in Start(). '"
4605,288906268,"b""I don't think `foreach` generates GC here. We can go over it if you want. I think the general guideline should be the opposite: use `foreach` unless you know for a fact the loop is hot and `for` will make a significant difference in performance."""
4698,290678805,"b'>ref readonly Dictionary [](start = 15, length = 23)\r\n\r\nI think this should be IReadOnlyDictionary instead. Dictionary is a reference type (i.e. class) so a ref to a dictionary object is a ref to its address. I believe that what you are returning there in C++ terms is Dictionary* const, instead of Dictionary const *.'"
4698,290681903,"b""Actually, to be precise, I think `ref readonly Dictionary` translates to `Dictionary** const` in C++ and I don't think C# provides any way to have a `Dictionary const **` or `Dictionary const *` return type."""
4698,290683060,"b""I can see no option to approve with comments, so I'm approving it so it can be checked in once you do that change."""
4673,290699063,"b'>TouchEvent [](start = 11, length = 10)\r\n\r\nWhat about having TouchEvent contain HandTrackingInputEventData directly instead of TouchEventData?'"
4698,290727327,"b'Nth correction, I think `ref readonly Dictionary` translates to `Dictionary * const *` in C++.'"
4673,290734408,b'It would be cleaner to replace this loop with `focusingPointers.removeAll(..)`.'
4673,290742907,"b""If we get here `focusingPointers.Count` must be zero. I'd make `focusingPointers.Count > 0` an assert if you want. Same goes for the code in `OnFocusExit()`."""
4673,290756932,b'This is already set in SetInputUp()'
4673,290757251,b'This is already checked in OnInputDown()'
4673,290757524,b'Do we need to `SetPress(false)` twice?'
4673,290761692,b'I would make this readonly and clear it as needed instead of recreating it. Same for pressingInputSources.'
4673,290762735,"b'By convention, properties are named as the field backing them but with initial capital letter. In this case it should be `FocusingPointers`. Same for `Pressers` below.'"
4673,290765020,b'A bit more documentation here and maybe reflect in the naming that they are for 2D and 3D drag.'
4673,290766465,"b'If I read it correctly, this seems to imply that pressing a button in any controller focusing the interactable will reset any drag operation progress. Is that right?'"
4678,290792101,b'Is this not necessary anymore?'
4678,290800429,b'Better doc here'
4678,290804798,"b""To keep the interface simple, I would remove the versions that don't receive maxDistance. If we think it is a common use case to want to use the step length as max distance, we can implement that as an extension. See this for a reference: https://stackoverflow.com/a/2567204/3876392"""
4678,290805308,"b'About the methods names, I would rather shorten them to `Raycast()` and `SphereCast()`.'"
4678,290806532,"b""I'd rather call this `DefaultRaycastProvider` to make it clear this is the default implementation. """
4678,290807519,"b""Is this so we can do `(MixedRealityRaycastHit) aHitInfo`? I'd rather force users to cache the converted value by removing this operator, as it is a relatively expensive casting operation."""
4673,291117911,b'To avoid a new allocation each time.'
4673,291121188,b'pointerCount is not used anymore'
4673,291122763,"b""I meant that we shouldn't be passing the result of `focusPointers.Count > 0` here, we should be asserting that that is true instead."""
4678,291143195,"b""Add a bit more information to make it clear to implementers where this interface is used by MRTK. I'd at least mention that FocusProvider will use it to perform raycast and sphere cast queries for pointers."""
4716,291194815,b'Maybe HandlersPerType? #Resolved'
4716,291195813,"b""For simplicity, I'd rather a single RegisterHandler interface (no RegisterAllHandlers, at least in the interface) like this:\r\n`void RegisterHandler<T>(T handler) where T : IEventSystemHandler;` #Resolved"""
4716,291199903,"b""I like this better than making it asynchronous but in its current form it does not preserve execution order. E.g. if a handler gets added and then removed while handling this event, we won't produce the right result. I think we can fix that having a single list for add/remove. #Resolved"""
4716,291202923,"b""I think it would be simpler to register handlers only under the type passed in here instead of once for each interface under `IEventSystemHandler` and, when handling an event, traverse all registered types and invoke their handlers if they can be assigned to the specific type that we're handling. \r\n\r\nThat sounds more expensive than the current solution but I'd like to get an idea for how much before choosing the more complicated way. Could we maybe profile that in a release build?"""
4765,291975047,"b'Ideally, we should be able to do something like this all the time (no special casing):\r\n```\r\nRaycastCamera.transform.position = pointer.Position; \r\nRaycastCamera.transform.rotation = pointer.Rotation;\r\n```'"
4765,291975797,b'The pointer abstraction is most useful if we make the position and rotation in each implementation mean something similar so it can can be used in situations like this interchangeably.'
4765,292439779,"b'Very interesting point. It seems like it could make sense, in the future, differentiating between where the pointer _is_ and where the pointer _wants to be_. In the case of the poke pointer, the pointer would be considered to be on the surface of the UI element it is interacting with and would want to be where the finger tip is. We need to know where the pointer wants to be to drive things like push buttons.'"
4716,292951893,"b'What about:\r\n\r\n```\r\n<summary>\r\nRegisters the given handler as a global listener for all events handled via the T interface. T must be an interface type, not a class type, derived from IEventSystemHandler.\r\n</summary>\r\n<remarks>\r\nIf you want to register a single C# object as global handler for several event handling interfaces, you must call this function for each interface type.\r\n</remarks>\r\n``` #Resolved'"
4716,292956469,"b""I don't think we should be asserting here: we control what makes it into the handler list so if there is an invalid entry we should have detected it earlier. #Resolved"""
4716,292965276,"b""Won't we already be calling `func` for `handlerType` when iterating over the interfaces below? #Resolved"""
4716,292971039,b'`RegisterHandler` and `UnregisterHandler` for more clarity?'
4716,292985916,b'The remark seems a lot of detail for the class description. Maybe move it to one of the traverse functions. #Resolved'
4716,293748826,"b'""so they are kept""'"
4716,293751022,"b""To be more clear I'd say: \r\n\r\n> This sends the event to every component that implements the corresponding event handling interface,\r\n> regardless of whether it was the one registering the object as global listener or not.\r\n> We keep this behavior for backwards compatibility. Will be removed together with the `IMixedRealityEventSystem.Register(GameObject listener)` interface."""
4716,293758604,b'Need to check `postponedObjectActions.Count` too.'
4716,293760348,"b""I think we should consider an error to register a game object and a handler in one of its components, so I wouldn't add code to make it silently work. Instead I'd check as much as we can on registration, as Will was suggesting. """
4716,293760600,b'Document why we have two code paths here'
4942,294901873,"b'>/// <inheritdoc /> [](start = 8, length = 18)\r\n\r\nIs this inherited?'"
4942,294911467,"b'If this is not serialized, can we do this instead?\r\npublic LayerMask[] PokeLayerMasks { get; private set; }?'"
4942,295238939,b'If this is only used by the poke pointer I think it is better placed there.'
4942,295243517,"b""Speaking from total ignorance, making the touchable distance a pointer parameter instead of a setting per touchable seems like a breaking change. What's the motivation?"""
4942,295247533,b'It seems that with these changes all near interaction touchables must have a collider. Does it make sense to keep a separate ColliderNearInteractionTouchable class?'
4942,295248831,"b""Doesn't this require a collider component too? If we require Unity UI to be wrapped in a collider for near interaction, we need to make sure that doesn't affect far interactions (i.e. interactions via raycast-based pointers). """
4942,295345916,"b""I don't know the details but I know that `MixedRealityInputModule` translates our pointer events into the mouse pointer events that Unity UI understands (see `GetMousePointerEventDataForMrtkPointer()`). """
4538,295828639,b'Added!'
4538,295852607,"b""Good that you bring that up because we need to dispel that myth:\r\n\r\n![image](https://user-images.githubusercontent.com/47451126/59858522-096a6300-9373-11e9-8026-884846e7f3c1.png)\r\n\r\nLet's go over what happens in that [`foreach`](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/foreach-in):\r\n\r\n1. [`Dictionary<TKey,TValue>.GetEnumerator`](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.getenumerator?view=netframework-4.8) is called, which returns a [`Dictionary<TKey,TValue>.Enumerator`](Dictionary<TKey,TValue>.Enumerator) struct, so no allocation there.\r\n1. [`Dictionary<TKey,TValue>.Enumerator.MoveNext`](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.enumerator.movenext?view=netframework-4.8) is called to move to the first element.\r\n1. [`Dictionary<TKey,TValue>.Enumerator.Current`](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.enumerator.current?view=netframework-4.8) is called which returns a [`KeyValuePair<TKey,TValue>`](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.keyvaluepair-2?view=netframework-4.8) struct, again no allocation there.\r\n1. Goto #2 until MoveNext returns false.\r\n\r\nDoes that sounds alright to you? Where did you think those allocations could be coming from?"""
4970,295865655,b'> This collection is obsolete. Is replaced by ...'
4538,295878617,"b""Are you positive those were coming from a foreach? I'd like to have a look if so. At the moment I see DefaultPointerMediator.UpdatePointers() making extensive use of foreach but zero allocations."""
4970,295888930,"b""I'd rather not have this class and let users do like we do in DefaultPrimaryPointerSelector:\r\n```\r\n        public void Initialize()\r\n        {\r\n            IMixedRealityInputSystem inputSystem;\r\n            if (MixedRealityServiceRegistry.TryGetService<IMixedRealityInputSystem>(out inputSystem))\r\n            {\r\n                inputSystem.RegisterHandler<IMixedRealityPointerHandler>(this);\r\n            }\r\n        }\r\n```"""
4970,295890149,"b""I don't think it's worth having this utility. For me what the user gains is not worth the added maintenance burden."""
4970,296167578,b'I totally get that'
5036,297111495,"b'Unity has something for this, have a look at Vector3EqualityComparer here: https://docs.unity3d.com/2017.4/Documentation/Manual/PlaymodeTestFramework.html.'"
5064,297734793,b'Focus enter/left events are received only for the first pointer entering/last leaving.'
5055,297760292,b'As far as i can remember I ended up with that hierarchy as the simplest one that would allow me to use mirroring scale to instance the same prefab for each corner. '
5064,298069309,"b""I don't think it is worth using `FocusedObjectEventCatcher<>` here as we're counting events separately and there is not that much more to it."""
5064,298074635,"b""We should probably do a batch update of all tests when Lars's changes are in."""
5094,298190614,b'I think it is not too confusing to rely on the state being initialized to zero.'
4722,298993199,"b'>if [](start = 27, length = 2)\r\n\r\nNit: start comments with capital for consistency.'"
4722,298996831,"b'Documentation here to make life easier for people maintaining this test, please'"
4722,298998437,"b""Why do we need a custom wait instruction instead of just 'yield return null' to wait for one frame?"""
4722,298998949,b'Document at least the intent of the class'
4722,298999709,"b'Document the general test setup and workflow, e.g. test proxies are used to setup test cases and expected results, test below runs through them.'"
5162,299437906,b'Why do we need this?'
5162,299438979,"b'Hmm, did you perhaps hit an issue when subscribing to the event from code?'"
5120,299522155,"b'With the current implementation it seems that we can dispatch the same event up to three times to global event listeners. We should do that just once, at the beginning of the function. Same goes for `RaiseFocusChanged`.'"
5120,299555714,b'Can this be made private? Maybe also name it HandleFocusChangedEvent\r\n for added clarity'
5120,299556423,b'Make it private and name it HandleFocusEvent?'
5120,299558366,b'I find `focusReceiver` a confusing name when this is used to handle a FocusExit event. What about `eventTarget`?'
5162,299825520,"b""_UnityEvents are toxic_ is a very strong statement that moves us away from the most Unity-like way of handling events. I'd say we need more hard data before accepting that as a general guideline. I'd like to see what's the allocation footprint of a invoking a UnityEvent in a Master build, that's what I'd use as a reference."""
5162,300032025,"b""Thank you! Let me know how it goes. I'd be surprised if UnityEvent is doing something very unreasonable perf/allocation wise in Master builds."""
5224,301167161,b'We could downgrade this to just a note saying that those types of events should not be marked as used by global handlers.'
5224,301168524,"b""It'd be good to explain why this is preferred over the other one."""
5227,301447854,"b""For clarity, I'd call this `areHandlersRegistered`"""
5227,301448620,"b'Also, you should probably check this value in `OnDisable()` instead of checking `isFocusRequired`.'"
5259,302420730,b'+1 to that'
5261,302424263,"b""To make it more C#-like, I'd change this method into a read-only property, maybe called just `GrabPoint`."""
5358,304903676,"b""Wouldn't it be better to return `WaitForFixedUpdate` here?"""
5358,304904219,b'Can we have a single MoveTo method defaulting numSteps to `PlayModeTestUtilities.HandMoveStepsDefault`?'
3780,271620210,b'You mean `FormerlySerializedAs` ?'
3780,271622901,"b'Maybe add a warning ""This may impact performance""? Otherwise it is not clear why falling back to traditional rendering is a warning.'"
3780,271625341,"b""I am a bit confused. The [documentation](https://docs.unity3d.com/ScriptReference/Graphics.DrawMeshInstanced.html) for `Graphics.DrawMeshInstanced` says:\r\n> Meshes are **not further culled** by the view frustum or baked occluders, nor sorted for transparency or z efficiency.\r\n\r\nBut there are [many](https://forum.unity.com/threads/instancing-and-culling-make-it-stop.511374/) [posts](https://forum.unity.com/threads/graphics-drawmeshinstanced-and-culling-the-how-and-why.633508/) about culling being performed in practice. So this sounds like a bug. Is there a Unity but report for this? I couldn't find any.\r\n\r\nNote that for `DrawMeshInstancedIndirect` there is also some culling apparently, which you can work around via the `Bounds` parameter as described [here](https://answers.unity.com/questions/1349465/how-to-avoid-culling-when-instancing-object-via-dr.html) without having to change the mesh."""
3780,271629465,"b'`frameInfoMatricies` => ""Matrices"" without the second `i`?'"
3780,271632671,"b'My first reaction without context is ""Why don\'t you use `string.Format()`?"". Should we add a comment to explain the rationale of manual formatting?'"
3780,271634744,"b""Can we add some rationale on why we're disabling a performance check of this shader instead of fixing any potential warning emitted by the check?"""
3780,271835985,b'Thanks!'
6035,327290940,"b'i just copy/pasted the comment from the EditorSceneUtils version.\r\nThing is, there is a unity bug here, as SceneManager.sceneCount is supposed to only returned the loaded scenes, so we expect to have only scenes with isLoaded == true, which is not the case :p'"
6311,336352550,"b""what's the alternative ?\r\n\r\n1- (fast and easy) make DetachFromCurrentTrackedObject public or at least internal ?\r\n\r\n2- (slow but better?) add some events in HandJointService and refactor it so that we can detect when a hand gets detected/lost + register to those events in HandConstraint.\r\n\r\n3- other?"""
6311,339711610,b'what the plan ? does @Cameron-Micka handles the simplification ?\r\nshould i revert some commits here to only keep the events changes ?'
6311,340465738,"b'ok, no problem.\r\nfeel free to close this PR when yours is up.'"
6460,342430660,"b""naming startScale : i just copy/paste code from `ScaleOffsetColorTheme` ...\r\ni can change both to originalScale\r\n\r\nrotation : good point, it should be all or none\r\n\r\nbreaking : sure, it can have an impact for people that use the scale theme, on object that do not have a scale at (1,1,1). depending on the change, it will need to appear in the version updating guide.\r\n\r\n=> my point is that currently there are some theme that behave as relative changes, and other as absolute, and this need to be changed somehow to be more uniform and consistent.\r\ni vote for the 'relative' way ;)"""
6460,345608003,"b""@Troy-Ferrell said it wasn't necessary on the ScaleOffsetColor :p\r\ni can still add it but it would default to 'true'"""
6460,345630421,b'i added the possibility to add a tooltip to custom properties.'
6460,346977660,b'_The public keyword is not allowed on an explicit interface declaration_'
1021,142830822,b'Easier just to revert all changes'
1162,144957409,"b""Please revert. The Toolkit's version should be the latest updated and tests Unity version. Pre-2017.2 versions of Unity don't support full mixed reality development."""
1162,144963481,"b""I still disagree with this, but I'll revert so it doesn't become a blocker.  I wanna try to get the release out before the FCU launch."""
1240,147158489,"b""@StephenHodgson Not sure about updating the Project version again.  Perhaps we should also remove this file from the  repo.\r\n\r\nIn any case, this PR shouldn't include changing this file."""
1544,158106470,b'Please revert.'
1544,159781847,b'Please revert this file.'
1544,159806797,b'https://github.com/radicalad/MixedRealityToolkit-Unity/blob/MRDLSolver/ProjectSettings/ProjectVersion.txt - it looks fine to me?'
1718,168382908,b'Please revert editor version.'
1718,168429693,"b'Agreed, Editor version should stay at 2017.2 until 2017.3.x is approved for use'"
2488,205161604,b'revert.'
2775,217230165,b'Do we want this?'
2775,217379507,"b""Revert this for now. Granted most of us are using f2, but we didn't agree to update it in the project yet. Plus it's not part of this PR"""
2775,217440044,b'do we seriously need a special PR to rev to the latest 2018.1? I can see a wider discussion for moving to .3'
3986,275989470,b'I would probably leave this one as-is (or at least not downgrade the editor version).\r\n\r\nI need to chat with the others to see how this managed otherwise.'
3986,275989667,b'```suggestion\r\nm_EditorVersion: 2018.3.9f1\r\n```'
3986,275989760,b'I think it might be best to leave this as-is (or at least not turn back the editor version clock)'
3986,276028284,"b'Yeah sorry, that snug in :/'"
4107,289570154,b'Please revert'
4646,289593246,"b'Can we keep the Unity version to .9f1 please, for now? '"
4646,289955403,b'I pushed the fix to the memory leak problem. \r\nYes I can put the version at .9f1'
4646,290021239,b'version changed back to 9f1'
5876,320889988,b'Please revert this change. This prevents the project from opening in Unity 2018.4. We have customers that require that version.\r\n\r\nThanks!'
1611,160533106,b'Please revert this file.'
1611,160637855,"b""Was unsure why this changed, possibly unity it'self. But will revert this one\r\n"""
1636,162209316,"b""What's this value mapping to?"""
1636,162209962,b'Changing the quality from Fastest to Fantastic. Should be reverted as well'
1636,162335745,"b""I've no idea why these keep getting changed.  Will revert back to those in the dev working branch in a new PR."""
1636,162352236,b'Resolved in #1648'
2449,202844284,"b""Best to revert these .asset changes as they aren't part of this PR"""
2449,202856730,"b""I'll add this on it's own PR"""
2513,206638613,"b""What's this change?"""
2513,206640011,b'Cause I was testing on HoloLens it might have changed the quality to the lowest.'
2542,208054541,b'Did you intend to make this project settings change? It seems out of place in this PR.'
4646,289593253,b'Was this change to quality settings intentional?'
4646,289955552,b'no.'
4646,289957650,b'no it wasnt.'
4646,290021316,b'changed back to 5'
8183,456025883,b'this one too'
2116,189077207,"b'Not sure we should be adding anything to the tag manager manually. \r\n\r\nWhen people import this example, tags are generally not included.'"
2117,189077331,"b'Not sure we should be adding anything to the tag manager manually.\r\n\r\nWhen people import this example, tags are generally not included.'"
2117,189077534,"b""It'll probably be better to hard-code this in the example code."""
2116,189077618,"b""If that's the case, I guess developers have to manually add the layer? """
2116,189077726,"b'Indeed, or we can hard code it.'"
2116,189078303,"b""It's related to #1443 """
2117,189078917,"b""I didn't want to modify the code in SurfaceMeshesToPlanes.cs where it assigns dummy layer 31\r\n![2018-05-17 12_43_53-mrtk - microsoft visual studio](https://user-images.githubusercontent.com/13754172/40200015-082a65ea-59d0-11e8-88cd-4ce9757dbdf4.png)\r\n\r\nSolver Surface Magnetism script uses the layer through this drop down.\r\n![2018-05-17 12_42_19-unity 2017 2 1p2 64bit - spatialprocessingsurfacemagnetism unity - mrtk - univ](https://user-images.githubusercontent.com/13754172/40199932-cac9e52c-59cf-11e8-8286-3b8aa764d90f.png)\r\n"""
2117,189079249,b'It was just an example of how to implement a dialog to prompt devs to add the layer in their project.'
2117,189080036,"b'Sorry I just read #1443. In this case, I think we can use layer 31:Spatial Mapping and add instruction to use Configure > Apply Mixed Reality Project Settings.\r\nThank you!\r\n\r\n![2018-05-17 12_49_47-unity 2017 2 1p2 64bit - spatialprocessingsurfacemagnetism unity - mrtk - univ](https://user-images.githubusercontent.com/13754172/40200329-dc8cc4a4-59d0-11e8-8f23-05e0d06bdbbe.png)\r\n\r\n![2018-05-17 12_49_40-unity 2017 2 1p2 64bit - spatialprocessingsurfacemagnetism unity - mrtk - univ](https://user-images.githubusercontent.com/13754172/40200330-dca1a7fc-59d0-11e8-988c-9e0339ad3d71.png)\r\n'"
2116,189080102,"b'I just read #1443. In this case, I think we can use layer 31:Spatial Mapping and add instruction to use Configure > Apply Mixed Reality Project Settings.\r\nThank you!\r\n\r\n![2018-05-17 12_49_47-unity 2017 2 1p2 64bit - spatialprocessingsurfacemagnetism unity - mrtk - univ](https://user-images.githubusercontent.com/13754172/40200329-dc8cc4a4-59d0-11e8-8f23-05e0d06bdbbe.png)\r\n\r\n![2018-05-17 12_49_40-unity 2017 2 1p2 64bit - spatialprocessingsurfacemagnetism unity - mrtk - univ](https://user-images.githubusercontent.com/13754172/40200330-dca1a7fc-59d0-11e8-988c-9e0339ad3d71.png)\r\n'"
3148,240430151,b'```suggestion\r\n  - Spatial Awareness Surfaces\r\n```'
3148,240433435,"b'I gotta update this in a different place, but thanks for catching it!'"
3148,240752110,b'Please see earlier feedback re: limited user defined layers'
3148,240755266,b'link?'
3148,240775254,b'https://github.com/Microsoft/MixedRealityToolkit-Unity/pull/3148/files#r240744467'
2839,226742485,b'please revert'
4035,283940815,b'Were these changes intentional?'
5,58743925,b'Could you also please add a test in Tests folder? That really helps with avoiding regressions when others change code. Also a good way to show usage.\n'
21,61496672,"b""These links go to your forked repo (https://github.com/NeerajW/HoloToolkit-Unity), but should link to the main Microsoft repository (https://github.com/Microsoft/HoloToolkit-Unity).\n\nThere's a link below to the Wiki, pointing to yours as well.\n"""
21,61497046,b'Typo: CLick\n'
21,61497483,b'Typo: CLick\n'
21,61497649,b'Typo: Medum\n'
21,61498533,b'Fixed. Thanks for catching this.\n'
21,61498688,b'The Occlusion and Wireframe shaders have moved under SpatialMapping\n'
21,61498760,b'Fixed.\n'
31,62940614,b'Consider adding a comment for the Test you added\n'
118,70726648,"b'Please update the description for the Shader as well. Specially, the difference between Occlusion and WindowOcclusion.\n\nhttps://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/SpatialMapping/Shaders/Occlusion.shader \n'"
777,127296030,b'Just thought of this to address some feedback I got from folks.\r\nCould you please add a Unity link here so people know which installer to use exactly? Thanks!'
777,127296472,b'Great idea!'
813,130174916,"b'""Windows Mixed Reality Motion Controller support""'"
813,130174997,b'Separate feature packages as well as the complete toolkit?'
813,130175140,"b'""might not""\r\n\r\n""may not"" implies that you cannot be on a different release from master.'"
813,130175316,"b'""Windows Mixed Reality Motion Controller"" (throughout)'"
886,135924699,b'MixedRealityToolkit'
1162,144960226,b'I believe the released Fall Creators Update SDK is 16299.'
1162,144967770,b'Sorry I wrote the Version not the Build number.'
1162,144968152,"b'I mean line 48, where it says `10.0.16267.0`. That should be `10.0.16299.0`.'"
1162,144968794,"b'Ahhh, let me double check what version is in VS Installer'"
1162,144971177,b'Fixed \xf0\x9f\x98\x83 '
1178,145009508,b'I think the final `Build` link is supposed to be `Boundary`.'
1193,145489952,"b""This is an awesome addition, but I kinda wish all the images were the same size.\r\n\r\nIt's not big deal."""
1193,145492203,b'The images were as close as I could make them to the same size.  Will have another look'
1193,145493228,"b""It's not big deal.  we can skip this. """
1193,145530374,"b'typo?\r\n\r\n""Check out the changes from the Fall Creators Update""?'"
1193,145530694,b' # faceslap'
1193,145531000,b'# Hashtag Fail \xf0\x9f\x98\x9b '
1193,145536417,"b""This badge doesn't point to the Unity download properly.\r\n\r\nWe should probably make this go to the 2017.1.2 overview instead of downloading outright.\r\n"""
1246,147486252,b'We should keep this automatic badge updating URL in the README.'
1246,147488890,"b'Why is the [v1.2017.2.0](https://github.com/Microsoft/MixedRealityToolkit-Unity/releases/tag/v1.2017.2.0) release marked for use with Unity 2017.1.2? This should be v1.2017.1.3 instead (or v1.2017.1.2.1 if we really want that many numbers haha).\r\n\r\nv1.2017.2.0 should work with Unity 2017.2, per the [roadmap](https://github.com/Microsoft/MixedRealityToolkit-Unity#roadmaps).'"
1246,147490343,"b'We _should_ but for this instance of the release we want to point people to the ""WMR"" flavor for this once '"
1246,147490703,"b'True, but the HoloLens one should still point to the ""latest"", right? We could hard code it here and have the updating one be true for HoloLens.'"
1246,147490910,"b""Generally I try to keep the release tags as close to Unity's as possible.\r\n\r\nI actually had matching the release but had to backtrack when we found out that the latest 2017.2 is incompatible with HoloLens building using the later SDK targets."""
1246,147491342,b'Good point'
1246,147493603,b'Updated the HoloLens section to use the latest.'
2030,185588782,b'These should be relative links too'
2030,185646321,b'Updated'
2488,205209548,"b'This isn\'t a proper use of the word ""startup"". Used as a noun, it is a newly formed company or the initial phase of a process. There is no verb form; it would be properly replaced with the word ""started"".\r\n\r\nThis sentence is probably too verbose in both versions. ""To get started as quickly as possible"" is sufficient.'"
3477,258192859,b'This part looks like it gets caught in the note:\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/53041515-0b5dfd00-3439-11e9-845b-e9a0acf0790f.png)\r\n\r\nShould we remove it? Or I guess at least add another return to get it out of the scope of the `>`'
3477,258209146,"b""Does anyone know what these different | stubs are for? They don't hyperlink to anything so I would probably suggest removing them?"""
3477,258209527,"b""I'm down for that"""
7188,376532201,b'Updated placeable object label visibility control by adding listeners to two new events OnPlacingStarted and OnPlacingStopped and added null check.'
7188,376547374,b'Removed SA dependency and added new events'
7188,376547644,b'Removed SA dependency'
7188,376548306,b'`GameObjectToPlace` was removed so this line is now\r\n```\r\nSurfaceNormalOffset = gameObject.GetComponent<Collider>().bounds.extents.z;\r\n```'
7188,376548654,b'SA dependency was removed'
7188,376548767,b'Removed'
7188,376549338,b'Added two new events `OnPlacingStarted` and `OnPlacingStopped`'
7188,376549971,b'I removed the `GameObjectToPlace` property because the game object to place will always be the `gameObject` TapToPlace is attached to. '
7188,376568548,"b'`if (SolverHandler.TransformTarget != null)` was added for the case where `AutoStart` is true and the `TrackedTargetType` is not the head (i.e. Controller Ray or Hand Joint).  The head gaze ray is always present on application start, so there is not a case where it could be null.  \r\n\r\nUnlike the head gaze ray,  the controller ray or hand joints as a `TrackedTargetType` come in and out of tracking, which create potential for a null `TransformTarget` on Start.   For example, if we have an object with `AutoStart` enabled and the TrackedTargetType is controller ray,  but the controller ray is not tracking yet on Start, then we are trying to calculate where to place an object based on a null position.\r\n'"
7188,376572384,b'Yes this would disable other solvers on an object.  But is there a case where there would be two active solvers on one object? @wiwei '
7188,376666239,b'I do not think realtimeSinceStartup will be helpful in this case.  I am trying to catch an extra OnPointerClicked call so the placing state is not switched back immediately.  The issue is explained [here](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7188#discussion_r376031285)'
7188,376667326,"b'Whoops, that is not meant to be public.  Changing it to private and renaming.'"
7188,376667854,b'Moved'
7188,376668986,"b""Ah that's true, moved it into StartPlacement."""
7188,376671221,"b'I think there might be an issue in Unity, I explained that the value for the Ignore Raycast layer is set to 4 when it should be 2 over [here](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7188#discussion_r376067676).\r\n\r\nBut now when I added this,\r\n```\r\nIgnoreRaycastLayer = LayerMask.GetMask(""Ignore Raycast"");\r\n```\r\nI am getting the layer set to Water which is = 4\r\n![IgnoreRaycastError](https://user-images.githubusercontent.com/53493796/74075997-56ff1300-49ca-11ea-8455-b44a6e3aa6e2.gif)\r\n'"
7188,377831443,b'Deleted'
7188,377834919,"b'Ok, I agree that it is best to go with is selected and be consistent throughout the doc. '"
7188,377984585,"b'Updated comments to ""is selected"" instead of ""in the placing state""'"
7188,377985740,b'Comment updated'
7188,377986077,b'Fixed'
7188,377989550,b'Fixed'
7188,377989779,b'Fixed'
7188,377989819,b'Fixed'
7188,377991339,"b'This worked:\r\n```\r\nIgnoreRaycastLayer = LayerMask.NameToLayer(""Ignore Raycast"");\r\n```'"
7188,377991540,"b'This worked:\r\n```\r\nIgnoreRaycastLayer = LayerMask.NameToLayer(""Ignore Raycast"");\r\n```'"
7308,378547748,"b'```suggestion\r\nWhen using NuGet for Unity, applying MRTK configuration settings after switching the platform to UWP may generate an NU1101 error. This is due to an issue with MSBuild for Unity, where it is not correctly adding its package source.\r\n```'"
7188,378583681,"b'If the user tries to toggle `AutoStart` while in play mode, the change will not get registered because the action associated with `AutoStart` is called only in `Start()`.  I disabled it to remove the potential confusion if someone tried to toggle `AutoStart` while in play mode through the inspector only to see nothing happen.'"
7188,378583988,"b'The constant has been removed:\r\n```\r\nignoreRaycastLayer = LayerMask.NameToLayer(""Ignore Raycast"");\r\n```'"
7188,378584672,b'Updated'
7188,378585041,"b'Nope, that was left over from the move into start placement.  Removed.'"
7188,378586854,b'Comment removed.'
7188,379107177,b'I am going with LastTimeClicked. Renamed.'
7188,379125323,"b'Added this comment to clarify the edge case:\r\n```\r\n// Checking the amount of time passed between OnPointerClicked calls is handling the case when OnPointerClicked is called\r\n// twice after one click.  If OnPointerClicked is called twice after one click, the object will be selected and then immediatley\r\n// unselected. If OnPointerClicked calls are within 0.5 secs of each other, then return to prevent an immediate object state switch.\r\nif ((Time.time - LastTimeClicked) < doubleClickTimeout)\r\n{\r\n      return;\r\n}\r\n```'"
7188,379145389,"b'Yes, without a `Collider` Tap to Place will not work.  The message has been changed a debug assert.  \r\n```\r\nDebug.Assert(IsColliderPresent, ""The game object "" + gameObject.name + "" does not have a collider attached, please attach a collider to use Tap to Place"");\r\n```\r\nI could add a `RequireComponent` at the top but `Collider` is a base class for different collider components (Mesh, Capsule, Box, Sphere). '"
7188,379145913,b'Changed to 0.5.'
7188,379146118,b'Placing events have been moved into StartPlacement and StopPlacement.'
7188,379179210,b'Changed comment to method comment'
7188,379186664,"b""Added\r\n```\r\n// A global pointer handler is needed to enable object placement without the need for focus.\r\n// The object's layer is changed to IgnoreRaycast in this method, which means the game object cannot receive focus.\r\n// Without a global handler, the game object would not receive pointer events.\r\nCoreServices.InputSystem?.RegisterHandler<IMixedRealityPointerHandler>(this);\r\n```"""
7188,379186940,b'Events have been moved inside the Start/Stop placement methods'
7188,379190943,b'Fixed'
7188,379191578,"b'```\r\n        [SerializeField, FormerlySerializedAs(""OnPlacingStarted"")]\r\n        [Tooltip(""This event is triggered once when the game object to place is selected."")]\r\n        private UnityEvent onPlacingStarted = new UnityEvent();\r\n\r\n        /// <summary>\r\n        /// This event is triggered once when the game object to place is selected.\r\n        /// </summary>\r\n        public UnityEvent OnPlacingStarted\r\n        {\r\n            get => onPlacingStarted;\r\n            set => onPlacingStarted = value;\r\n        }\r\n\r\n        [SerializeField, FormerlySerializedAs(""OnPlacingStopped"")]\r\n        [Tooltip(""This event is triggered once when the game object to place is unselected, placed."")]\r\n        private UnityEvent onPlacingStopped = new UnityEvent();\r\n\r\n        /// <summary>\r\n        /// This event is triggered once when the game object to place is unselected, placed.\r\n        /// </summary>\r\n        public UnityEvent OnPlacingStopped\r\n        {\r\n            get => onPlacingStopped;\r\n            set => onPlacingStopped = value;\r\n        }\r\n```'"
7188,381566373,b'The capability has been added by changing the StartPlacement and StopPlacement methods to public.'
7188,381608858,b'The custom inspector has been removed.  This is what the inspector looks like now:\r\n![image](https://user-images.githubusercontent.com/53493796/74886393-e1ca0100-532c-11ea-8491-87cb86fd3395.png)\r\nI added a space between the inherited solver properties and the tap to place properties.\r\n\r\n\r\n'
7188,381609101,b'Addressed [here](https://github.com/microsoft/MixedRealityToolkit-Unity/pull/7188#discussion_r381608858)'
7188,381610242,"b'Tests will be added in another PR, but there will be a test with code configurability in mind.'"
7188,381613098,b'Ah calling StartPlacement twice in a row did cause an issue. An IsBeingPlaced check has been added to Start/StopPlacement to make sure nothing happens if there are multiple calls.'
7188,381619956,b'Just checked and it compiles.'
7188,381622998,b'It was useful for debugging but not needed.  It is only useful if there is a hit on a surface and `RotateAccordingToSurface` is true. I liked the visual feedback of drawing the normal of the surface hit on non-uniform surfaces.'
7188,382143158,b'I am going to keep it.'
7188,382185882,b'Fixed'
7188,382187355,b'Removed'
7188,382193159,b'Added\r\n```\r\n        /// <summary>\r\n        /// The current game object layer before it is temporarily switched to IgnoreRaycast while placing the game object.\r\n        /// </summary>\r\n        protected internal int GameObjectLayer { get; protected set; }\r\n```'
7188,382193297,b'Removed'
7188,382198669,"b'Grouped the Ray properties and added comment:\r\n```\r\n        // The current ray is based on the TrackedTargetType (Controller Ray, Head, Hand Joint).\r\n        // The following properties are updated each frame while the game object is selected to determine\r\n        // object placement if there is a hit on a surface.\r\n        protected RayStep CurrentRay;\r\n        protected bool DidHitSurface;\r\n        protected RaycastHit CurrentHit;\r\n```'"
7188,382205794,b'Units added.'
7188,382209705,b'Updated StartPlacement doc comment '
7188,382209875,b'Added'
7188,382824572,b'Yes it should be `Microsoft.MixedReality.Toolkit.Utilities.Solvers`.  I updated the namespace in #7371 '
7188,382824740,b'Added in #7371 '
7371,382854884,"b'Great suggestion, I added `AutoStart` to the code configurability test since the collider test also used `StartPlacement()`.'"
7412,384796019,b'added'
7412,384798483,b'Added'
7412,384798907,b'Added'
7412,384800100,b'Added'
7412,384800488,b'Added'
7412,384800559,b'Added'
7412,384800919,b'Added'
7412,384802567,b'Added'
7412,384803696,b'Added'
7412,384803784,b'added'
7412,384826936,b'added'
7412,384827425,b'I think I am going to keep it in there for now since this documentation is in the form of a tutorial and I like having all the information on one page.'
7529,391906395,b'I think it is CoreServices and not CoreSystems for the code examples.'
7577,397318837,b'It might be helpful to note that the keyboard does not work in editor or while remoting.'
7639,406851418,b'Yes that is an outline '
7639,406867651,"b'I originally had the LeapXRServiceProvider.cs as the detection file, but I changed the file to the Read Me as an attempt at creating a Leap Motion Remover menu item.  I used the read me because the removal of a txt file did not result in errors. I can change it back to a more leap specific file.'"
7639,406873797,b'The debugging is going to have the three scenarios \r\n1. Importing Leap if the MRTK source is cloned from the repo\r\n2. Importing Leap with the MRTK unity package into 2018.4\r\n3. Importing Leap with the MRTK unity package into 2019.3'
7639,406874598,"b'Yes, added the specific versions'"
7639,406880284,b'This issue has been filed in the leap repo here https://github.com/leapmotion/UnityModules/issues/1082\r\n\r\nAdded more details'
7639,406896612,b'Added'
7639,406921411,b'Added comment and more descriptive name'
7639,406927596,"b'The .cs check is not required, removed'"
7639,406940205,"b""Ah I see. Kurtis's suggestion has been added."""
7639,406950713,"b'Yes I am aware the configuration checks run on every compile which is why there are guards at the beginning of each method, but I will add a more efficient solution. '"
7639,406967847,"b'This section was following a pattern in the AssemblyDefinition file, I observed that the asmdef files are read only and need to be modified but the csc.rsp is has not been marked as read only.'"
7639,406973573,"b""The pathDifference var was missing in this line but Kurtis's suggestion to use the GUIDs instead of the path seems like a better solution in case leap changes file locations."""
7639,406979809,"b'The plan was to combine the two menu items into one, after the menu mentioned under TODO in the PR description was complete.'"
7639,407607857,"b'I went with a version of option 1. The nowarn warning numbers are stored, 618 and 649 are now additive instead of assuming what the csc file contains.'"
7639,407636174,b'This returns true when the define is added and if it was already added.  Added a more specific comment.'
7639,407640030,"b'Investigated using the GUIDs to retrieve paths and discovered that the leap GUIDs are not consistent.  Therefore, cannot reliably be used for path retrieval.\r\n\r\nAdded the missing pathDifference var.\r\n'"
7639,407642591,"b'My understanding from the unity documentation was to call refresh after any asset modifications.  After more testing, it looks like only 1 is needed after the entire configuration process is completed.'"
7639,407731105,"b'RecyclePointers works, and has been incorporated.'"
7639,407751386,"b'Yes I can, the leap AttachmentHand contains the joint poses for the current leap hand in frame. There is one AttachmentHand, either left or right, associated with a LeapMotionArticulatedHand. '"
7639,407753009,b'Comment updated '
7639,407755743,b'Fixed '
7639,408306787,b'Updated '
7639,408310504,b'Updated the DefaultControllerMappingProfile.asset'
7639,408345114,"b'Yes, this was a pattern found in SimulatedHand.  Caching the result of `Enum.GetValues(typeof(TrackedHandJoint))` also sounds better to me. '"
7639,408389984,b'Yes the max size is two and the left and right hands in attachmentHands are always at the same index.  Section has been updated.'
7639,408397355,b'The leap `Hand` can be cached in the LeapMotionArticulatedHand constructor.  Suggestion has been included. '
7639,408424392,b'Tested and serializedObject.Update() and serializedObject.ApplyModifiedProperties() are not needed to display the HelpBox warning.  Moved updates into the else.'
7639,408461625,b'I think a LeapMotionUtilities class is better too.  Added a new Utils class that checks if the core assets are in the project.'
7639,408512267,"b""Using the `Leap.Hand` `pinchStrength` was considered, but `isPinching` returns true for each finger and not just the index finger and the thumb.  Below is what is registered as a selection using Leap's `isPinching`.  \r\n\r\n![LeapMotionPinchDetector](https://user-images.githubusercontent.com/53493796/79283941-32159900-7e6e-11ea-9ada-a7eef7ca150c.gif)\r\n\r\nThe Air Tap/Pinch gesture in MRTK only takes the index finger and the thumb into consideration. \r\n\r\nAlso the `Leap.Hand` `grabStrength` is only 1 if all fingers are together, shown in the gif below:\r\n\r\n![LeapMotionGrabDetector](https://user-images.githubusercontent.com/53493796/79286125-7441d900-7e74-11ea-8de3-9763226a8699.gif)\r\n\r\nIn MRTK, the grab gesture does not require all fingers together.  A grab can be recognized with just the thumb and the index finger."""
7639,408512606,b'Removed the anon lambdas'
7639,408993681,"b'The Update method updates the states of both the left and the right hand.  While it is not valid for `OnHandDetected` and `OnHandDetectionLost` to be called in the same run on the same hand.  It is valid for `OnHandDetected` and `OnHandDetectionLost` to be called for different hands at the same time.  \r\n\r\nFor example, if you have the left hand in frame and then you move the left hand out of frame as you move the right hand in frame.  There is a possibility that the tracking state of both the left and the right hand can change in the same frame, the chances of that happening are narrow, but still possible.  '"
7639,409001065,b'Added else if for each hand'
7639,409162836,"b'I changed the metacarpals Array to a list to remove the Array.Finds, but indexOf is still needed in this case.  The metacarpals list is in a specific order and the index is needed because it maps each MRTK metacarpal joint to the correct metacarpal joint in the leap hand.  I also cannot use the int value of a metacarpal TrackedHandJoint because the value does not map to the Leap metacarpal joints.\r\n\r\n```\r\n        private MixedRealityPose GetMetacarpalPose(TrackedHandJoint metacarpalJoint)\r\n        {\r\n            int metacarpalIndex = metacarpals.IndexOf(metacarpalJoint);\r\n\r\n            // Get the pose of the metacarpal \r\n            Vector3 position = leapMotionMetacarpalHand.Fingers[metacarpalIndex].bones[0].PrevJoint.ToVector3();\r\n            Quaternion rotation = leapMotionMetacarpalHand.Fingers[metacarpalIndex].bones[0].Rotation.ToQuaternion();\r\n\r\n            return new MixedRealityPose(position, rotation);\r\n        }\r\n```'"
7639,409833281,"b'This guarantees that the hands will appear, in front and in view of the camera regardless of the camera starting position.  The offset is calculated relative to the camera position, so if the camera has moved then the hands will move with it.'"
7639,409833361,b'added'
7639,409833777,"b'whoops, this is not used after the refactor. Removing '"
7639,409835463,"b'They were marked protected in case someone decided to extend this class, but they can be marked private for now.'"
7639,409875127,"b'The leap `pinchDistance` can be used, as IsPinching uses the same distance measurements. \r\n\r\nIf we use greater than 0 as a grab, we might run into grab gestures getting triggered with a hand that is in a relaxed position (i.e. fingers not completely apart).  The `grabStrength` is usually always greater than 0.  '"
7639,409887403,"b""Adding leap specific types to the constructor is possible, but I would have to ifdef them out if the core assets are not in the project because they would be invalid.\xc2\xa0  It doesn't feel right modifying the constructor in this way and might lead to other issues.\r\n\r\nThe only elements I need from the device manager are the `AttachmentHands` and `LeapServiceProvider`.  The `AttachmentHands` and the `LeapServiceProvider` are added to the scene at runtime, I could do a `GameObject.Find`.  @keveleigh What do you think?"""
7639,410359007,b'Moved the leap joint conversion to another method and incorporated the suggestion.'
7639,410503301,b'Thanks Julia!\r\nAdded an additional threshold for determining the exit distance for IsPinching.'
7639,410505183,b'Step by step documentation for unity mrtk users #7685 will be linked here after it is complete.'
7639,411533554,b'Updated comment'
7639,411534072,"b""Added comment making sure that a test directory ends with '/'"""
7639,411534777,b'Moved leapCoreAssetsVersionNumber to the top of the file '
7639,411535273,b'Added suggestion'
7639,411538123,"b'Yes I agree, the pathDifference makes sure to handle that case. The comment has been reworded.'"
7639,411538285,b'Added suggestion'
7639,411539001,b'Added suggestion '
7639,411560306,b'Included destroying the gameObjects created (AttachmentHands and LeapServiceProvider) in `Disable()`'
7639,411572203,"b'Leap Motion does not support mobile platforms, so I think I will keep it the way it is for now.'"
7639,411746814,b'Summary tag removed'
7639,411754033,"b'Ok that makes sense,  I changed everything to private except the LeapServiceProvider.  I think the LeapServiceProvider should remain public as the minimum.'"
7639,411755006,b'Yep! Moved'
7714,413907751,b'added'
7714,413908415,"b'This was a simplification,  I realized that the `handDefinition.IsInPointingPose` could be simplified to just `IsInPointingPose` since I have ` IsInPointingPose => handDefinition.IsInPointingPose;` at the top of the file.\r\n'"
7176,413962226,b'We may need to add a guard for the Unity UI elements.  This will make sure to only add the Unity UI element to the scene if an MRTK canvas exists.  We can also add a MRTK canvas and the button together if a canvas does not exist.  '
7723,414079423,"b'We can mention it here, I added a note'"
7725,414195455,b'We should try to avoid the use of you/your [Documentation Guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/DocumentationGuide.html#writing-style)'
7176,414903851,"b'Yep!\r\nWhen a regular canvas is added to the scene, you can convert it to an MRTK canvas, which adds the CanvasUtility to the game object\r\n\r\n![image](https://user-images.githubusercontent.com/53493796/80262478-65141580-8642-11ea-9eaa-769d68884ffa.png)\r\n\r\nSo maybe we could search for a canvas with the canvas utility attached and if it exists then add the UnityUI element as a child of the canvas object\r\n\r\n![image](https://user-images.githubusercontent.com/53493796/80262548-9b519500-8642-11ea-9767-d5e96b205935.png)\r\n'"
7176,416760063,b'I like only loading the images (hosted on the docs site) if the toolbox is opened.  The unity generated images show the prefab turned around.  @cre8ivepark Do you know why the prefabs might show up turned around in the prefab preview?\r\n'
7176,418366559,"b'It might not be obvious to someone new, but maybe we can add how to create an MRTK canvas vs just a Unity UI canvas.\r\n```suggestion\r\n                            GUILayout.TextField(""These MRTK components require an MRTK Canvas Utility on one of the Unity UI Canvases in the scene.\\nNone were detected. Press refresh if you recently added any \\n To create a MRTK Canvas: GameObject > UI > Canvas, and under the Canvas component in the inspector, select Convert to MRTK Canvas."", CanvasWarningStyle);\r\n                        }\r\n```'"
7765,418762983,"b'Yes, it will fail because the paths do not exist'"
7766,418765569,"b'Yes, nothing will happen to the project if they do update the csc.  But if someone is using the 4.4.0 core assets then the step is required.'"
7766,418766511,b'The preference for 2019.3 comes from my experience adding and removing the leap core assets on both versions of Unity.  Specifically the removal of the leap core assets in 2018 require an extra unity restart.  But it can be removed.'
7766,418769684,b'Getting the leap hand by the controller name instead of handedness was done to intentionally exculde the input simulation hand.  \r\n\r\nThis is what happens when I use handedness instead of the controller name:\r\n\r\n![leapInputSimulation](https://user-images.githubusercontent.com/53493796/80847181-81283180-8bc3-11ea-8caf-6ff518756294.gif)\r\n\r\n\r\nBut handedness can be used instead of the name '
7766,418771909,"b'I changed ""go to step 3"" to ""go to the next step"".  Since I do not think I can link a step unless it is a title that starts with \'#\' character'"
7766,418773893,b'Changed to handedness'
7774,419661228,b'It looks like the new screenshots were taken with the unity dark theme.  I think we decided that we would use the light theme for the docs moving forward.'
7917,427655020,"b'I do not think we should add WSA to the configuration checker for only in editor usage. A UWP build is not supported for leap so if we kept WSA there, we would need to add guards to prevent a UWP build.   With the PR in its current state, a UWP build completes, when it should not. '"
7920,428178980,b'Yeah the distance remains constant because the values are a little mixed up\r\n\r\n![pressDistanceGif](https://user-images.githubusercontent.com/53493796/82476484-01cfa480-9a83-11ea-9065-d8af85757848.gif)\r\n'
7952,429436306,b'Were these values not used anywhere and that is why they were removed?'
7969,430579880,"b'```suggestion\r\nMRTK does not fully support profile swapping at runtime. This feature is being investigated for a future release. Please see issues [4289](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/4289), [5465](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5465) and [5466](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/5466) for more information.\r\n```'"
7969,430580578,"b'```suggestion\r\nThere is a [known issue](https://issuetracker.unity3d.com/issues/enabling-graphics-jobs-in-2019-dot-3-x-results-in-a-crash-or-nothing-rendering-on-hololens-2) in Unity 2019.3 that causes errors when selecting ARM as the build architecture in Visual Studio. The recommended work around is to build for ARM64. If that is not an option, please disable **Graphics Jobs** in **Edit** > **Project Settings** > **Player** > **Other Settings**. For more information see [Building and Deploying](BuildAndDeploy.md#unity-20193-and-hololens).\r\n```'"
7993,434255941,"b'I have highlighted a couple here but doc comments are useful for public properties, [mrtk coding guidelines](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers)'"
7993,434257144,"b'Public properties should be capitalized, also applies to the properties below, [naming guidelines mrtk](https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#naming-conventions)'"
7993,434258275,"b""It's best to avoid seemingly magic numbers, it's helpful to store the pre-calculated values in another var with a descriptive name."""
7993,437774181,"b'```suggestion\r\n## Using the RiggedHandVisualizer in your scene\r\nTo enable the use of rigged hand visualization, select the **MixedRealityToolkit** game object in the hierarchy and within the **Input** Configuration Profile navigate to\r\n\r\n**Controllers > Controller Visualization Settings > Global Left Hand Visualizer**  \r\n\r\n```'"
7993,437774676,"b'```suggestion\r\n# Rigged Hand Visualizer [Experimental]\r\n<img src=""../../../../../Documentation/Images/RiggedHandVisualizer/MRTK_RiggedHandVisualizer_Main.png"" width=""600px""  style=""display:inline;"">\r\n```'"
7993,438262210,b' I think our docs validation might be expecting a link to a file given that markdown syntax.\r\n```suggestion\r\n## Example scene\r\nYou can find and example in the **RiggedHandVisualizer** scene under:\r\n**MRTK/Examples/Experimental/RiggedHandVisualizer/Scenes/**\r\n```'
8059,440511620,b'Considered caching this property but decided not to in case the user changes the size of the object while they are placing it. '
8050,441004836,b'For my understanding and future reference: for and foreach are comparable but a foreach reverse is worse performance wise than a for reverse?'
8059,441116930,"b'@wiwei I understand the least surprise principle concern, but I think in this case it is necessary to connect `UseDefaultSurfaceNormalOffset` and `SurfaceNormalOffset` to minimize the probability of confusion.\r\n\r\nScenario 1:\r\nSomeone to sets the `SurfaceNormalOffset` to the exact value as default, which will set `UseDefaultSurfaceNormalOffset` to true without intention from the developer.\r\n  - In the scenario you described where a user is cycling through values for `SurfaceNormalOffset`, if they happen to land of the defalutSurfaceNormalOffset, `UseDefaultSurfaceNormalOffset` will be set to true, but this does not affect setting other values.  They will see that `UseDefaultSurfaceNormalOffset` is true for that frame, but then once they change the `SurfaceNormalOffset` again, `UseDefaultSurfaceNormalOffset` will go back to false.  Yes it would be confusing to see, but not as likely as scenario 2.\r\n\r\nScenario 2:\r\nSomeone sets the `SurfaceNormalOffset` while `UseDefaultSurfaceNormalOffset` is still true.  \r\n  - This is very likely because by default `UseDefaultSurfaceNormalOffset` is true.  I can see someone wondering why their new value for `SurfaceNormalOffset` is not getting applied, but what is happening is `UseDefaultSurfaceNormalOffset` is still true which overrides their new `SurfaceNormalOffset` value.  '"
8035,441124779,b'Quick VS tip\r\n\r\nYou can sort the using in VS with this:\r\n![image](https://user-images.githubusercontent.com/53493796/84825117-cbc80680-afd5-11ea-84e8-eb419aec0207.png)\r\n'
8059,441137797,"b""This is the difference between caching and not caching the defaultSurfaceNormalOffset. I think the scenario is not the most likely, but I think it's nice to have the auto adjustment if the size changes while placing.\r\n\r\n| Without Bounds Update | With Bounds Update |\r\n|----|----|\r\n| ![TapToPlaceBoundsNoUpdate](https://user-images.githubusercontent.com/53493796/84827088-cc15d100-afd8-11ea-8560-b221c384bb9c.gif)| ![TapToPlaceBoundsUpdate](https://user-images.githubusercontent.com/53493796/84827123-d637cf80-afd8-11ea-9347-455733b62b0a.gif) |\r\n\r\n\r\n"""
8060,441187074,b'nit: have the comments on another line above the code for readability and consistency with other tests'
8059,441688275,"b'Ok, I will separate the properties.  The original intention was to give control to `UseDefaultSurfaceNormalOffset` to determine whether or not `SurfaceNormalOffset` could be set, but now I see how this could cause confusion.'"
8059,441764028,"b'What are the thoughts on adding this warning?\r\n@jbienzms and @wiwei \r\n1. UseDefaultSurfaceNormalOffset is true by default and I can see someone adding the tap to place component via script, then try to modify the SurfaceNormalOffset and then wonder why their value is not getting applied.  This is not an issue via inspector because the SurfaceNormalOffset property is hidden until UseDefaultSurfaceNormalOffset is set to false.\r\n\r\n2. Although, I also see a case where someone already knows this information and is just setting initial properties to eventually toggle between the defaultSurfaceNormalOffset and their set SurfaceNormalOffset.  Then this message in the console would be unnecessary.'"
8019,442398785,b'Our guidelines advise to separate structs into separate files: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#public-classes-structs-and-enums-should-all-go-in-their-own-files'
8075,442546795,"b""There is a space which displays the link incorrectly \r\n\r\n```suggestion\r\nFor examples of existing tests that use this infrastructure, see MRTK's [PlayModeTests](https://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk_development/Assets/MRTK/Tests/PlayModeTests)\r\n\r\n```"""
8072,443703212,"b""Attempted a Standalone build and there are errors associated with the ObjectMeshObserver Provider:\r\n![image](https://user-images.githubusercontent.com/53493796/85315091-462dd600-b46f-11ea-91a7-5fd95b19060b.png)\r\n\r\n```\r\nAssets\\MRTK\\Providers\\ObjectMeshObserver\\RoomFileFormat\\RoomFileImporter.cs(6,32): error CS0234: The type or namespace name 'AssetImporters' does not exist in the namespace 'UnityEditor.Experimental' (are you missing an assembly reference?)\r\n\r\n```\r\n\r\n```\r\nAssets\\MRTK\\Providers\\ObjectMeshObserver\\SpatialObjectMeshObserverProfileInspector.cs(20,17): error CS0246: The type or namespace name 'SerializedProperty' could not be found (are you missing a using directive or an assembly reference?)\r\n```\r\nI'm using unity 2019.4"""
8072,445856897,b'@keveleigh mentioned `versionDefines` and `noEngineReferences` are new to Unity 2019.  Some of the asmdefs have these fields while others do not.  Do we want all of the asmdefs to align with Unity 2018 or 2019?\r\n\r\nWondering because I thought we were slowly moving away from 2018.'
8145,450335583,b'Is this considered a breaking change and if it is should we add it to the release notes?'
8151,452393633,b'There is no specific dependency on the XR pipeline in the Leap Data Provider.'
8151,452402801,"b'Yes, no Unity XR APIs are used.  Only refs to MRTK and the Leap Core Assets package.'"
8160,453120739,"b'If the hand pose changes to the palm facing you instead of up, then the safe zone could potentially be interpreted as floating in front of the palm instead of above.    Could add an extra note that this setting places the target object relative to palmJointPose.Up with an offset of safeZoneBuffer, might make things clearer.\r\n'"
8175,455184379,b'I think it would be useful to specifically call out that the Intro to MRTK talk is a step by step unity tutorial.  This will make it obvious that people can follow along and start at that video if they want to.  Maybe we can add a tutorials section?'
8175,455247996,b'Yes that would be great'
8179,455966619,"b'I think overriding a public property that a user could have intentionally set to false (AutoStart) could potentially be confusing.\r\n\r\nThe following two scenarios could happen:\r\n\r\n``tapToPlace.AutoStart = false``\r\n``tapToPlace.StartPlacement()``\r\nThis works, but AutoStart is overwritten to true in StartPlacement and the user did intentionally set it to false.\r\n\r\n``tapToPlace.StartPlacement()``\r\n``tapToPlace.AutoStart = false``\r\nHere the StartPlacement is unknowingly canceled out because AutoStart was set to false.  The user does not know that the timing of a StartPlacement call could set AutoStart to true when they specifically set it to false.\r\n\r\nInstead of potentially overriding the value of a public property without the user knowing, what if we added a new private property to cover the specific scenario that StartPlacement is called before TapToPlace.Start.  This could disconnect the timing of a StartPlacement call to the value of AutoStart.\r\n\r\n'"
8198,458412711,"b'This is extremely useful, tested out `DrawScriptableFoldout` for the interactable changes and it works great.'"
8204,459668836,"b'Renaming a public property is a breaking change that would need to be documented in the release notes.\r\n\r\nIt would also be useful to keep the public `SmoothingActive` included, mark it as Obsolete, and point to  `SmoothingFar`.  \r\n'"
8209,462462754,"b'This warning is printed with every foldout in the Scrolling Object Collection example scene because the PressableButtonHL2 does not use the mrtk standard shader, we might need to consider modifying the example scene if there is a possibility of unexpected behavior.\r\n\r\n```\r\nPressableButtonHoloLens2_32x96 (4) has a renderer that is not using Mixed Reality Toolkit/Standard. This will result in unexpected results with ScrollingObjectCollection\r\nUnityEngine.Debug:LogWarning(Object)\r\nMicrosoft.MixedReality.Toolkit.Experimental.Inspectors.ScrollingObjectCollectionInspector:OnInspectorGUI() (at Assets/MRTK/SDK/Experimental/Inspectors/ScrollingObjectCollection/ScrollingObjectCollectionInspector.cs:281)\r\nUnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)\r\n```\r\nRepro:\r\n![ScrollingObjExampleWarnings](https://user-images.githubusercontent.com/53493796/88831529-529b0200-d184-11ea-9e28-cabe7c5b5bf9.gif)\r\n'"
8258,466029694,b'Missing doc comment'
8259,466672830,b'The Leap name is present in the Oculus file'
8259,466672869,b'Same comment as above'
8259,466673067,b'Same comment as above '
8259,466673325,b'Same comment as above '
8259,466674774,b'Maybe we could add this method to FileUtilities for reuse?'
8259,466677725,b'Maybe we could add this one to FileUtilities also?'
8259,466683393,b'Reviewed PR too early'
8267,468756201,b'I remember that the preview version did have an impact on iOS testing.  \r\n\r\n@Kent1LG  Has the AR Foundation preview 7 version been tested on both Android and iOS?'
8280,468904702,"b'```suggestion\r\n            boundsControl.gameObject.SetActive(true);\r\n            yield return null;\r\n            \r\n            // refetch transforms\r\n            rigRoot = boundsControl.transform.Find(""rigRoot"").gameObject;\r\n```\r\nnit: spaces for consistency with the rest of the test'"
8280,468905355,"b'```suggestion\r\n            rotationHandleAxisZ = rigRoot.transform.Find(""midpoint_8"");\r\n            Assert.IsNotNull(rotationHandleAxisZ, ""rotation handle couldn\'t be found"");\r\n            \r\n            // check handle visibility\r\n            Assert.IsFalse(rotationHandleAxisX.gameObject.activeSelf, ""rotation handle x active"");\r\n```\r\n\r\nsame as above'"
8290,469584208,b'I added a new pic with a new name so I can delete the old picture '
8296,470281358,b'nit: add a region Obsolete Properties for consistency with the other files '
8296,470281420,b'We probably need a section in the release notes that explain the reason for the breaking changes.\r\n\r\nThe notes would be added here: https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/ReleaseNotes.html#breaking-changes\r\n'
8307,471654038,b'This script needs a `Microsoft.MixedReality.Toolkit` namespace '
8307,471656265,b'nit: missing license header\r\n```suggestion\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\nusing Microsoft.MixedReality.Toolkit.Input;\r\nusing Microsoft.MixedReality.Toolkit.Utilities;\r\n```'
8307,471656584,b'nit: missing license header\r\n```suggestion\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\xef\xbb\xbfusing System.Collections;\r\n```'
8307,471656805,b'nit:  missing doc comment for the class'
8313,472301267,b'nit: missing doc comments for the public properties here and below\r\nhttps://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html#function--method-summary-headers'
8313,472413647,b'Is the plan to switch to Stopwatch.GetTimestamp or keep DateTime.UtcNow?'
8313,472423311,b'It could be helpful to have some rotation to the controller initially to mirror the orientation of the controllers when they are held.  Maybe something like the gifs below?  It would be consistent with the initial orientation of the simulated hand.\r\n\r\n\r\n\r\n\r\n| Current| Slight Rotation|\r\n|---|---|\r\n| ![MotionController](https://user-images.githubusercontent.com/53493796/90555342-12f48400-e14c-11ea-8ab5-11a8e89f91e6.gif) | ![MotionControllerRotate](https://user-images.githubusercontent.com/53493796/90555362-17b93800-e14c-11ea-9157-bd173dd4854e.gif) |'
8259,473260871,b'This section is showing up like this in the rich diff\r\n![image](https://user-images.githubusercontent.com/53493796/90679621-45b67f00-e215-11ea-9864-23500a5f0cb7.png)\r\n\r\nI think something like this is the fix:\r\n```suggestion\r\n## Setting up the scene\r\n1. Create a new Unity scene or open a pre-existing scene like HandInteractionExamples\r\n1. Add MRTK to the scene by navigating to **Mixed Reality Toolkit** > **Add to Scene and Configure**\r\n```'
8259,473262887,b'A link to the **Build and deploy your project to Oculus Quest** section would be helpful here\r\n```suggestion\r\n        - Change your profile to DefaultXRSDKInputSystemProfile and go to [Build and deploy your project to Oculus Quest](OculusQuestMRTK.md#build-and-deploy-your-project-to-oculus-quest)\r\n```'
8259,473265334,"b'This section is also showing up odd, the tabs need to be removed '"
7027,365349345,"b'Trying that now out, thanks for the suggestion!'"
7027,365351775,"b'Alright that lgtm, thanks'"
8945,524537850,b'missing MSFT license header'
8945,524544066,b'added'
8945,525424690,"b'Feels a little odd to call a method which fills a global variable, but I think you had said there was some weirdness with returning the collection?'"
8945,525425058,b'```suggestion\r\n# This table defines MRTK package layout.\r\n```'
8945,525425374,b'```suggestion\r\n# The folders are relative to the RepoRoot.\r\n```'
8945,525426207,"b'```suggestion\r\n    Given a string, determine if it is a valid GUID\r\n```'"
8945,525426666,b'```suggestion\r\n#>\r\nfunction ExtractGuid {\r\n```'
8945,525519685,b'i was hitting trouble returning a hashtable.\r\n\r\nhappy to try again\r\n'
8945,525568537,b'looks like i was just doing something wrong before.... updating now'
8945,525642118,b'fixed'
5530,311257764,"b""![image](https://user-images.githubusercontent.com/3580640/62574456-6485e580-b84d-11e9-8e98-ea4f4af69aa5.png)\r\nDoesn't look like this line prints"""
5530,311304189,b'Oh my'
5632,313783719,b'Could you not make this a mandatory parameter?\r\n``` PowerShell\r\n[Parameter(Mandatory=$true)]\r\n[string]$Directory\r\n```'
5632,313958762,"b""Ah, didn't know, thanks for the pointer"""
5632,314080760,"b'Did you consider using [Select-String](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-6)?\r\n\r\nsomething like:\r\n\r\n```\r\n$matches = gci -r *.cs | sls -Pattern ""^using Boo\\.Lang;""\r\n\r\nif ( -not $matches -eq $null )\r\n{\r\n    Write-Output ""Issues found""\r\n    Write-Host $matches\r\n    exit 1;\r\n}\r\nelse {\r\n    Write-Output ""No issues found""\r\n    exit 0;\r\n}\r\n```\r\n\r\nYou could even be smarter and exit early.'"
5632,314119236,"b""I thought about doing something like this, but specifically:\r\n\r\n1) I think I'll want to check for multiple things, so having a system that gives different handlers the ability to check the same lines (without re-searching through each file) is valuable. Obviously I'm not using that capability right now so it's a bit weird for me to say this, but I plan on augmenting this in the future and would like to do a single pass per-file\r\n\r\n2) Exitting early isn't great because we should collect ALL issues at once, so that people can run the thing once and then get all of the problems, instead of finding one problem, fixing it, running it again, and so on."""
5756,316819352,b'Do we care about profiles in the examples folders?'
5756,316821305,"b""@Kurtis, I'd say no. """
5864,320486653,"b""```suggestion\r\n        but empty doccomments don't add value to code.\r\n```"""
6454,341704826,b'Woops'
6454,341707300,b'Also still woops'
7027,365245508,"b'Perhaps this entire ""else"" could be removed as it seems to do the same thing as the code above. The script could set $changedFiles to either the paths from the text file or from Get-ChildItem and then run the ForEach (line 380 above) in either case (just on a different set of entries in the changedFiles array).'"
7027,365248064,"b""Perhaps the file patterns make else more memory efficient but the check that matches file type to an extension is repeated in two places (times 2 scripts), so if an update is needed at any point it is easier to oversee this.\r\nAnyway, it's just a suggestion. :)"""
7027,365347802,"b""Ack - I'm going to add this to my list of things that I'll tackle coming up, but I'll opt to keep it out of this change. I feel like I've gotten this change what is a working state and there's a decent amount of testing that has to be reset if I change this stuff up.\r\n\r\nYour suggestion is a good one - next time I do another pass on this I can include the change."""
8590,491189137,b'I think this can be removed now'
8678,495169096,b'```suggestion\r\n# create build overhead associated with all of the stuff that happens before the actual code\r\n```'
7363,382167145,"b'Ah, I should move this up'"
6544,345249578,"b""The order in which the targets are built is different than in the CI template... which might be fine but I thought it's worth to point that out."""
6544,345390661,b'@andreiborodin suggested this ordering. I will work with him to ensure the CI template is appropriately updated.'
6622,347657448,b'Remove?'
6622,347658777,"b""i'd like to leave it in until we are sure we no longer need / want it"""
8151,451214933,"b'Are we able to use the Azure Pipelines npm task instead of needing downloading something from a URL in powershell?\r\n\r\nhttps://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/npm\r\n\r\nWe might even be able to use task-encoded registry info instead of the .npmrc files, which could help simplify the packaging step:\r\n\r\n>You can either commit a .npmrc file to your source code repository and set its path or select a registry from Azure Artifacts.'"
8151,451708617,"b""I'll look into that"""
8151,451797083,"b'For consistency with the nuget packaging script, i would like this one to behave similarly. i will check for a pre-installed node.js and only fetch the package if not found,'"
8151,451813344,b'added a check for a previously installed version. only download and unpack if not on the path'
8151,452542171,"b""Is this needed / will this work on the pipeline machines? I think we're able to just give the build service permissions to push to the feed\r\n\r\n![image](https://user-images.githubusercontent.com/3580640/87100432-42d17300-c201-11ea-8c42-34449b633c58.png)\r\n"""
8151,452546511,"b""Still feel slightly odd about not using the built-in task, and I'm not sure I care much about having consistency with a script that we're phasing out. Not blocking on this, but wanted to comment again!"""
8151,452560736,"b'i recall needing to do this step. worst case, it reports that it isnt needed :)'"
8165,454465050,b'Same general comment around Get-Location in this script as well (see:\r\n\r\nhttps://github.com/microsoft/MixedRealityToolkit-Unity/pull/8165/files#r454464718)'
8165,454465327,b'Is there significance to the ~ (i.e. wildcard?) '
8165,454466879,b'Nit: Can you expand on the comment to explain why it needs a custom step?'
8165,454466986,b'```suggestion\r\n        # are packaged in the examples package.\r\n\r\n```'
8165,454473559,b'I think this clause is already in the if statement above (so this line can be deleted)'
8165,454474366,"b""I haven't seen the Out-Null thing that often before - what happens if it is removed?"""
8165,454494706,"b""Unity ignores folders that end in `~`. They recommend that as the name of the samples folder so it doesn't try to get loaded by the editor when the package is imported, allowing the files inside to be imported as a sample to the Assets folder without duplicate scripts and clashing GUIDs."""
8165,457507326,b'sure'
8165,457507481,b'will double check'
8165,457508058,"b""i took it from an example. i'll remove and post the output\r\n"""
8165,457584116,b'sharp eyes! thanks!'
8165,457589911,b'fixed'
8165,457593943,b'silences messages like\r\n\r\n    Directory: C:\\handPhysUpm\\Assets\\MRTK\\Extensions\\HandPhysicsService\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\nd-----        7/20/2020  11:00 AM                Samples~'
8165,457594457,"b'granted, no one is likely to watch this output. I do prefer a cleaner log'"
8165,457623599,"b'added parameter to allow for specifying, if not present, it will be determined in the previous manner'"
8165,457665901,b'updated'
8216,461129176,b'Do we need auth for packing?'
8216,461131729,"b'1. Does this need to run in cmd vs staying in the existing Powershell process?\r\n1. Can it just call `$npmPath pack` directly, instead of spawning a new process?'"
8216,461134908,b'most likely :)'
8216,461134911,b'nope. good call. i will remove that part now'
8216,461135012,"b""i'll give it a try"""
8232,464665857,"b""Is this used for the build machine or for local runs?\r\n\r\nIn general I'm still averse to using CWD based things because they are not reliable."""
8232,464666550,b'it is for both. the build machine passes in the project root. the local runs can omit it'
8232,464666735,b'Actually... we should delete these lines that acquire nodejs in this location.\r\n\r\nWe should not be reaching out to external web dependencies in a build pipeline outside of the specific packages provided by the containers on that CI system.\r\n\r\nPlease delete lines 91 to 101'
8232,464667527,"b'the build pipeline does not use these, they are for the local runs. that said, i am happy to remove'"
8232,464667658,"b""Local runs would still assume that it's being run in a certain folder - still a weird dependency to have.\r\n\r\nIf you wanted to base this instead off the the location of the script itself (so that it works regardless of what folder you're in), that could be okay.\r\n\r\nThis would prevent you from using a script in a DIFFERENT repo from affecting the CWD version, but  Idon't know how often you want to do that anyway"""
8232,464669458,b'done'
8232,464686222,b'let me see what i can do \xf0\x9f\x98\x84 '
8232,464693320,b'removed that section. ProjectRoot is now required to be passed on the command line\r\n'
8232,465364575,"b'Do you know if Set-Location affects the current location even outside of script crashes/exits?\r\n\r\ni.e. if something above dies before we have a chance to call Set-Location to restore things, would we possibly hose all future scripts?'"
8232,465366704,"b'""-Version is a required flag and is missing""'"
8232,465367136,"b'(I think the ""Unknown"" is still somewhat ambiguous because it could have been provided but maybe it\'s not a known version number).\r\n\r\nIn general for things like this where the flag isn\'t provided, just saying ""X is required and hasn\'t been set, please set it dude"" is more explicit'"
8232,465367380,b'Are the quotes here necessary to force a more higher level data structure to its string representation?'
8232,465367663,"b'```suggestion\r\n    Are we creating official packages? If not, the version of the artifacts will be formatted as ""<$Version>-preview.<BuildNumber>"".\r\n\r\n```'"
8232,465368472,"b'I\'m a bit confused by this todo and the fact that we already have a packageName that is literally called extensions - it seems like this would be a stale todo.\r\n\r\nIf the intent is to say ""hey, here\'s is where you could add other scripts/handlers, then you could say add another elseif statement modelled after above.\r\n\r\nBut actually in that case I assume that we\'d get rid of some copy pasta because the only difference here are the script names and the package name (which we could do using a hashtable)'"
8232,465838413,"b'good question. i believe i crash will potentially impact other scripts. fortunately, as part of CI, it will fail the run and terminate.'"
8232,465838798,b'i will update the messages'
8232,465839207,b'they may have been left over from an earlier incarnation. will look into it'
8232,465839816,"b""it's a leftover note to remind me to add the section"""
8232,465859566,"b'What\'s the section that you\'re going to add here?\r\n\r\nThere is already a else if statement that literally says ""extensions"" and this comment says ""extensions"".\r\n\r\nReminders to self easily get lost (last example being the TODO that went in the release notes that went out). '"
8232,465864306,"b""I'll let this one be for now - you're right that this shouldn't end up having a real effect given how pipelines are currently setup.\r\n\r\nNevertheless, we should get rid of dependencies on current working going forward. Especially since we actually get ProjectRoot here... it seems like we could manipulate that."""
8232,465892423,"b'the current working folder is just to put the user back at their starting point, rather than a ""random"" location in their file system.\r\n\r\nthat is the sole use for this variable.'"
8232,465892902,b'doing this should protect any later scripts in the pipeline that presume a specific location'
8232,465974070,b'fixed'
8232,465974336,b'it has to be stored as a string.... i changed it to [string]$startPath = $(Get-Location)'
8232,465975971,"b""> What's the section that you're going to add here?\r\n\r\nThe one above.\r\n\r\nthis is now fixed"""
8232,466046374,b'fixed in all 3 scripts'
8306,470838713,"b'```suggestion\r\n    If omitted, this parameter defaults to true.\r\n\r\n```'"
8306,470839802,"b""$UseBuildNumber  instead of $useBuildNumber (here and below)\r\n\r\nPS is case insensitive in variable naming but that's super weird."""
8306,470840298,b'This might also work with [switch] to simplify having to pass a 0 or 1:\r\n\r\nhttps://stackoverflow.com/questions/5079413/how-to-pass-boolean-values-to-a-powershell-script-from-a-command-prompt/5079574#5079574'
8306,470840541,"b'```suggestion\r\n    throw ""Missing required parameter: -BuildNumber. This parameter is required when -UseBuildNumber is used.""\r\n\r\n```'"
8306,470857278,"b'i tested, passing 0 and 1 do work. i just like being explicit inside the script :)'"
8306,470857952,b'fixed'
8306,470886469,"b'I get that they do work - my statement here is that it\'s really unexpected given regular command line args.\r\n\r\ni.e. boolean args are usually --IsOfficial which means it\'s true, the absence == false.\r\n\r\nThat\'s why switch could be interesting to use.\r\n\r\nThis goes along with another change later which uses a string ""true"" instead of 0 or 1 and is inconsistent.\r\n\r\nLet\'s use switch unless that doesn\'t work.'"
8306,470896969,b'let me give that a shot'
8306,471628308,"b'using a switch arg now for whether or not to include the build number in the package version.\r\n\r\nthe remaining ""true"" / ""false"" checks are due to the reuse of the existing publishingEnabled pipeline parameter (string)'"
8306,471629314,b'Nice'
8780,502720848,b'Does it also delete the `Samples~` files? Does it need to?'
8780,502721143,"b'Nevermind, already handled on the previous lines :)'"
8786,503463505,"b""Nit: If we want to avoid numbering things, it would probably be easier to replace the numbers with bullet points so that we don't have to do highway exit ordering in the future"""
8348,474275787,b'I agree that these functions tend to be difficult to use and understand without reading the documentation. I am wondering if there is a way to make it more readable while maintaining the flexibility here (i.e. the user can set the states of the three buttons independently of each other). I thought about enums but was concerned about making things too verbose (e.g. imagine `MotionControllerState.IsSelectingAndIsGrabbingAndIsPressingMenu`) Maybe a struct is the way to go?'
8348,474846319,b'Thanks for the catch!'
8369,475880231,"b""Just want to confirm: you don't like the ident here right?"""
8370,475883703,b'Just want to make sure we really wish to remove these as they seem reasonable'
8370,475883990,"b""Just want to confirm: you don't like the ident here right?"""
8370,475884781,b'Do you mind explaining the change here?'
8348,476030299,b'Would you mind checking whether line 5 is the namespace you are looking for?'
8399,478702296,b'Totally agreed'
8402,478712342,b'Just double checking the change to startup behavior is intended.'
8411,479531745,"b""I agree WaitForSeconds can be problematic, and technically speaking the CI seems to pass even without that call. The reason I added that is when running the tests with editor open the animation seems to cause problems, which can be solved by the delay. I don't believe there is an easy way to disable the animation (i.e. smoothing) after looking at the code. The function calls are now removed and the CI still passed. I don't think having to wait shortly before pressing the button on a smoothed app bar is a bug, but it is not ideal in a test environment for sure."""
8348,480782596,b'Thanks for the catch! Just opened a PR to fix that.'
8441,481518736,b'Just want to double check that you intend to use Time.time vs Time.unscaledTime as the latter is used in several other places in the file.'
8464,483157848,"b""You're right! Just removed the call."""
8464,483159287,b'Agreed and changed!'
8464,483163827,"b'Before the changes in this PR the error between expected and actual values has already been around the default threshold 0.01, and with the PR the actual value is changed a little bit more - although the change new to this PR is very small but when coupled with the existing error introduced in the previous PRs the old threshold no longer works.'"
8464,485156333,b'Changed to taking a game object as parameter now.'
8443,485218991,b'I am wondering if the comment should be moved up to around line 10. Also not sure if we need these two overrides given they just call the base.'
8519,486477643,b'Nit: copypasta'
8443,486584903,b'Nit: It seems that these fields should be using PascalCase per https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/Contributing/CodingGuidelines.html'
8579,489725003,b'Thanks for the catch!'
8593,491245525,b'Is there any chance this line is a mistake?'
8592,491257415,b'```suggestion\r\n#else\r\n```'
8620,492410511,b'That was a mistake. Thanks for the catch!'
8666,494667701,"b'```suggestion\r\nIn some situations (e.g. when using the LeapMotion provider in the Unity Editor), it is possible for the CameraCache to re-create the MainCamera on shutdown. Please see [this issue](https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8459) for more information.\r\n```'"
8675,495156312,"b""For consistency maybe we don't need the (experimental) here? Some other experimental features like dialog and hand coach do not have that on their pages."""
8675,495157228,"b""I'm wondering if we should put the experimental elastic system down the list and group it with other experimental features. Also not sure if we should group the obsolete ones as well."""
8682,500601411,"b'Yes, the intent here is to ignore the CanInteract check. Please take a look at the new comment above that line and let me know if things are clearer now.'"
8773,502597639,b'Just want to make sure these changes are intended.'
8787,504188345,"b""The code here is saving the reference so that we don't need to look for the script later."""
8787,504191051,b'I thought about it as well but as far as I know Unity does not have a built in way of marking whether the Awake of a script has been called or not. I can use a bool to track it but was not sure whether that solution would be elegant enough.'
8787,505928447,"b'My understanding is that inputModule cannot be null there unless there is something wrong with other code that leads to that scenario, so I left out the null check.'"
8848,512261663,b'Do we need a separate null check for base cursor as I think it is also MonoBehaviour?'
8848,512271521,b'Ah I did not realize it is referencing the interface... In that case a separate null check will not properly check Unity null either so I think we can leave it as is.'
8787,513826481,"b'The cleanup time behavior of UI camera is currently different than the input module mainly because we expect the module to be in the scene when we start playing the scene but UI camera is always created by MRTK at start. As it is created by MRTK it may be logical to make it go away during the destroy process. We could take the other route, but it will take much time to fully retest the PR (all combinations of pipeline/hardware/remote vs on device etc.)'"
8853,513836581,"b""Unfortunately there isn't an interface for far pointers. I understand that any pointer that isn't a TeleportPointer or NearPointer is in the farInteractPointers collection, but I think it serves the purpose here, as the GGV pointers will be in this collection."""
8873,514582813,b'I do not think so as we are not doing serialization with GLTF objects at the moment.'
8873,515400723,b'I tried but noting came to mind (I even remember trying `FormerlySerializedAs` with no luck).'
8873,515432110,b'I have confirmed that it indeed works on HL2.'
8787,515441158,b'`activeProfile` is actually set before all the new services are set up so we have to leave the yield returns here for now.'
8905,518456216,"b'```suggestion\r\n        public static string GetOutputFilename(string baseName = ""InputAnimation"", bool appendTimestamp = true)\r\n```'"
8905,518457002,b'Seems that some of the usings here can be removed'
8905,518457636,b'Seems that some of the usings here can be removed'
8905,518457934,b'Please add a license header'
8905,518458287,b'Could you switch the header back to the newer version (i.e. the original one)?'
8905,518458360,b'```suggestion\r\n```'
8905,518458417,b'```suggestion\r\n```'
8905,518458651,b'`/// <summary>`'
8905,518460855,b'```suggestion\r\n```'
8905,518460995,b'```suggestion\r\n```'
8905,518461997,b'`/// <summary>`'
8905,518462035,b'`/// <summary>`'
8905,518463334,b'Could you elaborate on the change?'
8905,518464133,b'```suggestion\r\n```'
8905,518464258,b'```suggestion\r\n        // Arbitrarily large weight for representing a boolean value in float curves.\r\n```'
8905,518464645,"b'```suggestion\r\n        /// Find an index i in the sorted events list, such that events[i].time <= time < events[i+1].time.\r\n```'"
8905,518464980,b'```suggestion\r\n        /// 0 <= i < eventCount if a full interval could be found.\r\n```'
8905,518465603,b'`/// <summary>`'
8905,518465729,b'`/// <summary>`'
8905,518465958,b'`/// <summary>`'
8905,518466051,b'`/// <summary>`'
8905,518466140,b'`/// <summary>`'
8905,518466291,b'`/// <summary>`'
8905,518466588,"b'```suggestion\r\n        /// Find an index i in the sorted events list, such that events[i].time <= time < events[i+1].time.\r\n```'"
8905,518466979,b'```suggestion\r\n        /// 0 <= i < eventCount if a full interval could be found.\r\n```'
8873,520284241,b'Yes'
8873,520285087,b'The latter is the case.'
8923,520847878,"b'I have mixed feelings towards this option... On the one hand I think it should default to false, but defaulting to true will keep the current (though not necessarily preferable but at least not breaking) behavior.'"
8894,524564556,"b'I did not know that there would be a reason for someone to do that, so will remove the assertion.'"
8938,526522990,b'After an offline discussion with Kurtis I decided to make guid internal to `WindowsSceneUnderstandingObserver` and use id in the events and other places that external code have access to (main reason being the int-based id is deeply coupled with several observer related scripts including interface(s)). The int id is generated on line 876 of the `WindowsSceneUnderstandingObserver` class by calling `GetHashCode()` on the guid. The observer also keeps a dictionary to enable lookups from int id to guid.'
